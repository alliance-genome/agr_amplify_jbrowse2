middle\"\n          transform={`translate(${textXY}) rotate(${radToDeg(radians)})`}\n          style={{ fill: color }}\n        >\n          {text}\n          <title>{title || text}</title>\n        </text>\n      )\n    }\n    return (\n      <text\n        x={0}\n        y={0}\n        className={classes.rulerLabel}\n        textAnchor=\"end\"\n        dominantBaseline=\"middle\"\n        transform={`translate(${textXY}) rotate(${radToDeg(radians) + 180})`}\n        style={{ fill: color }}\n      >\n        {text}\n        <title>{title || text}</title>\n      </text>\n    )\n  }\n\n  // if you get here there is no room for the text at all\n  return null\n})\n\nconst RegionRulerArc = observer(function ({\n  model,\n  slice,\n  region,\n}: {\n  model: CircularViewModel\n  slice: Slice\n  region: SliceNonElidedRegion\n}) {\n  const theme = useTheme()\n  const { radiusPx } = model\n  const { endRadians, startRadians } = slice\n  const centerRadians = (endRadians + startRadians) / 2\n  const widthPx = (endRadians - startRadians) * radiusPx\n  const session = getSession(model)\n  let color\n  const assembly = session.assemblyManager.get(region.assemblyName)\n  if (assembly) {\n    color = assembly.getRefNameColor(region.refName)\n  }\n  if (color) {\n    try {\n      color = makeContrasting(color, theme.palette.background.paper)\n    } catch (error) {\n      color = theme.palette.text.primary\n    }\n  } else {\n    color = theme.palette.text.primary\n  }\n\n  // TODO: slice flipping\n  return (\n    <>\n      <RulerLabel\n        text={region.refName}\n        view={model}\n        maxWidthPx={widthPx}\n        radians={centerRadians}\n        radiusPx={radiusPx}\n        color={color}\n      />\n      <path\n        d={sliceArcPath(slice, radiusPx + 1, region.start, region.end)}\n        stroke={color}\n        strokeWidth={2}\n        fill=\"none\"\n      />\n    </>\n  )\n})\n\nexport default observer(function ({\n  model,\n  slice,\n}: {\n  model: CircularViewModel\n  slice: Slice\n}) {\n  if (slice.region.elided) {\n    return (\n      <ElisionRulerArc\n        key={assembleLocString(slice.region.regions[0])}\n        model={model}\n        region={slice.region}\n        slice={slice}\n      />\n    )\n  }\n  return (\n    <RegionRulerArc\n      key={assembleLocString(slice.region)}\n      region={slice.region}\n      model={model}\n      slice={slice}\n    />\n  )\n})\n","import React from 'react'\nimport { useTheme } from '@mui/material'\n\nexport default function SVGBackground({\n  width,\n  height,\n  shift,\n}: {\n  width: number\n  height: number\n  shift: number\n}) {\n  const theme = useTheme()\n  return (\n    <rect\n      width={width + shift * 2}\n      height={height}\n      fill={theme.palette.background.default}\n    />\n  )\n}\n","import React from 'react'\nimport { ThemeProvider } from '@mui/material'\nimport { renderToStaticMarkup } from 'react-dom/server'\nimport { when } from 'mobx'\nimport { getSession, radToDeg } from '@jbrowse/core/util'\nimport { createJBrowseTheme } from '@jbrowse/core/ui'\n\n// locals\nimport { ExportSvgOptions, CircularViewModel } from '../models/CircularView'\nimport SVGBackground from './SVGBackground'\nimport Ruler from '../components/Ruler'\n\ntype CGV = CircularViewModel\n\nexport async function renderToSvg(model: CGV, opts: ExportSvgOptions) {\n  await when(() => model.initialized)\n  const { themeName = 'default', Wrapper = ({ children }) => <>{children}</> } =\n    opts\n  const session = getSession(model)\n  const theme = session.allThemes?.()[themeName]\n  const { width, tracks, height } = model\n  const shift = 50\n  const displayResults = await Promise.all(\n    tracks.map(async track => {\n      const display = track.displays[0]\n      await when(() => (display.ready !== undefined ? display.ready : true))\n      return { track, result: await display.renderSvg({ ...opts, theme }) }\n    }),\n  )\n\n  const { staticSlices, offsetRadians, centerXY } = model\n  const deg = radToDeg(offsetRadians)\n\n  // the xlink namespace is used for rendering <image> tag\n  return renderToStaticMarkup(\n    <ThemeProvider theme={createJBrowseTheme(theme)}>\n      <Wrapper>\n        <svg\n          width={width}\n          height={height}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n          viewBox={[0, 0, width + shift * 2, height].toString()}\n        >\n          <SVGBackground width={width} height={height} shift={shift} />\n          <g transform={`translate(${centerXY}) rotate(${deg})`}>\n            {staticSlices.map((slice, i) => (\n              <Ruler key={i} model={model} slice={slice} />\n            ))}\n            {displayResults.map(({ result }, i) => (\n              <React.Fragment key={i}>{result}</React.Fragment>\n            ))}\n          </g>\n        </svg>\n      </Wrapper>\n    </ThemeProvider>,\n  )\n}\n"],"names":["useStyles","makeStyles","rulerLabel","fontSize","fontWeight","lineHeight","letterSpacing","sliceArcPath","slice","radiusPx","startBase","endBase","flipped","_ref","startXY","bpToXY","endXY","largeArc","Math","abs","bpPerRadian","PI","concat","_toConsumableArray","join","ElisionRulerArc","observer","_ref2","model","region","theme","useTheme","endRadians","startRadians","polarToCartesian","widthPx","centerRadians","regionCount","Number","regions","length","toLocaleString","_jsxs","_Fragment","children","_jsx","RulerLabel","text","view","maxWidthPx","radians","title","color","palette","primary","d","stroke","secondary","strokeWidth","strokeDasharray","fill","_ref3","classes","textXY","x","y","className","textAnchor","dominantBaseline","transform","radToDeg","style","offsetRadians","RegionRulerArc","_ref4","assembly","getSession","assemblyManager","get","assemblyName","getRefNameColor","refName","makeContrasting","background","paper","error","start","end","_ref5","elided","assembleLocString","SVGBackground","width","height","shift","default","renderToSvg","_x","_x2","_re{"version":3,"file":"static/js/3904.851ce018.chunk.js","mappings":"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","sources":["../../../plugins/circular-view/src/CircularView/components/Ruler.tsx","../../../plugins/circular-view/src/CircularView/svgcomponents/SVGBackground.tsx","../../../plugins/circular-view/src/CircularView/svgcomponents/SVGCircularView.tsx"],"sourcesContent":["import React from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  getSession,\n  polarToCartesian,\n  radToDeg,\n  assembleLocString,\n} from '@jbrowse/core/util'\nimport { makeContrasting } from '@jbrowse/core/util/color'\nimport { useTheme } from '@mui/material/styles'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport {\n  Slice,\n  SliceElidedRegion,\n  SliceNonElidedRegion,\n} from '../models/slices'\nimport { CircularViewModel } from '../models/CircularView'\n\nconst useStyles = makeStyles()({\n  rulerLabel: {\n    fontSize: '0.8rem',\n    fontWeight: 500,\n    lineHeight: 1.6,\n    letterSpacing: '0.0075em',\n  },\n})\n\nfunction sliceArcPath(\n  slice: Slice,\n  radiusPx: number,\n  startBase: number,\n  endBase: number,\n) {\n  // A rx ry x-axis-rotation large-arc-flag sweep-flag x y\n  if (slice.flipped) {\n    ;[startBase, endBase] = [endBase, startBase]\n  }\n  const startXY = slice.bpToXY(startBase, radiusPx)\n  const endXY = slice.bpToXY(endBase, radiusPx)\n  const largeArc =\n    Math.abs(endBase - startBase) / slice.bpPerRadian > Math.PI ? '1' : '0'\n  const sweepFlag = '1'\n  return [\n    'M',\n    ...startXY,\n    'A',\n    radiusPx,\n    radiusPx,\n    '0',\n    largeArc,\n    sweepFlag,\n    ...endXY,\n  ].join(' ')\n}\n\nconst ElisionRulerArc = observer(function ({\n  model,\n  slice,\n  region,\n}: {\n  model: CircularViewModel\n  slice: Slice\n  region: SliceElidedRegion\n}) {\n  const theme = useTheme()\n  const { radiusPx: modelRadiusPx } = model\n  const radiusPx = modelRadiusPx + 1\n  const { endRadians, startRadians } = slice\n  const startXY = polarToCartesian(radiusPx, startRadians)\n  const endXY = polarToCartesian(radiusPx, endRadians)\n  const widthPx = (endRadians - startRadians) * radiusPx\n  const largeArc = endRadians - startRadians > Math.PI ? '1' : '0'\n  // TODO: draw the elision\n  const centerRadians = (endRadians + startRadians) / 2\n  const regionCount = `[${Number(region.regions.length).toLocaleString()}]`\n  return (\n    <>\n      <RulerLabel\n        text={regionCount}\n        view={model}\n        maxWidthPx={widthPx}\n        radians={centerRadians}\n        radiusPx={radiusPx}\n        title={`${regionCount} more regions`}\n        color={theme.palette.text.primary}\n      />\n      <path\n        d={[\n          'M',\n          ...startXY,\n          'A',\n          radiusPx,\n          radiusPx,\n          '0',\n          largeArc,\n          '1',\n          ...endXY,\n        ].join(' ')}\n        stroke={theme.palette.text.secondary}\n        strokeWidth={2}\n        strokeDasharray=\"2,2\"\n        fill=\"none\"\n      />\n    </>\n  )\n})\n\nconst RulerLabel = observer(function ({\n  view,\n  text,\n  maxWidthPx,\n  radians,\n  radiusPx,\n  title,\n  color,\n}: {\n  view: CircularViewModel\n  text: string\n  maxWidthPx: number\n  radiusPx: number\n  radians: number\n  title?: string\n  color: string\n}) {\n  const { classes } = useStyles()\n  const textXY = polarToCartesian(radiusPx + 5, radians)\n  if (!text) {\n    return null\n  }\n\n  if (text.length * 6.5 < maxWidthPx) {\n    // text is rotated parallel to the ruler arc\n    return (\n      <text\n        x={0}\n        y={0}\n        className={classes.rulerLabel}\n        textAnchor=\"middle\"\n        dominantBaseline=\"baseline\"\n        transform={`translate(${textXY}) rotate(${radToDeg(radians) + 90})`}\n        style={{ fill: color }}\n      >\n        {text}\n        <title>{title || text}</title>\n      </text>\n    )\n  }\n  if (maxWidthPx > 4) {\n    // text is rotated perpendicular to the ruler arc\n    const overallRotation = radToDeg(radians + view.offsetRadians - Math.PI / 2)\n    if (overallRotation >= 180) {\n      return (\n        <text\n          x={0}\n          y={0}\n          className={classes.rulerLabel}\n          textAnchor=\"start\"\n          dominantBaseline=\"nderToSvg","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","opts","_session$allThemes","_opts$themeName","themeName","_opts$Wrapper","Wrapper","session","tracks","displayResults","staticSlices","centerXY","deg","wrap","_context2","prev","next","when","initialized","allThemes","call","Promise","all","map","_callee","track","display","_context","displays","undefined","ready","t0","renderSvg","_objectSpread","t1","sent","abrupt","result","stop","_x3","renderToStaticMarkup","ThemeProvider","createJBrowseTheme","xmlns","xmlnsXlink","viewBox","toString","i","Ruler","React"],"sourceRoot":""}