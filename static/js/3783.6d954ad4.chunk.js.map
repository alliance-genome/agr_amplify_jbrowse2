{"version":3,"file":"static/js/3783.6d954ad4.chunk.js","mappings":"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","sources":["../../../plugins/legacy-jbrowse/src/NCListAdapter/NCListFeature.ts","../../../plugins/legacy-jbrowse/src/NCListAdapter/NCListAdapter.ts"],"sourcesContent":["import {\n  Feature,\n  SimpleFeatureSerialized,\n} from '@jbrowse/core/util/simpleFeature'\n\nconst jb2ToJb1 = { refName: 'seq_id' }\n\nconst jb1ToJb2 = { seq_id: 'refName' }\n\n/**\n * wrapper to adapt nclist features to act like jbrowse 2 features\n */\nexport default class NCListFeature implements Feature {\n  private parentHandle?: Feature\n\n  private uniqueId: string\n\n  constructor(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private ncFeature: any,\n    parent?: Feature,\n    id?: string,\n  ) {\n    this.uniqueId = id || ncFeature.id()\n    this.parentHandle = parent\n  }\n\n  set(): void {\n    throw new Error('not implemented')\n  }\n\n  jb2TagToJb1Tag(tag: string): string {\n    // @ts-expect-error\n    const mapped = jb2ToJb1[tag] || tag\n    return mapped.toLowerCase()\n  }\n\n  jb1TagToJb2Tag(tag: string): string {\n    const t = tag.toLowerCase()\n    // @ts-expect-error\n    return jb1ToJb2[t] || t\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  get(attrName: string): any {\n    const attr = this.ncFeature.get(this.jb2TagToJb1Tag(attrName))\n    if (attr && attrName === 'subfeatures') {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return attr.map((subfeature: any) => new NCListFeature(subfeature, this))\n    }\n    return attr\n  }\n\n  /**\n   * Get an array listing which data keys are present in this feature.\n   */\n  tags(): string[] {\n    return this.ncFeature.tags().map((t: string) => this.jb1TagToJb2Tag(t))\n  }\n\n  /**\n   * Get the unique ID of this feature.\n   */\n  id(): string {\n    return this.uniqueId\n  }\n\n  /**\n   * Get this feature's parent feature, or undefined if none.\n   */\n  parent(): Feature | undefined {\n    return this.parentHandle\n  }\n\n  /**\n   * Get an array of child features, or undefined if none.\n   */\n  children(): Feature[] | undefined {\n    return this.get('subfeatures')\n  }\n\n  toJSON(): SimpleFeatureSerialized {\n    const data: SimpleFeatureSerialized = { uniqueId: this.id() }\n    this.ncFeature.tags().forEach((tag: string) => {\n      const mappedTag = this.jb1TagToJb2Tag(tag)\n      const value = this.ncFeature.get(tag)\n      if (mappedTag === 'subfeatures') {\n        data.subfeatures = (value || []).map((f: Feature) => {\n          // note: was new NCListFeature(f, `${this.id()}-${i}`, this).toJSON()\n          return new NCListFeature(f, this).toJSON()\n        })\n      } else {\n        data[mappedTag] = value\n      }\n    })\n    return data\n  }\n}\n","import NCListStore from '@gmod/nclist'\nimport { Region } from '@jbrowse/core/util/types'\nimport {\n  BaseFeatureDataAdapter,\n  BaseOptions,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport { checkAbortSignal } from '@jbrowse/core/util'\nimport { RemoteFile } from 'generic-filehandle'\nimport NCListFeature from './NCListFeature'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { getSubAdapterType } from '@jbrowse/core/data_adapters/dataAdapterCache'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\nexport default class NCListAdapter extends BaseFeatureDataAdapter {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private nclist: any\n\n  private configRefNames?: string[]\n\n  constructor(\n    config: AnyConfigurationModel,\n    getSubAdapter?: getSubAdapterType,\n    pluginManager?: PluginManager,\n  ) {\n    super(config, getSubAdapter, pluginManager)\n    const refNames = this.getConf('refNames')\n    const rootUrlTemplate = this.getConf('rootUrlTemplate')\n    this.configRefNames = refNames\n\n    this.nclist = new NCListStore({\n      baseUrl: '',\n      urlTemplate: rootUrlTemplate.uri,\n      readFile: (url: string) =>\n        new RemoteFile(\n          String(\n            rootUrlTemplate.baseUri\n              ? new URL(url, rootUrlTemplate.baseUri).toString()\n              : url,\n          ),\n        ).readFile(),\n    })\n  }\n\n  /**\n   * Fetch features for a certain region. Use getFeaturesInRegion() if you also\n   * want to verify that the store has features for the given reference sequence\n   * before fetching.\n   * @param region -\n   * @param opts - [signal] optional signalling object for aborting the fetch\n   * @returns Observable of Feature objects in the region\n   */\n  getFeatures(region: Region, opts: BaseOptions = {}) {\n    return ObservableCreate<Feature>(async observer => {\n      const { signal } = opts\n      for await (const feature of this.nclist.getFeatures(region, opts)) {\n        checkAbortSignal(signal)\n        observer.next(this.wrapFeature(feature))\n      }\n      observer.complete()\n    })\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  wrapFeature(ncFeature: any): NCListFeature {\n    return new NCListFeature(\n      ncFeature,\n      undefined,\n      `${this.id}-${ncFeature.id()}`,\n    )\n  }\n\n  async hasDataForRefName(refName: string) {\n    const root = await this.nclist.getDataRoot(refName)\n    return !!(root && root.stats && root.stats.featureCount)\n  }\n\n  /**\n   * NCList is unable to get list of ref names so returns empty\n   */\n  async getRefNames() {\n    return this.configRefNames || []\n  }\n\n  /**\n   * called to provide a hint that data tied to a certain region\n   * will not be needed for the foreseeable future and can be purged\n   * from caches, etc\n   */\n  freeResources() {}\n}\n"],"names":["jb2ToJb1","refName","jb1ToJb2","seq_id","NCListFeature","ncFeature","parent","id","_classCallCheck","parentHandle","uniqueId","this","_createClass","key","value","Error","tag","toLowerCase","t","attrName","_this","attr","get","jb2TagToJb1Tag","map","subfeature","_this2","tags","jb1TagToJb2Tag","_this3","data","forEach","mappedTag","subfeatures","f","toJSON","NCListAdapter","_BaseFeatureDataAdapt","_inherits","_super","_createSuper","config","getSubAdapter","pluginManager","call","nclist","configRefNames","refNames","getConf","rootUrlTemplate","NCListStore","baseUrl","urlTemplate","uri","readFile","url","RemoteFile","String","baseUri","URL","toString","region","opts","arguments","length","undefined","ObservableCreate","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","observer","signal","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","feature","wrap","_context","prev","next","_asyncIterator","getFeatures","sent","done","checkAbortSignal","wrapFeature","t0","return","finish","complete","stop","_x","apply","concat","_hasDataForRefName","_callee2","root","_context2","getDataRoot","abrupt","stats","featureCount","_x2","_getRefNames","_callee3","_context3","BaseFeatureDataAdapter"],"sourceRoot":""}