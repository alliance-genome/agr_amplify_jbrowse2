{"version":3,"file":"static/js/9087.3bd891a8.chunk.js","mappings":"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","sources":["../../../packages/core/BaseFeatureWidget/BaseFeatureDetail.tsx","../../../packages/core/rpc/remoteAbortSignals.ts","../../../packages/core/ui/AssemblySelector.tsx","../../../packages/core/ui/EditableTypography.tsx","../../../packages/core/ui/ErrorMessage.tsx","../../../packages/core/ui/FactoryResetDialog.tsx","../../../packages/core/ui/FileSelector/FileSelector.tsx","../../../packages/core/ui/FileSelector/index.ts","../../../packages/core/ui/Menu.tsx","../../../packages/core/ui/ResizeHandle.tsx","../../../packages/core/ui/SanitizedHTML.tsx","../../../packages/core/ui/theme.ts","../../../packages/core/ui/Logo.tsx","../../../packages/core/ui/App.tsx","../../../packages/core/ui/ReturnToImportFormDialog.tsx","../../../packages/core/ui/PrerenderedCanvas.tsx","../../../packages/core/ui/Tooltip.tsx","../../../packages/core/util/QuickLRU.js","../../../packages/core/util/aborting.ts","../../../packages/core/util/offscreenCanvas/Canvas2DContextShim/context.ts","../../../packages/core/util/offscreenCanvas/CanvasShim.ts","../../../packages/core/util/offscreenCanvas/ponyfill.ts","../../../packages/core/util/offscreenCanvas/types.ts","../../../packages/core/util/offscreenCanvas/index.tsx","../../../packages/core/util/types/index.ts","../../../packages/core/util/when.ts","../../../packages/core/PluginManager.ts","../../../packages/core/util/analytics.ts","../../../plugins/data-management/src/index.ts","corePlugins.ts","util.ts","sessionSharing.ts","ShareButton.tsx","AdminComponent.tsx","JBrowse.tsx","makeWorkerInstance.ts","../../../packages/core/assemblyManager/assembly.ts","../../../packages/core/assemblyManager/assemblyManager.ts","../../../packages/core/assemblyManager/assemblyConfigSchema.ts","../../../packages/core/rpc/configSchema.ts","../../../packages/core/rpc/BaseRpcDriver.ts","../../../packages/core/rpc/WebWorkerRpcDriver.ts","../../../packages/core/rpc/MainThreadRpcDriver.ts","../../../packages/core/rpc/RpcManager.ts","../../../packages/core/TextSearch/TextSearchManager.ts","jbrowseModel.ts","../../../packages/core/ui/SnackbarModel.ts","sessionModelFactory.ts","rootModel.ts","factoryReset.ts","../../../packages/core/PluginLoader.ts","SessionLoader.ts","Loader.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState } from 'react'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n  Divider,\n  Tooltip,\n  makeStyles,\n} from '@material-ui/core'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport { DataGrid } from '@mui/x-data-grid'\nimport { observer } from 'mobx-react'\nimport clsx from 'clsx'\nimport isObject from 'is-object'\nimport { IAnyStateTreeNode } from 'mobx-state-tree'\n\n// locals\nimport { getConf } from '../configuration'\nimport { measureText, getSession } from '../util'\nimport SanitizedHTML from '../ui/SanitizedHTML'\nimport SequenceFeatureDetails from './SequenceFeatureDetails'\nimport { BaseCardProps, BaseProps } from './types'\nimport { SimpleFeatureSerialized } from '../util/simpleFeature'\nimport { ellipses } from './util'\n\nconst MAX_FIELD_NAME_WIDTH = 170\n\n// these are always omitted as too detailed\nconst globalOmit = [\n  'length',\n  'position',\n  'subfeatures',\n  'uniqueId',\n  'exonFrames',\n  'parentId',\n  'thickStart',\n  'thickEnd',\n]\n\n// coreDetails are omitted in some circumstances\nconst coreDetails = [\n  'name',\n  'start',\n  'end',\n  'strand',\n  'refName',\n  'description',\n  'type',\n]\n\nexport const useStyles = makeStyles(theme => ({\n  expansionPanelDetails: {\n    display: 'block',\n    padding: theme.spacing(1),\n  },\n  expandIcon: {\n    color: '#FFFFFF',\n  },\n  field: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  fieldDescription: {\n    '&:hover': {\n      background: 'yellow',\n    },\n  },\n  fieldName: {\n    wordBreak: 'break-all',\n    minWidth: '90px',\n    borderBottom: '1px solid #0003',\n    background: theme.palette.grey[200],\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(0.5),\n  },\n  fieldValue: {\n    wordBreak: 'break-word',\n    maxHeight: 300,\n    padding: theme.spacing(0.5),\n    overflow: 'auto',\n  },\n  fieldSubvalue: {\n    wordBreak: 'break-word',\n    maxHeight: 300,\n    padding: theme.spacing(0.5),\n    background: theme.palette.grey[100],\n    border: `1px solid ${theme.palette.grey[300]}`,\n    boxSizing: 'border-box',\n    overflow: 'auto',\n  },\n}))\n\nexport function BaseCard({\n  children,\n  title,\n  defaultExpanded = true,\n}: BaseCardProps) {\n  const classes = useStyles()\n  const [expanded, setExpanded] = useState(defaultExpanded)\n  return (\n    <Accordion\n      expanded={expanded}\n      onChange={() => setExpanded(s => !s)}\n      TransitionProps={{ unmountOnExit: true }}\n    >\n      <AccordionSummary\n        expandIcon={<ExpandMore className={classes.expandIcon} />}\n      >\n        <Typography variant=\"button\"> {title}</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.expansionPanelDetails}>\n        {children}\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n\nexport const FieldName = ({\n  description,\n  name,\n  prefix = [],\n  width,\n}: {\n  description?: React.ReactNode\n  name: string\n  prefix?: string[]\n  width?: number\n}) => {\n  const classes = useStyles()\n  const val = [...prefix, name].join('.')\n  return description ? (\n    <Tooltip title={description} placement=\"left\">\n      <div className={clsx(classes.fieldDescription, classes.fieldName)}>\n        {val}\n      </div>\n    </Tooltip>\n  ) : (\n    <div className={classes.fieldName} style={{ width: width }}>\n      {val}\n    </div>\n  )\n}\n\nexport const BasicValue = ({ value }: { value: string | React.ReactNode }) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.fieldValue}>\n      {React.isValidElement(value) ? (\n        value\n      ) : (\n        <SanitizedHTML\n          html={isObject(value) ? JSON.stringify(value) : String(value)}\n        />\n      )}\n    </div>\n  )\n}\n\nexport const SimpleValue = ({\n  name,\n  value,\n  description,\n  prefix,\n  width,\n}: {\n  description?: React.ReactNode\n  name: string\n  value: any\n  prefix?: string[]\n  width?: number\n}) => {\n  const classes = useStyles()\n  return value !== null && value !== undefined ? (\n    <div className={classes.field}>\n      <FieldName\n        prefix={prefix}\n        description={description}\n        name={name}\n        width={width}\n      />\n      <BasicValue value={value} />\n    </div>\n  ) : null\n}\n\nconst ArrayValue = ({\n  name,\n  value,\n  description,\n  prefix = [],\n}: {\n  description?: React.ReactNode\n  name: string\n  value: any[]\n  prefix?: string[]\n}) => {\n  const classes = useStyles()\n  return (\n    <>\n      {value.length === 1 ? (\n        isObject(value[0]) ? (\n          <Attributes attributes={value[0]} prefix={[...prefix, name]} />\n        ) : (\n          <div className={classes.field}>\n            <FieldName prefix={prefix} description={description} name={name} />\n            <BasicValue value={value[0]} />\n          </div>\n        )\n      ) : value.every(val => isObject(val)) ? (\n        value.map((val, i) => (\n          <Attributes\n            key={JSON.stringify(val) + '-' + i}\n            attributes={val}\n            prefix={[...prefix, name + '-' + i]}\n          />\n        ))\n      ) : (\n        <div className={classes.field}>\n          <FieldName prefix={prefix} description={description} name={name} />\n          {value.map((val, i) => (\n            <div\n              key={JSON.stringify(val) + '-' + i}\n              className={classes.fieldSubvalue}\n            >\n              <BasicValue value={val} />\n            </div>\n          ))}\n        </div>\n      )}\n    </>\n  )\n}\n\nfunction CoreDetails(props: BaseProps) {\n  const { feature } = props\n  const { refName, start, end, strand } = feature as SimpleFeatureSerialized & {\n    start: number\n    end: number\n    strand: number\n    refName: string\n  }\n  const strandMap: Record<string, string> = {\n    '-1': '-',\n    '0': '',\n    '1': '+',\n  }\n  const strandStr = strandMap[strand as number] ? `(${strandMap[strand]})` : ''\n  const displayStart = (start + 1).toLocaleString('en-US')\n  const displayEnd = end.toLocaleString('en-US')\n  const displayRef = refName ? `${refName}:` : ''\n  const displayedDetails: Record<string, any> = {\n    ...feature,\n    length: (end - start).toLocaleString('en-US'),\n    position: `${displayRef}${displayStart}..${displayEnd} ${strandStr}`,\n  }\n\n  const coreRenderedDetails = [\n    'Position',\n    'Description',\n    'Name',\n    'Length',\n    'Type',\n  ]\n  return (\n    <>\n      {coreRenderedDetails\n        .map(key => [key, displayedDetails[key.toLowerCase()]])\n        .filter(([, value]) => value !== null && value !== undefined)\n        .map(([key, value]) => (\n          <SimpleValue key={key} name={key} value={value} />\n        ))}\n    </>\n  )\n}\n\nexport const BaseCoreDetails = (props: BaseProps) => {\n  return (\n    <BaseCard {...props} title=\"Primary data\">\n      <CoreDetails {...props} />\n    </BaseCard>\n  )\n}\n\ninterface AttributeProps {\n  attributes: Record<string, any>\n  omit?: string[]\n  formatter?: (val: unknown, key: string) => React.ReactElement\n  descriptions?: Record<string, React.ReactNode>\n  prefix?: string[]\n}\n\nconst DataGridDetails = ({\n  value,\n  prefix,\n  name,\n}: {\n  name: string\n  prefix?: string[]\n  value: Record<string, any>\n}) => {\n  const keys = Object.keys(value[0]).sort()\n  const unionKeys = new Set(keys)\n  value.forEach((val: any) => Object.keys(val).forEach(k => unionKeys.add(k)))\n  if (unionKeys.size < keys.length + 5) {\n    // avoids key 'id' from being used in row data\n    const rows = Object.entries(value).map(([k, val]) => {\n      const { id, ...rest } = val\n      return {\n        id: k, // used by material UI\n        identifier: id, // renamed from id to identifier\n        ...rest,\n      }\n    })\n\n    // avoids key 'id' from being used in column names, and tries\n    // to make it at the start of the colNames array\n    let colNames\n    if (unionKeys.has('id')) {\n      unionKeys.delete('id')\n      colNames = ['identifier', ...unionKeys]\n    } else {\n      colNames = [...unionKeys]\n    }\n\n    const columns = colNames.map(val => ({\n      field: val,\n      width: Math.max(\n        ...rows.map(row => {\n          const result = String(row[val])\n          return Math.min(Math.max(measureText(result, 14) + 50, 80), 1000)\n        }),\n      ),\n    }))\n\n    // disableSelection on click helps avoid\n    // https://github.com/mui-org/material-ui-x/issues/1197\n    return (\n      <>\n        <FieldName prefix={prefix} name={name} />\n        <div\n          style={{\n            height:\n              Math.min(rows.length, 100) * 20 +\n              50 +\n              (rows.length < 100 ? 0 : 50),\n            width: '100%',\n          }}\n        >\n          <DataGrid\n            disableSelectionOnClick\n            rowHeight={20}\n            headerHeight={25}\n            rows={rows}\n            rowsPerPageOptions={[]}\n            hideFooterRowCount\n            hideFooterSelectedRowCount\n            columns={columns}\n            hideFooter={rows.length < 100}\n          />\n        </div>\n      </>\n    )\n  }\n  return null\n}\n\n// arr = ['a','b'], obj = {a:{b:'hello}}, returns hello (with special addition to grab description also)\nfunction accessNested(arr: string[], obj: Record<string, any> = {}) {\n  arr.forEach(elt => {\n    if (obj) {\n      obj = obj[elt]\n    }\n  })\n  return typeof obj === 'string'\n    ? obj\n    : typeof obj?.Description === 'string'\n    ? obj.Description\n    : undefined\n}\n\nfunction generateMaxWidth(array: any, prefix: any) {\n  // @ts-ignore\n  const arr = []\n  array.forEach((key: any, value: any) => {\n    const val = [...prefix, key[0]].join('.')\n    arr.push(measureText(val, 12))\n  })\n\n  // @ts-ignore\n  return Math.ceil(Math.max(...arr)) + 10\n}\n\nexport const Attributes: React.FunctionComponent<AttributeProps> = props => {\n  const {\n    attributes,\n    omit = [],\n    descriptions,\n    formatter = val => val,\n    prefix = [],\n  } = props\n  const omits = [...omit, ...globalOmit]\n\n  const maxLabelWidth = generateMaxWidth(\n    Object.entries(attributes).filter(\n      ([k, v]) => v !== undefined && !omits.includes(k),\n    ),\n    prefix,\n  )\n\n  const labelWidth =\n    maxLabelWidth <= MAX_FIELD_NAME_WIDTH ? maxLabelWidth : MAX_FIELD_NAME_WIDTH\n\n  return (\n    <>\n      {Object.entries(attributes)\n        .filter(([k, v]) => v !== undefined && !omits.includes(k))\n        .map(([key, value]) => {\n          if (\n            Array.isArray(value) &&\n            value.length > 2 &&\n            value.every(val => isObject(val))\n          ) {\n            return (\n              <DataGridDetails\n                key={key}\n                prefix={prefix}\n                name={key}\n                value={value}\n              />\n            )\n          }\n\n          const description = accessNested([...prefix, key], descriptions)\n          if (Array.isArray(value)) {\n            return (\n              <ArrayValue\n                key={key}\n                name={key}\n                value={value}\n                description={description}\n                prefix={prefix}\n              />\n            )\n          }\n\n          if (isObject(value)) {\n            return (\n              <Attributes\n                omit={omits}\n                key={key}\n                attributes={value}\n                descriptions={descriptions}\n                prefix={[...prefix, key]}\n              />\n            )\n          }\n\n          return (\n            <SimpleValue\n              key={key}\n              name={key}\n              value={formatter(value, key)}\n              description={description}\n              prefix={prefix}\n              width={labelWidth}\n            />\n          )\n        })}\n    </>\n  )\n}\n\nexport const BaseAttributes = (props: BaseProps) => {\n  const { feature } = props\n  return (\n    <BaseCard {...props} title=\"Attributes\">\n      <Attributes {...props} attributes={feature} />\n    </BaseCard>\n  )\n}\n\nexport interface BaseInputProps extends BaseCardProps {\n  omit?: string[]\n  model: any\n  descriptions?: Record<string, React.ReactNode>\n  formatter?: (val: unknown, key: string) => React.ReactElement\n}\n\nfunction isEmpty(obj: Record<string, unknown>) {\n  return Object.keys(obj).length === 0\n}\n\nexport const FeatureDetails = (props: {\n  model: IAnyStateTreeNode\n  feature: SimpleFeatureSerialized & { name?: string; id?: string }\n  depth?: number\n  omit?: string[]\n  formatter?: (val: unknown, key: string) => React.ReactElement\n}) => {\n  const { omit = [], model, feature, depth = 0 } = props\n  const { name = '', id = '', type = '', subfeatures } = feature\n  const session = getSession(model)\n  const defaultSeqTypes = ['mRNA', 'transcript']\n  const sequenceTypes =\n    getConf(session, ['featureDetails', 'sequenceTypes']) || defaultSeqTypes\n\n  return (\n    <BaseCard title={[ellipses(name || id), type].filter(f => !!f).join(' - ')}>\n      <Typography>Core details</Typography>\n      <CoreDetails {...props} />\n      <Divider />\n      <Typography>Attributes</Typography>\n      <Attributes\n        attributes={feature}\n        {...props}\n        omit={[...omit, ...coreDetails]}\n      />\n\n      {sequenceTypes.includes(feature.type) ? (\n        <ErrorBoundary\n          FallbackComponent={({ error }) => (\n            <Typography color=\"error\">\n              Failed to fetch sequence for feature: {`${error}`}\n            </Typography>\n          )}\n        >\n          <SequenceFeatureDetails {...props} />\n        </ErrorBoundary>\n      ) : null}\n\n      {subfeatures?.length ? (\n        <BaseCard\n          title=\"Subfeatures\"\n          defaultExpanded={!sequenceTypes.includes(feature.type)}\n        >\n          {subfeatures.map((sub: any) => (\n            <FeatureDetails\n              key={JSON.stringify(sub)}\n              feature={sub}\n              model={model}\n              depth={depth + 1}\n            />\n          ))}\n        </BaseCard>\n      ) : null}\n    </BaseCard>\n  )\n}\n\nconst BaseFeatureDetails = observer((props: BaseInputProps) => {\n  const { model } = props\n  const { featureData } = model\n\n  if (!featureData) {\n    return null\n  }\n  const feature = JSON.parse(JSON.stringify(featureData))\n\n  if (isEmpty(feature)) {\n    return null\n  }\n  return <FeatureDetails model={model} feature={feature} />\n})\n\nexport default BaseFeatureDetails\n","/* ---------------- for the RPC client ----------------- */\n\nlet abortSignalCounter = 0\nexport type RemoteAbortSignal = { abortSignalId: number }\nconst abortSignalIds: WeakMap<AbortSignal, number> = new WeakMap() // map of abortsignal => numerical ID\n\n/**\n * assign an ID to the given abort signal and return a plain object representation\n * @param signal - the signal to serialize\n * @param callfunc - function used to call\n *  a remote method, will be called like callfunc('signalAbort', signalId)\n */\nexport function serializeAbortSignal(\n  signal: AbortSignal,\n  callfunc: (name: string, abortSignalId: number) => void,\n): RemoteAbortSignal {\n  let abortSignalId = abortSignalIds.get(signal)\n  if (!abortSignalId) {\n    abortSignalCounter += 1\n    abortSignalIds.set(signal, abortSignalCounter)\n    abortSignalId = abortSignalCounter\n    signal.addEventListener('abort', () => {\n      const signalId = abortSignalIds.get(signal)\n      if (signalId !== undefined) {\n        callfunc('signalAbort', signalId)\n      }\n    })\n  }\n  return { abortSignalId }\n}\n\n/* ---------------- for the RPC server ----------------- */\n\n/**\n * test whether a given object\n * @param thing - the thing to test\n * @returns true if the thing is a remote abort signal\n */\nexport function isRemoteAbortSignal(\n  thing: unknown,\n): thing is RemoteAbortSignal {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'abortSignalId' in thing &&\n    // @ts-ignore\n    typeof thing.abortSignalId === 'number'\n  )\n}\n\n// the server side keeps a set of surrogate abort controllers that can be\n// aborted based on ID\nconst surrogateAbortControllers: Map<number, AbortController> = new Map() // numerical ID => surrogate abort controller\n\n/**\n * deserialize the result of serializeAbortSignal into an AbortSignal\n *\n * @param signal -\n * @returns an abort signal that corresponds to the given ID\n */\nexport function deserializeAbortSignal({\n  abortSignalId,\n}: RemoteAbortSignal): AbortSignal {\n  let surrogateAbortController = surrogateAbortControllers.get(abortSignalId)\n  if (!surrogateAbortController) {\n    surrogateAbortController = new AbortController()\n    surrogateAbortControllers.set(abortSignalId, surrogateAbortController)\n  }\n  return surrogateAbortController.signal\n}\n\n/**\n * fire an abort signal from a remote abort signal ID\n *\n * @param abortSignalId -\n */\nexport function remoteAbort(props: { signalId: number }) {\n  const { signalId: abortSignalId } = props\n  const surrogateAbortController = surrogateAbortControllers.get(abortSignalId)\n\n  if (surrogateAbortController) {\n    surrogateAbortController.abort()\n  }\n}\n\nexport function remoteAbortRpcHandler() {\n  return {\n    signalAbort: remoteAbort,\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport { observer } from 'mobx-react'\nimport { getConf } from '../configuration'\nimport {\n  makeStyles,\n  TextField,\n  MenuItem,\n  InputProps as IIP,\n} from '@material-ui/core'\nimport { AbstractSessionModel } from '../util'\nconst useStyles = makeStyles(() => ({\n  importFormEntry: {\n    minWidth: 180,\n  },\n}))\n\n// Hook from https://usehooks.com/useLocalStorage/\nfunction useLocalStorage<T>(key: string, initialValue: T) {\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    if (typeof window === 'undefined') {\n      return initialValue\n    }\n    try {\n      const item = window.localStorage.getItem(key)\n      return item ? JSON.parse(item) : initialValue\n    } catch (error) {\n      console.error(error)\n      return initialValue\n    }\n  })\n  const setValue = (value: T | ((val: T) => T)) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value\n      setStoredValue(valueToStore)\n      if (typeof window !== 'undefined') {\n        window.localStorage.setItem(key, JSON.stringify(valueToStore))\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n  return [storedValue, setValue] as const\n}\n\nconst AssemblySelector = observer(\n  ({\n    session,\n    onChange,\n    selected,\n    InputProps,\n    extra = 0,\n  }: {\n    session: AbstractSessionModel\n    onChange: (arg: string) => void\n    selected: string | undefined\n    InputProps?: IIP\n    extra?: unknown\n  }) => {\n    const classes = useStyles()\n    const { assemblyNames, assemblyManager } = session\n\n    // constructs a localstorage key based on host/path/config to help\n    // remember. non-config assists usage with e.g. embedded apps\n    const config = new URLSearchParams(window.location.search).get('config')\n    const [lastSelected, setLastSelected] = useLocalStorage(\n      `lastAssembly-${[\n        window.location.host + window.location.pathname,\n        config,\n        extra,\n      ].join('-')}`,\n      selected,\n    )\n\n    const selection = assemblyNames.includes(lastSelected || '')\n      ? lastSelected\n      : selected\n\n    useEffect(() => {\n      if (selection && selection !== selected) {\n        onChange(selection)\n      }\n    }, [selection, onChange, selected])\n\n    const error = assemblyNames.length ? '' : 'No configured assemblies'\n    return (\n      <TextField\n        select\n        label=\"Assembly\"\n        variant=\"outlined\"\n        helperText={error || 'Select assembly to view'}\n        value={error ? '' : selection}\n        inputProps={{ 'data-testid': 'assembly-selector' }}\n        onChange={event => setLastSelected(event.target.value)}\n        error={!!error}\n        InputProps={InputProps}\n        disabled={!!error}\n        className={classes.importFormEntry}\n      >\n        {assemblyNames.map(name => {\n          const assembly = assemblyManager.get(name)\n          const displayName = assembly ? getConf(assembly, 'displayName') : ''\n          return (\n            <MenuItem key={name} value={name}>\n              {displayName || name}\n            </MenuItem>\n          )\n        })}\n      </TextField>\n    )\n  },\n)\n\nexport default AssemblySelector\n","import InputBase from '@material-ui/core/InputBase'\nimport Typography, { TypographyProps } from '@material-ui/core/Typography'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport React, { useEffect, useState } from 'react'\n\ntype Variant = TypographyProps['variant']\n\ntype EditableTypographyClassKey =\n  | 'input'\n  | 'inputBase'\n  | 'inputRoot'\n  | 'inputFocused'\n\nconst useStyles = makeStyles(theme => ({\n  input: {},\n  inputBase: {},\n  typography: {\n    top: 6,\n    left: 2,\n    position: 'absolute',\n    whiteSpace: 'nowrap',\n    visibility: 'hidden',\n  },\n  inputRoot: {\n    padding: theme.spacing(0.5),\n  },\n  inputFocused: {\n    borderStyle: 'solid',\n    borderRadius: theme.shape.borderRadius,\n    borderWidth: 2,\n  },\n}))\n\ninterface EditableTypographyPropTypes {\n  value: string\n  setValue: (value: string) => void\n  variant: Variant\n  classes?: Partial<Record<EditableTypographyClassKey, string>>\n}\n\n// using forwardRef so that MUI Tooltip can wrap this component\nconst EditableTypography = React.forwardRef(\n  (props: EditableTypographyPropTypes, ref: React.Ref<HTMLDivElement>) => {\n    const { value, setValue, variant, ...other } = props\n    const [editedValue, setEditedValue] = useState<string | undefined>()\n    const [width, setWidth] = useState(0)\n    const [sizerNode, setSizerNode] = useState<HTMLSpanElement | null>(null)\n    const [inputNode, setInputNode] = useState<HTMLInputElement | null>(null)\n    const [blur, setBlur] = useState(false)\n\n    useEffect(() => {\n      if (blur) {\n        inputNode && inputNode.blur()\n        setBlur(false)\n      }\n    }, [blur, inputNode])\n\n    const classes = useStyles(props)\n    const theme = useTheme()\n\n    const clientWidth = sizerNode && sizerNode.clientWidth\n    if (clientWidth && clientWidth !== width) {\n      setWidth(clientWidth)\n    }\n\n    const sizerRef = (node: HTMLSpanElement) => {\n      setSizerNode(node)\n    }\n\n    const inputRef = (node: HTMLInputElement) => {\n      setInputNode(node)\n    }\n\n    function handleBlur() {\n      if (editedValue && editedValue !== value) {\n        setValue(editedValue)\n      }\n      setEditedValue(undefined)\n    }\n\n    function handleKeyDown(event: React.KeyboardEvent<HTMLInputElement>) {\n      if (event.key === 'Enter') {\n        inputNode && inputNode.blur()\n      } else if (event.key === 'Escape') {\n        setEditedValue(undefined)\n        setBlur(true)\n      }\n    }\n\n    function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n      setEditedValue(event.target.value)\n    }\n\n    return (\n      <div {...other} ref={ref}>\n        <div style={{ position: 'relative' }}>\n          <Typography\n            ref={sizerRef}\n            component=\"span\"\n            variant={variant}\n            className={classes.typography}\n          >\n            {editedValue === undefined ? value : editedValue}\n          </Typography>\n        </div>\n        <InputBase\n          inputRef={inputRef}\n          className={classes.inputBase}\n          inputProps={{\n            style: {\n              width,\n              ...(variant && variant !== 'inherit' && variant !== 'srOnly'\n                ? theme.typography[variant]\n                : {}),\n            },\n          }}\n          classes={{\n            input: classes.input,\n            root: classes.inputRoot,\n            focused: classes.inputFocused,\n          }}\n          value={editedValue === undefined ? value : editedValue}\n          onChange={handleChange}\n          onKeyDown={handleKeyDown}\n          onBlur={handleBlur}\n        />\n      </div>\n    )\n  },\n)\n\nexport default EditableTypography\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n  message: {\n    border: '1px solid black',\n    background: '#f88',\n    overflow: 'auto',\n    maxHeight: 200,\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n  },\n\n  errorBox: {\n    background: 'lightgrey',\n    border: '1px solid black',\n    margin: 20,\n  },\n}))\nconst ErrorMessage = ({ error }: { error: unknown }) => {\n  const classes = useStyles()\n\n  let snapshotError = ''\n  let str = `${error}`\n  const findStr = 'is not assignable'\n  const idx = str.indexOf(findStr)\n  if (idx !== -1) {\n    const trim = str.slice(0, idx + findStr.length)\n    // best effort to make a better error message than the default\n    // mobx-state-tree\n\n    // case 1. element has a path\n    const match = trim.match(\n      /.*at path \"(.*)\" snapshot `(.*)` is not assignable/m,\n    )\n    if (match) {\n      str = `Failed to load element at ${match[1]}...Failed element had snapshot`\n      snapshotError = match[2]\n    }\n\n    // case 2. element has no path\n    const match2 = trim.match(/.*snapshot `(.*)` is not assignable/)\n    if (match2) {\n      str = `Failed to load element...Failed element had snapshot`\n      snapshotError = match2[1]\n    }\n  }\n  return (\n    <div className={classes.message}>\n      {str.slice(0, 10000)}\n      {snapshotError ? (\n        <pre className={classes.errorBox}>\n          {JSON.stringify(JSON.parse(snapshotError), null, 2)}\n        </pre>\n      ) : null}\n    </div>\n  )\n}\n\nexport default ErrorMessage\n","import Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport React from 'react'\n\nexport default ({\n  onClose,\n  open,\n  onFactoryReset,\n}: {\n  onClose: Function\n  open: boolean\n  onFactoryReset: Function\n}) => {\n  function handleDialogClose(action?: string) {\n    if (action === 'reset') {\n      onFactoryReset()\n    }\n    onClose()\n  }\n\n  return (\n    <Dialog open={open} onClose={() => handleDialogClose()}>\n      <DialogTitle id=\"alert-dialog-title\">Reset</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          Are you sure you want to reset? This will restore the default\n          configuration.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => handleDialogClose()} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={() => handleDialogClose('reset')}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React, { useState } from 'react'\nimport {\n  Box,\n  FormHelperText,\n  InputLabel,\n  MenuItem,\n  Tooltip,\n  Menu,\n} from '@material-ui/core'\n\nimport {\n  ToggleButtonGroup,\n  ToggleButton,\n  ToggleButtonProps,\n} from '@material-ui/lab'\nimport { observer } from 'mobx-react'\nimport {\n  FileLocation,\n  UriLocation,\n  isUriLocation,\n  AbstractRootModel,\n  isAppRootModel,\n} from '../../util/types'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport LocalFileChooser from './LocalFileChooser'\nimport UrlChooser from './UrlChooser'\n\nfunction ToggleButtonWithTooltip(props: ToggleButtonProps) {\n  const { title, children, ...other } = props\n  return (\n    <Tooltip title={title || ''}>\n      <ToggleButton {...other}>{children}</ToggleButton>\n    </Tooltip>\n  )\n}\n\nfunction shorten(str: string, len: number) {\n  if (typeof str === 'string' && str.length > len) {\n    return `${str.substring(0, len)}…`\n  }\n  return str\n}\n\nconst FileSelector = observer(\n  (props: {\n    location?: FileLocation\n    setLocation: (param: FileLocation) => void\n    setName?: (str: string) => void\n    name?: string\n    description?: string\n    rootModel?: AbstractRootModel\n  }) => {\n    const { location, name, description, rootModel, setLocation } = props\n    const fileOrUrl = !location || isUriLocation(location) ? 'url' : 'file'\n    const [toggleButtonValue, setToggleButtonValue] = useState(\n      location && 'internetAccountId' in location && location.internetAccountId\n        ? location.internetAccountId\n        : fileOrUrl,\n    )\n    const accts = isAppRootModel(rootModel)\n      ? rootModel.internetAccounts.slice()\n      : []\n    const numShown = 2\n    const [shownAccts, setShownAccts] = useState(accts.slice(0, numShown))\n    const [hiddenAccts, setHiddenAccts] = useState(accts.slice(numShown))\n    const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null)\n\n    const selectedAcct = accts.find(\n      ia => ia.internetAccountId === toggleButtonValue,\n    )\n\n    const setLocationWithAccount = (location: UriLocation) => {\n      setLocation({\n        ...location,\n        internetAccountId: selectedAcct\n          ? selectedAcct.internetAccountId\n          : undefined,\n      })\n    }\n\n    // if you swap account selection after inputting url\n    if (\n      location &&\n      selectedAcct &&\n      isUriLocation(location) &&\n      location.internetAccountId !== selectedAcct.internetAccountId\n    ) {\n      setLocationWithAccount(location)\n    }\n\n    let locationInput = (\n      <UrlChooser\n        {...props}\n        setLocation={setLocationWithAccount}\n        label={selectedAcct?.selectorLabel}\n      />\n    )\n    if (toggleButtonValue === 'file') {\n      locationInput = <LocalFileChooser {...props} />\n    }\n    if (selectedAcct?.SelectorComponent) {\n      const { SelectorComponent } = selectedAcct\n      locationInput = (\n        <SelectorComponent {...props} setLocation={setLocationWithAccount} />\n      )\n    }\n\n    return (\n      <>\n        <Box display=\"flex\">\n          <InputLabel shrink>{name}</InputLabel>\n        </Box>\n        <Box display=\"flex\" flexDirection=\"row\">\n          <Box>\n            <ToggleButtonGroup\n              value={toggleButtonValue}\n              exclusive\n              onChange={(_event, newState) => {\n                if (newState) {\n                  setToggleButtonValue(newState)\n                }\n                if (isUriLocation(location)) {\n                  setLocationWithAccount(location)\n                }\n              }}\n              aria-label=\"file, url, or account picker\"\n            >\n              {new URLSearchParams(window.location.search).get(\n                'adminKey',\n              ) ? null : (\n                <ToggleButton value=\"file\" aria-label=\"local file\">\n                  File\n                </ToggleButton>\n              )}\n              <ToggleButton value=\"url\" aria-label=\"url\">\n                URL\n              </ToggleButton>\n              {shownAccts.map(({ internetAccountId, toggleContents, name }) => (\n                <ToggleButtonWithTooltip\n                  key={internetAccountId}\n                  value={internetAccountId}\n                  aria-label={name}\n                  title={name}\n                >\n                  {typeof toggleContents === 'string'\n                    ? shorten(toggleContents, 5)\n                    : toggleContents || shorten(name, 5)}\n                </ToggleButtonWithTooltip>\n              ))}\n              {hiddenAccts.length ? (\n                <ToggleButton\n                  onClick={event => setAnchorEl(event.target as HTMLElement)}\n                  selected={false}\n                >\n                  More\n                  <ArrowDropDownIcon />\n                </ToggleButton>\n              ) : null}\n            </ToggleButtonGroup>\n\n            <Menu\n              open={Boolean(anchorEl)}\n              anchorEl={anchorEl}\n              onClose={() => setAnchorEl(null)}\n              getContentAnchorEl={null}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n              }}\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n              }}\n            >\n              {hiddenAccts?.map((acct, idx) => (\n                <MenuItem\n                  key={acct.internetAccountId}\n                  value={acct.internetAccountId}\n                  onClick={() => {\n                    const prev = shownAccts[shownAccts.length - 1]\n                    setShownAccts([\n                      ...shownAccts.slice(0, shownAccts.length - 1),\n                      acct,\n                    ])\n                    setHiddenAccts([\n                      prev,\n                      ...hiddenAccts.slice(0, idx),\n                      ...hiddenAccts.slice(idx + 1),\n                    ])\n                    setToggleButtonValue(acct.internetAccountId)\n                    setAnchorEl(null)\n                  }}\n                >\n                  {acct.name}\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n        </Box>\n        {locationInput}\n        <FormHelperText>{description}</FormHelperText>\n      </>\n    )\n  },\n)\n\nexport default FileSelector\n","import FileSelector from './FileSelector'\n\nexport default FileSelector\n","import React, { useEffect, useRef, useState } from 'react'\nimport {\n  Divider,\n  Grow,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  MenuProps as MUIMenuProps,\n  MenuItem as MUIMenuItem,\n  MenuItemProps,\n  MenuList,\n  Paper,\n  Popover,\n  PopoverProps,\n  SvgIconProps,\n  makeStyles,\n} from '@material-ui/core'\n// icons\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight'\nimport CheckBoxIcon from '@material-ui/icons/CheckBox'\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank'\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked'\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked'\n\n// other\nimport { findLastIndex } from '../util'\n\nconst useStyles = makeStyles({\n  paper: {\n    position: 'fixed',\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    // So we see the popover when it's empty.\n    minWidth: 16,\n    minHeight: 16,\n    maxWidth: 'calc(100% - 32px)',\n    maxHeight: 'calc(100% - 32px)',\n    top: 0,\n    left: 0,\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n  },\n  menuItemEndDecoration: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)',\n    padding: 2,\n    marginRight: -12,\n    display: 'inline-flex',\n  },\n})\n\ninterface MenuItemEndDecorationSubMenuProps {\n  type: 'subMenu'\n}\n\ninterface MenuItemEndDecorationSelectorProps {\n  type: 'checkbox' | 'radio'\n  checked: boolean\n  disabled?: boolean\n}\n\ntype MenuItemEndDecorationProps =\n  | MenuItemEndDecorationSubMenuProps\n  | MenuItemEndDecorationSelectorProps\n\nfunction MenuItemEndDecoration(props: MenuItemEndDecorationProps) {\n  const classes = useStyles()\n  const { type } = props\n  let checked\n  let disabled\n  if ('checked' in props) {\n    ;({ checked, disabled } = props)\n  }\n  let icon\n  if (type === 'subMenu') {\n    icon = <ArrowRightIcon color=\"action\" />\n  } else if (type === 'checkbox') {\n    if (checked) {\n      const color = disabled ? 'inherit' : 'secondary'\n      icon = <CheckBoxIcon color={color} />\n    } else {\n      icon = <CheckBoxOutlineBlankIcon color=\"action\" />\n    }\n  } else if (type === 'radio') {\n    if (checked) {\n      const color = disabled ? 'inherit' : 'secondary'\n      icon = <RadioButtonCheckedIcon color={color} />\n    } else {\n      icon = <RadioButtonUncheckedIcon color=\"action\" />\n    }\n  }\n  return <div className={classes.menuItemEndDecoration}>{icon}</div>\n}\n\nexport interface MenuDivider {\n  priority?: number\n  type: 'divider'\n}\n\nexport interface MenuSubHeader {\n  type: 'subHeader'\n  priority?: number\n  label: string\n}\n\nexport interface BaseMenuItem {\n  label: string\n  priority?: number\n  subLabel?: string\n  icon?: React.ComponentType<SvgIconProps>\n  disabled?: boolean\n}\n\nexport interface NormalMenuItem extends BaseMenuItem {\n  type?: 'normal'\n  onClick: Function\n}\n\nexport interface CheckboxMenuItem extends BaseMenuItem {\n  type: 'checkbox'\n  checked: boolean\n  onClick: Function\n}\n\nexport interface RadioMenuItem extends BaseMenuItem {\n  type: 'radio'\n  checked: boolean\n  onClick: Function\n}\n\nexport interface SubMenuItem extends BaseMenuItem {\n  type?: 'subMenu'\n  subMenu: MenuItem[]\n}\n\nexport type MenuItem =\n  | MenuDivider\n  | MenuSubHeader\n  | NormalMenuItem\n  | CheckboxMenuItem\n  | RadioMenuItem\n  | SubMenuItem\n\ntype AnchorElProp = MUIMenuProps['anchorEl']\ntype OpenProp = MUIMenuProps['open']\ntype OnCloseProp = MUIMenuProps['onClose']\n\ninterface MenuPageProps {\n  menuItems: MenuItem[]\n  onMenuItemClick: (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    callback: Function,\n  ) => void\n  anchorEl?: AnchorElProp\n  open: OpenProp\n  onClose: OnCloseProp\n  top?: boolean\n}\n\ntype MenuItemStyleProp = MenuItemProps['style']\n\nfunction findNextValidIdx(menuItems: MenuItem[], currentIdx: number) {\n  const idx = menuItems\n    .slice(currentIdx + 1)\n    .findIndex(\n      menuItem =>\n        menuItem.type !== 'divider' &&\n        menuItem.type !== 'subHeader' &&\n        !menuItem.disabled,\n    )\n  if (idx === -1) {\n    return idx\n  }\n  return currentIdx + 1 + idx\n}\n\nfunction findPreviousValidIdx(menuItems: MenuItem[], currentIdx: number) {\n  return findLastIndex(\n    menuItems.slice(0, currentIdx),\n    menuItem =>\n      menuItem.type !== 'divider' &&\n      menuItem.type !== 'subHeader' &&\n      !menuItem.disabled,\n  )\n}\n\nconst MenuPage = React.forwardRef((props: MenuPageProps, ref) => {\n  const [subMenuAnchorEl, setSubMenuAnchorEl] = useState<HTMLElement>()\n  const [openSubMenuIdx, setOpenSubMenuIdx] = useState<number>()\n  const [isSubMenuOpen, setIsSubMenuOpen] = useState(false)\n  const [selectedMenuItemIdx, setSelectedMenuItemIdx] = useState<number>()\n  const [position, setPosition] = useState<{\n    top?: number\n    left?: number\n  }>()\n  const paperRef = useRef<HTMLDivElement>()\n  const classes = useStyles()\n\n  const {\n    menuItems,\n    onMenuItemClick,\n    open,\n    onClose,\n    anchorEl,\n    top = false,\n  } = props\n\n  useEffect(() => {\n    if (!open) {\n      setSubMenuAnchorEl(undefined)\n      setOpenSubMenuIdx(undefined)\n    }\n  }, [open])\n\n  useEffect(() => {\n    const shouldSubMenuBeOpen = open && Boolean(subMenuAnchorEl)\n    let timer: ReturnType<typeof setTimeout>\n    if (shouldSubMenuBeOpen && !isSubMenuOpen) {\n      timer = setTimeout(() => {\n        setIsSubMenuOpen(true)\n      }, 300)\n    } else if (!shouldSubMenuBeOpen && isSubMenuOpen) {\n      timer = setTimeout(() => {\n        setIsSubMenuOpen(false)\n      }, 300)\n    }\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [isSubMenuOpen, open, subMenuAnchorEl])\n\n  useEffect(() => {\n    if (anchorEl) {\n      const rect = (anchorEl as HTMLElement).getBoundingClientRect()\n      if (position) {\n        if (\n          rect.top !== position.top ||\n          rect.left + rect.width !== position.left\n        ) {\n          setPosition({ top: rect.top, left: rect.left + rect.width })\n        }\n      } else {\n        setPosition({ top: rect.top, left: rect.left + rect.width })\n      }\n    } else if (!position) {\n      setPosition({})\n    }\n  }, [position, anchorEl])\n\n  const hasEndDecoration = menuItems.some(\n    menuItem =>\n      'subMenu' in menuItem ||\n      menuItem.type === 'checkbox' ||\n      menuItem.type === 'radio',\n  )\n  const hasIcon = menuItems.some(\n    menuItem => 'icon' in menuItem && menuItem.icon,\n  )\n  const menuItemStyle: MenuItemStyleProp = {}\n  if (hasEndDecoration) {\n    menuItemStyle.paddingRight = 48\n  }\n\n  function handleClick(callback: Function) {\n    return (event: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\n      onMenuItemClick(event, callback)\n    }\n  }\n\n  const ListContents = (\n    <>\n      <MenuList autoFocusItem={open && !isSubMenuOpen}>\n        {menuItems\n          .sort((a, b) => (b.priority || 0) - (a.priority || 0))\n          .map((menuItem, idx) => {\n            if (menuItem.type === 'divider') {\n              return <Divider key={`divider-${idx}`} component=\"li\" />\n            }\n            if (menuItem.type === 'subHeader') {\n              return (\n                <ListSubheader key={`subHeader-${menuItem.label}-${idx}`}>\n                  {menuItem.label}\n                </ListSubheader>\n              )\n            }\n            let icon = null\n            let endDecoration = null\n            if (menuItem.icon) {\n              const Icon = menuItem.icon\n              icon = (\n                <ListItemIcon>\n                  <Icon />\n                </ListItemIcon>\n              )\n            }\n            if ('subMenu' in menuItem) {\n              endDecoration = <MenuItemEndDecoration type=\"subMenu\" />\n            } else if (\n              menuItem.type === 'checkbox' ||\n              menuItem.type === 'radio'\n            ) {\n              endDecoration = (\n                <MenuItemEndDecoration\n                  type={menuItem.type}\n                  checked={menuItem.checked}\n                  disabled={menuItem.disabled}\n                />\n              )\n            }\n            const onClick =\n              'onClick' in menuItem ? handleClick(menuItem.onClick) : undefined\n            return (\n              <MUIMenuItem\n                key={menuItem.label}\n                style={menuItemStyle}\n                selected={idx === selectedMenuItemIdx}\n                onClick={onClick}\n                onMouseMove={e => {\n                  if (e.currentTarget !== document.activeElement) {\n                    e.currentTarget.focus()\n                    setSelectedMenuItemIdx(idx)\n                  }\n                  if ('subMenu' in menuItem) {\n                    if (openSubMenuIdx !== idx) {\n                      setSubMenuAnchorEl(e.currentTarget)\n                      setOpenSubMenuIdx(idx)\n                    }\n                  } else {\n                    setSubMenuAnchorEl(undefined)\n                    setOpenSubMenuIdx(undefined)\n                  }\n                }}\n                onKeyDown={e => {\n                  if (e.key === 'ArrowLeft' || e.key === 'Escape') {\n                    onClose && onClose(e, 'escapeKeyDown')\n                  } else if (e.key === 'ArrowUp') {\n                    setSelectedMenuItemIdx(findPreviousValidIdx(menuItems, idx))\n                  } else if (e.key === 'ArrowDown') {\n                    const a = findNextValidIdx(menuItems, idx)\n                    setSelectedMenuItemIdx(a)\n                  } else if ('subMenu' in menuItem) {\n                    if (e.key === 'ArrowRight' || e.key === 'Enter') {\n                      setSubMenuAnchorEl(e.currentTarget)\n                      setOpenSubMenuIdx(idx)\n                      setIsSubMenuOpen(true)\n                    }\n                  }\n                }}\n                disabled={Boolean(menuItem.disabled)}\n              >\n                {icon}\n                <ListItemText\n                  primary={menuItem.label}\n                  secondary={menuItem.subLabel}\n                  inset={hasIcon && !menuItem.icon}\n                />\n                {endDecoration}\n              </MUIMenuItem>\n            )\n          })}\n      </MenuList>\n      {menuItems.map((menuItem, idx) => {\n        let subMenu = null\n        if ('subMenu' in menuItem) {\n          subMenu = (\n            <MenuPage\n              key={menuItem.label}\n              anchorEl={subMenuAnchorEl}\n              open={isSubMenuOpen && openSubMenuIdx === idx}\n              onClose={() => {\n                setIsSubMenuOpen(false)\n                setSubMenuAnchorEl(undefined)\n              }}\n              onMenuItemClick={onMenuItemClick}\n              menuItems={menuItem.subMenu}\n            />\n          )\n        }\n        return subMenu\n      })}\n    </>\n  )\n\n  if (top) {\n    return ListContents\n  }\n\n  return (\n    <Grow in={open} style={{ transformOrigin: `0 0 0` }} ref={ref}>\n      <Paper\n        elevation={8}\n        ref={paperRef}\n        className={classes.paper}\n        style={{ ...position }}\n      >\n        {ListContents}\n      </Paper>\n    </Grow>\n  )\n})\n\ninterface MenuProps extends PopoverProps {\n  menuItems: MenuItem[]\n  onMenuItemClick: (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    callback: Function,\n  ) => void\n}\n\nfunction Menu(props: MenuProps) {\n  const { open, onClose, menuItems, onMenuItemClick, ...other } = props\n\n  return (\n    <Popover\n      transitionDuration={0}\n      open={open}\n      onClose={onClose}\n      BackdropProps={{ invisible: true }}\n      {...other}\n    >\n      <MenuPage\n        open={open}\n        onClose={onClose}\n        menuItems={menuItems}\n        onMenuItemClick={onMenuItemClick}\n        top\n      />\n    </Popover>\n  )\n}\n\nexport default Menu\n","import React, { useEffect, useState, useRef } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\n\nconst useStyles = makeStyles({\n  horizontalHandle: {\n    cursor: 'row-resize',\n    width: '100%',\n  },\n  verticalHandle: {\n    cursor: 'col-resize',\n    height: '100%',\n  },\n  flexbox_verticalHandle: {\n    cursor: 'col-resize',\n    alignSelf: 'stretch', // the height: 100% is actually unable to function inside flexbox\n  },\n  flexbox_horizontalHandle: {\n    cursor: 'row-resize',\n    alignSelf: 'stretch', // similar to above\n  },\n})\n\nfunction ResizeHandle({\n  onDrag,\n  vertical = false,\n  flexbox = false,\n  className: originalClassName,\n  ...props\n}: {\n  onDrag: (arg: number) => number\n  vertical?: boolean\n  flexbox?: boolean\n  className?: string\n  [props: string]: unknown\n}) {\n  const [mouseDragging, setMouseDragging] = useState(false)\n  const prevPos = useRef(0)\n  const classes = useStyles()\n\n  useEffect(() => {\n    function mouseMove(event: MouseEvent) {\n      event.preventDefault()\n      const pos = vertical ? event.clientX : event.clientY\n      const distance = pos - prevPos.current\n      if (distance) {\n        onDrag(distance)\n        prevPos.current = pos\n      }\n    }\n\n    function mouseUp() {\n      setMouseDragging(false)\n    }\n    if (mouseDragging) {\n      window.addEventListener('mousemove', mouseMove, true)\n      window.addEventListener('mouseup', mouseUp, true)\n      return () => {\n        window.removeEventListener('mousemove', mouseMove, true)\n        window.removeEventListener('mouseup', mouseUp, true)\n      }\n    }\n    return () => {}\n  }, [mouseDragging, onDrag, vertical])\n\n  let className\n  if (flexbox) {\n    if (vertical) {\n      className = classes.flexbox_verticalHandle\n    } else {\n      className = classes.flexbox_horizontalHandle\n    }\n  } else if (vertical) {\n    className = classes.verticalHandle\n  } else {\n    className = classes.horizontalHandle\n  }\n\n  return (\n    <div\n      data-resizer=\"true\"\n      onMouseDown={event => {\n        event.preventDefault()\n        prevPos.current = vertical ? event.clientX : event.clientY\n        setMouseDragging(true)\n      }}\n      role=\"presentation\"\n      className={clsx(className, originalClassName)}\n      {...props}\n    />\n  )\n}\n\nexport default ResizeHandle\n","import React from 'react'\nimport escapeHTML from 'escape-html'\nimport dompurify from 'dompurify'\n\n// source https://github.com/sindresorhus/html-tags/blob/master/html-tags.json\n// with some random uncommon ones removed. note: we just use this to run the content\n// through dompurify without escaping if we see an htmlTag from this list\n// otherwise we escape angle brackets and things prematurely because it might be\n// something like <TRA> in VCF. Ref #657\nconst htmlTags = [\n  'a',\n  'b',\n  'br',\n  'code',\n  'div',\n  'em',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'i',\n  'img',\n  'li',\n  'p',\n  'pre',\n  'span',\n  'small',\n  'strong',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'tr',\n  'u',\n  'ul',\n]\n\n// adapted from is-html https://github.com/sindresorhus/is-html/blob/master/index.js\nconst full = new RegExp(htmlTags.map(tag => `<${tag}\\\\b[^>]*>`).join('|'), 'i')\nexport function isHTML(str: string) {\n  return full.test(str)\n}\n\nexport default function SanitizedHTML({ html }: { html: string }) {\n  const value = isHTML(html) ? html : escapeHTML(html)\n\n  // eslint-disable-next-line react/no-danger\n  return <div dangerouslySetInnerHTML={{ __html: dompurify.sanitize(value) }} />\n}\n","import { blue, green, red, amber } from '@material-ui/core/colors'\nimport { ThemeOptions, createTheme } from '@material-ui/core/styles'\nimport { PaletteOptions } from '@material-ui/core/styles/createPalette'\nimport deepmerge from 'deepmerge'\n\n// use this if we ever want to add some top-level thing to the theme\n// declare module '@material-ui/core/styles/createMuiTheme' {\n//   interface Theme {\n//     status: {\n//       topLevelThing: string\n//     }\n//   }\n//   interface ThemeOptions {\n//     status?: {\n//       topLevelThing?: string\n//     }\n//   }\n// }\n\ndeclare module '@material-ui/core/styles/createPalette' {\n  interface Palette {\n    tertiary: Palette['primary']\n    quaternary: Palette['primary']\n    bases: {\n      A: Palette['primary']\n      C: Palette['primary']\n      G: Palette['primary']\n      T: Palette['primary']\n    }\n  }\n  interface PaletteOptions {\n    tertiary?: PaletteOptions['primary']\n    quaternary?: PaletteOptions['primary']\n    bases?: {\n      A?: PaletteOptions['primary']\n      C?: PaletteOptions['primary']\n      G?: PaletteOptions['primary']\n      T?: PaletteOptions['primary']\n    }\n  }\n}\n\nconst midnight = '#0D233F'\nconst grape = '#721E63'\nconst forest = '#135560'\nconst mandarin = '#FFB11D'\n\nconst refTheme = createTheme()\n\nexport const jbrowseDefaultPalette = {\n  // type: 'dark',\n  primary: { main: midnight },\n  secondary: { main: grape },\n  tertiary: refTheme.palette.augmentColor({ main: forest }),\n  quaternary: refTheme.palette.augmentColor({ main: mandarin }),\n  stopCodon: '#e22',\n  startCodon: '#3e3',\n  bases: {\n    A: refTheme.palette.augmentColor(green),\n    C: refTheme.palette.augmentColor(blue),\n    G: refTheme.palette.augmentColor(amber),\n    T: refTheme.palette.augmentColor(red),\n  },\n}\n\nexport function createJBrowseDefaultProps(/* palette: PaletteOptions = {} */) {\n  return {\n    MuiButton: {\n      size: 'small' as const,\n    },\n    MuiFilledInput: {\n      margin: 'dense' as const,\n    },\n    MuiFormControl: {\n      margin: 'dense' as const,\n    },\n    MuiFormHelperText: {\n      margin: 'dense' as const,\n    },\n    MuiIconButton: {\n      size: 'small' as const,\n    },\n    MuiInputBase: {\n      margin: 'dense' as const,\n    },\n    MuiList: {\n      dense: true,\n    },\n    MuiListItem: {\n      dense: true,\n    },\n    MuiOutlinedInput: {\n      margin: 'dense' as const,\n    },\n    MuiFab: {\n      size: 'small' as const,\n    },\n    MuiTable: {\n      size: 'small' as const,\n    },\n    MuiTextField: {\n      margin: 'dense' as const,\n      size: 'small' as const,\n    },\n    MuiToolbar: {\n      variant: 'dense' as const,\n    },\n    MuiSvgIcon: {\n      fontSize: 'small' as const,\n    },\n    MuiToggleButtonGroup: {\n      size: 'small' as const,\n    },\n    MuiCheckbox: {\n      size: 'small' as const,\n    },\n    MuiLink: {\n      underline: 'always' as const,\n    },\n  }\n}\n\nexport function createJBrowseDefaultOverrides(palette: PaletteOptions = {}) {\n  const generatedPalette = deepmerge(jbrowseDefaultPalette, palette)\n  return {\n    MuiIconButton: {\n      colorSecondary: {\n        color: generatedPalette.tertiary.main,\n      },\n    },\n    MuiButton: {\n      textSecondary: {\n        color: generatedPalette.tertiary.main,\n      },\n    },\n    MuiFab: {\n      secondary: {\n        backgroundColor: generatedPalette.quaternary.main,\n      },\n    },\n    MuiLink: {\n      root: {\n        color: generatedPalette.tertiary.main,\n      },\n    },\n    MuiAccordion: {\n      root: {\n        // avoid extra padding around accordion element\n        margin: 0,\n        '&$expanded': {\n          margin: 0,\n        },\n      },\n    },\n    MuiAccordionSummary: {\n      root: {\n        // !important needed to combat the MuiButton being applied to\n        // accordions in mui4.12.2 having a background:'transparent' that\n        // otherwise overrides this other\n        backgroundColor: generatedPalette.tertiary.main + ' !important',\n\n        // width:100% added in 4.12.2 also\n        width: '100%',\n        '&$expanded': {\n          // overrides the subclass e.g. .MuiAccordionSummary-root-311.MuiAccordionSummary-expanded-312\n          minHeight: 0,\n          color: generatedPalette.tertiary.contrastText,\n          backgroundColor: generatedPalette.tertiary.main,\n        },\n        minHeight: 0,\n      },\n      content: {\n        '&$expanded': {\n          margin: '8px 8px',\n        },\n        margin: '8px 8px',\n        color: generatedPalette.tertiary.contrastText,\n      },\n    },\n    // makes menus more compact\n    MuiMenuItem: {\n      root: {\n        paddingTop: 3,\n        paddingBottom: 3,\n      },\n    },\n\n    // the below two are linked to make menus more compact\n    MuiListItemIcon: {\n      root: {\n        minWidth: 32,\n      },\n    },\n    MuiListItemText: {\n      inset: {\n        paddingLeft: 32,\n      },\n    },\n  }\n}\n\nexport const jbrowseBaseTheme: ThemeOptions = {\n  palette: jbrowseDefaultPalette,\n  typography: { fontSize: 12 },\n  spacing: 4,\n  props: createJBrowseDefaultProps(),\n  overrides: createJBrowseDefaultOverrides(),\n}\n\nexport function createJBrowseTheme(theme?: ThemeOptions) {\n  if (!theme) {\n    return createTheme(jbrowseBaseTheme)\n  }\n  if (theme.palette?.tertiary) {\n    theme = {\n      ...theme,\n      palette: {\n        ...theme.palette,\n        tertiary: refTheme.palette.augmentColor(theme.palette.tertiary),\n      },\n    }\n  }\n  if (theme.palette?.quaternary) {\n    theme = {\n      ...theme,\n      palette: {\n        ...theme.palette,\n        quaternary: refTheme.palette.augmentColor(theme.palette.quaternary),\n      },\n    }\n  }\n  theme = {\n    ...theme,\n    props: deepmerge(createJBrowseDefaultProps(), theme.props || {}),\n    overrides: deepmerge(\n      createJBrowseDefaultOverrides(theme.palette),\n      theme.overrides || {},\n    ),\n  }\n  return createTheme(deepmerge(jbrowseBaseTheme, theme))\n}\n","import React from 'react'\n\ntype LogoVariant = 'color' | 'black' | 'white'\n\ninterface LogoProps {\n  variant?: LogoVariant\n}\n\nfunction getColors(variant?: LogoVariant) {\n  if (variant === 'black') {\n    return {\n      midnight: '#808080',\n      forrest: '#666666',\n      grape: '#4d4d4d',\n      mandarin: '#333333',\n      gray: '#1a1a1a',\n    }\n  }\n  if (variant === 'white') {\n    return {\n      midnight: '#ffffff',\n      forrest: '#e6e6e6',\n      grape: '#cccccc',\n      mandarin: '#b3b3b3',\n      gray: '#999999',\n    }\n  }\n  return {\n    midnight: '#0d233f',\n    forrest: '#135560',\n    grape: '#721e63',\n    mandarin: '#ffb11d',\n    gray: '#dadada',\n  }\n}\n\nexport function Logomark({ variant }: LogoProps) {\n  return (\n    <svg viewBox=\"0 0 175 175\">\n      <Icon variant={variant} />\n    </svg>\n  )\n}\n\nexport function LogoFull({ variant }: LogoProps) {\n  return (\n    <svg viewBox=\"0 0 641 175\">\n      <Text variant={variant} />\n      <Icon variant={variant} />\n    </svg>\n  )\n}\n\nfunction Icon({ variant }: LogoProps) {\n  const colors = getColors(variant)\n  return (\n    <>\n      <path\n        style={{ fill: colors.midnight }}\n        d=\"M120.5,57.5c.168,0,.333.012.5.013V40.506c-.167,0-.333-.006-.5-.006a98.325,98.325,0,0,0-77.4,37.565q-2.664,3.378-5.023,6.994l14.206,9.327Q54.043,91.709,56,89.179A81.363,81.363,0,0,1,120.5,57.5Z\"\n      />\n      <path\n        style={{ fill: colors.forrest }}\n        d=\"M148.668,86.223c.308.133.6.283.908.42l6.746-15.618c-.153-.067-.3-.143-.454-.21a81.36,81.36,0,0,0-71.777,3.5q-2.8,1.544-5.469,3.309l9.249,14.054A63.93,63.93,0,0,1,148.668,86.223Z\"\n      />\n      <path\n        style={{ fill: colors.grape }}\n        d=\"M170.894,109.37A63.929,63.929,0,0,0,113.4,88.861l2.336,15.474a48.456,48.456,0,0,1,44.322,15.42c.111.125.214.255.324.381l11.16-10C171.323,109.879,171.118,109.62,170.894,109.37Z\"\n      />\n      <path\n        style={{ fill: colors.mandarin }}\n        d=\"M150.921,150.314c.04.163.07.326.107.489l16.509-4.058c-.039-.163-.067-.326-.107-.489A48.457,48.457,0,0,0,135.575,111.8l-5.515,15.591A32.466,32.466,0,0,1,150.921,150.314Z\"\n      />\n      <path\n        style={{ fill: colors.gray }}\n        d=\"M134.1,138.129l-9.779,13.213a32.486,32.486,0,0,1,7.823,14.463l15.147.852c.012-.166.032-.331.041-.5A32.464,32.464,0,0,0,134.1,138.129Z\"\n      />\n    </>\n  )\n}\n\nfunction Text({ variant }: LogoProps) {\n  const colors = getColors(variant)\n  return (\n    <g\n      aria-label=\"JBrowse\"\n      transform=\"translate(213.084 144.241)\"\n      style={{ fill: colors.midnight }}\n    >\n      <path d=\"m 26.355,-71.505 v 54.075 2.835 q 0,6.825 -0.42,10.185 -0.735,5.67 -2.835,9.135 -3.255,5.355 -8.505,8.4 -4.83,2.73 -11.55,3.57 L 1.47,11.76 Q 7.35,10.185 9.24,4.2 10.605,-0.105 10.605,-9.975 v -5.565 -55.965 q 1.785,0 4.62,0.315 2.835,0.21 3.255,0.21 1.785,0 2.94,-0.105 4.515,-0.42 4.935,-0.42 z\" />\n      <path d=\"m 60.68836,-65.415 v 24.78 h 3.255 q 2.94,0 4.935,-0.525 2.1,-0.525 3.885,-2.1 2.31,-1.995 3.36,-4.83 1.155,-2.835 1.155,-6.09 0,-5.565 -2.94,-8.61 -2.94,-3.045 -8.295,-3.045 -2.52,0 -5.355,0.42 z m 0,30.87 V -6.09 h 5.25 q 4.725,0 8.505,-3.675 3.885,-3.78 3.885,-10.08 0,-8.19 -4.62,-11.655 -4.095,-3.045 -13.02,-3.045 z M 44.93836,0 v -71.505 h 27.09 q 9.135,0 14.385,3.255 6.51,3.99 6.51,12.6 0,7.035 -5.25,11.655 -4.62,4.095 -11.97,5.145 v 0.945 q 7.56,0.735 12.285,3.99 6.615,4.62 6.615,13.335 0,10.185 -7.98,15.75 -6.93,4.83 -17.43,4.83 z\" />\n      <path d=\"M 109.44281,0.525 V -50.4 q 1.785,0.21 3.99,0.42 2.31,0.105 3.255,0.105 2.31,0 4.2,-0.21 1.89,-0.21 3.045,-0.315 v 13.02 q 1.89,-6.51 5.46,-9.87 4.41,-4.095 11.655,-4.095 -0.315,2.73 -0.42,6.825 -0.105,3.99 -0.105,7.455 l -0.945,0.84 q -0.945,-0.735 -2.415,-1.05 -1.47,-0.315 -2.94,-0.315 -3.57,0 -6.195,1.89 -2.52,1.785 -3.465,5.04 -0.42,1.155 -0.525,3.15 -0.105,1.89 -0.105,4.515 v 4.515 19.005 q -1.785,-0.21 -2.625,-0.21 -3.675,-0.315 -4.62,-0.315 -2.31,0 -4.2,0.21 -1.89,0.21 -3.045,0.315 z\" />\n      <path d=\"m 173.77337,1.47 q -11.655,0 -18.585,-6.825 -6.93,-6.825 -6.93,-18.48 0,-12.6 6.72,-20.055 6.825,-7.455 18.9,-7.455 11.97,0 18.9,6.72 6.93,6.72 6.93,18.48 0,12.285 -6.72,19.74 -7.14,7.875 -19.215,7.875 z m 0.735,-48.09 q -5.88,0 -8.505,6.51 -2.205,5.565 -2.205,15.96 0,8.19 1.47,12.915 2.415,7.98 8.505,7.98 5.565,0 8.19,-7.875 2.205,-6.51 2.205,-16.695 0,-8.505 -2.1,-13.23 -2.52,-5.565 -7.56,-5.565 z\" />\n      <path d=\"m 222.03563,-50.4 10.5,36.015 q 3.675,-11.235 5.67,-17.85 2.415,-8.085 5.04,-18.165 1.05,0.105 3.045,0.315 2.1,0.21 2.835,0.21 1.995,0 3.15,-0.105 1.26,-0.21 2.73,-0.42 l 10.71,36.015 q 5.88,-17.43 10.71,-36.015 l 4.2,0.315 4.095,-0.315 q -5.145,13.125 -9.135,24.57 -5.04,14.28 -8.505,26.355 -1.89,-0.21 -3.36,-0.42 -1.365,-0.105 -2.205,-0.105 -1.89,0 -3.36,0.21 -1.365,0.21 -2.31,0.315 l -10.605,-34.755 q -4.41,13.65 -6.72,21.105 -2.31,7.35 -4.095,13.65 -1.89,-0.21 -3.36,-0.42 -1.365,-0.105 -2.31,-0.105 -1.995,0 -3.465,0.21 -1.365,0.21 -2.31,0.315 -3.78,-12.81 -5.04,-17.01 -2.205,-7.245 -5.46,-17.01 -2.835,-8.4 -5.88,-16.905 1.575,0 4.305,0.315 2.73,0.21 3.36,0.21 1.47,0 4.305,-0.21 2.835,-0.315 3.465,-0.315 z\" />\n      <path d=\"m 292.84172,-12.81 h 2.625 q 1.47,4.095 4.62,6.51 3.15,2.415 7.35,2.415 2.94,0 5.46,-1.785 2.625,-1.89 2.625,-4.62 0,-3.885 -6.195,-6.615 -10.395,-4.62 -11.655,-5.46 -6.405,-4.515 -6.405,-12.285 0,-7.77 5.25,-12.18 5.25,-4.515 12.81,-4.515 3.99,0 8.085,1.365 4.095,1.26 7.14,3.57 l -2.52,9.24 h -2.94 q -0.63,-3.57 -3.57,-6.195 -2.835,-2.625 -6.405,-2.625 -3.15,0 -5.46,1.575 -2.31,1.47 -2.31,4.515 0,3.885 6.405,6.51 10.185,4.095 11.865,5.25 6.405,4.41 6.405,12.81 0,7.455 -5.46,12.18 -5.355,4.62 -14.805,4.62 -8.19,0 -14.49,-4.305 z\" />\n      <path d=\"m 349.61228,-29.925 h 15.54 q 0,-6.51 -1.05,-10.395 -1.68,-6.3 -5.88,-6.3 -5.04,0 -7.14,6.195 -1.47,4.305 -1.47,10.5 z m 30.03,5.04 h -30.03 q 0,9.135 3.045,13.86 3.57,5.67 11.55,5.67 3.255,0 6.405,-1.26 3.15,-1.26 5.88,-3.465 l 1.26,0.945 -2.31,5.88 q -6.72,4.725 -15.015,4.725 -12.915,0 -19.635,-7.245 -6.72,-7.245 -6.72,-20.37 0,-11.235 6.405,-18.165 6.51,-7.035 17.64,-7.035 11.655,0 16.905,7.56 4.62,6.615 4.62,18.9 z\" />\n    </g>\n  )\n}\n","import React, { useState, Suspense } from 'react'\nimport {\n  AppBar,\n  Button,\n  Fab,\n  MenuItem,\n  Paper,\n  Select,\n  Toolbar,\n  Tooltip,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport LaunchIcon from '@material-ui/icons/Launch'\nimport { observer } from 'mobx-react'\nimport { getEnv } from 'mobx-state-tree'\n\n// locals\nimport { readConfObject } from '../configuration'\nimport { AnyConfigurationModel } from '../configuration/configurationSchema'\nimport DrawerWidget from './DrawerWidget'\nimport DropDownMenu from './DropDownMenu'\nimport EditableTypography from './EditableTypography'\nimport { LogoFull } from './Logo'\nimport Snackbar from './Snackbar'\nimport ViewContainer from './ViewContainer'\nimport {\n  NotificationLevel,\n  SessionWithDrawerWidgets,\n  SnackAction,\n} from '../util'\nimport { MenuItem as JBMenuItem } from './index'\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    html: {\n      'font-family': 'Roboto',\n    },\n    /* Based on: https://www.digitalocean.com/community/tutorials/css-scrollbars */\n    /* The emerging W3C standard\n       that is currently Firefox-only */\n    '*': {\n      'scrollbar-width': 'auto',\n      'scrollbar-color': 'rgba(0,0,0,.5) rgba(128,128,128)',\n    },\n    /* Works on Chrome/Edge/Safari */\n    '*::-webkit-scrollbar': {\n      '-webkit-appearance': 'none',\n      width: '12px',\n    },\n    '*::-webkit-scrollbar-thumb': {\n      'background-color': 'rgba(0,0,0,.5)',\n      '-webkit-box-shadow': '0 0 1px rgba(255,255,255,.5)',\n    },\n  },\n  root: {\n    display: 'grid',\n    height: '100vh',\n    width: '100%',\n  },\n  fabLeft: {\n    zIndex: 10000,\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    left: theme.spacing(2),\n  },\n  fabRight: {\n    zIndex: 10000,\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  menuBarAndComponents: {\n    gridColumn: 'main',\n    display: 'grid',\n    gridTemplateRows: '[menubar] min-content [components] auto',\n    height: '100vh',\n  },\n  menuBar: {\n    gridRow: 'menubar',\n  },\n  components: {\n    overflowY: 'auto',\n    gridRow: 'components',\n  },\n  appBar: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  inputBase: {\n    color: theme.palette.primary.contrastText,\n  },\n  inputRoot: {\n    '&:hover': {\n      backgroundColor: theme.palette.primary.light,\n    },\n  },\n  inputFocused: {\n    borderColor: theme.palette.secondary.main,\n    backgroundColor: theme.palette.primary.light,\n  },\n\n  selectPaper: {\n    padding: theme.spacing(4),\n  },\n}))\n\nconst Logo = observer(\n  ({ session }: { session: { configuration: AnyConfigurationModel } }) => {\n    const { configuration } = session\n    const logoPath = readConfObject(configuration, 'logoPath')\n    if (!logoPath?.uri) {\n      return <LogoFull variant=\"white\" />\n    } else {\n      return <img src={logoPath.uri} alt=\"Custom logo\" />\n    }\n  },\n)\n\ntype SnackbarMessage = [string, NotificationLevel, SnackAction]\n\nconst App = observer(\n  ({\n    session,\n    HeaderButtons = <div />,\n  }: {\n    HeaderButtons?: React.ReactElement\n    session: SessionWithDrawerWidgets & {\n      savedSessionNames: string[]\n      menus: { label: string; menuItems: JBMenuItem[] }[]\n      renameCurrentSession: (arg: string) => void\n      snackbarMessages: SnackbarMessage[]\n      popSnackbarMessage: () => unknown\n    }\n  }) => {\n    const classes = useStyles()\n    const { pluginManager } = getEnv(session)\n    const viewTypes = pluginManager.getElementTypeRecord('view').all()\n    const [value, setValue] = useState(viewTypes[0]?.name)\n    const {\n      visibleWidget,\n      drawerWidth,\n      minimized,\n      activeWidgets,\n      savedSessionNames,\n      name,\n      menus,\n      views,\n      drawerPosition,\n    } = session\n\n    function handleNameChange(newName: string) {\n      if (savedSessionNames?.includes(newName)) {\n        session.notify(\n          `Cannot rename session to \"${newName}\", a saved session with that name already exists`,\n          'warning',\n        )\n      } else {\n        session.renameCurrentSession(newName)\n      }\n    }\n\n    const drawerVisible = visibleWidget && !minimized\n\n    let grid\n    if (drawerPosition === 'right') {\n      grid = [\n        `[main] 1fr`,\n        drawerVisible ? `[drawer] ${drawerWidth}px` : undefined,\n      ]\n    } else if (drawerPosition === 'left') {\n      grid = [\n        drawerVisible ? `[drawer] ${drawerWidth}px` : undefined,\n        `[main] 1fr`,\n      ]\n    }\n    return (\n      <div\n        className={classes.root}\n        style={{\n          gridTemplateColumns: grid?.filter(f => !!f).join(' '),\n        }}\n      >\n        {drawerVisible && drawerPosition === 'left' ? (\n          <DrawerWidget session={session} />\n        ) : null}\n\n        {session.DialogComponent ? (\n          <Suspense fallback={<div />}>\n            <session.DialogComponent {...session.DialogProps} />\n          </Suspense>\n        ) : null}\n        <div className={classes.menuBarAndComponents}>\n          <div className={classes.menuBar}>\n            <AppBar className={classes.appBar} position=\"static\">\n              <Toolbar>\n                {menus.map(menu => (\n                  <DropDownMenu\n                    key={menu.label}\n                    menuTitle={menu.label}\n                    menuItems={menu.menuItems}\n                    session={session}\n                  />\n                ))}\n                <div className={classes.grow} />\n                <Tooltip title=\"Rename Session\" arrow>\n                  <EditableTypography\n                    value={name}\n                    setValue={handleNameChange}\n                    variant=\"body1\"\n                    classes={{\n                      inputBase: classes.inputBase,\n                      inputRoot: classes.inputRoot,\n                      inputFocused: classes.inputFocused,\n                    }}\n                  />\n                </Tooltip>\n                {HeaderButtons}\n                <div className={classes.grow} />\n                <div style={{ width: 150, maxHeight: 48 }}>\n                  <Logo session={session} />\n                </div>\n              </Toolbar>\n            </AppBar>\n          </div>\n          <div className={classes.components}>\n            {views.length ? (\n              views.map(view => {\n                const viewType = pluginManager.getViewType(view.type)\n                if (!viewType) {\n                  throw new Error(`unknown view type ${view.type}`)\n                }\n                const { ReactComponent } = viewType\n                return (\n                  <ViewContainer\n                    key={`view-${view.id}`}\n                    view={view}\n                    onClose={() => session.removeView(view)}\n                  >\n                    <Suspense fallback={<div>Loading...</div>}>\n                      <ReactComponent\n                        model={view}\n                        session={session}\n                        getTrackType={pluginManager.getTrackType}\n                      />\n                    </Suspense>\n                  </ViewContainer>\n                )\n              })\n            ) : (\n              <Paper className={classes.selectPaper}>\n                <Typography>Select a view to launch</Typography>\n                <Select\n                  value={value}\n                  onChange={event => setValue(event.target.value)}\n                >\n                  {viewTypes.map(({ name }: { name: string }) => (\n                    <MenuItem key={name} value={name}>\n                      {name}\n                    </MenuItem>\n                  ))}\n                </Select>\n                <Button\n                  onClick={() => {\n                    session.addView(value, {})\n                  }}\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Launch view\n                </Button>\n              </Paper>\n            )}\n\n            {/* blank space at the bottom of screen allows scroll */}\n            <div style={{ height: 300 }} />\n          </div>\n        </div>\n\n        {activeWidgets.size > 0 && minimized ? (\n          <Tooltip title=\"Open drawer widget\">\n            <Fab\n              className={\n                drawerPosition === 'right' ? classes.fabRight : classes.fabLeft\n              }\n              color=\"primary\"\n              data-testid=\"drawer-maximize\"\n              onClick={() => session.showWidgetDrawer()}\n            >\n              <LaunchIcon />\n            </Fab>\n          </Tooltip>\n        ) : null}\n\n        {drawerVisible && drawerPosition === 'right' ? (\n          <DrawerWidget session={session} />\n        ) : null}\n\n        <Snackbar session={session} />\n      </div>\n    )\n  },\n)\n\nexport default App\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  IconButton,\n  Typography,\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst useStyles = makeStyles(theme => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}))\n\nfunction ReturnToImportFormDialog({\n  model,\n  handleClose,\n}: {\n  model: { clearView: Function }\n  handleClose: () => void\n}) {\n  const classes = useStyles()\n  return (\n    <Dialog maxWidth=\"xl\" open onClose={handleClose}>\n      <DialogTitle>\n        Reference sequence\n        {handleClose ? (\n          <IconButton\n            className={classes.closeButton}\n            onClick={() => handleClose()}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      <Divider />\n\n      <DialogContent>\n        <Typography>\n          Are you sure you want to return to the import form? This will lose\n          your current view\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            model.clearView()\n            handleClose()\n          }}\n          variant=\"contained\"\n          color=\"primary\"\n          autoFocus\n        >\n          OK\n        </Button>\n        <Button\n          onClick={() => handleClose()}\n          color=\"secondary\"\n          variant=\"contained\"\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default observer(ReturnToImportFormDialog)\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport ReactPropTypes from 'prop-types'\nimport React, { useRef, useEffect } from 'react'\nimport { drawImageOntoCanvasContext } from '../util/offscreenCanvasPonyfill'\n\nfunction PrerenderedCanvas(props: {\n  width: number\n  height: number\n  highResolutionScaling: number\n  style: any\n  imageData: any\n  showSoftClip?: boolean\n  blockKey?: string\n}) {\n  const {\n    width,\n    height,\n    highResolutionScaling,\n    style,\n    imageData,\n    blockKey,\n    showSoftClip,\n  } = props\n\n  const featureCanvas = useRef<HTMLCanvasElement>(null)\n\n  useEffect(() => {\n    if (!imageData) {\n      return\n    }\n    const canvas = featureCanvas.current\n    if (!canvas) {\n      return\n    }\n    const context = canvas.getContext('2d')\n    if (!context) {\n      return\n    }\n    drawImageOntoCanvasContext(imageData, context)\n  }, [imageData])\n\n  const softClipString = showSoftClip ? '_softclipped' : ''\n  const blockKeyStr = blockKey ? '_' + blockKey : ''\n  const testId = `prerendered_canvas${softClipString}${blockKeyStr}`\n  return (\n    <canvas\n      data-testid={testId}\n      ref={featureCanvas}\n      width={width * highResolutionScaling}\n      height={height * highResolutionScaling}\n      style={{ width, height, ...style }}\n    />\n  )\n}\n\nPrerenderedCanvas.propTypes = {\n  height: ReactPropTypes.number.isRequired,\n  width: ReactPropTypes.number.isRequired,\n  highResolutionScaling: ReactPropTypes.number,\n  style: ReactPropTypes.objectOf(ReactPropTypes.any),\n  imageData: ReactPropTypes.any,\n  // config: ReactPropTypes.objectOf(ReactPropTypes.any),\n}\nPrerenderedCanvas.defaultProps = {\n  imageData: undefined,\n  highResolutionScaling: 1,\n  style: {},\n  // config: {},\n}\n\nexport default PrerenderedCanvas\n","import React, { useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core'\nimport { observer } from 'mobx-react'\nimport { Feature } from '../util/simpleFeature'\nimport { readConfObject, AnyConfigurationModel } from '../configuration'\n\nconst useStyles = makeStyles({\n  hoverLabel: {\n    border: '1px solid black',\n    position: 'absolute',\n    background: '#fffa',\n    pointerEvents: 'none',\n    zIndex: 10000,\n  },\n})\n\nconst Tooltip = ({\n  offsetX,\n  offsetY,\n  configuration,\n  feature,\n  timeout = 300,\n}: {\n  offsetX: number\n  offsetY: number\n  configuration: AnyConfigurationModel\n  feature?: Feature\n  timeout?: number\n}) => {\n  const classes = useStyles()\n  const [shown, setShown] = useState(false)\n  useEffect(() => {\n    // only show the loading message after short timeout to prevent excessive\n    // flickering\n    const handle = setTimeout(() => setShown(true), timeout)\n    return () => clearTimeout(handle)\n  })\n  if (feature && shown) {\n    const text = readConfObject(configuration, 'mouseover', { feature })\n    return (\n      <div\n        className={classes.hoverLabel}\n        style={{ left: offsetX, top: offsetY }}\n      >\n        {text}\n      </div>\n    )\n  }\n  return null\n}\n\nexport default observer(Tooltip)\n","/* eslint-disable no-underscore-dangle */\n/**\n * Heavily based on [quick-lru](https://www.npmjs.com/package/quick-lru)\n * (quick-lru didn't work for us because the export wouldn't compile in Webpack\n * properly)\n */\nclass QuickLRU {\n  constructor(options = {}) {\n    if (!(options.maxSize && options.maxSize > 0)) {\n      throw new TypeError('`maxSize` must be a number greater than 0')\n    }\n\n    this.maxSize = options.maxSize\n    this.cache = new Map()\n    this.oldCache = new Map()\n    this._size = 0\n  }\n\n  _set(key, value) {\n    this.cache.set(key, value)\n    this._size += 1\n\n    if (this._size >= this.maxSize) {\n      this._size = 0\n      this.oldCache = this.cache\n      this.cache = new Map()\n    }\n  }\n\n  get(key) {\n    if (this.cache.has(key)) {\n      return this.cache.get(key)\n    }\n\n    if (this.oldCache.has(key)) {\n      const value = this.oldCache.get(key)\n      this.oldCache.delete(key)\n      this._set(key, value)\n      return value\n    }\n\n    return undefined\n  }\n\n  set(key, value) {\n    if (this.cache.has(key)) {\n      this.cache.set(key, value)\n    } else {\n      this._set(key, value)\n    }\n\n    return this\n  }\n\n  has(key) {\n    return this.cache.has(key) || this.oldCache.has(key)\n  }\n\n  peek(key) {\n    if (this.cache.has(key)) {\n      return this.cache.get(key)\n    }\n\n    if (this.oldCache.has(key)) {\n      return this.oldCache.get(key)\n    }\n\n    return undefined\n  }\n\n  delete(key) {\n    const deleted = this.cache.delete(key)\n    if (deleted) {\n      this._size -= 1\n    }\n\n    return this.oldCache.delete(key) || deleted\n  }\n\n  clear() {\n    this.cache.clear()\n    this.oldCache.clear()\n    this._size = 0\n  }\n\n  *keys() {\n    for (const [key] of this) {\n      yield key\n    }\n  }\n\n  *values() {\n    for (const [, value] of this) {\n      yield value\n    }\n  }\n\n  *[Symbol.iterator]() {\n    for (const item of this.cache) {\n      yield item\n    }\n\n    for (const item of this.oldCache) {\n      const [key] = item\n      if (!this.cache.has(key)) {\n        yield item\n      }\n    }\n  }\n\n  get size() {\n    let oldCacheSize = 0\n    for (const key of this.oldCache.keys()) {\n      if (!this.cache.has(key)) {\n        oldCacheSize += 1\n      }\n    }\n\n    return this._size + oldCacheSize\n  }\n}\n\nexport default QuickLRU\n","import { Observable, fromEvent } from 'rxjs'\n\nclass AbortError extends Error {\n  public code: string | undefined\n}\n\n/**\n * properly check if the given AbortSignal is aborted.\n * per the standard, if the signal reads as aborted,\n * this function throws either a DOMException AbortError, or a regular error\n * with a `code` attribute set to `ERR_ABORTED`.\n *\n * for convenience, passing `undefined` is a no-op\n *\n * @param signal -\n * @returns nothing\n */\nexport function checkAbortSignal(signal?: AbortSignal): void {\n  if (!signal) {\n    return\n  }\n\n  if (!(signal instanceof AbortSignal)) {\n    throw new TypeError('must pass an AbortSignal')\n  }\n\n  if (signal.aborted) {\n    throw makeAbortError()\n  }\n}\n\nfunction timeout(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n/**\n * Skips to the next tick, then runs `checkAbortSignal`.\n * Await this to inside an otherwise synchronous loop to\n * provide a place to break when an abort signal is received.\n */\nexport async function abortBreakPoint(signal?: AbortSignal) {\n  // it was observed that an actual timeout is needed to get the aborting (wrap\n  // hicrenderer in a try catch, console.error the error, and rethrow the error\n  // to see). using await Promise.resolve() did not appear to allow aborting to\n  // occur\n  await timeout(1)\n  checkAbortSignal(signal)\n}\n\nexport function makeAbortError() {\n  if (typeof DOMException !== 'undefined') {\n    return new DOMException('aborted', 'AbortError')\n  }\n  const e = new AbortError('aborted')\n  e.code = 'ERR_ABORTED'\n  return e\n}\n\nexport function observeAbortSignal(signal?: AbortSignal): Observable<Event> {\n  if (!signal) {\n    return Observable.create()\n  }\n  return fromEvent(signal, 'abort')\n}\n\n/**\n * check if the given exception was caused by an operation being intentionally aborted\n * @param exception -\n */\nexport function isAbortException(exception: unknown): boolean {\n  return (\n    exception instanceof Error &&\n    // DOMException\n    (exception.name === 'AbortError' ||\n      // standard-ish non-DOM abort exception\n      (exception as AbortError).code === 'ERR_ABORTED' ||\n      // message contains aborted for bubbling through RPC\n      // things we have seen that we want to catch here\n      // Error: aborted\n      // AbortError: aborted\n      // AbortError: The user aborted a request.\n      !!exception.message.match(/\\b(aborted|AbortError)\\b/i))\n  )\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { getSerializedSvg } from './svg'\nimport { Command, isMethodCall, MethodName, SetterName } from './types'\n\n/** get the params type of real method in OffscreenCanvasRenderingContext2D */\ntype RealP<METHODNAME extends keyof OffscreenCanvasRenderingContext2D> =\n  OffscreenCanvasRenderingContext2D[METHODNAME] extends (...arg0: any[]) => any\n    ? Parameters<OffscreenCanvasRenderingContext2D[METHODNAME]>\n    : never\n\n/** get the return type of real method in OffscreenCanvasRenderingContext2D */\ntype RealRet<METHODNAME extends keyof OffscreenCanvasRenderingContext2D> =\n  OffscreenCanvasRenderingContext2D[METHODNAME] extends (...arg0: any[]) => any\n    ? ReturnType<OffscreenCanvasRenderingContext2D[METHODNAME]>\n    : never\n\n/** get the type of the params of a method of the canvas shim */\nexport type ShimP<\n  METHODNAME extends keyof OffscreenCanvasRenderingContext2DShim,\n> = OffscreenCanvasRenderingContext2DShim[METHODNAME] extends (\n  ...arg0: any[]\n) => any\n  ? Parameters<OffscreenCanvasRenderingContext2DShim[METHODNAME]>\n  : never\n\n/** decode all the commands in the given buffer and replay them onto the given context */\nexport function replayCommandsOntoContext(\n  targetContext: CanvasRenderingContext2D,\n  encodedCommands: Iterable<Command>,\n) {\n  for (const command of encodedCommands) {\n    if (isMethodCall(command)) {\n      // @ts-ignore\n      // eslint-disable-next-line prefer-spread\n      targetContext[command.name].apply(targetContext, command.args)\n    } else {\n      // @ts-ignore\n      targetContext[command.name] = command.args[0]\n    }\n  }\n}\n\nexport default class OffscreenCanvasRenderingContext2DShim {\n  width: number\n  height: number\n\n  currentFont = '12px Courier New, monospace'\n  currentStrokeStyle = ''\n  currentFillStyle = ''\n\n  recordedCommands: Command[] = []\n\n  constructor(width: number, height: number) {\n    this.width = width\n    this.height = height\n  }\n\n  private pushMethodCall(name: MethodName, args: unknown[]) {\n    this.recordedCommands.push({ name, args })\n  }\n\n  private pushSetterCall(name: SetterName, arg: unknown) {\n    this.recordedCommands.push({ name, args: [arg] })\n  }\n\n  getSerializedCommands() {\n    return this.recordedCommands\n  }\n\n  getSerializedSvg() {\n    return getSerializedSvg(this)\n  }\n\n  getCommands() {\n    return this.recordedCommands\n  }\n\n  // setters (no getters working)\n  set strokeStyle(style: string) {\n    if (style !== this.currentStrokeStyle) {\n      this.pushSetterCall('strokeStyle', style)\n      this.currentStrokeStyle = style\n    }\n  }\n\n  set fillStyle(style: string) {\n    if (style !== this.currentFillStyle) {\n      this.pushSetterCall('fillStyle', style)\n      this.currentFillStyle = style\n    }\n  }\n\n  set font(style: string) {\n    this.currentFont = style\n    this.pushSetterCall('font', style)\n  }\n\n  // methods\n  arc(...args: RealP<'arc'>): RealRet<'arc'> {\n    this.pushMethodCall('arc', args)\n  }\n\n  arcTo(...args: RealP<'arcTo'>): RealRet<'arcTo'> {\n    this.pushMethodCall('arcTo', args)\n  }\n\n  beginPath(...args: RealP<'beginPath'>): RealRet<'beginPath'> {\n    this.pushMethodCall('beginPath', args)\n  }\n\n  clearRect(...args: RealP<'clearRect'>): RealRet<'clearRect'> {\n    this.pushMethodCall('clearRect', args)\n  }\n\n  closePath(...args: RealP<'closePath'>): RealRet<'closePath'> {\n    this.pushMethodCall('closePath', args)\n  }\n\n  ellipse(...args: RealP<'ellipse'>): RealRet<'ellipse'> {\n    this.pushMethodCall('ellipse', args)\n  }\n\n  fill(...args: RealP<'fill'>): RealRet<'fill'> {\n    this.pushMethodCall('fill', args)\n  }\n\n  fillRect(...args: RealP<'fillRect'>): RealRet<'fillRect'> {\n    const [x, y, w, h] = args\n    if (x > this.width || x + w < 0) {\n      return\n    }\n    const nx = Math.max(x, 0)\n    const nw = w - (nx - x)\n    this.pushMethodCall('fillRect', [nx, y, nw, h])\n  }\n\n  fillText(...args: RealP<'fillText'>): RealRet<'fillText'> {\n    // if (x > this.width || x + 1000 < 0) {\n    //   return\n    // }\n    this.pushMethodCall('fillText', args)\n  }\n\n  lineTo(...args: RealP<'lineTo'>): RealRet<'lineTo'> {\n    this.pushMethodCall('lineTo', args)\n  }\n\n  measureText(...args: RealP<'measureText'>) {\n    const [text] = args\n    const height = Number((this.currentFont.match(/\\d+/) || [])[0])\n    return {\n      width: (height / 2) * text.length,\n      height,\n    }\n  }\n\n  moveTo(...args: RealP<'moveTo'>): RealRet<'moveTo'> {\n    this.pushMethodCall('moveTo', args)\n  }\n\n  quadraticCurveTo(\n    ...args: RealP<'quadraticCurveTo'>\n  ): RealRet<'quadraticCurveTo'> {\n    this.pushMethodCall('quadraticCurveTo', args)\n  }\n\n  rect(...args: RealP<'rect'>): RealRet<'rect'> {\n    this.pushMethodCall('rect', args)\n  }\n\n  restore(...args: RealP<'restore'>): RealRet<'restore'> {\n    this.pushMethodCall('restore', args)\n  }\n\n  rotate(...args: RealP<'rotate'>): RealRet<'rotate'> {\n    this.pushMethodCall('rotate', args)\n  }\n\n  save(...args: RealP<'save'>): RealRet<'save'> {\n    this.pushMethodCall('save', args)\n  }\n\n  setTransform(...args: RealP<'setTransform'>): RealRet<'setTransform'> {\n    this.pushMethodCall('setTransform', args)\n  }\n\n  scale(...args: RealP<'scale'>): RealRet<'scale'> {\n    this.pushMethodCall('scale', args)\n  }\n\n  //* shim does not support passing a Path2D object */\n  stroke(): RealRet<'stroke'> {\n    this.pushMethodCall('stroke', [])\n  }\n\n  strokeRect(...args: RealP<'strokeRect'>): RealRet<'strokeRect'> {\n    this.pushMethodCall('strokeRect', args)\n  }\n\n  strokeText(...args: RealP<'strokeText'>): RealRet<'strokeText'> {\n    this.pushMethodCall('strokeText', args)\n  }\n\n  transform(...args: RealP<'transform'>): RealRet<'transform'> {\n    this.pushMethodCall('transform', args)\n  }\n\n  translate(...args: RealP<'translate'>): RealRet<'translate'> {\n    this.pushMethodCall('translate', args)\n  }\n}\n","import OffscreenCanvasRenderingContext2DShim from './Canvas2DContextShim'\n\nexport default class OffscreenCanvasShim {\n  width: number\n  height: number\n  context: OffscreenCanvasRenderingContext2DShim\n\n  constructor(width: number, height: number) {\n    this.width = width\n    this.height = height\n    this.context = new OffscreenCanvasRenderingContext2DShim(\n      this.width,\n      this.height,\n    )\n  }\n\n  getContext(type: '2d') {\n    if (type !== '2d') {\n      throw new Error(`unknown type ${type}`)\n    }\n    return this.context\n  }\n\n  toDataURL(): string {\n    throw new Error('not supported')\n  }\n\n  getSerializedSvg() {\n    return this.context?.getSerializedSvg()\n  }\n}\n","// This file is a ponyfill for the HTML5 OffscreenCanvas API.\n\nimport isNode from 'detect-node'\nimport OffscreenCanvasShim from './CanvasShim'\n\nimport {\n  AbstractCanvas,\n  AbstractImageBitmap,\n  CanvasImageDataShim,\n  isCanvasImageDataShim,\n} from './types'\nimport type {\n  createCanvas as NodeCreateCanvas,\n  Canvas as NodeCanvas,\n} from 'canvas'\nimport { replayCommandsOntoContext } from './Canvas2DContextShim/context'\n\nexport let createCanvas: (width: number, height: number) => AbstractCanvas\nexport let createImageBitmap: (\n  canvas: AbstractCanvas,\n) => Promise<AbstractImageBitmap>\n\n/** the JS class (constructor) for offscreen-generated image bitmap data */\nexport let ImageBitmapType: Function\n\nexport function drawImageOntoCanvasContext(\n  imageData: AbstractImageBitmap,\n  context: CanvasRenderingContext2D,\n) {\n  if (isCanvasImageDataShim(imageData)) {\n    replayCommandsOntoContext(context, imageData.serializedCommands)\n  } else if (imageData instanceof ImageBitmapType) {\n    context.drawImage(imageData as CanvasImageSource, 0, 0)\n    // @ts-ignore\n  } else if (imageData.dataURL) {\n    throw new Error('dataURL deserialization no longer supported')\n    // const img = new Image()\n    // img.onload = () => context.drawImage(img, 0, 0)\n    // img.src = imageData.dataURL\n  }\n}\n\nconst weHave = {\n  realOffscreenCanvas: typeof OffscreenCanvas === 'function',\n  node: isNode,\n}\nif (weHave.realOffscreenCanvas) {\n  createCanvas = (width, height) => new OffscreenCanvas(width, height)\n  // @ts-ignore\n  // eslint-disable-next-line no-restricted-globals\n  createImageBitmap = window.createImageBitmap || self.createImageBitmap\n  // eslint-disable-next-line no-restricted-globals\n  ImageBitmapType = window.ImageBitmap || self.ImageBitmap\n} else if (weHave.node) {\n  // use node-canvas if we are running in node (i.e. automated tests)\n  const { createCanvas: nodeCreateCanvas, Image } = require('canvas')\n  createCanvas = nodeCreateCanvas as typeof NodeCreateCanvas\n  createImageBitmap = async (canvas, ...otherargs) => {\n    if (otherargs.length) {\n      throw new Error(\n        'only one-argument uses of createImageBitmap are supported by the node offscreencanvas ponyfill',\n      )\n    }\n    const dataUri = (canvas as NodeCanvas).toDataURL()\n    const img = new Image()\n    return new Promise((resolve, reject) => {\n      img.onload = () => resolve(img)\n      img.onerror = reject\n      img.src = dataUri\n    })\n  }\n  ImageBitmapType = Image\n} else {\n  createCanvas = (width, height) => {\n    return new OffscreenCanvasShim(width, height)\n  }\n  createImageBitmap = async canvas => {\n    const ctx = (canvas as OffscreenCanvasShim).getContext('2d')\n    const d: CanvasImageDataShim = {\n      height: ctx.height,\n      width: ctx.width,\n      serializedCommands: ctx.getSerializedCommands(),\n      containsNoTransferables: true,\n    }\n    return d\n  }\n  ImageBitmapType = String\n}\n","import OffscreenCanvasShim from './CanvasShim'\nimport OffscreenCanvasRenderingContext2DShim from './Canvas2DContextShim'\nimport type * as NodeCanvas from 'canvas'\nimport isObject from 'is-object'\nimport { Command } from './Canvas2DContextShim/types'\n\nexport type AbstractCanvas =\n  | OffscreenCanvas\n  | OffscreenCanvasShim\n  | NodeCanvas.Canvas\n\nexport type Abstract2DCanvasContext =\n  | OffscreenCanvasRenderingContext2D\n  | OffscreenCanvasRenderingContext2DShim\n\nexport type AbstractImageBitmap = Pick<ImageBitmap, 'height' | 'width'>\n\n/** a plain-object (JSON) serialization of a OffscreenCanvasRenderingContext2DShim */\nexport interface CanvasImageDataShim {\n  serializedCommands: Command[]\n  containsNoTransferables: true\n  height: number\n  width: number\n}\n\nexport function isCanvasImageDataShim(\n  thing: unknown,\n): thing is CanvasImageDataShim {\n  return (\n    isObject(thing) &&\n    'height' in thing &&\n    'serializedCommands' in thing &&\n    Array.isArray(thing.serializedCommands)\n  )\n}\n","import React from 'react'\nimport { createCanvas, createImageBitmap } from './ponyfill'\nimport OffscreenCanvasShim from './CanvasShim'\nimport { blobToDataURL } from '..'\n\nexport * from './CanvasShim'\n\nexport async function renderToAbstractCanvas(\n  width: number,\n  height: number,\n  opts: {\n    exportSVG?: { rasterizeLayers?: boolean }\n    highResolutionScaling: number\n  },\n  cb: Function,\n) {\n  const { exportSVG, highResolutionScaling = 1 } = opts\n  if (exportSVG && !exportSVG.rasterizeLayers) {\n    const fakeCanvas = new OffscreenCanvasShim(width, height)\n    const fakeCtx = fakeCanvas.getContext('2d')\n    await cb(fakeCtx)\n    return {\n      reactElement: fakeCanvas.getSerializedSvg(),\n    }\n  }\n  if (exportSVG && exportSVG.rasterizeLayers) {\n    const scale = 4\n    const canvas = createCanvas(Math.ceil(width * scale), height * scale)\n    const ctx = canvas.getContext('2d')\n    if (!ctx) {\n      throw new Error('2d canvas rendering not supported on this platform')\n    }\n    ctx.scale(scale, scale)\n    await cb(ctx)\n\n    // two methods needed for converting canvas to PNG, one for webworker\n    // offscreen canvas, one for main thread\n    return {\n      reactElement: (\n        <image\n          width={width}\n          height={height}\n          xlinkHref={\n            'convertToBlob' in canvas\n              ? await blobToDataURL(\n                  await canvas.convertToBlob({\n                    type: 'image/png',\n                  }),\n                )\n              : canvas.toDataURL()\n          }\n        />\n      ),\n    }\n  }\n\n  const canvas = createCanvas(\n    Math.ceil(width * highResolutionScaling),\n    height * highResolutionScaling,\n  )\n  const ctx = canvas.getContext('2d')\n  if (!ctx) {\n    throw new Error('2d canvas rendering not supported on this platform')\n  }\n  ctx.scale(highResolutionScaling, highResolutionScaling)\n  await cb(ctx)\n\n  return { imageData: await createImageBitmap(canvas) }\n}\n","import React from 'react'\nimport {\n  isStateTreeNode,\n  Instance,\n  SnapshotIn,\n  IAnyStateTreeNode,\n} from 'mobx-state-tree'\nimport { AnyConfigurationModel } from '../../configuration/configurationSchema'\n\nimport assemblyManager from '../../assemblyManager'\nimport TextSearchManager from '../../TextSearch/TextSearchManager'\nimport { MenuItem } from '../../ui'\nimport {\n  NoAssemblyRegion as MUNoAssemblyRegion,\n  Region as MUIRegion,\n  LocalPathLocation as MULocalPathLocation,\n  UriLocation as MUUriLocation,\n  BlobLocation as MUBlobLocation,\n} from './mst'\nimport RpcManager from '../../rpc/RpcManager'\nimport { Feature } from '../simpleFeature'\nimport { BaseInternetAccountModel } from '../../pluggableElementTypes/models'\n\nexport * from './util'\n\n/** abstract type for a model that contains multiple views */\nexport interface AbstractViewContainer extends IAnyStateTreeNode {\n  views: AbstractViewModel[]\n  removeView(view: AbstractViewModel): void\n  addView(\n    typeName: string,\n    initialState: Record<string, unknown>,\n  ): void | AbstractViewModel\n}\nexport function isViewContainer(\n  thing: unknown,\n): thing is AbstractViewContainer {\n  return (\n    isStateTreeNode(thing) &&\n    'removeView' in thing &&\n    'addView' in thing &&\n    'views' in thing\n  )\n}\n\nexport type NotificationLevel = 'error' | 'info' | 'warning' | 'success'\nexport interface SnackAction {\n  name: string\n  onClick: () => void\n}\n\nexport type AssemblyManager = Instance<ReturnType<typeof assemblyManager>>\nexport type { TextSearchManager }\nexport interface BasePlugin {\n  version?: string\n  name: string\n  url?: string\n}\n\nexport interface JBrowsePlugin {\n  name: string\n  authors: string[]\n  description: string\n  location: string\n  url?: string\n  umdUrl?: string\n  esmUrl?: string\n  cjsUrl?: string\n  license: string\n  image?: string\n}\n\nexport type DialogComponentType =\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  | React.LazyExoticComponent<React.FC<any>>\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  | React.FC<any>\n\n/** minimum interface that all session state models must implement */\nexport interface AbstractSessionModel extends AbstractViewContainer {\n  setSelection(feature: Feature): void\n  clearSelection(): void\n  configuration: AnyConfigurationModel\n  rpcManager: RpcManager\n  assemblyNames: string[]\n  assemblies: AnyConfigurationModel[]\n  selection?: unknown\n  duplicateCurrentSession?(): void\n  notify(message: string, level?: NotificationLevel, action?: SnackAction): void\n  assemblyManager: AssemblyManager\n  version: string\n  getTrackActionMenuItems?: Function\n  addAssembly?: Function\n  removeAssembly?: Function\n  textSearchManager?: TextSearchManager\n  connections: AnyConfigurationModel[]\n  deleteConnection?: Function\n  sessionConnections?: AnyConfigurationModel[]\n  connectionInstances?: { name: string }[]\n  makeConnection?: Function\n  adminMode?: boolean\n  showWidget?: Function\n  addWidget?: Function\n\n  DialogComponent?: DialogComponentType\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  DialogProps: any\n  queueDialog: (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callback: (doneCallback: Function) => [DialogComponentType, any],\n  ) => void\n  name: string\n  id?: string\n}\nexport function isSessionModel(thing: unknown): thing is AbstractSessionModel {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'rpcManager' in thing &&\n    'configuration' in thing\n  )\n}\n\n/** abstract interface for a session allows editing configurations */\nexport interface SessionWithConfigEditing extends AbstractSessionModel {\n  editConfiguration(configuration: AnyConfigurationModel): void\n}\nexport function isSessionModelWithConfigEditing(\n  thing: unknown,\n): thing is SessionWithConfigEditing {\n  return isSessionModel(thing) && 'editConfiguration' in thing\n}\n\n/** abstract interface for a session allows adding tracks */\nexport interface SessionWithConfigEditing extends AbstractSessionModel {\n  addTrackConf(\n    configuration: AnyConfigurationModel | SnapshotIn<AnyConfigurationModel>,\n  ): void\n}\nexport function isSessionWithAddTracks(\n  thing: unknown,\n): thing is SessionWithConfigEditing {\n  return isSessionModel(thing) && 'addTrackConf' in thing\n}\n\nexport interface Widget {\n  type: string\n  id: string\n}\n\n/** abstract interface for a session that manages widgets */\nexport interface SessionWithWidgets extends AbstractSessionModel {\n  minimized: boolean\n  visibleWidget?: Widget\n  widgets: Map<string, Widget>\n  activeWidgets: Map<string, Widget>\n  addWidget(\n    typeName: string,\n    id: string,\n    initialState?: Record<string, unknown>,\n    configuration?: { type: string },\n  ): Widget\n  showWidget(widget: unknown): void\n  hideWidget(widget: unknown): void\n}\n\n/* only some sessions with widgets use a drawer widget */\nexport interface SessionWithDrawerWidgets extends SessionWithWidgets {\n  drawerWidth: number\n  resizeDrawer(arg: number): number\n  minimizeWidgetDrawer(): void\n  showWidgetDrawer: () => void\n  drawerPosition: string\n  setDrawerPosition(arg: string): void\n}\n\nexport function isSessionModelWithWidgets(\n  thing: unknown,\n): thing is SessionWithWidgets {\n  return isSessionModel(thing) && 'widgets' in thing\n}\n\nexport interface SessionWithSessionPlugins extends AbstractSessionModel {\n  sessionPlugins: JBrowsePlugin[]\n  addSessionPlugin: Function\n  removeSessionPlugin: Function\n}\nexport function isSessionWithSessionPlugins(\n  thing: unknown,\n): thing is SessionWithSessionPlugins {\n  return isSessionModel(thing) && 'sessionPlugins' in thing\n}\n\n/** abstract interface for a session that manages a global selection */\nexport interface SelectionContainer extends AbstractSessionModel {\n  selection?: unknown\n  setSelection(thing: unknown): void\n}\nexport function isSelectionContainer(\n  thing: unknown,\n): thing is SelectionContainer {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'selection' in thing &&\n    'setSelection' in thing\n  )\n}\n\n/** minimum interface that all view state models must implement */\nexport interface AbstractViewModel {\n  id: string\n  type: string\n  width: number\n  setWidth(width: number): void\n  displayName: string | undefined\n  setDisplayName: (arg: string) => void\n  menuItems: () => MenuItem[]\n}\nexport function isViewModel(thing: unknown): thing is AbstractViewModel {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'width' in thing &&\n    'setWidth' in thing\n  )\n}\n\ntype AbstractTrackModel = {}\nexport function isTrackModel(thing: unknown): thing is AbstractTrackModel {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'configuration' in thing &&\n    // @ts-ignore\n    thing.configuration.trackId\n  )\n}\n\nexport interface AbstractDisplayModel {\n  id: string\n  parentTrack: AbstractTrackModel\n  renderDelay: number\n  rendererType: any // eslint-disable-line @typescript-eslint/no-explicit-any\n  cannotBeRenderedReason?: string\n}\nexport function isDisplayModel(thing: unknown): thing is AbstractDisplayModel {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'configuration' in thing &&\n    // @ts-ignore\n    thing.configuration.displayId\n  )\n}\n\nexport interface TrackViewModel extends AbstractViewModel {\n  showTrack(trackId: string): void\n  hideTrack(trackId: string): void\n}\nexport function isTrackViewModel(thing: unknown): thing is TrackViewModel {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'showTrack' in thing &&\n    'hideTrack' in thing\n  )\n}\n\n/** minimum interface for the root MST model of a JBrowse app */\nexport interface AbstractRootModel {\n  jbrowse: IAnyStateTreeNode\n  session?: AbstractSessionModel\n  setDefaultSession?(): void\n  adminMode?: boolean\n  error?: unknown\n}\n\n/** root model with more included for the heavier JBrowse web and desktop app */\nexport interface AppRootModel extends AbstractRootModel {\n  isAssemblyEditing: boolean\n  isDefaultSessionEditing: boolean\n  setAssemblyEditing: (arg: boolean) => boolean\n  setDefaultSessionEditing: (arg: boolean) => boolean\n  internetAccounts: BaseInternetAccountModel[]\n  findAppropriateInternetAccount(\n    location: UriLocation,\n  ): BaseInternetAccountModel | undefined\n}\n\nexport function isAppRootModel(thing: unknown): thing is AppRootModel {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'isAssemblyEditing' in thing &&\n    'findAppropriateInternetAccount' in thing\n  )\n}\n\n/** a root model that manages global menus */\nexport interface AbstractMenuManager {\n  appendMenu(menuName: string): void\n  insertMenu(menuName: string, position: number): number\n  insertInMenu(menuName: string, menuItem: MenuItem, position: number): number\n  appendToMenu(menuName: string, menuItem: MenuItem): number\n  appendToSubMenu(menuPath: string[], menuItem: MenuItem): number\n  insertInSubMenu(\n    menuPath: string[],\n    menuItem: MenuItem,\n    position: number,\n  ): number\n}\nexport function isAbstractMenuManager(\n  thing: unknown,\n): thing is AbstractMenuManager {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'appendMenu' in thing &&\n    'appendToSubMenu' in thing\n  )\n}\n\n// Empty interfaces required by mobx-state-tree\n// See https://mobx-state-tree.js.org/tips/typescript#using-a-mst-type-at-design-time\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\nexport interface NoAssemblyRegion\n  extends SnapshotIn<typeof MUNoAssemblyRegion> {}\n\nexport interface Region extends SnapshotIn<typeof MUIRegion> {}\n\nexport interface AugmentedRegion extends Region {\n  originalRefName?: string\n}\n\nexport interface LocalPathLocation\n  extends SnapshotIn<typeof MULocalPathLocation> {}\n\nexport interface UriLocation extends SnapshotIn<typeof MUUriLocation> {}\n\nexport function isUriLocation(location: unknown): location is UriLocation {\n  return (\n    typeof location === 'object' &&\n    location !== null &&\n    'locationType' in location &&\n    'uri' in location\n  )\n}\nexport class AuthNeededError extends Error {\n  constructor(public message: string, public url: string) {\n    super(message)\n    this.name = 'AuthNeededError'\n\n    Object.setPrototypeOf(this, AuthNeededError.prototype)\n  }\n}\n\nexport class RetryError extends Error {\n  constructor(public message: string, public internetAccountId: string) {\n    super(message)\n    this.name = 'RetryError'\n  }\n}\n\nexport function isAuthNeededException(\n  exception: unknown,\n): exception is AuthNeededError {\n  return (\n    exception instanceof Error &&\n    // DOMException\n    (exception.name === 'AuthNeededError' ||\n      (exception as AuthNeededError).url !== undefined)\n  )\n}\n\nexport function isRetryException(exception: Error): boolean {\n  return (\n    // DOMException\n    exception.name === 'RetryError' ||\n    (exception as RetryError).internetAccountId !== undefined\n  )\n}\n\nexport interface BlobLocation extends SnapshotIn<typeof MUBlobLocation> {}\n\nexport type FileLocation = LocalPathLocation | UriLocation | BlobLocation\n\n// These types are slightly different than the MST models representing a\n// location because a blob cannot be stored in a MST, so this is the\n// pre-processed file location\nexport type PreUriLocation = { uri: string }\nexport type PreLocalPathLocation = { localPath: string }\nexport type PreBlobLocation = { blob: File }\nexport type PreFileLocation =\n  | PreUriLocation\n  | PreLocalPathLocation\n  | PreBlobLocation\n","import { when as mobxWhen } from 'mobx'\nimport { makeAbortError } from './aborting'\n\ninterface WhenOpts {\n  timeout?: number\n  signal?: AbortSignal\n  name?: string\n}\n\n/**\n * Wrapper for mobx `when` that adds timeout and aborting support.\n */\nexport function when(\n  getter: () => boolean,\n  { timeout, signal, name }: WhenOpts = {},\n) {\n  return new Promise((resolve, reject) => {\n    let finished = false\n\n    const whenPromise = mobxWhen(getter)\n\n    // set up timeout\n    let timeoutId: ReturnType<typeof setTimeout> | undefined\n    let finishTimeout = () => {}\n    if (timeout) {\n      timeoutId = setTimeout(() => {\n        if (!finished) {\n          finished = true\n          whenPromise.cancel()\n          reject(new Error(`timed out waiting for ${name || 'whenPresent'}`))\n        }\n      }, timeout)\n      finishTimeout = () => timeoutId && clearTimeout(timeoutId)\n    }\n\n    // set up aborting\n    if (signal) {\n      signal.addEventListener('abort', () => {\n        if (!finished) {\n          finished = true\n\n          // mobx when supports a cancel method\n          whenPromise.cancel()\n          finishTimeout()\n\n          reject(makeAbortError())\n        }\n      })\n    }\n\n    whenPromise\n      .then(() => {\n        if (!finished) {\n          finished = true\n          finishTimeout()\n\n          resolve(true)\n        }\n      })\n      .catch(err => {\n        if (!finished) {\n          finished = true\n          finishTimeout()\n\n          reject(err)\n        }\n      })\n  })\n}\n\n/**\n * Wrapper for mobx `when` that makes a promise for the return value\n * of the given function at the point in time when it becomes not\n * undefined and not null.\n */\nexport async function whenPresent<FUNCTION extends () => unknown>(\n  getter: FUNCTION,\n  opts: WhenOpts = {},\n): Promise<NonNullable<ReturnType<FUNCTION>>> {\n  await when(() => {\n    const val = getter()\n    return val !== undefined && val !== null\n  }, opts)\n\n  return getter() as NonNullable<ReturnType<FUNCTION>>\n}\n","import { types, IAnyType, isModelType, isType } from 'mobx-state-tree'\n\n// Pluggable elements\nimport PluggableElementBase from './pluggableElementTypes/PluggableElementBase'\nimport RendererType from './pluggableElementTypes/renderers/RendererType'\nimport AdapterType from './pluggableElementTypes/AdapterType'\nimport TrackType from './pluggableElementTypes/TrackType'\nimport DisplayType from './pluggableElementTypes/DisplayType'\nimport ViewType from './pluggableElementTypes/ViewType'\nimport WidgetType from './pluggableElementTypes/WidgetType'\nimport ConnectionType from './pluggableElementTypes/ConnectionType'\nimport RpcMethodType from './pluggableElementTypes/RpcMethodType'\nimport InternetAccountType from './pluggableElementTypes/InternetAccountType'\nimport TextSearchAdapterType from './pluggableElementTypes/TextSearchAdapterType'\n\nimport {\n  ConfigurationSchema,\n  isBareConfigurationSchemaType,\n} from './configuration'\n\nimport Plugin from './Plugin'\nimport ReExports from './ReExports'\n\nimport {\n  PluggableElementType,\n  PluggableElementMember,\n} from './pluggableElementTypes'\nimport { AbstractRootModel } from './util'\nimport CorePlugin from './CorePlugin'\nimport createJexlInstance from './util/jexl'\nimport { PluginDefinition } from './PluginLoader'\n\n/** little helper class that keeps groups of callbacks that are\nthen run in a specified order by group */\nclass PhasedScheduler<PhaseName extends string> {\n  phaseCallbacks = new Map<PhaseName, Function[]>()\n\n  phaseOrder: PhaseName[] = []\n\n  constructor(...phaseOrder: PhaseName[]) {\n    this.phaseOrder = phaseOrder\n  }\n\n  add(phase: PhaseName, callback: Function) {\n    if (!this.phaseOrder.includes(phase)) {\n      throw new Error(`unknown phase ${phase}`)\n    }\n    let phaseCallbacks = this.phaseCallbacks.get(phase)\n    if (!phaseCallbacks) {\n      phaseCallbacks = []\n      this.phaseCallbacks.set(phase, phaseCallbacks)\n    }\n    phaseCallbacks.push(callback)\n  }\n\n  run() {\n    this.phaseOrder.forEach(phaseName => {\n      this.phaseCallbacks.get(phaseName)?.forEach(callback => callback())\n    })\n  }\n}\n\ntype PluggableElementTypeGroup =\n  | 'renderer'\n  | 'adapter'\n  | 'display'\n  | 'track'\n  | 'connection'\n  | 'view'\n  | 'widget'\n  | 'rpc method'\n  | 'internet account'\n  | 'text search adapter'\n\n/** internal class that holds the info for a certain element type */\nclass TypeRecord<ElementClass extends PluggableElementBase> {\n  registeredTypes: { [name: string]: ElementClass } = {}\n\n  constructor(\n    public typeName: string,\n    public baseClass: // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    | { new (...args: any[]): ElementClass }\n      // covers abstract class case\n      | (Function & {\n          prototype: ElementClass\n        }),\n  ) {}\n\n  add(name: string, t: ElementClass) {\n    this.registeredTypes[name] = t\n  }\n\n  has(name: string) {\n    return name in this.registeredTypes\n  }\n\n  get(name: string) {\n    if (!this.has(name)) {\n      throw new Error(\n        `${this.typeName} '${name}' not found, perhaps its plugin is not loaded or its plugin has not added it.`,\n      )\n    }\n    return this.registeredTypes[name]\n  }\n\n  all() {\n    return Object.values(this.registeredTypes)\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AnyFunction = (...args: any) => any\n\n/**\n * free-form string-to-unknown mapping of metadata related to the instance\n * of this plugin. `isCore` is typically set to `Boolean(true)` if the plugin was\n * loaded as part of the \"core\" set of plugins for this application.\n * Can also use this metadata to stash other things about why the plugin is\n * loaded, such as where it came from, what plugin depends on it, etc.\n */\nexport type PluginMetadata = Record<string, unknown>\n\nexport interface PluginLoadRecord {\n  metadata?: PluginMetadata\n  plugin: Plugin\n}\nexport interface RuntimePluginLoadRecord extends PluginLoadRecord {\n  definition: PluginDefinition\n}\n\nexport default class PluginManager {\n  plugins: Plugin[] = []\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  jexl: any = createJexlInstance()\n\n  pluginMetadata: Record<string, PluginMetadata> = {}\n\n  runtimePluginDefinitions: PluginDefinition[] = []\n\n  elementCreationSchedule = new PhasedScheduler<PluggableElementTypeGroup>(\n    'renderer',\n    'adapter',\n    'text search adapter',\n    'display',\n    'track',\n    'connection',\n    'view',\n    'widget',\n    'rpc method',\n    'internet account',\n  ) as PhasedScheduler<PluggableElementTypeGroup> | undefined\n\n  rendererTypes = new TypeRecord('RendererType', RendererType)\n\n  adapterTypes = new TypeRecord('AdapterType', AdapterType)\n\n  textSearchAdapterTypes = new TypeRecord(\n    'TextSearchAdapterType',\n    TextSearchAdapterType,\n  )\n\n  trackTypes = new TypeRecord('TrackType', TrackType)\n\n  displayTypes = new TypeRecord('DisplayType', DisplayType)\n\n  connectionTypes = new TypeRecord('ConnectionType', ConnectionType)\n\n  viewTypes = new TypeRecord('ViewType', ViewType)\n\n  widgetTypes = new TypeRecord('WidgetType', WidgetType)\n\n  rpcMethods = new TypeRecord('RpcMethodType', RpcMethodType)\n\n  internetAccountTypes = new TypeRecord(\n    'InternetAccountType',\n    InternetAccountType,\n  )\n\n  configured = false\n\n  rootModel?: AbstractRootModel\n\n  extensionPoints: Map<string, Function[]> = new Map()\n\n  constructor(initialPlugins: (Plugin | PluginLoadRecord)[] = []) {\n    // add the core plugin\n    this.addPlugin({ plugin: new CorePlugin(), metadata: { isCore: true } })\n\n    // add all the initial plugins\n    initialPlugins.forEach(plugin => {\n      this.addPlugin(plugin)\n    })\n  }\n\n  pluginConfigurationSchemas() {\n    const configurationSchemas: { [key: string]: unknown } = {}\n    this.plugins.forEach(plugin => {\n      if (plugin.configurationSchema) {\n        configurationSchemas[plugin.name] = plugin.configurationSchema\n      }\n    })\n    return configurationSchemas\n  }\n\n  addPlugin(load: Plugin | PluginLoadRecord | RuntimePluginLoadRecord) {\n    if (this.configured) {\n      throw new Error('JBrowse already configured, cannot add plugins')\n    }\n    const [plugin, metadata = {}] =\n      load instanceof Plugin ? [load, {}] : [load.plugin, load.metadata]\n\n    if (this.plugins.includes(plugin)) {\n      throw new Error('plugin already installed')\n    }\n\n    this.pluginMetadata[plugin.name] = metadata\n    if ('definition' in load) {\n      this.runtimePluginDefinitions.push(load.definition)\n    }\n    plugin.install(this)\n    this.plugins.push(plugin)\n    return this\n  }\n\n  getPlugin(name: string) {\n    return this.plugins.find(p => p.name === name)\n  }\n\n  hasPlugin(name: string) {\n    return this.getPlugin(name) !== undefined\n  }\n\n  createPluggableElements() {\n    // run the creation callbacks for each element type in order.\n    // see elementCreationSchedule above for the creation order\n    if (this.elementCreationSchedule) {\n      this.elementCreationSchedule.run()\n      delete this.elementCreationSchedule\n    }\n    return this\n  }\n\n  setRootModel(rootModel: AbstractRootModel) {\n    this.rootModel = rootModel\n  }\n\n  configure() {\n    if (this.configured) {\n      throw new Error('already configured')\n    }\n\n    this.plugins.forEach(plugin => plugin.configure(this))\n\n    this.configured = true\n\n    // console.log(JSON.stringify(getSnapshot(model)))\n\n    return this\n  }\n\n  getElementTypeRecord(\n    groupName: PluggableElementTypeGroup,\n  ): TypeRecord<PluggableElementBase> {\n    switch (groupName) {\n      case 'adapter':\n        return this.adapterTypes\n      case 'text search adapter':\n        return this.textSearchAdapterTypes\n      case 'connection':\n        return this.connectionTypes\n      case 'widget':\n        return this.widgetTypes\n      case 'renderer':\n        return this.rendererTypes\n      case 'display':\n        return this.displayTypes\n      case 'track':\n        return this.trackTypes\n      case 'view':\n        return this.viewTypes\n      case 'rpc method':\n        return this.rpcMethods\n      case 'internet account':\n        return this.internetAccountTypes\n      default:\n        throw new Error(`invalid element type '${groupName}'`)\n    }\n  }\n\n  addElementType(\n    groupName: PluggableElementTypeGroup,\n    creationCallback: (pluginManager: PluginManager) => PluggableElementType,\n  ) {\n    if (typeof creationCallback !== 'function') {\n      throw new Error(\n        'must provide a callback function that returns the new type object',\n      )\n    }\n    const typeRecord = this.getElementTypeRecord(groupName)\n\n    if (this.elementCreationSchedule) {\n      this.elementCreationSchedule.add(groupName, () => {\n        let newElement = creationCallback(this)\n        if (!newElement.name) {\n          throw new Error(`cannot add a ${groupName} with no name`)\n        }\n\n        if (typeRecord.has(newElement.name)) {\n          throw new Error(\n            `${groupName} ${newElement.name} already registered, cannot register it again`,\n          )\n        }\n\n        newElement = this.evaluateExtensionPoint(\n          'Core-extendPluggableElement',\n          newElement,\n        ) as PluggableElementType\n\n        typeRecord.add(newElement.name, newElement)\n      })\n    }\n\n    return this\n  }\n\n  getElementType(groupName: PluggableElementTypeGroup, typeName: string) {\n    const typeRecord = this.getElementTypeRecord(groupName)\n    return typeRecord.get(typeName)\n  }\n\n  getElementTypesInGroup(groupName: PluggableElementTypeGroup) {\n    const typeRecord = this.getElementTypeRecord(groupName)\n    return typeRecord.all()\n  }\n\n  /** get a MST type for the union of all specified pluggable MST types */\n  pluggableMstType(\n    typeGroup: PluggableElementTypeGroup,\n    fieldName: PluggableElementMember,\n    fallback: IAnyType = types.maybe(types.null),\n  ) {\n    const pluggableTypes = this.getElementTypeRecord(typeGroup)\n      .all()\n      // @ts-ignore\n      .map(t => t[fieldName])\n      .filter(t => isType(t) && isModelType(t)) as IAnyType[]\n\n    // try to smooth over the case when no types are registered, mostly\n    // encountered in tests\n    if (pluggableTypes.length === 0) {\n      console.warn(\n        `No JBrowse pluggable types found matching ('${typeGroup}','${fieldName}')`,\n      )\n      return fallback\n    }\n    return types.union(...pluggableTypes)\n  }\n\n  /** get a MST type for the union of all specified pluggable config schemas */\n  pluggableConfigSchemaType(\n    typeGroup: PluggableElementTypeGroup,\n    fieldName: PluggableElementMember = 'configSchema',\n  ) {\n    const pluggableTypes = this.getElementTypeRecord(typeGroup)\n      .all()\n      // @ts-ignore\n      .map(t => t[fieldName])\n      .filter(t => isBareConfigurationSchemaType(t)) as IAnyType[]\n\n    if (pluggableTypes.length === 0) {\n      pluggableTypes.push(ConfigurationSchema('Null', {}))\n    }\n    return types.union(...pluggableTypes)\n  }\n\n  jbrequireCache = new Map()\n\n  lib = ReExports\n\n  load = <FTYPE extends AnyFunction>(lib: FTYPE): ReturnType<FTYPE> => {\n    if (!this.jbrequireCache.has(lib)) {\n      this.jbrequireCache.set(lib, lib(this))\n    }\n    return this.jbrequireCache.get(lib)\n  }\n\n  /**\n   * Get the re-exported version of the given package name.\n   * Throws an error if the package is not re-exported by the plugin manager.\n   *\n   * @returns the library's default export\n   */\n  jbrequire = (\n    lib: keyof typeof ReExports | AnyFunction | { default: AnyFunction },\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): any => {\n    if (typeof lib === 'string') {\n      const pack = this.lib[lib]\n      if (!pack) {\n        throw new TypeError(\n          `No jbrequire re-export defined for package '${lib}'. If this package must be shared between plugins, add it to ReExports.js. If it does not need to be shared, just import it normally.`,\n        )\n      }\n      return pack\n    }\n\n    if (typeof lib === 'function') {\n      return this.load(lib)\n    }\n\n    if (lib.default) {\n      return this.jbrequire(lib.default)\n    }\n\n    throw new TypeError(\n      'lib passed to jbrequire must be either a string or a function',\n    )\n  }\n\n  getRendererType(typeName: string): RendererType {\n    return this.rendererTypes.get(typeName)\n  }\n\n  getRendererTypes(): RendererType[] {\n    return this.rendererTypes.all()\n  }\n\n  getAdapterType(typeName: string): AdapterType {\n    return this.adapterTypes.get(typeName)\n  }\n\n  getTextSearchAdapterType(typeName: string): TextSearchAdapterType {\n    return this.textSearchAdapterTypes.get(typeName)\n  }\n\n  getTrackType(typeName: string): TrackType {\n    return this.trackTypes.get(typeName)\n  }\n\n  getDisplayType(typeName: string): DisplayType {\n    return this.displayTypes.get(typeName)\n  }\n\n  getViewType(typeName: string): ViewType {\n    return this.viewTypes.get(typeName)\n  }\n\n  getWidgetType(typeName: string): WidgetType {\n    return this.widgetTypes.get(typeName)\n  }\n\n  getConnectionType(typeName: string): ConnectionType {\n    return this.connectionTypes.get(typeName)\n  }\n\n  getRpcMethodType(methodName: string): RpcMethodType {\n    return this.rpcMethods.get(methodName)\n  }\n\n  getInternetAccountType(internetAccountName: string): InternetAccountType {\n    return this.internetAccountTypes.get(internetAccountName)\n  }\n\n  addRendererType(\n    creationCallback: (pluginManager: PluginManager) => RendererType,\n  ): this {\n    return this.addElementType('renderer', creationCallback)\n  }\n\n  addAdapterType(\n    creationCallback: (pluginManager: PluginManager) => AdapterType,\n  ): this {\n    return this.addElementType('adapter', creationCallback)\n  }\n\n  addTextSearchAdapterType(\n    creationCallback: (pluginManager: PluginManager) => TextSearchAdapterType,\n  ): this {\n    return this.addElementType('text search adapter', creationCallback)\n  }\n\n  addTrackType(\n    creationCallback: (pluginManager: PluginManager) => TrackType,\n  ): this {\n    // Goes through the already-created displays and registers the ones that\n    // specify this track type\n    const callback = () => {\n      const track = creationCallback(this)\n      ;(this.getElementTypesInGroup('display') as DisplayType[]).forEach(\n        display => {\n          if (\n            display.trackType === track.name &&\n            // track may have already added the displayType in its creationCallback\n            !track.displayTypes.includes(display)\n          ) {\n            track.addDisplayType(display)\n          }\n        },\n      )\n      return track\n    }\n    return this.addElementType('track', callback)\n  }\n\n  addDisplayType(\n    creationCallback: (pluginManager: PluginManager) => DisplayType,\n  ): this {\n    return this.addElementType('display', creationCallback)\n  }\n\n  addViewType(\n    creationCallback: (pluginManager: PluginManager) => ViewType,\n  ): this {\n    const callback = () => {\n      const newView = creationCallback(this)\n      ;(this.getElementTypesInGroup('display') as DisplayType[]).forEach(\n        display => {\n          if (\n            display.viewType === newView.name &&\n            // view may have already added the displayType in its creationCallback\n            !newView.displayTypes.includes(display)\n          ) {\n            newView.addDisplayType(display)\n          }\n        },\n      )\n      return newView\n    }\n    return this.addElementType('view', callback)\n  }\n\n  addWidgetType(\n    creationCallback: (pluginManager: PluginManager) => WidgetType,\n  ): this {\n    return this.addElementType('widget', creationCallback)\n  }\n\n  addConnectionType(\n    creationCallback: (pluginManager: PluginManager) => ConnectionType,\n  ): this {\n    return this.addElementType('connection', creationCallback)\n  }\n\n  addRpcMethod(\n    creationCallback: (pluginManager: PluginManager) => RpcMethodType,\n  ): this {\n    return this.addElementType('rpc method', creationCallback)\n  }\n\n  addInternetAccountType(\n    creationCallback: (pluginManager: PluginManager) => InternetAccountType,\n  ): this {\n    return this.addElementType('internet account', creationCallback)\n  }\n\n  addToExtensionPoint<T>(\n    extensionPointName: string,\n    callback: (extendee: T) => T,\n  ) {\n    let callbacks = this.extensionPoints.get(extensionPointName)\n    if (!callbacks) {\n      callbacks = []\n      this.extensionPoints.set(extensionPointName, callbacks)\n    }\n    callbacks.push(callback)\n  }\n\n  evaluateExtensionPoint(extensionPointName: string, extendee: unknown) {\n    const callbacks = this.extensionPoints.get(extensionPointName)\n    let accumulator = extendee\n    if (callbacks) {\n      for (const callback of callbacks) {\n        try {\n          accumulator = callback(accumulator)\n        } catch (error) {\n          console.error(error)\n        }\n      }\n    }\n    return accumulator\n  }\n\n  async evaluateAsyncExtensionPoint(\n    extensionPointName: string,\n    extendee: unknown,\n  ) {\n    const callbacks = this.extensionPoints.get(extensionPointName)\n    let accumulator = extendee\n    if (callbacks) {\n      for (const callback of callbacks) {\n        try {\n          accumulator = await callback(accumulator)\n        } catch (error) {\n          console.error(error)\n        }\n      }\n    }\n    return accumulator\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { readConfObject } from '../configuration'\nimport { isElectron } from '../util'\n\ninterface AnalyticsObj {\n  [key: string]: any\n}\n\ninterface Track {\n  [key: string]: any\n}\n\nexport async function writeAWSAnalytics(\n  rootModel: any,\n  initialTimeStamp: number,\n  sessionQuery?: string | null,\n) {\n  try {\n    const url = 'https://analytics.jbrowse.org/api/v1'\n\n    const multiAssemblyTracks = rootModel.jbrowse.tracks.filter(\n      (track: any) => (readConfObject(track, 'assemblyNames') || []).length > 1,\n    ).length\n\n    const savedSessionCount = Object.keys(localStorage).filter(name =>\n      name.includes('localSaved-'),\n    ).length\n\n    const { jbrowse: config, session, version: ver } = rootModel\n    const { tracks, assemblies, plugins } = config\n\n    // stats to be recorded in db\n    const stats: AnalyticsObj = {\n      ver,\n      'plugins-count': plugins?.length || 0,\n      'plugin-names': plugins?.map((p: any) => p.name).join(','),\n      'assemblies-count': assemblies.length,\n      'tracks-count': tracks.length,\n      'session-tracks-count': session?.sessionTracks.length || 0,\n      'open-views': session?.views.length || 0,\n      'synteny-tracks-count': multiAssemblyTracks,\n      'saved-sessions-count': savedSessionCount,\n\n      // field if existing session param in query before autogenerated param\n      'existing-session-param-type': sessionQuery?.split('-')[0] || 'none',\n\n      // screen geometry\n      'scn-h': window.screen.height,\n      'scn-w': window.screen.width,\n\n      // window geometry\n      'win-h': window.innerHeight,\n      'win-w': window.innerWidth,\n\n      electron: isElectron,\n      loadTime: (Date.now() - initialTimeStamp) / 1000,\n      jb2: true,\n    }\n\n    // stringifies the track type counts, gets processed in lambda\n    tracks.forEach((track: Track) => {\n      const key = `track-types-${track.type}`\n      stats[key] = stats[key] + 1 || 1\n    })\n\n    // stringifies the session track type counts, gets processed in lambda\n    session?.sessionTracks.forEach((track: Track) => {\n      const key = `sessionTrack-types-${track.type}`\n      stats[key] = stats[key] + 1 || 1\n    })\n\n    // put stats into a query string for get request\n    const qs = Object.keys(stats)\n      .map(key => `${key}=${stats[key]}`)\n      .join('&')\n\n    await fetch(`${url}?${qs}`)\n  } catch (e) {\n    console.error('Failed to write analytics to AWS.', e)\n  }\n}\n\nexport async function writeGAAnalytics(\n  rootModel: any,\n  initialTimestamp: number,\n) {\n  const jbrowseUser = 'UA-7115575-5'\n  const stats: AnalyticsObj = {\n    'tracks-count': rootModel.jbrowse.tracks.length, // this is all possible tracks\n    ver: rootModel.version,\n    electron: isElectron,\n    loadTime: Date.now() - initialTimestamp,\n    pluginNames:\n      rootModel.jbrowse.plugins?.map((plugin: any) => plugin.name) || '',\n  }\n\n  // create script\n  let analyticsScript =\n    \"(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\"\n  analyticsScript +=\n    '(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),'\n  analyticsScript +=\n    'm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)'\n  analyticsScript +=\n    \"})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\"\n  analyticsScript += `ga('create', '${jbrowseUser}', 'auto', 'jbrowseTracker');`\n\n  const gaData: AnalyticsObj = {}\n  const googleDimensions = 'tracks-count ver electron loadTime pluginNames'\n\n  googleDimensions.split(/\\s+/).forEach((key, index) => {\n    gaData[`dimension${index + 1}`] = stats[key]\n  })\n\n  gaData.metric1 = Math.round(stats.loadTime)\n\n  analyticsScript += `ga('jbrowseTracker.send', 'pageview',${JSON.stringify(\n    gaData,\n  )});`\n\n  const analyticsScriptNode = document.createElement('script')\n  analyticsScriptNode.innerHTML = analyticsScript\n\n  document.getElementsByTagName('head')[0].appendChild(analyticsScriptNode)\n}\n\nexport function doAnalytics(\n  rootModel: any,\n  initialTimestamp: number,\n  initialSessionQuery: string | null | undefined,\n) {\n  if (\n    rootModel &&\n    !readConfObject(rootModel.jbrowse.configuration, 'disableAnalytics')\n  ) {\n    writeAWSAnalytics(rootModel, initialTimestamp, initialSessionQuery)\n    writeGAAnalytics(rootModel, initialTimestamp)\n  }\n}\n","import { lazy } from 'react'\nimport ConnectionType from '@jbrowse/core/pluggableElementTypes/ConnectionType'\nimport WidgetType from '@jbrowse/core/pluggableElementTypes/WidgetType'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport {\n  configSchema as ucscConfigSchema,\n  modelFactory as ucscModelFactory,\n} from './ucsc-trackhub'\nimport {\n  stateModelFactory as AddTrackStateModelFactory,\n  configSchema as AddTrackConfigSchema,\n} from './AddTrackWidget'\nimport {\n  stateModel as AddConnectionStateModel,\n  configSchema as AddConnectionConfigSchema,\n} from './AddConnectionWidget'\nimport {\n  stateModelFactory as HierarchicalTrackSelectorStateModelFactory,\n  configSchema as HierarchicalTrackSelectorConfigSchema,\n} from './HierarchicalTrackSelectorWidget'\nimport {\n  stateModelFactory as PluginStoreStateModelFactory,\n  configSchema as PluginStoreConfigSchema,\n} from './PluginStoreWidget'\n\nconst SetDefaultSession = lazy(() => import('./SetDefaultSession'))\n\nconst AssemblyManager = lazy(() => import('./AssemblyManager'))\n\nexport default class extends Plugin {\n  name = 'DataManagementPlugin'\n\n  exports = {\n    AssemblyManager,\n    SetDefaultSession,\n  }\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addConnectionType(\n      () =>\n        new ConnectionType({\n          name: 'UCSCTrackHubConnection',\n          configSchema: ucscConfigSchema,\n          stateModel: ucscModelFactory(pluginManager),\n          displayName: 'UCSC Track Hub',\n          description: 'A track or assembly hub in the Track Hub format',\n          url: '//genome.ucsc.edu/goldenPath/help/hgTrackHubHelp.html#Intro',\n        }),\n    )\n\n    pluginManager.addWidgetType(() => {\n      return new WidgetType({\n        name: 'HierarchicalTrackSelectorWidget',\n        heading: 'Available tracks',\n        configSchema: HierarchicalTrackSelectorConfigSchema,\n        stateModel: HierarchicalTrackSelectorStateModelFactory(pluginManager),\n        ReactComponent: lazy(\n          () =>\n            import(\n              './HierarchicalTrackSelectorWidget/components/HierarchicalTrackSelector'\n            ),\n        ),\n      })\n    })\n\n    pluginManager.addWidgetType(() => {\n      return new WidgetType({\n        name: 'AddTrackWidget',\n        heading: 'Add a track',\n        configSchema: AddTrackConfigSchema,\n        stateModel: AddTrackStateModelFactory(pluginManager),\n        ReactComponent: lazy(\n          () => import('./AddTrackWidget/components/AddTrackWidget'),\n        ),\n      })\n    })\n\n    pluginManager.addWidgetType(() => {\n      return new WidgetType({\n        name: 'AddConnectionWidget',\n        heading: 'Add a connection',\n        configSchema: AddConnectionConfigSchema,\n        stateModel: AddConnectionStateModel,\n        ReactComponent: lazy(\n          () => import('./AddConnectionWidget/components/AddConnectionWidget'),\n        ),\n      })\n    })\n\n    pluginManager.addWidgetType(() => {\n      return new WidgetType({\n        name: 'PluginStoreWidget',\n        heading: 'Plugin store',\n        configSchema: PluginStoreConfigSchema,\n        stateModel: PluginStoreStateModelFactory(pluginManager),\n        ReactComponent: lazy(\n          () => import('./PluginStoreWidget/components/PluginStoreWidget'),\n        ),\n      })\n    })\n  }\n\n  configure(pluginManager: PluginManager) {}\n}\n\nexport { AssemblyManager, SetDefaultSession }\n","import Alignments from '@jbrowse/plugin-alignments'\nimport Authentication from '@jbrowse/plugin-authentication'\nimport Bed from '@jbrowse/plugin-bed'\nimport BreakpointSplitView from '@jbrowse/plugin-breakpoint-split-view'\nimport CircularView from '@jbrowse/plugin-circular-view'\nimport Config from '@jbrowse/plugin-config'\nimport ComparativeAdapters from '@jbrowse/plugin-comparative-adapters'\nimport DataManagement from '@jbrowse/plugin-data-management'\nimport DotplotView from '@jbrowse/plugin-dotplot-view'\nimport GtfPlugin from '@jbrowse/plugin-gtf'\nimport Gff3 from '@jbrowse/plugin-gff3'\nimport LegacyJBrowse from '@jbrowse/plugin-legacy-jbrowse'\nimport LinearGenomeView from '@jbrowse/plugin-linear-genome-view'\nimport LinearComparativeView from '@jbrowse/plugin-linear-comparative-view'\nimport Lollipop from '@jbrowse/plugin-lollipop'\nimport Arc from '@jbrowse/plugin-arc'\nimport Menus from '@jbrowse/plugin-menus'\nimport RDF from '@jbrowse/plugin-rdf'\nimport Sequence from '@jbrowse/plugin-sequence'\nimport SVG from '@jbrowse/plugin-svg'\nimport TrackHubRegistry from '@jbrowse/plugin-trackhub-registry'\nimport Variants from '@jbrowse/plugin-variants'\nimport Wiggle from '@jbrowse/plugin-wiggle'\nimport SpreadsheetViewPlugin from '@jbrowse/plugin-spreadsheet-view'\nimport SvInspectorPlugin from '@jbrowse/plugin-sv-inspector'\nimport HicPlugin from '@jbrowse/plugin-hic'\nimport TrixPlugin from '@jbrowse/plugin-trix'\nimport GridBookmarkPlugin from '@jbrowse/plugin-grid-bookmark'\n\nconst corePlugins = [\n  SVG,\n  LinearGenomeView,\n  Alignments,\n  Authentication,\n  Bed,\n  CircularView,\n  Config,\n  DataManagement,\n  DotplotView,\n  GtfPlugin,\n  Gff3,\n  LegacyJBrowse,\n  LinearComparativeView,\n  Lollipop,\n  Arc,\n  Menus,\n  RDF,\n  Sequence,\n  TrackHubRegistry,\n  Variants,\n  Wiggle,\n  SpreadsheetViewPlugin,\n  SvInspectorPlugin,\n  BreakpointSplitView,\n  HicPlugin,\n  TrixPlugin,\n  GridBookmarkPlugin,\n  ComparativeAdapters,\n]\n\nexport default corePlugins\n","/**\n * Pad the end of a base64 string with \"=\" to make it valid\n * @param b64 - unpadded b64 string\n */\nexport function b64PadSuffix(b64: string): string {\n  let num = 0\n  const mo = b64.length % 4\n  switch (mo) {\n    case 3:\n      num = 1\n      break\n    case 2:\n      num = 2\n      break\n    case 0:\n      num = 0\n      break\n    default:\n      throw new Error('base64 not a valid length')\n  }\n  return b64 + '='.repeat(num)\n}\n\n/**\n * Decode and inflate a url-safe base64 to a string\n * See {@link https://en.wikipedia.org/wiki/Base64#URL_applications}\n * @param b64 - a base64 string to decode and inflate\n */\nexport async function fromUrlSafeB64(b64: string) {\n  const originalB64 = b64PadSuffix(b64.replace(/-/g, '+').replace(/_/g, '/'))\n  const { toByteArray } = await import('base64-js')\n  const { inflate } = await import('pako')\n  const bytes = toByteArray(originalB64)\n  const inflated = inflate(bytes)\n  return new TextDecoder().decode(inflated)\n}\n\n/**\n * Compress and encode a string as url-safe base64\n * See {@link https://en.wikipedia.org/wiki/Base64#URL_applications}\n * @param str-  a string to compress and encode\n */\nexport async function toUrlSafeB64(str: string) {\n  const bytes = new TextEncoder().encode(str)\n  const { deflate } = await import('pako')\n  const { fromByteArray } = await import('base64-js')\n  const deflated = deflate(bytes)\n  const encoded = fromByteArray(deflated)\n  const pos = encoded.indexOf('=')\n  return pos > 0\n    ? encoded.slice(0, pos).replace(/\\+/g, '-').replace(/\\//g, '_')\n    : encoded.replace(/\\+/g, '-').replace(/\\//g, '_')\n}\n","import { toUrlSafeB64 } from './util'\n\nimport AES from 'crypto-js/aes'\nimport Utf8 from 'crypto-js/enc-utf8'\n\n// from https://stackoverflow.com/questions/1349404/\nfunction generateUID(length: number) {\n  return window\n    .btoa(\n      Array.from(window.crypto.getRandomValues(new Uint8Array(length * 2)))\n        .map(b => String.fromCharCode(b))\n        .join(''),\n    )\n    .replace(/[+/]/g, '')\n    .substring(0, length)\n}\n\nconst encrypt = (text: string, password: string) => {\n  return AES.encrypt(text, password).toString()\n}\n\nconst decrypt = (text: string, password: string) => {\n  const bytes = AES.decrypt(text, password)\n  return bytes.toString(Utf8)\n}\n\nfunction getErrorMsg(err: string) {\n  try {\n    const obj = JSON.parse(err)\n    return obj.message\n  } catch (e) {\n    return err\n  }\n}\n// writes the encrypted session, current datetime, and referer to DynamoDB\nexport async function shareSessionToDynamo(\n  session: Record<string, unknown>,\n  url: string,\n  referer: string,\n) {\n  const sess = await toUrlSafeB64(JSON.stringify(session))\n  const password = generateUID(5)\n  const encryptedSession = encrypt(sess, password)\n\n  const data = new FormData()\n  data.append('session', encryptedSession)\n  data.append('dateShared', `${Date.now()}`)\n  data.append('referer', referer)\n\n  const response = await fetch(`${url}share`, {\n    method: 'POST',\n    mode: 'cors',\n    body: data,\n  })\n\n  if (!response.ok) {\n    const err = await response.text()\n    throw new Error(getErrorMsg(err))\n  }\n  const json = await response.json()\n  return {\n    json,\n    encryptedSession,\n    password,\n  }\n}\n\nexport async function readSessionFromDynamo(\n  baseUrl: string,\n  sessionQueryParam: string,\n  password: string,\n  signal?: AbortSignal,\n) {\n  const sessionId = sessionQueryParam.split('share-')[1]\n  const url = `${baseUrl}?sessionId=${sessionId}`\n  const response = await fetch(url, {\n    signal,\n  })\n\n  if (!response.ok) {\n    const err = await response.text()\n    throw new Error(getErrorMsg(err))\n  }\n\n  const json = await response.json()\n  return decrypt(json.session, password)\n}\n","import React, { useState, useEffect } from 'react'\nimport { getSnapshot } from 'mobx-state-tree'\nimport { observer } from 'mobx-react'\nimport copy from 'copy-to-clipboard'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Divider,\n  IconButton,\n  FormControl,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  TextField,\n  Typography,\n  alpha,\n  makeStyles,\n} from '@material-ui/core'\nimport { AbstractSessionModel } from '@jbrowse/core/util'\n\n// icons\nimport ShareIcon from '@material-ui/icons/Share'\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { ContentCopy as ContentCopyIcon } from '@jbrowse/core/ui/Icons'\n\n// locals\nimport { toUrlSafeB64 } from './util'\nimport { shareSessionToDynamo } from './sessionSharing'\n\nconst useStyles = makeStyles(theme => ({\n  shareDiv: {\n    textAlign: 'center',\n    paddingLeft: '2px',\n  },\n  shareButton: {\n    '&:hover': {\n      backgroundColor: alpha(\n        theme.palette.primary.contrastText,\n        theme.palette.action.hoverOpacity,\n      ),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent',\n      },\n    },\n  },\n  loadingMessage: {\n    padding: theme.spacing(5),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}))\n\nconst SHARE_URL_LOCALSTORAGE_KEY = 'jbrowse-shareURL'\n\nfunction SettingsDialog(props: {\n  open: boolean\n  onClose: Function\n  currentSetting: string\n}) {\n  const classes = useStyles()\n  const { onClose, open, currentSetting } = props\n  const [setting, setSetting] = useState(currentSetting)\n  const [infoDialogOpen, setInfoDialogOpen] = useState(false)\n\n  const handleClose = () => {\n    localStorage.setItem(SHARE_URL_LOCALSTORAGE_KEY, setting)\n    onClose(setting)\n  }\n\n  return (\n    <>\n      <Dialog onClose={handleClose} open={open}>\n        <DialogTitle>\n          Configure session sharing\n          {handleClose ? (\n            <IconButton className={classes.closeButton} onClick={handleClose}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Select between generating long or short URLs for the session sharing\n            <IconButton onClick={() => setInfoDialogOpen(true)}>\n              <HelpOutlineIcon />\n            </IconButton>\n          </DialogContentText>\n          <FormControl component=\"fieldset\">\n            <RadioGroup\n              value={setting}\n              onChange={event => {\n                const val = event.target.value\n                setSetting(val)\n              }}\n            >\n              <FormControlLabel\n                value=\"short\"\n                control={<Radio />}\n                label=\"Short URL\"\n              />\n              <FormControlLabel\n                value=\"long\"\n                control={<Radio />}\n                label=\"Long URL\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </DialogContent>\n      </Dialog>\n      <InfoDialog\n        open={infoDialogOpen}\n        onClose={() => {\n          setInfoDialogOpen(false)\n        }}\n      />\n    </>\n  )\n}\nfunction InfoDialog(props: { open: boolean; onClose: Function }) {\n  const classes = useStyles()\n  const { onClose, open } = props\n\n  const handleClose = () => {\n    onClose()\n  }\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle id=\"simple-dialog-title\">\n        Info about session URLs\n        {onClose ? (\n          <IconButton className={classes.closeButton} onClick={handleClose}>\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Because everything about the JBrowse session is encoded in the URL\n          (e.g. state of the tracks, views, features selected, etc.) the\n          sessions can get very long. Therefore, we created a URL shortener,\n          both as a convenience and because long URLs can break some programs.\n          Note that both the long and short URLs encode the same data, but due\n          to long URLs causing problems with some programs, we recommend sharing\n          short URLs.\n        </DialogContentText>\n        <DialogContentText>\n          We generate the short URLs in a secure manner which involves\n          encrypting the session on the client side with a random password\n          string and uploading them to a central database. Then the random\n          password is added to the URL but is not uploaded to the central\n          database, making these short URLs effectively &quot;end-to-end\n          encrypted&quot;\n        </DialogContentText>\n        <DialogContentText>\n          Only users with a share link can read the session.\n        </DialogContentText>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst ShareDialog = observer(\n  ({\n    handleClose,\n    session,\n  }: {\n    handleClose: () => void\n    session: AbstractSessionModel & { shareURL: string }\n  }) => {\n    const classes = useStyles()\n    const [shortUrl, setShortUrl] = useState('')\n    const [longUrl, setLongUrl] = useState('')\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState<unknown>()\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false)\n\n    const url = session.shareURL\n    const currentSetting =\n      localStorage.getItem(SHARE_URL_LOCALSTORAGE_KEY) || 'short'\n    const snap = getSnapshot(session)\n\n    useEffect(() => {\n      let cancelled = false\n      ;(async () => {\n        if (currentSetting === 'short') {\n          try {\n            setLoading(true)\n            const locationUrl = new URL(window.location.href)\n            const result = await shareSessionToDynamo(\n              snap,\n              url,\n              locationUrl.href,\n            )\n            if (!cancelled) {\n              const params = new URLSearchParams(locationUrl.search)\n              params.set('session', `share-${result.json.sessionId}`)\n              params.set('password', result.password)\n              locationUrl.search = params.toString()\n              setShortUrl(locationUrl.href)\n            }\n          } catch (e) {\n            setError(e)\n          } finally {\n            setLoading(false)\n          }\n        }\n      })()\n\n      return () => {\n        cancelled = true\n      }\n    }, [currentSetting, url, snap])\n\n    useEffect(() => {\n      let cancelled = false\n      ;(async () => {\n        try {\n          // generate long URL\n          const sess = await toUrlSafeB64(JSON.stringify(getSnapshot(session)))\n          const longUrl = new URL(window.location.href)\n          const longParams = new URLSearchParams(longUrl.search)\n          longParams.set('session', `encoded-${sess}`)\n          longUrl.search = longParams.toString()\n          if (!cancelled) {\n            setLongUrl(longUrl.toString())\n          }\n        } catch (e) {\n          setError(e)\n        }\n      })()\n      return () => {\n        cancelled = true\n      }\n    }, [session])\n\n    return (\n      <>\n        <Dialog\n          maxWidth=\"xl\"\n          open\n          onClose={handleClose}\n          data-testid=\"share-dialog\"\n        >\n          <DialogTitle>\n            JBrowse Shareable Link\n            {handleClose ? (\n              <IconButton className={classes.closeButton} onClick={handleClose}>\n                <CloseIcon />\n              </IconButton>\n            ) : null}\n          </DialogTitle>\n          <Divider />\n\n          <DialogContent>\n            <DialogContentText>\n              Copy the URL below to share your current JBrowse session.\n              <IconButton onClick={() => setSettingsDialogOpen(true)}>\n                <SettingsIcon />\n              </IconButton>\n            </DialogContentText>\n\n            {currentSetting === 'short' ? (\n              error ? (\n                <Typography color=\"error\">{`${error}`}</Typography>\n              ) : loading ? (\n                <Typography>Generating short URL...</Typography>\n              ) : (\n                <TextField\n                  label=\"URL\"\n                  value={shortUrl}\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  inputProps={{ 'data-testid': 'share-url-text' }}\n                  variant=\"filled\"\n                  style={{ width: '100%' }}\n                  onClick={event => {\n                    const target = event.target as HTMLTextAreaElement\n                    target.select()\n                  }}\n                  data-testid=\"share-url-field\"\n                />\n              )\n            ) : (\n              <TextField\n                label=\"URL\"\n                value={longUrl}\n                InputProps={{\n                  readOnly: true,\n                }}\n                variant=\"filled\"\n                style={{ width: '100%' }}\n                onClick={event => {\n                  const target = event.target as HTMLTextAreaElement\n                  target.select()\n                }}\n              />\n            )}\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={() => {\n                copy(shortUrl || longUrl.toString())\n                session.notify('Copied to clipboard', 'success')\n              }}\n              color=\"primary\"\n              startIcon={<ContentCopyIcon />}\n              disabled={currentSetting === 'short' && loading}\n            >\n              Copy URL to Clipboard\n            </Button>\n\n            <Button onClick={handleClose} color=\"primary\" autoFocus>\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <SettingsDialog\n          open={settingsDialogOpen}\n          onClose={() => {\n            setSettingsDialogOpen(false)\n          }}\n          currentSetting={currentSetting}\n        />\n      </>\n    )\n  },\n)\n\nconst ShareButton = observer(\n  (props: { session: AbstractSessionModel & { shareURL: string } }) => {\n    const [open, setOpen] = useState(false)\n\n    const { session } = props\n    const classes = useStyles()\n\n    const handleClose = () => {\n      setOpen(false)\n    }\n\n    return (\n      <div className={classes.shareDiv}>\n        <Button\n          data-testid=\"share_button\"\n          onClick={async () => setOpen(true)}\n          size=\"small\"\n          color=\"inherit\"\n          startIcon={<ShareIcon />}\n          classes={{ root: classes.shareButton }}\n        >\n          Share\n        </Button>\n        {open ? (\n          <ShareDialog handleClose={handleClose} session={session} />\n        ) : null}\n      </div>\n    )\n  },\n)\n\nexport default ShareButton\n","import React from 'react'\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport { AppRootModel } from '@jbrowse/core/util/types'\nimport { observer } from 'mobx-react'\nimport {\n  AssemblyManager,\n  SetDefaultSession,\n} from '@jbrowse/plugin-data-management'\n\nfunction AdminComponent({ pluginManager }: { pluginManager: PluginManager }) {\n  const { rootModel } = pluginManager\n\n  const {\n    isAssemblyEditing,\n    isDefaultSessionEditing,\n    setDefaultSessionEditing,\n    setAssemblyEditing,\n  } = rootModel as AppRootModel\n\n  return (\n    <>\n      {isAssemblyEditing ? (\n        <AssemblyManager\n          rootModel={rootModel}\n          onClose={() => setAssemblyEditing(false)}\n        />\n      ) : null}\n      {isDefaultSessionEditing ? (\n        <SetDefaultSession\n          rootModel={rootModel}\n          onClose={() => setDefaultSessionEditing(false)}\n        />\n      ) : null}\n    </>\n  )\n}\n\nexport default observer(AdminComponent)\n","import React, { useEffect } from 'react'\nimport { observer } from 'mobx-react'\nimport { onSnapshot } from 'mobx-state-tree'\nimport { useQueryParam, StringParam } from 'use-query-params'\nimport { CssBaseline, ThemeProvider } from '@material-ui/core'\n\n// core\nimport { getConf } from '@jbrowse/core/configuration'\nimport { App, createJBrowseTheme } from '@jbrowse/core/ui'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\n// locals\nimport ShareButton from './ShareButton'\nimport AdminComponent from './AdminComponent'\nimport { SessionModel } from './sessionModelFactory'\n\nconst JBrowse = observer(\n  ({ pluginManager }: { pluginManager: PluginManager }) => {\n    const [adminKey] = useQueryParam('adminKey', StringParam)\n    const [adminServer] = useQueryParam('adminServer', StringParam)\n    const [configPath] = useQueryParam('config', StringParam)\n    const [, setSessionId] = useQueryParam('session', StringParam)\n    const { rootModel } = pluginManager\n    const { error, jbrowse } = rootModel || {}\n    const session = rootModel?.session as SessionModel\n    const currentSessionId = session.id\n\n    useEffect(() => {\n      setSessionId(`local-${currentSessionId}`)\n      // @ts-ignore\n      window.JBrowseRootModel = rootModel\n      // @ts-ignore\n      window.JBrowseSession = session\n    }, [currentSessionId, rootModel, session, setSessionId])\n\n    useEffect(() => {\n      if (!jbrowse) {\n        return\n      }\n      onSnapshot(jbrowse, async snapshot => {\n        if (adminKey) {\n          const response = await fetch(adminServer || `/updateConfig`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              adminKey,\n              configPath,\n              config: snapshot,\n            }),\n          })\n          if (!response.ok) {\n            const message = await response.text()\n            if (session) {\n              session.notify(\n                `Admin server error: ${response.status} (${\n                  response.statusText\n                }) ${message || ''}`,\n              )\n            }\n          }\n        }\n      })\n    }, [jbrowse, session, adminKey, adminServer, configPath])\n\n    if (error) {\n      throw error\n    }\n    if (!rootModel) {\n      throw new Error('No rootModel found')\n    }\n    if (!session) {\n      throw new Error('No session found')\n    }\n\n    const theme = getConf(rootModel.jbrowse, 'theme')\n    return (\n      <ThemeProvider theme={createJBrowseTheme(theme)}>\n        <CssBaseline />\n        <App\n          session={session}\n          HeaderButtons={<ShareButton session={session} />}\n        />\n        {adminKey ? <AdminComponent pluginManager={pluginManager} /> : null}\n      </ThemeProvider>\n    )\n  },\n)\n\nexport default JBrowse\n","// this is in a separate module here so it can be mocked out by jest. the\n// import.meta.url is not well recognized by jest and we use MainThreadRpc in\n// tests anyways right now\n//\n// note: this uses webpack 5 native worker modules\n//\n// see https://github.com/cmdcolin/cra-webpack5-web-worker-example for simple example\n// and docs https://webpack.js.org/guides/web-workers/\n//\n// also note: the craco config for webpack publicPath: 'auto' is needed for\n// these workers\nexport default function makeWorkerInstance() {\n  return new Worker(new URL('./rpc.worker.ts', import.meta.url))\n}\n","import jsonStableStringify from 'json-stable-stringify'\nimport { getParent, types, Instance, IAnyType } from 'mobx-state-tree'\nimport AbortablePromiseCache from 'abortable-promise-cache'\nimport { Feature } from '../util/simpleFeature'\nimport { getConf } from '../configuration'\nimport {\n  BaseRefNameAliasAdapter,\n  RegionsAdapter,\n} from '../data_adapters/BaseAdapter'\nimport PluginManager from '../PluginManager'\nimport { Region } from '../util/types'\nimport { makeAbortableReaction, when } from '../util'\nimport QuickLRU from '../util/QuickLRU'\nimport { AnyConfigurationModel } from '../configuration/configurationSchema'\n\n// Based on the UCSC Genome Browser chromosome color palette:\n// https://github.com/ucscGenomeBrowser/kent/blob/a50ed53aff81d6fb3e34e6913ce18578292bc24e/src/hg/inc/chromColors.h\n// Some colors darkened to have at least a 3:1 contrast ratio on a white\n// background\nconst refNameColors = [\n  'rgb(153, 102, 0)',\n  'rgb(102, 102, 0)',\n  'rgb(153, 153, 30)',\n  'rgb(204, 0, 0)',\n  'rgb(255, 0, 0)',\n  'rgb(255, 0, 204)',\n  'rgb(165, 132, 132)', // originally 'rgb(255, 204, 204)'\n  'rgb(204, 122, 0)', // originally rgb(255, 153, 0)'\n  'rgb(178, 142, 0)', // originally 'rgb(255, 204, 0)'\n  'rgb(153, 153, 0)', // originally 'rgb(255, 255, 0)'\n  'rgb(122, 153, 0)', // originally 'rgb(204, 255, 0)'\n  'rgb(0, 165, 0)', // originally 'rgb(0, 255, 0)'\n  'rgb(53, 128, 0)',\n  'rgb(0, 0, 204)',\n  'rgb(96, 145, 242)', // originally 'rgb(102, 153, 255)'\n  'rgb(107, 142, 178)', // originally 'rgb(153, 204, 255)'\n  'rgb(0, 165, 165)', // originally 'rgb(0, 255, 255)'\n  'rgb(122, 153, 153)', // originally 'rgb(204, 255, 255)'\n  'rgb(153, 0, 204)',\n  'rgb(204, 51, 255)',\n  'rgb(173, 130, 216)', // originally 'rgb(204, 153, 255)'\n  'rgb(102, 102, 102)',\n  'rgb(145, 145, 145)', // originally 'rgb(153, 153, 153)'\n  'rgb(142, 142, 142)', // originally 'rgb(204, 204, 204)'\n  'rgb(142, 142, 107)', // originally 'rgb(204, 204, 153)'\n  'rgb(96, 163, 48)', // originally 'rgb(121, 204, 61)'\n]\n\nasync function loadRefNameMap(\n  assembly: Assembly,\n  adapterConf: unknown,\n  options: BaseOptions,\n  signal?: AbortSignal,\n) {\n  const { sessionId } = options\n  await when(() => Boolean(assembly.regions && assembly.refNameAliases), {\n    signal,\n    name: 'when assembly ready',\n  })\n\n  const refNames = (await assembly.rpcManager.call(\n    sessionId,\n    'CoreGetRefNames',\n    {\n      adapterConfig: adapterConf,\n      signal,\n      ...options,\n    },\n    { timeout: 1000000 },\n  )) as string[]\n\n  const { refNameAliases } = assembly\n  if (!refNameAliases) {\n    throw new Error(`error loading assembly ${assembly.name}'s refNameAliases`)\n  }\n\n  const refNameMap = Object.fromEntries(\n    refNames.map(name => {\n      checkRefName(name)\n      return [assembly.getCanonicalRefName(name), name]\n    }),\n  )\n\n  // make the reversed map too\n  const reversed = Object.fromEntries(\n    Object.entries(refNameMap).map(([canonicalName, adapterName]) => [\n      adapterName,\n      canonicalName,\n    ]),\n  )\n\n  return {\n    forwardMap: refNameMap,\n    reverseMap: reversed,\n  }\n}\n\n// Valid refName pattern from https://samtools.github.io/hts-specs/SAMv1.pdf\nfunction checkRefName(refName: string) {\n  if (\n    !refName.match(\n      /[0-9A-Za-z!#$%&+./:;?@^_|~-][0-9A-Za-z!#$%&*+./:;=?@^_|~-]*/,\n    )\n  ) {\n    throw new Error(`Encountered invalid refName: \"${refName}\"`)\n  }\n}\n\nfunction getAdapterId(adapterConf: unknown) {\n  return jsonStableStringify(adapterConf)\n}\n\ntype RefNameAliases = Record<string, string>\n\nexport interface BaseOptions {\n  signal?: AbortSignal\n  sessionId: string\n  statusCallback?: Function\n}\ninterface CacheData {\n  adapterConf: unknown\n  self: Assembly\n  sessionId: string\n  options: BaseOptions\n}\n\nexport interface BasicRegion {\n  start: number\n  end: number\n  refName: string\n  assemblyName: string\n}\nexport default function assemblyFactory(\n  assemblyConfigType: IAnyType,\n  pluginManager: PluginManager,\n) {\n  const adapterLoads = new AbortablePromiseCache({\n    cache: new QuickLRU({ maxSize: 1000 }),\n    async fill(\n      args: CacheData,\n      abortSignal?: AbortSignal,\n      statusCallback?: Function,\n    ) {\n      const { adapterConf, self, options } = args\n      return loadRefNameMap(\n        self,\n        adapterConf,\n        { ...options, statusCallback },\n        abortSignal,\n      )\n    },\n  })\n\n  return types\n    .model({\n      configuration: types.safeReference(assemblyConfigType),\n    })\n    .volatile(() => ({\n      error: undefined as Error | undefined,\n      regions: undefined as BasicRegion[] | undefined,\n      refNameAliases: undefined as { [key: string]: string } | undefined,\n      cytobands: undefined as Feature[] | undefined,\n    }))\n    .views(self => ({\n      get initialized() {\n        return !!self.refNameAliases\n      },\n      get name(): string {\n        return getConf(self, 'name')\n      },\n\n      get aliases(): string[] {\n        return getConf(self, 'aliases')\n      },\n\n      hasName(name: string) {\n        return this.allAliases.includes(name)\n      },\n\n      get allAliases() {\n        return [this.name, ...this.aliases]\n      },\n      get refNames() {\n        return self.regions?.map(region => region.refName)\n      },\n      get allRefNames() {\n        return !self.refNameAliases\n          ? undefined\n          : Object.keys(self.refNameAliases)\n      },\n      get rpcManager() {\n        return getParent(self, 2).rpcManager\n      },\n      get refNameColors() {\n        const colors: string[] = getConf(self, 'refNameColors')\n        if (colors.length === 0) {\n          return refNameColors\n        }\n        return colors\n      },\n    }))\n    .views(self => ({\n      getCanonicalRefName(refName: string) {\n        if (!self.refNameAliases) {\n          throw new Error(\n            'aliases not loaded, we expect them to be loaded before getCanonicalRefName can be called',\n          )\n        }\n        return self.refNameAliases[refName]\n      },\n      getRefNameColor(refName: string) {\n        const idx = self.refNames?.findIndex(r => r === refName)\n        if (idx === undefined || idx === -1) {\n          return undefined\n        }\n        return self.refNameColors[idx % self.refNameColors.length]\n      },\n      isValidRefName(refName: string) {\n        if (!self.refNameAliases) {\n          throw new Error(\n            'isValidRefName cannot be called yet, the assembly has not finished loading',\n          )\n        }\n        return !!this.getCanonicalRefName(refName)\n      },\n    }))\n    .actions(self => ({\n      setLoading() {},\n      setLoaded({\n        adapterRegionsWithAssembly,\n        refNameAliases,\n        cytobands,\n      }: {\n        adapterRegionsWithAssembly: Region[]\n        refNameAliases: RefNameAliases\n        cytobands: Feature[]\n      }) {\n        this.setRegions(adapterRegionsWithAssembly)\n        this.setRefNameAliases(refNameAliases)\n        this.setCytobands(cytobands)\n      },\n      setError(e: Error) {\n        console.error(e)\n        self.error = e\n      },\n      setRegions(regions: Region[]) {\n        self.regions = regions\n      },\n      setRefNameAliases(refNameAliases: RefNameAliases) {\n        self.refNameAliases = refNameAliases\n      },\n      setCytobands(cytobands: Feature[]) {\n        self.cytobands = cytobands\n      },\n      afterAttach() {\n        makeAbortableReaction(\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          self as any,\n          // @ts-ignore\n          makeLoadAssemblyData(pluginManager),\n          loadAssemblyReaction,\n          { name: `${self.name} assembly loading`, fireImmediately: true },\n          this.setLoading,\n          this.setLoaded,\n          this.setError,\n        )\n      },\n    }))\n    .views(self => ({\n      getAdapterMapEntry(adapterConf: unknown, options: BaseOptions) {\n        const { signal, statusCallback, ...rest } = options\n        if (!options.sessionId) {\n          throw new Error('sessionId is required')\n        }\n        const adapterId = getAdapterId(adapterConf)\n        return adapterLoads.get(\n          adapterId,\n          {\n            adapterConf,\n            self: self as Assembly,\n            options: rest,\n          } as CacheData,\n\n          // signal intentionally not passed here, fixes issues like #2221.\n          // alternative fix #2540 was proposed but non-working currently\n          undefined,\n          statusCallback,\n        )\n      },\n\n      /**\n       * get Map of `canonical-name -> adapter-specific-name`\n       */\n      async getRefNameMapForAdapter(adapterConf: unknown, opts: BaseOptions) {\n        if (!opts || !opts.sessionId) {\n          throw new Error('sessionId is required')\n        }\n        const map = await this.getAdapterMapEntry(adapterConf, opts)\n        return map.forwardMap\n      },\n\n      /**\n       * get Map of `adapter-specific-name -> canonical-name`\n       */\n      async getReverseRefNameMapForAdapter(\n        adapterConf: unknown,\n        opts: BaseOptions,\n      ) {\n        const map = await this.getAdapterMapEntry(adapterConf, opts)\n        return map.reverseMap\n      },\n    }))\n}\n\nfunction makeLoadAssemblyData(pluginManager: PluginManager) {\n  return (self: Assembly) => {\n    if (self.configuration) {\n      // use full configuration instead of snapshot of the config, the\n      // rpcManager normally receives a snapshot but we bypass rpcManager here\n      // to avoid spinning up a webworker\n      const { sequence, refNameAliases, cytobands } = self.configuration\n      const sequenceAdapterConfig = sequence.adapter\n      const refNameAliasesAdapterConfig = refNameAliases?.adapter\n      const cytobandAdapterConfig = cytobands?.adapter\n      return {\n        sequenceAdapterConfig,\n        assemblyName: self.name,\n        refNameAliasesAdapterConfig,\n        cytobandAdapterConfig,\n        pluginManager,\n      }\n    }\n    return undefined\n  }\n}\nasync function loadAssemblyReaction(\n  props: ReturnType<ReturnType<typeof makeLoadAssemblyData>> | undefined,\n  signal: AbortSignal,\n) {\n  if (!props) {\n    return\n  }\n\n  const {\n    sequenceAdapterConfig,\n    assemblyName,\n    refNameAliasesAdapterConfig,\n    cytobandAdapterConfig,\n    pluginManager,\n  } = props\n\n  const adapterRegions = await getAssemblyRegions(\n    sequenceAdapterConfig,\n    pluginManager,\n    signal,\n  )\n  const adapterRegionsWithAssembly = adapterRegions.map(adapterRegion => {\n    checkRefName(adapterRegion.refName)\n    return { ...adapterRegion, assemblyName }\n  })\n  const refNameAliases: RefNameAliases = {}\n\n  const aliases = await getRefNameAliases(\n    refNameAliasesAdapterConfig,\n    pluginManager,\n    signal,\n  )\n  const cytobands = await getCytobands(cytobandAdapterConfig, pluginManager)\n  aliases.forEach(({ refName, aliases }) => {\n    aliases.forEach(alias => {\n      checkRefName(alias)\n      refNameAliases[alias] = refName\n    })\n  })\n  // add identity to the refNameAliases list\n  adapterRegionsWithAssembly.forEach(region => {\n    refNameAliases[region.refName] = region.refName\n  })\n\n  return { adapterRegionsWithAssembly, refNameAliases, cytobands }\n}\n\nasync function getRefNameAliases(\n  config: AnyConfigurationModel,\n  pluginManager: PluginManager,\n  signal?: AbortSignal,\n) {\n  const type = pluginManager.getAdapterType(config.type)\n  const CLASS = await type.getAdapterClass?.()\n  const adapter = new CLASS(\n    config,\n    undefined,\n    pluginManager,\n  ) as BaseRefNameAliasAdapter\n  return adapter.getRefNameAliases({\n    signal,\n  })\n}\n\nasync function getCytobands(\n  config: AnyConfigurationModel,\n  pluginManager: PluginManager,\n) {\n  const type = pluginManager.getAdapterType(config.type)\n  const CLASS = await type.getAdapterClass()\n  const adapter = new CLASS(config, undefined, pluginManager)\n\n  // @ts-ignore\n  return adapter.getData()\n}\n\nasync function getAssemblyRegions(\n  config: AnyConfigurationModel,\n  pluginManager: PluginManager,\n  signal?: AbortSignal,\n) {\n  const type = pluginManager.getAdapterType(config.type)\n  const CLASS = await type.getAdapterClass()\n  const adapter = new CLASS(config, undefined, pluginManager) as RegionsAdapter\n  return adapter.getRegions({ signal })\n}\n\nexport type AssemblyModel = ReturnType<typeof assemblyFactory>\nexport type Assembly = Instance<AssemblyModel>\n","import { reaction } from 'mobx'\nimport {\n  addDisposer,\n  cast,\n  getParent,\n  types,\n  Instance,\n  IAnyType,\n} from 'mobx-state-tree'\nimport { when } from '../util'\nimport { readConfObject } from '../configuration'\nimport { AnyConfigurationModel } from '../configuration/configurationSchema'\n\nimport assemblyFactory from './assembly'\nimport PluginManager from '../PluginManager'\n\nexport default function assemblyManagerFactory(\n  assemblyConfigType: IAnyType,\n  pluginManager: PluginManager,\n) {\n  const Assembly = assemblyFactory(assemblyConfigType, pluginManager)\n  return types\n    .model({\n      assemblies: types.array(Assembly),\n    })\n    .views(self => ({\n      get(assemblyName: string) {\n        return self.assemblies.find(assembly => assembly.hasName(assemblyName))\n      },\n\n      get assemblyNamesList() {\n        return this.assemblyList.map(asm => asm.name)\n      },\n\n      get assemblyList() {\n        // name is the explicit identifier and can be accessed without getConf,\n        // hence the union with {name:string}\n        const {\n          jbrowse: { assemblies },\n          session: { sessionAssemblies = [] } = {},\n        } = getParent(self)\n        return [\n          ...assemblies,\n          ...sessionAssemblies,\n        ] as (AnyConfigurationModel & { name: string })[]\n      },\n\n      get rpcManager() {\n        return getParent(self).rpcManager\n      },\n      get pluginManager() {\n        return getParent(self).pluginManager\n      },\n      get allPossibleRefNames() {\n        let refNames: string[] = []\n        for (const assembly of self.assemblies) {\n          if (!assembly.allRefNames) {\n            return undefined\n          }\n          refNames = refNames.concat(assembly.allRefNames)\n        }\n        return refNames\n      },\n    }))\n    .views(self => ({\n      // use this method instead of assemblyManager.get(assemblyName)\n      // get an assembly with regions loaded\n      async waitForAssembly(assemblyName: string) {\n        if (!assemblyName) {\n          throw new Error('no assembly name supplied to waitForAssembly')\n        }\n        const assembly = self.get(assemblyName)\n        if (assembly) {\n          await when(\n            () =>\n              Boolean(assembly.regions && assembly.refNameAliases) ||\n              !!assembly.error,\n          )\n          if (assembly.error) {\n            throw assembly.error\n          }\n          return assembly\n        }\n        return undefined\n      },\n\n      async getRefNameMapForAdapter(\n        adapterConf: unknown,\n        assemblyName: string,\n        opts: { signal?: AbortSignal; sessionId: string },\n      ) {\n        await when(() => Boolean(self.get(assemblyName)), {\n          signal: opts.signal,\n          name: 'when assembly ready',\n        })\n\n        return self\n          .get(assemblyName)\n          ?.getRefNameMapForAdapter(adapterConf, opts)\n      },\n      async getReverseRefNameMapForAdapter(\n        adapterConf: unknown,\n        assemblyName: string,\n        opts: { signal?: AbortSignal; sessionId: string },\n      ) {\n        await when(() => Boolean(self.get(assemblyName)), {\n          signal: opts.signal,\n          name: 'when assembly ready',\n        })\n        return self\n          .get(assemblyName)\n          ?.getReverseRefNameMapForAdapter(adapterConf, opts)\n      },\n      isValidRefName(refName: string, assemblyName?: string) {\n        if (assemblyName) {\n          const assembly = self.get(assemblyName)\n          if (assembly) {\n            return assembly.isValidRefName(refName)\n          }\n          throw new Error(\n            `isValidRefName for ${assemblyName} failed, assembly does not exist`,\n          )\n        }\n        if (!self.allPossibleRefNames) {\n          throw new Error(\n            `isValidRefName not available, assemblyManager has not yet finished loading. If you are looking for a refname in a specific assembly, pass assembly argument`,\n          )\n        }\n        return self.allPossibleRefNames.includes(refName)\n      },\n    }))\n    .actions(self => ({\n      removeAssembly(asm: Instance<typeof Assembly>) {\n        self.assemblies.remove(asm)\n      },\n      afterAttach() {\n        addDisposer(\n          self,\n          reaction(\n            // have to slice it to be properly reacted to\n            () => self.assemblyList,\n            assemblyConfigs => {\n              self.assemblies.forEach(asm => {\n                if (!asm.configuration) {\n                  this.removeAssembly(asm)\n                }\n              })\n              assemblyConfigs.forEach(assemblyConfig => {\n                const existingAssemblyIdx = self.assemblies.findIndex(\n                  assembly =>\n                    assembly.name === readConfObject(assemblyConfig, 'name'),\n                )\n                if (existingAssemblyIdx === -1) {\n                  this.addAssembly(assemblyConfig)\n                }\n              })\n            },\n            { fireImmediately: true, name: 'assemblyManagerAfterAttach' },\n          ),\n        )\n      },\n\n      // this can take an active instance of an assembly, in which case it is\n      // referred to, or it can take an identifier e.g. assembly name, which is\n      // used as a reference. snapshots cannot be used\n      addAssembly(\n        assemblyConfig: Instance<typeof assemblyConfigType> | string,\n      ) {\n        self.assemblies.push({ configuration: assemblyConfig })\n      },\n\n      replaceAssembly(\n        idx: number,\n        assemblyConfig: Instance<typeof assemblyConfigType> | string,\n      ) {\n        self.assemblies[idx] = cast({\n          configuration: assemblyConfig,\n        })\n      },\n    }))\n}\n","import { ConfigurationSchema } from '../configuration'\nimport PluginManager from '../PluginManager'\n\nexport default (pluginManager: PluginManager) => {\n  return ConfigurationSchema(\n    'BaseAssembly',\n    {\n      aliases: {\n        type: 'stringArray',\n        defaultValue: [],\n        description: 'Other possible names for the assembly',\n      },\n      sequence: pluginManager.getTrackType('ReferenceSequenceTrack')\n        .configSchema,\n\n      refNameColors: {\n        type: 'stringArray',\n        defaultValue: [],\n        description:\n          'Define custom colors for each reference sequence. Will cycle through this list if there are not enough colors for every sequence.',\n      },\n      refNameAliases: ConfigurationSchema(\n        'RefNameAliases',\n        {\n          adapter: pluginManager.pluggableConfigSchemaType('adapter'),\n        },\n        {\n          preProcessSnapshot: snap => {\n            // allow refNameAliases to be unspecified\n            // @ts-ignore\n            if (!snap.adapter) {\n              return { adapter: { type: 'RefNameAliasAdapter' } }\n            }\n            return snap\n          },\n        },\n      ),\n      cytobands: ConfigurationSchema(\n        'Cytoband',\n        {\n          adapter: pluginManager.pluggableConfigSchemaType('adapter'),\n        },\n        {\n          preProcessSnapshot: snap => {\n            // allow cytoBand to be unspecified\n            // @ts-ignore\n            if (!snap.adapter) {\n              return { adapter: { type: 'CytobandAdapter' } }\n            }\n            return snap\n          },\n        },\n      ),\n      displayName: {\n        type: 'string',\n        defaultValue: '',\n        description:\n          'A human readable display name for the assembly e.g. \"Homo sapiens (hg38)\" while the assembly name may just be \"hg38\"',\n      },\n    },\n    {\n      explicitIdentifier: 'name',\n    },\n  )\n}\n","import { types } from 'mobx-state-tree'\nimport { ConfigurationSchema } from '../configuration'\n\nconst BaseRpcDriverConfigSchema = ConfigurationSchema(\n  'BaseRpcDriver',\n  {\n    workerCount: {\n      type: 'number',\n      description:\n        'The number of workers to use. If 0 (the default) JBrowse will decide how many workers to use.',\n      defaultValue: 0,\n    },\n  },\n  { explicitlyTyped: true },\n)\nconst MainThreadRpcDriverConfigSchema = ConfigurationSchema(\n  'MainThreadRpcDriver',\n  {},\n  { explicitlyTyped: true, baseConfiguration: BaseRpcDriverConfigSchema },\n)\nconst WebWorkerRpcDriverConfigSchema = ConfigurationSchema(\n  'WebWorkerRpcDriver',\n  {},\n  { explicitlyTyped: true, baseConfiguration: BaseRpcDriverConfigSchema },\n)\n\nexport default ConfigurationSchema(\n  'RpcOptions',\n  {\n    defaultDriver: {\n      type: 'string',\n      description:\n        'the RPC driver to use for tracks and tasks that are not configured to use a specific RPC backend',\n      defaultValue: 'MainThreadRpcDriver',\n    },\n    drivers: types.optional(\n      types.map(\n        types.union(\n          MainThreadRpcDriverConfigSchema,\n          WebWorkerRpcDriverConfigSchema,\n        ),\n      ),\n      { MainThreadRpcDriver: { type: 'MainThreadRpcDriver' } },\n    ),\n  },\n  {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    actions: (self: any) => ({\n      addDriverConfig(configName: string, configSnapshot: { type: string }) {\n        self.drivers.set(configName, configSnapshot)\n      },\n    }),\n  },\n)\n","import { isAlive, isStateTreeNode } from 'mobx-state-tree'\nimport { clamp, objectFromEntries } from '../util'\nimport { serializeAbortSignal } from './remoteAbortSignals'\nimport PluginManager from '../PluginManager'\nimport { readConfObject, AnyConfigurationModel } from '../configuration'\n\nexport interface WorkerHandle {\n  status?: string\n  error?: Error\n  on?: (channel: string, callback: (message: string) => void) => void\n  off?: (channel: string, callback: (message: string) => void) => void\n  destroy(): void\n  call(\n    functionName: string,\n    args?: unknown,\n    options?: {\n      statusCallback?(message: string): void\n      timeout?: number\n      rpcDriverClassName: string\n    },\n  ): Promise<unknown>\n}\n\nexport interface RpcDriverConstructorArgs {\n  config: AnyConfigurationModel\n}\n\nfunction isClonable(thing: unknown): boolean {\n  if (typeof thing === 'function') {\n    return false\n  }\n  if (thing instanceof Error) {\n    return false\n  }\n  return true\n}\n\n// watches the given worker object, returns a promise that will be rejected if\n// the worker times out\nexport async function watchWorker(\n  worker: WorkerHandle,\n  pingTime: number,\n  rpcDriverClassName: string,\n) {\n  // after first ping succeeds, apply wait for timeout\n  return new Promise((_resolve, reject) => {\n    function delay() {\n      setTimeout(async () => {\n        try {\n          await worker.call('ping', [], {\n            timeout: pingTime * 2,\n            rpcDriverClassName,\n          })\n          delay()\n        } catch (e) {\n          reject(e)\n        }\n      }, pingTime)\n    }\n    delay()\n  })\n}\n\nfunction detectHardwareConcurrency() {\n  const mainThread = typeof window !== 'undefined'\n  const canDetect = mainThread && 'hardwareConcurrency' in window.navigator\n  if (mainThread && canDetect) {\n    return window.navigator.hardwareConcurrency\n  }\n  return 1\n}\nclass LazyWorker {\n  workerP?: Promise<WorkerHandle> | undefined\n\n  constructor(public driver: BaseRpcDriver) {}\n\n  async getWorker() {\n    if (!this.workerP) {\n      this.workerP = this.driver\n        .makeWorker()\n        .then(worker => {\n          watchWorker(worker, this.driver.maxPingTime, this.driver.name).catch(\n            error => {\n              if (worker) {\n                console.error(\n                  'worker did not respond, killing and generating new one',\n                )\n                console.error(error)\n                worker.destroy()\n                worker.status = 'killed'\n                worker.error = error\n                this.workerP = undefined\n              }\n            },\n          )\n          return worker\n        })\n        .catch(e => {\n          this.workerP = undefined\n          throw e\n        })\n    }\n    return this.workerP\n  }\n}\n\nexport default abstract class BaseRpcDriver {\n  abstract name: string\n\n  private lastWorkerAssignment = -1\n\n  private workerAssignments = new Map<string, number>() // sessionId -> worker number\n\n  abstract makeWorker(): Promise<WorkerHandle>\n\n  private workerPool?: LazyWorker[]\n\n  maxPingTime = 30000\n\n  workerCheckFrequency = 5000\n\n  config: AnyConfigurationModel\n\n  constructor(args: RpcDriverConstructorArgs) {\n    this.config = args.config\n  }\n\n  // filter the given object and just remove any non-clonable things from it\n  filterArgs<THING_TYPE>(thing: THING_TYPE, sessionId: string): THING_TYPE {\n    if (Array.isArray(thing)) {\n      return thing\n        .filter(isClonable)\n        .map(t => this.filterArgs(t, sessionId)) as unknown as THING_TYPE\n    }\n    if (typeof thing === 'object' && thing !== null) {\n      // AbortSignals are specially handled\n      if (thing instanceof AbortSignal) {\n        return serializeAbortSignal(\n          thing,\n          this.remoteAbort.bind(this, sessionId),\n        ) as unknown as THING_TYPE\n      }\n\n      if (isStateTreeNode(thing) && !isAlive(thing)) {\n        throw new Error('dead state tree node passed to RPC call')\n      }\n\n      // special case, don't try to iterate the file's subelements as the\n      // object entries below would\n      if (thing instanceof File) {\n        return thing\n      }\n\n      return objectFromEntries(\n        Object.entries(thing)\n          .filter(e => isClonable(e[1]))\n          .map(([k, v]) => [k, this.filterArgs(v, sessionId)]),\n      ) as THING_TYPE\n    }\n    return thing\n  }\n\n  async remoteAbort(sessionId: string, functionName: string, signalId: number) {\n    const worker = await this.getWorker(sessionId)\n    worker.call(\n      functionName,\n      { signalId },\n      { timeout: 1000000, rpcDriverClassName: this.name },\n    )\n  }\n\n  createWorkerPool(): LazyWorker[] {\n    const hardwareConcurrency = detectHardwareConcurrency()\n\n    const workerCount =\n      readConfObject(this.config, 'workerCount') ||\n      clamp(1, Math.max(1, hardwareConcurrency - 1), 5)\n\n    return [...new Array(workerCount)].map(() => new LazyWorker(this))\n  }\n\n  getWorkerPool() {\n    if (!this.workerPool) {\n      const res = this.createWorkerPool()\n      this.workerPool = res\n      return res // making this several steps makes TS happy\n    }\n    return this.workerPool\n  }\n\n  async getWorker(sessionId: string): Promise<WorkerHandle> {\n    const workers = this.getWorkerPool()\n    let workerNumber = this.workerAssignments.get(sessionId)\n    if (workerNumber === undefined) {\n      const workerAssignment = (this.lastWorkerAssignment + 1) % workers.length\n      this.workerAssignments.set(sessionId, workerAssignment)\n      this.lastWorkerAssignment = workerAssignment\n      workerNumber = workerAssignment\n    }\n\n    // console.log(`${sessionId} -> worker ${workerNumber}`)\n    const worker = workers[workerNumber].getWorker()\n    if (!worker) {\n      throw new Error('no web workers registered for RPC')\n    }\n    return worker\n  }\n\n  async call(\n    pluginManager: PluginManager,\n    sessionId: string,\n    functionName: string,\n    args: { statusCallback?: (message: string) => void },\n    options = {},\n  ) {\n    if (!sessionId) {\n      throw new TypeError('sessionId is required')\n    }\n    let done = false\n    const worker = await this.getWorker(sessionId)\n    const rpcMethod = pluginManager.getRpcMethodType(functionName)\n    const serializedArgs = await rpcMethod.serializeArguments(args, this.name)\n    const filteredAndSerializedArgs = this.filterArgs(serializedArgs, sessionId)\n\n    // now actually call the worker\n    const callP = worker\n      .call(functionName, filteredAndSerializedArgs, {\n        timeout: 5 * 60 * 1000, // 5 minutes\n        statusCallback: args.statusCallback,\n        rpcDriverClassName: this.name,\n        ...options,\n      })\n      .finally(() => {\n        done = true\n      })\n\n    // check every 5 seconds to see if the worker has been killed, and\n    // reject the killedP promise if it has\n    let killedCheckInterval: ReturnType<typeof setInterval>\n    const killedP = new Promise((resolve, reject) => {\n      killedCheckInterval = setInterval(() => {\n        // must've been killed\n        if (worker.status === 'killed') {\n          reject(\n            new Error(\n              `operation timed out, worker process stopped responding, ${worker.error}`,\n            ),\n          )\n        } else if (done) {\n          resolve(true)\n        }\n      }, this.workerCheckFrequency)\n    }).finally(() => {\n      clearInterval(killedCheckInterval)\n    })\n\n    // the result is a race between the actual result promise, and the \"killed\"\n    // promise. the killed promise will only actually win if the worker was\n    // killed before the call could return\n    const resultP = Promise.race([callP, killedP])\n    return rpcMethod.deserializeReturn(resultP, args, this.name)\n  }\n}\n","import Rpc from 'librpc-web-mod'\nimport shortid from 'shortid'\nimport BaseRpcDriver, { RpcDriverConstructorArgs } from './BaseRpcDriver'\nimport { PluginDefinition } from '../PluginLoader'\n\ninterface WebWorkerRpcDriverConstructorArgs extends RpcDriverConstructorArgs {\n  makeWorkerInstance: () => Worker\n}\n\nclass WebWorkerHandle extends Rpc.Client {\n  destroy(): void {\n    this.workers[0].terminate()\n  }\n\n  async call(\n    functionName: string,\n    args: Record<string, unknown>,\n    opts: {\n      statusCallback?: (arg0: string) => void\n      rpcDriverClassName: string\n    },\n  ) {\n    const { statusCallback, rpcDriverClassName } = opts\n    const channel = `message-${shortid.generate()}`\n    const listener = (message: string) => {\n      if (statusCallback) {\n        statusCallback(message)\n      }\n    }\n    this.on(channel, listener)\n    const result = await super.call(\n      functionName,\n      { ...args, channel, rpcDriverClassName },\n      opts,\n    )\n    this.off(channel, listener)\n    return result\n  }\n}\n\nexport default class WebWorkerRpcDriver extends BaseRpcDriver {\n  name = 'WebWorkerRpcDriver'\n\n  makeWorkerInstance: () => Worker\n\n  constructor(\n    args: WebWorkerRpcDriverConstructorArgs,\n    public workerBootConfiguration: { plugins: PluginDefinition[] },\n  ) {\n    super(args)\n    this.makeWorkerInstance = args.makeWorkerInstance\n  }\n\n  async makeWorker() {\n    // note that we are making a Rpc.Client connection with a worker pool of\n    // one for each worker, because we want to do our own state-group-aware\n    // load balancing rather than using librpc's builtin round-robin\n    const instance = this.makeWorkerInstance()\n\n    const worker = new WebWorkerHandle({ workers: [instance] })\n\n    // send the worker its boot configuration using info from the pluginManager\n    const p = new Promise((resolve: (w: WebWorkerHandle) => void, reject) => {\n      worker.workers[0].onmessage = e => {\n        if (e.data === 'ready') {\n          resolve(worker)\n        } else if (e.data === 'readyForConfig') {\n          worker.workers[0].postMessage(this.workerBootConfiguration)\n        } else {\n          reject()\n        }\n      }\n    })\n\n    return p\n  }\n}\n","import BaseRpcDriver, { RpcDriverConstructorArgs } from './BaseRpcDriver'\nimport PluginManager from '../PluginManager'\n\nclass DummyHandle {\n  destroy(): void {}\n\n  async call(\n    _functionName: string,\n    _filteredArgs?: {},\n    _options = {},\n  ): Promise<unknown> {\n    return undefined\n  }\n}\n\n/**\n * Stub RPC driver class that runs RPC functions in-band in the main thread.\n *\n * @param rpcFuncs - object containing runnable rpc functions\n */\nexport default class MainThreadRpcDriver extends BaseRpcDriver {\n  name = 'MainThreadRpcDriver'\n\n  makeWorker: () => Promise<DummyHandle>\n\n  constructor(args: RpcDriverConstructorArgs) {\n    super(args)\n    this.makeWorker = async (): Promise<DummyHandle> => new DummyHandle()\n  }\n\n  async call(\n    pluginManager: PluginManager,\n    sessionId: string,\n    functionName: string,\n    args: {},\n  ): Promise<unknown> {\n    if (!sessionId) {\n      throw new TypeError('sessionId is required')\n    }\n    const rpcMethod = pluginManager.getRpcMethodType(functionName)\n    const serializedArgs = await rpcMethod.serializeArguments(args, this.name)\n    const result = await rpcMethod.execute(serializedArgs, this.name)\n    return rpcMethod.deserializeReturn(result, args, this.name)\n  }\n}\n","import PluginManager from '../PluginManager'\nimport { readConfObject } from '../configuration'\n\nimport rpcConfigSchema from './configSchema'\nimport WebWorkerRpcDriver from './WebWorkerRpcDriver'\nimport MainThreadRpcDriver from './MainThreadRpcDriver'\nimport { AnyConfigurationModel } from '../configuration/configurationSchema'\n\ntype DriverClass = WebWorkerRpcDriver | MainThreadRpcDriver\ntype BackendConfigurations = {\n  WebWorkerRpcDriver?: Omit<\n    ConstructorParameters<typeof WebWorkerRpcDriver>[0],\n    'config'\n  >\n  MainThreadRpcDriver?: Omit<\n    ConstructorParameters<typeof MainThreadRpcDriver>[0],\n    'config'\n  >\n}\nconst DriverClasses = {\n  WebWorkerRpcDriver,\n  MainThreadRpcDriver,\n}\n\nexport default class RpcManager {\n  static configSchema = rpcConfigSchema\n\n  driverObjects: Map<string, DriverClass>\n\n  constructor(\n    public pluginManager: PluginManager,\n    public mainConfiguration: AnyConfigurationModel,\n    public backendConfigurations: BackendConfigurations,\n  ) {\n    if (!mainConfiguration) {\n      throw new Error('RpcManager requires at least a main configuration')\n    }\n    this.driverObjects = new Map()\n  }\n\n  getDriver(backendName: keyof typeof DriverClasses) {\n    const driver = this.driverObjects.get(backendName)\n    if (driver) {\n      return driver\n    }\n    let newDriver\n    const config = this.mainConfiguration.drivers.get('WebWorkerRpcDriver')\n    if (backendName === 'MainThreadRpcDriver') {\n      const backendConfiguration =\n        this.backendConfigurations.MainThreadRpcDriver\n\n      if (!backendConfiguration) {\n        throw new Error(\n          `requested RPC driver \"${backendName}\" is missing config`,\n        )\n      }\n      newDriver = new MainThreadRpcDriver({ ...backendConfiguration, config })\n    } else if (backendName === 'WebWorkerRpcDriver') {\n      const backendConfiguration = this.backendConfigurations.WebWorkerRpcDriver\n      if (!backendConfiguration) {\n        throw new Error(\n          `requested RPC driver \"${backendName}\" is missing config`,\n        )\n      }\n      newDriver = new WebWorkerRpcDriver(\n        { ...backendConfiguration, config },\n        { plugins: this.pluginManager.runtimePluginDefinitions },\n      )\n    } else {\n      throw new Error(`requested RPC driver \"${backendName}\" is not installed`)\n    }\n    this.driverObjects.set(backendName, newDriver)\n    return newDriver\n  }\n\n  async getDriverForCall(\n    _sessionId: string,\n    _functionName: string,\n    args: { rpcDriverName?: string },\n  ) {\n    const backendName =\n      args.rpcDriverName ||\n      readConfObject(this.mainConfiguration, 'defaultDriver')\n\n    return this.getDriver(backendName)\n  }\n\n  async call(sessionId: string, functionName: string, args: {}, opts = {}) {\n    if (!sessionId) {\n      throw new Error('sessionId is required')\n    }\n    const driverForCall = await this.getDriverForCall(\n      sessionId,\n      functionName,\n      args,\n    )\n    return driverForCall.call(\n      this.pluginManager,\n      sessionId,\n      functionName,\n      args,\n      opts,\n    )\n  }\n}\n","/*  text-searching controller */\nimport BaseResult from './BaseResults'\nimport { AnyConfigurationModel } from '../configuration/configurationSchema'\n\nimport PluginManager from '../PluginManager'\nimport QuickLRU from '../util/QuickLRU'\nimport { SearchType, BaseTextSearchAdapter } from '../data_adapters/BaseAdapter'\nimport { readConfObject } from '../configuration'\n\nexport interface BaseArgs {\n  queryString: string\n  searchType?: SearchType\n  signal?: AbortSignal\n  limit?: number\n  pageNumber?: number\n}\n\nexport interface SearchScope {\n  includeAggregateIndexes: boolean\n  assemblyName: string\n  tracks?: Array<string>\n}\n\nexport default class TextSearchManager {\n  adapterCache: QuickLRU\n\n  constructor(public pluginManager: PluginManager) {\n    this.adapterCache = new QuickLRU({\n      maxSize: 15,\n    })\n  }\n\n  /**\n   * Instantiate/initialize list of relevant adapters\n   */\n  loadTextSearchAdapters(searchScope: SearchScope): BaseTextSearchAdapter[] {\n    return this.relevantAdapters(searchScope).map(adapterConfig => {\n      const adapterId = readConfObject(adapterConfig, 'textSearchAdapterId')\n      if (this.adapterCache.has(adapterId)) {\n        return this.adapterCache.get(adapterId)\n      } else {\n        const { AdapterClass } = this.pluginManager.getTextSearchAdapterType(\n          adapterConfig.type,\n        )\n        const adapter = new AdapterClass(\n          adapterConfig,\n          undefined,\n          this.pluginManager,\n        )\n        this.adapterCache.set(adapterId, adapter)\n        return adapter\n      }\n    })\n  }\n\n  /**\n   * Returns list of relevant text search adapters to use\n   * @param args - search options/arguments include: search query\n   */\n  relevantAdapters(searchScope: SearchScope) {\n    const { aggregateTextSearchAdapters, tracks } = this.pluginManager.rootModel\n      ?.jbrowse as {\n      tracks: AnyConfigurationModel[]\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      aggregateTextSearchAdapters: any\n    }\n\n    const { assemblyName } = searchScope\n\n    const relevant = [\n      ...this.getAdaptersWithAssembly(\n        assemblyName,\n        aggregateTextSearchAdapters,\n      ),\n      ...this.getTrackAdaptersWithAssembly(assemblyName, tracks),\n    ]\n    return relevant\n  }\n\n  getAdaptersWithAssembly(\n    asmName: string,\n    adapterConfs: AnyConfigurationModel[],\n  ) {\n    return adapterConfs.filter(conf =>\n      readConfObject(conf, 'assemblyNames')?.includes(asmName),\n    )\n  }\n\n  getTrackAdaptersWithAssembly(\n    asmName: string,\n    adapterConfs: AnyConfigurationModel[],\n  ) {\n    const tracksConfs = adapterConfs.filter(conf =>\n      readConfObject(conf, [\n        'textSearching',\n        'textSearchAdapter',\n        'assemblyNames',\n      ])?.includes(asmName),\n    )\n    const trackAdapters = tracksConfs.map(trackConf => {\n      const { textSearching } = trackConf\n      const { textSearchAdapter } = textSearching\n      return textSearchAdapter\n    })\n    return trackAdapters\n  }\n\n  /**\n   * Returns list of relevant results given a search query and options\n   * @param args - search options/arguments include: search query\n   * limit of results to return, searchType...prefix | full | exact\", etc.\n   */\n  async search(\n    args: BaseArgs,\n    searchScope: SearchScope,\n    rankFn: (results: BaseResult[]) => BaseResult[],\n  ) {\n    // determine list of relevant adapters based on scope\n    const textSearchAdapters = this.loadTextSearchAdapters(searchScope)\n    const results = await Promise.all(\n      textSearchAdapters.map(adapter => adapter.searchIndex(args)),\n    )\n\n    // aggregate and return relevant results\n    return this.sortResults(results.flat(), rankFn)\n  }\n\n  /**\n   * Returns array of revelevant and sorted results\n   * @param results - array of results from all text search adapters\n   * @param rankFn - function that updates results scores\n   * based on more relevance\n   */\n  sortResults(\n    results: BaseResult[],\n    rankFn: (results: BaseResult[]) => BaseResult[],\n  ) {\n    return rankFn(\n      results.sort((a, b) => -b.getLabel().localeCompare(a.getLabel())),\n    ).sort((result1, result2) => result1.getScore() - result2.getScore())\n  }\n}\n","import {\n  ConfigurationSchema,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport RpcManager from '@jbrowse/core/rpc/RpcManager'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { PluginDefinition } from '@jbrowse/core/PluginLoader'\nimport {\n  getParent,\n  getRoot,\n  getSnapshot,\n  resolveIdentifier,\n  types,\n  cast,\n} from 'mobx-state-tree'\nimport { toJS } from 'mobx'\nimport { SessionStateModel } from './sessionModelFactory'\nimport {\n  AnyConfigurationModel,\n  AnyConfigurationSchemaType,\n} from '@jbrowse/core/configuration/configurationSchema'\nimport clone from 'clone'\n\n// poke some things for testing (this stuff will eventually be removed)\n// @ts-ignore\nwindow.getSnapshot = getSnapshot\n// @ts-ignore\nwindow.resolveIdentifier = resolveIdentifier\n\nexport default function JBrowseWeb(\n  pluginManager: PluginManager,\n  Session: SessionStateModel,\n  assemblyConfigSchemasType: AnyConfigurationSchemaType,\n) {\n  const JBrowseModel = types\n    .model('JBrowseWeb', {\n      configuration: ConfigurationSchema('Root', {\n        rpc: RpcManager.configSchema,\n        // possibly consider this for global config editor\n        highResolutionScaling: {\n          type: 'number',\n          defaultValue: 2,\n        },\n        shareURL: {\n          type: 'string',\n          defaultValue: 'https://share.jbrowse.org/api/v1/',\n        },\n        featureDetails: ConfigurationSchema('FeatureDetails', {\n          sequenceTypes: {\n            type: 'stringArray',\n            defaultValue: ['mRNA', 'transcript'],\n          },\n        }),\n        disableAnalytics: {\n          type: 'boolean',\n          defaultValue: false,\n        },\n        theme: { type: 'frozen', defaultValue: {} },\n        logoPath: {\n          type: 'fileLocation',\n          defaultValue: { uri: '', locationType: 'UriLocation' },\n        },\n        ...pluginManager.pluginConfigurationSchemas(),\n      }),\n      plugins: types.array(types.frozen<PluginDefinition>()),\n      assemblies: types.array(assemblyConfigSchemasType),\n      // track configuration is an array of track config schemas. multiple\n      // instances of a track can exist that use the same configuration\n      tracks: types.array(pluginManager.pluggableConfigSchemaType('track')),\n      internetAccounts: types.array(\n        pluginManager.pluggableConfigSchemaType('internet account'),\n      ),\n      aggregateTextSearchAdapters: types.array(\n        pluginManager.pluggableConfigSchemaType('text search adapter'),\n      ),\n      connections: types.array(\n        pluginManager.pluggableConfigSchemaType('connection'),\n      ),\n      defaultSession: types.optional(types.frozen(Session), {\n        name: `New session`,\n      }),\n    })\n\n    .views(self => ({\n      get assemblyNames() {\n        return self.assemblies.map(assembly => readConfObject(assembly, 'name'))\n      },\n      get rpcManager() {\n        return getParent(self).rpcManager\n      },\n    }))\n    .actions(self => ({\n      afterCreate() {\n        const seen = [] as string[]\n        self.assemblyNames.forEach(assemblyName => {\n          if (!assemblyName) {\n            throw new Error('Encountered an assembly with no \"name\" defined')\n          }\n          if (seen.includes(assemblyName)) {\n            throw new Error(\n              `Found two assemblies with the same name: ${assemblyName}`,\n            )\n          } else {\n            seen.push(assemblyName)\n          }\n        })\n      },\n      addAssemblyConf(assemblyConf: AnyConfigurationModel) {\n        const { name } = assemblyConf\n        if (!name) {\n          throw new Error('Can\\'t add assembly with no \"name\"')\n        }\n        const assembly = self.assemblies.find(asm => asm.name === name)\n        if (assembly) {\n          return assembly\n        }\n        const length = self.assemblies.push({\n          ...assemblyConf,\n          sequence: {\n            type: 'ReferenceSequenceTrack',\n            trackId: `${name}-${Date.now()}`,\n            ...(assemblyConf.sequence || {}),\n          },\n        })\n        return self.assemblies[length - 1]\n      },\n      removeAssemblyConf(assemblyName: string) {\n        const toRemove = self.assemblies.find(\n          assembly => assembly.name === assemblyName,\n        )\n        if (toRemove) {\n          self.assemblies.remove(toRemove)\n        }\n      },\n      addTrackConf(trackConf: AnyConfigurationModel) {\n        const { type } = trackConf\n        if (!type) {\n          throw new Error(`unknown track type ${type}`)\n        }\n        const track = self.tracks.find(t => t.trackId === trackConf.trackId)\n        if (track) {\n          return track\n        }\n        const length = self.tracks.push(trackConf)\n        return self.tracks[length - 1]\n      },\n      addDisplayConf(trackId: string, displayConf: AnyConfigurationModel) {\n        const { type } = displayConf\n        if (!type) {\n          throw new Error(`unknown display type ${type}`)\n        }\n        const track = self.tracks.find(t => t.trackId === trackId)\n        if (!track) {\n          throw new Error(`could not find track with id ${trackId}`)\n        }\n        return track.addDisplayConf(displayConf)\n      },\n      addConnectionConf(connectionConf: AnyConfigurationModel) {\n        const { type } = connectionConf\n        if (!type) {\n          throw new Error(`unknown connection type ${type}`)\n        }\n        const length = self.connections.push(connectionConf)\n        return self.connections[length - 1]\n      },\n\n      deleteConnectionConf(configuration: AnyConfigurationModel) {\n        const idx = self.connections.findIndex(\n          conn => conn.id === configuration.id,\n        )\n        if (idx === -1) {\n          return undefined\n        }\n        return self.connections.splice(idx, 1)\n      },\n\n      deleteTrackConf(trackConf: AnyConfigurationModel) {\n        const { trackId } = trackConf\n        const idx = self.tracks.findIndex(t => t.trackId === trackId)\n        if (idx === -1) {\n          return undefined\n        }\n\n        return self.tracks.splice(idx, 1)\n      },\n      setDefaultSessionConf(sessionConf: AnyConfigurationModel) {\n        let newDefault\n        if (getParent(self).session.name === sessionConf.name) {\n          newDefault = getSnapshot(sessionConf)\n        } else {\n          newDefault = toJS(sessionConf)\n        }\n\n        if (!newDefault.name) {\n          throw new Error(`unable to set default session to ${newDefault.name}`)\n        }\n\n        // @ts-ignore complains about name missing, but above line checks this\n        self.defaultSession = cast(newDefault)\n      },\n      addPlugin(pluginDefinition: PluginDefinition) {\n        self.plugins.push(pluginDefinition)\n        const rootModel = getRoot(self)\n        rootModel.setPluginsUpdated(true)\n      },\n\n      removePlugin(pluginDefinition: PluginDefinition) {\n        self.plugins = cast(\n          self.plugins.filter(\n            plugin =>\n              plugin.url !== pluginDefinition.url ||\n              plugin.umdUrl !== pluginDefinition.umdUrl ||\n              plugin.cjsUrl !== pluginDefinition.cjsUrl ||\n              plugin.esmUrl !== pluginDefinition.esmUrl,\n          ),\n        )\n        const rootModel = getParent(self)\n        rootModel.setPluginsUpdated(true)\n      },\n\n      addInternetAccountConf(internetAccountConf: AnyConfigurationModel) {\n        const { type } = internetAccountConf\n        if (!type) {\n          throw new Error(`unknown internetAccount type ${type}`)\n        }\n        const length = self.internetAccounts.push(internetAccountConf)\n        return self.internetAccounts[length - 1]\n      },\n      deleteInternetAccountConf(configuration: AnyConfigurationModel) {\n        const idx = self.internetAccounts.findIndex(\n          acct => acct.id === configuration.id,\n        )\n        if (idx === -1) {\n          return undefined\n        }\n        return self.internetAccounts.splice(idx, 1)\n      },\n    }))\n\n  return types.snapshotProcessor(JBrowseModel, {\n    postProcessor(snapshot) {\n      function removeAttr(obj: Record<string, unknown>, attr: string) {\n        for (const prop in obj) {\n          if (prop === attr) {\n            delete obj[prop]\n          } else if (typeof obj[prop] === 'object') {\n            removeAttr(obj[prop] as Record<string, unknown>, attr)\n          }\n        }\n        return obj\n      }\n      return removeAttr(clone(snapshot), 'baseUri')\n    },\n  })\n}\n","import { IModelType, ModelProperties } from 'mobx-state-tree'\nimport { IObservableArray, observable } from 'mobx'\nimport { NotificationLevel, SnackAction } from '../util/types'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction makeExtension(snackbarMessages: IObservableArray<any>) {\n  return {\n    views: {\n      get snackbarMessages() {\n        return snackbarMessages\n      },\n    },\n    actions: {\n      notify(message: string, level?: NotificationLevel, action?: SnackAction) {\n        this.pushSnackbarMessage(message, level, action)\n        if (level === 'info' || level === 'success') {\n          setTimeout(() => {\n            this.removeSnackbarMessage(message)\n          }, 5000)\n        }\n      },\n\n      pushSnackbarMessage(\n        message: string,\n        level?: NotificationLevel,\n        action?: SnackAction,\n      ) {\n        return snackbarMessages.push([message, level, action])\n      },\n\n      popSnackbarMessage() {\n        return snackbarMessages.pop()\n      },\n\n      removeSnackbarMessage(message: string) {\n        const element = snackbarMessages.find(f => f[0] === message)\n        if (element) {\n          snackbarMessages.remove(element)\n        }\n      },\n    },\n  }\n}\n\nexport default function addSnackbarToModel<\n  PROPS extends ModelProperties,\n  OTHERS,\n>(\n  tree: IModelType<PROPS, OTHERS>,\n): IModelType<\n  PROPS,\n  OTHERS &\n    ReturnType<typeof makeExtension>['actions'] &\n    ReturnType<typeof makeExtension>['views']\n> {\n  return tree.extend(() => {\n    const snackbarMessages = observable.array()\n\n    return makeExtension(snackbarMessages)\n  })\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { lazy } from 'react'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport { PluginDefinition } from '@jbrowse/core/PluginLoader'\nimport {\n  readConfObject,\n  getConf,\n  isConfigurationModel,\n} from '@jbrowse/core/configuration'\nimport {\n  Region,\n  AbstractSessionModel,\n  TrackViewModel,\n  JBrowsePlugin,\n  DialogComponentType,\n} from '@jbrowse/core/util/types'\n\nimport addSnackbarToModel from '@jbrowse/core/ui/SnackbarModel'\nimport { getContainingView } from '@jbrowse/core/util'\nimport { observable } from 'mobx'\nimport {\n  getMembers,\n  getParent,\n  getRoot,\n  getSnapshot,\n  getType,\n  isAlive,\n  isModelType,\n  isReferenceType,\n  types,\n  walk,\n  cast,\n  IAnyStateTreeNode,\n  Instance,\n  SnapshotIn,\n} from 'mobx-state-tree'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport TextSearchManager from '@jbrowse/core/TextSearch/TextSearchManager'\nimport RpcManager from '@jbrowse/core/rpc/RpcManager'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport CopyIcon from '@material-ui/icons/FileCopy'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport InfoIcon from '@material-ui/icons/Info'\nimport shortid from 'shortid'\n\nconst AboutDialog = lazy(() => import('@jbrowse/core/ui/AboutDialog'))\n\nexport declare interface ReferringNode {\n  node: IAnyStateTreeNode\n  key: string\n}\n\nexport declare interface ReactProps {\n  [key: string]: any\n}\n\nexport default function sessionModelFactory(\n  pluginManager: PluginManager,\n  assemblyConfigSchemasType = types.frozen(), // if not using sessionAssemblies\n) {\n  const minDrawerWidth = 128\n  const sessionModel = types\n    .model('JBrowseWebSessionModel', {\n      id: types.optional(types.identifier, shortid()),\n      name: types.string,\n      margin: 0,\n      drawerWidth: types.optional(\n        types.refinement(types.integer, width => width >= minDrawerWidth),\n        384,\n      ),\n      views: types.array(pluginManager.pluggableMstType('view', 'stateModel')),\n      widgets: types.map(\n        pluginManager.pluggableMstType('widget', 'stateModel'),\n      ),\n      activeWidgets: types.map(\n        types.safeReference(\n          pluginManager.pluggableMstType('widget', 'stateModel'),\n        ),\n      ),\n      connectionInstances: types.array(\n        pluginManager.pluggableMstType('connection', 'stateModel'),\n      ),\n      sessionTracks: types.array(\n        pluginManager.pluggableConfigSchemaType('track'),\n      ),\n      sessionConnections: types.array(\n        pluginManager.pluggableConfigSchemaType('connection'),\n      ),\n      sessionAssemblies: types.array(assemblyConfigSchemasType),\n      sessionPlugins: types.array(types.frozen()),\n      minimized: types.optional(types.boolean, false),\n\n      drawerPosition: types.optional(\n        types.string,\n        localStorage.getItem('drawerPosition') || 'right',\n      ),\n    })\n    .volatile((/* self */) => ({\n      /**\n       * this is the globally \"selected\" object. can be anything.\n       * code that wants to deal with this should examine it to see what\n       * kind of thing it is.\n       */\n      selection: undefined,\n      /**\n       * this is the current \"task\" that is being performed in the UI.\n       * this is usually an object of the form\n       * `{ taskName: \"configure\", target: thing_being_configured }`\n       */\n      task: undefined,\n\n      queueOfDialogs: observable.array(\n        [] as [DialogComponentType, ReactProps][],\n      ),\n    }))\n    .views(self => ({\n      get DialogComponent() {\n        if (self.queueOfDialogs.length) {\n          const firstInQueue = self.queueOfDialogs[0]\n          return firstInQueue && firstInQueue[0]\n        }\n        return undefined\n      },\n      get DialogProps() {\n        if (self.queueOfDialogs.length) {\n          const firstInQueue = self.queueOfDialogs[0]\n          return firstInQueue && firstInQueue[1]\n        }\n        return undefined\n      },\n      get shareURL() {\n        return getConf(getParent(self).jbrowse, 'shareURL')\n      },\n      get rpcManager() {\n        return getParent(self).jbrowse.rpcManager as RpcManager\n      },\n      get configuration() {\n        return getParent(self).jbrowse.configuration\n      },\n      get assemblies() {\n        return getParent(self).jbrowse.assemblies\n      },\n      get assemblyNames() {\n        return getParent(self).jbrowse.assemblyNames\n      },\n      get tracks() {\n        return [...self.sessionTracks, ...getParent(self).jbrowse.tracks]\n      },\n      get textSearchManager(): TextSearchManager {\n        return getParent(self).textSearchManager\n      },\n      get connections() {\n        return [\n          ...self.sessionConnections,\n          ...getParent(self).jbrowse.connections,\n        ]\n      },\n      get adminMode() {\n        return getParent(self).adminMode\n      },\n      get savedSessions() {\n        return getParent(self).savedSessions\n      },\n      get previousAutosaveId() {\n        return getParent(self).previousAutosaveId\n      },\n      get savedSessionNames() {\n        return getParent(self).savedSessionNames\n      },\n      get history() {\n        return getParent(self).history\n      },\n      get menus() {\n        return getParent(self).menus\n      },\n      get assemblyManager() {\n        return getParent(self).assemblyManager\n      },\n      get version() {\n        return getParent(self).version\n      },\n\n      renderProps() {\n        return { theme: readConfObject(this.configuration, 'theme') }\n      },\n\n      get visibleWidget() {\n        if (isAlive(self)) {\n          // returns most recently added item in active widgets\n          return Array.from(self.activeWidgets.values())[\n            self.activeWidgets.size - 1\n          ]\n        }\n        return undefined\n      },\n      /**\n       * See if any MST nodes currently have a types.reference to this object.\n       * @param object - object\n       * @returns An array where the first element is the node referring\n       * to the object and the second element is they property name the node is\n       * using to refer to the object\n       */\n      getReferring(object: IAnyStateTreeNode) {\n        const refs: ReferringNode[] = []\n        walk(getParent(self), node => {\n          if (isModelType(getType(node))) {\n            const members = getMembers(node)\n            Object.entries(members.properties).forEach(([key, value]) => {\n              // @ts-ignore\n              if (isReferenceType(value) && node[key] === object) {\n                refs.push({ node, key })\n              }\n            })\n          }\n        })\n        return refs\n      },\n    }))\n    .actions(self => ({\n      setDrawerPosition(arg: string) {\n        self.drawerPosition = arg\n        localStorage.setItem('drawerPosition', arg)\n      },\n      queueDialog(\n        callback: (\n          doneCallback: () => void,\n        ) => [DialogComponentType, ReactProps],\n      ): void {\n        const [component, props] = callback(() => {\n          self.queueOfDialogs.shift()\n        })\n        self.queueOfDialogs.push([component, props])\n      },\n      setName(str: string) {\n        self.name = str\n      },\n\n      addAssembly(assemblyConfig: AnyConfigurationModel) {\n        const asm = self.sessionAssemblies.find(\n          f => f.name === assemblyConfig.name,\n        )\n        if (asm) {\n          console.warn(`Assembly ${assemblyConfig.name} was already existing`)\n          return asm\n        }\n        self.sessionAssemblies.push(assemblyConfig)\n      },\n      addSessionPlugin(plugin: JBrowsePlugin) {\n        if (self.sessionPlugins.find(p => p.name === plugin.name)) {\n          throw new Error('session plugin cannot be installed twice')\n        }\n        self.sessionPlugins.push(plugin)\n        const rootModel = getRoot(self)\n        rootModel.setPluginsUpdated(true)\n      },\n      removeAssembly(assemblyName: string) {\n        const index = self.sessionAssemblies.findIndex(\n          asm => asm.name === assemblyName,\n        )\n        if (index !== -1) {\n          self.sessionAssemblies.splice(index, 1)\n        }\n      },\n      removeSessionPlugin(pluginDefinition: PluginDefinition) {\n        self.sessionPlugins = cast(\n          self.sessionPlugins.filter(\n            plugin =>\n              plugin.url !== pluginDefinition.url ||\n              plugin.umdUrl !== pluginDefinition.umdUrl ||\n              plugin.cjsUrl !== pluginDefinition.cjsUrl ||\n              plugin.esmUrl !== pluginDefinition.esmUrl,\n          ),\n        )\n        const rootModel = getParent(self)\n        rootModel.setPluginsUpdated(true)\n      },\n      makeConnection(\n        configuration: AnyConfigurationModel,\n        initialSnapshot = {},\n      ) {\n        const { type } = configuration\n        if (!type) {\n          throw new Error('track configuration has no `type` listed')\n        }\n        const name = readConfObject(configuration, 'name')\n        const connectionType = pluginManager.getConnectionType(type)\n        if (!connectionType) {\n          throw new Error(`unknown connection type ${type}`)\n        }\n        const connectionData = {\n          ...initialSnapshot,\n          name,\n          type,\n          configuration,\n        }\n        const length = self.connectionInstances.push(connectionData)\n        return self.connectionInstances[length - 1]\n      },\n\n      removeReferring(\n        referring: any,\n        track: any,\n        callbacks: Function[],\n        dereferenceTypeCount: Record<string, number>,\n      ) {\n        referring.forEach(({ node }: ReferringNode) => {\n          let dereferenced = false\n          try {\n            // If a view is referring to the track config, remove the track\n            // from the view\n            const type = 'open track(s)'\n            const view = getContainingView(node) as TrackViewModel\n            callbacks.push(() => view.hideTrack(track.trackId))\n            dereferenced = true\n            if (!dereferenceTypeCount[type]) {\n              dereferenceTypeCount[type] = 0\n            }\n            dereferenceTypeCount[type] += 1\n          } catch (err1) {\n            // ignore\n          }\n\n          // @ts-ignore\n          if (self.widgets.has(node.id)) {\n            // If a configuration editor widget has the track config\n            // open, close the widget\n            const type = 'configuration editor widget(s)'\n            callbacks.push(() => this.hideWidget(node))\n            dereferenced = true\n            if (!dereferenceTypeCount[type]) {\n              dereferenceTypeCount[type] = 0\n            }\n            dereferenceTypeCount[type] += 1\n          }\n          if (!dereferenced) {\n            throw new Error(\n              `Error when closing this connection, the following node is still referring to a track configuration: ${JSON.stringify(\n                getSnapshot(node),\n              )}`,\n            )\n          }\n        })\n      },\n\n      prepareToBreakConnection(configuration: AnyConfigurationModel) {\n        const callbacksToDereferenceTrack: Function[] = []\n        const dereferenceTypeCount: Record<string, number> = {}\n        const name = readConfObject(configuration, 'name')\n        const connection = self.connectionInstances.find(c => c.name === name)\n        if (connection) {\n          connection.tracks.forEach((track: any) => {\n            const referring = self.getReferring(track)\n            this.removeReferring(\n              referring,\n              track,\n              callbacksToDereferenceTrack,\n              dereferenceTypeCount,\n            )\n          })\n          const safelyBreakConnection = () => {\n            callbacksToDereferenceTrack.forEach(cb => cb())\n            this.breakConnection(configuration)\n          }\n          return [safelyBreakConnection, dereferenceTypeCount]\n        }\n        return undefined\n      },\n\n      breakConnection(configuration: AnyConfigurationModel) {\n        const name = readConfObject(configuration, 'name')\n        const connection = self.connectionInstances.find(c => c.name === name)\n        self.connectionInstances.remove(connection)\n      },\n\n      deleteConnection(configuration: AnyConfigurationModel) {\n        let deletedConn\n        if (self.adminMode) {\n          deletedConn =\n            getParent(self).jbrowse.deleteConnectionConf(configuration)\n        }\n        if (!deletedConn) {\n          const { connectionId } = configuration\n          const idx = self.sessionConnections.findIndex(\n            c => c.connectionId === connectionId,\n          )\n          if (idx === -1) {\n            return undefined\n          }\n          return self.sessionConnections.splice(idx, 1)\n        }\n        return deletedConn\n      },\n\n      updateDrawerWidth(drawerWidth: number) {\n        if (drawerWidth === self.drawerWidth) {\n          return self.drawerWidth\n        }\n        let newDrawerWidth = drawerWidth\n        if (newDrawerWidth < minDrawerWidth) {\n          newDrawerWidth = minDrawerWidth\n        }\n        self.drawerWidth = newDrawerWidth\n        return newDrawerWidth\n      },\n\n      resizeDrawer(distance: number) {\n        if (self.drawerPosition === 'left') {\n          distance *= -1\n        }\n        const oldDrawerWidth = self.drawerWidth\n        const newDrawerWidth = this.updateDrawerWidth(oldDrawerWidth - distance)\n        const actualDistance = oldDrawerWidth - newDrawerWidth\n        return actualDistance\n      },\n\n      addView(typeName: string, initialState = {}) {\n        const typeDefinition = pluginManager.getElementType('view', typeName)\n        if (!typeDefinition) {\n          throw new Error(`unknown view type ${typeName}`)\n        }\n\n        const length = self.views.push({\n          ...initialState,\n          type: typeName,\n        })\n        return self.views[length - 1]\n      },\n\n      removeView(view: any) {\n        for (const [, widget] of self.activeWidgets) {\n          if (widget.view && widget.view.id === view.id) {\n            this.hideWidget(widget)\n          }\n        }\n        self.views.remove(view)\n      },\n\n      addAssemblyConf(assemblyConf: AnyConfigurationModel) {\n        return getParent(self).jbrowse.addAssemblyConf(assemblyConf)\n      },\n\n      addTrackConf(trackConf: AnyConfigurationModel) {\n        if (self.adminMode) {\n          return getParent(self).jbrowse.addTrackConf(trackConf)\n        }\n        const { trackId, type } = trackConf\n        if (!type) {\n          throw new Error(`unknown track type ${type}`)\n        }\n        const track = self.sessionTracks.find((t: any) => t.trackId === trackId)\n        if (track) {\n          return track\n        }\n        const length = self.sessionTracks.push(trackConf)\n        return self.sessionTracks[length - 1]\n      },\n\n      deleteTrackConf(trackConf: AnyConfigurationModel) {\n        const callbacksToDereferenceTrack: Function[] = []\n        const dereferenceTypeCount: Record<string, number> = {}\n        const referring = self.getReferring(trackConf)\n        this.removeReferring(\n          referring,\n          trackConf,\n          callbacksToDereferenceTrack,\n          dereferenceTypeCount,\n        )\n        callbacksToDereferenceTrack.forEach(cb => cb())\n        if (self.adminMode) {\n          return getParent(self).jbrowse.deleteTrackConf(trackConf)\n        }\n        const { trackId } = trackConf\n        const idx = self.sessionTracks.findIndex(t => t.trackId === trackId)\n        if (idx === -1) {\n          return undefined\n        }\n        return self.sessionTracks.splice(idx, 1)\n      },\n\n      addConnectionConf(connectionConf: any) {\n        if (self.adminMode) {\n          return getParent(self).jbrowse.addConnectionConf(connectionConf)\n        }\n        const { connectionId, type } = connectionConf\n        if (!type) {\n          throw new Error(`unknown connection type ${type}`)\n        }\n        const connection = self.sessionTracks.find(\n          (c: any) => c.connectionId === connectionId,\n        )\n        if (connection) {\n          return connection\n        }\n        const length = self.sessionConnections.push(connectionConf)\n        return self.sessionConnections[length - 1]\n      },\n\n      addLinearGenomeViewOfAssembly(assemblyName: string, initialState = {}) {\n        return this.addViewOfAssembly(\n          'LinearGenomeView',\n          assemblyName,\n          initialState,\n        )\n      },\n\n      addViewOfAssembly(\n        viewType: any,\n        assemblyName: string,\n        initialState: any = {},\n      ) {\n        const assembly = self.assemblies.find(\n          (s: AnyConfigurationModel) =>\n            readConfObject(s, 'name') === assemblyName,\n        )\n        if (!assembly) {\n          throw new Error(\n            `Could not add view of assembly \"${assemblyName}\", assembly name not found`,\n          )\n        }\n        initialState.displayRegionsFromAssemblyName = readConfObject(\n          assembly,\n          'name',\n        )\n        return this.addView(viewType, initialState)\n      },\n\n      addViewFromAnotherView(\n        viewType: string,\n        otherView: any,\n        initialState: { displayedRegions?: Region[] } = {},\n      ) {\n        const state = { ...initialState }\n        state.displayedRegions = getSnapshot(otherView.displayedRegions)\n        return this.addView(viewType, state)\n      },\n\n      addWidget(\n        typeName: string,\n        id: string,\n        initialState = {},\n        configuration = { type: typeName },\n      ) {\n        const typeDefinition = pluginManager.getElementType('widget', typeName)\n        if (!typeDefinition) {\n          throw new Error(`unknown widget type ${typeName}`)\n        }\n        const data = {\n          ...initialState,\n          id,\n          type: typeName,\n          configuration,\n        }\n        self.widgets.set(id, data)\n        return self.widgets.get(id)\n      },\n\n      showWidget(widget: any) {\n        if (self.activeWidgets.has(widget.id)) {\n          self.activeWidgets.delete(widget.id)\n        }\n        self.activeWidgets.set(widget.id, widget)\n        self.minimized = false\n      },\n\n      hasWidget(widget: any) {\n        return self.activeWidgets.has(widget.id)\n      },\n\n      hideWidget(widget: any) {\n        self.activeWidgets.delete(widget.id)\n      },\n      minimizeWidgetDrawer() {\n        self.minimized = true\n      },\n      showWidgetDrawer() {\n        self.minimized = false\n      },\n      hideAllWidgets() {\n        self.activeWidgets.clear()\n      },\n\n      /**\n       * set the global selection, i.e. the globally-selected object.\n       * can be a feature, a view, just about anything\n       * @param thing -\n       */\n      setSelection(thing: any) {\n        self.selection = thing\n      },\n\n      /**\n       * clears the global selection\n       */\n      clearSelection() {\n        self.selection = undefined\n      },\n\n      clearConnections() {\n        self.connectionInstances.length = 0\n      },\n\n      addSavedSession(sessionSnapshot: SnapshotIn<typeof self>) {\n        return getParent(self).addSavedSession(sessionSnapshot)\n      },\n\n      removeSavedSession(sessionSnapshot: any) {\n        return getParent(self).removeSavedSession(sessionSnapshot)\n      },\n\n      renameCurrentSession(sessionName: string) {\n        return getParent(self).renameCurrentSession(sessionName)\n      },\n\n      duplicateCurrentSession() {\n        return getParent(self).duplicateCurrentSession()\n      },\n      activateSession(sessionName: any) {\n        return getParent(self).activateSession(sessionName)\n      },\n      setDefaultSession() {\n        return getParent(self).setDefaultSession()\n      },\n      saveSessionToLocalStorage() {\n        return getParent(self).saveSessionToLocalStorage()\n      },\n      loadAutosaveSession() {\n        return getParent(self).loadAutosaveSession()\n      },\n      setSession(sessionSnapshot: SnapshotIn<typeof self>) {\n        return getParent(self).setSession(sessionSnapshot)\n      },\n    }))\n\n    .actions(self => ({\n      /**\n       * opens a configuration editor to configure the given thing,\n       * and sets the current task to be configuring it\n       * @param configuration -\n       */\n      editConfiguration(configuration: AnyConfigurationModel) {\n        if (!isConfigurationModel(configuration)) {\n          throw new Error(\n            'must pass a configuration model to editConfiguration',\n          )\n        }\n        const editableConfigSession = self\n        const editor = editableConfigSession.addWidget(\n          'ConfigurationEditorWidget',\n          'configEditor',\n          { target: configuration },\n        )\n        editableConfigSession.showWidget(editor)\n      },\n      editTrackConfiguration(configuration: AnyConfigurationModel) {\n        if (\n          !self.adminMode &&\n          self.sessionTracks.indexOf(configuration) === -1\n        ) {\n          throw new Error(\"Can't edit the configuration of a non-session track\")\n        }\n        this.editConfiguration(configuration)\n      },\n    }))\n    .views(self => ({\n      getTrackActionMenuItems(config: any) {\n        const session = self\n        const canEdit =\n          session.adminMode ||\n          session.sessionTracks.find(track => {\n            return track.trackId === config.trackId\n          })\n\n        // disable if it is a reference sequence track\n        const isRefSeqTrack =\n          readConfObject(config, 'type') === 'ReferenceSequenceTrack'\n        return [\n          {\n            label: 'About track',\n            onClick: () => {\n              session.queueDialog(doneCallback => [\n                AboutDialog,\n                { config, handleClose: doneCallback },\n              ])\n            },\n            icon: InfoIcon,\n          },\n          {\n            label: 'Settings',\n            disabled: !canEdit,\n            onClick: () => {\n              session.editTrackConfiguration(config)\n            },\n            icon: SettingsIcon,\n          },\n          {\n            label: 'Delete track',\n            disabled: !canEdit || isRefSeqTrack,\n            onClick: () => {\n              session.deleteTrackConf(config)\n            },\n            icon: DeleteIcon,\n          },\n          {\n            label: 'Copy track',\n            disabled: isRefSeqTrack,\n            onClick: () => {\n              const trackSnapshot = JSON.parse(\n                JSON.stringify(getSnapshot(config)),\n              )\n              const now = Date.now()\n              trackSnapshot.trackId += `-${now}`\n              trackSnapshot.displays.forEach(\n                (display: { displayId: string }) => {\n                  display.displayId += `-${now}`\n                },\n              )\n              // the -sessionTrack suffix to trackId is used as metadata for\n              // the track selector to store the track in a special category,\n              // and default category is also cleared\n              if (!session.adminMode) {\n                trackSnapshot.trackId += '-sessionTrack'\n                trackSnapshot.category = undefined\n              }\n              trackSnapshot.name += ' (copy)'\n              session.addTrackConf(trackSnapshot)\n            },\n            icon: CopyIcon,\n          },\n        ]\n      },\n    }))\n\n  return types.snapshotProcessor(addSnackbarToModel(sessionModel), {\n    // @ts-ignore\n    preProcessor(snapshot) {\n      if (snapshot) {\n        // @ts-ignore\n        const { connectionInstances, ...rest } = snapshot || {}\n        // connectionInstances schema changed from object to an array, so any\n        // old connectionInstances as object is in snapshot, filter it out\n        // https://github.com/GMOD/jbrowse-components/issues/1903\n        if (!Array.isArray(connectionInstances)) {\n          return rest\n        }\n      }\n      return snapshot\n    },\n  })\n}\n\nexport type SessionStateModel = ReturnType<typeof sessionModelFactory>\nexport type SessionModel = Instance<SessionStateModel>\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction z(x: Instance<SessionStateModel>): AbstractSessionModel {\n  // this function's sole purpose is to get typescript to check\n  // that the session model implements all of AbstractSessionModel\n  return x\n}\n","import {\n  addDisposer,\n  cast,\n  getSnapshot,\n  getType,\n  getPropertyMembers,\n  getChildType,\n  isArrayType,\n  isModelType,\n  isReferenceType,\n  isValidReference,\n  isMapType,\n  resolveIdentifier,\n  types,\n  IAnyStateTreeNode,\n  IAnyType,\n  Instance,\n  SnapshotIn,\n} from 'mobx-state-tree'\n\nimport makeWorkerInstance from './makeWorkerInstance'\n\nimport { saveAs } from 'file-saver'\nimport { observable, autorun } from 'mobx'\nimport assemblyManagerFactory from '@jbrowse/core/assemblyManager'\nimport assemblyConfigSchemaFactory from '@jbrowse/core/assemblyManager/assemblyConfigSchema'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport RpcManager from '@jbrowse/core/rpc/RpcManager'\nimport TextSearchManager from '@jbrowse/core/TextSearch/TextSearchManager'\nimport { UriLocation } from '@jbrowse/core/util/types'\nimport { AbstractSessionModel, SessionWithWidgets } from '@jbrowse/core/util'\nimport { MenuItem } from '@jbrowse/core/ui'\n\n// icons\nimport AddIcon from '@material-ui/icons/Add'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport AppsIcon from '@material-ui/icons/Apps'\nimport FileCopyIcon from '@material-ui/icons/FileCopy'\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport PublishIcon from '@material-ui/icons/Publish'\nimport ExtensionIcon from '@material-ui/icons/Extension'\nimport StorageIcon from '@material-ui/icons/Storage'\nimport SaveIcon from '@material-ui/icons/Save'\nimport { Cable } from '@jbrowse/core/ui/Icons'\n\n// other\nimport corePlugins from './corePlugins'\nimport jbrowseWebFactory from './jbrowseModel'\nimport sessionModelFactory from './sessionModelFactory'\n\n// attempts to remove undefined references from the given MST model. can only actually\n// remove them from arrays and maps. throws MST undefined ref error if it encounters\n// undefined refs in model properties\nfunction filterSessionInPlace(node: IAnyStateTreeNode, nodeType: IAnyType) {\n  type MSTArray = Instance<ReturnType<typeof types.array>>\n  type MSTMap = Instance<ReturnType<typeof types.map>>\n\n  // makes it work with session sharing\n  if (node === undefined) {\n    return\n  }\n  if (isArrayType(nodeType)) {\n    const array = node as MSTArray\n    const childType = getChildType(node)\n    if (isReferenceType(childType)) {\n      // filter array elements\n      for (let i = 0; i < array.length; ) {\n        if (!isValidReference(() => array[i])) {\n          array.splice(i, 1)\n        } else {\n          i += 1\n        }\n      }\n    }\n    array.forEach(el => {\n      filterSessionInPlace(el, childType)\n    })\n  } else if (isMapType(nodeType)) {\n    const map = node as MSTMap\n    const childType = getChildType(map)\n    if (isReferenceType(childType)) {\n      // filter the map members\n      for (const key in map.keys()) {\n        if (!isValidReference(() => map.get(key))) {\n          map.delete(key)\n        }\n      }\n    }\n    map.forEach(child => {\n      filterSessionInPlace(child, childType)\n    })\n  } else if (isModelType(nodeType)) {\n    // iterate over children\n    const { properties } = getPropertyMembers(node)\n\n    Object.entries(properties).forEach(([pname, ptype]) => {\n      // @ts-ignore\n      filterSessionInPlace(node[pname], ptype)\n    })\n  }\n}\n\ninterface Menu {\n  label: string\n  menuItems: MenuItem[]\n}\n\nexport default function RootModel(\n  pluginManager: PluginManager,\n  adminMode = false,\n) {\n  const assemblyConfigSchema = assemblyConfigSchemaFactory(pluginManager)\n  const Session = sessionModelFactory(pluginManager, assemblyConfigSchema)\n  const assemblyManagerType = assemblyManagerFactory(\n    assemblyConfigSchema,\n    pluginManager,\n  )\n  return types\n    .model('Root', {\n      jbrowse: jbrowseWebFactory(pluginManager, Session, assemblyConfigSchema),\n      configPath: types.maybe(types.string),\n      session: types.maybe(Session),\n      assemblyManager: assemblyManagerType,\n      version: types.maybe(types.string),\n      internetAccounts: types.array(\n        pluginManager.pluggableMstType('internet account', 'stateModel'),\n      ),\n      isAssemblyEditing: false,\n      isDefaultSessionEditing: false,\n    })\n    .volatile(self => ({\n      pluginsUpdated: false,\n      rpcManager: new RpcManager(\n        pluginManager,\n        self.jbrowse.configuration.rpc,\n        {\n          WebWorkerRpcDriver: {\n            makeWorkerInstance,\n          },\n          MainThreadRpcDriver: {},\n        },\n      ),\n      savedSessionsVolatile: observable.map({}),\n      textSearchManager: new TextSearchManager(pluginManager),\n      pluginManager,\n      error: undefined as unknown,\n    }))\n    .views(self => ({\n      get savedSessions() {\n        return Array.from(self.savedSessionsVolatile.values())\n      },\n      localStorageId(name: string) {\n        return `localSaved-${name}-${self.configPath}`\n      },\n      get autosaveId() {\n        return `autosave-${self.configPath}`\n      },\n      get previousAutosaveId() {\n        return `previousAutosave-${self.configPath}`\n      },\n    }))\n    .views(self => ({\n      get savedSessionNames() {\n        return self.savedSessions.map(session => session.name)\n      },\n      get currentSessionId() {\n        const locationUrl = new URL(window.location.href)\n        const params = new URLSearchParams(locationUrl.search)\n        return params?.get('session')?.split('local-')[1]\n      },\n    }))\n    .actions(self => ({\n      afterCreate() {\n        Object.entries(localStorage)\n          .filter(([key, _val]) => key.startsWith('localSaved-'))\n          .filter(\n            ([key, _val]) => key.indexOf(self.configPath || 'undefined') !== -1,\n          )\n          .forEach(([key, val]) => {\n            try {\n              const { session } = JSON.parse(val)\n              self.savedSessionsVolatile.set(key, session)\n            } catch (e) {\n              console.error('bad session encountered', key, val)\n            }\n          })\n        addDisposer(\n          self,\n          autorun(() => {\n            for (const [, val] of self.savedSessionsVolatile.entries()) {\n              try {\n                const key = self.localStorageId(val.name)\n                localStorage.setItem(key, JSON.stringify({ session: val }))\n              } catch (e) {\n                // @ts-ignore\n                if (e.code === '22' || e.code === '1024') {\n                  alert(\n                    'Local storage is full! Please use the \"Open sessions\" panel to remove old sessions',\n                  )\n                }\n              }\n            }\n          }),\n        )\n        addDisposer(\n          self,\n          autorun(\n            () => {\n              if (self.session) {\n                const noSession = { name: 'empty' }\n                const snapshot = getSnapshot(self.session) || noSession\n                sessionStorage.setItem(\n                  'current',\n                  JSON.stringify({ session: snapshot }),\n                )\n\n                localStorage.setItem(\n                  `autosave-${self.configPath}`,\n                  JSON.stringify({\n                    session: {\n                      ...snapshot,\n                      name: `${snapshot.name}-autosaved`,\n                    },\n                  }),\n                )\n                if (self.pluginsUpdated) {\n                  // reload app to get a fresh plugin manager\n                  window.location.reload()\n                }\n              }\n            },\n            { delay: 400 },\n          ),\n        )\n        addDisposer(\n          self,\n          autorun(() => {\n            self.jbrowse.internetAccounts.forEach(account => {\n              this.initializeInternetAccount(account.internetAccountId)\n            })\n          }),\n        )\n      },\n      setSession(sessionSnapshot?: SnapshotIn<typeof Session>) {\n        const oldSession = self.session\n        self.session = cast(sessionSnapshot)\n        if (self.session) {\n          // validate all references in the session snapshot\n          try {\n            filterSessionInPlace(self.session, getType(self.session))\n          } catch (error) {\n            // throws error if session filtering failed\n            self.session = oldSession\n            throw error\n          }\n        }\n      },\n      initializeInternetAccount(\n        internetAccountId: string,\n        initialSnapshot = {},\n      ) {\n        const internetAccountConfigSchema =\n          pluginManager.pluggableConfigSchemaType('internet account')\n        const configuration = resolveIdentifier(\n          internetAccountConfigSchema,\n          self,\n          internetAccountId,\n        )\n\n        const internetAccountType = pluginManager.getInternetAccountType(\n          configuration.type,\n        )\n        if (!internetAccountType) {\n          throw new Error(`unknown internet account type ${configuration.type}`)\n        }\n\n        const internetAccount = internetAccountType.stateModel.create({\n          ...initialSnapshot,\n          type: configuration.type,\n          configuration,\n        })\n        self.internetAccounts.push(internetAccount)\n        return internetAccount\n      },\n      createEphemeralInternetAccount(\n        internetAccountId: string,\n        initialSnapshot = {},\n        url: string,\n      ) {\n        let hostUri\n\n        try {\n          hostUri = new URL(url).origin\n        } catch (e) {\n          // ignore\n        }\n        // id of a custom new internaccount is `${type}-${name}`\n        const internetAccountSplit = internetAccountId.split('-')\n        const configuration = {\n          type: internetAccountSplit[0],\n          internetAccountId: internetAccountId,\n          name: internetAccountSplit.slice(1).join('-'),\n          description: '',\n          domains: hostUri ? [hostUri] : [],\n        }\n        const internetAccountType = pluginManager.getInternetAccountType(\n          configuration.type,\n        )\n        const internetAccount = internetAccountType.stateModel.create({\n          ...initialSnapshot,\n          type: configuration.type,\n          configuration,\n        })\n        self.internetAccounts.push(internetAccount)\n        return internetAccount\n      },\n      setAssemblyEditing(flag: boolean) {\n        self.isAssemblyEditing = flag\n      },\n      setDefaultSessionEditing(flag: boolean) {\n        self.isDefaultSessionEditing = flag\n      },\n      setPluginsUpdated(flag: boolean) {\n        self.pluginsUpdated = flag\n      },\n      setDefaultSession() {\n        const { defaultSession } = self.jbrowse\n        const newSession = {\n          ...defaultSession,\n          name: `${defaultSession.name} ${new Date().toLocaleString()}`,\n        }\n\n        this.setSession(newSession)\n      },\n      renameCurrentSession(sessionName: string) {\n        if (self.session) {\n          const snapshot = JSON.parse(JSON.stringify(getSnapshot(self.session)))\n          snapshot.name = sessionName\n          this.setSession(snapshot)\n        }\n      },\n\n      addSavedSession(session: { name: string }) {\n        const key = self.localStorageId(session.name)\n        self.savedSessionsVolatile.set(key, session)\n      },\n\n      removeSavedSession(session: { name: string }) {\n        const key = self.localStorageId(session.name)\n        localStorage.removeItem(key)\n        self.savedSessionsVolatile.delete(key)\n      },\n\n      duplicateCurrentSession() {\n        if (self.session) {\n          const snapshot = JSON.parse(JSON.stringify(getSnapshot(self.session)))\n          let newSnapshotName = `${self.session.name} (copy)`\n          if (self.savedSessionNames.includes(newSnapshotName)) {\n            let newSnapshotCopyNumber = 2\n            do {\n              newSnapshotName = `${self.session.name} (copy ${newSnapshotCopyNumber})`\n              newSnapshotCopyNumber += 1\n            } while (self.savedSessionNames.includes(newSnapshotName))\n          }\n          snapshot.name = newSnapshotName\n          this.setSession(snapshot)\n        }\n      },\n      activateSession(name: string) {\n        const localId = self.localStorageId(name)\n        const newSessionSnapshot = localStorage.getItem(localId)\n        if (!newSessionSnapshot) {\n          throw new Error(\n            `Can't activate session ${name}, it is not in the savedSessions`,\n          )\n        }\n\n        this.setSession(JSON.parse(newSessionSnapshot).session)\n      },\n      saveSessionToLocalStorage() {\n        if (self.session) {\n          const key = self.localStorageId(self.session.name)\n          self.savedSessionsVolatile.set(key, getSnapshot(self.session))\n        }\n      },\n      loadAutosaveSession() {\n        const previousAutosave = localStorage.getItem(self.previousAutosaveId)\n        const autosavedSession = previousAutosave\n          ? JSON.parse(previousAutosave).session\n          : {}\n        const { name } = autosavedSession\n        autosavedSession.name = `${name.replace('-autosaved', '')}-restored`\n        this.setSession(autosavedSession)\n      },\n\n      setError(error?: unknown) {\n        self.error = error\n      },\n      findAppropriateInternetAccount(location: UriLocation) {\n        // find the existing account selected from menu\n        const selectedId = location.internetAccountId\n        if (selectedId) {\n          const selectedAccount = self.internetAccounts.find(account => {\n            return account.internetAccountId === selectedId\n          })\n          if (selectedAccount) {\n            return selectedAccount\n          }\n        }\n\n        // if no existing account or not found, try to find working account\n        for (const account of self.internetAccounts) {\n          const handleResult = account.handlesLocation(location)\n          if (handleResult) {\n            return account\n          }\n        }\n\n        // if still no existing account, create ephemeral config to use\n        return selectedId\n          ? this.createEphemeralInternetAccount(selectedId, {}, location.uri)\n          : null\n      },\n    }))\n    .volatile(self => ({\n      history: {},\n      menus: [\n        {\n          label: 'File',\n          menuItems: [\n            {\n              label: 'New session',\n              icon: AddIcon,\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              onClick: (session: any) => {\n                const lastAutosave = localStorage.getItem(self.autosaveId)\n                if (lastAutosave) {\n                  localStorage.setItem(self.previousAutosaveId, lastAutosave)\n                }\n                session.setDefaultSession()\n              },\n            },\n            {\n              label: 'Import session…',\n              icon: PublishIcon,\n              onClick: (session: SessionWithWidgets) => {\n                const widget = session.addWidget(\n                  'ImportSessionWidget',\n                  'importSessionWidget',\n                )\n                session.showWidget(widget)\n              },\n            },\n            {\n              label: 'Export session',\n              icon: GetAppIcon,\n              onClick: (session: IAnyStateTreeNode) => {\n                const sessionBlob = new Blob(\n                  [JSON.stringify({ session: getSnapshot(session) }, null, 2)],\n                  { type: 'text/plain;charset=utf-8' },\n                )\n                saveAs(sessionBlob, 'session.json')\n              },\n            },\n            {\n              label: 'Open session…',\n              icon: FolderOpenIcon,\n              onClick: (session: SessionWithWidgets) => {\n                const widget = session.addWidget(\n                  'SessionManager',\n                  'sessionManager',\n                )\n                session.showWidget(widget)\n              },\n            },\n            {\n              label: 'Save session',\n              icon: SaveIcon,\n              onClick: (session: SessionWithWidgets) => {\n                self.saveSessionToLocalStorage()\n                session.notify(`Saved session \"${session.name}\"`, 'success')\n              },\n            },\n            {\n              label: 'Duplicate session',\n              icon: FileCopyIcon,\n              onClick: (session: AbstractSessionModel) => {\n                if (session.duplicateCurrentSession) {\n                  session.duplicateCurrentSession()\n                }\n              },\n            },\n            { type: 'divider' },\n            {\n              label: 'Open track...',\n              icon: StorageIcon,\n              onClick: (session: SessionWithWidgets) => {\n                if (session.views.length === 0) {\n                  session.notify('Please open a view to add a track first')\n                } else if (session.views.length >= 1) {\n                  const widget = session.addWidget(\n                    'AddTrackWidget',\n                    'addTrackWidget',\n                    { view: session.views[0].id },\n                  )\n                  session.showWidget(widget)\n                  if (session.views.length > 1) {\n                    session.notify(\n                      `This will add a track to the first view. Note: if you want to open a track in a specific view open the track selector for that view and use the add track (plus icon) in the bottom right`,\n                    )\n                  }\n                }\n              },\n            },\n            {\n              label: 'Open connection...',\n              icon: Cable,\n              onClick: (session: SessionWithWidgets) => {\n                const widget = session.addWidget(\n                  'AddConnectionWidget',\n                  'addConnectionWidget',\n                )\n                session.showWidget(widget)\n              },\n            },\n            { type: 'divider' },\n            {\n              label: 'Return to splash screen',\n              icon: AppsIcon,\n              onClick: () => {\n                self.setSession(undefined)\n              },\n            },\n          ],\n        },\n        ...(adminMode\n          ? [\n              {\n                label: 'Admin',\n                menuItems: [\n                  {\n                    label: 'Open assembly manager',\n                    icon: SettingsIcon,\n                    onClick: () => {\n                      self.setAssemblyEditing(true)\n                    },\n                  },\n                  {\n                    label: 'Set default session',\n                    icon: SettingsIcon,\n                    onClick: () => {\n                      self.setDefaultSessionEditing(true)\n                    },\n                  },\n                ],\n              },\n            ]\n          : []),\n        {\n          label: 'Add',\n          menuItems: [],\n        },\n        {\n          label: 'Tools',\n          menuItems: [\n            {\n              label: 'Plugin store',\n              icon: ExtensionIcon,\n              onClick: () => {\n                if (self.session) {\n                  const widget = self.session.addWidget(\n                    'PluginStoreWidget',\n                    'pluginStoreWidget',\n                  )\n                  self.session.showWidget(widget)\n                }\n              },\n            },\n          ],\n        },\n      ] as Menu[],\n      adminMode,\n    }))\n    .actions(self => ({\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      setHistory(history: any) {\n        self.history = history\n      },\n      setMenus(newMenus: Menu[]) {\n        self.menus = newMenus\n      },\n      /**\n       * Add a top-level menu\n       * @param menuName - Name of the menu to insert.\n       * @returns The new length of the top-level menus array\n       */\n      appendMenu(menuName: string) {\n        return self.menus.push({ label: menuName, menuItems: [] })\n      },\n      /**\n       * Insert a top-level menu\n       * @param menuName - Name of the menu to insert.\n       * @param position - Position to insert menu. If negative, counts from th\n       * end, e.g. `insertMenu('My Menu', -1)` will insert the menu as the\n       * second-to-last one.\n       * @returns The new length of the top-level menus array\n       */\n      insertMenu(menuName: string, position: number) {\n        self.menus.splice(\n          (position < 0 ? self.menus.length : 0) + position,\n          0,\n          { label: menuName, menuItems: [] },\n        )\n        return self.menus.length\n      },\n      /**\n       * Add a menu item to a top-level menu\n       * @param menuName - Name of the top-level menu to append to.\n       * @param menuItem - Menu item to append.\n       * @returns The new length of the menu\n       */\n      appendToMenu(menuName: string, menuItem: MenuItem) {\n        const menu = self.menus.find(m => m.label === menuName)\n        if (!menu) {\n          self.menus.push({ label: menuName, menuItems: [menuItem] })\n          return 1\n        }\n        return menu.menuItems.push(menuItem)\n      },\n      /**\n       * Insert a menu item into a top-level menu\n       * @param menuName - Name of the top-level menu to insert into\n       * @param menuItem - Menu item to insert\n       * @param position - Position to insert menu item. If negative, counts\n       * from the end, e.g. `insertMenu('My Menu', -1)` will insert the menu as\n       * the second-to-last one.\n       * @returns The new length of the menu\n       */\n      insertInMenu(menuName: string, menuItem: MenuItem, position: number) {\n        const menu = self.menus.find(m => m.label === menuName)\n        if (!menu) {\n          self.menus.push({ label: menuName, menuItems: [menuItem] })\n          return 1\n        }\n        const insertPosition =\n          position < 0 ? menu.menuItems.length + position : position\n        menu.menuItems.splice(insertPosition, 0, menuItem)\n        return menu.menuItems.length\n      },\n      /**\n       * Add a menu item to a sub-menu\n       * @param menuPath - Path to the sub-menu to add to, starting with the\n       * top-level menu (e.g. `['File', 'Insert']`).\n       * @param menuItem - Menu item to append.\n       * @returns The new length of the sub-menu\n       */\n      appendToSubMenu(menuPath: string[], menuItem: MenuItem) {\n        let topMenu = self.menus.find(m => m.label === menuPath[0])\n        if (!topMenu) {\n          const idx = this.appendMenu(menuPath[0])\n          topMenu = self.menus[idx - 1]\n        }\n        let { menuItems: subMenu } = topMenu\n        const pathSoFar = [menuPath[0]]\n        menuPath.slice(1).forEach(menuName => {\n          pathSoFar.push(menuName)\n          let sm = subMenu.find(mi => 'label' in mi && mi.label === menuName)\n          if (!sm) {\n            const idx = subMenu.push({ label: menuName, subMenu: [] })\n            sm = subMenu[idx - 1]\n          }\n          if (!('subMenu' in sm)) {\n            throw new Error(\n              `\"${menuName}\" in path \"${pathSoFar}\" is not a subMenu`,\n            )\n          }\n          subMenu = sm.subMenu\n        })\n        return subMenu.push(menuItem)\n      },\n      /**\n       * Insert a menu item into a sub-menu\n       * @param menuPath - Path to the sub-menu to add to, starting with the\n       * top-level menu (e.g. `['File', 'Insert']`).\n       * @param menuItem - Menu item to insert.\n       * @param position - Position to insert menu item. If negative, counts\n       * from the end, e.g. `insertMenu('My Menu', -1)` will insert the menu as\n       * the second-to-last one.\n       * @returns The new length of the sub-menu\n       */\n      insertInSubMenu(\n        menuPath: string[],\n        menuItem: MenuItem,\n        position: number,\n      ) {\n        let topMenu = self.menus.find(m => m.label === menuPath[0])\n        if (!topMenu) {\n          const idx = this.appendMenu(menuPath[0])\n          topMenu = self.menus[idx - 1]\n        }\n        let { menuItems: subMenu } = topMenu\n        const pathSoFar = [menuPath[0]]\n        menuPath.slice(1).forEach(menuName => {\n          pathSoFar.push(menuName)\n          let sm = subMenu.find(mi => 'label' in mi && mi.label === menuName)\n          if (!sm) {\n            const idx = subMenu.push({ label: menuName, subMenu: [] })\n            sm = subMenu[idx - 1]\n          }\n          if (!('subMenu' in sm)) {\n            throw new Error(\n              `\"${menuName}\" in path \"${pathSoFar}\" is not a subMenu`,\n            )\n          }\n          subMenu = sm.subMenu\n        })\n        subMenu.splice(position, 0, menuItem)\n        return subMenu.length\n      },\n    }))\n}\n\nexport function createTestSession(snapshot = {}, adminMode = false) {\n  const pluginManager = new PluginManager(corePlugins.map(P => new P()))\n  pluginManager.createPluggableElements()\n\n  const root = RootModel(pluginManager, adminMode).create(\n    {\n      jbrowse: {\n        configuration: { rpc: { defaultDriver: 'MainThreadRpcDriver' } },\n      },\n      assemblyManager: {},\n    },\n    { pluginManager },\n  )\n  root.setSession({\n    name: 'testSession',\n    ...snapshot,\n  })\n  // @ts-ignore\n  root.session.views.map(view => view.setWidth(800))\n  pluginManager.setRootModel(root)\n\n  pluginManager.configure()\n  return root.session\n}\n","export default async function factoryReset() {\n  // @ts-ignore\n  window.location = window.location.pathname\n}\n","import domLoadScript from 'load-script2'\n\nimport { PluginConstructor } from './Plugin'\nimport { ConfigurationSchema } from './configuration'\n\nimport ReExports from './ReExports'\nimport { isElectron } from './util'\n\nexport const PluginSourceConfigurationSchema = ConfigurationSchema(\n  'PluginSource',\n  {\n    name: {\n      type: 'string',\n      defaultValue: '',\n    },\n    url: {\n      type: 'string',\n      defaultValue: '',\n    },\n  },\n)\n\nexport interface UMDPluginDefinition {\n  umdUrl: string\n  name: string\n}\n\nexport interface LegacyUMDPluginDefinition {\n  url: string\n  name: string\n}\n\nexport function isUMDPluginDefinition(\n  pluginDefinition: PluginDefinition,\n): pluginDefinition is UMDPluginDefinition | LegacyUMDPluginDefinition {\n  return (\n    ((pluginDefinition as UMDPluginDefinition).umdUrl !== undefined ||\n      (pluginDefinition as LegacyUMDPluginDefinition).url !== undefined) &&\n    (pluginDefinition as LegacyUMDPluginDefinition | UMDPluginDefinition)\n      .name !== undefined\n  )\n}\n\nexport interface ESMPluginDefinition {\n  esmUrl: string\n}\n\nexport function isESMPluginDefinition(\n  pluginDefinition: PluginDefinition,\n): pluginDefinition is ESMPluginDefinition {\n  return (pluginDefinition as ESMPluginDefinition).esmUrl !== undefined\n}\n\nexport interface CJSPluginDefinition {\n  cjsUrl: string\n}\n\nexport function isCJSPluginDefinition(\n  pluginDefinition: PluginDefinition,\n): pluginDefinition is CJSPluginDefinition {\n  return (pluginDefinition as CJSPluginDefinition).cjsUrl !== undefined\n}\n\nexport interface PluginDefinition\n  extends Partial<UMDPluginDefinition>,\n    Partial<LegacyUMDPluginDefinition>,\n    Partial<ESMPluginDefinition>,\n    Partial<CJSPluginDefinition> {}\n\nexport interface PluginRecord {\n  plugin: PluginConstructor\n  definition: PluginDefinition\n}\n\nexport interface LoadedPlugin {\n  default: PluginConstructor\n}\n\nfunction getGlobalObject(): Window {\n  // Based on window-or-global\n  // https://github.com/purposeindustries/window-or-global/blob/322abc71de0010c9e5d9d0729df40959e1ef8775/lib/index.js\n  return (\n    // eslint-disable-next-line no-restricted-globals\n    (typeof self === 'object' && self.self === self && self) ||\n    (typeof global === 'object' && global.global === global && global) ||\n    // @ts-ignore\n    this\n  )\n}\n\nfunction isInWebWorker(globalObject: ReturnType<typeof getGlobalObject>) {\n  return Boolean('WorkerGlobalScope' in globalObject)\n}\n\nexport default class PluginLoader {\n  definitions: PluginDefinition[] = []\n\n  fetchESM?: (url: string) => Promise<unknown>\n  fetchCJS?: (url: string) => Promise<LoadedPlugin>\n\n  constructor(\n    pluginDefinitions: PluginDefinition[] = [],\n    args?: {\n      fetchESM?: (url: string) => Promise<unknown>\n      fetchCJS?: (url: string) => Promise<LoadedPlugin>\n    },\n  ) {\n    this.fetchESM = args?.fetchESM\n    this.fetchCJS = args?.fetchCJS\n    this.definitions = JSON.parse(JSON.stringify(pluginDefinitions))\n  }\n\n  loadScript(scriptUrl: string): Promise<void> {\n    const globalObject = getGlobalObject()\n    if (!isInWebWorker(globalObject)) {\n      return domLoadScript(scriptUrl)\n    }\n\n    // @ts-ignore\n    if (globalObject && globalObject.importScripts) {\n      return new Promise((resolve, reject) => {\n        try {\n          // @ts-ignore\n          globalObject.importScripts(scriptUrl)\n        } catch (error) {\n          reject(error || new Error(`failed to load ${scriptUrl}`))\n          return\n        }\n        resolve()\n      })\n    }\n    throw new Error(\n      'cannot figure out how to load external JS scripts in this environment',\n    )\n  }\n\n  async loadCJSPlugin({ cjsUrl }: CJSPluginDefinition): Promise<LoadedPlugin> {\n    let parsedUrl: URL\n    try {\n      parsedUrl = new URL(cjsUrl, getGlobalObject().location.href)\n    } catch (error) {\n      console.error(error)\n      throw new Error(`Error parsing URL: ${cjsUrl}`)\n    }\n    if (parsedUrl.protocol !== 'http:' && parsedUrl.protocol !== 'https:') {\n      throw new Error(\n        `Cannot load plugins using protocol \"${parsedUrl.protocol}\"`,\n      )\n    }\n    if (!this.fetchCJS) {\n      throw new Error('No fetchCJS callback provided')\n    }\n\n    return this.fetchCJS(parsedUrl.href)\n  }\n\n  async loadESMPlugin(pluginDefinition: ESMPluginDefinition) {\n    let parsedUrl: URL\n    try {\n      parsedUrl = new URL(\n        pluginDefinition.esmUrl,\n        getGlobalObject().location.href,\n      )\n    } catch (error) {\n      console.error(error)\n      throw new Error(`Error parsing URL: ${pluginDefinition.esmUrl}`)\n    }\n    if (parsedUrl.protocol !== 'http:' && parsedUrl.protocol !== 'https:') {\n      throw new Error(\n        `cannot load plugins using protocol \"${parsedUrl.protocol}\"`,\n      )\n    }\n    const plugin = (await this.fetchESM?.(parsedUrl.href)) as\n      | LoadedPlugin\n      | undefined\n    if (!plugin) {\n      throw new Error(`Could not load ESM plugin: ${parsedUrl}`)\n    }\n    return plugin\n  }\n\n  async loadUMDPlugin(\n    pluginDefinition: UMDPluginDefinition | LegacyUMDPluginDefinition,\n  ) {\n    const umdUrl =\n      'url' in pluginDefinition ? pluginDefinition.url : pluginDefinition.umdUrl\n    let parsedUrl: URL\n    try {\n      parsedUrl = new URL(umdUrl, getGlobalObject().location.href)\n    } catch (error) {\n      console.error(error)\n      throw new Error(`Error parsing URL: ${umdUrl}`)\n    }\n    if (parsedUrl.protocol !== 'http:' && parsedUrl.protocol !== 'https:') {\n      throw new Error(\n        `cannot load plugins using protocol \"${parsedUrl.protocol}\"`,\n      )\n    }\n    await this.loadScript(parsedUrl.href)\n    const moduleName = pluginDefinition.name\n    const umdName = `JBrowsePlugin${moduleName}`\n    const globalObject = getGlobalObject()\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const plugin = (globalObject as any)[umdName] as\n      | { default: PluginConstructor }\n      | undefined\n    if (!plugin) {\n      throw new Error(\n        `Failed to load UMD bundle for ${moduleName}, ${globalObject.constructor.name}.${umdName} is undefined`,\n      )\n    }\n    return plugin\n  }\n\n  async loadPlugin(definition: PluginDefinition): Promise<PluginConstructor> {\n    let plugin: LoadedPlugin\n    if (isElectron && isCJSPluginDefinition(definition)) {\n      plugin = await this.loadCJSPlugin(definition)\n    } else if (isESMPluginDefinition(definition)) {\n      plugin = await this.loadESMPlugin(definition)\n    } else if (isUMDPluginDefinition(definition)) {\n      plugin = await this.loadUMDPlugin(definition)\n    } else if (!isElectron && isCJSPluginDefinition(definition)) {\n      throw new Error(\n        `Only CommonJS plugin found, but not in a NodeJS environment: ${JSON.stringify(\n          definition,\n        )}`,\n      )\n    } else {\n      throw new Error(\n        `Could not determine plugin type: ${JSON.stringify(definition)}`,\n      )\n    }\n    return plugin.default\n  }\n\n  installGlobalReExports(target: WindowOrWorkerGlobalScope) {\n    // @ts-ignore\n    target.JBrowseExports = Object.fromEntries(\n      Object.entries(ReExports).map(([moduleName, module]) => {\n        return [moduleName, module]\n      }),\n    )\n  }\n\n  async load() {\n    return Promise.all(\n      this.definitions.map(async definition => ({\n        plugin: await this.loadPlugin(definition),\n        definition,\n      })),\n    )\n  }\n}\n","import { types, addDisposer, Instance, SnapshotOut } from 'mobx-state-tree'\nimport { autorun } from 'mobx'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport PluginLoader, {\n  PluginDefinition,\n  PluginRecord,\n  isUMDPluginDefinition,\n  isCJSPluginDefinition,\n  isESMPluginDefinition,\n} from '@jbrowse/core/PluginLoader'\nimport { fromUrlSafeB64 } from './util'\nimport { readSessionFromDynamo } from './sessionSharing'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport shortid from 'shortid'\n\nfunction addRelativeUris(\n  config: SnapshotOut<AnyConfigurationModel>,\n  configUri: URL,\n) {\n  if (typeof config === 'object') {\n    for (const key of Object.keys(config)) {\n      if (typeof config[key] === 'object') {\n        addRelativeUris(config[key], configUri)\n      } else if (key === 'uri') {\n        config.baseUri = configUri.href\n      }\n    }\n  }\n}\n\n// raw readConf alternative for before conf is initialized\nfunction readConf(\n  { configuration = {} }: { configuration?: { [key: string]: string } },\n  attr: string,\n  def: string,\n) {\n  return configuration[attr] || def\n}\n\nasync function fetchPlugins() {\n  const response = await fetch('https://jbrowse.org/plugin-store/plugins.json')\n  if (!response.ok) {\n    throw new Error(\n      `HTTP ${response.status} ${response.statusText} fetching plugins`,\n    )\n  }\n  return response.json() as Promise<{ plugins: PluginDefinition[] }>\n}\n\nasync function checkPlugins(pluginsToCheck: PluginDefinition[]) {\n  const storePlugins = await fetchPlugins()\n  return pluginsToCheck.every(p => {\n    if (isUMDPluginDefinition(p)) {\n      return Boolean(\n        storePlugins.plugins.find(\n          storePlugin =>\n            isUMDPluginDefinition(storePlugin) &&\n            (('url' in storePlugin &&\n              'url' in p &&\n              storePlugin.url === p.url) ||\n              ('umdUrl' in storePlugin &&\n                'umdUrl' in p &&\n                storePlugin.umdUrl === p.umdUrl)),\n        ),\n      )\n    }\n    if (isESMPluginDefinition(p)) {\n      return Boolean(\n        storePlugins.plugins.find(\n          storePlugin =>\n            isESMPluginDefinition(storePlugin) &&\n            storePlugin.esmUrl === p.esmUrl,\n        ),\n      )\n    }\n    if (isCJSPluginDefinition(p)) {\n      return Boolean(\n        storePlugins.plugins.find(\n          storePlugin =>\n            isCJSPluginDefinition(storePlugin) &&\n            storePlugin.cjsUrl === p.cjsUrl,\n        ),\n      )\n    }\n    return false\n  })\n}\n\nconst SessionLoader = types\n  .model({\n    configPath: types.maybe(types.string),\n    sessionQuery: types.maybe(types.string),\n    password: types.maybe(types.string),\n    adminKey: types.maybe(types.string),\n    loc: types.maybe(types.string),\n    sessionTracks: types.maybe(types.string),\n    assembly: types.maybe(types.string),\n    tracks: types.maybe(types.string),\n  })\n  .volatile(() => ({\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,\n    blankSession: false as any,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,\n    sessionTriaged: undefined as any,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,\n    shareWarningOpen: false as any,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,\n    configSnapshot: undefined as any,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,\n    sessionSnapshot: undefined as any,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,\n    sessionSpec: undefined as any,\n    runtimePlugins: [] as PluginRecord[],\n    sessionPlugins: [] as PluginRecord[],\n    sessionError: undefined as unknown,\n    configError: undefined as unknown,\n    bc1:\n      window.BroadcastChannel &&\n      new window.BroadcastChannel('jb_request_session'),\n    bc2:\n      window.BroadcastChannel &&\n      new window.BroadcastChannel('jb_respond_session'),\n  }))\n  .views(self => ({\n    get isSharedSession() {\n      return !!self.sessionQuery?.startsWith('share-')\n    },\n\n    get isSpecSession() {\n      return !!self.sessionQuery?.startsWith('spec-')\n    },\n\n    get isJb1StyleSession() {\n      return !!self.loc\n    },\n\n    get isEncodedSession() {\n      return !!self.sessionQuery?.startsWith('encoded-')\n    },\n\n    get isJsonSession() {\n      return !!self.sessionQuery?.startsWith('json-')\n    },\n\n    get isLocalSession() {\n      return !!self.sessionQuery?.startsWith('local-')\n    },\n\n    get ready() {\n      return Boolean(this.isSessionLoaded && !self.configError)\n    },\n\n    get error() {\n      return self.configError || self.sessionError\n    },\n\n    get isSessionLoaded() {\n      return Boolean(\n        self.sessionError ||\n          self.sessionSnapshot ||\n          self.blankSession ||\n          self.sessionSpec,\n      )\n    },\n    get isConfigLoaded() {\n      return Boolean(self.configError || self.configSnapshot)\n    },\n\n    get sessionTracksParsed() {\n      return self.sessionTracks ? JSON.parse(self.sessionTracks) : []\n    },\n  }))\n  .actions(self => ({\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,\n    setSessionQuery(session?: any) {\n      self.sessionQuery = session\n    },\n    setConfigError(error: unknown) {\n      self.configError = error\n    },\n    setSessionError(error: unknown) {\n      self.sessionError = error\n    },\n    setRuntimePlugins(plugins: PluginRecord[]) {\n      self.runtimePlugins = plugins\n    },\n    setSessionPlugins(plugins: PluginRecord[]) {\n      self.sessionPlugins = plugins\n    },\n    setConfigSnapshot(snap: unknown) {\n      self.configSnapshot = snap\n    },\n\n    setBlankSession(flag: boolean) {\n      self.blankSession = flag\n    },\n    setSessionTriaged(args?: {\n      snap: unknown\n      origin: string\n      reason: { url?: string }[]\n    }) {\n      self.sessionTriaged = args\n    },\n    setSessionSnapshotSuccess(snap: unknown) {\n      self.sessionSnapshot = snap\n    },\n  }))\n  .actions(self => ({\n    async fetchPlugins(config: { plugins: PluginDefinition[] }) {\n      try {\n        const pluginLoader = new PluginLoader(config.plugins, {\n          fetchESM: url => import(/* webpackIgnore:true */ url),\n        })\n        pluginLoader.installGlobalReExports(window)\n        const runtimePlugins = await pluginLoader.load()\n        self.setRuntimePlugins([...runtimePlugins])\n      } catch (e) {\n        console.error(e)\n        self.setConfigError(e)\n      }\n    },\n    async fetchSessionPlugins(snap: { sessionPlugins?: PluginDefinition[] }) {\n      try {\n        const pluginLoader = new PluginLoader(snap.sessionPlugins || [], {\n          fetchESM: url => import(/* webpackIgnore:true */ url),\n        })\n        pluginLoader.installGlobalReExports(window)\n        const plugins = await pluginLoader.load()\n        self.setSessionPlugins([...plugins])\n      } catch (e) {\n        console.error(e)\n        self.setConfigError(e)\n      }\n    },\n\n    // passed\n    async setSessionSnapshot(\n      snap: { sessionPlugins?: PluginDefinition[] },\n      userAcceptedConfirmation?: boolean,\n    ) {\n      try {\n        const { sessionPlugins = [] } = snap\n        const sessionPluginsAllowed = await checkPlugins(sessionPlugins)\n        if (sessionPluginsAllowed || userAcceptedConfirmation) {\n          await this.fetchSessionPlugins(snap)\n          self.setSessionSnapshotSuccess(snap)\n        } else {\n          self.setSessionTriaged({\n            snap,\n            origin: 'session',\n            reason: sessionPlugins,\n          })\n        }\n      } catch (e) {\n        console.error(e)\n        self.setConfigError(e)\n      }\n    },\n\n    async fetchConfig() {\n      const { configPath = 'config.json' } = self\n      const text = await openLocation({\n        uri: configPath,\n        locationType: 'UriLocation',\n      }).readFile('utf8')\n      const config = JSON.parse(text)\n      const configUri = new URL(configPath, window.location.href)\n      addRelativeUris(config, configUri)\n\n      // cross origin config check\n      if (configUri.hostname !== window.location.hostname) {\n        const configPlugins = config.plugins || []\n        const configPluginsAllowed = await checkPlugins(configPlugins)\n        if (!configPluginsAllowed) {\n          self.setSessionTriaged({\n            snap: config,\n            origin: 'config',\n            reason: configPlugins,\n          })\n        } else {\n          await this.fetchPlugins(config)\n          self.setConfigSnapshot(config)\n        }\n      } else {\n        await this.fetchPlugins(config)\n        self.setConfigSnapshot(config)\n      }\n    },\n\n    async fetchSessionStorageSession() {\n      const sessionStr = sessionStorage.getItem('current')\n      const query = (self.sessionQuery as string).replace('local-', '')\n\n      // check if\n      if (sessionStr) {\n        const sessionSnap = JSON.parse(sessionStr).session || {}\n        if (query === sessionSnap.id) {\n          await this.setSessionSnapshot(sessionSnap)\n          return\n        }\n      }\n      if (self.bc1) {\n        self.bc1.postMessage(query)\n        const resultP = new Promise((resolve, reject) => {\n          if (self.bc2) {\n            self.bc2.onmessage = msg => {\n              resolve(msg.data)\n            }\n          }\n          setTimeout(() => reject(), 1000)\n        })\n\n        try {\n          const result = await resultP\n          // @ts-ignore\n          await self.setSessionSnapshot({ ...result, id: shortid() })\n          return\n        } catch (e) {\n          // the broadcast channels did not find the session in another tab\n          // clear session param, so just ignore\n        }\n      }\n      throw new Error('Local storage session not found')\n    },\n\n    async fetchSharedSession() {\n      const defaultURL = 'https://share.jbrowse.org/api/v1/'\n      const decryptedSession = await readSessionFromDynamo(\n        `${readConf(self.configSnapshot, 'shareURL', defaultURL)}load`,\n        self.sessionQuery || '',\n        self.password || '',\n      )\n\n      const session = JSON.parse(await fromUrlSafeB64(decryptedSession))\n\n      await this.setSessionSnapshot({ ...session, id: shortid() })\n    },\n\n    async decodeEncodedUrlSession() {\n      const session = JSON.parse(\n        // @ts-ignore\n        await fromUrlSafeB64(self.sessionQuery.replace('encoded-', '')),\n      )\n      await this.setSessionSnapshot({ ...session, id: shortid() })\n    },\n\n    decodeSessionSpec() {\n      if (!self.sessionQuery) {\n        return\n      }\n      self.sessionSpec = JSON.parse(self.sessionQuery.replace('spec-', ''))\n    },\n\n    decodeJb1StyleSession() {\n      const { loc, tracks, assembly, sessionTracksParsed: sessionTracks } = self\n      if (loc) {\n        self.sessionSpec = {\n          sessionTracks,\n          views: [\n            {\n              type: 'LinearGenomeView',\n              tracks: tracks?.split(','),\n              sessionTracks,\n              loc,\n              assembly,\n            },\n          ],\n        }\n      }\n    },\n\n    async decodeJsonUrlSession() {\n      // @ts-ignore\n      const session = JSON.parse(self.sessionQuery.replace('json-', ''))\n      await this.setSessionSnapshot({ ...session.session, id: shortid() })\n    },\n\n    async afterCreate() {\n      try {\n        // rename the current autosave from previously loaded jbrowse session\n        // into previousAutosave on load\n        const { configPath } = self\n        const lastAutosave = localStorage.getItem(`autosave-${configPath}`)\n        if (lastAutosave) {\n          localStorage.setItem(`previousAutosave-${configPath}`, lastAutosave)\n        }\n      } catch (e) {\n        console.error('failed to create previousAutosave', e)\n      }\n\n      try {\n        // fetch config\n        await this.fetchConfig()\n      } catch (e) {\n        console.error(e)\n        self.setConfigError(e)\n        return\n      }\n\n      addDisposer(\n        self,\n        autorun(async () => {\n          try {\n            const {\n              isLocalSession,\n              isEncodedSession,\n              isSpecSession,\n              isSharedSession,\n              isJsonSession,\n              isJb1StyleSession,\n              sessionQuery,\n              configSnapshot,\n            } = self\n            if (!configSnapshot) {\n              return\n            }\n\n            if (isSharedSession) {\n              await this.fetchSharedSession()\n            } else if (isSpecSession) {\n              this.decodeSessionSpec()\n            } else if (isJb1StyleSession) {\n              this.decodeJb1StyleSession()\n            } else if (isEncodedSession) {\n              await this.decodeEncodedUrlSession()\n            } else if (isJsonSession) {\n              await this.decodeJsonUrlSession()\n            } else if (isLocalSession) {\n              await this.fetchSessionStorageSession()\n            } else if (sessionQuery) {\n              // if there was a sessionQuery and we don't recognize it\n              throw new Error('unrecognized session format')\n            } else {\n              // placeholder for session loaded, but none found\n              self.setBlankSession(true)\n            }\n            if (self.bc1) {\n              self.bc1.onmessage = msg => {\n                const ret =\n                  JSON.parse(sessionStorage.getItem('current') || '{}')\n                    .session || {}\n                if (ret.id === msg.data) {\n                  if (self.bc2) {\n                    self.bc2.postMessage(ret)\n                  }\n                }\n              }\n            }\n          } catch (e) {\n            console.error(e)\n            self.setSessionError(e)\n          }\n        }),\n      )\n    },\n  }))\n\nexport type SessionLoaderModel = Instance<typeof SessionLoader>\n\nexport default SessionLoader\n\ninterface ViewSpec {\n  type: string\n  tracks?: string[]\n  assembly: string\n  loc: string\n}\n\n// use extension point named e.g. LaunchView-LinearGenomeView to initialize an\n// LGV session\nexport function loadSessionSpec(\n  {\n    views,\n    sessionTracks,\n  }: {\n    views: ViewSpec[]\n    sessionTracks: unknown[]\n  },\n  pluginManager: PluginManager,\n) {\n  return async () => {\n    const { rootModel } = pluginManager\n    if (!rootModel) {\n      throw new Error('rootModel not initialized')\n    }\n    try {\n      // @ts-ignore\n      rootModel.setSession({\n        name: `New session ${new Date().toLocaleString()}`,\n      })\n\n      // @ts-ignore\n      sessionTracks.forEach(track => rootModel.session.addTrackConf(track))\n\n      await Promise.all(\n        views.map(view =>\n          pluginManager.evaluateAsyncExtensionPoint('LaunchView-' + view.type, {\n            ...view,\n            session: rootModel.session,\n          }),\n        ),\n      )\n    } catch (e) {\n      console.error(e)\n      rootModel.session?.notify(`${e}`)\n    }\n  }\n}\n","import React, { lazy, useEffect, useState, Suspense } from 'react'\nimport PluginManager, { PluginLoadRecord } from '@jbrowse/core/PluginManager'\nimport { observer } from 'mobx-react'\nimport { inDevelopment } from '@jbrowse/core/util'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport {\n  StringParam,\n  QueryParamProvider,\n  useQueryParam,\n} from 'use-query-params'\nimport { FatalErrorDialog } from '@jbrowse/core/ui'\nimport '@fontsource/roboto'\nimport 'requestidlecallback-polyfill'\nimport 'core-js/stable'\nimport queryString from 'query-string'\nimport shortid from 'shortid'\nimport { doAnalytics } from '@jbrowse/core/util/analytics'\n\n// locals\nimport Loading from './Loading'\nimport corePlugins from './corePlugins'\nimport JBrowse from './JBrowse'\nimport JBrowseRootModelFactory from './rootModel'\nimport packageJSON from '../package.json'\nimport factoryReset from './factoryReset'\nimport SessionLoader, {\n  SessionLoaderModel,\n  loadSessionSpec,\n} from './SessionLoader'\n\n// lazy components\nconst SessionWarningDialog = lazy(() => import('./SessionWarningDialog'))\nconst ConfigWarningDialog = lazy(() => import('./ConfigWarningDialog'))\nconst ErrorMessage = lazy(() => import('@jbrowse/core/ui/ErrorMessage'))\nconst StartScreen = lazy(() => import('./StartScreen'))\n\nfunction NoConfigMessage() {\n  const links = [\n    ['test_data/volvox/config.json', 'Volvox sample data'],\n    ['test_data/config.json', 'Human basic'],\n    ['test_data/config_demo.json', 'Human sample data'],\n    ['test_data/tomato/config.json', 'Tomato SVs'],\n    ['test_data/breakpoint/config.json', 'Breakpoint'],\n    ['test_data/config_dotplot.json', 'Grape/Peach dotplot'],\n    ['test_data/config_synteny_grape_peach.json', 'Grape/Peach synteny'],\n    ['test_data/yeast_synteny/config.json', 'Yeast synteny'],\n    ['test_data/config_many_contigs.json', 'Many contigs'],\n    ['test_data/config_honeybee.json', 'Honeybee'],\n    ['test_data/config_wormbase.json', 'Wormbase'],\n    ['test_data/wgbs/config.json', 'WGBS methylation'],\n  ]\n  return (\n    <div>\n      <h4>\n        Configuration not found. You may have arrived here if you requested a\n        config that does not exist or you have not set up your JBrowse yet.\n      </h4>\n\n      <p>\n        If you want to complete your setup, visit our{' '}\n        <a href=\"https://jbrowse.org/jb2/docs/quickstart_web\">\n          Quick start guide\n        </a>\n      </p>\n\n      {inDevelopment ? (\n        <>\n          <div>Sample JBrowse configs:</div>\n          <ul>\n            {links.map(([link, name]) => {\n              const { href, search } = window.location\n              const { config, ...rest } = queryString.parse(search)\n              const root = href.split('?')[0]\n              const params = queryString.stringify({\n                ...rest,\n                config: link,\n              })\n              return (\n                <li key={name}>\n                  <a href={`${root}?${params}`}>{name}</a>\n                </li>\n              )\n            })}\n          </ul>\n        </>\n      ) : (\n        <>\n          <div>Sample JBrowse config:</div>\n          <ul>\n            <li>\n              <a href=\"?config=test_data/volvox/config.json\">\n                Volvox sample data\n              </a>\n            </li>\n          </ul>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport function Loader({\n  initialTimestamp = Date.now(),\n}: {\n  initialTimestamp?: number\n}) {\n  // return value if defined, else convert null to undefined for use with\n  // types.maybe\n  const load = (param: string | null | undefined) =>\n    param === null ? undefined : param\n\n  const Str = StringParam\n\n  const [config] = useQueryParam('config', Str)\n  const [session] = useQueryParam('session', Str)\n  const [adminKey] = useQueryParam('adminKey', Str)\n  const [password, setPassword] = useQueryParam('password', Str)\n  const [loc, setLoc] = useQueryParam('loc', Str)\n  const [sessionTracks, setSessionTracks] = useQueryParam('sessionTracks', Str)\n  const [assembly, setAssembly] = useQueryParam('assembly', Str)\n  const [tracks, setTracks] = useQueryParam('tracks', Str)\n\n  const loader = SessionLoader.create({\n    configPath: load(config),\n    sessionQuery: load(session),\n    password: load(password),\n    adminKey: load(adminKey),\n    loc: load(loc),\n    assembly: load(assembly),\n    tracks: load(tracks),\n    sessionTracks: load(sessionTracks),\n  })\n\n  useEffect(() => {\n    setLoc(undefined)\n    setTracks(undefined)\n    setAssembly(undefined)\n    setPassword(undefined)\n    setSessionTracks(undefined)\n  }, [setAssembly, setLoc, setTracks, setPassword, setSessionTracks])\n\n  return (\n    <Renderer\n      loader={loader}\n      initialTimestamp={initialTimestamp}\n      initialSessionQuery={session}\n    />\n  )\n}\n\nconst SessionTriaged = ({\n  loader,\n  handleClose,\n}: {\n  loader: SessionLoaderModel\n  handleClose: Function\n}) => {\n  return (\n    <Suspense fallback={<div />}>\n      <SessionWarningDialog\n        onConfirm={async () => {\n          const session = JSON.parse(JSON.stringify(loader.sessionTriaged.snap))\n\n          // second param true says we passed user confirmation\n          await loader.setSessionSnapshot({ ...session, id: shortid() }, true)\n          handleClose()\n        }}\n        onCancel={() => {\n          loader.setBlankSession(true)\n          handleClose()\n        }}\n        reason={loader.sessionTriaged.reason}\n      />\n    </Suspense>\n  )\n}\n\nconst ErrMessage = ({ err }: { err: unknown }) => {\n  return (\n    <>\n      <NoConfigMessage />\n      {`${err}`.match(/HTTP 404 fetching config.json/) ? (\n        <div\n          style={{\n            margin: 8,\n            padding: 8,\n            border: '1px solid black',\n            background: '#9f9',\n          }}\n        >\n          No config.json found. If you want to learn how to complete your setup,\n          visit our{' '}\n          <a href=\"https://jbrowse.org/jb2/docs/quickstart_web\">\n            Quick start guide\n          </a>\n        </div>\n      ) : (\n        <Suspense fallback={<div>Loading...</div>}>\n          <ErrorMessage error={err} />\n        </Suspense>\n      )}\n    </>\n  )\n}\n\nfunction ConfigTriaged({\n  loader,\n  handleClose,\n}: {\n  loader: SessionLoaderModel\n  handleClose: Function\n}) {\n  return (\n    <Suspense fallback={<div />}>\n      <ConfigWarningDialog\n        onConfirm={async () => {\n          const session = JSON.parse(JSON.stringify(loader.sessionTriaged.snap))\n          await loader.fetchPlugins(session)\n          loader.setConfigSnapshot({ ...session, id: shortid() })\n          handleClose()\n        }}\n        onCancel={() => {\n          factoryReset()\n          handleClose()\n        }}\n        reason={loader.sessionTriaged.reason}\n      />\n    </Suspense>\n  )\n}\n\nconst Renderer = observer(\n  ({\n    loader,\n    initialTimestamp,\n    initialSessionQuery,\n  }: {\n    loader: SessionLoaderModel\n    initialTimestamp: number\n    initialSessionQuery: string | null | undefined\n  }) => {\n    const { sessionError, configError, ready, shareWarningOpen } = loader\n    const [pm, setPluginManager] = useState<PluginManager>()\n    const [error, setError] = useState<unknown>()\n\n    // only create the pluginManager/rootModel \"on mount\"\n    useEffect(() => {\n      try {\n        const {\n          runtimePlugins,\n          sessionPlugins,\n          adminKey,\n          configSnapshot,\n          sessionSnapshot,\n          configPath,\n          sessionSpec,\n        } = loader\n\n        if (ready) {\n          // it is ready when a session has loaded and when there is no config\n          // error Assuming that the query changes self.sessionError or\n          // self.sessionSnapshot or self.blankSession\n          const pluginManager = new PluginManager([\n            ...corePlugins.map(P => {\n              return {\n                plugin: new P(),\n                metadata: { isCore: true },\n              } as PluginLoadRecord\n            }),\n            ...runtimePlugins.map(({ plugin: P, definition }) => ({\n              plugin: new P(),\n              definition,\n              metadata: { url: definition.url },\n            })),\n            ...sessionPlugins.map(({ plugin: P, definition }) => ({\n              plugin: new P(),\n              definition,\n              metadata: { url: definition.url },\n            })),\n          ])\n          pluginManager.createPluggableElements()\n          const RootModel = JBrowseRootModelFactory(pluginManager, !!adminKey)\n\n          if (configSnapshot) {\n            const rootModel = RootModel.create(\n              {\n                jbrowse: configSnapshot,\n                assemblyManager: {},\n                version: packageJSON.version,\n                configPath,\n              },\n              { pluginManager },\n            )\n            if (\n              !rootModel.jbrowse.configuration.rpc.drivers.get(\n                'WebWorkerRpcDriver',\n              )\n            ) {\n              rootModel.jbrowse.configuration.rpc.addDriverConfig(\n                'WebWorkerRpcDriver',\n                { type: 'WebWorkerRpcDriver' },\n              )\n            }\n            if (!loader.configSnapshot?.configuration?.rpc?.defaultDriver) {\n              rootModel.jbrowse.configuration.rpc.defaultDriver.set(\n                'WebWorkerRpcDriver',\n              )\n            }\n\n            let afterInitializedCb = () => {}\n\n            // in order: saves the previous autosave for recovery, tries to\n            // load the local session if session in query, or loads the default\n            // session\n            try {\n              if (sessionError) {\n                rootModel.setDefaultSession()\n                // make typescript happy by checking for session after\n                // setDefaultSession, even though we know this exists now\n                if (rootModel.session) {\n                  rootModel.session.notify(\n                    `Error loading session: ${sessionError}. If you\n                received this URL from another user, request that they send you\n                a session generated with the \"Share\" button instead of copying\n                and pasting their URL`,\n                  )\n                }\n              } else if (sessionSnapshot && !shareWarningOpen) {\n                rootModel.setSession(sessionSnapshot)\n              } else if (sessionSpec) {\n                afterInitializedCb = loadSessionSpec(sessionSpec, pluginManager)\n              } else if (rootModel.jbrowse.defaultSession?.views?.length) {\n                rootModel.setDefaultSession()\n              }\n            } catch (e) {\n              rootModel.setDefaultSession()\n              const str = `${e}`\n              const errorMessage = str\n                .replace('[mobx-state-tree] ', '')\n                .replace(/\\(.+/, '')\n              rootModel.session?.notify(\n                `Session could not be loaded. ${\n                  errorMessage.length > 1000\n                    ? `${errorMessage.slice(0, 1000)}...see more in console`\n                    : errorMessage\n                }`,\n              )\n              console.error(e)\n            }\n\n            // send analytics\n            doAnalytics(rootModel, initialTimestamp, initialSessionQuery)\n\n            pluginManager.setRootModel(rootModel)\n            pluginManager.configure()\n            setPluginManager(pluginManager)\n            afterInitializedCb()\n          }\n        }\n      } catch (e) {\n        setError(e)\n        console.error(e)\n      }\n    }, [\n      loader,\n      shareWarningOpen,\n      ready,\n      sessionError,\n      initialTimestamp,\n      initialSessionQuery,\n    ])\n\n    const err = configError || error\n\n    if (err) {\n      return <ErrMessage err={err} />\n    }\n\n    if (loader.sessionTriaged) {\n      return loader.sessionTriaged.origin === 'session' ? (\n        <SessionTriaged\n          loader={loader}\n          handleClose={() => loader.setSessionTriaged(undefined)}\n        />\n      ) : (\n        <ConfigTriaged\n          loader={loader}\n          handleClose={() => loader.setSessionTriaged(undefined)}\n        />\n      )\n    }\n    if (pm) {\n      if (!pm.rootModel?.session) {\n        return (\n          <Suspense fallback={<div>Loading...</div>}>\n            <StartScreen\n              rootModel={pm.rootModel}\n              onFactoryReset={factoryReset}\n            />\n          </Suspense>\n        )\n      }\n      return <JBrowse pluginManager={pm} />\n    }\n    return <Loading />\n  },\n)\n\nconst PlatformSpecificFatalErrorDialog = (props: unknown) => {\n  return (\n    <FatalErrorDialog\n      resetButtonText=\"Reset Session\"\n      onFactoryReset={factoryReset}\n      {...props}\n    />\n  )\n}\nconst LoaderWrapper = ({ initialTimestamp }: { initialTimestamp: number }) => {\n  return (\n    <ErrorBoundary FallbackComponent={PlatformSpecificFatalErrorDialog}>\n      <QueryParamProvider>\n        <Loader initialTimestamp={initialTimestamp} />\n      </QueryParamProvider>\n    </ErrorBoundary>\n  )\n}\n\nexport default LoaderWrapper\n"],"names":["globalOmit","coreDetails","useStyles","makeStyles","theme","expansionPanelDetails","display","padding","spacing","expandIcon","color","field","flexWrap","fieldDescription","background","fieldName","wordBreak","minWidth","borderBottom","palette","grey","marginRight","fieldValue","maxHeight","overflow","fieldSubvalue","border","boxSizing","BaseCard","children","title","defaultExpanded","classes","useState","expanded","setExpanded","onChange","s","TransitionProps","unmountOnExit","className","variant","FieldName","description","name","prefix","width","val","join","placement","clsx","style","BasicValue","value","React","html","isObject","JSON","stringify","String","SimpleValue","undefined","ArrayValue","length","Attributes","attributes","every","map","i","CoreDetails","props","feature","refName","start","end","strand","strandMap","strandStr","displayStart","toLocaleString","displayEnd","displayRef","displayedDetails","position","key","toLowerCase","filter","BaseCoreDetails","DataGridDetails","keys","Object","sort","unionKeys","Set","forEach","k","add","size","colNames","rows","entries","id","rest","identifier","has","delete","columns","Math","max","row","result","min","measureText","height","DataGrid","disableSelectionOnClick","rowHeight","headerHeight","rowsPerPageOptions","hideFooterRowCount","hideFooterSelectedRowCount","hideFooter","omit","descriptions","formatter","omits","maxLabelWidth","array","arr","push","ceil","generateMaxWidth","includes","labelWidth","Array","isArray","obj","elt","Description","accessNested","BaseAttributes","FeatureDetails","model","depth","type","subfeatures","session","getSession","sequenceTypes","getConf","ellipses","f","ErrorBoundary","FallbackComponent","error","sub","BaseFeatureDetails","observer","featureData","parse","abortSignalCounter","abortSignalIds","WeakMap","serializeAbortSignal","signal","callfunc","abortSignalId","get","set","addEventListener","signalId","isRemoteAbortSignal","thing","surrogateAbortControllers","Map","deserializeAbortSignal","surrogateAbortController","AbortController","importFormEntry","AssemblySelector","selected","InputProps","extra","assemblyNames","assemblyManager","config","URLSearchParams","window","location","search","initialValue","item","localStorage","getItem","console","storedValue","setStoredValue","valueToStore","Function","setItem","useLocalStorage","host","pathname","lastSelected","setLastSelected","selection","useEffect","select","label","helperText","inputProps","event","target","disabled","assembly","displayName","input","inputBase","typography","top","left","whiteSpace","visibility","inputRoot","inputFocused","borderStyle","borderRadius","shape","borderWidth","EditableTypography","ref","setValue","other","editedValue","setEditedValue","setWidth","sizerNode","setSizerNode","inputNode","setInputNode","blur","setBlur","useTheme","clientWidth","node","component","inputRef","root","focused","onKeyDown","onBlur","message","margin","errorBox","snapshotError","str","findStr","idx","indexOf","trim","slice","match","match2","onClose","open","onFactoryReset","handleDialogClose","action","onClick","ToggleButtonWithTooltip","Tooltip","ToggleButton","shorten","len","substring","rootModel","setLocation","fileOrUrl","isUriLocation","internetAccountId","toggleButtonValue","setToggleButtonValue","accts","isAppRootModel","internetAccounts","shownAccts","setShownAccts","hiddenAccts","setHiddenAccts","anchorEl","setAnchorEl","selectedAcct","find","ia","setLocationWithAccount","locationInput","UrlChooser","selectorLabel","LocalFileChooser","SelectorComponent","Box","InputLabel","shrink","flexDirection","ToggleButtonGroup","exclusive","_event","newState","toggleContents","ArrowDropDown","Menu","Boolean","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","acct","MenuItem","prev","FormHelperText","paper","overflowY","overflowX","minHeight","maxWidth","outline","menuItemEndDecoration","right","transform","MenuItemEndDecoration","checked","icon","MenuPage","subMenuAnchorEl","setSubMenuAnchorEl","openSubMenuIdx","setOpenSubMenuIdx","isSubMenuOpen","setIsSubMenuOpen","selectedMenuItemIdx","setSelectedMenuItemIdx","setPosition","paperRef","useRef","menuItems","onMenuItemClick","timer","shouldSubMenuBeOpen","setTimeout","clearTimeout","rect","getBoundingClientRect","hasEndDecoration","some","menuItem","hasIcon","menuItemStyle","paddingRight","ListContents","autoFocusItem","a","b","priority","endDecoration","Icon","callback","onMouseMove","e","currentTarget","document","activeElement","focus","currentIdx","findLastIndex","findPreviousValidIdx","findIndex","findNextValidIdx","primary","secondary","subLabel","inset","subMenu","in","elevation","transitionDuration","BackdropProps","invisible","horizontalHandle","cursor","verticalHandle","flexbox_verticalHandle","alignSelf","flexbox_horizontalHandle","onDrag","flexbox","originalClassName","mouseDragging","setMouseDragging","prevPos","mouseMove","preventDefault","pos","clientX","clientY","distance","current","mouseUp","removeEventListener","onMouseDown","role","full","RegExp","tag","SanitizedHTML","test","escapeHTML","dangerouslySetInnerHTML","__html","dompurify","refTheme","createTheme","jbrowseDefaultPalette","main","tertiary","augmentColor","quaternary","stopCodon","startCodon","bases","A","green","C","blue","G","amber","T","red","createJBrowseDefaultProps","MuiButton","MuiFilledInput","MuiFormControl","MuiFormHelperText","MuiIconButton","MuiInputBase","MuiList","dense","MuiListItem","MuiOutlinedInput","MuiFab","MuiTable","MuiTextField","MuiToolbar","MuiSvgIcon","fontSize","MuiToggleButtonGroup","MuiCheckbox","MuiLink","underline","createJBrowseDefaultOverrides","generatedPalette","deepmerge","colorSecondary","textSecondary","backgroundColor","MuiAccordion","MuiAccordionSummary","contrastText","content","MuiMenuItem","paddingTop","paddingBottom","MuiListItemIcon","MuiListItemText","paddingLeft","jbrowseBaseTheme","overrides","createJBrowseTheme","getColors","midnight","forrest","grape","mandarin","gray","Logomark","viewBox","LogoFull","Text","colors","fill","d","fabLeft","zIndex","bottom","fabRight","menuBarAndComponents","gridColumn","gridTemplateRows","menuBar","gridRow","components","appBar","flexGrow","grow","light","borderColor","selectPaper","Logo","configuration","logoPath","readConfObject","uri","src","alt","HeaderButtons","pluginManager","getEnv","viewTypes","getElementTypeRecord","all","visibleWidget","drawerWidth","minimized","activeWidgets","savedSessionNames","menus","views","drawerPosition","grid","drawerVisible","gridTemplateColumns","DrawerWidget","DialogComponent","Suspense","fallback","DialogProps","AppBar","Toolbar","menu","DropDownMenu","menuTitle","arrow","newName","notify","renameCurrentSession","view","viewType","getViewType","Error","ReactComponent","ViewContainer","removeView","getTrackType","Paper","Typography","Select","Button","addView","Fab","showWidgetDrawer","Launch","Snackbar","closeButton","handleClose","Dialog","DialogTitle","IconButton","Close","Divider","DialogContent","DialogActions","clearView","autoFocus","PrerenderedCanvas","highResolutionScaling","imageData","blockKey","showSoftClip","featureCanvas","canvas","context","getContext","drawImageOntoCanvasContext","blockKeyStr","testId","defaultProps","hoverLabel","pointerEvents","offsetX","offsetY","timeout","shown","setShown","handle","text","QuickLRU","options","maxSize","TypeError","this","cache","oldCache","_size","_set","deleted","clear","oldCacheSize","Symbol","iterator","AbortError","code","checkAbortSignal","AbortSignal","aborted","makeAbortError","ms","Promise","resolve","abortBreakPoint","DOMException","observeAbortSignal","fromEvent","Observable","isAbortException","exception","replayCommandsOntoContext","targetContext","encodedCommands","command","isMethodCall","apply","args","OffscreenCanvasRenderingContext2DShim","currentFont","currentStrokeStyle","currentFillStyle","recordedCommands","arg","getSerializedSvg","pushSetterCall","pushMethodCall","x","y","w","h","nx","nw","Number","OffscreenCanvasShim","createCanvas","createImageBitmap","ImageBitmapType","serializedCommands","drawImage","dataURL","weHave","OffscreenCanvas","isNode","self","ImageBitmap","require","nodeCreateCanvas","Image","dataUri","toDataURL","img","reject","onload","onerror","ctx","getSerializedCommands","containsNoTransferables","renderToAbstractCanvas","opts","cb","exportSVG","rasterizeLayers","fakeCanvas","fakeCtx","reactElement","scale","blobToDataURL","convertToBlob","xlinkHref","isViewContainer","isStateTreeNode","isSessionModel","isSessionModelWithConfigEditing","isSessionWithAddTracks","isSessionModelWithWidgets","isSessionWithSessionPlugins","isSelectionContainer","isViewModel","isTrackModel","trackId","isDisplayModel","displayId","isTrackViewModel","isAbstractMenuManager","AuthNeededError","url","setPrototypeOf","prototype","RetryError","isAuthNeededException","isRetryException","when","getter","timeoutId","finished","whenPromise","mobxWhen","finishTimeout","cancel","then","catch","err","whenPresent","PhasedScheduler","phaseCallbacks","phaseOrder","phase","phaseName","TypeRecord","typeName","baseClass","registeredTypes","t","values","PluginManager","initialPlugins","plugins","jexl","createJexlInstance","pluginMetadata","runtimePluginDefinitions","elementCreationSchedule","rendererTypes","RendererType","adapterTypes","AdapterType","textSearchAdapterTypes","TextSearchAdapterType","trackTypes","TrackType","displayTypes","DisplayType","connectionTypes","ConnectionType","ViewType","widgetTypes","WidgetType","rpcMethods","RpcMethodType","internetAccountTypes","InternetAccountType","configured","extensionPoints","jbrequireCache","lib","ReExports","load","jbrequire","pack","default","addPlugin","plugin","CorePlugin","metadata","isCore","configurationSchemas","configurationSchema","Plugin","definition","install","p","getPlugin","run","configure","groupName","creationCallback","typeRecord","newElement","evaluateExtensionPoint","typeGroup","types","pluggableTypes","isType","isModelType","warn","isBareConfigurationSchemaType","ConfigurationSchema","methodName","internetAccountName","addElementType","track","getElementTypesInGroup","trackType","addDisplayType","newView","extensionPointName","callbacks","extendee","accumulator","initialTimeStamp","sessionQuery","multiAssemblyTracks","jbrowse","tracks","savedSessionCount","ver","version","assemblies","stats","sessionTracks","split","screen","innerHeight","innerWidth","electron","isElectron","loadTime","Date","now","jb2","qs","fetch","initialTimestamp","pluginNames","analyticsScript","gaData","index","metric1","round","analyticsScriptNode","createElement","innerHTML","getElementsByTagName","appendChild","doAnalytics","initialSessionQuery","writeAWSAnalytics","writeGAAnalytics","SetDefaultSession","lazy","AssemblyManager","exports","addConnectionType","configSchema","ucscConfigSchema","stateModel","ucscModelFactory","addWidgetType","heading","HierarchicalTrackSelectorConfigSchema","HierarchicalTrackSelectorStateModelFactory","AddTrackConfigSchema","AddTrackStateModelFactory","AddConnectionConfigSchema","AddConnectionStateModel","PluginStoreConfigSchema","PluginStoreStateModelFactory","SVG","LinearGenomeView","Alignments","Authentication","Bed","CircularView","Config","DataManagement","DotplotView","GtfPlugin","Gff3","LegacyJBrowse","LinearComparativeView","Lollipop","Arc","Menus","RDF","Sequence","TrackHubRegistry","Variants","Wiggle","SpreadsheetViewPlugin","SvInspectorPlugin","BreakpointSplitView","HicPlugin","TrixPlugin","GridBookmarkPlugin","ComparativeAdapters","b64PadSuffix","b64","num","repeat","fromUrlSafeB64","originalB64","replace","toByteArray","inflate","bytes","inflated","TextDecoder","decode","toUrlSafeB64","TextEncoder","encode","deflate","fromByteArray","deflated","encoded","generateUID","btoa","from","crypto","getRandomValues","Uint8Array","fromCharCode","encrypt","password","AES","toString","decrypt","Utf8","getErrorMsg","shareSessionToDynamo","referer","sess","encryptedSession","data","FormData","append","method","mode","body","response","ok","json","readSessionFromDynamo","baseUrl","sessionQueryParam","sessionId","shareDiv","textAlign","shareButton","alpha","hoverOpacity","loadingMessage","SHARE_URL_LOCALSTORAGE_KEY","SettingsDialog","currentSetting","setting","setSetting","infoDialogOpen","setInfoDialogOpen","DialogContentText","HelpOutline","FormControl","RadioGroup","FormControlLabel","control","Radio","InfoDialog","ShareDialog","shortUrl","setShortUrl","longUrl","setLongUrl","loading","setLoading","setError","settingsDialogOpen","setSettingsDialogOpen","shareURL","snap","getSnapshot","cancelled","locationUrl","URL","href","params","longParams","Settings","TextField","readOnly","copy","startIcon","setOpen","Share","isAssemblyEditing","isDefaultSessionEditing","setDefaultSessionEditing","setAssemblyEditing","JBrowse","useQueryParam","StringParam","adminKey","adminServer","configPath","setSessionId","currentSessionId","JBrowseRootModel","JBrowseSession","onSnapshot","snapshot","headers","status","statusText","ThemeProvider","CssBaseline","App","makeWorkerInstance","Worker","refNameColors","loadRefNameMap","adapterConf","regions","refNameAliases","rpcManager","call","adapterConfig","refNames","refNameMap","fromEntries","checkRefName","getCanonicalRefName","reversed","canonicalName","forwardMap","reverseMap","assemblyFactory","assemblyConfigType","adapterLoads","AbortablePromiseCache","abortSignal","statusCallback","volatile","cytobands","initialized","aliases","hasName","allAliases","region","allRefNames","getParent","getRefNameColor","r","isValidRefName","actions","setLoaded","adapterRegionsWithAssembly","setRegions","setRefNameAliases","setCytobands","afterAttach","makeAbortableReaction","sequence","sequenceAdapterConfig","adapter","refNameAliasesAdapterConfig","cytobandAdapterConfig","assemblyName","makeLoadAssemblyData","loadAssemblyReaction","fireImmediately","getAdapterMapEntry","adapterId","jsonStableStringify","getAdapterId","getRefNameMapForAdapter","getReverseRefNameMapForAdapter","getAssemblyRegions","adapterRegions","adapterRegion","getRefNameAliases","getCytobands","alias","getAdapterType","getAdapterClass","CLASS","getData","getRegions","assemblyManagerFactory","Assembly","assemblyNamesList","assemblyList","asm","sessionAssemblies","allPossibleRefNames","concat","waitForAssembly","removeAssembly","remove","addDisposer","reaction","assemblyConfigs","assemblyConfig","addAssembly","replaceAssembly","cast","defaultValue","pluggableConfigSchemaType","preProcessSnapshot","explicitIdentifier","BaseRpcDriverConfigSchema","workerCount","explicitlyTyped","MainThreadRpcDriverConfigSchema","baseConfiguration","WebWorkerRpcDriverConfigSchema","defaultDriver","drivers","MainThreadRpcDriver","addDriverConfig","configName","configSnapshot","isClonable","watchWorker","worker","pingTime","rpcDriverClassName","_resolve","delay","LazyWorker","driver","workerP","makeWorker","maxPingTime","destroy","BaseRpcDriver","lastWorkerAssignment","workerAssignments","workerPool","workerCheckFrequency","filterArgs","remoteAbort","bind","isAlive","File","objectFromEntries","v","functionName","getWorker","hardwareConcurrency","mainThread","canDetect","navigator","detectHardwareConcurrency","clamp","res","createWorkerPool","workers","getWorkerPool","workerNumber","workerAssignment","done","rpcMethod","getRpcMethodType","serializeArguments","serializedArgs","filteredAndSerializedArgs","callP","finally","killedP","killedCheckInterval","setInterval","clearInterval","resultP","race","deserializeReturn","WebWorkerHandle","terminate","channel","shortid","listener","on","off","Rpc","WebWorkerRpcDriver","workerBootConfiguration","instance","onmessage","postMessage","DummyHandle","_functionName","_filteredArgs","execute","RpcManager","mainConfiguration","backendConfigurations","driverObjects","backendName","newDriver","backendConfiguration","_sessionId","rpcDriverName","getDriver","getDriverForCall","driverForCall","rpcConfigSchema","TextSearchManager","adapterCache","searchScope","relevantAdapters","AdapterClass","getTextSearchAdapterType","aggregateTextSearchAdapters","getAdaptersWithAssembly","getTrackAdaptersWithAssembly","asmName","adapterConfs","conf","trackConf","textSearching","textSearchAdapter","rankFn","textSearchAdapters","loadTextSearchAdapters","searchIndex","results","sortResults","flat","getLabel","localeCompare","result1","result2","getScore","JBrowseWeb","Session","assemblyConfigSchemasType","JBrowseModel","rpc","featureDetails","disableAnalytics","locationType","pluginConfigurationSchemas","connections","defaultSession","afterCreate","seen","addAssemblyConf","assemblyConf","removeAssemblyConf","toRemove","addTrackConf","addDisplayConf","displayConf","addConnectionConf","connectionConf","deleteConnectionConf","conn","splice","deleteTrackConf","setDefaultSessionConf","sessionConf","newDefault","toJS","pluginDefinition","getRoot","setPluginsUpdated","removePlugin","umdUrl","cjsUrl","esmUrl","addInternetAccountConf","internetAccountConf","deleteInternetAccountConf","postProcessor","removeAttr","attr","prop","clone","addSnackbarToModel","tree","extend","snackbarMessages","level","pushSnackbarMessage","removeSnackbarMessage","popSnackbarMessage","pop","element","makeExtension","observable","resolveIdentifier","AboutDialog","sessionModelFactory","minDrawerWidth","sessionModel","pluggableMstType","widgets","connectionInstances","sessionConnections","sessionPlugins","task","queueOfDialogs","firstInQueue","textSearchManager","adminMode","savedSessions","previousAutosaveId","history","renderProps","getReferring","object","refs","walk","getType","members","getMembers","properties","isReferenceType","setDrawerPosition","queueDialog","shift","setName","addSessionPlugin","removeSessionPlugin","makeConnection","initialSnapshot","connectionType","getConnectionType","connectionData","removeReferring","referring","dereferenceTypeCount","dereferenced","getContainingView","hideTrack","err1","hideWidget","prepareToBreakConnection","callbacksToDereferenceTrack","connection","c","breakConnection","deleteConnection","deletedConn","connectionId","updateDrawerWidth","newDrawerWidth","resizeDrawer","oldDrawerWidth","initialState","typeDefinition","getElementType","widget","addLinearGenomeViewOfAssembly","addViewOfAssembly","displayRegionsFromAssemblyName","addViewFromAnotherView","otherView","state","displayedRegions","addWidget","showWidget","hasWidget","minimizeWidgetDrawer","hideAllWidgets","setSelection","clearSelection","clearConnections","addSavedSession","sessionSnapshot","removeSavedSession","sessionName","duplicateCurrentSession","activateSession","setDefaultSession","saveSessionToLocalStorage","loadAutosaveSession","setSession","editConfiguration","isConfigurationModel","editableConfigSession","editor","editTrackConfiguration","getTrackActionMenuItems","canEdit","isRefSeqTrack","doneCallback","InfoIcon","SettingsIcon","DeleteIcon","trackSnapshot","displays","category","CopyIcon","preProcessor","filterSessionInPlace","nodeType","isArrayType","childType","getChildType","isValidReference","el","isMapType","child","getPropertyMembers","pname","ptype","RootModel","assemblyConfigSchema","assemblyConfigSchemaFactory","assemblyManagerType","jbrowseWebFactory","pluginsUpdated","savedSessionsVolatile","localStorageId","autosaveId","startsWith","autorun","alert","sessionStorage","reload","account","initializeInternetAccount","oldSession","internetAccountConfigSchema","internetAccountType","getInternetAccountType","internetAccount","create","createEphemeralInternetAccount","hostUri","origin","internetAccountSplit","domains","flag","newSession","removeItem","newSnapshotName","newSnapshotCopyNumber","localId","newSessionSnapshot","previousAutosave","autosavedSession","findAppropriateInternetAccount","selectedId","selectedAccount","handlesLocation","AddIcon","lastAutosave","PublishIcon","GetAppIcon","sessionBlob","Blob","saveAs","FolderOpenIcon","SaveIcon","FileCopyIcon","StorageIcon","Cable","AppsIcon","ExtensionIcon","setHistory","setMenus","newMenus","appendMenu","menuName","insertMenu","appendToMenu","m","insertInMenu","insertPosition","appendToSubMenu","menuPath","topMenu","pathSoFar","sm","mi","insertInSubMenu","factoryReset","isUMDPluginDefinition","isESMPluginDefinition","isCJSPluginDefinition","getGlobalObject","global","PluginLoader","pluginDefinitions","definitions","fetchESM","fetchCJS","scriptUrl","globalObject","isInWebWorker","domLoadScript","importScripts","parsedUrl","protocol","loadScript","moduleName","umdName","constructor","loadCJSPlugin","loadESMPlugin","loadUMDPlugin","JBrowseExports","loadPlugin","addRelativeUris","configUri","baseUri","readConf","def","fetchPlugins","checkPlugins","pluginsToCheck","storePlugins","storePlugin","loc","blankSession","sessionTriaged","shareWarningOpen","sessionSpec","runtimePlugins","sessionError","configError","bc1","BroadcastChannel","bc2","isSharedSession","isSpecSession","isJb1StyleSession","isEncodedSession","isJsonSession","isLocalSession","ready","isSessionLoaded","isConfigLoaded","sessionTracksParsed","setSessionQuery","setConfigError","setSessionError","setRuntimePlugins","setSessionPlugins","setConfigSnapshot","setBlankSession","setSessionTriaged","setSessionSnapshotSuccess","pluginLoader","import","installGlobalReExports","fetchSessionPlugins","setSessionSnapshot","userAcceptedConfirmation","reason","fetchConfig","openLocation","readFile","hostname","configPlugins","fetchSessionStorageSession","sessionStr","query","sessionSnap","msg","fetchSharedSession","decryptedSession","decodeEncodedUrlSession","decodeSessionSpec","decodeJb1StyleSession","decodeJsonUrlSession","ret","SessionWarningDialog","ConfigWarningDialog","ErrorMessage","StartScreen","NoConfigMessage","inDevelopment","link","queryString","Loader","param","Str","setPassword","setLoc","setSessionTracks","setAssembly","setTracks","loader","SessionLoader","Renderer","SessionTriaged","onConfirm","onCancel","ErrMessage","ConfigTriaged","pm","setPluginManager","corePlugins","P","createPluggableElements","JBrowseRootModelFactory","packageJSON","afterInitializedCb","evaluateAsyncExtensionPoint","loadSessionSpec","errorMessage","setRootModel","Loading","PlatformSpecificFatalErrorDialog","FatalErrorDialog","resetButtonText"],"sourceRoot":""}