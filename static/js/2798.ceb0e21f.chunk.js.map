{"version":3,"file":"static/js/2798.ceb0e21f.chunk.js","mappings":"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","sources":["../../../plugins/config/src/FromConfigAdapter/FromConfigAdapter.ts","../../../plugins/config/src/FromConfigSequenceAdapter/FromConfigSequenceAdapter.ts"],"sourcesContent":["import { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport SimpleFeature, {\n  Feature,\n  SimpleFeatureSerialized,\n} from '@jbrowse/core/util/simpleFeature'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport { NoAssemblyRegion } from '@jbrowse/core/util/types'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { getSubAdapterType } from '@jbrowse/core/data_adapters/dataAdapterCache'\n\n/**\n * Adapter that just returns the features defined in its `features` configuration\n * key, like:\n *   `\"features\": [ { \"refName\": \"ctgA\", \"start\":1, \"end\":20 }, ... ]`\n */\n\nexport default class FromConfigAdapter extends BaseFeatureDataAdapter {\n  protected features: Map<string, Feature[]>\n\n  constructor(\n    conf: AnyConfigurationModel,\n    getSubAdapter?: getSubAdapterType,\n    pluginManager?: PluginManager,\n  ) {\n    super(conf, getSubAdapter, pluginManager)\n    const feats = readConfObject(conf, 'features') as SimpleFeatureSerialized[]\n    this.features = FromConfigAdapter.makeFeatures(feats || [])\n  }\n\n  static makeFeatures(fdata: SimpleFeatureSerialized[]) {\n    const features = new Map<string, Feature[]>()\n    for (const entry of fdata) {\n      if (entry) {\n        const f = this.makeFeature(entry)\n        const refName = f.get('refName') as string\n        let bucket = features.get(refName)\n        if (!bucket) {\n          bucket = []\n          features.set(refName, bucket)\n        }\n\n        bucket.push(f)\n      }\n    }\n\n    // sort the features on each reference sequence by start coordinate\n    for (const refFeatures of features.values()) {\n      refFeatures.sort((a, b) => a.get('start') - b.get('start'))\n    }\n\n    return features\n  }\n\n  static makeFeature(data: SimpleFeatureSerialized) {\n    return new SimpleFeature(data)\n  }\n\n  async getRefNames() {\n    return [...this.features.keys()]\n  }\n\n  async getRefNameAliases() {\n    return [...this.features.values()].map(featureArray => ({\n      refName: featureArray[0].get('refName'),\n      aliases: featureArray[0].get('aliases'),\n    }))\n  }\n\n  getFeatures(region: NoAssemblyRegion) {\n    const { refName, start, end } = region\n\n    return ObservableCreate<Feature>(async observer => {\n      const features = this.features.get(refName) || []\n      for (const f of features) {\n        if (f.get('end') > start && f.get('start') < end) {\n          observer.next(f)\n        }\n      }\n      observer.complete()\n    })\n  }\n\n  freeResources(/* { region } */): void {}\n}\n","import SimpleFeature, { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport { NoAssemblyRegion } from '@jbrowse/core/util/types'\nimport { toArray } from 'rxjs/operators'\nimport { RegionsAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\n\n// locals\nimport FromConfigAdapter from '../FromConfigAdapter/FromConfigAdapter'\nimport { firstValueFrom } from 'rxjs'\n\nexport default class FromConfigSequenceAdapter\n  extends FromConfigAdapter\n  implements RegionsAdapter\n{\n  /**\n   * Fetch features for a certain region\n   * @param region - Region\n   * @returns Observable of Feature objects in the region\n   */\n  getFeatures(region: NoAssemblyRegion) {\n    return ObservableCreate<Feature>(async observer => {\n      const feats = await firstValueFrom(\n        super.getFeatures(region).pipe(toArray()),\n      )\n      const feat = feats[0]\n      observer.next(\n        new SimpleFeature({\n          ...feat.toJSON(),\n          uniqueId: `${feat.id()}:${region.start}-${region.end}`,\n          end: region.end,\n          start: region.start,\n          seq: feat\n            .get('seq')\n            .slice(\n              Math.max(region.start - feat.get('start'), 0),\n              Math.max(region.end - feat.get('start'), 0),\n            ),\n        }),\n      )\n\n      observer.complete()\n    })\n  }\n\n  /**\n   * Get refName, start, and end for all features after collapsing any overlaps\n   */\n  async getRegions() {\n    const regions = []\n\n    // recall: features are stored in this object sorted by start coordinate\n    for (const [refName, features] of this.features) {\n      let currentRegion\n      for (const feature of features) {\n        if (\n          currentRegion &&\n          currentRegion.end >= feature.get('start') &&\n          currentRegion.start <= feature.get('end')\n        ) {\n          currentRegion.end = feature.get('end')\n        } else {\n          if (currentRegion) {\n            regions.push(currentRegion)\n          }\n          currentRegion = {\n            refName,\n            start: feature.get('start'),\n            end: feature.get('end'),\n          }\n        }\n      }\n      if (currentRegion) {\n        regions.push(currentRegion)\n      }\n    }\n\n    return regions\n  }\n\n  /**\n   * called to provide a hint that data tied to a certain region\n   * will not be needed for the foreseeable future and can be purged\n   * from caches, etc\n   */\n  freeResources(/* { region } */): void {}\n}\n"],"names":["FromConfigAdapter","_BaseFeatureDataAdapt","_inherits","_super","_createSuper","conf","getSubAdapter","pluginManager","_this","_classCallCheck","call","features","feats","readConfObject","makeFeatures","_createClass","key","value","_getRefNames","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","_toConsumableArray","this","keys","stop","apply","arguments","_getRefNameAliases","_callee2","_context2","values","map","featureArray","refName","get","aliases","region","_this2","start","end","ObservableCreate","_ref","_callee3","observer","_iterator","_step","f","_context3","_createForOfIteratorHelper","s","n","done","err","e","complete","_x","fdata","_step2","Map","_iterator2","entry","makeFeature","bucket","set","push","_step3","_iterator3","sort","a","b","data","SimpleFeature","BaseFeatureDataAdapter","FromConfigSequenceAdapter","_FromConfigAdapter","feat","firstValueFrom","_get","_getPrototypeOf","prototype","pipe","toArray","sent","_objectSpread","toJSON","uniqueId","concat","id","seq","slice","Math","max","_getRegions","regions","_step$value","currentRegion","feature","_slicedToArray"],"sourceRoot":""}