{"version":3,"file":"static/js/1131.332a0237.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/material/Skeleton/Skeleton.js","../../../node_modules/@mui/material/Skeleton/skeletonClasses.js","../../../node_modules/@mui/material/Switch/Switch.js","../../../node_modules/@mui/material/Switch/switchClasses.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js","../../../node_modules/@mui/x-data-grid/utils/Store.js","../../../node_modules/@mui/x-data-grid/utils/EventManager.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js","../../../node_modules/@babel/runtime/helpers/esm/typeof.js","../../../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../../../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridPipeProcessing.js","../../../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridStrategyProcessing.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridLocaleText.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridInitializeState.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/serializers/csvSerializer.js","../../../node_modules/@mui/x-data-grid/hooks/features/clipboard/useGridClipboard.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenu.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeApplier.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumns.js","../../../node_modules/@mui/x-data-grid/hooks/features/density/useGridDensity.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/utils.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/useGridCsvExport.js","../../../node_modules/@mui/x-data-grid/utils/exportAs.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js","../../../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridRegisterStrategyProcessor.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/useGridFilter.js","../../../node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js","../../../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/useGridKeyboardNavigation.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridCellEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridRowEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRows.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsPreProcessors.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelection.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/useGridSorting.js","../../../node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsMeta.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGrouping.js","../../../node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelectionPreProcessors.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumnSpanning.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js","../../../node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js","../../../node_modules/@mui/x-data-grid/hooks/features/events/useGridEvents.js","../../../node_modules/@mui/x-data-grid/hooks/features/statePersistence/useGridStatePersistence.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScroller.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerContent.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerRenderZone.js","../../../node_modules/@mui/x-data-grid/components/DataGridVirtualScroller.js","../../../node_modules/@mui/x-data-grid/DataGrid/DataGrid.js","../../../node_modules/@mui/utils/chainPropTypes/chainPropTypes.js","../../../node_modules/@mui/x-data-grid/components/GridNoResultsOverlay.js","../../../node_modules/@mui/x-data-grid/material/icons/GridColumnUnsortedIcon.js","../../../node_modules/@mui/x-data-grid/material/components/MUISelectOption.js","../../../node_modules/@mui/x-data-grid/material/index.js","../../../node_modules/@mui/x-data-grid/constants/defaultGridSlotsComponents.js","../../../node_modules/@mui/x-data-grid/internals/utils/slotsMigration.js","../../../node_modules/@mui/x-data-grid/internals/utils/useProps.js","../../../node_modules/@mui/x-data-grid/DataGrid/useDataGridProps.js","../../../node_modules/@mui/x-data-grid/internals/utils/computeSlots.js","../../../node_modules/@mui/x-data-grid/colDef/gridActionsColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridBooleanColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridBooleanOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridCheckboxSelectionColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridDateColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridDateOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridDefaultColumnTypes.js","../../../node_modules/@mui/x-data-grid/colDef/gridNumericColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridNumericOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridSingleSelectColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridSingleSelectOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridStringColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridStringOperators.js","../../../node_modules/@mui/x-data-grid/colDef/utils.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnGroupHeader.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridBaseColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeadersInner.js","../../../node_modules/@mui/x-data-grid/components/GridColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/GridFooter.js","../../../node_modules/@mui/x-data-grid/components/GridHeader.js","../../../node_modules/@mui/x-data-grid/components/GridLoadingOverlay.js","../../../node_modules/@mui/x-data-grid/components/GridNoRowsOverlay.js","../../../node_modules/@mui/x-data-grid/components/GridPagination.js","../../../node_modules/@mui/x-data-grid/components/GridRow.js","../../../node_modules/@mui/x-data-grid/components/GridRowCount.js","../../../node_modules/@mui/x-data-grid/components/GridSelectedRowCount.js","../../../node_modules/@mui/x-data-grid/components/containers/GridMainContainer.js","../../../node_modules/@mui/x-data-grid/components/base/GridBody.js","../../../node_modules/@mui/x-data-grid/components/base/GridFooterPlaceholder.js","../../../node_modules/@mui/x-data-grid/components/base/GridOverlays.js","../../../node_modules/@mui/x-data-grid/components/cell/GridActionsCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridBooleanCell.js","../../../node_modules/@mui/x-data-grid/utils/doesSupportPreventScroll.js","../../../node_modules/@mui/x-data-grid/components/cell/GridCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditBooleanCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditDateCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditInputCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditSingleSelectCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridSkeletonCell.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderFilterIconButton.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/ColumnHeaderMenuIcon.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderItem.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSeparator.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSortIcon.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderTitle.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridGenericColumnHeaderItem.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridIconButtonContainer.js","../../../node_modules/@mui/x-data-grid/components/columnSelection/GridCellCheckboxRenderer.js","../../../node_modules/@mui/x-data-grid/components/columnSelection/GridHeaderCheckbox.js","../../../node_modules/@mui/x-data-grid/components/containers/GridFooterContainer.js","../../../node_modules/@mui/x-data-grid/components/containers/GridOverlay.js","../../../node_modules/@mui/x-data-grid/components/containers/GridRootStyles.js","../../../node_modules/@mui/x-data-grid/components/containers/GridRoot.js","../../../node_modules/@mui/x-data-grid/components/menu/GridMenu.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenuSlots.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenu.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenuContainer.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuColumnsItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuFilterItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuHideItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuManageItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuSortItem.js","../../../node_modules/@mui/x-data-grid/components/panel/GridColumnsPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelContent.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelFooter.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelHeader.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelWrapper.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterForm.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputBoolean.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputDate.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleValue.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputSingleSelect.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputValue.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/filterPanelUtils.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExport.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExportContainer.js","../../../node_modules/@mui/x-data-grid/constants/envConstants.js","../../../node_modules/@mui/x-data-grid/constants/gridClasses.js","../../../node_modules/@mui/x-data-grid/constants/gridDetailPanelToggleField.js","../../../node_modules/@mui/x-data-grid/constants/localeTextConstants.js","../../../node_modules/@mui/x-data-grid/context/GridContextProvider.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/columnMenuSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/density/densitySelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/gridEditingSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterState.js","../../../node_modules/@mui/x-data-grid/utils/getPublicApiRef.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/focus/gridFocusStateSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/headerFiltering/gridHeaderFilteringSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelsValue.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/gridRowSelectionSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsMetaSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridParamsApi.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/gridVirtualizationSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualScroller.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualization.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useFirstRender.js","../../../node_modules/@mui/x-data-grid/utils/cleanupTracking/TimerBasedCleanupTracking.js","../../../node_modules/@mui/x-data-grid/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridApiEventHandler.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridApiMethod.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridAriaAttributes.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridLogger.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridPrivateApiContext.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridVisibleRows.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useLazyRef.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useOnMount.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useTimeout.js","../../../node_modules/@mui/x-data-grid/material/icons/index.js","../../../node_modules/@mui/x-data-grid/models/gridColumnGrouping.js","../../../node_modules/@mui/x-data-grid/models/gridEditRowModel.js","../../../node_modules/@mui/x-data-grid/models/gridFilterItem.js","../../../node_modules/@mui/x-data-grid/models/params/gridEditCellParams.js","../../../node_modules/@mui/x-data-grid/models/params/gridRowParams.js","../../../node_modules/reselect/es/index.js","../../../node_modules/@mui/x-data-grid/utils/createSelector.js","../../../node_modules/@mui/x-data-grid/utils/domUtils.js","../../../node_modules/@mui/x-data-grid/utils/fastMemo.js","../../../node_modules/@mui/x-data-grid/utils/fastObjectShallowCompare.js","../../../node_modules/@mui/x-data-grid/utils/keyboardUtils.js","../../../node_modules/@mui/x-data-grid/utils/utils.js","../../../node_modules/@mui/x-data-grid/utils/warning.js","../../../node_modules/reselect/es/defaultMemoize.js"],"sourcesContent":["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.variant === 'rounded' && {\n    borderRadius: (theme.vars || theme).shape.borderRadius\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 2s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 2s linear 0.5s infinite;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${0},\n          transparent\n        );\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, (theme.vars || theme).palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n      animation = 'pulse',\n      className,\n      component = 'span',\n      height,\n      style,\n      variant = 'text',\n      width\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","'use client';\n\n// @inheritedComponent IconButton\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"edge\", \"size\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { alpha, darken, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled'],\n    thumb: ['thumb'],\n    track: ['track'],\n    input: ['input']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst SwitchRoot = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: -8\n}, ownerState.edge === 'end' && {\n  marginRight: -8\n}, ownerState.size === 'small' && {\n  width: 40,\n  height: 24,\n  padding: 7,\n  [`& .${switchClasses.thumb}`]: {\n    width: 16,\n    height: 16\n  },\n  [`& .${switchClasses.switchBase}`]: {\n    padding: 4,\n    [`&.${switchClasses.checked}`]: {\n      transform: 'translateX(16px)'\n    }\n  }\n}));\nconst SwitchSwitchBase = styled(SwitchBase, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.switchBase, {\n      [`& .${switchClasses.input}`]: styles.input\n    }, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.vars ? theme.vars.palette.Switch.defaultColor : `${theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300]}`,\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${switchClasses.checked}`]: {\n    transform: 'translateX(20px)'\n  },\n  [`&.${switchClasses.disabled}`]: {\n    color: theme.vars ? theme.vars.palette.Switch.defaultDisabledColor : `${theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]}`\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.${switchClasses.disabled} + .${switchClasses.track}`]: {\n    opacity: theme.vars ? theme.vars.opacity.switchTrackDisabled : `${theme.palette.mode === 'light' ? 0.12 : 0.2}`\n  },\n  [`& .${switchClasses.input}`]: {\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${switchClasses.checked}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main,\n    '&:hover': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${switchClasses.disabled}`]: {\n      color: theme.vars ? theme.vars.palette.Switch[`${ownerState.color}DisabledColor`] : `${theme.palette.mode === 'light' ? lighten(theme.palette[ownerState.color].main, 0.62) : darken(theme.palette[ownerState.color].main, 0.55)}`\n    }\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].main\n  }\n}));\nconst SwitchTrack = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Track',\n  overridesResolver: (props, styles) => styles.track\n})(({\n  theme\n}) => ({\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.vars ? theme.vars.palette.common.onBackground : `${theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white}`,\n  opacity: theme.vars ? theme.vars.opacity.switchTrack : `${theme.palette.mode === 'light' ? 0.38 : 0.3}`\n}));\nconst SwitchThumb = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Thumb',\n  overridesResolver: (props, styles) => styles.thumb\n})(({\n  theme\n}) => ({\n  boxShadow: (theme.vars || theme).shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n  const {\n      className,\n      color = 'primary',\n      edge = false,\n      size = 'medium',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const icon = /*#__PURE__*/_jsx(SwitchThumb, {\n    className: classes.thumb,\n    ownerState: ownerState\n  });\n  return /*#__PURE__*/_jsxs(SwitchRoot, {\n    className: clsx(classes.root, className),\n    sx: sx,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(SwitchSwitchBase, _extends({\n      type: \"checkbox\",\n      icon: icon,\n      checkedIcon: icon,\n      ref: ref,\n      ownerState: ownerState\n    }, other, {\n      classes: _extends({}, classes, {\n        root: classes.switchBase\n      })\n    })), /*#__PURE__*/_jsx(SwitchTrack, {\n      className: classes.track,\n      ownerState: ownerState\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSwitchUtilityClass(slot) {\n  return generateUtilityClass('MuiSwitch', slot);\n}\nconst switchClasses = generateUtilityClasses('MuiSwitch', ['root', 'edgeStart', 'edgeEnd', 'switchBase', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium', 'checked', 'disabled', 'input', 'thumb', 'track']);\nexport default switchClasses;","import * as React from 'react';\nimport { localStorageAvailable } from '../../utils/utils';\nimport { useGridApiMethod } from '../utils';\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\nconst noop = () => {};\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI: Log level ${logLevel} not recognized.`);\n  }\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n    return loggerObj;\n  }, {});\n  return logger;\n}\nexport const useGridLoggerFactory = (apiRef, props) => {\n  const getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n  useGridApiMethod(apiRef, {\n    getLogger\n  }, 'private');\n};","export class Store {\n  static create(value) {\n    return new Store(value);\n  }\n  constructor(_value) {\n    this.value = void 0;\n    this.listeners = void 0;\n    this.subscribe = fn => {\n      this.listeners.add(fn);\n      return () => {\n        this.listeners.delete(fn);\n      };\n    };\n    this.getSnapshot = () => {\n      return this.value;\n    };\n    this.update = value => {\n      this.value = value;\n      this.listeners.forEach(l => l(value));\n    };\n    this.value = _value;\n    this.listeners = new Set();\n  }\n}","// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  constructor() {\n    this.maxListeners = 20;\n    this.warnOnce = false;\n    this.events = {};\n  }\n  on(eventName, listener, options = {}) {\n    let collection = this.events[eventName];\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`].join('\\n'));\n      }\n    }\n  }\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n  removeAllListeners() {\n    this.events = {};\n  }\n  emit(eventName, ...args) {\n    const collection = this.events[eventName];\n    if (!collection) {\n      return;\n    }\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener(...args) {\n      that.removeListener(eventName, oneTimeListener);\n      listener.apply(that, args);\n    });\n  }\n}","import * as React from 'react';\nimport { Store } from '../../utils/Store';\nimport { useGridApiMethod } from '../utils/useGridApiMethod';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { EventManager } from '../../utils/EventManager';\nconst SYMBOL_API_PRIVATE = Symbol('mui.api_private');\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\nexport function unwrapPrivateAPI(publicApi) {\n  return publicApi[SYMBOL_API_PRIVATE];\n}\nlet globalId = 0;\nfunction createPrivateAPI(publicApiRef) {\n  var _publicApiRef$current;\n  const existingPrivateApi = (_publicApiRef$current = publicApiRef.current) == null ? void 0 : _publicApiRef$current[SYMBOL_API_PRIVATE];\n  if (existingPrivateApi) {\n    return existingPrivateApi;\n  }\n  const state = {};\n  const privateApi = {\n    state,\n    store: Store.create(state),\n    instanceId: {\n      id: globalId\n    }\n  };\n  globalId += 1;\n  privateApi.getPublicApi = () => publicApiRef.current;\n  privateApi.register = (visibility, methods) => {\n    Object.keys(methods).forEach(methodName => {\n      const method = methods[methodName];\n      const currentPrivateMethod = privateApi[methodName];\n      if ((currentPrivateMethod == null ? void 0 : currentPrivateMethod.spying) === true) {\n        currentPrivateMethod.target = method;\n      } else {\n        privateApi[methodName] = method;\n      }\n      if (visibility === 'public') {\n        const publicApi = publicApiRef.current;\n        const currentPublicMethod = publicApi[methodName];\n        if ((currentPublicMethod == null ? void 0 : currentPublicMethod.spying) === true) {\n          currentPublicMethod.target = method;\n        } else {\n          publicApi[methodName] = method;\n        }\n      }\n    });\n  };\n  privateApi.register('private', {\n    caches: {},\n    eventManager: new EventManager()\n  });\n  return privateApi;\n}\nfunction createPublicAPI(privateApiRef) {\n  const publicApi = {\n    get state() {\n      return privateApiRef.current.state;\n    },\n    get store() {\n      return privateApiRef.current.store;\n    },\n    get instanceId() {\n      return privateApiRef.current.instanceId;\n    },\n    [SYMBOL_API_PRIVATE]: privateApiRef.current\n  };\n  return publicApi;\n}\nexport function useGridApiInitialization(inputApiRef, props) {\n  const publicApiRef = React.useRef();\n  const privateApiRef = React.useRef();\n  if (!privateApiRef.current) {\n    privateApiRef.current = createPrivateAPI(publicApiRef);\n  }\n  if (!publicApiRef.current) {\n    publicApiRef.current = createPublicAPI(privateApiRef);\n  }\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n    const details = props.signature === GridSignature.DataGridPro ? {\n      api: privateApiRef.current.getPublicApi()\n    } : {};\n    privateApiRef.current.eventManager.emit(name, params, event, details);\n  }, [privateApiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    privateApiRef.current.eventManager.on(event, handler, options);\n    const api = privateApiRef.current;\n    return () => {\n      api.eventManager.removeListener(event, handler);\n    };\n  }, [privateApiRef]);\n  useGridApiMethod(privateApiRef, {\n    subscribeEvent,\n    publishEvent\n  }, 'public');\n  React.useImperativeHandle(inputApiRef, () => publicApiRef.current, [publicApiRef]);\n  React.useEffect(() => {\n    const api = privateApiRef.current;\n    return () => {\n      api.publishEvent('unmount');\n    };\n  }, [privateApiRef]);\n  return privateApiRef;\n}","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : String(i);\n}","import _typeof from \"./typeof.js\";\nexport default function toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.requestPipeProcessorsApplication` is called for the given group.\n */\nexport const useGridPipeProcessing = apiRef => {\n  const processorsCache = React.useRef({});\n  const isRunning = React.useRef(false);\n  const runAppliers = React.useCallback(groupCache => {\n    if (isRunning.current || !groupCache) {\n      return;\n    }\n    isRunning.current = true;\n    Object.values(groupCache.appliers).forEach(callback => {\n      callback();\n    });\n    isRunning.current = false;\n  }, []);\n  const registerPipeProcessor = React.useCallback((group, id, processor) => {\n    if (!processorsCache.current[group]) {\n      processorsCache.current[group] = {\n        processors: new Map(),\n        appliers: {}\n      };\n    }\n    const groupCache = processorsCache.current[group];\n    const oldProcessor = groupCache.processors.get(id);\n    if (oldProcessor !== processor) {\n      groupCache.processors.set(id, processor);\n      runAppliers(groupCache);\n    }\n    return () => {\n      processorsCache.current[group].processors.set(id, null);\n    };\n  }, [runAppliers]);\n  const registerPipeApplier = React.useCallback((group, id, applier) => {\n    if (!processorsCache.current[group]) {\n      processorsCache.current[group] = {\n        processors: new Map(),\n        appliers: {}\n      };\n    }\n    processorsCache.current[group].appliers[id] = applier;\n    return () => {\n      const _appliers = processorsCache.current[group].appliers,\n        otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n      processorsCache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  const requestPipeProcessorsApplication = React.useCallback(group => {\n    const groupCache = processorsCache.current[group];\n    runAppliers(groupCache);\n  }, [runAppliers]);\n  const applyPipeProcessors = React.useCallback((...args) => {\n    const [group, value, context] = args;\n    if (!processorsCache.current[group]) {\n      return value;\n    }\n    const preProcessors = Array.from(processorsCache.current[group].processors.values());\n    return preProcessors.reduce((acc, preProcessor) => {\n      if (!preProcessor) {\n        return acc;\n      }\n      return preProcessor(acc, context);\n    }, value);\n  }, []);\n  const preProcessingPrivateApi = {\n    registerPipeProcessor,\n    registerPipeApplier,\n    requestPipeProcessorsApplication\n  };\n  const preProcessingPublicApi = {\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingPrivateApi, 'private');\n  useGridApiMethod(apiRef, preProcessingPublicApi, 'public');\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport const GRID_DEFAULT_STRATEGY = 'none';\nexport const GRID_STRATEGIES_PROCESSORS = {\n  rowTreeCreation: 'rowTree',\n  filtering: 'rowTree',\n  sorting: 'rowTree',\n  visibleRowsLookupCreation: 'rowTree'\n};\n/**\n * Implements a variant of the Strategy Pattern (see https://en.wikipedia.org/wiki/Strategy_pattern)\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic that must only be applied if the right strategy is active.\n * For instance, the row grouping plugin has a custom filtering algorithm.\n * This algorithm must be applied by the filtering plugin if the row grouping is the current way of grouping rows,\n * but not if the tree data is the current way of grouping rows.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterStrategyProcessor` to register their processor.\n *   When the processor of the active strategy changes, it will fire `\"activeStrategyProcessorChange\"` to re-apply the processor.\n *\n * - `apiRef.current.setStrategyAvailability` to tell if their strategy can be used.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to apply the custom logic of the current strategy must use:\n *\n * - `apiRef.current.applyStrategyProcessor` to run the processor of the active strategy for a given processor name.\n *\n * - the \"strategyAvailabilityChange\" event to update something when the active strategy changes.\n *    Warning: Be careful not to apply the processor several times.\n *    For instance \"rowsSet\" is fired by `useGridRows` whenever the active strategy changes.\n *    So listening to both would most likely run your logic twice.\n *\n * - The \"activeStrategyProcessorChange\" event to update something when the processor of the active strategy changes.\n *\n * =====================================================================================================================\n *\n * Each processor name is part of a strategy group which can only have one active strategy at the time.\n * For now, there is only one strategy group named `rowTree` which customize\n * - row tree creation algorithm.\n * - sorting algorithm.\n * - filtering algorithm.\n */\nexport const useGridStrategyProcessing = apiRef => {\n  const availableStrategies = React.useRef(new Map());\n  const strategiesCache = React.useRef({});\n  const registerStrategyProcessor = React.useCallback((strategyName, processorName, processor) => {\n    const cleanup = () => {\n      const _ref = strategiesCache.current[processorName],\n        otherProcessors = _objectWithoutPropertiesLoose(_ref, [strategyName].map(_toPropertyKey));\n      strategiesCache.current[processorName] = otherProcessors;\n    };\n    if (!strategiesCache.current[processorName]) {\n      strategiesCache.current[processorName] = {};\n    }\n    const groupPreProcessors = strategiesCache.current[processorName];\n    const previousProcessor = groupPreProcessors[strategyName];\n    groupPreProcessors[strategyName] = processor;\n    if (!previousProcessor || previousProcessor === processor) {\n      return cleanup;\n    }\n    if (strategyName === apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName])) {\n      apiRef.current.publishEvent('activeStrategyProcessorChange', processorName);\n    }\n    return cleanup;\n  }, [apiRef]);\n  const applyStrategyProcessor = React.useCallback((processorName, params) => {\n    const activeStrategy = apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName]);\n    if (activeStrategy == null) {\n      throw new Error(\"Can't apply a strategy processor before defining an active strategy\");\n    }\n    const groupCache = strategiesCache.current[processorName];\n    if (!groupCache || !groupCache[activeStrategy]) {\n      throw new Error(`No processor found for processor \"${processorName}\" on strategy \"${activeStrategy}\"`);\n    }\n    const processor = groupCache[activeStrategy];\n    return processor(params);\n  }, [apiRef]);\n  const getActiveStrategy = React.useCallback(strategyGroup => {\n    var _availableStrategyEnt;\n    const strategyEntries = Array.from(availableStrategies.current.entries());\n    const availableStrategyEntry = strategyEntries.find(([, strategy]) => {\n      if (strategy.group !== strategyGroup) {\n        return false;\n      }\n      return strategy.isAvailable();\n    });\n    return (_availableStrategyEnt = availableStrategyEntry == null ? void 0 : availableStrategyEntry[0]) != null ? _availableStrategyEnt : GRID_DEFAULT_STRATEGY;\n  }, []);\n  const setStrategyAvailability = React.useCallback((strategyGroup, strategyName, isAvailable) => {\n    availableStrategies.current.set(strategyName, {\n      group: strategyGroup,\n      isAvailable\n    });\n    apiRef.current.publishEvent('strategyAvailabilityChange');\n  }, [apiRef]);\n  const strategyProcessingApi = {\n    registerStrategyProcessor,\n    applyStrategyProcessor,\n    getActiveStrategy,\n    setStrategyAvailability\n  };\n  useGridApiMethod(apiRef, strategyProcessingApi, 'private');\n};","import { useGridLoggerFactory } from './useGridLoggerFactory';\nimport { useGridApiInitialization } from './useGridApiInitialization';\nimport { useGridLocaleText } from './useGridLocaleText';\nimport { useGridPipeProcessing } from './pipeProcessing';\nimport { useGridStrategyProcessing } from './strategyProcessing';\nimport { useGridStateInitialization } from './useGridStateInitialization';\n\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\nexport const useGridInitialization = (inputApiRef, props) => {\n  const privateApiRef = useGridApiInitialization(inputApiRef, props);\n  useGridLoggerFactory(privateApiRef, props);\n  useGridStateInitialization(privateApiRef, props);\n  useGridPipeProcessing(privateApiRef);\n  useGridStrategyProcessing(privateApiRef);\n  useGridLocaleText(privateApiRef, props);\n  privateApiRef.current.register('private', {\n    rootProps: props\n  });\n  return privateApiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../utils';\nimport { isFunction } from '../../utils/utils';\nexport const useGridStateInitialization = (apiRef, props) => {\n  const controlStateMapRef = React.useRef({});\n  const [, rawForceUpdate] = React.useState();\n  const registerControlState = React.useCallback(controlStateItem => {\n    controlStateMapRef.current[controlStateItem.stateId] = controlStateItem;\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n    let ignoreSetState = false;\n\n    // Apply the control state constraints\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (newSubState === oldSubState) {\n        return;\n      }\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      });\n\n      // The state is controlled, the prop should always win\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n      if (apiRef.current.publishEvent) {\n        apiRef.current.publishEvent('stateChange', newState);\n      }\n      apiRef.current.store.update(newState);\n    }\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (controlState.propOnChange && hasPropChanged) {\n        const details = props.signature === GridSignature.DataGridPro ? {\n          api: apiRef.current,\n          reason\n        } : {\n          reason\n        };\n        controlState.propOnChange(model, details);\n      }\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n    return !ignoreSetState;\n  }, [apiRef, props.signature]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return _extends({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const forceUpdate = React.useCallback(() => rawForceUpdate(() => apiRef.current.state), [apiRef]);\n  const publicStateApi = {\n    setState,\n    forceUpdate\n  };\n  const privateStateApi = {\n    updateControlState,\n    registerControlState\n  };\n  useGridApiMethod(apiRef, publicStateApi, 'public');\n  useGridApiMethod(apiRef, privateStateApi, 'private');\n};","import * as React from 'react';\nexport const useGridLocaleText = (apiRef, props) => {\n  const getLocaleText = React.useCallback(key => {\n    if (props.localeText[key] == null) {\n      throw new Error(`Missing translation for key ${key}.`);\n    }\n    return props.localeText[key];\n  }, [props.localeText]);\n  apiRef.current.register('public', {\n    getLocaleText\n  });\n};","import * as React from 'react';\nexport const useGridInitializeState = (initializer, privateApiRef, props) => {\n  const isInitialized = React.useRef(false);\n  if (!isInitialized.current) {\n    privateApiRef.current.state = initializer(privateApiRef.current.state, props, privateApiRef);\n    isInitialized.current = true;\n  }\n};","import { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../../colDef';\nimport { buildWarning } from '../../../../utils/warning';\nfunction sanitizeCellValue(value, delimiterCharacter) {\n  if (typeof value === 'string') {\n    // Make sure value containing delimiter or line break won't be split into multiple rows\n    if ([delimiterCharacter, '\\n', '\\r', '\"'].some(delimiter => value.includes(delimiter))) {\n      return `\"${value.replace(/\"/g, '\"\"')}\"`;\n    }\n    return value;\n  }\n  return value;\n}\nexport const serializeCellValue = (cellParams, options) => {\n  const {\n    delimiterCharacter,\n    ignoreValueFormatter\n  } = options;\n  let value;\n  if (ignoreValueFormatter) {\n    var _cellParams$value2;\n    const columnType = cellParams.colDef.type;\n    if (columnType === 'number') {\n      value = String(cellParams.value);\n    } else if (columnType === 'date' || columnType === 'dateTime') {\n      var _cellParams$value;\n      value = (_cellParams$value = cellParams.value) == null ? void 0 : _cellParams$value.toISOString();\n    } else if (typeof ((_cellParams$value2 = cellParams.value) == null ? void 0 : _cellParams$value2.toString) === 'function') {\n      value = cellParams.value.toString();\n    } else {\n      value = cellParams.value;\n    }\n  } else {\n    value = cellParams.formattedValue;\n  }\n  return sanitizeCellValue(value, delimiterCharacter);\n};\nconst objectFormattedValueWarning = buildWarning(['MUI: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\nclass CSVRow {\n  constructor(options) {\n    this.options = void 0;\n    this.rowString = '';\n    this.isEmpty = true;\n    this.options = options;\n  }\n  addValue(value) {\n    if (!this.isEmpty) {\n      this.rowString += this.options.delimiterCharacter;\n    }\n    if (value === null || value === undefined) {\n      this.rowString += '';\n    } else if (typeof this.options.sanitizeCellValue === 'function') {\n      this.rowString += this.options.sanitizeCellValue(value, this.options.delimiterCharacter);\n    } else {\n      this.rowString += value;\n    }\n    this.isEmpty = false;\n  }\n  getRowString() {\n    return this.rowString;\n  }\n}\nconst serializeRow = ({\n  id,\n  columns,\n  getCellParams,\n  delimiterCharacter,\n  ignoreValueFormatter\n}) => {\n  const row = new CSVRow({\n    delimiterCharacter\n  });\n  columns.forEach(column => {\n    const cellParams = getCellParams(id, column.field);\n    if (process.env.NODE_ENV !== 'production') {\n      if (String(cellParams.formattedValue) === '[object Object]') {\n        objectFormattedValueWarning();\n      }\n    }\n    row.addValue(serializeCellValue(cellParams, {\n      delimiterCharacter,\n      ignoreValueFormatter\n    }));\n  });\n  return row.getRowString();\n};\nexport function buildCSV(options) {\n  const {\n    columns,\n    rowIds,\n    delimiterCharacter,\n    includeHeaders,\n    includeColumnGroupsHeaders,\n    ignoreValueFormatter,\n    apiRef\n  } = options;\n  const CSVBody = rowIds.reduce((acc, id) => `${acc}${serializeRow({\n    id,\n    columns,\n    getCellParams: apiRef.current.getCellParams,\n    delimiterCharacter,\n    ignoreValueFormatter\n  })}\\r\\n`, '').trim();\n  if (!includeHeaders) {\n    return CSVBody;\n  }\n  const filteredColumns = columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field);\n  const headerRows = [];\n  if (includeColumnGroupsHeaders) {\n    const columnGroupLookup = apiRef.current.unstable_getAllGroupDetails();\n    let maxColumnGroupsDepth = 0;\n    const columnGroupPathsLookup = filteredColumns.reduce((acc, column) => {\n      const columnGroupPath = apiRef.current.unstable_getColumnGroupPath(column.field);\n      acc[column.field] = columnGroupPath;\n      maxColumnGroupsDepth = Math.max(maxColumnGroupsDepth, columnGroupPath.length);\n      return acc;\n    }, {});\n    for (let i = 0; i < maxColumnGroupsDepth; i += 1) {\n      const headerGroupRow = new CSVRow({\n        delimiterCharacter,\n        sanitizeCellValue\n      });\n      headerRows.push(headerGroupRow);\n      filteredColumns.forEach(column => {\n        const columnGroupId = (columnGroupPathsLookup[column.field] || [])[i];\n        const columnGroup = columnGroupLookup[columnGroupId];\n        headerGroupRow.addValue(columnGroup ? columnGroup.headerName || columnGroup.groupId : '');\n      });\n    }\n  }\n  const mainHeaderRow = new CSVRow({\n    delimiterCharacter,\n    sanitizeCellValue\n  });\n  filteredColumns.forEach(column => {\n    mainHeaderRow.addValue(column.headerName || column.field);\n  });\n  headerRows.push(mainHeaderRow);\n  const CSVHead = `${headerRows.map(row => row.getRowString()).join('\\r\\n')}\\r\\n`;\n  return `${CSVHead}${CSVBody}`.trim();\n}","import * as React from 'react';\nimport { useGridApiOptionHandler, useGridNativeEventListener } from '../../utils';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { serializeCellValue } from '../export/serializers/csvSerializer';\nfunction writeToClipboardPolyfill(data) {\n  const span = document.createElement('span');\n  span.style.whiteSpace = 'pre';\n  span.style.userSelect = 'all';\n  span.style.opacity = '0px';\n  span.textContent = data;\n  document.body.appendChild(span);\n  const range = document.createRange();\n  range.selectNode(span);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(span);\n  }\n}\nfunction copyToClipboard(data) {\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(data).catch(() => {\n      writeToClipboardPolyfill(data);\n    });\n  } else {\n    writeToClipboardPolyfill(data);\n  }\n}\nfunction hasNativeSelection(element) {\n  var _window$getSelection;\n  // When getSelection is called on an <iframe> that is not displayed Firefox will return null.\n  if ((_window$getSelection = window.getSelection()) != null && _window$getSelection.toString()) {\n    return true;\n  }\n\n  // window.getSelection() returns an empty string in Firefox for selections inside a form element.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=85686.\n  // Instead, we can use element.selectionStart that is only defined on form elements.\n  if (element && (element.selectionEnd || 0) - (element.selectionStart || 0) > 0) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @requires useGridCsvExport (method)\n * @requires useGridSelection (method)\n */\nexport const useGridClipboard = (apiRef, props) => {\n  const ignoreValueFormatterProp = props.unstable_ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp == null ? void 0 : ignoreValueFormatterProp.clipboardExport : ignoreValueFormatterProp) || false;\n  const clipboardCopyCellDelimiter = props.clipboardCopyCellDelimiter;\n  const handleCopy = React.useCallback(event => {\n    if (!((event.ctrlKey || event.metaKey) && event.key === 'c')) {\n      return;\n    }\n\n    // Do nothing if there's a native selection\n    if (hasNativeSelection(event.target)) {\n      return;\n    }\n    let textToCopy = '';\n    const selectedRows = apiRef.current.getSelectedRows();\n    if (selectedRows.size > 0) {\n      textToCopy = apiRef.current.getDataAsCsv({\n        includeHeaders: false,\n        // TODO: make it configurable\n        delimiter: clipboardCopyCellDelimiter\n      });\n    } else {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell) {\n        const cellParams = apiRef.current.getCellParams(focusedCell.id, focusedCell.field);\n        textToCopy = serializeCellValue(cellParams, {\n          delimiterCharacter: clipboardCopyCellDelimiter,\n          ignoreValueFormatter\n        });\n      }\n    }\n    textToCopy = apiRef.current.unstable_applyPipeProcessors('clipboardCopy', textToCopy);\n    if (textToCopy) {\n      copyToClipboard(textToCopy);\n      apiRef.current.publishEvent('clipboardCopy', textToCopy);\n    }\n  }, [apiRef, ignoreValueFormatter, clipboardCopyCellDelimiter]);\n  useGridNativeEventListener(apiRef, apiRef.current.rootElementRef, 'keydown', handleCopy);\n  useGridApiOptionHandler(apiRef, 'clipboardCopy', props.onClipboardCopy);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { gridColumnMenuSelector } from './columnMenuSelector';\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from '../columns/gridColumnsSelector';\nexport const columnMenuStateInitializer = state => _extends({}, state, {\n  columnMenu: {\n    open: false\n  }\n});\n\n/**\n * @requires useGridColumnResize (event)\n * @requires useGridInfiniteLoader (event)\n */\nexport const useGridColumnMenu = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridColumnMenu');\n\n  /**\n   * API METHODS\n   */\n  const showColumnMenu = React.useCallback(field => {\n    const shouldUpdate = apiRef.current.setState(state => {\n      if (state.columnMenu.open && state.columnMenu.field === field) {\n        return state;\n      }\n      logger.debug('Opening Column Menu');\n      return _extends({}, state, {\n        columnMenu: {\n          open: true,\n          field\n        }\n      });\n    });\n    if (shouldUpdate) {\n      apiRef.current.hidePreferences();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const hideColumnMenu = React.useCallback(() => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    if (columnMenuState.field) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef);\n      let fieldToFocus = columnMenuState.field;\n\n      // If the column was removed from the grid, we need to find the closest visible field\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      }\n\n      // If the field to focus is hidden, we need to find the closest visible field\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n      apiRef.current.setColumnHeaderFocus(fieldToFocus);\n    }\n    const shouldUpdate = apiRef.current.setState(state => {\n      if (!state.columnMenu.open && state.columnMenu.field === undefined) {\n        return state;\n      }\n      logger.debug('Hiding Column Menu');\n      return _extends({}, state, {\n        columnMenu: _extends({}, state.columnMenu, {\n          open: false,\n          field: undefined\n        })\n      });\n    });\n    if (shouldUpdate) {\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const toggleColumnMenu = React.useCallback(field => {\n    logger.debug('Toggle Column Menu');\n    const columnMenu = gridColumnMenuSelector(apiRef.current.state);\n    if (!columnMenu.open || columnMenu.field !== field) {\n      showColumnMenu(field);\n    } else {\n      hideColumnMenu();\n    }\n  }, [apiRef, logger, showColumnMenu, hideColumnMenu]);\n  const columnMenuApi = {\n    showColumnMenu,\n    hideColumnMenu,\n    toggleColumnMenu\n  };\n  useGridApiMethod(apiRef, columnMenuApi, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStart', hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerWheel', apiRef.current.hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerTouchMove', apiRef.current.hideColumnMenu);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnFieldsSelector, gridColumnDefinitionsSelector, gridColumnLookupSelector, gridColumnsStateSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from './gridColumnsSelector';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridRegisterPipeProcessor, useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { hydrateColumnsWidth, createColumnsState, mergeColumnsState, COLUMNS_DIMENSION_PROPERTIES } from './gridColumnsUtils';\nimport { GridPreferencePanelsValue } from '../preferencesPanel';\nimport { getGridDefaultColumnTypes } from '../../../colDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultColumnTypes = getGridDefaultColumnTypes();\nexport const columnsStateInitializer = (state, props, apiRef) => {\n  var _props$initialState, _ref, _props$columnVisibili, _props$initialState2;\n  const columnsState = createColumnsState({\n    apiRef,\n    columnTypes: defaultColumnTypes,\n    columnsToUpsert: props.columns,\n    initialState: (_props$initialState = props.initialState) == null ? void 0 : _props$initialState.columns,\n    columnVisibilityModel: (_ref = (_props$columnVisibili = props.columnVisibilityModel) != null ? _props$columnVisibili : (_props$initialState2 = props.initialState) == null || (_props$initialState2 = _props$initialState2.columns) == null ? void 0 : _props$initialState2.columnVisibilityModel) != null ? _ref : {},\n    keepOnlyColumnsToUpsert: true\n  });\n  return _extends({}, state, {\n    columns: columnsState\n  });\n};\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridDimensions (method, event) - can be after\n * TODO: Impossible priority - useGridParamsApi also needs to be after useGridColumns\n */\nexport function useGridColumns(apiRef, props) {\n  var _props$initialState4, _props$slotProps2;\n  const logger = useGridLogger(apiRef, 'useGridColumns');\n  const columnTypes = defaultColumnTypes;\n  const previousColumnsProp = React.useRef(props.columns);\n  const previousColumnTypesProp = React.useRef(columnTypes);\n  apiRef.current.registerControlState({\n    stateId: 'visibleColumns',\n    propModel: props.columnVisibilityModel,\n    propOnChange: props.onColumnVisibilityModelChange,\n    stateSelector: gridColumnVisibilityModelSelector,\n    changeEvent: 'columnVisibilityModelChange'\n  });\n  const setGridColumnsState = React.useCallback(columnsState => {\n    logger.debug('Updating columns state.');\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n  }, [logger, apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const getColumn = React.useCallback(field => gridColumnLookupSelector(apiRef)[field], [apiRef]);\n  const getAllColumns = React.useCallback(() => gridColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getVisibleColumns = React.useCallback(() => gridVisibleColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getColumnIndex = React.useCallback((field, useVisibleColumns = true) => {\n    const columns = useVisibleColumns ? gridVisibleColumnDefinitionsSelector(apiRef) : gridColumnDefinitionsSelector(apiRef);\n    return columns.findIndex(col => col.field === field);\n  }, [apiRef]);\n  const getColumnPosition = React.useCallback(field => {\n    const index = getColumnIndex(field);\n    return gridColumnPositionsSelector(apiRef)[index];\n  }, [apiRef, getColumnIndex]);\n  const setColumnVisibilityModel = React.useCallback(model => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    if (currentModel !== model) {\n      apiRef.current.setState(state => _extends({}, state, {\n        columns: createColumnsState({\n          apiRef,\n          columnTypes,\n          columnsToUpsert: [],\n          initialState: undefined,\n          columnVisibilityModel: model,\n          keepOnlyColumnsToUpsert: false\n        })\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, columnTypes]);\n  const updateColumns = React.useCallback(columns => {\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: columns,\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, setGridColumnsState, columnTypes]);\n  const setColumnVisibility = React.useCallback((field, isVisible) => {\n    var _columnVisibilityMode;\n    const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n    const isCurrentlyVisible = (_columnVisibilityMode = columnVisibilityModel[field]) != null ? _columnVisibilityMode : true;\n    if (isVisible !== isCurrentlyVisible) {\n      const newModel = _extends({}, columnVisibilityModel, {\n        [field]: isVisible\n      });\n      apiRef.current.setColumnVisibilityModel(newModel);\n    }\n  }, [apiRef]);\n  const getColumnIndexRelativeToVisibleColumns = React.useCallback(field => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    return allColumns.findIndex(col => col === field);\n  }, [apiRef]);\n  const setColumnIndex = React.useCallback((field, targetIndexPosition) => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    const oldIndexPosition = getColumnIndexRelativeToVisibleColumns(field);\n    if (oldIndexPosition === targetIndexPosition) {\n      return;\n    }\n    logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);\n    const updatedColumns = [...allColumns];\n    const fieldRemoved = updatedColumns.splice(oldIndexPosition, 1)[0];\n    updatedColumns.splice(targetIndexPosition, 0, fieldRemoved);\n    setGridColumnsState(_extends({}, gridColumnsStateSelector(apiRef.current.state), {\n      orderedFields: updatedColumns\n    }));\n    const params = {\n      column: apiRef.current.getColumn(field),\n      targetIndex: apiRef.current.getColumnIndexRelativeToVisibleColumns(field),\n      oldIndex: oldIndexPosition\n    };\n    apiRef.current.publishEvent('columnIndexChange', params);\n  }, [apiRef, logger, setGridColumnsState, getColumnIndexRelativeToVisibleColumns]);\n  const setColumnWidth = React.useCallback((field, width) => {\n    var _apiRef$current$getRo, _apiRef$current$getRo2;\n    logger.debug(`Updating column ${field} width to ${width}`);\n    const columnsState = gridColumnsStateSelector(apiRef.current.state);\n    const column = columnsState.lookup[field];\n    const newColumn = _extends({}, column, {\n      width,\n      hasBeenResized: true\n    });\n    setGridColumnsState(hydrateColumnsWidth(_extends({}, columnsState, {\n      lookup: _extends({}, columnsState.lookup, {\n        [field]: newColumn\n      })\n    }), (_apiRef$current$getRo = (_apiRef$current$getRo2 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo2.viewportInnerSize.width) != null ? _apiRef$current$getRo : 0));\n    apiRef.current.publishEvent('columnWidthChange', {\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: newColumn,\n      width\n    });\n  }, [apiRef, logger, setGridColumnsState]);\n  const columnApi = {\n    getColumn,\n    getAllColumns,\n    getColumnIndex,\n    getColumnPosition,\n    getVisibleColumns,\n    getColumnIndexRelativeToVisibleColumns,\n    updateColumns,\n    setColumnVisibilityModel,\n    setColumnVisibility,\n    setColumnWidth\n  };\n  const columnReorderApi = {\n    setColumnIndex\n  };\n  useGridApiMethod(apiRef, columnApi, 'public');\n  useGridApiMethod(apiRef, columnReorderApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState$c, _props$initialState3;\n    const columnsStateToExport = {};\n    const columnVisibilityModelToExport = gridColumnVisibilityModelSelector(apiRef);\n    const shouldExportColumnVisibilityModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.columnVisibilityModel != null ||\n    // Always export if the model has been initialized\n    // TODO v6 Do a nullish check instead to export even if the initial model equals \"{}\"\n    Object.keys((_props$initialState$c = (_props$initialState3 = props.initialState) == null || (_props$initialState3 = _props$initialState3.columns) == null ? void 0 : _props$initialState3.columnVisibilityModel) != null ? _props$initialState$c : {}).length > 0 ||\n    // Always export if the model is not empty\n    Object.keys(columnVisibilityModelToExport).length > 0;\n    if (shouldExportColumnVisibilityModel) {\n      columnsStateToExport.columnVisibilityModel = columnVisibilityModelToExport;\n    }\n    columnsStateToExport.orderedFields = gridColumnFieldsSelector(apiRef);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const dimensions = {};\n    columns.forEach(colDef => {\n      if (colDef.hasBeenResized) {\n        const colDefDimensions = {};\n        COLUMNS_DIMENSION_PROPERTIES.forEach(propertyName => {\n          let propertyValue = colDef[propertyName];\n          if (propertyValue === Infinity) {\n            propertyValue = -1;\n          }\n          colDefDimensions[propertyName] = propertyValue;\n        });\n        dimensions[colDef.field] = colDefDimensions;\n      }\n    });\n    if (Object.keys(dimensions).length > 0) {\n      columnsStateToExport.dimensions = dimensions;\n    }\n    return _extends({}, prevState, {\n      columns: columnsStateToExport\n    });\n  }, [apiRef, props.columnVisibilityModel, (_props$initialState4 = props.initialState) == null ? void 0 : _props$initialState4.columns]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n    const columnVisibilityModelToImport = (_context$stateToResto = context.stateToRestore.columns) == null ? void 0 : _context$stateToResto.columnVisibilityModel;\n    const initialState = context.stateToRestore.columns;\n    if (columnVisibilityModelToImport == null && initialState == null) {\n      return params;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: [],\n      initialState,\n      columnVisibilityModel: columnVisibilityModelToImport,\n      keepOnlyColumnsToUpsert: false\n    });\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    if (initialState != null) {\n      apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    }\n    return params;\n  }, [apiRef, columnTypes]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.columns) {\n      var _props$slotProps;\n      const ColumnsPanel = props.slots.columnsPanel;\n      return /*#__PURE__*/_jsx(ColumnsPanel, _extends({}, (_props$slotProps = props.slotProps) == null ? void 0 : _props$slotProps.columnsPanel));\n    }\n    return initialValue;\n  }, [props.slots.columnsPanel, (_props$slotProps2 = props.slotProps) == null ? void 0 : _props$slotProps2.columnsPanel]);\n  const addColumnMenuItems = React.useCallback(columnMenuItems => {\n    if (props.disableColumnSelector) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuColumnsItem'];\n  }, [props.disableColumnSelector]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItems);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      setGridColumnsState(hydrateColumnsWidth(gridColumnsStateSelector(apiRef.current.state), viewportInnerSize.width));\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n\n  /**\n   * APPLIERS\n   */\n  const hydrateColumns = React.useCallback(() => {\n    logger.info(`Columns pipe processing have changed, regenerating the columns`);\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: [],\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, logger, setGridColumnsState, columnTypes]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateColumns', hydrateColumns);\n\n  /**\n   * EFFECTS\n   */\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    logger.info(`GridColumns have changed, new length ${props.columns.length}`);\n    if (previousColumnsProp.current === props.columns && previousColumnTypesProp.current === columnTypes) {\n      return;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      initialState: undefined,\n      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`\n      columnsToUpsert: props.columns,\n      keepOnlyColumnsToUpsert: true\n    });\n    previousColumnsProp.current = props.columns;\n    previousColumnTypesProp.current = columnTypes;\n    setGridColumnsState(columnsState);\n  }, [logger, apiRef, setGridColumnsState, props.columns, columnTypes]);\n  React.useEffect(() => {\n    if (props.columnVisibilityModel !== undefined) {\n      apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel);\n    }\n  }, [apiRef, logger, props.columnVisibilityModel]);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridDensitySelector } from './densitySelector';\nimport { isDeepEqual } from '../../../utils/utils';\nexport const COMPACT_DENSITY_FACTOR = 0.7;\nexport const COMFORTABLE_DENSITY_FACTOR = 1.3;\nconst DENSITY_FACTORS = {\n  compact: COMPACT_DENSITY_FACTOR,\n  comfortable: COMFORTABLE_DENSITY_FACTOR,\n  standard: 1\n};\nexport const densityStateInitializer = (state, props) => _extends({}, state, {\n  density: {\n    value: props.density,\n    factor: DENSITY_FACTORS[props.density]\n  }\n});\nexport const useGridDensity = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useDensity');\n  const setDensity = React.useCallback(newDensity => {\n    logger.debug(`Set grid density to ${newDensity}`);\n    apiRef.current.setState(state => {\n      const currentDensityState = gridDensitySelector(state);\n      const newDensityState = {\n        value: newDensity,\n        factor: DENSITY_FACTORS[newDensity]\n      };\n      if (isDeepEqual(currentDensityState, newDensityState)) {\n        return state;\n      }\n      return _extends({}, state, {\n        density: newDensityState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, apiRef]);\n  React.useEffect(() => {\n    apiRef.current.setDensity(props.density);\n  }, [apiRef, props.density]);\n  const densityApi = {\n    setDensity\n  };\n  useGridApiMethod(apiRef, densityApi, 'public');\n};","import { gridColumnDefinitionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns';\nimport { gridFilteredSortedRowIdsSelector } from '../filter';\nimport { gridPinnedRowsSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\nexport const getColumnsToExport = ({\n  apiRef,\n  options\n}) => {\n  const columns = gridColumnDefinitionsSelector(apiRef);\n  if (options.fields) {\n    return options.fields.reduce((currentColumns, field) => {\n      const column = columns.find(col => col.field === field);\n      if (column) {\n        currentColumns.push(column);\n      }\n      return currentColumns;\n    }, []);\n  }\n  const validColumns = options.allColumns ? columns : gridVisibleColumnDefinitionsSelector(apiRef);\n  return validColumns.filter(column => !column.disableExport);\n};\nexport const defaultGetRowsToExport = ({\n  apiRef\n}) => {\n  var _pinnedRows$top, _pinnedRows$bottom;\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  const rowTree = gridRowTreeSelector(apiRef);\n  const selectedRows = apiRef.current.getSelectedRows();\n  const bodyRows = filteredSortedRowIds.filter(id => rowTree[id].type !== 'footer');\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsIds = (pinnedRows == null || (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.map(row => row.id)) || [];\n  const bottomPinnedRowsIds = (pinnedRows == null || (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.map(row => row.id)) || [];\n  bodyRows.unshift(...topPinnedRowsIds);\n  bodyRows.push(...bottomPinnedRowsIds);\n  if (selectedRows.size > 0) {\n    return bodyRows.filter(id => selectedRows.has(id));\n  }\n  return bodyRows;\n};","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { exportAs } from '../../../utils/exportAs';\nimport { buildCSV } from './serializers/csvSerializer';\nimport { getColumnsToExport, defaultGetRowsToExport } from './utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridCsvExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridCsvExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridCsvExport');\n  const ignoreValueFormatterProp = props.unstable_ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp == null ? void 0 : ignoreValueFormatterProp.csvExport : ignoreValueFormatterProp) || false;\n  const getDataAsCsv = React.useCallback((options = {}) => {\n    var _options$getRowsToExp, _options$includeHeade, _options$includeColum;\n    logger.debug(`Get data as CSV`);\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const getRowsToExport = (_options$getRowsToExp = options.getRowsToExport) != null ? _options$getRowsToExp : defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    return buildCSV({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      delimiterCharacter: options.delimiter || ',',\n      includeHeaders: (_options$includeHeade = options.includeHeaders) != null ? _options$includeHeade : true,\n      includeColumnGroupsHeaders: (_options$includeColum = options.includeColumnGroupsHeaders) != null ? _options$includeColum : true,\n      ignoreValueFormatter,\n      apiRef\n    });\n  }, [logger, apiRef, ignoreValueFormatter]);\n  const exportDataAsCsv = React.useCallback(options => {\n    logger.debug(`Export data as CSV`);\n    const csv = getDataAsCsv(options);\n    const blob = new Blob([options != null && options.utf8WithBom ? new Uint8Array([0xef, 0xbb, 0xbf]) : '', csv], {\n      type: 'text/csv'\n    });\n    exportAs(blob, 'csv', options == null ? void 0 : options.fileName);\n  }, [logger, getDataAsCsv]);\n  const csvExportApi = {\n    getDataAsCsv,\n    exportDataAsCsv\n  };\n  useGridApiMethod(apiRef, csvExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    var _options$csvOptions;\n    if ((_options$csvOptions = options.csvOptions) != null && _options$csvOptions.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridCsvExportMenuItem, {\n        options: options.csvOptions\n      }),\n      componentName: 'csvExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","/**\n * I have hesitated to use https://github.com/eligrey/FileSaver.js.\n * If we get bug reports that this project solves, we should consider using it.\n *\n * Related resources.\n * https://blog.logrocket.com/programmatic-file-downloads-in-the-browser-9a5186298d5c/\n * https://github.com/mbrn/filefy/blob/ec4ed0b7415d93be7158c23029f2ea1fa0b8e2d9/src/core/BaseBuilder.ts\n * https://unpkg.com/browse/@progress/kendo-file-saver@1.0.7/dist/es/save-as.js\n * https://github.com/ag-grid/ag-grid/blob/9565c219b6210aa85fa833c929d0728f9d163a91/community-modules/csv-export/src/csvExport/downloader.ts\n */\n\nexport function exportAs(blob, extension = 'csv', filename = document.title || 'untitled') {\n  const fullName = `${filename}.${extension}`;\n\n  // Test download attribute first\n  // https://github.com/eligrey/FileSaver.js/issues/193\n  if ('download' in HTMLAnchorElement.prototype) {\n    // Create an object URL for the blob object\n    const url = URL.createObjectURL(blob);\n\n    // Create a new anchor element\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fullName;\n\n    // Programmatically trigger a click on the anchor element\n    // Useful if you want the download to happen automatically\n    // Without attaching the anchor element to the DOM\n    a.click();\n\n    // https://github.com/eligrey/FileSaver.js/issues/205\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    });\n    return;\n  }\n  throw new Error('MUI: exportAs not supported');\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridFilteredTopLevelRowCountSelector } from '../filter';\nimport { gridDensityFactorSelector } from '../density';\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPaginationModelSelector } from './gridPaginationSelector';\nimport { calculatePinnedRowsHeight } from '../rows/gridRowsUtils';\nimport { getPageCount, noRowCountInServerMode, defaultPageSize, throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel, getValidPage } from './gridPaginationUtils';\nexport const paginationStateInitializer = (state, props) => {\n  var _props$paginationMode, _props$initialState;\n  const paginationModel = _extends({}, getDefaultGridPaginationModel(props.autoPageSize), (_props$paginationMode = props.paginationModel) != null ? _props$paginationMode : (_props$initialState = props.initialState) == null || (_props$initialState = _props$initialState.pagination) == null ? void 0 : _props$initialState.paginationModel);\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, props.signature);\n  return _extends({}, state, {\n    pagination: {\n      paginationModel\n    }\n  });\n};\nexport const mergeStateWithPaginationModel = (rowCount, signature, paginationModelProp) => paginationState => {\n  var _paginationModelProp$;\n  let paginationModel = paginationState.paginationModel;\n  const pageSize = (_paginationModelProp$ = paginationModelProp == null ? void 0 : paginationModelProp.pageSize) != null ? _paginationModelProp$ : paginationModel.pageSize;\n  const pageCount = getPageCount(rowCount, pageSize);\n  if (paginationModelProp && ((paginationModelProp == null ? void 0 : paginationModelProp.page) !== paginationModel.page || (paginationModelProp == null ? void 0 : paginationModelProp.pageSize) !== paginationModel.pageSize)) {\n    paginationModel = paginationModelProp;\n  }\n  const validPage = getValidPage(paginationModel.page, pageCount);\n  if (validPage !== paginationModel.page) {\n    paginationModel = _extends({}, paginationModel, {\n      page: validPage\n    });\n  }\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, signature);\n  return {\n    paginationModel\n  };\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPagination = (apiRef, props) => {\n  var _props$initialState3;\n  const logger = useGridLogger(apiRef, 'useGridPagination');\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  apiRef.current.registerControlState({\n    stateId: 'pagination',\n    propModel: props.paginationModel,\n    propOnChange: props.onPaginationModelChange,\n    stateSelector: gridPaginationModelSelector,\n    changeEvent: 'paginationModelChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPage = React.useCallback(page => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (page === currentModel.page) {\n      return;\n    }\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setPaginationModel({\n      page,\n      pageSize: currentModel.pageSize\n    });\n  }, [apiRef, logger]);\n  const setPageSize = React.useCallback(pageSize => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (pageSize === currentModel.pageSize) {\n      return;\n    }\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setPaginationModel({\n      pageSize,\n      page: currentModel.page\n    });\n  }, [apiRef, logger]);\n  const setPaginationModel = React.useCallback(paginationModel => {\n    var _props$rowCount;\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (paginationModel === currentModel) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationModel' to\", paginationModel);\n    apiRef.current.updateControlState('pagination', mergeStateWithPaginationModel((_props$rowCount = props.rowCount) != null ? _props$rowCount : visibleTopLevelRowCount, props.signature, paginationModel), 'setPaginationModel');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.rowCount, props.signature, visibleTopLevelRowCount]);\n  const pageApi = {\n    setPage,\n    setPageSize,\n    setPaginationModel\n  };\n  useGridApiMethod(apiRef, pageApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState2;\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const shouldExportPaginationModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationModel` is controlled\n    props.paginationModel != null ||\n    // Always export if the `paginationModel` has been initialized\n    ((_props$initialState2 = props.initialState) == null || (_props$initialState2 = _props$initialState2.pagination) == null ? void 0 : _props$initialState2.paginationModel) != null ||\n    // Export if `page` or `pageSize` is not equal to the default value\n    paginationModel.page !== 0 && paginationModel.pageSize !== defaultPageSize(props.autoPageSize);\n    if (!shouldExportPaginationModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        paginationModel\n      })\n    });\n  }, [apiRef, props.paginationModel, (_props$initialState3 = props.initialState) == null || (_props$initialState3 = _props$initialState3.pagination) == null ? void 0 : _props$initialState3.paginationModel, props.autoPageSize]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto, _context$stateToResto2, _props$rowCount2;\n    const paginationModel = (_context$stateToResto = context.stateToRestore.pagination) != null && _context$stateToResto.paginationModel ? _extends({}, getDefaultGridPaginationModel(props.autoPageSize), (_context$stateToResto2 = context.stateToRestore.pagination) == null ? void 0 : _context$stateToResto2.paginationModel) : gridPaginationModelSelector(apiRef);\n    apiRef.current.updateControlState('pagination', mergeStateWithPaginationModel((_props$rowCount2 = props.rowCount) != null ? _props$rowCount2 : visibleTopLevelRowCount, props.signature, paginationModel), 'stateRestorePreProcessing');\n    return params;\n  }, [apiRef, props.autoPageSize, props.rowCount, props.signature, visibleTopLevelRowCount]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = () => {\n    var _apiRef$current$virtu;\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    if ((_apiRef$current$virtu = apiRef.current.virtualScrollerRef) != null && _apiRef$current$virtu.current) {\n      apiRef.current.scrollToIndexes({\n        rowIndex: paginationModel.page * paginationModel.pageSize\n      });\n    }\n    apiRef.current.forceUpdate();\n  };\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    const dimensions = apiRef.current.getRootDimensions();\n    if (!props.autoPageSize || !dimensions) {\n      return;\n    }\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    const maximumPageSizeWithoutScrollBar = Math.floor((dimensions.viewportInnerSize.height - pinnedRowsHeight.top - pinnedRowsHeight.bottom) / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (props.paginationMode === 'server' && props.rowCount == null) {\n        noRowCountInServerMode();\n      }\n    }\n  }, [props.rowCount, props.paginationMode]);\n  React.useEffect(() => {\n    var _props$rowCount3;\n    apiRef.current.updateControlState('pagination', mergeStateWithPaginationModel((_props$rowCount3 = props.rowCount) != null ? _props$rowCount3 : visibleTopLevelRowCount, props.signature, props.paginationModel));\n  }, [apiRef, props.paginationModel, props.rowCount, props.paginationMode, visibleTopLevelRowCount, props.signature]);\n  React.useEffect(() => {\n    handleUpdateAutoPageSize();\n  }, [handleUpdateAutoPageSize]);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterStrategyProcessor = (apiRef, strategyName, group, processor) => {\n  const registerPreProcessor = React.useCallback(() => {\n    apiRef.current.registerStrategyProcessor(strategyName, group, processor);\n  }, [apiRef, processor, group, strategyName]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { defaultMemoize } from 'reselect';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useLazyRef } from '../../utils/useLazyRef';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridFilterableColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { GridPreferencePanelsValue } from '../preferencesPanel/gridPreferencePanelsValue';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { gridFilterModelSelector } from './gridFilterSelector';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { gridRowsLookupSelector } from '../rows';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\nimport { buildAggregatedFilterApplier, sanitizeFilterModel, mergeStateWithFilterModel, cleanFilterItem, passFilterLogic } from './gridFilterUtils';\nimport { isDeepEqual } from '../../../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const filterStateInitializer = (state, props, apiRef) => {\n  var _ref, _props$filterModel, _props$initialState;\n  const filterModel = (_ref = (_props$filterModel = props.filterModel) != null ? _props$filterModel : (_props$initialState = props.initialState) == null || (_props$initialState = _props$initialState.filter) == null ? void 0 : _props$initialState.filterModel) != null ? _ref : getDefaultGridFilterModel();\n  return _extends({}, state, {\n    filter: {\n      filterModel: sanitizeFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef),\n      filteredRowsLookup: {},\n      filteredDescendantCountLookup: {}\n    },\n    visibleRowsLookup: {}\n  });\n};\nconst getVisibleRowsLookup = params => {\n  // For flat tree, the `visibleRowsLookup` and the `filteredRowsLookup` are equals since no row is collapsed.\n  return params.filteredRowsLookup;\n};\nfunction getVisibleRowsLookupState(apiRef, state) {\n  return apiRef.current.applyStrategyProcessor('visibleRowsLookupCreation', {\n    tree: state.rows.tree,\n    filteredRowsLookup: state.filter.filteredRowsLookup\n  });\n}\nfunction createMemoizedValues() {\n  return defaultMemoize(Object.values);\n}\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n * @requires useGridRows (event)\n */\nexport const useGridFilter = (apiRef, props) => {\n  var _props$initialState3, _props$slotProps2;\n  const logger = useGridLogger(apiRef, 'useGridFilter');\n  apiRef.current.registerControlState({\n    stateId: 'filter',\n    propModel: props.filterModel,\n    propOnChange: props.onFilterModelChange,\n    stateSelector: gridFilterModelSelector,\n    changeEvent: 'filterModelChange'\n  });\n  const updateFilteredRows = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const filterModel = gridFilterModelSelector(state, apiRef.current.instanceId);\n      const isRowMatchingFilters = props.filterMode === 'client' ? buildAggregatedFilterApplier(filterModel, apiRef, props.disableEval) : null;\n      const filteringResult = apiRef.current.applyStrategyProcessor('filtering', {\n        isRowMatchingFilters,\n        filterModel: filterModel != null ? filterModel : getDefaultGridFilterModel()\n      });\n      const newState = _extends({}, state, {\n        filter: _extends({}, state.filter, filteringResult)\n      });\n      const visibleRowsLookupState = getVisibleRowsLookupState(apiRef, newState);\n      return _extends({}, newState, {\n        visibleRowsLookup: visibleRowsLookupState\n      });\n    });\n    apiRef.current.publishEvent('filteredRowsSet');\n  }, [apiRef, props.filterMode, props.disableEval]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.filterable === false || props.disableColumnFilter) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuFilterItem'];\n  }, [props.disableColumnFilter]);\n\n  /**\n   * API METHODS\n   */\n  const applyFilters = React.useCallback(() => {\n    updateFilteredRows();\n    apiRef.current.forceUpdate();\n  }, [apiRef, updateFilteredRows]);\n  const upsertFilterItem = React.useCallback(item => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = [...filterModel.items];\n    const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n    if (itemIndex === -1) {\n      items.push(item);\n    } else {\n      items[itemIndex] = item;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItem');\n  }, [apiRef]);\n  const upsertFilterItems = React.useCallback(items => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const existingItems = [...filterModel.items];\n    items.forEach(item => {\n      const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n      if (itemIndex === -1) {\n        existingItems.push(item);\n      } else {\n        existingItems[itemIndex] = item;\n      }\n    });\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItems');\n  }, [apiRef]);\n  const deleteFilterItem = React.useCallback(itemToDelete => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = filterModel.items.filter(item => item.id !== itemToDelete.id);\n    if (items.length === filterModel.items.length) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'deleteFilterItem');\n  }, [apiRef]);\n  const showFilterPanel = React.useCallback((targetColumnField, panelId, labelId) => {\n    logger.debug('Displaying filter panel');\n    if (targetColumnField) {\n      const filterModel = gridFilterModelSelector(apiRef);\n      const filterItemsWithValue = filterModel.items.filter(item => {\n        var _column$filterOperato;\n        if (item.value !== undefined) {\n          // Some filters like `isAnyOf` support array as `item.value`.\n          // If array is empty, we want to remove it from the filter model.\n          if (Array.isArray(item.value) && item.value.length === 0) {\n            return false;\n          }\n          return true;\n        }\n        const column = apiRef.current.getColumn(item.field);\n        const filterOperator = (_column$filterOperato = column.filterOperators) == null ? void 0 : _column$filterOperato.find(operator => operator.value === item.operator);\n        const requiresFilterValue = typeof (filterOperator == null ? void 0 : filterOperator.requiresFilterValue) === 'undefined' ? true : filterOperator == null ? void 0 : filterOperator.requiresFilterValue;\n\n        // Operators like `isEmpty` don't have and don't require `item.value`.\n        // So we don't want to remove them from the filter model if `item.value === undefined`.\n        // See https://github.com/mui/mui-x/issues/5402\n        if (requiresFilterValue) {\n          return false;\n        }\n        return true;\n      });\n      let newFilterItems;\n      const filterItemOnTarget = filterItemsWithValue.find(item => item.field === targetColumnField);\n      const targetColumn = apiRef.current.getColumn(targetColumnField);\n      if (filterItemOnTarget) {\n        newFilterItems = filterItemsWithValue;\n      } else if (props.disableMultipleColumnsFiltering) {\n        newFilterItems = [cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      } else {\n        newFilterItems = [...filterItemsWithValue, cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      }\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n    apiRef.current.showPreferences(GridPreferencePanelsValue.filters, panelId, labelId);\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const hideFilterPanel = React.useCallback(() => {\n    logger.debug('Hiding filter panel');\n    apiRef.current.hidePreferences();\n  }, [apiRef, logger]);\n  const setFilterLogicOperator = React.useCallback(logicOperator => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.logicOperator === logicOperator) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      logicOperator\n    }), 'changeLogicOperator');\n  }, [apiRef]);\n  const setQuickFilterValues = React.useCallback(values => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (isDeepEqual(filterModel.quickFilterValues, values)) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      quickFilterValues: [...values]\n    }));\n  }, [apiRef]);\n  const setFilterModel = React.useCallback((model, reason) => {\n    const currentModel = gridFilterModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug('Setting filter model');\n      apiRef.current.updateControlState('filter', mergeStateWithFilterModel(model, props.disableMultipleColumnsFiltering, apiRef), reason);\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const filterApi = {\n    setFilterLogicOperator,\n    unstable_applyFilters: applyFilters,\n    deleteFilterItem,\n    upsertFilterItem,\n    upsertFilterItems,\n    setFilterModel,\n    showFilterPanel,\n    hideFilterPanel,\n    setQuickFilterValues,\n    ignoreDiacritics: props.ignoreDiacritics\n  };\n  useGridApiMethod(apiRef, filterApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState2;\n    const filterModelToExport = gridFilterModelSelector(apiRef);\n    const shouldExportFilterModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.filterModel != null ||\n    // Always export if the model has been initialized\n    ((_props$initialState2 = props.initialState) == null || (_props$initialState2 = _props$initialState2.filter) == null ? void 0 : _props$initialState2.filterModel) != null ||\n    // Export if the model is not equal to the default value\n    !isDeepEqual(filterModelToExport, getDefaultGridFilterModel());\n    if (!shouldExportFilterModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      filter: {\n        filterModel: filterModelToExport\n      }\n    });\n  }, [apiRef, props.filterModel, (_props$initialState3 = props.initialState) == null || (_props$initialState3 = _props$initialState3.filter) == null ? void 0 : _props$initialState3.filterModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n    const filterModel = (_context$stateToResto = context.stateToRestore.filter) == null ? void 0 : _context$stateToResto.filterModel;\n    if (filterModel == null) {\n      return params;\n    }\n    apiRef.current.updateControlState('filter', mergeStateWithFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef), 'restoreState');\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.unstable_applyFilters]\n    });\n  }, [apiRef, props.disableMultipleColumnsFiltering]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.filters) {\n      var _props$slotProps;\n      const FilterPanel = props.slots.filterPanel;\n      return /*#__PURE__*/_jsx(FilterPanel, _extends({}, (_props$slotProps = props.slotProps) == null ? void 0 : _props$slotProps.filterPanel));\n    }\n    return initialValue;\n  }, [props.slots.filterPanel, (_props$slotProps2 = props.slotProps) == null ? void 0 : _props$slotProps2.filterPanel]);\n  const {\n    getRowId\n  } = props;\n  const getRowsRef = useLazyRef(createMemoizedValues);\n  const flatFilteringMethod = React.useCallback(params => {\n    if (props.filterMode !== 'client' || !params.isRowMatchingFilters) {\n      return {\n        filteredRowsLookup: {},\n        filteredDescendantCountLookup: {}\n      };\n    }\n    const dataRowIdToModelLookup = gridRowsLookupSelector(apiRef);\n    const filteredRowsLookup = {};\n    const {\n      isRowMatchingFilters\n    } = params;\n    const filterCache = {};\n    const result = {\n      passingFilterItems: null,\n      passingQuickFilterValues: null\n    };\n    const rows = getRowsRef.current(apiRef.current.state.rows.dataRowIdToModelLookup);\n    for (let i = 0; i < rows.length; i += 1) {\n      const row = rows[i];\n      const id = getRowId ? getRowId(row) : row.id;\n      isRowMatchingFilters(row, undefined, result);\n      const isRowPassing = passFilterLogic([result.passingFilterItems], [result.passingQuickFilterValues], params.filterModel, apiRef, filterCache);\n      filteredRowsLookup[id] = isRowPassing;\n    }\n    const footerId = 'auto-generated-group-footer-root';\n    const footer = dataRowIdToModelLookup[footerId];\n    if (footer) {\n      filteredRowsLookup[footerId] = true;\n    }\n    return {\n      filteredRowsLookup,\n      filteredDescendantCountLookup: {}\n    };\n  }, [apiRef, props.filterMode, getRowId, getRowsRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'filtering', flatFilteringMethod);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'visibleRowsLookupCreation', getVisibleRowsLookup);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnsChange = React.useCallback(() => {\n    logger.debug('onColUpdated - GridColumns changed, applying filters');\n    const filterModel = gridFilterModelSelector(apiRef);\n    const filterableColumnsLookup = gridFilterableColumnLookupSelector(apiRef);\n    const newFilterItems = filterModel.items.filter(item => item.field && filterableColumnsLookup[item.field]);\n    if (newFilterItems.length < filterModel.items.length) {\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n  }, [apiRef, logger]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'filtering') {\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef]);\n  const updateVisibleRowsLookupState = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        visibleRowsLookup: getVisibleRowsLookupState(apiRef, state)\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n\n  // Do not call `apiRef.current.forceUpdate` to avoid re-render before updating the sorted rows.\n  // Otherwise, the state is not consistent during the render\n  useGridApiEventHandler(apiRef, 'rowsSet', updateFilteredRows);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', updateVisibleRowsLookupState);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.quickFilterValues && filterModel.quickFilterExcludeHiddenColumns) {\n      // re-apply filters because the quick filter results may have changed\n      apiRef.current.unstable_applyFilters();\n    }\n  });\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.unstable_applyFilters();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.filterModel !== undefined) {\n      apiRef.current.setFilterModel(props.filterModel);\n    }\n  }, [apiRef, logger, props.filterModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventcallback } from '@mui/utils';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { gridFocusCellSelector, unstable_gridFocusColumnGroupHeaderSelector } from './gridFocusStateSelector';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { clamp } from '../../../utils/utils';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  }\n});\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const publishCellFocusOut = React.useCallback((cell, event) => {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if ((focusedCell == null ? void 0 : focusedCell.id) === id && (focusedCell == null ? void 0 : focusedCell.field) === field) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFilterFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header filter with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnGroupHeaderFocus = React.useCallback((field, depth, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell) {\n      apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        },\n        focus: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const getColumnGroupHeaderFocus = React.useCallback(() => unstable_gridFocusColumnGroupHeaderSelector(apiRef), [apiRef]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const pinnedRows = gridPinnedRowsSelector(apiRef);\n\n    // Include pinned rows as well\n    const currentPageRows = [].concat(pinnedRows.top || [], currentPage.rows, pinnedRows.bottom || []);\n    let rowIndexToFocus = currentPageRows.findIndex(row => row.id === id);\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n      if (rowIndexToFocus < currentPageRows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPageRows.length - 1);\n    const rowToFocus = currentPageRows[rowIndexToFocus];\n    if (!rowToFocus) {\n      return;\n    }\n    const colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || event.key === 'Shift' || isNavigationKey(event.key)) {\n      return;\n    }\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleColumnGroupHeaderFocus = React.useCallback(({\n    fields,\n    depth\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    const focusedColumnGroup = unstable_gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup !== null && focusedColumnGroup.depth === depth && fields.includes(focusedColumnGroup.field)) {\n      // This group cell has already been focused\n      return;\n    }\n    apiRef.current.setColumnGroupHeaderFocus(fields[0], depth, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback((_, event) => {\n    var _event$relatedTarget;\n    if ((_event$relatedTarget = event.relatedTarget) != null && _event$relatedTarget.className.includes(gridClasses.columnHeader)) {\n      return;\n    }\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null,\n        columnHeaderFilter: null,\n        columnGroupHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseDown = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n      return;\n    }\n    if ((cellParams == null ? void 0 : cellParams.id) === focusedCell.id && (cellParams == null ? void 0 : cellParams.field) === focusedCell.field) {\n      return;\n    }\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n    if (cellElement != null && cellElement.contains(event.target)) {\n      return;\n    }\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate();\n\n      // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n    const cell = gridFocusCellSelector(apiRef);\n    if ((cell == null ? void 0 : cell.id) !== params.id || (cell == null ? void 0 : cell.field) !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    // If the focused cell is in a row which does not exist anymore, then remove the focus\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n    }\n  }, [apiRef]);\n  const handlePaginationModelChange = useEventcallback(() => {\n    const currentFocusedCell = gridFocusCellSelector(apiRef);\n    if (!currentFocusedCell) {\n      return;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const rowIsInCurrentPage = currentPage.rows.find(row => row.id === currentFocusedCell.id);\n    if (rowIsInCurrentPage) {\n      return;\n    }\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id: currentPage.rows[0].id,\n            field: visibleColumns[0].field\n          },\n          columnGroupHeader: null,\n          columnHeader: null,\n          columnHeaderFilter: null\n        }\n      });\n    });\n  });\n  const focusApi = {\n    setCellFocus,\n    setColumnHeaderFocus,\n    setColumnHeaderFilterFocus\n  };\n  const focusPrivateApi = {\n    moveFocusToRelativeCell,\n    setColumnGroupHeaderFocus,\n    getColumnGroupHeaderFocus\n  };\n  useGridApiMethod(apiRef, focusApi, 'public');\n  useGridApiMethod(apiRef, focusPrivateApi, 'private');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('mouseup', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('mouseup', handleDocumentClick);\n    };\n  }, [apiRef, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', handleCellMouseDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderFocus', handleColumnGroupHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n};","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { gridExpandedSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../colDef/gridCheckboxSelectionColDef';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nimport { unstable_gridFocusColumnGroupHeaderSelector } from '../focus';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../columnGrouping/gridColumnGroupsSelector';\nimport { unstable_gridHeaderFilteringEditFieldSelector, unstable_gridHeaderFilteringMenuSelector } from '../headerFiltering/gridHeaderFilteringSelectors';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { isEventTargetInPortal } from '../../../utils/domUtils';\nfunction enrichPageRowsWithPinnedRows(apiRef, rows) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef) || {};\n  return [...(pinnedRows.top || []), ...rows, ...(pinnedRows.bottom || [])];\n}\nconst getLeftColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  direction\n}) => {\n  if (direction === 'rtl') {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  } else if (direction === 'ltr') {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  }\n  return null;\n};\nconst getRightColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  direction\n}) => {\n  if (direction === 'rtl') {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  } else if (direction === 'ltr') {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  }\n  return null;\n};\n\n/**\n * @requires useGridSorting (method) - can be after\n * @requires useGridFilter (state) - can be after\n * @requires useGridColumns (state, method) - can be after\n * @requires useGridDimensions (method) - can be after\n * @requires useGridFocus (method) - can be after\n * @requires useGridScroll (method) - can be after\n * @requires useGridColumnSpanning (method) - can be after\n */\nexport const useGridKeyboardNavigation = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridKeyboardNavigation');\n  const initialCurrentPageRows = useGridVisibleRows(apiRef, props).rows;\n  const theme = useTheme();\n  const currentPageRows = React.useMemo(() => enrichPageRowsWithPinnedRows(apiRef, initialCurrentPageRows), [apiRef, initialCurrentPageRows]);\n  const headerFilteringEnabled =\n  // @ts-expect-error // TODO move relevant code to the `DataGridPro`\n  props.signature !== 'DataGrid' && props.unstable_headerFilters;\n\n  /**\n   * @param {number} colIndex Index of the column to focus\n   * @param {number} rowIndex index of the row to focus\n   * @param {string} closestColumnToUse Which closest column cell to use when the cell is spanned by `colSpan`.\n   * TODO replace with apiRef.current.moveFocusToRelativeCell()\n   */\n  const goToCell = React.useCallback((colIndex, rowId, closestColumnToUse = 'left') => {\n    const visibleSortedRows = gridExpandedSortedRowEntriesSelector(apiRef);\n    const nextCellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (nextCellColSpanInfo && nextCellColSpanInfo.spannedByColSpan) {\n      if (closestColumnToUse === 'left') {\n        colIndex = nextCellColSpanInfo.leftVisibleCellIndex;\n      } else if (closestColumnToUse === 'right') {\n        colIndex = nextCellColSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    // `scrollToIndexes` requires a rowIndex relative to all visible rows.\n    // Those rows do not include pinned rows, but pinned rows do not need scroll anyway.\n    const rowIndexRelativeToAllRows = visibleSortedRows.findIndex(row => row.id === rowId);\n    logger.debug(`Navigating to cell row ${rowIndexRelativeToAllRows}, col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex,\n      rowIndex: rowIndexRelativeToAllRows\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setCellFocus(rowId, field);\n  }, [apiRef, logger]);\n  const goToHeader = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef, logger]);\n  const goToHeaderFilter = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header filter col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFilterFocus(field, event);\n  }, [apiRef, logger]);\n  const goToGroupHeader = React.useCallback((colIndex, depth, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const {\n      field\n    } = apiRef.current.getVisibleColumns()[colIndex];\n    apiRef.current.setColumnGroupHeaderFocus(field, depth, event);\n  }, [apiRef, logger]);\n  const getRowIdFromIndex = React.useCallback(rowIndex => {\n    var _currentPageRows$rowI;\n    return (_currentPageRows$rowI = currentPageRows[rowIndex]) == null ? void 0 : _currentPageRows$rowI.id;\n  }, [currentPageRows]);\n  const handleColumnHeaderKeyDown = React.useCallback((params, event) => {\n    const headerTitleNode = event.currentTarget.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n    const isFromInsideContent = !!headerTitleNode && headerTitleNode.contains(event.target);\n    if (isFromInsideContent && params.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // When focus is on a nested input, keyboard events have no effect to avoid conflicts with native events.\n      // There is one exception for the checkBoxHeader\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions();\n    if (!dimensions) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = currentPageRows.length > 0 ? 0 : null;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    const columnGroupMaxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (firstRowIndexInPage !== null) {\n            if (headerFilteringEnabled) {\n              goToHeaderFilter(colIndexBefore, event);\n            } else {\n              goToCell(colIndexBefore, getRowIdFromIndex(firstRowIndexInPage));\n            }\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (rightColIndex !== null) {\n            goToHeader(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (leftColIndex !== null) {\n            goToHeader(leftColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (columnGroupMaxDepth > 0) {\n            goToGroupHeader(colIndexBefore, columnGroupMaxDepth - 1, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeader(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeader(lastColIndex, event);\n          break;\n        }\n      case 'Enter':\n        {\n          if (event.ctrlKey || event.metaKey) {\n            apiRef.current.toggleColumnMenu(params.field);\n          }\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, headerFilteringEnabled, goToHeaderFilter, goToCell, getRowIdFromIndex, theme.direction, goToHeader, goToGroupHeader]);\n  const handleHeaderFilterKeyDown = React.useCallback((params, event) => {\n    const dimensions = apiRef.current.getRootDimensions();\n    if (!dimensions) {\n      return;\n    }\n    const isEditing = unstable_gridHeaderFilteringEditFieldSelector(apiRef) === params.field;\n    const isHeaderMenuOpen = unstable_gridHeaderFilteringMenuSelector(apiRef) === params.field;\n    if (isEditing || isHeaderMenuOpen || !isNavigationKey(event.key)) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          const rowId = getRowIdFromIndex(firstRowIndexInPage);\n          if (firstRowIndexInPage !== null && rowId != null) {\n            goToCell(colIndexBefore, rowId);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (rightColIndex !== null) {\n            goToHeaderFilter(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (leftColIndex !== null) {\n            goToHeaderFilter(leftColIndex, event);\n          } else {\n            apiRef.current.setColumnHeaderFilterFocus(params.field, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          goToHeader(colIndexBefore, event);\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeaderFilter(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeaderFilter(lastColIndex, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeaderFilter, theme.direction, goToHeader, goToCell, getRowIdFromIndex]);\n  const handleColumnGroupHeaderKeyDown = React.useCallback((params, event) => {\n    const dimensions = apiRef.current.getRootDimensions();\n    if (!dimensions) {\n      return;\n    }\n    const focusedColumnGroup = unstable_gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup === null) {\n      return;\n    }\n    const {\n      field: currentField,\n      depth: currentDepth\n    } = focusedColumnGroup;\n    const {\n      fields,\n      depth,\n      maxDepth\n    } = params;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const currentColIndex = apiRef.current.getColumnIndex(currentField);\n    const colIndexBefore = currentField ? apiRef.current.getColumnIndex(currentField) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (depth === maxDepth - 1) {\n            goToHeader(currentColIndex, event);\n          } else {\n            goToGroupHeader(currentColIndex, currentDepth + 1, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (depth > 0) {\n            goToGroupHeader(currentColIndex, currentDepth - 1, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const remainingRightColumns = fields.length - fields.indexOf(currentField) - 1;\n          if (currentColIndex + remainingRightColumns + 1 <= lastColIndex) {\n            goToGroupHeader(currentColIndex + remainingRightColumns + 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const remainingLeftColumns = fields.indexOf(currentField);\n          if (currentColIndex - remainingLeftColumns - 1 >= firstColIndex) {\n            goToGroupHeader(currentColIndex - remainingLeftColumns - 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToGroupHeader(firstColIndex, currentDepth, event);\n          break;\n        }\n      case 'End':\n        {\n          goToGroupHeader(lastColIndex, currentDepth, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeader, goToGroupHeader, goToCell, getRowIdFromIndex]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // Get the most recent params because the cell mode may have changed by another listener\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n    if (cellParams.cellMode === GridCellModes.Edit || !isNavigationKey(event.key)) {\n      return;\n    }\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions();\n    if (currentPageRows.length === 0 || !dimensions) {\n      return;\n    }\n    const direction = theme.direction;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const rowIndexBefore = currentPageRows.findIndex(row => row.id === params.id);\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          // \"Enter\" is only triggered by the row / cell editing feature\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore + 1));\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (rowIndexBefore > firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore - 1));\n          } else if (headerFilteringEnabled) {\n            goToHeaderFilter(colIndexBefore, event);\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction\n          });\n          if (rightColIndex !== null) {\n            goToCell(rightColIndex, getRowIdFromIndex(rowIndexBefore), direction === 'rtl' ? 'left' : 'right');\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction\n          });\n          if (leftColIndex !== null) {\n            goToCell(leftColIndex, getRowIdFromIndex(rowIndexBefore), direction === 'rtl' ? 'right' : 'left');\n          }\n          break;\n        }\n      case 'Tab':\n        {\n          // \"Tab\" is only triggered by the row / cell editing feature\n          if (event.shiftKey && colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore), 'left');\n          } else if (!event.shiftKey && colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n          break;\n        }\n      case ' ':\n        {\n          const field = params.field;\n          if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n            break;\n          }\n          const colDef = params.colDef;\n          if (colDef && colDef.type === 'treeDataGroup') {\n            break;\n          }\n          if (!event.shiftKey && rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageUp':\n        {\n          // Go to the first row before going to header\n          const nextRowIndex = Math.max(rowIndexBefore - viewportPageSize, firstRowIndexInPage);\n          if (nextRowIndex !== rowIndexBefore && nextRowIndex >= firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(nextRowIndex));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'Home':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(firstColIndex, getRowIdFromIndex(firstRowIndexInPage));\n          } else {\n            goToCell(firstColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      case 'End':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(lastColIndex, getRowIdFromIndex(lastRowIndexInPage));\n          } else {\n            goToCell(lastColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows, theme.direction, goToCell, getRowIdFromIndex, headerFilteringEnabled, goToHeaderFilter, goToHeader]);\n  const checkIfCanStartEditing = React.useCallback((initialValue, {\n    event\n  }) => {\n    if (event.key === ' ') {\n      // Space scrolls to the last row\n      return false;\n    }\n    return initialValue;\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'canStartEditing', checkIfCanStartEditing);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'headerFilterKeyDown', handleHeaderFilterKeyDown);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderKeyDown', handleColumnGroupHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPreferencePanelStateSelector } from './gridPreferencePanelSelector';\nexport const preferencePanelStateInitializer = (state, props) => {\n  var _props$initialState$p, _props$initialState;\n  return _extends({}, state, {\n    preferencePanel: (_props$initialState$p = (_props$initialState = props.initialState) == null ? void 0 : _props$initialState.preferencePanel) != null ? _props$initialState$p : {\n      open: false\n    }\n  });\n};\n\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\nexport const useGridPreferencesPanel = (apiRef, props) => {\n  var _props$initialState3;\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n  const hideTimeout = React.useRef();\n  const immediateTimeout = React.useRef();\n\n  /**\n   * API METHODS\n   */\n  const hidePreferences = React.useCallback(() => {\n    logger.debug('Hiding Preferences Panel');\n    const preferencePanelState = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (preferencePanelState.openedPanelValue) {\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: {\n        open: false\n      }\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n\n  // This is to prevent the preferences from closing when you open a select box or another panel,\n  // The issue is in MUI core V4 => Fixed in V5\n  const doNotHidePanel = React.useCallback(() => {\n    immediateTimeout.current = setTimeout(() => clearTimeout(hideTimeout.current), 0);\n  }, []);\n\n  // This is a hack for the issue with Core V4, by delaying hiding the panel on the clickAwayListener,\n  // we can cancel the action if the trigger element still need the panel...\n  const hidePreferencesDelayed = React.useCallback(() => {\n    hideTimeout.current = setTimeout(hidePreferences, 100);\n  }, [hidePreferences]);\n  const showPreferences = React.useCallback((newValue, panelId, labelId) => {\n    logger.debug('Opening Preferences Panel');\n    doNotHidePanel();\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue,\n        panelId,\n        labelId\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, doNotHidePanel, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences: hidePreferencesDelayed\n  }, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState2;\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n    const shouldExportPreferencePanel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the panel was initialized\n    ((_props$initialState2 = props.initialState) == null ? void 0 : _props$initialState2.preferencePanel) != null ||\n    // Always export if the panel is opened\n    preferencePanelToExport.open;\n    if (!shouldExportPreferencePanel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef, (_props$initialState3 = props.initialState) == null ? void 0 : _props$initialState3.preferencePanel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(hideTimeout.current);\n      clearTimeout(immediateTimeout.current);\n    };\n  }, []);\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"field\"],\n  _excluded2 = [\"id\", \"field\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isPrintableKey } from '../../../utils/keyboardUtils';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsDataRowIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { deepClone } from '../../../utils/utils';\nimport { GridCellEditStartReasons, GridCellEditStopReasons } from '../../../models/params/gridEditCellParams';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, e.g. `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see http://mui.com/components/data-grid/editing/#server-side-persistence.'], 'error');\nexport const useGridCellEditing = (apiRef, props) => {\n  const [cellModesModel, setCellModesModel] = React.useState({});\n  const cellModesModelRef = React.useRef(cellModesModel);\n  const prevCellModesModel = React.useRef({});\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    cellModesModel: cellModesModelProp,\n    onCellModesModelChange\n  } = props;\n  const runIfEditModeIsCell = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) !== mode) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (params.cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('cellEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.View) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStopReasons.cellFocusOut\n    });\n    apiRef.current.publishEvent('cellEditStop', newParams, event);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is deprecated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridCellEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        reason = event.shiftKey ? GridCellEditStopReasons.shiftTabKeyDown : GridCellEditStopReasons.tabKeyDown;\n        event.preventDefault(); // Prevent going to the next element in the tab sequence\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n        apiRef.current.publishEvent('cellEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'cell'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if ((event.ctrlKey || event.metaKey) && event.key === 'v') {\n        reason = GridCellEditStartReasons.pasteKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Delete' || event.key === 'Backspace') {\n        // Delete on Windows, Backspace on macOS\n        reason = GridCellEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason,\n          key: event.key\n        });\n        apiRef.current.publishEvent('cellEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleCellEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startCellEditModeParams = {\n      id,\n      field\n    };\n    if (reason === GridCellEditStartReasons.printableKeyDown || reason === GridCellEditStartReasons.deleteKeyDown || reason === GridCellEditStartReasons.pasteKeyDown) {\n      startCellEditModeParams.deleteValue = true;\n    }\n    apiRef.current.startCellEditMode(startCellEditModeParams);\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    let cellToFocusAfter;\n    if (reason === GridCellEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridCellEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridCellEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopCellEditMode({\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsCell(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsCell(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsCell(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellEditStart', runIfEditModeIsCell(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', runIfEditModeIsCell(handleCellEditStop));\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', props.onCellEditStop);\n  const getCellMode = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && editingState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]);\n  const updateCellModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.cellModesModel;\n    if (onCellModesModelChange && isNewModelDifferentFromProp) {\n      onCellModesModelChange(newModel, {});\n    }\n    if (props.cellModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setCellModesModel(newModel);\n    cellModesModelRef.current = newModel;\n    apiRef.current.publishEvent('cellModesModelChange', newModel);\n  });\n  const updateFieldInCellModesModel = React.useCallback((id, field, newProps) => {\n    // We use the ref because it always contain the up-to-date value, different from the state\n    // that needs a rerender to reflect the new value\n    const newModel = _extends({}, cellModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newModel[id], {\n        [field]: _extends({}, newProps)\n      });\n    } else {\n      const _newModel$id = newModel[id],\n        otherFields = _objectWithoutPropertiesLoose(_newModel$id, [field].map(_toPropertyKey)); // Ensure that we have a new object, not a reference\n      newModel[id] = otherFields;\n      if (Object.keys(newModel[id]).length === 0) {\n        delete newModel[id];\n      }\n    }\n    updateCellModesModel(newModel);\n  }, [updateCellModesModel]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.View);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.Edit\n    }, other));\n  }, [throwIfNotEditable, throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStartCellEditMode = useEventCallback(params => {\n    const {\n      id,\n      field,\n      deleteValue,\n      initialValue\n    } = params;\n    let newValue = apiRef.current.getCellValue(id, field);\n    if (deleteValue || initialValue) {\n      newValue = deleteValue ? '' : initialValue;\n    }\n    const newProps = {\n      value: newValue,\n      error: false,\n      isProcessingProps: false\n    };\n    updateOrDeleteFieldState(id, field, newProps);\n    apiRef.current.setCellFocus(id, field);\n  });\n  const stopCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.View\n    }, other));\n  }, [throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStopCellEditMode = useEventCallback(async params => {\n    const {\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter = 'none'\n    } = params;\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    const finishCellEditMode = () => {\n      updateOrDeleteFieldState(id, field, null);\n      updateFieldInCellModesModel(id, field, null);\n      if (cellToFocusAfter !== 'none') {\n        apiRef.current.moveFocusToRelativeCell(id, field, cellToFocusAfter);\n      }\n    };\n    if (ignoreModifications) {\n      finishCellEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      error,\n      isProcessingProps\n    } = editingState[id][field];\n    if (error || isProcessingProps) {\n      // Attempt to change cell mode to \"view\" was not successful\n      // Update previous mode to allow another attempt\n      prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n      // Revert the mode in the cellModesModel prop back to \"edit\"\n      updateFieldInCellModesModel(id, field, {\n        mode: GridCellModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n        // Revert the mode in the cellModesModel prop back to \"edit\"\n        updateFieldInCellModesModel(id, field, {\n          mode: GridCellModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n      try {\n        const row = apiRef.current.getRow(id);\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishCellEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishCellEditMode();\n    }\n  });\n  const setCellEditingEditCellValue = React.useCallback(async params => {\n    var _editingState$id;\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, apiRef.current.getCellParams(id, field));\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (column.preProcessEditCellProps) {\n      const hasChanged = value !== editingState[id][field].value;\n      newProps = _extends({}, newProps, {\n        isProcessingProps: true\n      });\n      updateOrDeleteFieldState(id, field, newProps);\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row,\n        props: newProps,\n        hasChanged\n      }));\n    }\n\n    // Check again if the cell is in edit mode because the user may have\n    // discarded the changes while the props were being processed.\n    if (apiRef.current.getCellMode(id, field) === GridCellModes.View) {\n      return false;\n    }\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    newProps = _extends({}, newProps, {\n      isProcessingProps: false\n    });\n    // We don't update the value with the one coming from the props pre-processing\n    // because when the promise resolves it may be already outdated. The only\n    // exception to this rule is when there's no pre-processing.\n    newProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n    updateOrDeleteFieldState(id, field, newProps);\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return !((_editingState$id = editingState[id]) != null && (_editingState$id = _editingState$id[field]) != null && _editingState$id.error);\n  }, [apiRef, throwIfNotEditable, throwIfNotInMode, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromCellEditing = React.useCallback((id, field) => {\n    const column = apiRef.current.getColumn(field);\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id] || !editingState[id][field]) {\n      return apiRef.current.getRow(id);\n    }\n    const {\n      value\n    } = editingState[id][field];\n    return column.valueSetter ? column.valueSetter({\n      value,\n      row\n    }) : _extends({}, row, {\n      [field]: value\n    });\n  }, [apiRef]);\n  const editingApi = {\n    getCellMode,\n    startCellEditMode,\n    stopCellEditMode\n  };\n  const editingPrivateApi = {\n    setCellEditingEditCellValue,\n    getRowWithUpdatedValuesFromCellEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (cellModesModelProp) {\n      updateCellModesModel(cellModesModelProp);\n    }\n  }, [cellModesModelProp, updateCellModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopCellEditMode may change it later\n    const copyOfPrevCellModes = prevCellModesModel.current;\n    prevCellModesModel.current = deepClone(cellModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(cellModesModel).forEach(([id, fields]) => {\n      Object.entries(fields).forEach(([field, params]) => {\n        var _copyOfPrevCellModes$, _idToIdLookup$id;\n        const prevMode = ((_copyOfPrevCellModes$ = copyOfPrevCellModes[id]) == null || (_copyOfPrevCellModes$ = _copyOfPrevCellModes$[field]) == null ? void 0 : _copyOfPrevCellModes$.mode) || GridCellModes.View;\n        const originalId = (_idToIdLookup$id = idToIdLookup[id]) != null ? _idToIdLookup$id : id;\n        if (params.mode === GridCellModes.Edit && prevMode === GridCellModes.View) {\n          updateStateToStartCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        } else if (params.mode === GridCellModes.View && prevMode === GridCellModes.Edit) {\n          updateStateToStopCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        }\n      });\n    });\n  }, [apiRef, cellModesModel, updateStateToStartCellEditMode, updateStateToStopCellEditMode]);\n};","import _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\"],\n  _excluded2 = [\"id\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridRowModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isPrintableKey } from '../../../utils/keyboardUtils';\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from '../columns/gridColumnsSelector';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsDataRowIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { deepClone } from '../../../utils/utils';\nimport { GridRowEditStopReasons, GridRowEditStartReasons } from '../../../models/params/gridRowParams';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../../../colDef';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, e.g. `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see http://mui.com/components/data-grid/editing/#server-side-persistence.'], 'error');\nexport const useGridRowEditing = (apiRef, props) => {\n  const [rowModesModel, setRowModesModel] = React.useState({});\n  const rowModesModelRef = React.useRef(rowModesModel);\n  const prevRowModesModel = React.useRef({});\n  const focusTimeout = React.useRef(null);\n  const nextFocusedCell = React.useRef(null);\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    rowModesModel: rowModesModelProp,\n    onRowModesModelChange\n  } = props;\n  const runIfEditModeIsRow = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, mode) => {\n    if (apiRef.current.getRowMode(id) !== mode) {\n      throw new Error(`MUI: The row with id=${id} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.Edit) {\n      return;\n    }\n    const rowParams = apiRef.current.getRowParams(params.id);\n    const newParams = _extends({}, rowParams, {\n      field: params.field,\n      reason: GridRowEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('rowEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n      return;\n    }\n    // The mechanism to detect if we can stop editing a row is different from\n    // the cell editing. Instead of triggering it when clicking outside a cell,\n    // we must check if another cell in the same row was not clicked. To achieve\n    // that, first we keep track of all cells that gained focus. When a cell loses\n    // focus we check if the next cell that received focus is from a different row.\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(() => {\n      var _nextFocusedCell$curr;\n      focusTimeout.current = null;\n      if (((_nextFocusedCell$curr = nextFocusedCell.current) == null ? void 0 : _nextFocusedCell$curr.id) !== params.id) {\n        // The row might have been deleted during the click\n        if (!apiRef.current.getRow(params.id)) {\n          return;\n        }\n\n        // The row may already changed its mode\n        if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n          return;\n        }\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason: GridRowEditStopReasons.rowFocusOut\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    });\n  }, [apiRef]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(focusTimeout.current);\n    };\n  }, []);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridRowModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is deprecated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridRowEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        const columnFields = gridVisibleColumnFieldsSelector(apiRef).filter(field => {\n          const column = apiRef.current.getColumn(field);\n          if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n            return true;\n          }\n          return apiRef.current.isCellEditable(apiRef.current.getCellParams(params.id, field));\n        });\n        if (event.shiftKey) {\n          if (params.field === columnFields[0]) {\n            // Exit if user pressed Shift+Tab on the first field\n            reason = GridRowEditStopReasons.shiftTabKeyDown;\n          }\n        } else if (params.field === columnFields[columnFields.length - 1]) {\n          // Exit if user pressed Tab on the last field\n          reason = GridRowEditStopReasons.tabKeyDown;\n        }\n\n        // Always prevent going to the next element in the tab sequence because the focus is\n        // handled manually to support edit components rendered inside Portals\n        event.preventDefault();\n        if (!reason) {\n          const index = columnFields.findIndex(field => field === params.field);\n          const nextFieldToFocus = columnFields[event.shiftKey ? index - 1 : index + 1];\n          apiRef.current.setCellFocus(params.id, nextFieldToFocus);\n        }\n      }\n      if (reason) {\n        const newParams = _extends({}, apiRef.current.getRowParams(params.id), {\n          reason,\n          field: params.field\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'row'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if ((event.ctrlKey || event.metaKey) && event.key === 'v') {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Delete' || event.key === 'Backspace') {\n        // Delete on Windows, Backspace on macOS\n        reason = GridRowEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason\n        });\n        apiRef.current.publishEvent('rowEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleRowEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startRowEditModeParams = {\n      id,\n      fieldToFocus: field\n    };\n    if (reason === GridRowEditStartReasons.printableKeyDown || reason === GridRowEditStartReasons.deleteKeyDown) {\n      startRowEditModeParams.deleteValue = !!field;\n    }\n    apiRef.current.startRowEditMode(startRowEditModeParams);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback(params => {\n    const {\n      id,\n      reason,\n      field\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    let cellToFocusAfter;\n    if (reason === GridRowEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridRowEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridRowEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopRowEditMode({\n      id,\n      ignoreModifications,\n      field,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsRow(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfEditModeIsRow(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsRow(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsRow(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'rowEditStart', runIfEditModeIsRow(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', runIfEditModeIsRow(handleRowEditStop));\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && Object.keys(editingState[id]).length > 0;\n    return isEditing ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const updateRowModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.rowModesModel;\n    if (onRowModesModelChange && isNewModelDifferentFromProp) {\n      onRowModesModelChange(newModel, {});\n    }\n    if (props.rowModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setRowModesModel(newModel);\n    rowModesModelRef.current = newModel;\n    apiRef.current.publishEvent('rowModesModelChange', newModel);\n  });\n  const updateRowInRowModesModel = React.useCallback((id, newProps) => {\n    const newModel = _extends({}, rowModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newProps);\n    } else {\n      delete newModel[id];\n    }\n    updateRowModesModel(newModel);\n  }, [updateRowModesModel]);\n  const updateOrDeleteRowState = React.useCallback((id, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = newProps;\n      } else {\n        delete newEditingState[id];\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotInMode(id, GridRowModes.View);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.Edit\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStartRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      fieldToFocus,\n      deleteValue,\n      initialValue\n    } = params;\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const newProps = columnFields.reduce((acc, field) => {\n      const cellParams = apiRef.current.getCellParams(id, field);\n      if (!cellParams.isEditable) {\n        return acc;\n      }\n      let newValue = apiRef.current.getCellValue(id, field);\n      if (fieldToFocus === field && (deleteValue || initialValue)) {\n        newValue = deleteValue ? '' : initialValue;\n      }\n      acc[field] = {\n        value: newValue,\n        error: false,\n        isProcessingProps: false\n      };\n      return acc;\n    }, {});\n    updateOrDeleteRowState(id, newProps);\n    if (fieldToFocus) {\n      apiRef.current.setCellFocus(id, fieldToFocus);\n    }\n  });\n  const stopRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, GridRowModes.Edit);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.View\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStopRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      ignoreModifications,\n      field: focusedField,\n      cellToFocusAfter = 'none'\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    const finishRowEditMode = () => {\n      if (cellToFocusAfter !== 'none' && focusedField) {\n        apiRef.current.moveFocusToRelativeCell(id, focusedField, cellToFocusAfter);\n      }\n      updateOrDeleteRowState(id, null);\n      updateRowInRowModesModel(id, null);\n    };\n    if (ignoreModifications) {\n      finishRowEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    const isSomeFieldProcessingProps = Object.values(editingState[id]).some(fieldProps => fieldProps.isProcessingProps);\n    if (isSomeFieldProcessingProps) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      return;\n    }\n    const hasSomeFieldWithError = Object.values(editingState[id]).some(fieldProps => fieldProps.error);\n    if (hasSomeFieldWithError) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      // Revert the mode in the rowModesModel prop back to \"edit\"\n      updateRowInRowModesModel(id, {\n        mode: GridRowModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevRowModesModel.current[id].mode = GridRowModes.Edit;\n        // Revert the mode in the rowModesModel prop back to \"edit\"\n        updateRowInRowModesModel(id, {\n          mode: GridRowModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n      try {\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishRowEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishRowEditMode();\n    }\n  });\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, apiRef.current.getCellParams(id, field));\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (!column.preProcessEditCellProps) {\n      updateOrDeleteFieldState(id, field, newProps);\n    }\n    return new Promise(resolve => {\n      const promises = [];\n      if (column.preProcessEditCellProps) {\n        const hasChanged = newProps.value !== editingState[id][field].value;\n        newProps = _extends({}, newProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, field, newProps);\n        const _editingState$id = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id, [field].map(_toPropertyKey));\n        const promise = Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: newProps,\n          hasChanged,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          // We don't reuse the value from the props pre-processing because when the\n          // promise resolves it may be already outdated. The only exception to this rule\n          // is when there's no pre-processing.\n          processedProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n          updateOrDeleteFieldState(id, field, processedProps);\n        });\n        promises.push(promise);\n      }\n      Object.entries(editingState[id]).forEach(([thisField, fieldProps]) => {\n        if (thisField === field) {\n          return;\n        }\n        const fieldColumn = apiRef.current.getColumn(thisField);\n        if (!fieldColumn.preProcessEditCellProps) {\n          return;\n        }\n        fieldProps = _extends({}, fieldProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, thisField, fieldProps);\n        editingState = gridEditRowsStateSelector(apiRef.current.state);\n        const _editingState$id2 = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id2, [thisField].map(_toPropertyKey));\n        const promise = Promise.resolve(fieldColumn.preProcessEditCellProps({\n          id,\n          row,\n          props: fieldProps,\n          hasChanged: false,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          updateOrDeleteFieldState(id, thisField, processedProps);\n        });\n        promises.push(promise);\n      });\n      Promise.all(promises).then(() => {\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          resolve(!editingState[id][field].error);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }, [apiRef, throwIfNotEditable, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromRowEditing = React.useCallback(id => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id]) {\n      return apiRef.current.getRow(id);\n    }\n    let rowUpdate = _extends({}, row);\n    Object.entries(editingState[id]).forEach(([field, fieldProps]) => {\n      const column = apiRef.current.getColumn(field);\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter({\n          value: fieldProps.value,\n          row: rowUpdate\n        });\n      } else {\n        rowUpdate[field] = fieldProps.value;\n      }\n    });\n    return rowUpdate;\n  }, [apiRef]);\n  const editingApi = {\n    getRowMode,\n    startRowEditMode,\n    stopRowEditMode\n  };\n  const editingPrivateApi = {\n    setRowEditingEditCellValue,\n    getRowWithUpdatedValuesFromRowEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (rowModesModelProp) {\n      updateRowModesModel(rowModesModelProp);\n    }\n  }, [rowModesModelProp, updateRowModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopRowEditMode may change it later\n    const copyOfPrevRowModesModel = prevRowModesModel.current;\n    prevRowModesModel.current = deepClone(rowModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(rowModesModel).forEach(([id, params]) => {\n      var _copyOfPrevRowModesMo, _idToIdLookup$id;\n      const prevMode = ((_copyOfPrevRowModesMo = copyOfPrevRowModesModel[id]) == null ? void 0 : _copyOfPrevRowModesMo.mode) || GridRowModes.View;\n      const originalId = (_idToIdLookup$id = idToIdLookup[id]) != null ? _idToIdLookup$id : id;\n      if (params.mode === GridRowModes.Edit && prevMode === GridRowModes.View) {\n        updateStateToStartRowEditMode(_extends({\n          id: originalId\n        }, params));\n      } else if (params.mode === GridRowModes.View && prevMode === GridRowModes.Edit) {\n        updateStateToStopRowEditMode(_extends({\n          id: originalId\n        }, params));\n      }\n    });\n  }, [apiRef, rowModesModel, updateStateToStartRowEditMode, updateStateToStopRowEditMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridCellEditing } from './useGridCellEditing';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { useGridRowEditing } from './useGridRowEditing';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isAutoGeneratedRow } from '../rows/gridRowsUtils';\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (isAutoGeneratedRow(params.rowNode)) {\n      return false;\n    }\n    if (!params.colDef.editable) {\n      return false;\n    }\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n    return true;\n  }, [isCellEditableProp]);\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    // To run the callback immediately without waiting the timeout\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.setRowEditingEditCellValue : apiRef.current.setCellEditingEditCellValue;\n\n        // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    var _editingState$id$fiel, _editingState$id;\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return (_editingState$id$fiel = (_editingState$id = editingState[id]) == null ? void 0 : _editingState$id[field]) != null ? _editingState$id$fiel : null;\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  const editingSharedPrivateApi = {\n    runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'public');\n  useGridApiMethod(apiRef, editingSharedPrivateApi, 'private');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowCountSelector, gridRowsLookupSelector, gridRowTreeSelector, gridRowGroupingNameSelector, gridRowTreeDepthsSelector, gridDataRowIdsSelector, gridRowsDataRowIdToIdLookupSelector, gridRowMaximumTreeDepthSelector } from './gridRowsSelector';\nimport { useTimeout } from '../../utils/useTimeout';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridSortedRowIdsSelector } from '../sorting/gridSortingSelector';\nimport { gridFilteredRowsLookupSelector } from '../filter/gridFilterSelector';\nimport { getTreeNodeDescendants, createRowsInternalCache, getRowsStateFromCache, isAutoGeneratedRow, GRID_ROOT_GROUP_ID, GRID_ID_AUTOGENERATED, updateCacheWithNewRows, getTopLevelRowCount, getRowIdFromRowModel } from './gridRowsUtils';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nexport const rowsStateInitializer = (state, props, apiRef) => {\n  apiRef.current.caches.rows = createRowsInternalCache({\n    rows: props.rows,\n    getRowId: props.getRowId,\n    loading: props.loading,\n    rowCount: props.rowCount\n  });\n  return _extends({}, state, {\n    rows: getRowsStateFromCache({\n      apiRef,\n      rowCountProp: props.rowCount,\n      loadingProp: props.loading,\n      previousTree: null,\n      previousTreeDepths: null\n    })\n  });\n};\nexport const useGridRows = (apiRef, props) => {\n  if (process.env.NODE_ENV !== 'production') {\n    try {\n      // Freeze the `rows` prop so developers have a fast failure if they try to use Array.prototype.push().\n      Object.freeze(props.rows);\n    } catch (error) {\n      // Sometimes, it's impossible to freeze, so we give up on it.\n    }\n  }\n  const logger = useGridLogger(apiRef, 'useGridRows');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const lastUpdateMs = React.useRef(Date.now());\n  const timeout = useTimeout();\n  const getRow = React.useCallback(id => {\n    const model = gridRowsLookupSelector(apiRef)[id];\n    if (model) {\n      return model;\n    }\n    const node = apiRef.current.getRowNode(id);\n    if (node && isAutoGeneratedRow(node)) {\n      return {\n        [GRID_ID_AUTOGENERATED]: id\n      };\n    }\n    return null;\n  }, [apiRef]);\n  const getRowIdProp = props.getRowId;\n  const getRowId = React.useCallback(row => {\n    if (GRID_ID_AUTOGENERATED in row) {\n      return row[GRID_ID_AUTOGENERATED];\n    }\n    if (getRowIdProp) {\n      return getRowIdProp(row);\n    }\n    return row.id;\n  }, [getRowIdProp]);\n  const lookup = React.useMemo(() => currentPage.rows.reduce((acc, {\n    id\n  }, index) => {\n    acc[id] = index;\n    return acc;\n  }, {}), [currentPage.rows]);\n  const throttledRowsChange = React.useCallback(({\n    cache,\n    throttle\n  }) => {\n    const run = () => {\n      lastUpdateMs.current = Date.now();\n      apiRef.current.setState(state => _extends({}, state, {\n        rows: getRowsStateFromCache({\n          apiRef,\n          rowCountProp: props.rowCount,\n          loadingProp: props.loading,\n          previousTree: gridRowTreeSelector(apiRef),\n          previousTreeDepths: gridRowTreeDepthsSelector(apiRef)\n        })\n      }));\n      apiRef.current.publishEvent('rowsSet');\n      apiRef.current.forceUpdate();\n    };\n    timeout.clear();\n    apiRef.current.caches.rows = cache;\n    if (!throttle) {\n      run();\n      return;\n    }\n    const throttleRemainingTimeMs = props.throttleRowsMs - (Date.now() - lastUpdateMs.current);\n    if (throttleRemainingTimeMs > 0) {\n      timeout.start(throttleRemainingTimeMs, run);\n      return;\n    }\n    run();\n  }, [props.throttleRowsMs, props.rowCount, props.loading, apiRef, timeout]);\n\n  /**\n   * API METHODS\n   */\n  const setRows = React.useCallback(rows => {\n    logger.debug(`Updating all rows, new length ${rows.length}`);\n    const cache = createRowsInternalCache({\n      rows,\n      getRowId: props.getRowId,\n      loading: props.loading,\n      rowCount: props.rowCount\n    });\n    const prevCache = apiRef.current.caches.rows;\n    cache.rowsBeforePartialUpdates = prevCache.rowsBeforePartialUpdates;\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [logger, props.getRowId, props.loading, props.rowCount, throttledRowsChange, apiRef]);\n  const updateRows = React.useCallback(updates => {\n    if (props.signature === GridSignature.DataGrid && updates.length > 1) {\n      throw new Error([\"MUI: You can't update several rows at once in `apiRef.current.updateRows` on the DataGrid.\", 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    const nonPinnedRowsUpdates = [];\n    updates.forEach(update => {\n      const id = getRowIdFromRowModel(update, props.getRowId, 'A row was provided without id when calling updateRows():');\n      const rowNode = apiRef.current.getRowNode(id);\n      if ((rowNode == null ? void 0 : rowNode.type) === 'pinnedRow') {\n        // @ts-ignore because otherwise `release:build` doesn't work\n        const pinnedRowsCache = apiRef.current.caches.pinnedRows;\n        const prevModel = pinnedRowsCache.idLookup[id];\n        if (prevModel) {\n          pinnedRowsCache.idLookup[id] = _extends({}, prevModel, update);\n        }\n      } else {\n        nonPinnedRowsUpdates.push(update);\n      }\n    });\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows\n    });\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [props.signature, props.getRowId, throttledRowsChange, apiRef]);\n  const getRowModels = React.useCallback(() => {\n    const dataRows = gridDataRowIdsSelector(apiRef);\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    return new Map(dataRows.map(id => {\n      var _idRowsLookup$id;\n      return [id, (_idRowsLookup$id = idRowsLookup[id]) != null ? _idRowsLookup$id : {}];\n    }));\n  }, [apiRef]);\n  const getRowsCount = React.useCallback(() => gridRowCountSelector(apiRef), [apiRef]);\n  const getAllRowIds = React.useCallback(() => gridDataRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndexRelativeToVisibleRows = React.useCallback(id => lookup[id], [lookup]);\n  const setRowChildrenExpansion = React.useCallback((id, isExpanded) => {\n    const currentNode = apiRef.current.getRowNode(id);\n    if (!currentNode) {\n      throw new Error(`MUI: No row with id #${id} found`);\n    }\n    if (currentNode.type !== 'group') {\n      throw new Error('MUI: Only group nodes can be expanded or collapsed');\n    }\n    const newNode = _extends({}, currentNode, {\n      childrenExpanded: isExpanded\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [id]: newNode\n          })\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('rowExpansionChange', newNode);\n  }, [apiRef]);\n  const getRowNode = React.useCallback(id => {\n    var _ref;\n    return (_ref = gridRowTreeSelector(apiRef)[id]) != null ? _ref : null;\n  }, [apiRef]);\n  const getRowGroupChildren = React.useCallback(({\n    skipAutoGeneratedRows = true,\n    groupId,\n    applySorting,\n    applyFiltering\n  }) => {\n    const tree = gridRowTreeSelector(apiRef);\n    let children;\n    if (applySorting) {\n      const groupNode = tree[groupId];\n      if (!groupNode) {\n        return [];\n      }\n      const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n      children = [];\n      const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n      for (let index = startIndex; index < sortedRowIds.length && tree[sortedRowIds[index]].depth > groupNode.depth; index += 1) {\n        const id = sortedRowIds[index];\n        if (!skipAutoGeneratedRows || !isAutoGeneratedRow(tree[id])) {\n          children.push(id);\n        }\n      }\n    } else {\n      children = getTreeNodeDescendants(tree, groupId, skipAutoGeneratedRows);\n    }\n    if (applyFiltering) {\n      const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n      children = children.filter(childId => filteredRowsLookup[childId] !== false);\n    }\n    return children;\n  }, [apiRef]);\n  const setRowIndex = React.useCallback((rowId, targetIndex) => {\n    const node = apiRef.current.getRowNode(rowId);\n    if (!node) {\n      throw new Error(`MUI: No row with id #${rowId} found`);\n    }\n    if (node.parent !== GRID_ROOT_GROUP_ID) {\n      throw new Error(`MUI: The row reordering do not support reordering of grouped rows yet`);\n    }\n    if (node.type !== 'leaf') {\n      throw new Error(`MUI: The row reordering do not support reordering of footer or grouping rows`);\n    }\n    apiRef.current.setState(state => {\n      const group = gridRowTreeSelector(state, apiRef.current.instanceId)[GRID_ROOT_GROUP_ID];\n      const allRows = group.children;\n      const oldIndex = allRows.findIndex(row => row === rowId);\n      if (oldIndex === -1 || oldIndex === targetIndex) {\n        return state;\n      }\n      logger.debug(`Moving row ${rowId} to index ${targetIndex}`);\n      const updatedRows = [...allRows];\n      updatedRows.splice(targetIndex, 0, updatedRows.splice(oldIndex, 1)[0]);\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [GRID_ROOT_GROUP_ID]: _extends({}, group, {\n              children: updatedRows\n            })\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, logger]);\n  const replaceRows = React.useCallback((firstRowToRender, newRows) => {\n    if (props.signature === GridSignature.DataGrid && newRows.length > 1) {\n      throw new Error([\"MUI: You can't replace rows using `apiRef.current.unstable_replaceRows` on the DataGrid.\", 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    if (newRows.length === 0) {\n      return;\n    }\n    const treeDepth = gridRowMaximumTreeDepthSelector(apiRef);\n    if (treeDepth > 1) {\n      throw new Error('`apiRef.current.unstable_replaceRows` is not compatible with tree data and row grouping');\n    }\n    const tree = _extends({}, gridRowTreeSelector(apiRef));\n    const dataRowIdToModelLookup = _extends({}, gridRowsLookupSelector(apiRef));\n    const dataRowIdToIdLookup = _extends({}, gridRowsDataRowIdToIdLookupSelector(apiRef));\n    const rootGroup = tree[GRID_ROOT_GROUP_ID];\n    const rootGroupChildren = [...rootGroup.children];\n    for (let i = 0; i < newRows.length; i += 1) {\n      const rowModel = newRows[i];\n      const rowId = getRowIdFromRowModel(rowModel, props.getRowId, 'A row was provided without id when calling replaceRows().');\n      const [replacedRowId] = rootGroupChildren.splice(firstRowToRender + i, 1, rowId);\n      delete dataRowIdToModelLookup[replacedRowId];\n      delete dataRowIdToIdLookup[replacedRowId];\n      delete tree[replacedRowId];\n      const rowTreeNodeConfig = {\n        id: rowId,\n        depth: 0,\n        parent: GRID_ROOT_GROUP_ID,\n        type: 'leaf',\n        groupingKey: null\n      };\n      dataRowIdToModelLookup[rowId] = rowModel;\n      dataRowIdToIdLookup[rowId] = rowId;\n      tree[rowId] = rowTreeNodeConfig;\n    }\n    tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n      children: rootGroupChildren\n    });\n\n    // Removes potential remaining skeleton rows from the dataRowIds.\n    const dataRowIds = rootGroupChildren.filter(childId => tree[childId].type === 'leaf');\n    apiRef.current.caches.rows.dataRowIdToModelLookup = dataRowIdToModelLookup;\n    apiRef.current.caches.rows.dataRowIdToIdLookup = dataRowIdToIdLookup;\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        dataRowIdToModelLookup,\n        dataRowIdToIdLookup,\n        dataRowIds,\n        tree\n      })\n    }));\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, props.signature, props.getRowId]);\n  const rowApi = {\n    getRow,\n    getRowId,\n    getRowModels,\n    getRowsCount,\n    getAllRowIds,\n    setRows,\n    updateRows,\n    getRowNode,\n    getRowIndexRelativeToVisibleRows,\n    unstable_replaceRows: replaceRows\n  };\n  const rowProApi = {\n    setRowIndex,\n    setRowChildrenExpansion,\n    getRowGroupChildren\n  };\n\n  /**\n   * EVENTS\n   */\n  const groupRows = React.useCallback(() => {\n    logger.info(`Row grouping pre-processing have changed, regenerating the row tree`);\n    let cache;\n    if (apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows) {\n      // The `props.rows` did not change since the last row grouping\n      // We can use the current rows cache which contains the partial updates done recently.\n      cache = _extends({}, apiRef.current.caches.rows, {\n        updates: {\n          type: 'full',\n          rows: gridDataRowIdsSelector(apiRef)\n        }\n      });\n    } else {\n      // The `props.rows` has changed since the last row grouping\n      // We must use the new `props.rows` on the new grouping\n      // This occurs because this event is triggered before the `useEffect` on the rows when both the grouping pre-processing and the rows changes on the same render\n      cache = createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      });\n    }\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [logger, apiRef, props.rows, props.getRowId, props.loading, props.rowCount, throttledRowsChange]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'rowTreeCreation') {\n      groupRows();\n    }\n  }, [groupRows]);\n  const handleStrategyActivityChange = React.useCallback(() => {\n    // `rowTreeCreation` is the only processor ran when `strategyAvailabilityChange` is fired.\n    // All the other processors listen to `rowsSet` which will be published by the `groupRows` method below.\n    if (apiRef.current.getActiveStrategy('rowTree') !== gridRowGroupingNameSelector(apiRef)) {\n      groupRows();\n    }\n  }, [apiRef, groupRows]);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'strategyAvailabilityChange', handleStrategyActivityChange);\n\n  /**\n   * APPLIERS\n   */\n  const applyHydrateRowsProcessor = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const response = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n        tree: gridRowTreeSelector(state, apiRef.current.instanceId),\n        treeDepths: gridRowTreeDepthsSelector(state, apiRef.current.instanceId),\n        dataRowIds: gridDataRowIdsSelector(state, apiRef.current.instanceId),\n        dataRowIdToModelLookup: gridRowsLookupSelector(state, apiRef.current.instanceId),\n        dataRowIdToIdLookup: gridRowsDataRowIdToIdLookupSelector(state, apiRef.current.instanceId)\n      });\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, response, {\n          totalTopLevelRowCount: getTopLevelRowCount({\n            tree: response.tree,\n            rowCountProp: props.rowCount\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.rowCount]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateRows', applyHydrateRowsProcessor);\n  useGridApiMethod(apiRef, rowApi, 'public');\n  useGridApiMethod(apiRef, rowProApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridRows`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    const areNewRowsAlreadyInState = apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows;\n    const isNewLoadingAlreadyInState = apiRef.current.caches.rows.loadingPropBeforePartialUpdates === props.loading;\n    const isNewRowCountAlreadyInState = apiRef.current.caches.rows.rowCountPropBeforePartialUpdates === props.rowCount;\n\n    // The new rows have already been applied (most likely in the `'rowGroupsPreProcessingChange'` listener)\n    if (areNewRowsAlreadyInState) {\n      // If the loading prop has changed, we need to update its value in the state because it won't be done by `throttledRowsChange`\n      if (!isNewLoadingAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            loading: props.loading\n          })\n        }));\n        apiRef.current.caches.rows.loadingPropBeforePartialUpdates = props.loading;\n        apiRef.current.forceUpdate();\n      }\n      if (!isNewRowCountAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            totalRowCount: Math.max(props.rowCount || 0, state.rows.totalRowCount),\n            totalTopLevelRowCount: Math.max(props.rowCount || 0, state.rows.totalTopLevelRowCount)\n          })\n        }));\n        apiRef.current.caches.rows.rowCountPropBeforePartialUpdates = props.rowCount;\n        apiRef.current.forceUpdate();\n      }\n      return;\n    }\n    logger.debug(`Updating all rows, new length ${props.rows.length}`);\n    throttledRowsChange({\n      cache: createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      }),\n      throttle: false\n    });\n  }, [props.rows, props.rowCount, props.getRowId, props.loading, logger, throttledRowsChange, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\nimport { buildRootGroup, GRID_ROOT_GROUP_ID } from './gridRowsUtils';\nconst createFlatRowTree = rows => {\n  const tree = {\n    [GRID_ROOT_GROUP_ID]: _extends({}, buildRootGroup(), {\n      children: rows\n    })\n  };\n  for (let i = 0; i < rows.length; i += 1) {\n    const rowId = rows[i];\n    tree[rowId] = {\n      id: rowId,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rows.length\n    },\n    dataRowIds: rows\n  };\n};\nconst updateFlatRowTree = ({\n  previousTree,\n  actions\n}) => {\n  const tree = _extends({}, previousTree);\n  const idsToRemoveFromRootGroup = {};\n  for (let i = 0; i < actions.remove.length; i += 1) {\n    const idToDelete = actions.remove[i];\n    idsToRemoveFromRootGroup[idToDelete] = true;\n    delete tree[idToDelete];\n  }\n  for (let i = 0; i < actions.insert.length; i += 1) {\n    const idToInsert = actions.insert[i];\n    tree[idToInsert] = {\n      id: idToInsert,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n\n  // TODO rows v6: Support row unpinning\n\n  const rootGroup = tree[GRID_ROOT_GROUP_ID];\n  let rootGroupChildren = [...rootGroup.children, ...actions.insert];\n  if (Object.values(idsToRemoveFromRootGroup).length) {\n    rootGroupChildren = rootGroupChildren.filter(id => !idsToRemoveFromRootGroup[id]);\n  }\n  tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n    children: rootGroupChildren\n  });\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rootGroupChildren.length\n    },\n    dataRowIds: rootGroupChildren\n  };\n};\nconst flatRowTreeCreationMethod = params => {\n  if (params.updates.type === 'full') {\n    return createFlatRowTree(params.updates.rows);\n  }\n  return updateFlatRowTree({\n    previousTree: params.previousTree,\n    actions: params.updates.actions\n  });\n};\nexport const useGridRowsPreProcessors = apiRef => {\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'rowTreeCreation', flatRowTreeCreationMethod);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nimport { gridRowSelectionStateSelector, selectedGridRowsSelector, selectedIdsLookupSelector } from './gridRowSelectionSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../pagination';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { gridExpandedSortedRowIdsSelector } from '../filter/gridFilterSelector';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from '../../../colDef';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isKeyboardEvent, isNavigationKey } from '../../../utils/keyboardUtils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { isEventTargetInPortal } from '../../../utils/domUtils';\nconst getSelectionModelPropValue = (selectionModelProp, prevSelectionModel) => {\n  if (selectionModelProp == null) {\n    return selectionModelProp;\n  }\n  if (Array.isArray(selectionModelProp)) {\n    return selectionModelProp;\n  }\n  if (prevSelectionModel && prevSelectionModel[0] === selectionModelProp) {\n    return prevSelectionModel;\n  }\n  return [selectionModelProp];\n};\nexport const rowSelectionStateInitializer = (state, props) => {\n  var _getSelectionModelPro;\n  return _extends({}, state, {\n    rowSelection: props.rowSelection ? (_getSelectionModelPro = getSelectionModelPropValue(props.rowSelectionModel)) != null ? _getSelectionModelPro : [] : []\n  });\n};\n\n/**\n * @requires useGridRows (state, method) - can be after\n * @requires useGridParamsApi (method) - can be after\n * @requires useGridFocus (state) - can be after\n * @requires useGridKeyboardNavigation (`cellKeyDown` event must first be consumed by it)\n */\nexport const useGridRowSelection = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSelection');\n  const runIfRowSelectionIsEnabled = callback => (...args) => {\n    if (props.rowSelection) {\n      callback(...args);\n    }\n  };\n  const propRowSelectionModel = React.useMemo(() => {\n    return getSelectionModelPropValue(props.rowSelectionModel, gridRowSelectionStateSelector(apiRef.current.state));\n  }, [apiRef, props.rowSelectionModel]);\n  const lastRowToggled = React.useRef(null);\n  apiRef.current.registerControlState({\n    stateId: 'rowSelection',\n    propModel: propRowSelectionModel,\n    propOnChange: props.onRowSelectionModelChange,\n    stateSelector: gridRowSelectionStateSelector,\n    changeEvent: 'rowSelectionChange'\n  });\n  const {\n    checkboxSelection,\n    disableMultipleRowSelection,\n    disableRowSelectionOnClick,\n    isRowSelectable: propIsRowSelectable\n  } = props;\n  const canHaveMultipleSelection = !disableMultipleRowSelection || checkboxSelection;\n  const visibleRows = useGridVisibleRows(apiRef, props);\n  const expandMouseRowRangeSelection = React.useCallback(id => {\n    var _lastRowToggled$curre;\n    let endId = id;\n    const startId = (_lastRowToggled$curre = lastRowToggled.current) != null ? _lastRowToggled$curre : id;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (isSelected) {\n      const visibleRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n      const startIndex = visibleRowIds.findIndex(rowId => rowId === startId);\n      const endIndex = visibleRowIds.findIndex(rowId => rowId === endId);\n      if (startIndex === endIndex) {\n        return;\n      }\n      if (startIndex > endIndex) {\n        endId = visibleRowIds[endIndex + 1];\n      } else {\n        endId = visibleRowIds[endIndex - 1];\n      }\n    }\n    lastRowToggled.current = id;\n    apiRef.current.selectRowRange({\n      startId,\n      endId\n    }, !isSelected);\n  }, [apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const setRowSelectionModel = React.useCallback(model => {\n    if (props.signature === GridSignature.DataGrid && !props.checkboxSelection && Array.isArray(model) && model.length > 1) {\n      throw new Error(['MUI: `rowSelectionModel` can only contain 1 item in DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection.'].join('\\n'));\n    }\n    const currentModel = gridRowSelectionStateSelector(apiRef.current.state);\n    if (currentModel !== model) {\n      logger.debug(`Setting selection model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        rowSelection: props.rowSelection ? model : []\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger, props.rowSelection, props.signature, props.checkboxSelection]);\n  const isRowSelected = React.useCallback(id => gridRowSelectionStateSelector(apiRef.current.state).includes(id), [apiRef]);\n  const isRowSelectable = React.useCallback(id => {\n    if (propIsRowSelectable && !propIsRowSelectable(apiRef.current.getRowParams(id))) {\n      return false;\n    }\n    const rowNode = apiRef.current.getRowNode(id);\n    if ((rowNode == null ? void 0 : rowNode.type) === 'footer' || (rowNode == null ? void 0 : rowNode.type) === 'pinnedRow') {\n      return false;\n    }\n    return true;\n  }, [apiRef, propIsRowSelectable]);\n  const getSelectedRows = React.useCallback(() => selectedGridRowsSelector(apiRef), [apiRef]);\n  const selectRow = React.useCallback((id, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.isRowSelectable(id)) {\n      return;\n    }\n    lastRowToggled.current = id;\n    if (resetSelection) {\n      logger.debug(`Setting selection for row ${id}`);\n      apiRef.current.setRowSelectionModel(isSelected ? [id] : []);\n    } else {\n      logger.debug(`Toggling selection for row ${id}`);\n      const selection = gridRowSelectionStateSelector(apiRef.current.state);\n      const newSelection = selection.filter(el => el !== id);\n      if (isSelected) {\n        newSelection.push(id);\n      }\n      const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n      if (isSelectionValid) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRows = React.useCallback((ids, isSelected = true, resetSelection = false) => {\n    logger.debug(`Setting selection for several rows`);\n    const selectableIds = ids.filter(id => apiRef.current.isRowSelectable(id));\n    let newSelection;\n    if (resetSelection) {\n      newSelection = isSelected ? selectableIds : [];\n    } else {\n      // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n      const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n      selectableIds.forEach(id => {\n        if (isSelected) {\n          selectionLookup[id] = id;\n        } else {\n          delete selectionLookup[id];\n        }\n      });\n      newSelection = Object.values(selectionLookup);\n    }\n    const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n    if (isSelectionValid) {\n      apiRef.current.setRowSelectionModel(newSelection);\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRowRange = React.useCallback(({\n    startId,\n    endId\n  }, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.getRow(startId) || !apiRef.current.getRow(endId)) {\n      return;\n    }\n    logger.debug(`Expanding selection from row ${startId} to row ${endId}`);\n\n    // Using rows from all pages allow to select a range across several pages\n    const allPagesRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n    const startIndex = allPagesRowIds.indexOf(startId);\n    const endIndex = allPagesRowIds.indexOf(endId);\n    const [start, end] = startIndex > endIndex ? [endIndex, startIndex] : [startIndex, endIndex];\n    const rowsBetweenStartAndEnd = allPagesRowIds.slice(start, end + 1);\n    apiRef.current.selectRows(rowsBetweenStartAndEnd, isSelected, resetSelection);\n  }, [apiRef, logger]);\n  const selectionPublicApi = {\n    selectRow,\n    setRowSelectionModel,\n    getSelectedRows,\n    isRowSelected,\n    isRowSelectable\n  };\n  const selectionPrivateApi = {\n    selectRows,\n    selectRowRange\n  };\n  useGridApiMethod(apiRef, selectionPublicApi, 'public');\n  useGridApiMethod(apiRef, selectionPrivateApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * EVENTS\n   */\n  const removeOutdatedSelection = React.useCallback(() => {\n    if (props.keepNonExistentRowsSelected) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    const rowsLookup = gridRowsLookupSelector(apiRef);\n\n    // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n    const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n    let hasChanged = false;\n    currentSelection.forEach(id => {\n      if (!rowsLookup[id]) {\n        delete selectionLookup[id];\n        hasChanged = true;\n      }\n    });\n    if (hasChanged) {\n      apiRef.current.setRowSelectionModel(Object.values(selectionLookup));\n    }\n  }, [apiRef, props.keepNonExistentRowsSelected]);\n  const handleSingleRowSelection = React.useCallback((id, event) => {\n    const hasCtrlKey = event.metaKey || event.ctrlKey;\n\n    // multiple selection is only allowed if:\n    // - it is a checkboxSelection\n    // - it is a keyboard selection\n    // - Ctrl is pressed\n\n    const isMultipleSelectionDisabled = !checkboxSelection && !hasCtrlKey && !isKeyboardEvent(event);\n    const resetSelection = !canHaveMultipleSelection || isMultipleSelectionDisabled;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (resetSelection) {\n      apiRef.current.selectRow(id, !isMultipleSelectionDisabled ? !isSelected : true, true);\n    } else {\n      apiRef.current.selectRow(id, !isSelected, false);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection]);\n  const handleRowClick = React.useCallback((params, event) => {\n    var _closest;\n    if (disableRowSelectionOnClick) {\n      return;\n    }\n    const field = (_closest = event.target.closest(`.${gridClasses.cell}`)) == null ? void 0 : _closest.getAttribute('data-field');\n    if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // click on checkbox should not trigger row selection\n      return;\n    }\n    if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      // click to open the detail panel should not select the row\n      return;\n    }\n    if (field) {\n      const column = apiRef.current.getColumn(field);\n      if ((column == null ? void 0 : column.type) === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    const rowNode = apiRef.current.getRowNode(params.id);\n    if (rowNode.type === 'pinnedRow') {\n      return;\n    }\n    if (event.shiftKey && (canHaveMultipleSelection || checkboxSelection)) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      handleSingleRowSelection(params.id, event);\n    }\n  }, [disableRowSelectionOnClick, canHaveMultipleSelection, checkboxSelection, apiRef, expandMouseRowRangeSelection, handleSingleRowSelection]);\n  const preventSelectionOnShift = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.shiftKey) {\n      var _window$getSelection;\n      (_window$getSelection = window.getSelection()) == null || _window$getSelection.removeAllRanges();\n    }\n  }, [canHaveMultipleSelection]);\n  const handleRowSelectionCheckboxChange = React.useCallback((params, event) => {\n    if (event.nativeEvent.shiftKey) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      apiRef.current.selectRow(params.id, params.value);\n    }\n  }, [apiRef, expandMouseRowRangeSelection]);\n  const handleHeaderSelectionCheckboxChange = React.useCallback(params => {\n    const shouldLimitSelectionToCurrentPage = props.checkboxSelectionVisibleOnly && props.pagination;\n    const rowsToBeSelected = shouldLimitSelectionToCurrentPage ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridExpandedSortedRowIdsSelector(apiRef);\n    apiRef.current.selectRows(rowsToBeSelected, params.value);\n  }, [apiRef, props.checkboxSelectionVisibleOnly, props.pagination]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Get the most recent cell mode because it may have been changed by another listener\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.Edit) {\n      return;\n    }\n\n    // Ignore portal\n    // Do not apply shortcuts if the focus is not on the cell root component\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    if (isNavigationKey(event.key) && event.shiftKey) {\n      // The cell that has focus after the keyboard navigation\n      const focusCell = gridFocusCellSelector(apiRef);\n      if (focusCell && focusCell.id !== params.id) {\n        event.preventDefault();\n        const isNextRowSelected = apiRef.current.isRowSelected(focusCell.id);\n        if (!canHaveMultipleSelection) {\n          apiRef.current.selectRow(focusCell.id, !isNextRowSelected, true);\n          return;\n        }\n        const newRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id);\n        const previousRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\n        let start;\n        let end;\n        if (newRowIndex > previousRowIndex) {\n          if (isNextRowSelected) {\n            // We are navigating to the bottom of the page and adding selected rows\n            start = previousRowIndex;\n            end = newRowIndex - 1;\n          } else {\n            // We are navigating to the bottom of the page and removing selected rows\n            start = previousRowIndex;\n            end = newRowIndex;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isNextRowSelected) {\n            // We are navigating to the top of the page and removing selected rows\n            start = newRowIndex + 1;\n            end = previousRowIndex;\n          } else {\n            // We are navigating to the top of the page and adding selected rows\n            start = newRowIndex;\n            end = previousRowIndex;\n          }\n        }\n        const rowsBetweenStartAndEnd = visibleRows.rows.slice(start, end + 1).map(row => row.id);\n        apiRef.current.selectRows(rowsBetweenStartAndEnd, !isNextRowSelected);\n        return;\n      }\n    }\n    if (event.key === ' ' && event.shiftKey) {\n      event.preventDefault();\n      handleSingleRowSelection(params.id, event);\n      return;\n    }\n    if (event.key === 'a' && (event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n      selectRows(apiRef.current.getAllRowIds(), true);\n    }\n  }, [apiRef, handleSingleRowSelection, selectRows, visibleRows.rows, canHaveMultipleSelection]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', runIfRowSelectionIsEnabled(removeOutdatedSelection));\n  useGridApiEventHandler(apiRef, 'rowClick', runIfRowSelectionIsEnabled(handleRowClick));\n  useGridApiEventHandler(apiRef, 'rowSelectionCheckboxChange', runIfRowSelectionIsEnabled(handleRowSelectionCheckboxChange));\n  useGridApiEventHandler(apiRef, 'headerSelectionCheckboxChange', handleHeaderSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', runIfRowSelectionIsEnabled(preventSelectionOnShift));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfRowSelectionIsEnabled(handleCellKeyDown));\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (propRowSelectionModel !== undefined) {\n      apiRef.current.setRowSelectionModel(propRowSelectionModel);\n    }\n  }, [apiRef, propRowSelectionModel, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection) {\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, props.rowSelection]);\n  const isStateControlled = propRowSelectionModel != null;\n  React.useEffect(() => {\n    if (isStateControlled || !props.rowSelection) {\n      return;\n    }\n\n    // props.isRowSelectable changed\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (isRowSelectable) {\n      const newSelection = currentSelection.filter(id => isRowSelectable(id));\n      if (newSelection.length < currentSelection.length) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection || isStateControlled) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (!canHaveMultipleSelection && currentSelection.length > 1) {\n      // See https://github.com/mui/mui-x/issues/8455\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection, isStateControlled, props.rowSelection]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { isEnterKey } from '../../../utils/keyboardUtils';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortModelSelector } from './gridSortingSelector';\nimport { GRID_ROOT_GROUP_ID, gridRowTreeSelector } from '../rows';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { useGridRegisterStrategyProcessor, GRID_DEFAULT_STRATEGY } from '../../core/strategyProcessing';\nimport { buildAggregatedSortingApplier, mergeStateWithSortModel, getNextGridSortDirection, sanitizeSortModel } from './gridSortingUtils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { getTreeNodeDescendants } from '../rows/gridRowsUtils';\nexport const sortingStateInitializer = (state, props) => {\n  var _ref, _props$sortModel, _props$initialState;\n  const sortModel = (_ref = (_props$sortModel = props.sortModel) != null ? _props$sortModel : (_props$initialState = props.initialState) == null || (_props$initialState = _props$initialState.sorting) == null ? void 0 : _props$initialState.sortModel) != null ? _ref : [];\n  return _extends({}, state, {\n    sorting: {\n      sortModel: sanitizeSortModel(sortModel, props.disableMultipleColumnsSorting),\n      sortedRows: []\n    }\n  });\n};\n\n/**\n * @requires useGridRows (event)\n * @requires useGridColumns (event)\n */\nexport const useGridSorting = (apiRef, props) => {\n  var _props$initialState3;\n  const logger = useGridLogger(apiRef, 'useGridSorting');\n  apiRef.current.registerControlState({\n    stateId: 'sortModel',\n    propModel: props.sortModel,\n    propOnChange: props.onSortModelChange,\n    stateSelector: gridSortModelSelector,\n    changeEvent: 'sortModelChange'\n  });\n  const upsertSortModel = React.useCallback((field, sortItem) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existingIdx = sortModel.findIndex(c => c.field === field);\n    let newSortModel = [...sortModel];\n    if (existingIdx > -1) {\n      if (!sortItem) {\n        newSortModel.splice(existingIdx, 1);\n      } else {\n        newSortModel.splice(existingIdx, 1, sortItem);\n      }\n    } else {\n      newSortModel = [...sortModel, sortItem];\n    }\n    return newSortModel;\n  }, [apiRef]);\n  const createSortItem = React.useCallback((col, directionOverride) => {\n    var _col$sortingOrder2;\n    const sortModel = gridSortModelSelector(apiRef);\n    const existing = sortModel.find(c => c.field === col.field);\n    if (existing) {\n      var _col$sortingOrder;\n      const nextSort = directionOverride === undefined ? getNextGridSortDirection((_col$sortingOrder = col.sortingOrder) != null ? _col$sortingOrder : props.sortingOrder, existing.sort) : directionOverride;\n      return nextSort == null ? undefined : _extends({}, existing, {\n        sort: nextSort\n      });\n    }\n    return {\n      field: col.field,\n      sort: directionOverride === undefined ? getNextGridSortDirection((_col$sortingOrder2 = col.sortingOrder) != null ? _col$sortingOrder2 : props.sortingOrder) : directionOverride\n    };\n  }, [apiRef, props.sortingOrder]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.sortable === false) {\n      return columnMenuItems;\n    }\n    const sortingOrder = colDef.sortingOrder || props.sortingOrder;\n    if (sortingOrder.some(item => !!item)) {\n      return [...columnMenuItems, 'columnMenuSortItem'];\n    }\n    return columnMenuItems;\n  }, [props.sortingOrder]);\n\n  /**\n   * API METHODS\n   */\n  const applySorting = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (props.sortingMode === 'server') {\n        logger.debug('Skipping sorting rows as sortingMode = server');\n        return _extends({}, state, {\n          sorting: _extends({}, state.sorting, {\n            sortedRows: getTreeNodeDescendants(gridRowTreeSelector(apiRef), GRID_ROOT_GROUP_ID, false)\n          })\n        });\n      }\n      const sortModel = gridSortModelSelector(state, apiRef.current.instanceId);\n      const sortRowList = buildAggregatedSortingApplier(sortModel, apiRef);\n      const sortedRows = apiRef.current.applyStrategyProcessor('sorting', {\n        sortRowList\n      });\n      return _extends({}, state, {\n        sorting: _extends({}, state.sorting, {\n          sortedRows\n        })\n      });\n    });\n    apiRef.current.publishEvent('sortedRowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.sortingMode]);\n  const setSortModel = React.useCallback(model => {\n    const currentModel = gridSortModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug(`Setting sort model`);\n      apiRef.current.setState(mergeStateWithSortModel(model, props.disableMultipleColumnsSorting));\n      apiRef.current.forceUpdate();\n      apiRef.current.applySorting();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsSorting]);\n  const sortColumn = React.useCallback((column, direction, allowMultipleSorting) => {\n    if (!column.sortable) {\n      return;\n    }\n    const sortItem = createSortItem(column, direction);\n    let sortModel;\n    if (!allowMultipleSorting || props.disableMultipleColumnsSorting) {\n      sortModel = !sortItem ? [] : [sortItem];\n    } else {\n      sortModel = upsertSortModel(column.field, sortItem);\n    }\n    apiRef.current.setSortModel(sortModel);\n  }, [apiRef, upsertSortModel, createSortItem, props.disableMultipleColumnsSorting]);\n  const getSortModel = React.useCallback(() => gridSortModelSelector(apiRef), [apiRef]);\n  const getSortedRows = React.useCallback(() => {\n    const sortedRows = gridSortedRowEntriesSelector(apiRef);\n    return sortedRows.map(row => row.model);\n  }, [apiRef]);\n  const getSortedRowIds = React.useCallback(() => gridSortedRowIdsSelector(apiRef), [apiRef]);\n  const getRowIdFromRowIndex = React.useCallback(index => apiRef.current.getSortedRowIds()[index], [apiRef]);\n  const sortApi = {\n    getSortModel,\n    getSortedRows,\n    getSortedRowIds,\n    getRowIdFromRowIndex,\n    setSortModel,\n    sortColumn,\n    applySorting\n  };\n  useGridApiMethod(apiRef, sortApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState2;\n    const sortModelToExport = gridSortModelSelector(apiRef);\n    const shouldExportSortModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.sortModel != null ||\n    // Always export if the model has been initialized\n    ((_props$initialState2 = props.initialState) == null || (_props$initialState2 = _props$initialState2.sorting) == null ? void 0 : _props$initialState2.sortModel) != null ||\n    // Export if the model is not empty\n    sortModelToExport.length > 0;\n    if (!shouldExportSortModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      sorting: {\n        sortModel: sortModelToExport\n      }\n    });\n  }, [apiRef, props.sortModel, (_props$initialState3 = props.initialState) == null || (_props$initialState3 = _props$initialState3.sorting) == null ? void 0 : _props$initialState3.sortModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n    const sortModel = (_context$stateToResto = context.stateToRestore.sorting) == null ? void 0 : _context$stateToResto.sortModel;\n    if (sortModel == null) {\n      return params;\n    }\n    apiRef.current.setState(mergeStateWithSortModel(sortModel, props.disableMultipleColumnsSorting));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.applySorting]\n    });\n  }, [apiRef, props.disableMultipleColumnsSorting]);\n  const flatSortingMethod = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n    const rootGroupNode = rowTree[GRID_ROOT_GROUP_ID];\n    const sortedChildren = params.sortRowList ? params.sortRowList(rootGroupNode.children.map(childId => rowTree[childId])) : [...rootGroupNode.children];\n    if (rootGroupNode.footerId != null) {\n      sortedChildren.push(rootGroupNode.footerId);\n    }\n    return sortedChildren;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'sorting', flatSortingMethod);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnHeaderClick = React.useCallback(({\n    colDef\n  }, event) => {\n    const allowMultipleSorting = event.shiftKey || event.metaKey || event.ctrlKey;\n    sortColumn(colDef, undefined, allowMultipleSorting);\n  }, [sortColumn]);\n  const handleColumnHeaderKeyDown = React.useCallback(({\n    colDef\n  }, event) => {\n    // Ctrl + Enter opens the column menu\n    if (isEnterKey(event.key) && !event.ctrlKey && !event.metaKey) {\n      sortColumn(colDef, undefined, event.shiftKey);\n    }\n  }, [sortColumn]);\n  const handleColumnsChange = React.useCallback(() => {\n    // When the columns change we check that the sorted columns are still part of the dataset\n    const sortModel = gridSortModelSelector(apiRef);\n    const latestColumns = gridColumnLookupSelector(apiRef);\n    if (sortModel.length > 0) {\n      const newModel = sortModel.filter(sortItem => latestColumns[sortItem.field]);\n      if (newModel.length < sortModel.length) {\n        apiRef.current.setSortModel(newModel);\n      }\n    }\n  }, [apiRef]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'sorting') {\n      apiRef.current.applySorting();\n    }\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridApiEventHandler(apiRef, 'columnHeaderClick', handleColumnHeaderClick);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'rowsSet', apiRef.current.applySorting);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.applySorting();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.sortModel !== undefined) {\n      apiRef.current.setSortModel(props.sortModel);\n    }\n  }, [apiRef, props.sortModel]);\n};","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridPageSelector, gridPageSizeSelector } from '../pagination/gridPaginationSelector';\nimport { gridRowCountSelector } from '../rows/gridRowsSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridExpandedSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridClasses } from '../../../constants/gridClasses';\n\n// Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\nfunction scrollIntoView(dimensions) {\n  const {\n    clientHeight,\n    scrollTop,\n    offsetHeight,\n    offsetTop\n  } = dimensions;\n  const elementBottom = offsetTop + offsetHeight;\n  // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n  if (offsetHeight > clientHeight) {\n    return offsetTop;\n  }\n  if (elementBottom - clientHeight > scrollTop) {\n    return elementBottom - clientHeight;\n  }\n  if (offsetTop < scrollTop) {\n    return offsetTop;\n  }\n  return undefined;\n}\n\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\nexport const useGridScroll = (apiRef, props) => {\n  const theme = useTheme();\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersElementRef;\n  const virtualScrollerRef = apiRef.current.virtualScrollerRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridExpandedSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n    if (params.colIndex != null) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n      if (typeof params.rowIndex !== 'undefined') {\n        var _visibleSortedRows$pa;\n        const rowId = (_visibleSortedRows$pa = visibleSortedRows[params.rowIndex]) == null ? void 0 : _visibleSortedRows$pa.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n      // When using RTL, `scrollLeft` becomes negative, so we must ensure that we only compare values.\n      scrollCoordinates.left = scrollIntoView({\n        clientHeight: virtualScrollerRef.current.clientWidth,\n        scrollTop: Math.abs(virtualScrollerRef.current.scrollLeft),\n        offsetHeight: cellWidth,\n        offsetTop: columnPositions[params.colIndex]\n      });\n    }\n    if (params.rowIndex != null) {\n      var _querySelector, _querySelector2;\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      const topPinnedRowsHeight = ((_querySelector = virtualScrollerRef.current.querySelector(`.${gridClasses['pinnedRows--top']}`)) == null ? void 0 : _querySelector.clientHeight) || 0;\n      const bottomPinnedRowsHeight = ((_querySelector2 = virtualScrollerRef.current.querySelector(`.${gridClasses['pinnedRows--bottom']}`)) == null ? void 0 : _querySelector2.clientHeight) || 0;\n      scrollCoordinates.top = scrollIntoView({\n        clientHeight: virtualScrollerRef.current.clientHeight - topPinnedRowsHeight - bottomPinnedRowsHeight,\n        scrollTop: virtualScrollerRef.current.scrollTop,\n        offsetHeight: targetOffsetHeight,\n        offsetTop: rowsMeta.positions[elementIndex]\n      });\n    }\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n    return false;\n  }, [logger, apiRef, virtualScrollerRef, props.pagination, visibleSortedRows]);\n  const scroll = React.useCallback(params => {\n    if (virtualScrollerRef.current && params.left != null && colRef.current) {\n      const direction = theme.direction === 'rtl' ? -1 : 1;\n      colRef.current.scrollLeft = params.left;\n      virtualScrollerRef.current.scrollLeft = direction * params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n    if (virtualScrollerRef.current && params.top != null) {\n      virtualScrollerRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [virtualScrollerRef, theme.direction, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!(virtualScrollerRef != null && virtualScrollerRef.current)) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    return {\n      top: virtualScrollerRef.current.scrollTop,\n      left: virtualScrollerRef.current.scrollLeft\n    };\n  }, [virtualScrollerRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'public');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_debounce as debounce, unstable_capitalize as capitalize } from '@mui/utils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridDensityFactorSelector } from '../density/densitySelector';\nimport { gridFilterModelSelector } from '../filter/gridFilterSelector';\nimport { gridPaginationSelector } from '../pagination/gridPaginationSelector';\nimport { gridSortModelSelector } from '../sorting/gridSortingSelector';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from '../../../DataGrid/useDataGridProps';\nexport const rowsMetaStateInitializer = state => _extends({}, state, {\n  rowsMeta: {\n    currentPageTotalHeight: 0,\n    positions: []\n  }\n});\nlet warnedOnceInvalidRowHeight = false;\nconst getValidRowHeight = (rowHeightProp, defaultRowHeight, warningMessage) => {\n  if (typeof rowHeightProp === 'number' && rowHeightProp > 0) {\n    return rowHeightProp;\n  }\n  if (process.env.NODE_ENV !== 'production' && !warnedOnceInvalidRowHeight && typeof rowHeightProp !== 'undefined' && rowHeightProp !== null) {\n    console.warn(warningMessage);\n    warnedOnceInvalidRowHeight = true;\n  }\n  return defaultRowHeight;\n};\nconst rowHeightWarning = [`MUI: The \\`rowHeight\\` prop should be a number greater than 0.`, `The default value will be used instead.`].join('\\n');\nconst getRowHeightWarning = [`MUI: The \\`getRowHeight\\` prop should return a number greater than 0 or 'auto'.`, `The default value will be used instead.`].join('\\n');\n\n/**\n * @requires useGridPageSize (method)\n * @requires useGridPage (method)\n */\nexport const useGridRowsMeta = (apiRef, props) => {\n  const {\n    getRowHeight: getRowHeightProp,\n    getRowSpacing,\n    getEstimatedRowHeight\n  } = props;\n  const rowsHeightLookup = React.useRef(Object.create(null));\n\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  const lastMeasuredRowIndex = React.useRef(-1);\n  const hasRowWithAutoHeight = React.useRef(false);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const validRowHeight = getValidRowHeight(props.rowHeight, DATA_GRID_PROPS_DEFAULT_VALUES.rowHeight, rowHeightWarning);\n  const rowHeight = Math.floor(validRowHeight * densityFactor);\n  const hydrateRowsMeta = React.useCallback(() => {\n    var _pinnedRows$top, _pinnedRows$bottom;\n    hasRowWithAutoHeight.current = false;\n    const calculateRowProcessedSizes = row => {\n      if (!rowsHeightLookup.current[row.id]) {\n        rowsHeightLookup.current[row.id] = {\n          sizes: {\n            baseCenter: rowHeight\n          },\n          isResized: false,\n          autoHeight: false,\n          needsFirstMeasurement: true // Assume all rows will need to be measured by default\n        };\n      }\n      const {\n        isResized,\n        needsFirstMeasurement,\n        sizes\n      } = rowsHeightLookup.current[row.id];\n      let baseRowHeight = typeof rowHeight === 'number' && rowHeight > 0 ? rowHeight : 52;\n      const existingBaseRowHeight = sizes.baseCenter;\n      if (isResized) {\n        // Do not recalculate resized row height and use the value from the lookup\n        baseRowHeight = existingBaseRowHeight;\n      } else if (getRowHeightProp) {\n        const rowHeightFromUser = getRowHeightProp(_extends({}, row, {\n          densityFactor\n        }));\n        if (rowHeightFromUser === 'auto') {\n          if (needsFirstMeasurement) {\n            const estimatedRowHeight = getEstimatedRowHeight ? getEstimatedRowHeight(_extends({}, row, {\n              densityFactor\n            })) : rowHeight;\n\n            // If the row was not measured yet use the estimated row height\n            baseRowHeight = estimatedRowHeight != null ? estimatedRowHeight : rowHeight;\n          } else {\n            baseRowHeight = existingBaseRowHeight;\n          }\n          hasRowWithAutoHeight.current = true;\n          rowsHeightLookup.current[row.id].autoHeight = true;\n        } else {\n          // Default back to base rowHeight if getRowHeight returns invalid value.\n          baseRowHeight = getValidRowHeight(rowHeightFromUser, rowHeight, getRowHeightWarning);\n          rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n          rowsHeightLookup.current[row.id].autoHeight = false;\n        }\n      } else {\n        rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n      }\n      const initialHeights = {};\n      /* eslint-disable-next-line no-restricted-syntax */\n      for (const key in sizes) {\n        if (/^base[A-Z]/.test(key)) {\n          initialHeights[key] = sizes[key];\n        }\n      }\n      initialHeights.baseCenter = baseRowHeight;\n      if (getRowSpacing) {\n        var _spacing$top, _spacing$bottom;\n        const indexRelativeToCurrentPage = apiRef.current.getRowIndexRelativeToVisibleRows(row.id);\n        const spacing = getRowSpacing(_extends({}, row, {\n          isFirstVisible: indexRelativeToCurrentPage === 0,\n          isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n          indexRelativeToCurrentPage\n        }));\n        initialHeights.spacingTop = (_spacing$top = spacing.top) != null ? _spacing$top : 0;\n        initialHeights.spacingBottom = (_spacing$bottom = spacing.bottom) != null ? _spacing$bottom : 0;\n      }\n      const processedSizes = apiRef.current.unstable_applyPipeProcessors('rowHeight', initialHeights, row);\n      rowsHeightLookup.current[row.id].sizes = processedSizes;\n      return processedSizes;\n    };\n    const positions = [];\n    const currentPageTotalHeight = currentPage.rows.reduce((acc, row) => {\n      positions.push(acc);\n      let maximumBaseSize = 0;\n      let otherSizes = 0;\n      const processedSizes = calculateRowProcessedSizes(row);\n      /* eslint-disable-next-line no-restricted-syntax, guard-for-in */\n      for (const key in processedSizes) {\n        const value = processedSizes[key];\n        if (/^base[A-Z]/.test(key)) {\n          maximumBaseSize = value > maximumBaseSize ? value : maximumBaseSize;\n        } else {\n          otherSizes += value;\n        }\n      }\n      return acc + maximumBaseSize + otherSizes;\n    }, 0);\n    pinnedRows == null || (_pinnedRows$top = pinnedRows.top) == null || _pinnedRows$top.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    pinnedRows == null || (_pinnedRows$bottom = pinnedRows.bottom) == null || _pinnedRows$bottom.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowsMeta: {\n          currentPageTotalHeight,\n          positions\n        }\n      });\n    });\n    if (!hasRowWithAutoHeight.current) {\n      // No row has height=auto, so all rows are already measured\n      lastMeasuredRowIndex.current = Infinity;\n    }\n    apiRef.current.forceUpdate();\n  }, [apiRef, currentPage.rows, rowHeight, getRowHeightProp, getRowSpacing, getEstimatedRowHeight, pinnedRows, densityFactor]);\n  const getRowHeight = React.useCallback(rowId => {\n    const height = rowsHeightLookup.current[rowId];\n    return height ? height.sizes.baseCenter : rowHeight;\n  }, [rowHeight]);\n  const getRowInternalSizes = rowId => {\n    var _rowsHeightLookup$cur;\n    return (_rowsHeightLookup$cur = rowsHeightLookup.current[rowId]) == null ? void 0 : _rowsHeightLookup$cur.sizes;\n  };\n  const setRowHeight = React.useCallback((id, height) => {\n    rowsHeightLookup.current[id].sizes.baseCenter = height;\n    rowsHeightLookup.current[id].isResized = true;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n  const debouncedHydrateRowsMeta = React.useMemo(() => debounce(hydrateRowsMeta, props.rowPositionsDebounceMs), [hydrateRowsMeta, props.rowPositionsDebounceMs]);\n  const storeMeasuredRowHeight = React.useCallback((id, height, position) => {\n    if (!rowsHeightLookup.current[id] || !rowsHeightLookup.current[id].autoHeight) {\n      return;\n    }\n\n    // Only trigger hydration if the value is different, otherwise we trigger a loop\n    const needsHydration = rowsHeightLookup.current[id].sizes[`base${capitalize(position)}`] !== height;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    rowsHeightLookup.current[id].sizes[`base${capitalize(position)}`] = height;\n    if (needsHydration) {\n      debouncedHydrateRowsMeta();\n    }\n  }, [debouncedHydrateRowsMeta]);\n  const rowHasAutoHeight = React.useCallback(id => {\n    var _rowsHeightLookup$cur2;\n    return ((_rowsHeightLookup$cur2 = rowsHeightLookup.current[id]) == null ? void 0 : _rowsHeightLookup$cur2.autoHeight) || false;\n  }, []);\n  const getLastMeasuredRowIndex = React.useCallback(() => {\n    return lastMeasuredRowIndex.current;\n  }, []);\n  const setLastMeasuredRowIndex = React.useCallback(index => {\n    if (hasRowWithAutoHeight.current && index > lastMeasuredRowIndex.current) {\n      lastMeasuredRowIndex.current = index;\n    }\n  }, []);\n  const resetRowHeights = React.useCallback(() => {\n    rowsHeightLookup.current = {};\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n\n  // The effect is used to build the rows meta data - currentPageTotalHeight and positions.\n  // Because of variable row height this is needed for the virtualization\n  React.useEffect(() => {\n    hydrateRowsMeta();\n  }, [rowHeight, filterModel, paginationState, sortModel, hydrateRowsMeta]);\n  useGridRegisterPipeApplier(apiRef, 'rowHeight', hydrateRowsMeta);\n  const rowsMetaApi = {\n    unstable_setLastMeasuredRowIndex: setLastMeasuredRowIndex,\n    unstable_getRowHeight: getRowHeight,\n    unstable_getRowInternalSizes: getRowInternalSizes,\n    unstable_setRowHeight: setRowHeight,\n    unstable_storeRowHeightMeasurement: storeMeasuredRowHeight,\n    resetRowHeights\n  };\n  const rowsMetaPrivateApi = {\n    getLastMeasuredRowIndex,\n    rowHasAutoHeight\n  };\n  useGridApiMethod(apiRef, rowsMetaApi, 'public');\n  useGridApiMethod(apiRef, rowsMetaPrivateApi, 'private');\n};","import { isLeaf } from '../../../models/gridColumnGrouping';\nimport { isDeepEqual } from '../../../utils/utils';\n// This is the recurrence function that help writing `unwrapGroupingColumnModel()`\nconst recurrentUnwrapGroupingColumnModel = (columnGroupNode, parents, unwrappedGroupingModelToComplete) => {\n  if (isLeaf(columnGroupNode)) {\n    if (unwrappedGroupingModelToComplete[columnGroupNode.field] !== undefined) {\n      throw new Error([`MUI: columnGroupingModel contains duplicated field`, `column field ${columnGroupNode.field} occurs two times in the grouping model:`, `- ${unwrappedGroupingModelToComplete[columnGroupNode.field].join(' > ')}`, `- ${parents.join(' > ')}`].join('\\n'));\n    }\n    unwrappedGroupingModelToComplete[columnGroupNode.field] = parents;\n    return;\n  }\n  const {\n    groupId,\n    children\n  } = columnGroupNode;\n  children.forEach(child => {\n    recurrentUnwrapGroupingColumnModel(child, [...parents, groupId], unwrappedGroupingModelToComplete);\n  });\n};\n\n/**\n * This is a function that provide for each column the array of its parents.\n * Parents are ordered from the root to the leaf.\n * @param columnGroupingModel The model such as provided in DataGrid props\n * @returns An object `{[field]: groupIds}` where `groupIds` is the parents of the column `field`\n */\nexport const unwrapGroupingColumnModel = columnGroupingModel => {\n  if (!columnGroupingModel) {\n    return {};\n  }\n  const unwrappedSubTree = {};\n  columnGroupingModel.forEach(columnGroupNode => {\n    recurrentUnwrapGroupingColumnModel(columnGroupNode, [], unwrappedSubTree);\n  });\n  return unwrappedSubTree;\n};\nexport const getColumnGroupsHeaderStructure = (orderedColumns, unwrappedGroupingModel, pinnedFields) => {\n  const getParents = field => {\n    var _unwrappedGroupingMod;\n    return (_unwrappedGroupingMod = unwrappedGroupingModel[field]) != null ? _unwrappedGroupingMod : [];\n  };\n  const groupingHeaderStructure = [];\n  const maxDepth = Math.max(...orderedColumns.map(field => getParents(field).length));\n  const haveSameParents = (field1, field2, depth) => isDeepEqual(getParents(field1).slice(0, depth + 1), getParents(field2).slice(0, depth + 1));\n  const haveDifferentContainers = (field1, field2) => {\n    if (pinnedFields != null && pinnedFields.left && pinnedFields.left.includes(field1) && !pinnedFields.left.includes(field2)) {\n      return true;\n    }\n    if (pinnedFields != null && pinnedFields.right && !pinnedFields.right.includes(field1) && pinnedFields.right.includes(field2)) {\n      return true;\n    }\n    return false;\n  };\n  for (let depth = 0; depth < maxDepth; depth += 1) {\n    const depthStructure = orderedColumns.reduce((structure, newField) => {\n      var _getParents$depth;\n      const groupId = (_getParents$depth = getParents(newField)[depth]) != null ? _getParents$depth : null;\n      if (structure.length === 0) {\n        return [{\n          columnFields: [newField],\n          groupId\n        }];\n      }\n      const lastGroup = structure[structure.length - 1];\n      const prevField = lastGroup.columnFields[lastGroup.columnFields.length - 1];\n      const prevGroupId = lastGroup.groupId;\n      if (prevGroupId !== groupId || !haveSameParents(prevField, newField, depth) ||\n      // Fix for https://github.com/mui/mui-x/issues/7041\n      haveDifferentContainers(prevField, newField)) {\n        // It's a new group\n        return [...structure, {\n          columnFields: [newField],\n          groupId\n        }];\n      }\n\n      // It extends the previous group\n      return [...structure.slice(0, structure.length - 1), {\n        columnFields: [...lastGroup.columnFields, newField],\n        groupId\n      }];\n    }, []);\n    groupingHeaderStructure.push(depthStructure);\n  }\n  return groupingHeaderStructure;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"groupId\", \"children\"];\nimport * as React from 'react';\nimport { isLeaf } from '../../../models/gridColumnGrouping';\nimport { gridColumnGroupsLookupSelector, gridColumnGroupsUnwrappedModelSelector } from './gridColumnGroupsSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { getColumnGroupsHeaderStructure, unwrapGroupingColumnModel } from './gridColumnGroupsUtils';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from '../columns';\nconst createGroupLookup = columnGroupingModel => {\n  let groupLookup = {};\n  columnGroupingModel.forEach(node => {\n    if (isLeaf(node)) {\n      return;\n    }\n    const {\n        groupId,\n        children\n      } = node,\n      other = _objectWithoutPropertiesLoose(node, _excluded);\n    if (!groupId) {\n      throw new Error('MUI: An element of the columnGroupingModel does not have either `field` or `groupId`.');\n    }\n    if (!children) {\n      console.warn(`MUI: group groupId=${groupId} has no children.`);\n    }\n    const groupParam = _extends({}, other, {\n      groupId\n    });\n    const subTreeLookup = createGroupLookup(children);\n    if (subTreeLookup[groupId] !== undefined || groupLookup[groupId] !== undefined) {\n      throw new Error(`MUI: The groupId ${groupId} is used multiple times in the columnGroupingModel.`);\n    }\n    groupLookup = _extends({}, groupLookup, subTreeLookup, {\n      [groupId]: groupParam\n    });\n  });\n  return _extends({}, groupLookup);\n};\nexport const columnGroupsStateInitializer = (state, props, apiRef) => {\n  var _props$experimentalFe, _props$columnGrouping, _props$columnGrouping2, _apiRef$current$state;\n  if (!((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.columnGrouping)) {\n    return state;\n  }\n  const columnFields = gridColumnFieldsSelector(apiRef);\n  const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n  const groupLookup = createGroupLookup((_props$columnGrouping = props.columnGroupingModel) != null ? _props$columnGrouping : []);\n  const unwrappedGroupingModel = unwrapGroupingColumnModel((_props$columnGrouping2 = props.columnGroupingModel) != null ? _props$columnGrouping2 : []);\n  const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, // @ts-expect-error Move this part to `Pro` package\n  (_apiRef$current$state = apiRef.current.state.pinnedColumns) != null ? _apiRef$current$state : {});\n  const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => {\n    var _unwrappedGroupingMod, _unwrappedGroupingMod2;\n    return (_unwrappedGroupingMod = (_unwrappedGroupingMod2 = unwrappedGroupingModel[field]) == null ? void 0 : _unwrappedGroupingMod2.length) != null ? _unwrappedGroupingMod : 0;\n  }));\n  return _extends({}, state, {\n    columnGrouping: {\n      lookup: groupLookup,\n      unwrappedGroupingModel,\n      headerStructure: columnGroupsHeaderStructure,\n      maxDepth\n    }\n  });\n};\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnGrouping = (apiRef, props) => {\n  var _props$experimentalFe3;\n  /**\n   * API METHODS\n   */\n  const getColumnGroupPath = React.useCallback(field => {\n    var _unwrappedGroupingMod3;\n    const unwrappedGroupingModel = gridColumnGroupsUnwrappedModelSelector(apiRef);\n    return (_unwrappedGroupingMod3 = unwrappedGroupingModel[field]) != null ? _unwrappedGroupingMod3 : [];\n  }, [apiRef]);\n  const getAllGroupDetails = React.useCallback(() => {\n    const columnGroupLookup = gridColumnGroupsLookupSelector(apiRef);\n    return columnGroupLookup;\n  }, [apiRef]);\n  const columnGroupingApi = {\n    unstable_getColumnGroupPath: getColumnGroupPath,\n    unstable_getAllGroupDetails: getAllGroupDetails\n  };\n  useGridApiMethod(apiRef, columnGroupingApi, 'public');\n  const handleColumnIndexChange = React.useCallback(() => {\n    var _props$columnGrouping3;\n    const unwrappedGroupingModel = unwrapGroupingColumnModel((_props$columnGrouping3 = props.columnGroupingModel) != null ? _props$columnGrouping3 : []);\n    apiRef.current.setState(state => {\n      var _state$columns$ordere, _state$columns, _state$pinnedColumns;\n      const orderedFields = (_state$columns$ordere = (_state$columns = state.columns) == null ? void 0 : _state$columns.orderedFields) != null ? _state$columns$ordere : [];\n\n      // @ts-expect-error Move this logic to `Pro` package\n      const pinnedColumns = (_state$pinnedColumns = state.pinnedColumns) != null ? _state$pinnedColumns : {};\n      const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(orderedFields, unwrappedGroupingModel, pinnedColumns);\n      return _extends({}, state, {\n        columnGrouping: _extends({}, state.columnGrouping, {\n          headerStructure: columnGroupsHeaderStructure\n        })\n      });\n    });\n  }, [apiRef, props.columnGroupingModel]);\n  const updateColumnGroupingState = React.useCallback(columnGroupingModel => {\n    var _props$experimentalFe2, _apiRef$current$getPi, _apiRef$current$getPi2, _apiRef$current;\n    if (!((_props$experimentalFe2 = props.experimentalFeatures) != null && _props$experimentalFe2.columnGrouping)) {\n      return;\n    }\n    // @ts-expect-error Move this logic to `Pro` package\n    const pinnedColumns = (_apiRef$current$getPi = (_apiRef$current$getPi2 = (_apiRef$current = apiRef.current).getPinnedColumns) == null ? void 0 : _apiRef$current$getPi2.call(_apiRef$current)) != null ? _apiRef$current$getPi : {};\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n    const groupLookup = createGroupLookup(columnGroupingModel != null ? columnGroupingModel : []);\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(columnGroupingModel != null ? columnGroupingModel : []);\n    const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, pinnedColumns);\n    const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => {\n      var _unwrappedGroupingMod4, _unwrappedGroupingMod5;\n      return (_unwrappedGroupingMod4 = (_unwrappedGroupingMod5 = unwrappedGroupingModel[field]) == null ? void 0 : _unwrappedGroupingMod5.length) != null ? _unwrappedGroupingMod4 : 0;\n    }));\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        columnGrouping: {\n          lookup: groupLookup,\n          unwrappedGroupingModel,\n          headerStructure: columnGroupsHeaderStructure,\n          maxDepth\n        }\n      });\n    });\n  }, [apiRef, (_props$experimentalFe3 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe3.columnGrouping]);\n  useGridApiEventHandler(apiRef, 'columnIndexChange', handleColumnIndexChange);\n  useGridApiEventHandler(apiRef, 'columnsChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  }, [updateColumnGroupingState, props.columnGroupingModel]);\n};","import { useGridInitialization } from '../hooks/core/useGridInitialization';\nimport { useGridInitializeState } from '../hooks/utils/useGridInitializeState';\nimport { useGridClipboard } from '../hooks/features/clipboard/useGridClipboard';\nimport { columnMenuStateInitializer, useGridColumnMenu } from '../hooks/features/columnMenu/useGridColumnMenu';\nimport { useGridColumns, columnsStateInitializer } from '../hooks/features/columns/useGridColumns';\nimport { densityStateInitializer, useGridDensity } from '../hooks/features/density/useGridDensity';\nimport { useGridCsvExport } from '../hooks/features/export/useGridCsvExport';\nimport { useGridPrintExport } from '../hooks/features/export/useGridPrintExport';\nimport { useGridFilter, filterStateInitializer } from '../hooks/features/filter/useGridFilter';\nimport { focusStateInitializer, useGridFocus } from '../hooks/features/focus/useGridFocus';\nimport { useGridKeyboardNavigation } from '../hooks/features/keyboardNavigation/useGridKeyboardNavigation';\nimport { useGridPagination, paginationStateInitializer } from '../hooks/features/pagination/useGridPagination';\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from '../hooks/features/preferencesPanel/useGridPreferencesPanel';\nimport { useGridEditing, editingStateInitializer } from '../hooks/features/editing/useGridEditing';\nimport { useGridRows, rowsStateInitializer } from '../hooks/features/rows/useGridRows';\nimport { useGridRowsPreProcessors } from '../hooks/features/rows/useGridRowsPreProcessors';\nimport { useGridParamsApi } from '../hooks/features/rows/useGridParamsApi';\nimport { rowSelectionStateInitializer, useGridRowSelection } from '../hooks/features/rowSelection/useGridRowSelection';\nimport { useGridRowSelectionPreProcessors } from '../hooks/features/rowSelection/useGridRowSelectionPreProcessors';\nimport { useGridSorting, sortingStateInitializer } from '../hooks/features/sorting/useGridSorting';\nimport { useGridScroll } from '../hooks/features/scroll/useGridScroll';\nimport { useGridEvents } from '../hooks/features/events/useGridEvents';\nimport { useGridDimensions } from '../hooks/features/dimensions/useGridDimensions';\nimport { rowsMetaStateInitializer, useGridRowsMeta } from '../hooks/features/rows/useGridRowsMeta';\nimport { useGridStatePersistence } from '../hooks/features/statePersistence/useGridStatePersistence';\nimport { useGridColumnSpanning } from '../hooks/features/columns/useGridColumnSpanning';\nimport { useGridColumnGrouping, columnGroupsStateInitializer } from '../hooks/features/columnGrouping/useGridColumnGrouping';\nimport { useGridVirtualization, virtualizationStateInitializer } from '../hooks/features/virtualization';\nexport const useDataGridComponent = (inputApiRef, props) => {\n  const apiRef = useGridInitialization(inputApiRef, props);\n\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n  useGridRowSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n\n  /**\n   * Register all state initializers here.\n   */\n  useGridInitializeState(rowSelectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState(editingStateInitializer, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\n  useGridInitializeState(virtualizationStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridRowSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridParamsApi(apiRef, props);\n  useGridColumnSpanning(apiRef);\n  useGridColumnGrouping(apiRef, props);\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef, props);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef, props);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  useGridVirtualization(apiRef, props);\n  return apiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { getDataGridUtilityClass } from '../../../constants';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from '../../../colDef';\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\nexport const useGridRowSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.orderedFields = [GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.orderedFields];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnSpanning = apiRef => {\n  const lookup = React.useRef({});\n  const setCellColSpanInfo = React.useCallback((rowId, columnIndex, cellColSpanInfo) => {\n    const sizes = lookup.current;\n    if (!sizes[rowId]) {\n      sizes[rowId] = {};\n    }\n    sizes[rowId][columnIndex] = cellColSpanInfo;\n  }, []);\n  const getCellColSpanInfo = React.useCallback((rowId, columnIndex) => {\n    var _lookup$current$rowId;\n    return (_lookup$current$rowId = lookup.current[rowId]) == null ? void 0 : _lookup$current$rowId[columnIndex];\n  }, []);\n\n  // Calculate `colSpan` for the cell.\n  const calculateCellColSpan = React.useCallback(params => {\n    const {\n      columnIndex,\n      rowId,\n      minFirstColumnIndex,\n      maxLastColumnIndex,\n      columns\n    } = params;\n    const columnsLength = columns.length;\n    const column = columns[columnIndex];\n    const colSpan = typeof column.colSpan === 'function' ? column.colSpan(apiRef.current.getCellParams(rowId, column.field)) : column.colSpan;\n    if (!colSpan || colSpan === 1) {\n      setCellColSpanInfo(rowId, columnIndex, {\n        spannedByColSpan: false,\n        cellProps: {\n          colSpan: 1,\n          width: column.computedWidth\n        }\n      });\n      return {\n        colSpan: 1\n      };\n    }\n    let width = column.computedWidth;\n    for (let j = 1; j < colSpan; j += 1) {\n      const nextColumnIndex = columnIndex + j;\n      // Cells should be spanned only within their column section (left-pinned, right-pinned and unpinned).\n      if (nextColumnIndex >= minFirstColumnIndex && nextColumnIndex < maxLastColumnIndex) {\n        const nextColumn = columns[nextColumnIndex];\n        width += nextColumn.computedWidth;\n        setCellColSpanInfo(rowId, columnIndex + j, {\n          spannedByColSpan: true,\n          rightVisibleCellIndex: Math.min(columnIndex + colSpan, columnsLength - 1),\n          leftVisibleCellIndex: columnIndex\n        });\n      }\n      setCellColSpanInfo(rowId, columnIndex, {\n        spannedByColSpan: false,\n        cellProps: {\n          colSpan,\n          width\n        }\n      });\n    }\n    return {\n      colSpan\n    };\n  }, [apiRef, setCellColSpanInfo]);\n\n  // Calculate `colSpan` for each cell in the row\n  const calculateColSpan = React.useCallback(({\n    rowId,\n    minFirstColumn,\n    maxLastColumn,\n    columns\n  }) => {\n    for (let i = minFirstColumn; i < maxLastColumn; i += 1) {\n      const cellProps = calculateCellColSpan({\n        columnIndex: i,\n        rowId,\n        minFirstColumnIndex: minFirstColumn,\n        maxLastColumnIndex: maxLastColumn,\n        columns\n      });\n      if (cellProps.colSpan > 1) {\n        i += cellProps.colSpan - 1;\n      }\n    }\n  }, [calculateCellColSpan]);\n  const columnSpanningPublicApi = {\n    unstable_getCellColSpanInfo: getCellColSpanInfo\n  };\n  const columnSpanningPrivateApi = {\n    calculateColSpan\n  };\n  useGridApiMethod(apiRef, columnSpanningPublicApi, 'public');\n  useGridApiMethod(apiRef, columnSpanningPrivateApi, 'private');\n  const handleColumnReorderChange = React.useCallback(() => {\n    // `colSpan` needs to be recalculated after column reordering\n    lookup.current = {};\n  }, []);\n  useGridApiEventHandler(apiRef, 'columnOrderChange', handleColumnReorderChange);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridExpandedRowCountSelector } from '../filter/gridFilterSelector';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../columns/gridColumnsSelector';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getColumnsToExport } from './utils';\nimport { mergeStateWithPaginationModel } from '../pagination/useGridPagination';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridPrintExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../colDef/gridCheckboxSelectionColDef';\nimport { gridDataRowIdsSelector, gridRowsLookupSelector } from '../rows/gridRowsSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction raf() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      resolve();\n    });\n  });\n}\nfunction buildPrintWindow(title) {\n  const iframeEl = document.createElement('iframe');\n  iframeEl.style.position = 'absolute';\n  iframeEl.style.width = '0px';\n  iframeEl.style.height = '0px';\n  iframeEl.title = title || document.title;\n  return iframeEl;\n}\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  const previousRows = React.useRef([]);\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef]);\n\n  // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns, includeCheckboxes) => new Promise(resolve => {\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    if (includeCheckboxes) {\n      newColumnVisibilityModel[GRID_CHECKBOX_SELECTION_COL_DEF.field] = true;\n    }\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]);\n  const updateGridRowsForPrint = React.useCallback(getRowsToExport => {\n    const rowsToExportIds = getRowsToExport({\n      apiRef\n    });\n    const newRows = rowsToExportIds.map(id => apiRef.current.getRow(id));\n    apiRef.current.setRows(newRows);\n  }, [apiRef]);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    var _querySelector, _querySelector2;\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false,\n      includeCheckboxes: false\n    }, options);\n    const printDoc = printWindow.contentDocument;\n    if (!printDoc) {\n      return;\n    }\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n\n    // Allow to overflow to not hide the border of the last row\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n\n    // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n    gridClone.style.contain = 'size';\n    const columnHeaders = gridClone.querySelector(`.${gridClasses.columnHeaders}`);\n    const columnHeadersInner = columnHeaders.querySelector(`.${gridClasses.columnHeadersInner}`);\n    columnHeadersInner.style.width = '100%';\n    let gridToolbarElementHeight = ((_querySelector = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)) == null ? void 0 : _querySelector.offsetHeight) || 0;\n    let gridFooterElementHeight = ((_querySelector2 = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)) == null ? void 0 : _querySelector2.offsetHeight) || 0;\n    if (normalizeOptions.hideToolbar) {\n      var _gridClone$querySelec;\n      (_gridClone$querySelec = gridClone.querySelector(`.${gridClasses.toolbarContainer}`)) == null || _gridClone$querySelec.remove();\n      gridToolbarElementHeight = 0;\n    }\n    if (normalizeOptions.hideFooter) {\n      var _gridClone$querySelec2;\n      (_gridClone$querySelec2 = gridClone.querySelector(`.${gridClasses.footerContainer}`)) == null || _gridClone$querySelec2.remove();\n      gridFooterElementHeight = 0;\n    }\n\n    // Expand container height to accommodate all rows\n    const computedTotalHeight = rowsMeta.currentPageTotalHeight + getTotalHeaderHeight(apiRef, props.columnHeaderHeight) + gridToolbarElementHeight + gridFooterElementHeight;\n    gridClone.style.height = `${computedTotalHeight}px`;\n    // The height above does not include grid border width, so we need to exclude it\n    gridClone.style.boxSizing = 'content-box';\n\n    // the footer is always being placed at the bottom of the page as if all rows are exported\n    // so if getRowsToExport is being used to only export a subset of rows then we need to\n    // adjust the footer position to be correctly placed at the bottom of the grid\n    if (options != null && options.getRowsToExport) {\n      const gridFooterElement = gridClone.querySelector(`.${gridClasses.footerContainer}`);\n      gridFooterElement.style.position = 'absolute';\n      gridFooterElement.style.width = '100%';\n      gridFooterElement.style.top = `${computedTotalHeight - gridFooterElementHeight}px`;\n    }\n\n    // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n    const container = document.createElement('div');\n    container.appendChild(gridClone);\n    printDoc.body.innerHTML = container.innerHTML;\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n    const stylesheetLoadPromises = [];\n    if (normalizeOptions.copyStyles) {\n      const rootCandidate = gridRootElement.getRootNode();\n      const root = rootCandidate.constructor.name === 'ShadowRoot' ? rootCandidate : doc.current;\n      const headStyleElements = root.querySelectorAll(\"style, link[rel='stylesheet']\");\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n          if (sheet) {\n            let styleCSS = '';\n            // NOTE: for-of is not supported by IE\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n          stylesheetLoadPromises.push(new Promise(resolve => {\n            newHeadStyleElements.addEventListener('load', () => resolve());\n          }));\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    }\n\n    // Trigger print\n    if (process.env.NODE_ENV !== 'test') {\n      // wait for remote stylesheets to load\n      Promise.all(stylesheetLoadPromises).then(() => {\n        printWindow.contentWindow.print();\n      });\n    }\n  }, [apiRef, doc, props.columnHeaderHeight]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    var _previousGridState$cu;\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow);\n\n    // Revert grid to previous state\n    apiRef.current.restoreState(previousGridState.current || {});\n    if (!((_previousGridState$cu = previousGridState.current) != null && (_previousGridState$cu = _previousGridState$cu.columns) != null && _previousGridState$cu.columnVisibilityModel)) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n    apiRef.current.unstable_setVirtualization(true);\n    apiRef.current.setRows(previousRows.current);\n\n    // Clear local state\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n    previousRows.current = [];\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI: No grid root element available.');\n    }\n    previousGridState.current = apiRef.current.exportState();\n    // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n    const gridRowsLookup = gridRowsLookupSelector(apiRef);\n    previousRows.current = gridDataRowIdsSelector(apiRef).map(rowId => gridRowsLookup[rowId]);\n    if (props.pagination) {\n      const visibleRowCount = gridExpandedRowCountSelector(apiRef);\n      const paginationModel = {\n        page: 0,\n        pageSize: visibleRowCount\n      };\n      apiRef.current.updateControlState('pagination',\n      // Using signature `DataGridPro` to allow more than 100 rows in the print export\n      mergeStateWithPaginationModel(visibleRowCount, 'DataGridPro', paginationModel));\n      apiRef.current.forceUpdate();\n    }\n    await updateGridColumnsForPrint(options == null ? void 0 : options.fields, options == null ? void 0 : options.allColumns, options == null ? void 0 : options.includeCheckboxes);\n    if (options != null && options.getRowsToExport) {\n      updateGridRowsForPrint(options.getRowsToExport);\n    }\n    apiRef.current.unstable_setVirtualization(false);\n    await raf(); // wait for the state changes to take action\n    const printWindow = buildPrintWindow(options == null ? void 0 : options.fileName);\n    if (process.env.NODE_ENV === 'test') {\n      doc.current.body.appendChild(printWindow);\n      // In test env, run the all pipeline without waiting for loading\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => {\n        handlePrintWindowLoad(printWindow, options);\n        const mediaQueryList = printWindow.contentWindow.matchMedia('print');\n        mediaQueryList.addEventListener('change', mql => {\n          const isAfterPrint = mql.matches === false;\n          if (isAfterPrint) {\n            handlePrintWindowAfterPrint(printWindow);\n          }\n        });\n      };\n      doc.current.body.appendChild(printWindow);\n    }\n  }, [props, logger, apiRef, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint, updateGridRowsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    var _options$printOptions;\n    if ((_options$printOptions = options.printOptions) != null && _options$printOptions.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","import * as React from 'react';\nimport { unstable_debounce as debounce, unstable_ownerDocument as ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnsTotalWidthSelector } from '../columns';\nimport { gridDensityFactorSelector } from '../density';\nimport { useGridSelector } from '../../utils';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { calculatePinnedRowsHeight } from '../rows/gridRowsUtils';\nimport { getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nconst isTestEnvironment = process.env.NODE_ENV === 'test';\nconst hasScroll = ({\n  content,\n  container,\n  scrollBarSize\n}) => {\n  const hasScrollXIfNoYScrollBar = content.width > container.width;\n  const hasScrollYIfNoXScrollBar = content.height > container.height;\n  let hasScrollX = false;\n  let hasScrollY = false;\n  if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n    hasScrollX = hasScrollXIfNoYScrollBar;\n    hasScrollY = content.height + (hasScrollX ? scrollBarSize : 0) > container.height;\n\n    // We recalculate the scroll x to consider the size of the y scrollbar.\n    if (hasScrollY) {\n      hasScrollX = content.width + scrollBarSize > container.width;\n    }\n  }\n  return {\n    hasScrollX,\n    hasScrollY\n  };\n};\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(null);\n  const fullDimensionsRef = React.useRef(null);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, props.columnHeaderHeight);\n  const updateGridDimensionsRef = React.useCallback(() => {\n    var _apiRef$current$rootE;\n    const rootElement = (_apiRef$current$rootE = apiRef.current.rootElementRef) == null ? void 0 : _apiRef$current$rootE.current;\n    const columnsTotalWidth = gridColumnsTotalWidthSelector(apiRef);\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    if (!rootDimensionsRef.current) {\n      return;\n    }\n    let scrollBarSize;\n    if (props.scrollbarSize != null) {\n      scrollBarSize = props.scrollbarSize;\n    } else if (!columnsTotalWidth || !rootElement) {\n      scrollBarSize = 0;\n    } else {\n      const doc = ownerDocument(rootElement);\n      const scrollDiv = doc.createElement('div');\n      scrollDiv.style.width = '99px';\n      scrollDiv.style.height = '99px';\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.overflow = 'scroll';\n      scrollDiv.className = 'scrollDiv';\n      rootElement.appendChild(scrollDiv);\n      scrollBarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      rootElement.removeChild(scrollDiv);\n    }\n    let viewportOuterSize;\n    let hasScrollX;\n    let hasScrollY;\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > Math.round(rootDimensionsRef.current.width);\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rowsMeta.currentPageTotalHeight + (hasScrollX ? scrollBarSize : 0)\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: Math.max(rootDimensionsRef.current.height - totalHeaderHeight, 0)\n      };\n      const scrollInformation = hasScroll({\n        content: {\n          width: Math.round(columnsTotalWidth),\n          height: rowsMeta.currentPageTotalHeight\n        },\n        container: {\n          width: Math.round(viewportOuterSize.width),\n          height: viewportOuterSize.height - pinnedRowsHeight.top - pinnedRowsHeight.bottom\n        },\n        scrollBarSize\n      });\n      hasScrollY = scrollInformation.hasScrollY;\n      hasScrollX = scrollInformation.hasScrollX;\n    }\n    const viewportInnerSize = {\n      width: viewportOuterSize.width - (hasScrollY ? scrollBarSize : 0),\n      height: viewportOuterSize.height - (hasScrollX ? scrollBarSize : 0)\n    };\n    const newFullDimensions = {\n      viewportOuterSize,\n      viewportInnerSize,\n      hasScrollX,\n      hasScrollY,\n      scrollBarSize\n    };\n    const prevDimensions = fullDimensionsRef.current;\n    fullDimensionsRef.current = newFullDimensions;\n    if (newFullDimensions.viewportInnerSize.width !== (prevDimensions == null ? void 0 : prevDimensions.viewportInnerSize.width) || newFullDimensions.viewportInnerSize.height !== (prevDimensions == null ? void 0 : prevDimensions.viewportInnerSize.height)) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newFullDimensions.viewportInnerSize);\n    }\n  }, [apiRef, props.scrollbarSize, props.autoHeight, rowsMeta.currentPageTotalHeight, totalHeaderHeight]);\n  const [savedSize, setSavedSize] = React.useState();\n  const debouncedSetSavedSize = React.useMemo(() => debounce(setSavedSize, 60), []);\n  const previousSize = React.useRef();\n  useEnhancedEffect(() => {\n    if (savedSize) {\n      updateGridDimensionsRef();\n      apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n    }\n  }, [apiRef, savedSize, updateGridDimensionsRef]);\n\n  // This is the function called by apiRef.current.resize()\n  const resize = React.useCallback(() => {\n    apiRef.current.computeSizeAndPublishResizeEvent();\n  }, [apiRef]);\n  const getRootDimensions = React.useCallback(() => fullDimensionsRef.current, []);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = apiRef.current.getRootDimensions();\n    if (!dimensions) {\n      return 0;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n\n    // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n    if (props.getRowHeight) {\n      const renderContext = apiRef.current.getRenderContext();\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.pagination, props.paginationMode, props.getRowHeight, rowHeight]);\n  const computeSizeAndPublishResizeEvent = React.useCallback(() => {\n    var _apiRef$current$mainE, _previousSize$current, _previousSize$current2;\n    const mainEl = (_apiRef$current$mainE = apiRef.current.mainElementRef) == null ? void 0 : _apiRef$current$mainE.current;\n    if (!mainEl) {\n      return;\n    }\n    const win = ownerWindow(mainEl);\n    const computedStyle = win.getComputedStyle(mainEl);\n    const height = parseFloat(computedStyle.height) || 0;\n    const width = parseFloat(computedStyle.width) || 0;\n    const hasHeightChanged = height !== ((_previousSize$current = previousSize.current) == null ? void 0 : _previousSize$current.height);\n    const hasWidthChanged = width !== ((_previousSize$current2 = previousSize.current) == null ? void 0 : _previousSize$current2.width);\n    if (!previousSize.current || hasHeightChanged || hasWidthChanged) {\n      const size = {\n        width,\n        height\n      };\n      apiRef.current.publishEvent('resize', size);\n      previousSize.current = size;\n    }\n  }, [apiRef]);\n  const dimensionsApi = {\n    resize,\n    getRootDimensions\n  };\n  const dimensionsPrivateApi = {\n    getViewportPageSize,\n    updateGridDimensionsRef,\n    computeSizeAndPublishResizeEvent\n  };\n  useGridApiMethod(apiRef, dimensionsApi, 'public');\n  useGridApiMethod(apiRef, dimensionsPrivateApi, 'private');\n  const isFirstSizing = React.useRef(true);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size;\n\n    // jsdom has no layout capabilities\n    const isJSDOM = /jsdom/.test(window.navigator.userAgent);\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (isTestEnvironment) {\n      // We don't need to debounce the resize for tests.\n      setSavedSize(size);\n      isFirstSizing.current = false;\n      return;\n    }\n    if (isFirstSizing.current) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      setSavedSize(size);\n      isFirstSizing.current = false;\n      return;\n    }\n    debouncedSetSavedSize(size);\n  }, [props.autoHeight, debouncedSetSavedSize, logger]);\n  useEnhancedEffect(() => updateGridDimensionsRef(), [updateGridDimensionsRef]);\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', updateGridDimensionsRef);\n  useGridApiOptionHandler(apiRef, 'paginationModelChange', updateGridDimensionsRef);\n  useGridApiOptionHandler(apiRef, 'columnsChange', updateGridDimensionsRef);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}","import { useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\n/**\n * @requires useGridFocus (event) - can be after, async only\n * @requires useGridColumns (event) - can be after, async only\n */\nexport function useGridEvents(apiRef, props) {\n  useGridApiOptionHandler(apiRef, 'columnHeaderClick', props.onColumnHeaderClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderDoubleClick', props.onColumnHeaderDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOver', props.onColumnHeaderOver);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOut', props.onColumnHeaderOut);\n  useGridApiOptionHandler(apiRef, 'columnHeaderEnter', props.onColumnHeaderEnter);\n  useGridApiOptionHandler(apiRef, 'columnHeaderLeave', props.onColumnHeaderLeave);\n  useGridApiOptionHandler(apiRef, 'cellClick', props.onCellClick);\n  useGridApiOptionHandler(apiRef, 'cellDoubleClick', props.onCellDoubleClick);\n  useGridApiOptionHandler(apiRef, 'cellKeyDown', props.onCellKeyDown);\n  useGridApiOptionHandler(apiRef, 'preferencePanelClose', props.onPreferencePanelClose);\n  useGridApiOptionHandler(apiRef, 'preferencePanelOpen', props.onPreferencePanelOpen);\n  useGridApiOptionHandler(apiRef, 'menuOpen', props.onMenuOpen);\n  useGridApiOptionHandler(apiRef, 'menuClose', props.onMenuClose);\n  useGridApiOptionHandler(apiRef, 'rowDoubleClick', props.onRowDoubleClick);\n  useGridApiOptionHandler(apiRef, 'rowClick', props.onRowClick);\n  useGridApiOptionHandler(apiRef, 'stateChange', props.onStateChange);\n}","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils';\nexport const useGridStatePersistence = apiRef => {\n  const exportState = React.useCallback((params = {}) => {\n    const stateToExport = apiRef.current.unstable_applyPipeProcessors('exportState', {}, params);\n    return stateToExport;\n  }, [apiRef]);\n  const restoreState = React.useCallback(stateToRestore => {\n    const response = apiRef.current.unstable_applyPipeProcessors('restoreState', {\n      callbacks: []\n    }, {\n      stateToRestore\n    });\n    response.callbacks.forEach(callback => {\n      callback();\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const statePersistenceApi = {\n    exportState,\n    restoreState\n  };\n  useGridApiMethod(apiRef, statePersistenceApi, 'public');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScroller']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScroller',\n  overridesResolver: (props, styles) => styles.virtualScroller\n})({\n  overflow: 'auto',\n  height: '100%',\n  // See https://github.com/mui/mui-x/issues/4360\n  position: 'relative',\n  '@media print': {\n    overflow: 'hidden'\n  },\n  zIndex: 0 // See https://github.com/mui/mui-x/issues/10547\n});\nconst GridVirtualScroller = /*#__PURE__*/React.forwardRef(function GridVirtualScroller(props, ref) {\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(VirtualScrollerRoot, _extends({\n    ref: ref\n  }, props, {\n    className: clsx(classes.root, props.className),\n    ownerState: rootProps\n  }));\n});\nexport { GridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (props, overflowedContent) => {\n  const {\n    classes\n  } = props;\n  const slots = {\n    root: ['virtualScrollerContent', overflowedContent && 'virtualScrollerContent--overflowed']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerContent',\n  overridesResolver: (props, styles) => styles.virtualScrollerContent\n})({});\nconst GridVirtualScrollerContent = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerContent(props, ref) {\n  var _props$style;\n  const rootProps = useGridRootProps();\n  const overflowedContent = !rootProps.autoHeight && ((_props$style = props.style) == null ? void 0 : _props$style.minHeight) === 'auto';\n  const classes = useUtilityClasses(rootProps, overflowedContent);\n  return /*#__PURE__*/_jsx(VirtualScrollerContentRoot, _extends({\n    ref: ref\n  }, props, {\n    ownerState: rootProps,\n    className: clsx(classes.root, props.className)\n  }));\n});\nexport { GridVirtualScrollerContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerRenderZone']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerRenderZoneRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerRenderZone',\n  overridesResolver: (props, styles) => styles.virtualScrollerRenderZone\n})({\n  position: 'absolute',\n  display: 'flex',\n  // Prevents margin collapsing when using `getRowSpacing`\n  flexDirection: 'column'\n});\nconst GridVirtualScrollerRenderZone = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerRenderZone(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(VirtualScrollerRenderZoneRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nexport { GridVirtualScrollerRenderZone };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport { GridVirtualScroller } from './virtualization/GridVirtualScroller';\nimport { GridVirtualScrollerContent } from './virtualization/GridVirtualScrollerContent';\nimport { GridVirtualScrollerRenderZone } from './virtualization/GridVirtualScrollerRenderZone';\nimport { useGridVirtualScroller } from '../hooks/features/virtualization/useGridVirtualScroller';\nimport { GridOverlays } from './base/GridOverlays';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DataGridVirtualScroller = /*#__PURE__*/React.forwardRef(function DataGridVirtualScroller(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getRootProps,\n    getContentProps,\n    getRenderZoneProps,\n    getRows\n  } = useGridVirtualScroller({\n    ref\n  });\n  return /*#__PURE__*/_jsxs(GridVirtualScroller, _extends({\n    className: className\n  }, getRootProps(other), {\n    children: [/*#__PURE__*/_jsx(GridOverlays, {}), /*#__PURE__*/_jsx(GridVirtualScrollerContent, _extends({}, getContentProps(), {\n      children: /*#__PURE__*/_jsx(GridVirtualScrollerRenderZone, _extends({}, getRenderZoneProps(), {\n        children: getRows()\n      }))\n    }))]\n  }));\n});\nexport { DataGridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@mui/utils';\nimport { GridBody, GridFooterPlaceholder, GridHeader, GridRoot } from '../components';\nimport { GridContextProvider } from '../context/GridContextProvider';\nimport { useDataGridComponent } from './useDataGridComponent';\nimport { useDataGridProps, DATA_GRID_PROPS_DEFAULT_VALUES } from './useDataGridProps';\nimport { DataGridVirtualScroller } from '../components/DataGridVirtualScroller';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DataGridRaw = /*#__PURE__*/React.forwardRef(function DataGrid(inProps, ref) {\n  const props = useDataGridProps(inProps);\n  const privateApiRef = useDataGridComponent(props.apiRef, props);\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    privateApiRef: privateApiRef,\n    props: props,\n    children: /*#__PURE__*/_jsxs(GridRoot, _extends({\n      className: props.className,\n      style: props.style,\n      sx: props.sx,\n      ref: ref\n    }, props.forwardedProps, {\n      children: [/*#__PURE__*/_jsx(GridHeader, {}), /*#__PURE__*/_jsx(GridBody, {\n        VirtualScrollerComponent: DataGridVirtualScroller\n      }), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\n    }))\n  });\n});\n/**\n * Demos:\n * - [DataGrid](https://mui.com/x/react-data-grid/demo/)\n *\n * API:\n * - [DataGrid API](https://mui.com/x/api/data-grid/data-grid/)\n */\nexport const DataGrid = /*#__PURE__*/React.memo(DataGridRaw);\n\n/**\n * Remove at v7\n * @deprecated\n */\nexport const SUBMIT_FILTER_STROKE_TIME = DATA_GRID_PROPS_DEFAULT_VALUES.filterDebounceMs;\n\n/**\n * Remove at v7\n * @deprecated\n */\nexport const SUBMIT_FILTER_DATE_STROKE_TIME = DATA_GRID_PROPS_DEFAULT_VALUES.filterDebounceMs;\nDataGridRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The ref object that allows Data Grid manipulation. Can be instantiated with `useGridApiRef()`.\n   */\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }),\n  /**\n   * The label of the Data Grid.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * The id of the element containing a label for the Data Grid.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the Data Grid height is dynamic and follow the number of rows in the Data Grid.\n   * @default false\n   */\n  autoHeight: PropTypes.bool,\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n  /**\n   * If `true`, the Data Grid will display an extra column with checkboxes for selecting rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The character used to separate cell values when copying to the clipboard.\n   * @default '\\t'\n   */\n  clipboardCopyCellDelimiter: PropTypes.string,\n  /**\n   * Number of extra columns to be rendered before/after the visible slice.\n   * @default 3\n   */\n  columnBuffer: PropTypes.number,\n  columnGroupingModel: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * Sets the height in pixel of the column headers in the Data Grid.\n   * @default 56\n   */\n  columnHeaderHeight: PropTypes.number,\n  /**\n   * Set of columns of type [[GridColDef[]]].\n   */\n  columns: chainPropTypes(PropTypes.array.isRequired, props => {\n    // @ts-ignore because otherwise `build:api` doesn't work\n    if (props.columns && props.columns.some(column => column.resizable)) {\n      return new Error([`MUI: \\`column.resizable = true\\` is not a valid prop.`, 'Column resizing is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * Number of rows from the `columnBuffer` that can be visible before a new slice is rendered.\n   * @default 3\n   */\n  columnThreshold: PropTypes.number,\n  /**\n   * Set the column visibility model of the Data Grid.\n   * If defined, the Data Grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n  /**\n   * Overridable components.\n   * @deprecated Use `slots` instead.\n   */\n  components: PropTypes.object,\n  /**\n   * Overridable components props dynamically passed to the component at rendering.\n   * @deprecated Use the `slotProps` prop instead.\n   */\n  componentsProps: PropTypes.object,\n  /**\n   * Set the density of the Data Grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n  /**\n   * If `true`, `eval()` is not used for performance optimization.\n   * @default false\n   */\n  disableEval: PropTypes.bool,\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableRowSelectionOnClick: PropTypes.bool,\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n  /**\n   * Unstable features, breaking changes might be introduced.\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    ariaV7: PropTypes.bool,\n    columnGrouping: PropTypes.bool,\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n  /**\n   * The milliseconds delay to wait after a keystroke before triggering filtering.\n   * @default 150\n   */\n  filterDebounceMs: PropTypes.number,\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * Set the filter model of the Data Grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      field: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operator: PropTypes.string.isRequired,\n      value: PropTypes.any\n    })).isRequired,\n    logicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterExcludeHiddenColumns: PropTypes.bool,\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n  /**\n   * Forwarded props for the Data Grid root element.\n   * @ignore - do not document.\n   */\n  forwardedProps: PropTypes.object,\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {React.JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n  /**\n   * If `true`, the diacritics (accents) are ignored when filtering or quick filtering.\n   * E.g. when filter value is `cafe`, the rows with `café` will be visible.\n   * @default false\n   */\n  ignoreDiacritics: PropTypes.bool,\n  /**\n   * The initial state of the DataGrid.\n   * The data in it will be set in the state on initialization but will not be controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the cell is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n  /**\n   * If `true`, a  loading overlay is displayed.\n   */\n  loading: PropTypes.bool,\n  /**\n   * Set the locale text of the Data Grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/grid/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"error\" (\"warn\" in dev mode)\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containing which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n  /**\n   * Callback called when the data is copied to the clipboard.\n   * @param {string} data The data copied to the clipboard.\n   */\n  onClipboardCopy: PropTypes.func,\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n  /**\n   * Callback fired when the pagination model has changed.\n   * @param {GridPaginationModel} model Updated pagination model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPaginationModelChange: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n  /**\n   * Callback fired when the Data Grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the row changes are committed.\n   * @param {GridRowId} id The row id.\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditCommit: PropTypes.func,\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containing which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridRowSelectionModel} rowSelectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowSelectionModelChange: PropTypes.func,\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n  /**\n   * Callback fired when the state of the Data Grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @ignore - do not document.\n   */\n  onStateChange: PropTypes.func,\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  pagination: props => {\n    if (props.pagination === false) {\n      return new Error(['MUI: `<DataGrid pagination={false} />` is not a valid prop.', 'Infinite scrolling is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to disable the pagination.'].join('\\n'));\n    }\n    return null;\n  },\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The pagination model of type [[GridPaginationModel]] which refers to current `page` and `pageSize`.\n   */\n  paginationModel: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired\n  }),\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n  /**\n   * Number of extra rows to be rendered before/after the visible slice.\n   * @default 3\n   */\n  rowBuffer: PropTypes.number,\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   */\n  rowCount: PropTypes.number,\n  /**\n   * Sets the height in pixel of a row in the Data Grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n  /**\n   * The milliseconds delay to wait after measuring the row height before recalculating row positions.\n   * Setting it to a lower value could be useful when using dynamic row height,\n   * but might reduce performance when displaying a large number of rows.\n   * @default 166\n   */\n  rowPositionsDebounceMs: PropTypes.number,\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   */\n  rows: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /**\n   * If `false`, the row selection mode is disabled.\n   * @default true\n   */\n  rowSelection: PropTypes.bool,\n  /**\n   * Sets the row selection model of the Data Grid.\n   */\n  rowSelectionModel: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired), PropTypes.number, PropTypes.string]),\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n  /**\n   * Number of rows from the `rowBuffer` that can be visible before a new slice is rendered.\n   * @default 3\n   */\n  rowThreshold: PropTypes.number,\n  /**\n   * Override the height/width of the Data Grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n  /**\n   * If `true`, the vertical borders of the cells are displayed.\n   * @default false\n   */\n  showCellVerticalBorder: PropTypes.bool,\n  /**\n   * If `true`, the right border of the column headers are displayed.\n   * @default false\n   */\n  showColumnVerticalBorder: PropTypes.bool,\n  /**\n   * Overridable components props dynamically passed to the component at rendering.\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable components.\n   */\n  slots: PropTypes.object,\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n  /**\n   * Set the sort model of the Data Grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the Data Grid will not use `valueFormatter` when exporting to CSV or copying to clipboard.\n   * If an object is provided, you can choose to ignore the `valueFormatter` for CSV export or clipboard export.\n   * @default false\n   */\n  unstable_ignoreValueFormatterDuringExport: PropTypes.oneOfType([PropTypes.shape({\n    clipboardExport: PropTypes.bool,\n    csvExport: PropTypes.bool\n  }), PropTypes.bool])\n};","export default function chainPropTypes(propType1, propType2) {\n  if (process.env.NODE_ENV === 'production') {\n    return () => null;\n  }\n  return function validate(...args) {\n    return propType1(...args) || propType2(...args);\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridNoResultsOverlay = /*#__PURE__*/React.forwardRef(function GridNoResultsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noResultsOverlayLabel = apiRef.current.getLocaleText('noResultsOverlayLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noResultsOverlayLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sortingOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridColumnUnsortedIcon = /*#__PURE__*/React.memo(function GridColumnHeaderSortIcon(props) {\n  const {\n      sortingOrder\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const [nextSortDirection] = sortingOrder;\n  const Icon = nextSortDirection === 'asc' ? rootProps.slots.columnSortedAscendingIcon : rootProps.slots.columnSortedDescendingIcon;\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({}, other)) : null;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"native\"];\nimport * as React from 'react';\nimport MUIMenuItem from '@mui/material/MenuItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MUISelectOption(_ref) {\n  let {\n      native\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (native) {\n    return /*#__PURE__*/_jsx(\"option\", _extends({}, props));\n  }\n  return /*#__PURE__*/_jsx(MUIMenuItem, _extends({}, props));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport MUICheckbox from '@mui/material/Checkbox';\nimport MUITextField from '@mui/material/TextField';\nimport MUIFormControl from '@mui/material/FormControl';\nimport MUISelect from '@mui/material/Select';\nimport MUISwitch from '@mui/material/Switch';\nimport MUIButton from '@mui/material/Button';\nimport MUIIconButton from '@mui/material/IconButton';\nimport MUIInputAdornment from '@mui/material/InputAdornment';\nimport MUITooltip from '@mui/material/Tooltip';\nimport MUIPopper from '@mui/material/Popper';\nimport MUIInputLabel from '@mui/material/InputLabel';\nimport MUIChip from '@mui/material/Chip';\nimport { GridColumnUnsortedIcon } from './icons/GridColumnUnsortedIcon';\nimport { GridAddIcon, GridArrowDownwardIcon, GridArrowUpwardIcon, GridCheckIcon, GridCloseIcon, GridColumnIcon, GridDragIcon, GridExpandMoreIcon, GridFilterAltIcon, GridFilterListIcon, GridKeyboardArrowRight, GridMoreVertIcon, GridRemoveIcon, GridSaveAltIcon, GridSearchIcon, GridSeparatorIcon, GridTableRowsIcon, GridTripleDotsVerticalIcon, GridViewHeadlineIcon, GridViewStreamIcon, GridVisibilityOffIcon, GridViewColumnIcon, GridClearIcon, GridLoadIcon, GridDeleteForeverIcon } from './icons';\nimport MUISelectOption from './components/MUISelectOption';\nconst iconSlots = {\n  BooleanCellTrueIcon: GridCheckIcon,\n  BooleanCellFalseIcon: GridCloseIcon,\n  ColumnMenuIcon: GridTripleDotsVerticalIcon,\n  OpenFilterButtonIcon: GridFilterListIcon,\n  FilterPanelDeleteIcon: GridCloseIcon,\n  ColumnFilteredIcon: GridFilterAltIcon,\n  ColumnSelectorIcon: GridColumnIcon,\n  ColumnUnsortedIcon: GridColumnUnsortedIcon,\n  ColumnSortedAscendingIcon: GridArrowUpwardIcon,\n  ColumnSortedDescendingIcon: GridArrowDownwardIcon,\n  ColumnResizeIcon: GridSeparatorIcon,\n  DensityCompactIcon: GridViewHeadlineIcon,\n  DensityStandardIcon: GridTableRowsIcon,\n  DensityComfortableIcon: GridViewStreamIcon,\n  ExportIcon: GridSaveAltIcon,\n  MoreActionsIcon: GridMoreVertIcon,\n  TreeDataCollapseIcon: GridExpandMoreIcon,\n  TreeDataExpandIcon: GridKeyboardArrowRight,\n  GroupingCriteriaCollapseIcon: GridExpandMoreIcon,\n  GroupingCriteriaExpandIcon: GridKeyboardArrowRight,\n  DetailPanelExpandIcon: GridAddIcon,\n  DetailPanelCollapseIcon: GridRemoveIcon,\n  RowReorderIcon: GridDragIcon,\n  QuickFilterIcon: GridSearchIcon,\n  QuickFilterClearIcon: GridCloseIcon,\n  ColumnMenuHideIcon: GridVisibilityOffIcon,\n  ColumnMenuSortAscendingIcon: GridArrowUpwardIcon,\n  ColumnMenuSortDescendingIcon: GridArrowDownwardIcon,\n  ColumnMenuFilterIcon: GridFilterAltIcon,\n  ColumnMenuManageColumnsIcon: GridViewColumnIcon,\n  ColumnMenuClearIcon: GridClearIcon,\n  LoadIcon: GridLoadIcon,\n  FilterPanelAddIcon: GridAddIcon,\n  FilterPanelRemoveAllIcon: GridDeleteForeverIcon,\n  ColumnReorderIcon: GridDragIcon\n};\nconst materialSlots = _extends({}, iconSlots, {\n  BaseCheckbox: MUICheckbox,\n  BaseTextField: MUITextField,\n  BaseFormControl: MUIFormControl,\n  BaseSelect: MUISelect,\n  BaseSwitch: MUISwitch,\n  BaseButton: MUIButton,\n  BaseIconButton: MUIIconButton,\n  BaseInputAdornment: MUIInputAdornment,\n  BaseTooltip: MUITooltip,\n  BasePopper: MUIPopper,\n  BaseInputLabel: MUIInputLabel,\n  BaseSelectOption: MUISelectOption,\n  BaseChip: MUIChip\n});\nexport default materialSlots;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridSkeletonCell, GridColumnsPanel, GridFilterPanel, GridFooter, GridLoadingOverlay, GridNoRowsOverlay, GridPagination, GridPanel, GridPreferencesPanel, GridRow, GridColumnHeaderFilterIconButton, GridRowCount } from '../components';\nimport { GridCellV7 } from '../components/cell/GridCell';\nimport { GridColumnHeaders } from '../components/GridColumnHeaders';\nimport { GridColumnMenu } from '../components/menu/columnMenu/GridColumnMenu';\nimport { GridNoResultsOverlay } from '../components/GridNoResultsOverlay';\nimport materialSlots from '../material';\n\n// TODO: camelCase these key. It's a private helper now.\n// Remove then need to call `uncapitalizeObjectKeys`.\nexport const DATA_GRID_DEFAULT_SLOTS_COMPONENTS = _extends({}, materialSlots, {\n  Cell: GridCellV7,\n  SkeletonCell: GridSkeletonCell,\n  ColumnHeaderFilterIconButton: GridColumnHeaderFilterIconButton,\n  ColumnMenu: GridColumnMenu,\n  ColumnHeaders: GridColumnHeaders,\n  Footer: GridFooter,\n  FooterRowCount: GridRowCount,\n  Toolbar: null,\n  PreferencesPanel: GridPreferencesPanel,\n  LoadingOverlay: GridLoadingOverlay,\n  NoResultsOverlay: GridNoResultsOverlay,\n  NoRowsOverlay: GridNoRowsOverlay,\n  Pagination: GridPagination,\n  FilterPanel: GridFilterPanel,\n  ColumnsPanel: GridColumnsPanel,\n  Panel: GridPanel,\n  Row: GridRow\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// TODO v7: This file exist only to simplify typing between\n// components/componentsProps and slots/slotProps\n// Should be deleted when components/componentsProps are removed\n\nexport const uncapitalizeObjectKeys = capitalizedObject => {\n  if (capitalizedObject === undefined) {\n    return undefined;\n  }\n  return Object.keys(capitalizedObject).reduce((acc, key) => _extends({}, acc, {\n    [`${key.charAt(0).toLowerCase()}${key.slice(1)}`]: capitalizedObject[key]\n  }), {});\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"components\", \"componentsProps\"];\nimport * as React from 'react';\n/** Gathers props for the root element into a single `.forwardedProps` field */\nfunction groupForwardedProps(props) {\n  var _props$forwardedProps;\n  const keys = Object.keys(props);\n  if (!keys.some(key => key.startsWith('aria-') || key.startsWith('data-'))) {\n    return props;\n  }\n  const newProps = {};\n  const forwardedProps = (_props$forwardedProps = props.forwardedProps) != null ? _props$forwardedProps : {};\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    if (key.startsWith('aria-') || key.startsWith('data-')) {\n      forwardedProps[key] = props[key];\n    } else {\n      newProps[key] = props[key];\n    }\n  }\n  newProps.forwardedProps = forwardedProps;\n  return newProps;\n}\nexport function useProps(allProps) {\n  return React.useMemo(() => {\n    const {\n        components,\n        componentsProps\n      } = allProps,\n      themedProps = _objectWithoutPropertiesLoose(allProps, _excluded);\n    return [components, componentsProps, groupForwardedProps(themedProps)];\n  }, [allProps]);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { GRID_DEFAULT_LOCALE_TEXT } from '../constants';\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS } from '../constants/defaultGridSlotsComponents';\nimport { GridEditModes } from '../models';\nimport { computeSlots, useProps, uncapitalizeObjectKeys } from '../internals/utils';\nconst DATA_GRID_FORCED_PROPS = {\n  disableMultipleColumnsFiltering: true,\n  disableMultipleColumnsSorting: true,\n  disableMultipleRowSelection: true,\n  throttleRowsMs: undefined,\n  hideFooterRowCount: false,\n  pagination: true,\n  checkboxSelectionVisibleOnly: false,\n  disableColumnReorder: true,\n  disableColumnResize: true,\n  keepColumnPositionIfDraggedOutside: false,\n  signature: 'DataGrid'\n};\n\n/**\n * The default values of `DataGridPropsWithDefaultValues` to inject in the props of DataGrid.\n */\nexport const DATA_GRID_PROPS_DEFAULT_VALUES = {\n  autoHeight: false,\n  autoPageSize: false,\n  checkboxSelection: false,\n  checkboxSelectionVisibleOnly: false,\n  columnBuffer: 3,\n  rowBuffer: 3,\n  columnThreshold: 3,\n  rowThreshold: 3,\n  rowSelection: true,\n  density: 'standard',\n  disableColumnFilter: false,\n  disableColumnMenu: false,\n  disableColumnSelector: false,\n  disableDensitySelector: false,\n  disableEval: false,\n  disableMultipleColumnsFiltering: false,\n  disableMultipleRowSelection: false,\n  disableMultipleColumnsSorting: false,\n  disableRowSelectionOnClick: false,\n  disableVirtualization: false,\n  editMode: GridEditModes.Cell,\n  filterMode: 'client',\n  filterDebounceMs: 150,\n  columnHeaderHeight: 56,\n  hideFooter: false,\n  hideFooterPagination: false,\n  hideFooterRowCount: false,\n  hideFooterSelectedRowCount: false,\n  ignoreDiacritics: false,\n  logger: console,\n  logLevel: process.env.NODE_ENV === 'production' ? 'error' : 'warn',\n  pagination: false,\n  paginationMode: 'client',\n  rowHeight: 52,\n  pageSizeOptions: [25, 50, 100],\n  rowSpacingType: 'margin',\n  showCellVerticalBorder: false,\n  showColumnVerticalBorder: false,\n  sortingOrder: ['asc', 'desc', null],\n  sortingMode: 'client',\n  throttleRowsMs: 0,\n  disableColumnReorder: false,\n  disableColumnResize: false,\n  keepNonExistentRowsSelected: false,\n  keepColumnPositionIfDraggedOutside: false,\n  unstable_ignoreValueFormatterDuringExport: false,\n  clipboardCopyCellDelimiter: '\\t',\n  rowPositionsDebounceMs: 166\n};\nconst defaultSlots = uncapitalizeObjectKeys(DATA_GRID_DEFAULT_SLOTS_COMPONENTS);\nexport const useDataGridProps = inProps => {\n  const [components, componentsProps, themedProps] = useProps(useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  }));\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const slots = React.useMemo(() => computeSlots({\n    defaultSlots,\n    slots: themedProps.slots,\n    components\n  }), [components, themedProps.slots]);\n  return React.useMemo(() => {\n    var _themedProps$slotProp;\n    return _extends({}, DATA_GRID_PROPS_DEFAULT_VALUES, themedProps, {\n      localeText,\n      slots,\n      slotProps: (_themedProps$slotProp = themedProps.slotProps) != null ? _themedProps$slotProp : componentsProps\n    }, DATA_GRID_FORCED_PROPS);\n  }, [themedProps, localeText, slots, componentsProps]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { uncapitalizeObjectKeys } from './slotsMigration';\n\n// TODO v7: Remove `components` and usages of `UncapitalizeObjectKeys` type\n// after converting keys in Grid(Pro|Premium)SlotsComponent to camelCase.\n// https://github.com/mui/mui-x/issues/7940\nexport function computeSlots({\n  defaultSlots,\n  slots,\n  components\n}) {\n  const overrides = slots != null ? slots : components ? uncapitalizeObjectKeys(components) : null;\n  if (!overrides || Object.keys(overrides).length === 0) {\n    return defaultSlots;\n  }\n  const result = _extends({}, defaultSlots);\n  Object.keys(overrides).forEach(key => {\n    const k = key;\n    if (overrides[k] !== undefined) {\n      result[k] = overrides[k];\n    }\n  });\n  return result;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderActionsCell } from '../components/cell/GridActionsCell';\nexport const GRID_ACTIONS_COLUMN_TYPE = 'actions';\nexport const GRID_ACTIONS_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  width: 100,\n  align: 'center',\n  headerAlign: 'center',\n  headerName: '',\n  disableColumnMenu: true,\n  disableExport: true,\n  renderCell: renderActionsCell,\n  getApplyQuickFilterFn: undefined,\n  getApplyQuickFilterFnV7: undefined\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderBooleanCell } from '../components/cell/GridBooleanCell';\nimport { renderEditBooleanCell } from '../components/cell/GridEditBooleanCell';\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridBooleanOperators } from './gridBooleanOperators';\nfunction gridBooleanFormatter({\n  value,\n  api\n}) {\n  return value ? api.getLocaleText('booleanCellTrueLabel') : api.getLocaleText('booleanCellFalseLabel');\n}\nconst stringToBoolean = value => {\n  switch (value.toLowerCase().trim()) {\n    case 'true':\n    case 'yes':\n    case '1':\n      return true;\n    case 'false':\n    case 'no':\n    case '0':\n    case 'null':\n    case 'undefined':\n      return false;\n    default:\n      return undefined;\n  }\n};\nexport const GRID_BOOLEAN_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'boolean',\n  align: 'center',\n  headerAlign: 'center',\n  renderCell: renderBooleanCell,\n  renderEditCell: renderEditBooleanCell,\n  sortComparator: gridNumberComparator,\n  valueFormatter: gridBooleanFormatter,\n  filterOperators: getGridBooleanOperators(),\n  getApplyQuickFilterFn: undefined,\n  getApplyQuickFilterFnV7: undefined,\n  // @ts-ignore\n  aggregable: false,\n  // @ts-ignore\n  pastedValueParser: value => stringToBoolean(value)\n});","import { GridFilterInputBoolean } from '../components/panel/filterPanel/GridFilterInputBoolean';\nimport { convertLegacyOperators } from './utils';\nexport const getGridBooleanOperators = () => convertLegacyOperators([{\n  value: 'is',\n  getApplyFilterFnV7: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const valueAsBoolean = filterItem.value === 'true';\n    return value => {\n      return Boolean(value) === valueAsBoolean;\n    };\n  },\n  InputComponent: GridFilterInputBoolean\n}]);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from '../components/columnSelection/GridCellCheckboxRenderer';\nimport { GridHeaderCheckbox } from '../components/columnSelection/GridHeaderCheckbox';\nimport { selectedIdsLookupSelector } from '../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_CHECKBOX_SELECTION_FIELD = '__check__';\nexport const GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  field: GRID_CHECKBOX_SELECTION_FIELD,\n  type: 'checkboxSelection',\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  getApplyQuickFilterFnV7: undefined,\n  valueGetter: params => {\n    const selectionLookup = selectedIdsLookupSelector(params.api.state, params.api.instanceId);\n    return selectionLookup[params.id] !== undefined;\n  },\n  renderHeader: params => /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params)),\n  renderCell: params => /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params))\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridDateComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridDateOperators } from './gridDateOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditDateCell } from '../components/cell/GridEditDateCell';\nfunction throwIfNotDateObject({\n  value,\n  columnType,\n  rowId,\n  field\n}) {\n  if (!(value instanceof Date)) {\n    throw new Error([`MUI: \\`${columnType}\\` column type only accepts \\`Date\\` objects as values.`, 'Use `valueGetter` to transform the value into a `Date` object.', `Row ID: ${rowId}, field: \"${field}\".`].join('\\n'));\n  }\n}\nexport function gridDateFormatter({\n  value,\n  field,\n  id\n}) {\n  if (!value) {\n    return '';\n  }\n  throwIfNotDateObject({\n    value,\n    columnType: 'date',\n    rowId: id,\n    field\n  });\n  return value.toLocaleDateString();\n}\nexport function gridDateTimeFormatter({\n  value,\n  field,\n  id\n}) {\n  if (!value) {\n    return '';\n  }\n  throwIfNotDateObject({\n    value,\n    columnType: 'dateTime',\n    rowId: id,\n    field\n  });\n  return value.toLocaleString();\n}\nexport const GRID_DATE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'date',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateFormatter,\n  filterOperators: getGridDateOperators(),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});\nexport const GRID_DATETIME_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'dateTime',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateTimeFormatter,\n  filterOperators: getGridDateOperators(true),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});","import { GridFilterInputDate } from '../components/panel/filterPanel/GridFilterInputDate';\nimport { convertLegacyOperators } from './utils';\nconst dateRegex = /(\\d+)-(\\d+)-(\\d+)/;\nconst dateTimeRegex = /(\\d+)-(\\d+)-(\\d+)T(\\d+):(\\d+)/;\nfunction buildApplyFilterFn(filterItem, compareFn, showTime, keepHours) {\n  if (!filterItem.value) {\n    return null;\n  }\n  const [year, month, day, hour, minute] = filterItem.value.match(showTime ? dateTimeRegex : dateRegex).slice(1).map(Number);\n  const time = new Date(year, month - 1, day, hour || 0, minute || 0).getTime();\n  return value => {\n    if (!value) {\n      return false;\n    }\n    if (keepHours) {\n      return compareFn(value.getTime(), time);\n    }\n\n    // Make a copy of the date to not reset the hours in the original object\n    const dateCopy = new Date(value);\n    const timeToCompare = dateCopy.setHours(showTime ? value.getHours() : 0, showTime ? value.getMinutes() : 0, 0, 0);\n    return compareFn(timeToCompare, time);\n  };\n}\nexport const getGridDateOperators = showTime => convertLegacyOperators([{\n  value: 'is',\n  getApplyFilterFnV7: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 === value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'not',\n  getApplyFilterFnV7: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 !== value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'after',\n  getApplyFilterFnV7: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 > value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrAfter',\n  getApplyFilterFnV7: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 >= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'before',\n  getApplyFilterFnV7: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 < value2, showTime, !showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrBefore',\n  getApplyFilterFnV7: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 <= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFnV7: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFnV7: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}]);","import { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { GRID_NUMERIC_COL_DEF } from './gridNumericColDef';\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from './gridDateColDef';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { GRID_SINGLE_SELECT_COL_DEF } from './gridSingleSelectColDef';\nimport { GRID_ACTIONS_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from './gridActionsColDef';\nexport const DEFAULT_GRID_COL_TYPE_KEY = '__default__';\nexport const getGridDefaultColumnTypes = () => {\n  const nativeColumnTypes = {\n    string: GRID_STRING_COL_DEF,\n    number: GRID_NUMERIC_COL_DEF,\n    date: GRID_DATE_COL_DEF,\n    dateTime: GRID_DATETIME_COL_DEF,\n    boolean: GRID_BOOLEAN_COL_DEF,\n    singleSelect: GRID_SINGLE_SELECT_COL_DEF,\n    [GRID_ACTIONS_COLUMN_TYPE]: GRID_ACTIONS_COL_DEF,\n    [DEFAULT_GRID_COL_TYPE_KEY]: GRID_STRING_COL_DEF\n  };\n  return nativeColumnTypes;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { isNumber } from '../utils/utils';\nimport { getGridNumericOperators, getGridNumericQuickFilterFn } from './gridNumericOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { convertQuickFilterV7ToLegacy } from './utils';\nexport const GRID_NUMERIC_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'number',\n  align: 'right',\n  headerAlign: 'right',\n  sortComparator: gridNumberComparator,\n  valueParser: value => value === '' ? null : Number(value),\n  valueFormatter: ({\n    value\n  }) => isNumber(value) ? value.toLocaleString() : value || '',\n  filterOperators: getGridNumericOperators(),\n  getApplyQuickFilterFn: convertQuickFilterV7ToLegacy(getGridNumericQuickFilterFn),\n  getApplyQuickFilterFnV7: getGridNumericQuickFilterFn\n});","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nimport { convertLegacyOperators, tagInternalFilter } from './utils';\nconst parseNumericValue = value => {\n  if (value == null) {\n    return null;\n  }\n  return Number(value);\n};\nexport const getGridNumericQuickFilterFn = tagInternalFilter(value => {\n  if (value == null || Number.isNaN(value) || value === '') {\n    return null;\n  }\n  return columnValue => {\n    return parseNumericValue(columnValue) === parseNumericValue(value);\n  };\n});\nexport const getGridNumericOperators = () => convertLegacyOperators([{\n  value: '=',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) === filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '!=',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) !== filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) > filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>=',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) >= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) < filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<=',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) <= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFnV7: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFnV7: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFnV7: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    return value => {\n      return value != null && filterItem.value.includes(Number(value));\n    };\n  },\n  InputComponent: GridFilterInputMultipleValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}]);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditSingleSelectCell } from '../components/cell/GridEditSingleSelectCell';\nimport { getGridSingleSelectOperators } from './gridSingleSelectOperators';\nimport { isSingleSelectColDef } from '../components/panel/filterPanel/filterPanelUtils';\nimport { isObject } from '../utils/utils';\nconst isArrayOfObjects = options => {\n  return typeof options[0] === 'object';\n};\nconst defaultGetOptionValue = value => {\n  return isObject(value) ? value.value : value;\n};\nconst defaultGetOptionLabel = value => {\n  return isObject(value) ? value.label : String(value);\n};\nexport const GRID_SINGLE_SELECT_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'singleSelect',\n  getOptionLabel: defaultGetOptionLabel,\n  getOptionValue: defaultGetOptionValue,\n  valueFormatter(params) {\n    const {\n      id,\n      field,\n      value,\n      api\n    } = params;\n    const colDef = params.api.getColumn(field);\n    if (!isSingleSelectColDef(colDef)) {\n      return '';\n    }\n    let valueOptions;\n    if (typeof colDef.valueOptions === 'function') {\n      valueOptions = colDef.valueOptions({\n        id,\n        row: id ? api.getRow(id) : null,\n        field\n      });\n    } else {\n      valueOptions = colDef.valueOptions;\n    }\n    if (value == null) {\n      return '';\n    }\n    if (!valueOptions) {\n      return value;\n    }\n    if (!isArrayOfObjects(valueOptions)) {\n      return colDef.getOptionLabel(value);\n    }\n    const valueOption = valueOptions.find(option => colDef.getOptionValue(option) === value);\n    return valueOption ? colDef.getOptionLabel(valueOption) : '';\n  },\n  renderEditCell: renderEditSingleSelectCell,\n  filterOperators: getGridSingleSelectOperators(),\n  // @ts-ignore\n  pastedValueParser: (value, params) => {\n    const colDef = params.colDef;\n    const colDefValueOptions = colDef.valueOptions;\n    const valueOptions = typeof colDefValueOptions === 'function' ? colDefValueOptions({\n      field: colDef.field\n    }) : colDefValueOptions || [];\n    const getOptionValue = colDef.getOptionValue;\n    const valueOption = valueOptions.find(option => {\n      if (getOptionValue(option) === value) {\n        return true;\n      }\n      return false;\n    });\n    if (valueOption) {\n      return value;\n    }\n    // do not paste the value if it is not in the valueOptions\n    return undefined;\n  }\n});","import { GridFilterInputSingleSelect } from '../components/panel/filterPanel/GridFilterInputSingleSelect';\nimport { GridFilterInputMultipleSingleSelect } from '../components/panel/filterPanel/GridFilterInputMultipleSingleSelect';\nimport { isObject } from '../utils/utils';\nimport { convertLegacyOperators } from './utils';\nconst parseObjectValue = value => {\n  if (value == null || !isObject(value)) {\n    return value;\n  }\n  return value.value;\n};\nexport const getGridSingleSelectOperators = () => convertLegacyOperators([{\n  value: 'is',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) === parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'not',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) !== parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFnV7: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValues = filterItem.value.map(parseObjectValue);\n    return value => filterItemValues.includes(parseObjectValue(value));\n  },\n  InputComponent: GridFilterInputMultipleSingleSelect\n}]);","import { renderEditInputCell } from '../components/cell/GridEditInputCell';\nimport { gridStringOrNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridStringOperators, getGridStringQuickFilterFn } from './gridStringOperators';\nimport { convertQuickFilterV7ToLegacy } from './utils';\n\n/**\n * TODO: Move pro and premium properties outside of this Community file\n */\nexport const GRID_STRING_COL_DEF = {\n  width: 100,\n  minWidth: 50,\n  maxWidth: Infinity,\n  hideable: true,\n  sortable: true,\n  resizable: true,\n  filterable: true,\n  groupable: true,\n  pinnable: true,\n  // @ts-ignore\n  aggregable: true,\n  editable: false,\n  sortComparator: gridStringOrNumberComparator,\n  type: 'string',\n  align: 'left',\n  filterOperators: getGridStringOperators(),\n  renderEditCell: renderEditInputCell,\n  getApplyQuickFilterFn: convertQuickFilterV7ToLegacy(getGridStringQuickFilterFn),\n  getApplyQuickFilterFnV7: getGridStringQuickFilterFn\n};","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { escapeRegExp } from '../utils/utils';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nimport { convertLegacyOperators, tagInternalFilter } from './utils';\nimport { removeDiacritics } from '../hooks/features/filter/gridFilterUtils';\nexport const getGridStringQuickFilterFn = tagInternalFilter(value => {\n  if (!value) {\n    return null;\n  }\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return (_, row, column, apiRef) => {\n    let columnValue = apiRef.current.getRowFormattedValue(row, column);\n    if (apiRef.current.ignoreDiacritics) {\n      columnValue = removeDiacritics(columnValue);\n    }\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n});\nexport const getGridStringOperators = (disableTrim = false) => convertLegacyOperators([{\n  value: 'contains',\n  getApplyFilterFnV7: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(escapeRegExp(filterItemValue), 'i');\n    return value => {\n      return value != null ? filterRegex.test(String(value)) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'equals',\n  getApplyFilterFnV7: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => {\n      return value != null ? collator.compare(filterItemValue, value.toString()) === 0 : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'startsWith',\n  getApplyFilterFnV7: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`^${escapeRegExp(filterItemValue)}.*$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'endsWith',\n  getApplyFilterFnV7: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`.*${escapeRegExp(filterItemValue)}$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'isEmpty',\n  getApplyFilterFnV7: () => {\n    return value => {\n      return value === '' || value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFnV7: () => {\n    return value => {\n      return value !== '' && value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFnV7: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(val => val.trim());\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => value != null ? filterItemValue.some(filterValue => {\n      return collator.compare(filterValue, value.toString() || '') === 0;\n    }) : false;\n  },\n  InputComponent: GridFilterInputMultipleValue\n}]);","import _extends from \"@babel/runtime/helpers/esm/extends\";\n/**\n * A global API ref, for v7-to-legacy converter\n */\nexport const GLOBAL_API_REF = {\n  current: null\n};\n\n/**\n * A tagger to determine if the filter is internal or custom user-supplied.\n * To be a valid internal filter, the v7 function *must* be defined/redefined at\n * the same time as the legacy one.\n * https://github.com/mui/mui-x/pull/9254#discussion_r1231095551\n */\nexport function tagInternalFilter(fn) {\n  fn.isInternal = true;\n  return fn;\n}\nexport function isInternalFilter(fn) {\n  return fn !== undefined && fn.isInternal === true;\n}\nexport function convertFilterV7ToLegacy(fn) {\n  return tagInternalFilter((filterItem, column) => {\n    const filterFn = fn(filterItem, column);\n    if (!filterFn) {\n      return filterFn;\n    }\n    return cellParams => {\n      return filterFn(cellParams.value, cellParams.row, column, GLOBAL_API_REF.current);\n    };\n  });\n}\nexport function convertLegacyOperators(ops) {\n  return ops.map(op => {\n    return _extends({}, op, {\n      getApplyFilterFn: convertFilterV7ToLegacy(op.getApplyFilterFnV7),\n      getApplyFilterFnV7: tagInternalFilter(op.getApplyFilterFnV7)\n    });\n  });\n}\nexport function convertQuickFilterV7ToLegacy(fn) {\n  return tagInternalFilter((filterItem, column, apiRef) => {\n    const filterFn = fn(filterItem, column, apiRef);\n    if (!filterFn) {\n      return filterFn;\n    }\n    return cellParams => {\n      return filterFn(cellParams.value, cellParams.row, column, apiRef);\n    };\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridColumnGroupsLookupSelector } from '../../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { isEventTargetInPortal } from '../../utils/domUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    headerAlign,\n    isDragging,\n    showColumnBorder,\n    groupId\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', headerAlign === 'left' && 'columnHeader--alignLeft', headerAlign === 'center' && 'columnHeader--alignCenter', headerAlign === 'right' && 'columnHeader--alignRight', isDragging && 'columnHeader--moving', showColumnBorder && 'columnHeader--showColumnBorder', showColumnBorder && 'columnHeader--withRightBorder', 'withBorderColor', groupId === null ? 'columnHeader--emptyGroup' : 'columnHeader--filledGroup'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer', 'withBorderColor'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnGroupHeader(props) {\n  var _columnGroupsLookup$g;\n  const {\n    groupId,\n    width,\n    depth,\n    maxDepth,\n    fields,\n    height,\n    colIndex,\n    hasFocus,\n    tabIndex,\n    isLastColumn\n  } = props;\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const columnGroupsLookup = useGridSelector(apiRef, gridColumnGroupsLookupSelector);\n  const group = groupId ? columnGroupsLookup[groupId] : {};\n  const {\n    headerName = groupId != null ? groupId : '',\n    description = '',\n    headerAlign = undefined\n  } = group;\n  let headerComponent;\n  const render = groupId && ((_columnGroupsLookup$g = columnGroupsLookup[groupId]) == null ? void 0 : _columnGroupsLookup$g.renderHeaderGroup);\n  const renderParams = React.useMemo(() => ({\n    groupId,\n    headerName,\n    description,\n    depth,\n    maxDepth,\n    fields,\n    colIndex,\n    isLastColumn\n  }), [groupId, headerName, description, depth, maxDepth, fields, colIndex, isLastColumn]);\n  if (groupId && render) {\n    headerComponent = render(renderParams);\n  }\n  const showColumnBorder = rootProps.showColumnVerticalBorder;\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showColumnBorder,\n    headerAlign,\n    depth,\n    isDragging: false\n  });\n  const label = headerName != null ? headerName : groupId;\n  const id = useId();\n  const elementId = groupId === null ? `empty-group-cell-${id}` : groupId;\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (hasFocus) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus == null || elementToFocus.focus();\n    }\n  }, [apiRef, hasFocus]);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, renderParams, event);\n  },\n  // For now this is stupid, because renderParams change all the time.\n  // Need to move it's computation in the api, such that for a given depth+columnField, I can get the group parameters\n  [apiRef, renderParams]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onKeyDown: publish('columnGroupHeaderKeyDown'),\n    onFocus: publish('columnGroupHeaderFocus'),\n    onBlur: publish('columnGroupHeaderBlur')\n  }), [publish]);\n  const headerClassName = typeof group.headerClassName === 'function' ? group.headerClassName(renderParams) : group.headerClassName;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: false,\n    colIndex: colIndex,\n    height: height,\n    isResizing: false,\n    sortDirection: null,\n    hasFocus: false,\n    tabIndex: tabIndex,\n    isDraggable: false,\n    headerComponent: headerComponent,\n    headerClassName: headerClassName,\n    description: description,\n    elementId: elementId,\n    width: width,\n    columnMenuIconButton: null,\n    columnTitleIconButtons: null,\n    resizable: false,\n    label: label,\n    \"aria-colspan\": fields.length\n    // The fields are wrapped between |-...-| to avoid confusion between fields \"id\" and \"id2\" when using selector data-fields~=\n    ,\n    \"data-fields\": `|-${fields.join('-|-')}-|`\n  }, mouseEventsHandlers));\n}\nexport { GridColumnGroupHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { styled, useTheme } from '@mui/material/styles';\nimport { defaultMemoize } from 'reselect';\nimport { useGridSelector } from '../../utils';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridColumnHeaderItem } from '../../../components/columnHeaders/GridColumnHeaderItem';\nimport { getFirstColumnIndexToRender, getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { areRenderContextsEqual, getRenderableIndexes } from '../virtualization/useGridVirtualScroller';\nimport { gridVirtualizationColumnEnabledSelector } from '../virtualization';\nimport { GridColumnGroupHeader } from '../../../components/columnHeaders/GridColumnGroupHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (props, styles) => styles.columnHeaderRow\n})(() => ({\n  display: 'flex'\n}));\nfunction isUIEvent(event) {\n  return !!event.target;\n}\nexport const useGridColumnHeaders = props => {\n  const {\n    innerRef: innerRefProp,\n    minColumnIndex = 0,\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnPositions,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    densityFactor,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const theme = useTheme();\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridPrivateApiContext();\n  const hasVirtualization = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector);\n  const rootProps = useGridRootProps();\n  const innerRef = React.useRef(null);\n  const handleInnerRef = useForkRef(innerRefProp, innerRef);\n  const [renderContext, setRenderContextRaw] = React.useState(null);\n  const prevRenderContext = React.useRef(renderContext);\n  const prevScrollLeft = React.useRef(0);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, rootProps.columnHeaderHeight);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  const setRenderContext = React.useCallback(nextRenderContext => {\n    if (renderContext && nextRenderContext && areRenderContextsEqual(renderContext, nextRenderContext)) {\n      return;\n    }\n    setRenderContextRaw(nextRenderContext);\n  }, [renderContext]);\n  React.useEffect(() => {\n    apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n  }, [apiRef]);\n\n  // memoize `getFirstColumnIndexToRender`, since it's called on scroll\n  const getFirstColumnIndexToRenderRef = React.useRef(defaultMemoize(getFirstColumnIndexToRender, {\n    equalityCheck: (a, b) => ['firstColumnIndex', 'minColumnIndex', 'columnBuffer'].every(key => a[key] === b[key])\n  }));\n  const updateInnerPosition = React.useCallback(nextRenderContext => {\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex,\n      columnBuffer: rootProps.columnBuffer,\n      firstRowToRender,\n      lastRowToRender,\n      apiRef,\n      visibleRows: currentPage.rows\n    });\n    const direction = theme.direction === 'ltr' ? 1 : -1;\n    const offset = firstColumnToRender > 0 ? prevScrollLeft.current - direction * columnPositions[firstColumnToRender] : prevScrollLeft.current;\n    innerRef.current.style.transform = `translate3d(${-offset}px, 0px, 0px)`;\n  }, [columnPositions, minColumnIndex, rootProps.columnBuffer, apiRef, currentPage.rows, rootProps.rowBuffer, theme.direction]);\n  React.useLayoutEffect(() => {\n    if (renderContext) {\n      updateInnerPosition(renderContext);\n    }\n  }, [renderContext, updateInnerPosition]);\n  const handleScroll = React.useCallback(({\n    left,\n    renderContext: nextRenderContext = null\n  }, event) => {\n    var _prevRenderContext$cu, _prevRenderContext$cu2;\n    if (!innerRef.current) {\n      return;\n    }\n\n    // Ignore vertical scroll.\n    // Excepts the first event which sets the previous render context.\n    if (prevScrollLeft.current === left && ((_prevRenderContext$cu = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu.firstColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.firstColumnIndex) && ((_prevRenderContext$cu2 = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu2.lastColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.lastColumnIndex)) {\n      return;\n    }\n    prevScrollLeft.current = left;\n\n    // We can only update the position when we guarantee that the render context has been\n    // rendered. This is achieved using ReactDOM.flushSync or when the context doesn't change.\n    let canUpdateInnerPosition = false;\n    if (nextRenderContext !== prevRenderContext.current || !prevRenderContext.current) {\n      // ReactDOM.flushSync cannot be called on `scroll` events fired inside effects\n      if (isUIEvent(event)) {\n        // To prevent flickering, the inner position can only be updated after the new context has\n        // been rendered. ReactDOM.flushSync ensures that the state changes will happen before\n        // updating the position.\n        ReactDOM.flushSync(() => {\n          setRenderContext(nextRenderContext);\n        });\n        canUpdateInnerPosition = true;\n      } else {\n        setRenderContext(nextRenderContext);\n      }\n      prevRenderContext.current = nextRenderContext;\n    } else {\n      canUpdateInnerPosition = true;\n    }\n\n    // Pass directly the render context to avoid waiting for the next render\n    if (nextRenderContext && canUpdateInnerPosition) {\n      updateInnerPosition(nextRenderContext);\n    }\n  }, [updateInnerPosition, setRenderContext]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScroll);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  const getColumnsToRender = params => {\n    const {\n      renderContext: nextRenderContext = renderContext,\n      minFirstColumn = minColumnIndex,\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n    if (!nextRenderContext) {\n      return null;\n    }\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = !hasVirtualization ? 0 : getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex: minFirstColumn,\n      columnBuffer: rootProps.columnBuffer,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const lastColumnToRender = !hasVirtualization ? maxLastColumn : Math.min(nextRenderContext.lastColumnIndex + rootProps.columnBuffer, maxLastColumn);\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender,\n      minFirstColumn,\n      maxLastColumn\n    };\n  };\n  const getColumnHeaders = (params, other = {}) => {\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender == null) {\n      return null;\n    }\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = columnsToRender;\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex\n      }, other), colDef.field));\n    }\n    return /*#__PURE__*/_jsx(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      children: columns\n    });\n  };\n  const getColumnGroupHeaders = params => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender == null || columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const columns = [];\n    const headerToRender = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      var _apiRef$current$unsta, _apiRef$current$unsta2;\n      const rowStructure = columnGroupsHeaderStructure[depth];\n      const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n      const firstGroupToRender = (_apiRef$current$unsta = apiRef.current.unstable_getColumnGroupPath(firstColumnFieldToRender)[depth]) != null ? _apiRef$current$unsta : null;\n      const firstGroupIndex = rowStructure.findIndex(({\n        groupId,\n        columnFields\n      }) => groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender));\n      const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n      const lastGroupToRender = (_apiRef$current$unsta2 = apiRef.current.unstable_getColumnGroupPath(lastColumnFieldToRender)[depth]) != null ? _apiRef$current$unsta2 : null;\n      const lastGroupIndex = rowStructure.findIndex(({\n        groupId,\n        columnFields\n      }) => groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender));\n      const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n        return _extends({}, groupStructure, {\n          columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n        });\n      }).filter(groupStructure => groupStructure.columnFields.length > 0);\n      const firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n      const hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n      const leftOverflow = hiddenGroupColumns.reduce((acc, field) => {\n        var _column$computedWidth;\n        const column = apiRef.current.getColumn(field);\n        return acc + ((_column$computedWidth = column.computedWidth) != null ? _column$computedWidth : 0);\n      }, 0);\n      let columnIndex = firstColumnToRender;\n      const elements = visibleColumnGroupHeader.map(({\n        groupId,\n        columnFields\n      }) => {\n        const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n        const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n        const headerInfo = {\n          groupId,\n          width: columnFields.reduce((acc, field) => acc + apiRef.current.getColumn(field).computedWidth, 0),\n          fields: columnFields,\n          colIndex: columnIndex,\n          hasFocus,\n          tabIndex\n        };\n        columnIndex += columnFields.length;\n        return headerInfo;\n      });\n      headerToRender.push({\n        leftOverflow,\n        elements\n      });\n    }\n    headerToRender.forEach((depthInfo, depthIndex) => {\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderRow, {\n        style: {\n          height: `${headerHeight}px`,\n          transform: `translateX(-${depthInfo.leftOverflow}px)`\n        },\n        role: \"row\",\n        \"aria-rowindex\": depthIndex + 1,\n        ownerState: rootProps,\n        children: depthInfo.elements.map(({\n          groupId,\n          width,\n          fields,\n          colIndex,\n          hasFocus,\n          tabIndex\n        }, groupIndex) => {\n          return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n            groupId: groupId,\n            width: width,\n            fields: fields,\n            colIndex: colIndex,\n            depth: depthIndex,\n            isLastColumn: colIndex === visibleColumns.length - fields.length,\n            maxDepth: headerToRender.length,\n            height: headerHeight,\n            hasFocus: hasFocus,\n            tabIndex: tabIndex\n          }, groupIndex);\n        })\n      }, depthIndex));\n    });\n    return columns;\n  };\n  const rootStyle = {\n    minHeight: totalHeaderHeight,\n    maxHeight: totalHeaderHeight,\n    lineHeight: `${headerHeight}px`\n  };\n  return {\n    renderContext,\n    getColumnHeaders,\n    getColumnsToRender,\n    getColumnGroupHeaders,\n    isDragging: !!dragCol,\n    getRootProps: (other = {}) => _extends({\n      style: rootStyle\n    }, other),\n    getInnerProps: () => ({\n      ref: handleInnerRef,\n      role: 'rowgroup'\n    }),\n    headerHeight\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaders', 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeadersRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaders',\n  overridesResolver: (props, styles) => styles.columnHeaders\n})({\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'flex',\n  alignItems: 'center',\n  boxSizing: 'border-box',\n  borderBottom: '1px solid',\n  borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n  borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n});\nexport const GridBaseColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeadersRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other, {\n    role: \"presentation\"\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"isDragging\", \"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { gridClasses, getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    isDragging,\n    hasScrollX,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeadersInner', isDragging && 'columnHeaderDropZone', hasScrollX && 'columnHeadersInner--scrollable']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeadersInnerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'columnHeadersInner',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses.columnHeaderDropZone}`]: styles.columnHeaderDropZone\n  }, styles.columnHeadersInner]\n})(() => ({\n  display: 'flex',\n  alignItems: 'flex-start',\n  flexDirection: 'column',\n  [`&.${gridClasses.columnHeaderDropZone} .${gridClasses.columnHeaderDraggableContainer}`]: {\n    cursor: 'move'\n  },\n  [`&.${gridClasses['columnHeadersInner--scrollable']} .${gridClasses.columnHeader}:last-child`]: {\n    borderRight: 'none'\n  }\n}));\nexport const GridColumnHeadersInner = /*#__PURE__*/React.forwardRef(function GridColumnHeadersInner(props, ref) {\n  var _apiRef$current$getRo, _apiRef$current$getRo2;\n  const {\n      isDragging,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    isDragging,\n    hasScrollX: (_apiRef$current$getRo = (_apiRef$current$getRo2 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo2.hasScrollX) != null ? _apiRef$current$getRo : false\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridColumnHeadersInnerRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root),\n    ownerState: ownerState\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"innerRef\", \"className\", \"visibleColumns\", \"sortColumnLookup\", \"filterColumnLookup\", \"columnPositions\", \"columnHeaderTabIndexState\", \"columnGroupHeaderTabIndexState\", \"columnHeaderFocus\", \"columnGroupHeaderFocus\", \"densityFactor\", \"headerGroupingMaxDepth\", \"columnMenuState\", \"columnVisibility\", \"columnGroupsHeaderStructure\", \"hasOtherElementInTabSequence\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { fastMemo } from '../utils/fastMemo';\nimport { useGridColumnHeaders } from '../hooks/features/columnHeaders/useGridColumnHeaders';\nimport { GridBaseColumnHeaders } from './columnHeaders/GridBaseColumnHeaders';\nimport { GridColumnHeadersInner } from './columnHeaders/GridColumnHeadersInner';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnsHeaders(props, ref) {\n  const {\n      innerRef,\n      visibleColumns,\n      sortColumnLookup,\n      filterColumnLookup,\n      columnPositions,\n      columnHeaderTabIndexState,\n      columnGroupHeaderTabIndexState,\n      columnHeaderFocus,\n      columnGroupHeaderFocus,\n      densityFactor,\n      headerGroupingMaxDepth,\n      columnMenuState,\n      columnVisibility,\n      columnGroupsHeaderStructure,\n      hasOtherElementInTabSequence\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isDragging,\n    getRootProps,\n    getInnerProps,\n    getColumnHeaders,\n    getColumnGroupHeaders\n  } = useGridColumnHeaders({\n    innerRef,\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnPositions,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    densityFactor,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  });\n  return /*#__PURE__*/_jsx(GridBaseColumnHeaders, _extends({\n    ref: ref\n  }, getRootProps(other), {\n    children: /*#__PURE__*/_jsxs(GridColumnHeadersInner, _extends({\n      isDragging: isDragging\n    }, getInnerProps(), {\n      children: [getColumnGroupHeaders(), getColumnHeaders()]\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaders.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnGroupHeaderFocus: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupHeaderTabIndexState: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupsHeaderStructure: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.shape({\n    columnFields: PropTypes.arrayOf(PropTypes.string).isRequired,\n    groupId: PropTypes.string\n  }))).isRequired,\n  columnHeaderFocus: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnHeaderTabIndexState: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnMenuState: PropTypes.shape({\n    field: PropTypes.string,\n    open: PropTypes.bool.isRequired\n  }).isRequired,\n  columnPositions: PropTypes.arrayOf(PropTypes.number).isRequired,\n  columnVisibility: PropTypes.object.isRequired,\n  densityFactor: PropTypes.number.isRequired,\n  filterColumnLookup: PropTypes.object.isRequired,\n  hasOtherElementInTabSequence: PropTypes.bool.isRequired,\n  headerGroupingMaxDepth: PropTypes.number.isRequired,\n  innerRef: refType,\n  minColumnIndex: PropTypes.number,\n  sortColumnLookup: PropTypes.object.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridColumnHeaders = fastMemo(GridColumnHeaders);\nexport { MemoizedGridColumnHeaders as GridColumnHeaders };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridTopLevelRowCountSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { selectedGridRowsCountSelector } from '../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { gridFilteredTopLevelRowCountSelector } from '../hooks/features/filter/gridFilterSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridSelectedRowCount } from './GridSelectedRowCount';\nimport { GridFooterContainer } from './containers/GridFooterContainer';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {\n  var _rootProps$slotProps, _rootProps$slotProps2;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(rootProps.slots.footerRowCount, _extends({}, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.footerRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  })) : null;\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.slots.pagination && /*#__PURE__*/_jsx(rootProps.slots.pagination, _extends({}, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.pagination));\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({\n    ref: ref\n  }, props, {\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridHeader() {\n  var _rootProps$slotProps, _rootProps$slotProps2;\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.slots.preferencesPanel, _extends({}, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.preferencesPanel)), rootProps.slots.toolbar && /*#__PURE__*/_jsx(rootProps.slots.toolbar, _extends({}, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.toolbar))]\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridLoadingOverlay(props, ref) {\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: /*#__PURE__*/_jsx(CircularProgress, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = /*#__PURE__*/React.forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { styled } from '@mui/material/styles';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridFilteredTopLevelRowCountSelector } from '../hooks/features/filter';\nimport { gridPaginationModelSelector } from '../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\n\n// A mutable version of a readonly array.\n\nexport const GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const rowCount = React.useMemo(() => {\n    var _ref, _rootProps$rowCount;\n    return (_ref = (_rootProps$rowCount = rootProps.rowCount) != null ? _rootProps$rowCount : visibleTopLevelRowCount) != null ? _ref : 0;\n  }, [rootProps.rowCount, visibleTopLevelRowCount]);\n  const lastPage = React.useMemo(() => Math.floor(rowCount / (paginationModel.pageSize || 1)), [rowCount, paginationModel.pageSize]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const pageSize = Number(event.target.value);\n    apiRef.current.setPageSize(pageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((_, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n  const isPageSizeIncludedInPageSizeOptions = pageSize => {\n    for (let i = 0; i < rootProps.pageSizeOptions.length; i += 1) {\n      const option = rootProps.pageSizeOptions[i];\n      if (typeof option === 'number') {\n        if (option === pageSize) {\n          return true;\n        }\n      } else if (option.value === pageSize) {\n        return true;\n      }\n    }\n    return false;\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    var _rootProps$pagination, _rootProps$pagination2;\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingInPageSizeOptions = React.useRef(false);\n    const pageSize = (_rootProps$pagination = (_rootProps$pagination2 = rootProps.paginationModel) == null ? void 0 : _rootProps$pagination2.pageSize) != null ? _rootProps$pagination : paginationModel.pageSize;\n    if (!warnedOnceMissingInPageSizeOptions.current && !rootProps.autoPageSize && !isPageSizeIncludedInPageSizeOptions(pageSize)) {\n      console.warn([`MUI: The page size \\`${paginationModel.pageSize}\\` is not preset in the \\`pageSizeOptions\\``, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingInPageSizeOptions.current = true;\n    }\n  }\n  const pageSizeOptions = isPageSizeIncludedInPageSizeOptions(paginationModel.pageSize) ? rootProps.pageSizeOptions : [];\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref,\n    component: \"div\",\n    count: rowCount,\n    page: paginationModel.page <= lastPage ? paginationModel.page : lastPage\n    // TODO: Remove the cast once the type is fixed in Material UI and that the min Material UI version\n    // for x-data-grid is past the fix.\n    // Note that Material UI will not mutate the array, so this is safe.\n    ,\n    rowsPerPageOptions: pageSizeOptions,\n    rowsPerPage: paginationModel.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, apiRef.current.getLocaleText('MuiTablePagination'), props));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"hovered\", \"rowId\", \"row\", \"index\", \"style\", \"position\", \"rowHeight\", \"className\", \"visibleColumns\", \"renderedColumns\", \"containerWidth\", \"firstColumnToRender\", \"lastColumnToRender\", \"isLastVisible\", \"focusedCellColumnIndexNotInRange\", \"isNotVisible\", \"focusedCell\", \"tabbableCell\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\", \"onMouseOut\", \"onMouseOver\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { fastMemo } from '../utils/fastMemo';\nimport { GridEditModes, GridRowModes, GridCellModes } from '../models/gridEditRowModel';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridColumnsTotalWidthSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector, objectShallowCompare } from '../hooks/utils/useGridSelector';\nimport { useGridVisibleRows } from '../hooks/utils/useGridVisibleRows';\nimport { findParentElementFromClassName, isEventTargetInPortal } from '../utils/domUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../colDef/gridCheckboxSelectionColDef';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../colDef/gridActionsColDef';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../constants/gridDetailPanelToggleField';\nimport { gridSortModelSelector } from '../hooks/features/sorting/gridSortingSelector';\nimport { gridRowMaximumTreeDepthSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { randomNumberBetween } from '../utils/utils';\nimport { GridCellWrapper, GridCellV7 } from './cell/GridCell';\nimport { gridEditRowsStateSelector } from '../hooks/features/editing/gridEditingSelectors';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    editable,\n    editing,\n    selected,\n    isLastVisible,\n    rowHeight,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isLastVisible && 'row--lastVisible', rowHeight === 'auto' && 'row--dynamicHeight']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction EmptyCell({\n  width\n}) {\n  if (!width) {\n    return null;\n  }\n  const style = {\n    width\n  };\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: `${gridClasses.cell} ${gridClasses.withBorderColor}`,\n    style: style\n  }); // TODO change to .MuiDataGrid-emptyCell or .MuiDataGrid-rowFiller\n}\nconst GridRow = /*#__PURE__*/React.forwardRef(function GridRow(props, refProp) {\n  const {\n      selected,\n      hovered,\n      rowId,\n      row,\n      index,\n      style: styleProp,\n      position,\n      rowHeight,\n      className,\n      visibleColumns,\n      renderedColumns,\n      containerWidth,\n      firstColumnToRender,\n      isLastVisible = false,\n      focusedCellColumnIndexNotInRange,\n      isNotVisible,\n      focusedCell,\n      onClick,\n      onDoubleClick,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseOut,\n      onMouseOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\n  const handleRef = useForkRef(ref, refProp);\n  const ariaRowIndex = index + headerGroupingMaxDepth + 2; // 1 for the header row and 1 as it's 1-based\n\n  const ownerState = {\n    selected,\n    hovered,\n    isLastVisible,\n    classes: rootProps.classes,\n    editing: apiRef.current.getRowMode(rowId) === GridRowModes.Edit,\n    editable: rootProps.editMode === GridEditModes.Row,\n    rowHeight\n  };\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (rowHeight === 'auto' && ref.current && typeof ResizeObserver === 'undefined') {\n      // Fallback for IE\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, ref.current.clientHeight, position);\n    }\n  }, [apiRef, rowHeight, rowId, position]);\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      // The index prop is relative to the rows from all pages. As example, the index prop of the\n      // first row is 5 if `paginationModel.pageSize=5` and `paginationModel.page=1`. However, the index used by the virtualization\n      // doesn't care about pagination and considers the rows from the current page only, so the\n      // first row always has index=0. We need to subtract the index of the first row to make it\n      // compatible with the index used by the virtualization.\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId);\n      // pinned rows are not part of the visible rows\n      if (rowIndex != null) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n    const rootElement = ref.current;\n    const hasFixedHeight = rowHeight !== 'auto';\n    if (!rootElement || hasFixedHeight || typeof ResizeObserver === 'undefined') {\n      return undefined;\n    }\n    const resizeObserver = new ResizeObserver(entries => {\n      const [entry] = entries;\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height, position);\n    });\n    resizeObserver.observe(rootElement);\n    return () => resizeObserver.disconnect();\n  }, [apiRef, currentPage.range, index, rowHeight, rowId, position]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell == null ? void 0 : cell.getAttribute('data-field');\n\n    // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      }\n\n      // User opened a detail panel\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      }\n\n      // User reorders a row\n      if (field === '__reorder__') {\n        return;\n      }\n\n      // User is editing a cell\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      }\n\n      // User clicked a button from the \"actions\" column type\n      const column = apiRef.current.getColumn(field);\n      if ((column == null ? void 0 : column.type) === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const {\n    slots,\n    slotProps,\n    disableColumnReorder\n  } = rootProps;\n  const CellComponent = slots.cell === GridCellV7 ? GridCellV7 : GridCellWrapper;\n  const rowReordering = rootProps.rowReordering;\n  const getCell = (column, cellProps) => {\n    var _editRowsState$rowId$, _editRowsState$rowId;\n    const disableDragEvents = disableColumnReorder && column.disableReorder || !rowReordering && !!sortModel.length && treeDepth > 1 && Object.keys(editRowsState).length > 0;\n    const editCellState = (_editRowsState$rowId$ = (_editRowsState$rowId = editRowsState[rowId]) == null ? void 0 : _editRowsState$rowId[column.field]) != null ? _editRowsState$rowId$ : null;\n    let cellIsNotVisible = false;\n    if (focusedCellColumnIndexNotInRange !== undefined && visibleColumns[focusedCellColumnIndexNotInRange].field === column.field) {\n      cellIsNotVisible = true;\n    }\n    return /*#__PURE__*/_jsx(CellComponent, _extends({\n      column: column,\n      width: cellProps.width,\n      rowId: rowId,\n      height: rowHeight,\n      showRightBorder: cellProps.showRightBorder,\n      align: column.align || 'left',\n      colIndex: cellProps.indexRelativeToAllColumns,\n      colSpan: cellProps.colSpan,\n      disableDragEvents: disableDragEvents,\n      editCellState: editCellState,\n      isNotVisible: cellIsNotVisible\n    }, slotProps == null ? void 0 : slotProps.cell), column.field);\n  };\n  const sizes = useGridSelector(apiRef, () => _extends({}, apiRef.current.unstable_getRowInternalSizes(rowId)), objectShallowCompare);\n  let minHeight = rowHeight;\n  if (minHeight === 'auto' && sizes) {\n    let numberOfBaseSizes = 0;\n    const maximumSize = Object.entries(sizes).reduce((acc, [key, size]) => {\n      const isBaseHeight = /^base[A-Z]/.test(key);\n      if (!isBaseHeight) {\n        return acc;\n      }\n      numberOfBaseSizes += 1;\n      if (size > acc) {\n        return size;\n      }\n      return acc;\n    }, 0);\n    if (maximumSize > 0 && numberOfBaseSizes > 1) {\n      minHeight = maximumSize;\n    }\n  }\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        opacity: 0,\n        width: 0,\n        height: 0\n      };\n    }\n    const rowStyle = _extends({}, styleProp, {\n      maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n      // max-height doesn't support \"auto\"\n      minHeight\n    });\n    if (sizes != null && sizes.spacingTop) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n      rowStyle[property] = sizes.spacingTop;\n    }\n    if (sizes != null && sizes.spacingBottom) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n      let propertyValue = rowStyle[property];\n      // avoid overriding existing value\n      if (typeof propertyValue !== 'number') {\n        propertyValue = parseInt(propertyValue || '0', 10);\n      }\n      propertyValue += sizes.spacingBottom;\n      rowStyle[property] = propertyValue;\n    }\n    return rowStyle;\n  }, [isNotVisible, rowHeight, styleProp, minHeight, sizes, rootProps.rowSpacingType]);\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n  if (typeof rootProps.getRowClassName === 'function') {\n    var _currentPage$range;\n    const indexRelativeToCurrentPage = index - (((_currentPage$range = currentPage.range) == null ? void 0 : _currentPage$range.firstRowIndex) || 0);\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n  const randomNumber = randomNumberBetween(10000, 20, 80);\n  const rowNode = apiRef.current.getRowNode(rowId);\n  if (!rowNode) {\n    return null;\n  }\n  const rowType = rowNode.type;\n  const cells = [];\n  for (let i = 0; i < renderedColumns.length; i += 1) {\n    const column = renderedColumns[i];\n    let indexRelativeToAllColumns = firstColumnToRender + i;\n    if (focusedCellColumnIndexNotInRange !== undefined && focusedCell) {\n      if (visibleColumns[focusedCellColumnIndexNotInRange].field === column.field) {\n        indexRelativeToAllColumns = focusedCellColumnIndexNotInRange;\n      } else {\n        indexRelativeToAllColumns -= 1;\n      }\n    }\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n    if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n      if (rowType !== 'skeletonRow') {\n        const {\n          colSpan,\n          width\n        } = cellColSpanInfo.cellProps;\n        const cellProps = {\n          width,\n          colSpan,\n          showRightBorder: rootProps.showCellVerticalBorder,\n          indexRelativeToAllColumns\n        };\n        cells.push(getCell(column, cellProps));\n      } else {\n        const {\n          width\n        } = cellColSpanInfo.cellProps;\n        const contentWidth = Math.round(randomNumber());\n        cells.push( /*#__PURE__*/_jsx(slots.skeletonCell, {\n          width: width,\n          contentWidth: contentWidth,\n          field: column.field,\n          align: column.align\n        }, column.field));\n      }\n    }\n  }\n  const emptyCellWidth = containerWidth - columnsTotalWidth;\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave),\n    onMouseOut: publish('rowMouseOut', onMouseOut),\n    onMouseOver: publish('rowMouseOver', onMouseOver)\n  } : null;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className, hovered && 'Mui-hovered'),\n    \"aria-rowindex\": ariaRowIndex,\n    \"aria-selected\": selected,\n    style: style\n  }, eventHandlers, other, {\n    children: [cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  containerWidth: PropTypes.number.isRequired,\n  firstColumnToRender: PropTypes.number.isRequired,\n  /**\n   * Determines which cell has focus.\n   * If `null`, no cell in this row has focus.\n   */\n  focusedCell: PropTypes.string,\n  focusedCellColumnIndexNotInRange: PropTypes.number,\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isLastVisible: PropTypes.bool,\n  isNotVisible: PropTypes.bool,\n  lastColumnToRender: PropTypes.number.isRequired,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  position: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  renderedColumns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  row: PropTypes.object,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  /**\n   * Determines which cell should be tabbable by having tabIndex=0.\n   * If `null`, no cell in this row is in the tab sequence.\n   */\n  tabbableCell: PropTypes.string,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridRow = fastMemo(GridRow);\nexport { MemoizedGridRow as GridRow };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"rowCount\", \"visibleRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'RowCount',\n  overridesResolver: (props, styles) => styles.rowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2)\n}));\nconst GridRowCount = /*#__PURE__*/React.forwardRef(function GridRowCount(props, ref) {\n  const {\n      className,\n      rowCount,\n      visibleRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  if (rowCount === 0) {\n    return null;\n  }\n  const text = visibleRowCount < rowCount ? apiRef.current.getLocaleText('footerTotalVisibleRows')(visibleRowCount, rowCount) : rowCount.toLocaleString();\n  return /*#__PURE__*/_jsxs(GridRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: [apiRef.current.getLocaleText('footerTotalRows'), \" \", text]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  rowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  visibleRowCount: PropTypes.number.isRequired\n} : void 0;\nexport { GridRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selectedRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['selectedRowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridSelectedRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SelectedRowCount',\n  overridesResolver: (props, styles) => styles.selectedRowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2),\n  visibility: 'hidden',\n  width: 0,\n  height: 0,\n  [theme.breakpoints.up('sm')]: {\n    visibility: 'visible',\n    width: 'auto',\n    height: 'auto'\n  }\n}));\nconst GridSelectedRowCount = /*#__PURE__*/React.forwardRef(function GridSelectedRowCount(props, ref) {\n  const {\n      className,\n      selectedRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  const rowSelectedText = apiRef.current.getLocaleText('footerRowSelected')(selectedRowCount);\n  return /*#__PURE__*/_jsx(GridSelectedRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: rowSelectedText\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridSelectedRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  selectedRowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridSelectedRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridAriaAttributes } from '../../hooks/utils/useGridAriaAttributes';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['main']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridMainContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Main',\n  overridesResolver: (props, styles) => styles.main\n})(() => ({\n  position: 'relative',\n  flexGrow: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'hidden'\n}));\nexport const GridMainContainer = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _rootProps$experiment;\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const getAriaAttributes = (_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.ariaV7 // ariaV7 should never change\n  ? useGridAriaAttributes : null;\n  const ariaAttributes = typeof getAriaAttributes === 'function' ? getAriaAttributes() : null;\n  return /*#__PURE__*/_jsx(GridMainContainerRoot, _extends({\n    ref: ref,\n    className: classes.root,\n    ownerState: rootProps\n  }, ariaAttributes, {\n    children: props.children\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridMainContainer } from '../containers/GridMainContainer';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridColumnPositionsSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { gridFilterActiveItemsLookupSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridSortColumnLookupSelector } from '../../hooks/features/sorting/gridSortingSelector';\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector, unstable_gridTabIndexColumnGroupHeaderSelector, unstable_gridFocusColumnGroupHeaderSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { gridDensityFactorSelector } from '../../hooks/features/density/densitySelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector, gridColumnGroupsHeaderStructureSelector } from '../../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { gridColumnMenuSelector } from '../../hooks/features/columnMenu/columnMenuSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridBody(props) {\n  const {\n    VirtualScrollerComponent,\n    ColumnHeadersProps,\n    children\n  } = props;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const rootRef = React.useRef(null);\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const columnHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const cellTabIndexState = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const columnGroupHeaderTabIndexState = useGridSelector(apiRef, unstable_gridTabIndexColumnGroupHeaderSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const columnGroupHeaderFocus = useGridSelector(apiRef, unstable_gridFocusColumnGroupHeaderSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const columnVisibility = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const columnGroupsHeaderStructure = useGridSelector(apiRef, gridColumnGroupsHeaderStructureSelector);\n  const hasOtherElementInTabSequence = !(columnGroupHeaderTabIndexState === null && columnHeaderTabIndexState === null && cellTabIndexState === null);\n  useEnhancedEffect(() => {\n    apiRef.current.computeSizeAndPublishResizeEvent();\n    const elementToObserve = rootRef.current;\n    if (typeof ResizeObserver === 'undefined') {\n      return () => {};\n    }\n    let animationFrame;\n    const observer = new ResizeObserver(() => {\n      // See https://github.com/mui/mui-x/issues/8733\n      animationFrame = requestAnimationFrame(() => {\n        apiRef.current.computeSizeAndPublishResizeEvent();\n      });\n    });\n    if (elementToObserve) {\n      observer.observe(elementToObserve);\n    }\n    return () => {\n      if (animationFrame) {\n        window.cancelAnimationFrame(animationFrame);\n      }\n      if (elementToObserve) {\n        observer.unobserve(elementToObserve);\n      }\n    };\n  }, [apiRef]);\n  const columnHeadersRef = React.useRef(null);\n  const columnsContainerRef = React.useRef(null);\n  const virtualScrollerRef = React.useRef(null);\n  apiRef.current.register('private', {\n    columnHeadersContainerElementRef: columnsContainerRef,\n    columnHeadersElementRef: columnHeadersRef,\n    virtualScrollerRef,\n    mainElementRef: rootRef\n  });\n  const hasDimensions = !!apiRef.current.getRootDimensions();\n  return /*#__PURE__*/_jsxs(GridMainContainer, {\n    ref: rootRef,\n    children: [/*#__PURE__*/_jsx(rootProps.slots.columnHeaders, _extends({\n      ref: columnsContainerRef,\n      innerRef: columnHeadersRef,\n      visibleColumns: visibleColumns,\n      filterColumnLookup: filterColumnLookup,\n      sortColumnLookup: sortColumnLookup,\n      columnPositions: columnPositions,\n      columnHeaderTabIndexState: columnHeaderTabIndexState,\n      columnGroupHeaderTabIndexState: columnGroupHeaderTabIndexState,\n      columnHeaderFocus: columnHeaderFocus,\n      columnGroupHeaderFocus: columnGroupHeaderFocus,\n      densityFactor: densityFactor,\n      headerGroupingMaxDepth: headerGroupingMaxDepth,\n      columnMenuState: columnMenuState,\n      columnVisibility: columnVisibility,\n      columnGroupsHeaderStructure: columnGroupsHeaderStructure,\n      hasOtherElementInTabSequence: hasOtherElementInTabSequence\n    }, ColumnHeadersProps)), hasDimensions && /*#__PURE__*/_jsx(VirtualScrollerComponent\n    // The content is only rendered after dimensions are computed because\n    // the lazy-loading hook is listening to `renderedRowsIntervalChange`,\n    // but only does something if the dimensions are also available.\n    // If this event is published while dimensions haven't been computed,\n    // the `onFetchRows` prop won't be called during mount.\n    , {\n      ref: virtualScrollerRef\n    }), children]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBody.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  ColumnHeadersProps: PropTypes.object,\n  VirtualScrollerComponent: PropTypes.elementType.isRequired\n} : void 0;\nexport { GridBody };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridFooterPlaceholder() {\n  var _rootProps$slotProps;\n  const rootProps = useGridRootProps();\n  if (rootProps.hideFooter) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.footer, _extends({}, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.footer));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport clsx from 'clsx';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridExpandedRowCountSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridRowCountSelector, gridRowsLoadingSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getMinimalContentHeight } from '../../hooks/features/rows/gridRowsUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridOverlayWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapper',\n  shouldForwardProp: prop => prop !== 'overlayType',\n  overridesResolver: (props, styles) => styles.overlayWrapper\n})(({\n  overlayType\n}) => ({\n  position: 'sticky',\n  // To stay in place while scrolling\n  top: 0,\n  left: 0,\n  width: 0,\n  // To stay above the content instead of shifting it down\n  height: 0,\n  // To stay above the content instead of shifting it down\n  zIndex: overlayType === 'loadingOverlay' ? 5 // Should be above pinned columns, pinned rows, and detail panel\n  : 4 // Should be above pinned columns and detail panel\n}));\nconst GridOverlayWrapperInner = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapperInner',\n  shouldForwardProp: prop => prop !== 'overlayType',\n  overridesResolver: (props, styles) => styles.overlayWrapperInner\n})({});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlayWrapper'],\n    inner: ['overlayWrapperInner']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridOverlayWrapper(props) {\n  var _viewportInnerSize$he, _viewportInnerSize$wi;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const [viewportInnerSize, setViewportInnerSize] = React.useState(() => {\n    var _apiRef$current$getRo, _apiRef$current$getRo2;\n    return (_apiRef$current$getRo = (_apiRef$current$getRo2 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo2.viewportInnerSize) != null ? _apiRef$current$getRo : null;\n  });\n  const handleViewportSizeChange = React.useCallback(() => {\n    var _apiRef$current$getRo3, _apiRef$current$getRo4;\n    setViewportInnerSize((_apiRef$current$getRo3 = (_apiRef$current$getRo4 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo4.viewportInnerSize) != null ? _apiRef$current$getRo3 : null);\n  }, [apiRef]);\n  useEnhancedEffect(() => {\n    return apiRef.current.subscribeEvent('viewportInnerSizeChange', handleViewportSizeChange);\n  }, [apiRef, handleViewportSizeChange]);\n  let height = (_viewportInnerSize$he = viewportInnerSize == null ? void 0 : viewportInnerSize.height) != null ? _viewportInnerSize$he : 0;\n  if (rootProps.autoHeight && height === 0) {\n    height = getMinimalContentHeight(apiRef, rootProps.rowHeight); // Give room to show the overlay when there no rows.\n  }\n  const classes = useUtilityClasses(_extends({}, props, {\n    classes: rootProps.classes\n  }));\n  if (!viewportInnerSize) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridOverlayWrapperRoot, {\n    className: clsx(classes.root),\n    overlayType: props.overlayType,\n    children: /*#__PURE__*/_jsx(GridOverlayWrapperInner, _extends({\n      className: clsx(classes.inner),\n      style: {\n        height,\n        width: (_viewportInnerSize$wi = viewportInnerSize == null ? void 0 : viewportInnerSize.width) != null ? _viewportInnerSize$wi : 0\n      }\n    }, props))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridOverlayWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  overlayType: PropTypes.string.isRequired\n} : void 0;\nexport function GridOverlays() {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && totalRowCount === 0;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlay = null;\n  let overlayType = '';\n  if (showNoRowsOverlay) {\n    var _rootProps$slotProps;\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.noRowsOverlay, _extends({}, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.noRowsOverlay));\n    overlayType = 'noRowsOverlay';\n  }\n  if (showNoResultsOverlay) {\n    var _rootProps$slotProps2;\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.noResultsOverlay, _extends({}, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.noResultsOverlay));\n    overlayType = 'noResultsOverlay';\n  }\n  if (loading) {\n    var _rootProps$slotProps3;\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.loadingOverlay, _extends({}, (_rootProps$slotProps3 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps3.loadingOverlay));\n    overlayType = 'loadingOverlay';\n  }\n  if (overlay === null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, {\n    overlayType: overlayType,\n    children: overlay\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"api\", \"colDef\", \"id\", \"hasFocus\", \"isEditable\", \"field\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"cellMode\", \"tabIndex\", \"position\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuList from '@mui/material/MenuList';\nimport { useTheme } from '@mui/material/styles';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst hasActions = colDef => typeof colDef.getActions === 'function';\nfunction GridActionsCell(props) {\n  var _rootProps$slotProps;\n  const {\n      colDef,\n      id,\n      hasFocus,\n      tabIndex,\n      position = 'bottom-end',\n      focusElementRef\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [focusedButtonIndex, setFocusedButtonIndex] = React.useState(-1);\n  const [open, setOpen] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootRef = React.useRef(null);\n  const buttonRef = React.useRef(null);\n  const ignoreCallToFocus = React.useRef(false);\n  const touchRippleRefs = React.useRef({});\n  const theme = useTheme();\n  const menuId = useId();\n  const buttonId = useId();\n  const rootProps = useGridRootProps();\n  if (!hasActions(colDef)) {\n    throw new Error('MUI: Missing the `getActions` property in the `GridColDef`.');\n  }\n  const options = colDef.getActions(apiRef.current.getRowParams(id));\n  const iconButtons = options.filter(option => !option.props.showInMenu);\n  const menuButtons = options.filter(option => option.props.showInMenu);\n  const numberOfButtons = iconButtons.length + (menuButtons.length ? 1 : 0);\n  React.useLayoutEffect(() => {\n    if (!hasFocus) {\n      Object.entries(touchRippleRefs.current).forEach(([index, ref]) => {\n        ref == null || ref.stop({}, () => {\n          delete touchRippleRefs.current[index];\n        });\n      });\n    }\n  }, [hasFocus]);\n  React.useEffect(() => {\n    if (focusedButtonIndex < 0 || !rootRef.current) {\n      return;\n    }\n    if (focusedButtonIndex >= rootRef.current.children.length) {\n      return;\n    }\n    const child = rootRef.current.children[focusedButtonIndex];\n    child.focus({\n      preventScroll: true\n    });\n  }, [focusedButtonIndex]);\n  React.useEffect(() => {\n    if (!hasFocus) {\n      setFocusedButtonIndex(-1);\n      ignoreCallToFocus.current = false;\n    }\n  }, [hasFocus]);\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus() {\n      // If ignoreCallToFocus is true, then one of the buttons was clicked and the focus is already set\n      if (!ignoreCallToFocus.current) {\n        // find the first focusable button and pass the index to the state\n        const focusableButtonIndex = options.findIndex(o => !o.props.disabled);\n        setFocusedButtonIndex(focusableButtonIndex);\n      }\n    }\n  }), [options]);\n  React.useEffect(() => {\n    if (focusedButtonIndex >= numberOfButtons) {\n      setFocusedButtonIndex(numberOfButtons - 1);\n    }\n  }, [focusedButtonIndex, numberOfButtons]);\n  const showMenu = () => {\n    setOpen(true);\n    setFocusedButtonIndex(numberOfButtons - 1);\n    ignoreCallToFocus.current = true;\n  };\n  const hideMenu = () => {\n    setOpen(false);\n  };\n  const handleTouchRippleRef = index => instance => {\n    touchRippleRefs.current[index] = instance;\n  };\n  const handleButtonClick = (index, onClick) => event => {\n    setFocusedButtonIndex(index);\n    ignoreCallToFocus.current = true;\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const handleRootKeyDown = event => {\n    if (numberOfButtons <= 1) {\n      return;\n    }\n    const getNewIndex = (index, direction) => {\n      var _options;\n      if (index < 0 || index > options.length) {\n        return index;\n      }\n\n      // for rtl mode we need to reverse the direction\n      const rtlMod = theme.direction === 'rtl' ? -1 : 1;\n      const indexMod = (direction === 'left' ? -1 : 1) * rtlMod;\n\n      // if the button that should receive focus is disabled go one more step\n      return (_options = options[index + indexMod]) != null && _options.props.disabled ? getNewIndex(index + indexMod, direction) : index + indexMod;\n    };\n    let newIndex = focusedButtonIndex;\n    if (event.key === 'ArrowRight') {\n      newIndex = getNewIndex(focusedButtonIndex, 'right');\n    } else if (event.key === 'ArrowLeft') {\n      newIndex = getNewIndex(focusedButtonIndex, 'left');\n    }\n    if (newIndex < 0 || newIndex >= numberOfButtons) {\n      return; // We're already in the first or last item = do nothing and let the grid listen the event\n    }\n    if (newIndex !== focusedButtonIndex) {\n      event.preventDefault(); // Prevent scrolling\n      event.stopPropagation(); // Don't stop propagation for other keys, e.g. ArrowUp\n      setFocusedButtonIndex(newIndex);\n    }\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (['Tab', 'Escape'].includes(event.key)) {\n      hideMenu();\n    }\n  };\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    role: \"menu\",\n    ref: rootRef,\n    tabIndex: -1,\n    className: gridClasses.actionsCell,\n    onKeyDown: handleRootKeyDown\n  }, other, {\n    children: [iconButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      touchRippleRef: handleTouchRippleRef(index),\n      onClick: handleButtonClick(index, button.props.onClick),\n      tabIndex: focusedButtonIndex === index ? tabIndex : -1\n    })), menuButtons.length > 0 && buttonId && /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n      ref: buttonRef,\n      id: buttonId,\n      \"aria-label\": apiRef.current.getLocaleText('actionsCellMore'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-expanded\": open,\n      \"aria-controls\": open ? menuId : undefined,\n      role: \"menuitem\",\n      size: \"small\",\n      onClick: showMenu,\n      touchRippleRef: handleTouchRippleRef(buttonId),\n      tabIndex: focusedButtonIndex === iconButtons.length ? tabIndex : -1\n    }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseIconButton, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.moreActionsIcon, {\n        fontSize: \"small\"\n      })\n    })), menuButtons.length > 0 && /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      position: position,\n      onClose: hideMenu,\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        onKeyDown: handleListKeyDown,\n        \"aria-labelledby\": buttonId,\n        variant: \"menu\",\n        autoFocusItem: true,\n        children: menuButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n          key: index,\n          closeMenu: hideMenu\n        }))\n      })\n    })]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  api: PropTypes.object,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridActionsCell };\nexport const renderActionsCell = params => /*#__PURE__*/_jsx(GridActionsCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { isAutoGeneratedRow } from '../../hooks/features/rows/gridRowsUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridBooleanCellRaw(props) {\n  const {\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const Icon = React.useMemo(() => value ? rootProps.slots.booleanCellTrueIcon : rootProps.slots.booleanCellFalseIcon, [rootProps.slots.booleanCellFalseIcon, rootProps.slots.booleanCellTrueIcon, value]);\n  return /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: apiRef.current.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBooleanCellRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nconst GridBooleanCell = /*#__PURE__*/React.memo(GridBooleanCellRaw);\nexport { GridBooleanCell };\nexport const renderBooleanCell = params => {\n  if (isAutoGeneratedRow(params.rowNode)) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(GridBooleanCell, _extends({}, params));\n};","// Based on https://stackoverflow.com/a/59518678\nlet cachedSupportsPreventScroll;\nexport function doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n    });\n  }\n  return cachedSupportsPreventScroll;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"changeReason\", \"unstable_updateValueOnRender\"],\n  _excluded2 = [\"align\", \"children\", \"editCellState\", \"colIndex\", \"column\", \"cellMode\", \"field\", \"formattedValue\", \"hasFocus\", \"height\", \"isEditable\", \"isSelected\", \"rowId\", \"tabIndex\", \"style\", \"value\", \"width\", \"className\", \"showRightBorder\", \"extendRowFullWidth\", \"row\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded3 = [\"column\", \"rowId\", \"editCellState\", \"align\", \"children\", \"colIndex\", \"height\", \"width\", \"className\", \"showRightBorder\", \"extendRowFullWidth\", \"row\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\", \"style\"],\n  _excluded4 = [\"changeReason\", \"unstable_updateValueOnRender\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_ownerDocument as ownerDocument, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { doesSupportPreventScroll } from '../../utils/doesSupportPreventScroll';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { GridCellModes } from '../../models';\nimport { useGridSelector, objectShallowCompare } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridFocusCellSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { MissingRowIdError } from '../../hooks/features/rows/useGridParamsApi';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst EMPTY_CELL_PARAMS = {\n  id: -1,\n  field: '__unset__',\n  row: {},\n  rowNode: {\n    id: -1,\n    depth: 0,\n    type: 'leaf',\n    parent: -1,\n    groupingKey: null\n  },\n  colDef: {\n    type: 'string',\n    field: '__unset__',\n    computedWidth: 0\n  },\n  cellMode: GridCellModes.View,\n  hasFocus: false,\n  tabIndex: -1,\n  value: null,\n  formattedValue: '__unset__',\n  isEditable: false,\n  api: {}\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showRightBorder,\n    isEditable,\n    isSelected,\n    isSelectionMode,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isEditable && 'cell--editable', isSelected && 'selected', showRightBorder && 'cell--withRightBorder', isSelectionMode && !isEditable && 'cell--selectionMode', 'withBorderColor'],\n    content: ['cellContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\n\n// GridCellWrapper is a compatibility layer for the V6 cell slot. If we can use the more efficient\n// `GridCellV7`, we should. That component is a merge of `GridCellWrapper` and `GridCell`.\n// TODO(v7): Remove the wrapper & cellV6 and use the cellV7 exclusively.\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\nconst GridCellWrapper = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    column,\n    rowId,\n    editCellState\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const field = column.field;\n  const cellParamsWithAPI = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    try {\n      const cellParams = apiRef.current.getCellParams(rowId, field);\n      const result = cellParams;\n      result.api = apiRef.current;\n      return result;\n    } catch (e) {\n      if (e instanceof MissingRowIdError) {\n        return EMPTY_CELL_PARAMS;\n      }\n      throw e;\n    }\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  if (cellParamsWithAPI === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  const {\n    cellMode,\n    hasFocus,\n    isEditable,\n    value,\n    formattedValue\n  } = cellParamsWithAPI;\n  const managesOwnFocus = column.type === 'actions';\n  const tabIndex = (cellMode === 'view' || !isEditable) && !managesOwnFocus ? cellParamsWithAPI.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n  const classNames = apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  });\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParamsWithAPI) : column.cellClassName);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParamsWithAPI));\n  }\n  let children;\n  if (editCellState == null && column.renderCell) {\n    children = column.renderCell(cellParamsWithAPI);\n    classNames.push(gridClasses['cell--withRenderer']);\n    classNames.push(rootClasses == null ? void 0 : rootClasses['cell--withRenderer']);\n  }\n  if (editCellState != null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded);\n    const params = _extends({}, cellParamsWithAPI, {\n      row: updatedRow\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses == null ? void 0 : rootClasses['cell--editing']);\n  }\n  const {\n    slots\n  } = rootProps;\n  const CellComponent = slots.cell;\n  const cellProps = _extends({}, props, {\n    ref,\n    field,\n    formattedValue,\n    hasFocus,\n    isEditable,\n    isSelected,\n    value,\n    cellMode,\n    children,\n    tabIndex,\n    className: clsx(classNames)\n  });\n  return /*#__PURE__*/React.createElement(CellComponent, cellProps);\n});\nconst GridCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _rootProps$experiment, _rootProps$experiment2;\n  const {\n      align,\n      children: childrenProp,\n      colIndex,\n      column,\n      cellMode,\n      field,\n      formattedValue,\n      hasFocus,\n      height,\n      isEditable,\n      isSelected,\n      rowId,\n      tabIndex,\n      style: styleProp,\n      value,\n      width,\n      className,\n      showRightBorder,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  const valueToRender = formattedValue == null ? value : formattedValue;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    align,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    isSelected\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        border: 0\n      };\n    }\n    const cellStyle = _extends({\n      minWidth: width,\n      maxWidth: width,\n      minHeight: height,\n      maxHeight: height === 'auto' ? 'none' : height\n    }, styleProp);\n    return cellStyle;\n  }, [width, height, isNotVisible, styleProp]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && (_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if ((focusedCell == null ? void 0 : focusedCell.id) === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell == null ? void 0 : focusedCell.id}, field=${focusedCell == null ? void 0 : focusedCell.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  const managesOwnFocus = column.type === 'actions';\n  let children = childrenProp;\n  if (children === undefined) {\n    const valueString = valueToRender == null ? void 0 : valueToRender.toString();\n    children = /*#__PURE__*/_jsx(\"div\", {\n      className: classes.content,\n      title: valueString,\n      role: \"presentation\",\n      children: valueString\n    });\n  }\n  if ( /*#__PURE__*/React.isValidElement(children) && managesOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  const ariaV7 = (_rootProps$experiment2 = rootProps.experimentalFeatures) == null ? void 0 : _rootProps$experiment2.ariaV7;\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      ref: handleRef,\n      className: clsx(className, classes.root),\n      role: ariaV7 ? 'gridcell' : 'cell',\n      \"data-field\": field,\n      \"data-colindex\": colIndex,\n      \"aria-colindex\": colIndex + 1,\n      \"aria-colspan\": colSpan,\n      style: style,\n      tabIndex: tabIndex,\n      onClick: publish('cellClick', onClick),\n      onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n      onMouseOver: publish('cellMouseOver', onMouseOver),\n      onMouseDown: publishMouseDown('cellMouseDown'),\n      onMouseUp: publishMouseUp('cellMouseUp'),\n      onKeyDown: publish('cellKeyDown', onKeyDown),\n      onKeyUp: publish('cellKeyUp', onKeyUp)\n    }, draggableEventHandlers, other, {\n      onFocus: handleFocus,\n      children: children\n    }))\n  );\n});\nconst MemoizedCellWrapper = fastMemo(GridCellWrapper);\nprocess.env.NODE_ENV !== \"production\" ? GridCellWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']),\n  className: PropTypes.string,\n  colIndex: PropTypes.number,\n  colSpan: PropTypes.number,\n  column: PropTypes.object,\n  disableDragEvents: PropTypes.bool,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  showRightBorder: PropTypes.bool,\n  width: PropTypes.number\n} : void 0;\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']),\n  cellMode: PropTypes.oneOf(['edit', 'view']),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  colIndex: PropTypes.number,\n  colSpan: PropTypes.number,\n  column: PropTypes.object,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  isNotVisible: PropTypes.bool,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  showRightBorder: PropTypes.bool,\n  width: PropTypes.number\n} : void 0;\nexport { MemoizedCellWrapper as GridCellWrapper, GridCell };\nconst GridCellV7 = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _getActions, _ref, _rootProps$unstable_c, _rootProps$experiment3, _rootProps$experiment4;\n  const {\n      column,\n      rowId,\n      editCellState,\n      align,\n      colIndex,\n      height,\n      width,\n      className,\n      showRightBorder,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver,\n      style: styleProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded3);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const field = column.field;\n  const cellParamsWithAPI = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    try {\n      const cellParams = apiRef.current.getCellParams(rowId, field);\n      const result = cellParams;\n      result.api = apiRef.current;\n      return result;\n    } catch (e) {\n      if (e instanceof MissingRowIdError) {\n        return EMPTY_CELL_PARAMS;\n      }\n      throw e;\n    }\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const {\n    cellMode,\n    hasFocus,\n    isEditable,\n    value,\n    formattedValue\n  } = cellParamsWithAPI;\n  const canManageOwnFocus = column.type === 'actions' && ((_getActions = (_ref = column).getActions) == null ? void 0 : _getActions.call(_ref, apiRef.current.getRowParams(rowId)).some(action => !action.props.disabled));\n  const tabIndex = (cellMode === 'view' || !isEditable) && !canManageOwnFocus ? cellParamsWithAPI.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n  const classNames = apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  });\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParamsWithAPI) : column.cellClassName);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParamsWithAPI));\n  }\n  const valueToRender = formattedValue == null ? value : formattedValue;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  // @ts-expect-error To access `unstable_cellSelection` flag as it's a `premium` feature\n  const isSelectionMode = (_rootProps$unstable_c = rootProps.unstable_cellSelection) != null ? _rootProps$unstable_c : false;\n  const ownerState = {\n    align,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    isSelected,\n    isSelectionMode\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return _extends({\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        border: 0\n      }, styleProp);\n    }\n    const cellStyle = _extends({\n      minWidth: width,\n      maxWidth: width,\n      minHeight: height,\n      maxHeight: height === 'auto' ? 'none' : height\n    }, styleProp);\n    return cellStyle;\n  }, [width, height, isNotVisible, styleProp]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (cellParamsWithAPI === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && (_rootProps$experiment3 = rootProps.experimentalFeatures) != null && _rootProps$experiment3.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if ((focusedCell == null ? void 0 : focusedCell.id) === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell == null ? void 0 : focusedCell.id}, field=${focusedCell == null ? void 0 : focusedCell.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  let children;\n  if (editCellState == null && column.renderCell) {\n    children = column.renderCell(cellParamsWithAPI);\n    classNames.push(gridClasses['cell--withRenderer']);\n    classNames.push(rootClasses == null ? void 0 : rootClasses['cell--withRenderer']);\n  }\n  if (editCellState != null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded4);\n    const params = _extends({}, cellParamsWithAPI, {\n      row: updatedRow\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses == null ? void 0 : rootClasses['cell--editing']);\n  }\n  if (children === undefined) {\n    const valueString = valueToRender == null ? void 0 : valueToRender.toString();\n    children = /*#__PURE__*/_jsx(\"div\", {\n      className: classes.content,\n      title: valueString,\n      role: \"presentation\",\n      children: valueString\n    });\n  }\n  if ( /*#__PURE__*/React.isValidElement(children) && canManageOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  const ariaV7 = (_rootProps$experiment4 = rootProps.experimentalFeatures) == null ? void 0 : _rootProps$experiment4.ariaV7;\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      ref: handleRef,\n      className: clsx(className, classNames, classes.root),\n      role: ariaV7 ? 'gridcell' : 'cell',\n      \"data-field\": field,\n      \"data-colindex\": colIndex,\n      \"aria-colindex\": colIndex + 1,\n      \"aria-colspan\": colSpan,\n      style: style,\n      tabIndex: tabIndex,\n      onClick: publish('cellClick', onClick),\n      onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n      onMouseOver: publish('cellMouseOver', onMouseOver),\n      onMouseDown: publishMouseDown('cellMouseDown'),\n      onMouseUp: publishMouseUp('cellMouseUp'),\n      onKeyDown: publish('cellKeyDown', onKeyDown),\n      onKeyUp: publish('cellKeyUp', onKeyUp)\n    }, draggableEventHandlers, other, {\n      onFocus: handleFocus,\n      children: children\n    }))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellV7.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  isNotVisible: PropTypes.bool,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  showRightBorder: PropTypes.bool,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCellV7 = fastMemo(GridCellV7);\nexport { MemoizedGridCellV7 as GridCellV7 };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditBooleanCell(props) {\n  var _rootProps$slotProps;\n  const {\n      id: idProp,\n      value,\n      field,\n      className,\n      hasFocus,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.checked;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    setValueState(newValue);\n    await apiRef.current.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [apiRef, field, idProp, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseCheckbox))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditBooleanCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditBooleanCell };\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"inputProps\", \"isValidating\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport InputBase from '@mui/material/InputBase';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledInputBase = styled(InputBase)({\n  fontSize: 'inherit'\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditDateCell(props) {\n  const {\n      id,\n      value: valueProp,\n      field,\n      colDef,\n      hasFocus,\n      inputProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isDateTime = colDef.type === 'dateTime';\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const valueTransformed = React.useMemo(() => {\n    let parsedDate;\n    if (valueProp == null) {\n      parsedDate = null;\n    } else if (valueProp instanceof Date) {\n      parsedDate = valueProp;\n    } else {\n      parsedDate = new Date((valueProp != null ? valueProp : '').toString());\n    }\n    let formattedDate;\n    if (parsedDate == null || Number.isNaN(parsedDate.getTime())) {\n      formattedDate = '';\n    } else {\n      const localDate = new Date(parsedDate.getTime() - parsedDate.getTimezoneOffset() * 60 * 1000);\n      formattedDate = localDate.toISOString().substr(0, isDateTime ? 16 : 10);\n    }\n    return {\n      parsed: parsedDate,\n      formatted: formattedDate\n    };\n  }, [valueProp, isDateTime]);\n  const [valueState, setValueState] = React.useState(valueTransformed);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const parseValueToDate = React.useCallback(value => {\n    if (value === '') {\n      return null;\n    }\n    const [date, time] = value.split('T');\n    const [year, month, day] = date.split('-');\n    const parsedDate = new Date();\n    parsedDate.setFullYear(Number(year), Number(month) - 1, Number(day));\n    parsedDate.setHours(0, 0, 0, 0);\n    if (time) {\n      const [hours, minutes] = time.split(':');\n      parsedDate.setHours(Number(hours), Number(minutes), 0, 0);\n    }\n    return parsedDate;\n  }, []);\n  const handleChange = React.useCallback(async event => {\n    const newFormattedDate = event.target.value;\n    const newParsedDate = parseValueToDate(newFormattedDate);\n    if (onValueChange) {\n      await onValueChange(event, newParsedDate);\n    }\n    setValueState({\n      parsed: newParsedDate,\n      formatted: newFormattedDate\n    });\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newParsedDate\n    }, event);\n  }, [apiRef, field, id, onValueChange, parseValueToDate]);\n  React.useEffect(() => {\n    setValueState(state => {\n      var _valueTransformed$par, _state$parsed;\n      if (valueTransformed.parsed !== state.parsed && ((_valueTransformed$par = valueTransformed.parsed) == null ? void 0 : _valueTransformed$par.getTime()) !== ((_state$parsed = state.parsed) == null ? void 0 : _state$parsed.getTime())) {\n        return valueTransformed;\n      }\n      return state;\n    });\n  }, [valueTransformed]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(StyledInputBase, _extends({\n    inputRef: inputRef,\n    fullWidth: true,\n    className: classes.root,\n    type: isDateTime ? 'datetime-local' : 'date',\n    inputProps: _extends({\n      max: isDateTime ? '9999-12-31T23:59' : '9999-12-31'\n    }, inputProps),\n    value: valueState.formatted,\n    onChange: handleChange\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditDateCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditDateCell };\nexport const renderEditDateCell = params => /*#__PURE__*/_jsx(GridEditDateCell, _extends({}, params));","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"isValidating\", \"debounceMs\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridEditInputCellRoot = styled(InputBase, {\n  name: 'MuiDataGrid',\n  slot: 'EditInputCell',\n  overridesResolver: (props, styles) => styles.editInputCell\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  padding: '1px 0',\n  '& input': {\n    padding: '0 16px',\n    height: '100%'\n  }\n}));\nconst GridEditInputCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value,\n      field,\n      colDef,\n      hasFocus,\n      debounceMs = 200,\n      isProcessingProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const [valueState, setValueState] = React.useState(value);\n  const classes = useUtilityClasses(rootProps);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.value;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    const column = apiRef.current.getColumn(field);\n    let parsedValue = newValue;\n    if (column.valueParser) {\n      parsedValue = column.valueParser(newValue, apiRef.current.getCellParams(id, field));\n    }\n    setValueState(parsedValue);\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: parsedValue,\n      debounceMs,\n      unstable_skipValueParser: true\n    }, event);\n  }, [apiRef, debounceMs, field, id, onValueChange]);\n  const meta = apiRef.current.unstable_getEditCellMeta(id, field);\n  React.useEffect(() => {\n    if ((meta == null ? void 0 : meta.changeReason) !== 'debouncedSetEditCellValue') {\n      setValueState(value);\n    }\n  }, [meta, value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(GridEditInputCellRoot, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    className: classes.root,\n    ownerState: rootProps,\n    fullWidth: true,\n    type: colDef.type === 'number' ? colDef.type : 'text',\n    value: valueState != null ? valueState : '',\n    onChange: handleChange,\n    endAdornment: isProcessingProps ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n      fontSize: \"small\",\n      color: \"action\"\n    }) : undefined\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridEditInputCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  debounceMs: PropTypes.number,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditInputCell };\nexport const renderEditInputCell = params => /*#__PURE__*/_jsx(GridEditInputCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\", \"initialOpen\", \"getOptionLabel\", \"getOptionValue\"],\n  _excluded2 = [\"MenuProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { GridCellEditStopReasons } from '../../models/params/gridEditCellParams';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridEditModes } from '../../models/gridEditRowModel';\nimport { getValueFromValueOptions, isSingleSelectColDef } from '../panel/filterPanel/filterPanelUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isKeyboardEvent(event) {\n  return !!event.key;\n}\nfunction GridEditSingleSelectCell(props) {\n  var _rootProps$slotProps, _baseSelectProps$nati, _rootProps$slotProps2;\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value: valueProp,\n      field,\n      row,\n      colDef,\n      hasFocus,\n      error,\n      onValueChange,\n      initialOpen = rootProps.editMode === GridEditModes.Cell,\n      getOptionLabel: getOptionLabelProp,\n      getOptionValue: getOptionValueProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef();\n  const inputRef = React.useRef();\n  const [open, setOpen] = React.useState(initialOpen);\n  const baseSelectProps = ((_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : false;\n  const _ref = ((_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseSelect) || {},\n    {\n      MenuProps\n    } = _ref,\n    otherBaseSelectProps = _objectWithoutPropertiesLoose(_ref, _excluded2);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      var _inputRef$current;\n      (_inputRef$current = inputRef.current) == null || _inputRef$current.focus();\n    }\n  }, [hasFocus]);\n  if (!isSingleSelectColDef(colDef)) {\n    return null;\n  }\n  let valueOptions;\n  if (typeof (colDef == null ? void 0 : colDef.valueOptions) === 'function') {\n    valueOptions = colDef == null ? void 0 : colDef.valueOptions({\n      id,\n      row,\n      field\n    });\n  } else {\n    valueOptions = colDef == null ? void 0 : colDef.valueOptions;\n  }\n  if (!valueOptions) {\n    return null;\n  }\n  const getOptionValue = getOptionValueProp || colDef.getOptionValue;\n  const getOptionLabel = getOptionLabelProp || colDef.getOptionLabel;\n  const handleChange = async event => {\n    if (!isSingleSelectColDef(colDef) || !valueOptions) {\n      return;\n    }\n    setOpen(false);\n    const target = event.target;\n    // NativeSelect casts the value to a string.\n    const formattedTargetValue = getValueFromValueOptions(target.value, valueOptions, getOptionValue);\n    if (onValueChange) {\n      await onValueChange(event, formattedTargetValue);\n    }\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: formattedTargetValue\n    }, event);\n  };\n  const handleClose = (event, reason) => {\n    if (rootProps.editMode === GridEditModes.Row) {\n      setOpen(false);\n      return;\n    }\n    if (reason === 'backdropClick' || isEscapeKey(event.key)) {\n      const params = apiRef.current.getCellParams(id, field);\n      apiRef.current.publishEvent('cellEditStop', _extends({}, params, {\n        reason: isEscapeKey(event.key) ? GridCellEditStopReasons.escapeKeyDown : GridCellEditStopReasons.cellFocusOut\n      }));\n    }\n  };\n  const handleOpen = event => {\n    if (isKeyboardEvent(event) && event.key === 'Enter') {\n      return;\n    }\n    setOpen(true);\n  };\n  if (!valueOptions || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    value: valueProp,\n    onChange: handleChange,\n    open: open,\n    onOpen: handleOpen,\n    MenuProps: _extends({\n      onClose: handleClose\n    }, MenuProps),\n    error: error,\n    native: isSelectNative,\n    fullWidth: true\n  }, other, otherBaseSelectProps, {\n    children: valueOptions.map(valueOption => {\n      var _rootProps$slotProps3;\n      const value = getOptionValue(valueOption);\n      return /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, ((_rootProps$slotProps3 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps3.baseSelectOption) || {}, {\n        native: isSelectNative,\n        key: value,\n        value: value\n      }), getOptionLabel(valueOption));\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditSingleSelectCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * Used to determine the label displayed for a given value option.\n   * @param {ValueOptions} value The current value option.\n   * @returns {string} The text to be displayed.\n   */\n  getOptionLabel: PropTypes.func,\n  /**\n   * Used to determine the value used for a value option.\n   * @param {ValueOptions} value The current value option.\n   * @returns {string} The value to be used.\n   */\n  getOptionValue: PropTypes.func,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the select opens by default.\n   */\n  initialOpen: PropTypes.bool,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {SelectChangeEvent<any>} event The event source of the callback.\n   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditSingleSelectCell };\nexport const renderEditSingleSelectCell = params => /*#__PURE__*/_jsx(GridEditSingleSelectCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"align\", \"width\", \"contentWidth\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Skeleton from '@mui/material/Skeleton';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', 'cellSkeleton', `cell--text${capitalize(align)}`, 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridSkeletonCell(props) {\n  const {\n      align,\n      width,\n      contentWidth\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    align\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    className: classes.root,\n    style: {\n      width\n    }\n  }, other, {\n    children: /*#__PURE__*/_jsx(Skeleton, {\n      width: `${contentWidth}%`\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridSkeletonCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.string.isRequired,\n  contentWidth: PropTypes.number.isRequired,\n  field: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nexport { GridSkeletonCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport Badge from '@mui/material/Badge';\nimport { useGridSelector } from '../../hooks';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['filterIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderFilterIconButton(props) {\n  var _rootProps$slotProps, _rootProps$slotProps2;\n  const {\n    counter,\n    field,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const labelId = useId();\n  const panelId = useId();\n  const toggleFilter = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      open,\n      openedPanelValue\n    } = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel(undefined, panelId, labelId);\n    }\n    if (onClick) {\n      onClick(apiRef.current.getColumnHeaderParams(field), event);\n    }\n  }, [apiRef, field, onClick, panelId, labelId]);\n  if (!counter) {\n    return null;\n  }\n  const open = preferencePanel.open && preferencePanel.labelId === labelId;\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    id: labelId,\n    onClick: toggleFilter,\n    color: \"default\",\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderFiltersLabel'),\n    size: \"small\",\n    tabIndex: -1,\n    \"aria-haspopup\": \"menu\",\n    \"aria-expanded\": open,\n    \"aria-controls\": open ? panelId : undefined\n  }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseIconButton, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.columnFilteredIcon, {\n      className: classes.icon,\n      fontSize: \"small\"\n    })\n  }));\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: apiRef.current.getLocaleText('columnHeaderFiltersTooltipActive')(counter),\n    enterDelay: 1000\n  }, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseTooltip, {\n    children: /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n      children: [counter > 1 && /*#__PURE__*/_jsx(Badge, {\n        badgeContent: counter,\n        color: \"default\",\n        children: iconButton\n      }), counter === 1 && iconButton]\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderFilterIconButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  counter: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridColumnHeaderFilterIconButton };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['menuIcon', open && 'menuOpen'],\n    button: ['menuIconButton']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nexport const ColumnHeaderMenuIcon = /*#__PURE__*/React.memo(props => {\n  var _rootProps$slotProps, _rootProps$slotProps2;\n  const {\n    colDef,\n    open,\n    columnMenuId,\n    columnMenuButtonId,\n    iconButtonRef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleMenuIconClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    apiRef.current.toggleColumnMenu(colDef.field);\n  }, [apiRef, colDef.field]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('columnMenuLabel'),\n      enterDelay: 1000\n    }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        ref: iconButtonRef,\n        tabIndex: -1,\n        className: classes.button,\n        \"aria-label\": apiRef.current.getLocaleText('columnMenuLabel'),\n        size: \"small\",\n        onClick: handleMenuIconClick,\n        \"aria-haspopup\": \"menu\",\n        \"aria-expanded\": open,\n        \"aria-controls\": open ? columnMenuId : undefined,\n        id: columnMenuButtonId\n      }, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    }))\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { GridColumnHeaderSortIcon } from './GridColumnHeaderSortIcon';\nimport { ColumnHeaderMenuIcon } from './ColumnHeaderMenuIcon';\nimport { GridColumnHeaderMenu } from '../menu/columnMenu/GridColumnHeaderMenu';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { isEventTargetInPortal } from '../../utils/domUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    colDef,\n    classes,\n    isDragging,\n    sortDirection,\n    showRightBorder,\n    filterItemsCounter\n  } = ownerState;\n  const isColumnSorted = sortDirection != null;\n  const isColumnFiltered = filterItemsCounter != null && filterItemsCounter > 0;\n  // todo refactor to a prop on col isNumeric or ?? ie: coltype===price wont work\n  const isColumnNumeric = colDef.type === 'number';\n  const slots = {\n    root: ['columnHeader', colDef.headerAlign === 'left' && 'columnHeader--alignLeft', colDef.headerAlign === 'center' && 'columnHeader--alignCenter', colDef.headerAlign === 'right' && 'columnHeader--alignRight', colDef.sortable && 'columnHeader--sortable', isDragging && 'columnHeader--moving', isColumnSorted && 'columnHeader--sorted', isColumnFiltered && 'columnHeader--filtered', isColumnNumeric && 'columnHeader--numeric', 'withBorderColor', showRightBorder && 'columnHeader--withRightBorder'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderItem(props) {\n  var _rootProps$slotProps, _colDef$sortingOrder, _rootProps$slotProps2, _colDef$headerName;\n  const {\n    colDef,\n    columnMenuOpen,\n    colIndex,\n    headerHeight,\n    isResizing,\n    sortDirection,\n    sortIndex,\n    filterItemsCounter,\n    hasFocus,\n    tabIndex,\n    disableReorder,\n    separatorSide\n  } = props;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const columnMenuId = useId();\n  const columnMenuButtonId = useId();\n  const iconButtonRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const isDraggable = React.useMemo(() => !rootProps.disableColumnReorder && !disableReorder && !colDef.disableReorder, [rootProps.disableColumnReorder, disableReorder, colDef.disableReorder]);\n  let headerComponent;\n  if (colDef.renderHeader) {\n    headerComponent = colDef.renderHeader(apiRef.current.getColumnHeaderParams(colDef.field));\n  }\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder: rootProps.showColumnVerticalBorder\n  });\n  const classes = useUtilityClasses(ownerState);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(colDef.field), event);\n  }, [apiRef, colDef.field]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onClick: publish('columnHeaderClick'),\n    onDoubleClick: publish('columnHeaderDoubleClick'),\n    onMouseOver: publish('columnHeaderOver'),\n    // TODO remove as it's not used\n    onMouseOut: publish('columnHeaderOut'),\n    // TODO remove as it's not used\n    onMouseEnter: publish('columnHeaderEnter'),\n    // TODO remove as it's not used\n    onMouseLeave: publish('columnHeaderLeave'),\n    // TODO remove as it's not used\n    onKeyDown: publish('columnHeaderKeyDown'),\n    onFocus: publish('columnHeaderFocus'),\n    onBlur: publish('columnHeaderBlur')\n  }), [publish]);\n  const draggableEventHandlers = React.useMemo(() => isDraggable ? {\n    onDragStart: publish('columnHeaderDragStart'),\n    onDragEnter: publish('columnHeaderDragEnter'),\n    onDragOver: publish('columnHeaderDragOver'),\n    onDragEnd: publish('columnHeaderDragEnd')\n  } : {}, [isDraggable, publish]);\n  const columnHeaderSeparatorProps = React.useMemo(() => ({\n    onMouseDown: publish('columnSeparatorMouseDown'),\n    onDoubleClick: publish('columnSeparatorDoubleClick')\n  }), [publish]);\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  const handleExited = React.useCallback(() => {\n    setShowColumnMenuIcon(false);\n  }, []);\n  const columnMenuIconButton = !rootProps.disableColumnMenu && !colDef.disableColumnMenu && /*#__PURE__*/_jsx(ColumnHeaderMenuIcon, {\n    colDef: colDef,\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    open: showColumnMenuIcon,\n    iconButtonRef: iconButtonRef\n  });\n  const columnMenu = /*#__PURE__*/_jsx(GridColumnHeaderMenu, {\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    field: colDef.field,\n    open: columnMenuOpen,\n    target: iconButtonRef.current,\n    ContentComponent: rootProps.slots.columnMenu,\n    contentComponentProps: (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.columnMenu,\n    onExited: handleExited\n  });\n  const sortingOrder = (_colDef$sortingOrder = colDef.sortingOrder) != null ? _colDef$sortingOrder : rootProps.sortingOrder;\n  const columnTitleIconButtons = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [!rootProps.disableColumnFilter && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderFilterIconButton, _extends({\n      field: colDef.field,\n      counter: filterItemsCounter\n    }, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.columnHeaderFilterIconButton)), colDef.sortable && !colDef.hideSortIcons && /*#__PURE__*/_jsx(GridColumnHeaderSortIcon, {\n      direction: sortDirection,\n      index: sortIndex,\n      sortingOrder: sortingOrder\n    })]\n  });\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus == null || elementToFocus.focus();\n      apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n    }\n  }, [apiRef, hasFocus]);\n  const headerClassName = typeof colDef.headerClassName === 'function' ? colDef.headerClassName({\n    field: colDef.field,\n    colDef\n  }) : colDef.headerClassName;\n  const label = (_colDef$headerName = colDef.headerName) != null ? _colDef$headerName : colDef.field;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: columnMenuOpen,\n    colIndex: colIndex,\n    height: headerHeight,\n    isResizing: isResizing,\n    sortDirection: sortDirection,\n    hasFocus: hasFocus,\n    tabIndex: tabIndex,\n    separatorSide: separatorSide,\n    isDraggable: isDraggable,\n    headerComponent: headerComponent,\n    description: colDef.description,\n    elementId: colDef.field,\n    width: colDef.computedWidth,\n    columnMenuIconButton: columnMenuIconButton,\n    columnTitleIconButtons: columnTitleIconButtons,\n    headerClassName: headerClassName,\n    label: label,\n    resizable: !rootProps.disableColumnResize && !!colDef.resizable,\n    \"data-field\": colDef.field,\n    columnMenu: columnMenu,\n    draggableContainerProps: draggableEventHandlers,\n    columnHeaderSeparatorProps: columnHeaderSeparatorProps\n  }, mouseEventsHandlers));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  colIndex: PropTypes.number.isRequired,\n  columnMenuOpen: PropTypes.bool.isRequired,\n  disableReorder: PropTypes.bool,\n  filterItemsCounter: PropTypes.number,\n  hasFocus: PropTypes.bool,\n  headerHeight: PropTypes.number.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isResizing: PropTypes.bool.isRequired,\n  separatorSide: PropTypes.oneOf(['left', 'right']),\n  sortDirection: PropTypes.oneOf(['asc', 'desc']),\n  sortIndex: PropTypes.number,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired\n} : void 0;\nexport { GridColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"resizable\", \"resizing\", \"height\", \"side\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GridColumnHeaderSeparatorSides = /*#__PURE__*/function (GridColumnHeaderSeparatorSides) {\n  GridColumnHeaderSeparatorSides[\"Left\"] = \"left\";\n  GridColumnHeaderSeparatorSides[\"Right\"] = \"right\";\n  return GridColumnHeaderSeparatorSides;\n}(GridColumnHeaderSeparatorSides || {});\nconst useUtilityClasses = ownerState => {\n  const {\n    resizable,\n    resizing,\n    classes,\n    side\n  } = ownerState;\n  const slots = {\n    root: ['columnSeparator', resizable && 'columnSeparator--resizable', resizing && 'columnSeparator--resizing', side && `columnSeparator--side${capitalize(side)}`],\n    icon: ['iconSeparator']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderSeparatorRaw(props) {\n  const {\n      height,\n      side = GridColumnHeaderSeparatorSides.Right\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    side,\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const stopClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      className: classes.root,\n      style: {\n        minHeight: height,\n        opacity: rootProps.showColumnVerticalBorder ? 0 : 1\n      }\n    }, other, {\n      onClick: stopClick,\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnResizeIcon, {\n        className: classes.icon\n      })\n    }))\n  );\n}\nconst GridColumnHeaderSeparator = /*#__PURE__*/React.memo(GridColumnHeaderSeparatorRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSeparatorRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  height: PropTypes.number.isRequired,\n  resizable: PropTypes.bool.isRequired,\n  resizing: PropTypes.bool.isRequired,\n  side: PropTypes.oneOf(['left', 'right'])\n} : void 0;\nexport { GridColumnHeaderSeparator, GridColumnHeaderSeparatorSides };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport Badge from '@mui/material/Badge';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['sortIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction getIcon(icons, direction, className, sortingOrder) {\n  let Icon;\n  const iconProps = {};\n  if (direction === 'asc') {\n    Icon = icons.columnSortedAscendingIcon;\n  } else if (direction === 'desc') {\n    Icon = icons.columnSortedDescendingIcon;\n  } else {\n    Icon = icons.columnUnsortedIcon;\n    iconProps.sortingOrder = sortingOrder;\n  }\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: className\n  }, iconProps)) : null;\n}\nfunction GridColumnHeaderSortIconRaw(props) {\n  var _rootProps$slotProps;\n  const {\n    direction,\n    index,\n    sortingOrder\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const iconElement = getIcon(rootProps.slots, direction, classes.icon, sortingOrder);\n  if (!iconElement) {\n    return null;\n  }\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    tabIndex: -1,\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    title: apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    size: \"small\"\n  }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseIconButton, {\n    children: iconElement\n  }));\n  return /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n    children: [index != null && /*#__PURE__*/_jsx(Badge, {\n      badgeContent: index,\n      color: \"default\",\n      children: iconButton\n    }), index == null && iconButton]\n  });\n}\nconst GridColumnHeaderSortIcon = /*#__PURE__*/React.memo(GridColumnHeaderSortIconRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSortIconRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  index: PropTypes.number,\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])).isRequired\n} : void 0;\nexport { GridColumnHeaderSortIcon };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { isOverflown } from '../../utils/domUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaderTitle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeaderTitleRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderTitle',\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\n})({\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  fontWeight: 'var(--unstable_DataGrid-headWeight)'\n});\nconst ColumnHeaderInnerTitle = /*#__PURE__*/React.forwardRef(function ColumnHeaderInnerTitle(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\nfunction GridColumnHeaderTitle(props) {\n  var _rootProps$slotProps;\n  const {\n    label,\n    description\n  } = props;\n  const rootProps = useGridRootProps();\n  const titleRef = React.useRef(null);\n  const [tooltip, setTooltip] = React.useState('');\n  const handleMouseOver = React.useCallback(() => {\n    if (!description && titleRef != null && titleRef.current) {\n      const isOver = isOverflown(titleRef.current);\n      if (isOver) {\n        setTooltip(label);\n      } else {\n        setTooltip('');\n      }\n    }\n  }, [description, label]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: description || tooltip\n  }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseTooltip, {\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\n      onMouseOver: handleMouseOver,\n      ref: titleRef,\n      children: label\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnWidth: PropTypes.number.isRequired,\n  description: PropTypes.node,\n  label: PropTypes.string.isRequired\n} : void 0;\nexport { GridColumnHeaderTitle };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"classes\", \"columnMenuOpen\", \"colIndex\", \"height\", \"isResizing\", \"sortDirection\", \"hasFocus\", \"tabIndex\", \"separatorSide\", \"isDraggable\", \"headerComponent\", \"description\", \"elementId\", \"width\", \"columnMenuIconButton\", \"columnMenu\", \"columnTitleIconButtons\", \"headerClassName\", \"label\", \"resizable\", \"draggableContainerProps\", \"columnHeaderSeparatorProps\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { GridColumnHeaderTitle } from './GridColumnHeaderTitle';\nimport { GridColumnHeaderSeparator } from './GridColumnHeaderSeparator';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridGenericColumnHeaderItem = /*#__PURE__*/React.forwardRef(function GridGenericColumnHeaderItem(props, ref) {\n  const {\n      classes,\n      columnMenuOpen,\n      colIndex,\n      height,\n      isResizing,\n      sortDirection,\n      hasFocus,\n      tabIndex,\n      separatorSide,\n      isDraggable,\n      headerComponent,\n      description,\n      width,\n      columnMenuIconButton = null,\n      columnMenu = null,\n      columnTitleIconButtons = null,\n      headerClassName,\n      label,\n      resizable,\n      draggableContainerProps,\n      columnHeaderSeparatorProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const handleRef = useForkRef(headerCellRef, ref);\n  let ariaSort = 'none';\n  if (sortDirection != null) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus == null || elementToFocus.focus();\n      apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n    }\n  }, [apiRef, hasFocus]);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, headerClassName),\n    style: {\n      height,\n      width,\n      minWidth: width,\n      maxWidth: width\n    },\n    role: \"columnheader\",\n    tabIndex: tabIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-sort\": ariaSort,\n    \"aria-label\": headerComponent == null ? label : undefined\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(\"div\", _extends({\n      className: classes.draggableContainer,\n      draggable: isDraggable,\n      role: \"presentation\"\n    }, draggableContainerProps, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.titleContainer,\n        role: \"presentation\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: classes.titleContainerContent,\n          children: headerComponent !== undefined ? headerComponent : /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n            label: label,\n            description: description,\n            columnWidth: width\n          })\n        }), columnTitleIconButtons]\n      }), columnMenuIconButton]\n    })), /*#__PURE__*/_jsx(GridColumnHeaderSeparator, _extends({\n      resizable: !rootProps.disableColumnResize && !!resizable,\n      resizing: isResizing,\n      height: height,\n      side: separatorSide\n    }, columnHeaderSeparatorProps)), columnMenu]\n  }));\n});\nexport { GridGenericColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['iconButtonContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridIconButtonContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'IconButtonContainer',\n  overridesResolver: (props, styles) => styles.iconButtonContainer\n})(() => ({\n  display: 'flex',\n  visibility: 'hidden',\n  width: 0\n}));\nexport const GridIconButtonContainer = /*#__PURE__*/React.forwardRef(function GridIconButtonContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridIconButtonContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"id\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"colDef\", \"isEditable\", \"cellMode\", \"hasFocus\", \"tabIndex\", \"api\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { isSpaceKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridCellCheckboxForwardRef = /*#__PURE__*/React.forwardRef(function GridCellCheckboxRenderer(props, ref) {\n  var _rootProps$slotProps;\n  const {\n      field,\n      id,\n      value: isChecked,\n      rowNode,\n      hasFocus,\n      tabIndex\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const checkboxElement = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRef = useForkRef(checkboxElement, ref);\n  const element = apiRef.current.getCellElement(id, field);\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked,\n      id\n    };\n    apiRef.current.publishEvent('rowSelectionCheckboxChange', params, event);\n  };\n  React.useLayoutEffect(() => {\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [element, tabIndex]);\n  React.useEffect(() => {\n    if (hasFocus) {\n      var _checkboxElement$curr;\n      const input = (_checkboxElement$curr = checkboxElement.current) == null ? void 0 : _checkboxElement$curr.querySelector('input');\n      input == null || input.focus({\n        preventScroll: true\n      });\n    } else if (rippleRef.current) {\n      // Only available in @mui/material v5.4.1 or later\n      rippleRef.current.stop({});\n    }\n  }, [hasFocus]);\n  const handleKeyDown = React.useCallback(event => {\n    if (isSpaceKey(event.key)) {\n      // We call event.stopPropagation to avoid selecting the row and also scrolling to bottom\n      // TODO: Remove and add a check inside useGridKeyboardNavigation\n      event.stopPropagation();\n    }\n  }, []);\n  if (rowNode.type === 'footer' || rowNode.type === 'pinnedRow') {\n    return null;\n  }\n  const isSelectable = apiRef.current.isRowSelectable(id);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectRow' : 'checkboxSelectionSelectRow');\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: handleRef,\n    tabIndex: tabIndex,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    onKeyDown: handleKeyDown,\n    disabled: !isSelectable,\n    touchRippleRef: rippleRef\n  }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellCheckboxForwardRef.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridCellCheckboxForwardRef };\nexport const GridCellCheckboxRenderer = GridCellCheckboxForwardRef;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"colDef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridTabIndexColumnHeaderSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { gridRowSelectionStateSelector } from '../../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridExpandedSortedRowIdsSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridHeaderCheckbox = /*#__PURE__*/React.forwardRef(function GridHeaderCheckbox(props, ref) {\n  var _rootProps$slotProps;\n  const other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [, forceUpdate] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const selection = useGridSelector(apiRef, gridRowSelectionStateSelector);\n  const visibleRowIds = useGridSelector(apiRef, gridExpandedSortedRowIdsSelector);\n  const paginatedVisibleRowIds = useGridSelector(apiRef, gridPaginatedVisibleSortedGridRowIdsSelector);\n  const filteredSelection = React.useMemo(() => {\n    if (typeof rootProps.isRowSelectable !== 'function') {\n      return selection;\n    }\n    return selection.filter(id => {\n      // The row might have been deleted\n      if (!apiRef.current.getRow(id)) {\n        return false;\n      }\n      return rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n    });\n  }, [apiRef, rootProps.isRowSelectable, selection]);\n\n  // All the rows that could be selected / unselected by toggling this checkbox\n  const selectionCandidates = React.useMemo(() => {\n    const rowIds = !rootProps.pagination || !rootProps.checkboxSelectionVisibleOnly ? visibleRowIds : paginatedVisibleRowIds;\n\n    // Convert to an object to make O(1) checking if a row exists or not\n    // TODO create selector that returns visibleRowIds/paginatedVisibleRowIds as an object\n    return rowIds.reduce((acc, id) => {\n      acc[id] = true;\n      return acc;\n    }, {});\n  }, [rootProps.pagination, rootProps.checkboxSelectionVisibleOnly, paginatedVisibleRowIds, visibleRowIds]);\n\n  // Amount of rows selected and that are visible in the current page\n  const currentSelectionSize = React.useMemo(() => filteredSelection.filter(id => selectionCandidates[id]).length, [filteredSelection, selectionCandidates]);\n  const isIndeterminate = currentSelectionSize > 0 && currentSelectionSize < Object.keys(selectionCandidates).length;\n  const isChecked = currentSelectionSize > 0;\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked\n    };\n    apiRef.current.publishEvent('headerSelectionCheckboxChange', params);\n  };\n  const tabIndex = tabIndexState !== null && tabIndexState.field === props.field ? 0 : -1;\n  React.useLayoutEffect(() => {\n    const element = apiRef.current.getColumnHeaderElement(props.field);\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [tabIndex, apiRef, props.field]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // imperative toggle the checkbox because Space is disable by some preventDefault\n      apiRef.current.publishEvent('headerSelectionCheckboxChange', {\n        value: !isChecked\n      });\n    }\n  }, [apiRef, isChecked]);\n  const handleSelectionChange = React.useCallback(() => {\n    forceUpdate(p => !p);\n  }, []);\n  React.useEffect(() => {\n    return apiRef.current.subscribeEvent('rowSelectionChange', handleSelectionChange);\n  }, [apiRef, handleSelectionChange]);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectAllRows' : 'checkboxSelectionSelectAllRows');\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: ref,\n    indeterminate: isIndeterminate,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    tabIndex: tabIndex,\n    onKeyDown: handleKeyDown\n  }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderCheckbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The column of the current header component.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the column that triggered the event\n   */\n  field: PropTypes.string.isRequired\n} : void 0;\nexport { GridHeaderCheckbox };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerContainer', 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFooterContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterContainer',\n  overridesResolver: (props, styles) => styles.footerContainer\n})({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  minHeight: 52,\n  borderTop: '1px solid'\n});\nconst GridFooterContainer = /*#__PURE__*/React.forwardRef(function GridFooterContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridFooterContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooterContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooterContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridOverlayRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Overlay',\n  overridesResolver: (_, styles) => styles.overlay\n})({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignSelf: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'var(--unstable_DataGrid-overlayBackground)'\n});\nconst GridOverlay = /*#__PURE__*/React.forwardRef(function GridOverlay(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridOverlayRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { alpha, styled, darken, lighten } from '@mui/material/styles';\nimport { gridClasses } from '../../constants/gridClasses';\nfunction getBorderColor(theme) {\n  if (theme.vars) {\n    return theme.vars.palette.TableCell.border;\n  }\n  if (theme.palette.mode === 'light') {\n    return lighten(alpha(theme.palette.divider, 1), 0.88);\n  }\n  return darken(alpha(theme.palette.divider, 1), 0.68);\n}\nconst columnHeadersStyles = {\n  [`.${gridClasses.columnSeparator}, .${gridClasses['columnSeparator--resizing']}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  }\n};\nconst columnHeaderStyles = {\n  [`& .${gridClasses.iconButtonContainer}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  },\n  [`& .${gridClasses.menuIcon}`]: {\n    width: 'auto',\n    visibility: 'visible'\n  }\n};\nexport const GridRootStyles = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses.autoHeight}`]: styles.autoHeight\n  }, {\n    [`&.${gridClasses.aggregationColumnHeader}`]: styles.aggregationColumnHeader\n  }, {\n    [`&.${gridClasses['aggregationColumnHeader--alignLeft']}`]: styles['aggregationColumnHeader--alignLeft']\n  }, {\n    [`&.${gridClasses['aggregationColumnHeader--alignCenter']}`]: styles['aggregationColumnHeader--alignCenter']\n  }, {\n    [`&.${gridClasses['aggregationColumnHeader--alignRight']}`]: styles['aggregationColumnHeader--alignRight']\n  }, {\n    [`&.${gridClasses.aggregationColumnHeaderLabel}`]: styles.aggregationColumnHeaderLabel\n  }, {\n    [`&.${gridClasses['root--disableUserSelection']} .${gridClasses.cell}`]: styles['root--disableUserSelection']\n  }, {\n    [`&.${gridClasses.autosizing}`]: styles.autosizing\n  }, {\n    [`& .${gridClasses.editBooleanCell}`]: styles.editBooleanCell\n  }, {\n    [`& .${gridClasses['cell--editing']}`]: styles['cell--editing']\n  }, {\n    [`& .${gridClasses['cell--textCenter']}`]: styles['cell--textCenter']\n  }, {\n    [`& .${gridClasses['cell--textLeft']}`]: styles['cell--textLeft']\n  }, {\n    [`& .${gridClasses['cell--textRight']}`]: styles['cell--textRight']\n  },\n  // TODO v6: Remove\n  {\n    [`& .${gridClasses['cell--withRenderer']}`]: styles['cell--withRenderer']\n  }, {\n    [`& .${gridClasses.cell}`]: styles.cell\n  }, {\n    [`& .${gridClasses['cell--rangeTop']}`]: styles['cell--rangeTop']\n  }, {\n    [`& .${gridClasses['cell--rangeBottom']}`]: styles['cell--rangeBottom']\n  }, {\n    [`& .${gridClasses['cell--rangeLeft']}`]: styles['cell--rangeLeft']\n  }, {\n    [`& .${gridClasses['cell--rangeRight']}`]: styles['cell--rangeRight']\n  }, {\n    [`& .${gridClasses['cell--withRightBorder']}`]: styles['cell--withRightBorder']\n  }, {\n    [`& .${gridClasses.cellContent}`]: styles.cellContent\n  }, {\n    [`& .${gridClasses.cellCheckbox}`]: styles.cellCheckbox\n  }, {\n    [`& .${gridClasses.cellSkeleton}`]: styles.cellSkeleton\n  }, {\n    [`& .${gridClasses.checkboxInput}`]: styles.checkboxInput\n  }, {\n    [`& .${gridClasses['columnHeader--alignCenter']}`]: styles['columnHeader--alignCenter']\n  }, {\n    [`& .${gridClasses['columnHeader--alignLeft']}`]: styles['columnHeader--alignLeft']\n  }, {\n    [`& .${gridClasses['columnHeader--alignRight']}`]: styles['columnHeader--alignRight']\n  }, {\n    [`& .${gridClasses['columnHeader--dragging']}`]: styles['columnHeader--dragging']\n  }, {\n    [`& .${gridClasses['columnHeader--moving']}`]: styles['columnHeader--moving']\n  }, {\n    [`& .${gridClasses['columnHeader--numeric']}`]: styles['columnHeader--numeric']\n  }, {\n    [`& .${gridClasses['columnHeader--sortable']}`]: styles['columnHeader--sortable']\n  }, {\n    [`& .${gridClasses['columnHeader--sorted']}`]: styles['columnHeader--sorted']\n  }, {\n    [`& .${gridClasses['columnHeader--withRightBorder']}`]: styles['columnHeader--withRightBorder']\n  }, {\n    [`& .${gridClasses.columnHeader}`]: styles.columnHeader\n  }, {\n    [`& .${gridClasses.headerFilterRow}`]: styles.headerFilterRow\n  }, {\n    [`& .${gridClasses.columnHeaderCheckbox}`]: styles.columnHeaderCheckbox\n  }, {\n    [`& .${gridClasses.columnHeaderDraggableContainer}`]: styles.columnHeaderDraggableContainer\n  }, {\n    [`& .${gridClasses.columnHeaderTitleContainer}`]: styles.columnHeaderTitleContainer\n  }, {\n    [`& .${gridClasses['columnSeparator--resizable']}`]: styles['columnSeparator--resizable']\n  }, {\n    [`& .${gridClasses['columnSeparator--resizing']}`]: styles['columnSeparator--resizing']\n  }, {\n    [`& .${gridClasses.columnSeparator}`]: styles.columnSeparator\n  }, {\n    [`& .${gridClasses.filterIcon}`]: styles.filterIcon\n  }, {\n    [`& .${gridClasses.iconSeparator}`]: styles.iconSeparator\n  }, {\n    [`& .${gridClasses.menuIcon}`]: styles.menuIcon\n  }, {\n    [`& .${gridClasses.menuIconButton}`]: styles.menuIconButton\n  }, {\n    [`& .${gridClasses.menuOpen}`]: styles.menuOpen\n  }, {\n    [`& .${gridClasses.menuList}`]: styles.menuList\n  }, {\n    [`& .${gridClasses['row--editable']}`]: styles['row--editable']\n  }, {\n    [`& .${gridClasses['row--editing']}`]: styles['row--editing']\n  }, {\n    [`& .${gridClasses['row--dragging']}`]: styles['row--dragging']\n  }, {\n    [`& .${gridClasses.row}`]: styles.row\n  }, {\n    [`& .${gridClasses.rowReorderCellPlaceholder}`]: styles.rowReorderCellPlaceholder\n  }, {\n    [`& .${gridClasses.rowReorderCell}`]: styles.rowReorderCell\n  }, {\n    [`& .${gridClasses['rowReorderCell--draggable']}`]: styles['rowReorderCell--draggable']\n  }, {\n    [`& .${gridClasses.sortIcon}`]: styles.sortIcon\n  }, {\n    [`& .${gridClasses.withBorderColor}`]: styles.withBorderColor\n  }, {\n    [`& .${gridClasses.treeDataGroupingCell}`]: styles.treeDataGroupingCell\n  }, {\n    [`& .${gridClasses.treeDataGroupingCellToggle}`]: styles.treeDataGroupingCellToggle\n  }, {\n    [`& .${gridClasses.detailPanelToggleCell}`]: styles.detailPanelToggleCell\n  }, {\n    [`& .${gridClasses['detailPanelToggleCell--expanded']}`]: styles['detailPanelToggleCell--expanded']\n  }, styles.root]\n})(({\n  theme\n}) => {\n  const borderColor = getBorderColor(theme);\n  const radius = theme.shape.borderRadius;\n  const gridStyle = _extends({\n    '--unstable_DataGrid-radius': typeof radius === 'number' ? `${radius}px` : radius,\n    '--unstable_DataGrid-headWeight': theme.typography.fontWeightMedium,\n    '--unstable_DataGrid-overlayBackground': theme.vars ? `rgba(${theme.vars.palette.background.defaultChannel} / ${theme.vars.palette.action.disabledOpacity})` : alpha(theme.palette.background.default, theme.palette.action.disabledOpacity),\n    '--DataGrid-cellOffsetMultiplier': 2,\n    flex: 1,\n    boxSizing: 'border-box',\n    position: 'relative',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderColor,\n    borderRadius: 'var(--unstable_DataGrid-radius)',\n    color: (theme.vars || theme).palette.text.primary\n  }, theme.typography.body2, {\n    outline: 'none',\n    height: '100%',\n    display: 'flex',\n    minWidth: 0,\n    // See https://github.com/mui/mui-x/issues/8547\n    minHeight: 0,\n    flexDirection: 'column',\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    [`&.${gridClasses.autoHeight}`]: {\n      height: 'auto',\n      [`& .${gridClasses['row--lastVisible']} .${gridClasses.cell}`]: {\n        borderBottomColor: 'transparent'\n      }\n    },\n    [`&.${gridClasses.autosizing}`]: {\n      [`& .${gridClasses.columnHeaderTitleContainerContent} > *`]: {\n        overflow: 'visible !important'\n      },\n      [`& .${gridClasses.cell} > *`]: {\n        overflow: 'visible !important',\n        whiteSpace: 'nowrap'\n      },\n      [`& .${gridClasses.groupingCriteriaCell}`]: {\n        width: 'unset'\n      },\n      [`& .${gridClasses.treeDataGroupingCell}`]: {\n        width: 'unset'\n      }\n    },\n    [`& .${gridClasses['virtualScrollerContent--overflowed']} .${gridClasses['row--lastVisible']} .${gridClasses.cell}`]: {\n      borderBottomColor: 'transparent'\n    },\n    [`& .${gridClasses.columnHeader}, & .${gridClasses.cell}`]: {\n      WebkitTapHighlightColor: 'transparent',\n      lineHeight: null,\n      padding: '0 10px',\n      boxSizing: 'border-box'\n    },\n    [`& .${gridClasses.columnHeader}:focus-within, & .${gridClasses.cell}:focus-within`]: {\n      outline: `solid ${theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / 0.5)` : alpha(theme.palette.primary.main, 0.5)} 1px`,\n      outlineWidth: 1,\n      outlineOffset: -1\n    },\n    [`& .${gridClasses.columnHeader}:focus, & .${gridClasses.cell}:focus`]: {\n      outline: `solid ${theme.palette.primary.main} 1px`\n    },\n    [`& .${gridClasses.columnHeaderCheckbox}, & .${gridClasses.cellCheckbox}`]: {\n      padding: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses.columnHeader}`]: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses['columnHeader--sorted']} .${gridClasses.iconButtonContainer}, & .${gridClasses['columnHeader--filtered']} .${gridClasses.iconButtonContainer}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${gridClasses.columnHeader}:not(.${gridClasses['columnHeader--sorted']}) .${gridClasses.sortIcon}`]: {\n      opacity: 0,\n      transition: theme.transitions.create(['opacity'], {\n        duration: theme.transitions.duration.shorter\n      })\n    },\n    [`& .${gridClasses.columnHeaderTitleContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      minWidth: 0,\n      flex: 1,\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      // to anchor the aggregation label\n      position: 'relative'\n    },\n    [`& .${gridClasses.columnHeaderTitleContainerContent}`]: {\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses['columnHeader--filledGroup']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      borderBottomWidth: '1px',\n      borderBottomStyle: 'solid',\n      boxSizing: 'border-box'\n    },\n    [`& .${gridClasses['columnHeader--filledGroup']}.${gridClasses['columnHeader--showColumnBorder']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      borderBottom: `none`\n    },\n    [`& .${gridClasses['columnHeader--filledGroup']}.${gridClasses['columnHeader--showColumnBorder']}`]: {\n      borderBottomWidth: '1px',\n      borderBottomStyle: 'solid',\n      boxSizing: 'border-box'\n    },\n    [`& .${gridClasses.headerFilterRow}`]: {\n      borderTop: `1px solid ${borderColor}`\n    },\n    [`& .${gridClasses.sortIcon}, & .${gridClasses.filterIcon}`]: {\n      fontSize: 'inherit'\n    },\n    [`& .${gridClasses['columnHeader--sortable']}`]: {\n      cursor: 'pointer'\n    },\n    [`& .${gridClasses['columnHeader--alignCenter']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses['columnHeader--alignRight']} .${gridClasses.columnHeaderDraggableContainer}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      flexDirection: 'row-reverse'\n    },\n    [`& .${gridClasses['columnHeader--alignCenter']} .${gridClasses.menuIcon}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -6\n    },\n    [`& .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -10\n    },\n    [`& .${gridClasses['columnHeader--moving']}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.hover\n    },\n    [`& .${gridClasses.columnSeparator}`]: {\n      visibility: 'hidden',\n      position: 'absolute',\n      zIndex: 100,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      color: borderColor\n    },\n    '@media (hover: hover)': {\n      [`& .${gridClasses.columnHeaders}:hover`]: columnHeadersStyles,\n      [`& .${gridClasses.columnHeader}:hover`]: columnHeaderStyles,\n      [`& .${gridClasses.columnHeader}:not(.${gridClasses['columnHeader--sorted']}):hover .${gridClasses.sortIcon}`]: {\n        opacity: 0.5\n      }\n    },\n    '@media (hover: none)': {\n      [`& .${gridClasses.columnHeaders}`]: columnHeadersStyles,\n      [`& .${gridClasses.columnHeader}`]: columnHeaderStyles\n    },\n    [`& .${gridClasses['columnSeparator--sideLeft']}`]: {\n      left: -12\n    },\n    [`& .${gridClasses['columnSeparator--sideRight']}`]: {\n      right: -12\n    },\n    [`& .${gridClasses['columnSeparator--resizable']}`]: {\n      cursor: 'col-resize',\n      touchAction: 'none',\n      '&:hover': {\n        color: (theme.vars || theme).palette.text.primary,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          color: borderColor\n        }\n      },\n      [`&.${gridClasses['columnSeparator--resizing']}`]: {\n        color: (theme.vars || theme).palette.text.primary\n      },\n      '& svg': {\n        pointerEvents: 'none'\n      }\n    },\n    [`& .${gridClasses.iconSeparator}`]: {\n      color: 'inherit'\n    },\n    [`& .${gridClasses.menuIcon}`]: {\n      width: 0,\n      visibility: 'hidden',\n      fontSize: 20,\n      marginRight: -10,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`.${gridClasses.menuOpen}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${gridClasses.row}`]: {\n      display: 'flex',\n      width: 'fit-content',\n      breakInside: 'avoid',\n      // Avoid the row to be broken in two different print pages.\n      '&:hover, &.Mui-hovered': {\n        backgroundColor: (theme.vars || theme).palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&.Mui-selected': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n        '&:hover, &.Mui-hovered': {\n          backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(\n                ${theme.vars.palette.action.selectedOpacity} + \n                ${theme.vars.palette.action.hoverOpacity}\n              ))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n          }\n        }\n      }\n    },\n    [`& .${gridClasses.cell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      borderBottom: '1px solid',\n      '&.Mui-selected': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n        '&:hover, &.Mui-hovered': {\n          backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity + theme.palette.action.hoverOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n          }\n        }\n      }\n    },\n    [`&.${gridClasses['root--disableUserSelection']} .${gridClasses.cell}`]: {\n      userSelect: 'none'\n    },\n    [`& .${gridClasses.row}:not(.${gridClasses['row--dynamicHeight']}) > .${gridClasses.cell}`]: {\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    },\n    [`& .${gridClasses.cellContent}`]: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    },\n    [`& .${gridClasses.cell}.${gridClasses['cell--selectionMode']}`]: {\n      cursor: 'default'\n    },\n    [`& .${gridClasses.cell}.${gridClasses['cell--editing']}`]: {\n      padding: 1,\n      display: 'flex',\n      boxShadow: theme.shadows[2],\n      backgroundColor: (theme.vars || theme).palette.background.paper,\n      '&:focus-within': {\n        outline: `solid ${(theme.vars || theme).palette.primary.main} 1px`,\n        outlineOffset: '-1px'\n      }\n    },\n    [`& .${gridClasses['row--editing']}`]: {\n      boxShadow: theme.shadows[2]\n    },\n    [`& .${gridClasses['row--editing']} .${gridClasses.cell}`]: {\n      boxShadow: theme.shadows[0],\n      backgroundColor: (theme.vars || theme).palette.background.paper\n    },\n    [`& .${gridClasses.editBooleanCell}`]: {\n      display: 'flex',\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses.booleanCell}[data-value=\"true\"]`]: {\n      color: (theme.vars || theme).palette.text.secondary\n    },\n    [`& .${gridClasses.booleanCell}[data-value=\"false\"]`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    },\n    [`& .${gridClasses.actionsCell}`]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gridGap: theme.spacing(1)\n    },\n    [`& .${gridClasses.rowReorderCell}`]: {\n      display: 'inline-flex',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      opacity: (theme.vars || theme).palette.action.disabledOpacity\n    },\n    [`& .${gridClasses['rowReorderCell--draggable']}`]: {\n      cursor: 'move',\n      opacity: 1\n    },\n    [`& .${gridClasses.rowReorderCellContainer}`]: {\n      padding: 0,\n      alignItems: 'stretch'\n    },\n    [`.${gridClasses.withBorderColor}`]: {\n      borderColor\n    },\n    [`& .${gridClasses['cell--withRightBorder']}`]: {\n      borderRightWidth: '1px',\n      borderRightStyle: 'solid'\n    },\n    [`& .${gridClasses['columnHeader--withRightBorder']}`]: {\n      borderRightWidth: '1px',\n      borderRightStyle: 'solid'\n    },\n    [`& .${gridClasses['cell--textLeft']}`]: {\n      justifyContent: 'flex-start'\n    },\n    [`& .${gridClasses['cell--textRight']}`]: {\n      justifyContent: 'flex-end'\n    },\n    [`& .${gridClasses['cell--textCenter']}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses.columnHeaderDraggableContainer}`]: {\n      display: 'flex',\n      width: '100%',\n      height: '100%'\n    },\n    [`& .${gridClasses.rowReorderCellPlaceholder}`]: {\n      display: 'none'\n    },\n    [`& .${gridClasses['columnHeader--dragging']}, & .${gridClasses['row--dragging']}`]: {\n      background: (theme.vars || theme).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (theme.vars || theme).palette.action.disabledOpacity\n    },\n    [`& .${gridClasses['row--dragging']}`]: {\n      background: (theme.vars || theme).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (theme.vars || theme).palette.action.disabledOpacity,\n      [`& .${gridClasses.rowReorderCellPlaceholder}`]: {\n        display: 'flex'\n      }\n    },\n    [`& .${gridClasses.treeDataGroupingCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${gridClasses.treeDataGroupingCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: theme.spacing(2)\n    },\n    [`& .${gridClasses.groupingCriteriaCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${gridClasses.groupingCriteriaCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: theme.spacing(2)\n    }\n  });\n  return gridStyle;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_capitalize as capitalize, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { GridRootStyles } from './GridRootStyles';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridDensityValueSelector } from '../../hooks/features/density/densitySelector';\nimport { useGridAriaAttributes } from '../../hooks/utils/useGridAriaAttributes';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    autoHeight,\n    density,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`, 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  var _rootProps$experiment;\n  const rootProps = useGridRootProps();\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const densityValue = useGridSelector(apiRef, gridDensityValueSelector);\n  const rootContainerRef = React.useRef(null);\n  const handleRef = useForkRef(rootContainerRef, ref);\n  const getAriaAttributes = (_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.ariaV7 // ariaV7 should never change\n  ? null : useGridAriaAttributes;\n  const ariaAttributes = typeof getAriaAttributes === 'function' ? getAriaAttributes() : null;\n  const ownerState = _extends({}, rootProps, {\n    density: densityValue\n  });\n  const classes = useUtilityClasses(ownerState);\n  apiRef.current.register('public', {\n    rootElementRef: rootContainerRef\n  });\n\n  // Our implementation of <NoSsr />\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  if (!mountedState) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(className, classes.root),\n    ownerState: ownerState\n  }, ariaAttributes, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"open\", \"target\", \"onClose\", \"children\", \"position\", \"className\", \"onExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect, HTMLElementType } from '@mui/utils';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['menu']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridMenuRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Menu',\n  overridesResolver: (_, styles) => styles.menu\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal,\n  [`& .${gridClasses.menuList}`]: {\n    outline: 0\n  }\n}));\nconst transformOrigin = {\n  'bottom-start': 'top left',\n  'bottom-end': 'top right'\n};\nfunction GridMenu(props) {\n  var _rootProps$slotProps;\n  const {\n      open,\n      target,\n      onClose,\n      children,\n      position,\n      className,\n      onExited\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const savedFocusRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (open) {\n      savedFocusRef.current = document.activeElement instanceof HTMLElement ? document.activeElement : null;\n    } else {\n      var _savedFocusRef$curren, _savedFocusRef$curren2;\n      (_savedFocusRef$curren = savedFocusRef.current) == null || (_savedFocusRef$curren2 = _savedFocusRef$curren.focus) == null || _savedFocusRef$curren2.call(_savedFocusRef$curren);\n      savedFocusRef.current = null;\n    }\n  }, [open]);\n  React.useEffect(() => {\n    // Emit menuOpen or menuClose events\n    const eventName = open ? 'menuOpen' : 'menuClose';\n    apiRef.current.publishEvent(eventName, {\n      target\n    });\n  }, [apiRef, open, target]);\n  const handleExited = popperOnExited => node => {\n    if (popperOnExited) {\n      popperOnExited();\n    }\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleClickAway = event => {\n    if (event.target && (target === event.target || target != null && target.contains(event.target))) {\n      return;\n    }\n    onClose(event);\n  };\n  return /*#__PURE__*/_jsx(GridMenuRoot, _extends({\n    as: rootProps.slots.basePopper,\n    className: clsx(className, classes.root),\n    ownerState: rootProps,\n    open: open,\n    anchorEl: target,\n    transition: true,\n    placement: position\n  }, other, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.basePopper, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(ClickAwayListener, {\n      onClickAway: handleClickAway,\n      mouseEvent: \"onMouseDown\",\n      children: /*#__PURE__*/_jsx(Grow, _extends({}, TransitionProps, {\n        style: {\n          transformOrigin: transformOrigin[placement]\n        },\n        onExited: handleExited(TransitionProps == null ? void 0 : TransitionProps.onExited),\n        children: /*#__PURE__*/_jsx(Paper, {\n          children: children\n        })\n      }))\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  target: HTMLElementType\n} : void 0;\nexport { GridMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEventCallback as useEventCallback, HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../GridMenu';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const colDef = apiRef.current.getColumn(field);\n  const hideMenu = useEventCallback(event => {\n    if (event) {\n      // Prevent triggering the sorting\n      event.stopPropagation();\n      if (target != null && target.contains(event.target)) {\n        return;\n      }\n    }\n    apiRef.current.hideColumnMenu();\n  });\n  if (!target || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${colDef.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClose: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      colDef: colDef,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"displayOrder\"];\nimport * as React from 'react';\nimport Divider from '@mui/material/Divider';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nconst useGridColumnMenuSlots = props => {\n  const apiRef = useGridPrivateApiContext();\n  const {\n    defaultSlots,\n    defaultSlotProps,\n    slots = {},\n    slotProps = {},\n    hideMenu,\n    colDef,\n    addDividers = true\n  } = props;\n  const processedComponents = React.useMemo(() => _extends({}, defaultSlots, slots), [defaultSlots, slots]);\n  const processedSlotProps = React.useMemo(() => {\n    if (!slotProps || Object.keys(slotProps).length === 0) {\n      return defaultSlotProps;\n    }\n    const mergedProps = _extends({}, slotProps);\n    Object.entries(defaultSlotProps).forEach(([key, currentSlotProps]) => {\n      mergedProps[key] = _extends({}, currentSlotProps, slotProps[key] || {});\n    });\n    return mergedProps;\n  }, [defaultSlotProps, slotProps]);\n  const defaultItems = apiRef.current.unstable_applyPipeProcessors('columnMenu', [], props.colDef);\n  const userItems = React.useMemo(() => {\n    const defaultComponentKeys = Object.keys(defaultSlots);\n    return Object.keys(slots).filter(key => !defaultComponentKeys.includes(key));\n  }, [slots, defaultSlots]);\n  return React.useMemo(() => {\n    const uniqueItems = Array.from(new Set([...defaultItems, ...userItems]));\n    const cleansedItems = uniqueItems.filter(key => processedComponents[key] != null);\n    const sorted = cleansedItems.sort((a, b) => {\n      const leftItemProps = processedSlotProps[a];\n      const rightItemProps = processedSlotProps[b];\n      const leftDisplayOrder = Number.isFinite(leftItemProps == null ? void 0 : leftItemProps.displayOrder) ? leftItemProps.displayOrder : 100;\n      const rightDisplayOrder = Number.isFinite(rightItemProps == null ? void 0 : rightItemProps.displayOrder) ? rightItemProps.displayOrder : 100;\n      return leftDisplayOrder - rightDisplayOrder;\n    });\n    return sorted.reduce((acc, key, index) => {\n      let itemProps = {\n        colDef,\n        onClick: hideMenu\n      };\n      const processedComponentProps = processedSlotProps[key];\n      if (processedComponentProps) {\n        const customProps = _objectWithoutPropertiesLoose(processedComponentProps, _excluded);\n        itemProps = _extends({}, itemProps, customProps);\n      }\n      return addDividers && index !== sorted.length - 1 ? [...acc, [processedComponents[key], itemProps], [Divider, {}]] : [...acc, [processedComponents[key], itemProps]];\n    }, []);\n  }, [addDividers, colDef, defaultItems, hideMenu, processedComponents, processedSlotProps, userItems]);\n};\nexport { useGridColumnMenuSlots };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"defaultSlots\", \"defaultSlotProps\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridColumnMenuSlots } from '../../../hooks/features/columnMenu/useGridColumnMenuSlots';\nimport { GridColumnMenuContainer } from './GridColumnMenuContainer';\nimport { GridColumnMenuColumnsItem } from './menuItems/GridColumnMenuColumnsItem';\nimport { GridColumnMenuFilterItem } from './menuItems/GridColumnMenuFilterItem';\nimport { GridColumnMenuSortItem } from './menuItems/GridColumnMenuSortItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_COLUMN_MENU_SLOTS = {\n  columnMenuSortItem: GridColumnMenuSortItem,\n  columnMenuFilterItem: GridColumnMenuFilterItem,\n  columnMenuColumnsItem: GridColumnMenuColumnsItem\n};\nexport const GRID_COLUMN_MENU_SLOT_PROPS = {\n  columnMenuSortItem: {\n    displayOrder: 10\n  },\n  columnMenuFilterItem: {\n    displayOrder: 20\n  },\n  columnMenuColumnsItem: {\n    displayOrder: 30\n  }\n};\nconst GridGenericColumnMenu = /*#__PURE__*/React.forwardRef(function GridGenericColumnMenu(props, ref) {\n  const {\n      defaultSlots,\n      defaultSlotProps,\n      slots,\n      slotProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const orderedSlots = useGridColumnMenuSlots(_extends({}, other, {\n    defaultSlots,\n    defaultSlotProps,\n    slots,\n    slotProps\n  }));\n  return /*#__PURE__*/_jsx(GridColumnMenuContainer, _extends({\n    ref: ref\n  }, other, {\n    children: orderedSlots.map(([Component, otherProps], index) => /*#__PURE__*/_jsx(Component, _extends({}, otherProps), index))\n  }));\n});\nconst GridColumnMenu = /*#__PURE__*/React.forwardRef(function GridColumnMenu(props, ref) {\n  return /*#__PURE__*/_jsx(GridGenericColumnMenu, _extends({}, props, {\n    ref: ref,\n    defaultSlots: GRID_COLUMN_MENU_SLOTS,\n    defaultSlotProps: GRID_COLUMN_MENU_SLOT_PROPS\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { GridColumnMenu, GridGenericColumnMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"colDef\", \"id\", \"labelledby\", \"className\", \"children\", \"open\"];\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport MenuList from '@mui/material/MenuList';\nimport { styled } from '@mui/material/styles';\nimport { isHideMenuKey, isTabKey } from '../../../utils/keyboardUtils';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledMenuList = styled(MenuList)(() => ({\n  minWidth: 248\n}));\nconst GridColumnMenuContainer = /*#__PURE__*/React.forwardRef(function GridColumnMenuContainer(props, ref) {\n  const {\n      hideMenu,\n      id,\n      labelledby,\n      className,\n      children,\n      open\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const handleListKeyDown = React.useCallback(event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      hideMenu(event);\n    }\n  }, [hideMenu]);\n  return /*#__PURE__*/_jsx(StyledMenuList, _extends({\n    id: id,\n    ref: ref,\n    className: clsx(gridClasses.menuList, className),\n    \"aria-labelledby\": labelledby,\n    onKeyDown: handleListKeyDown,\n    autoFocus: open\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenuContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridColumnMenuHideItem } from './GridColumnMenuHideItem';\nimport { GridColumnMenuManageItem } from './GridColumnMenuManageItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuColumnsItem(props) {\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnMenuHideItem, _extends({}, props)), /*#__PURE__*/_jsx(GridColumnMenuManageItem, _extends({}, props))]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuColumnsItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuColumnsItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuFilterItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showFilter = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showFilterPanel(colDef.field);\n  }, [apiRef, colDef.field, onClick]);\n  if (rootProps.disableColumnFilter || !colDef.filterable) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showFilter,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuFilterIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuFilter')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuFilterItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuFilterItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { gridVisibleColumnDefinitionsSelector } from '../../../../hooks/features/columns';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuHideItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true);\n  // do not allow to hide the last column with menu\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n    apiRef.current.setColumnVisibility(colDef.field, false);\n    onClick(event);\n  }, [apiRef, colDef.field, onClick, disabled]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  if (colDef.hideable === false) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuHideIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuHideColumn')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuHideItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuHideItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { GridPreferencePanelsValue } from '../../../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuManageItem(props) {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event); // hide column menu\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showColumns,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuManageColumnsIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuManageColumns')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuManageItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuManageItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridSelector } from '../../../../hooks/utils/useGridSelector';\nimport { gridSortModelSelector } from '../../../../hooks/features/sorting/gridSortingSelector';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuSortItem(props) {\n  var _colDef$sortingOrder;\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const rootProps = useGridRootProps();\n  const sortDirection = React.useMemo(() => {\n    if (!colDef) {\n      return null;\n    }\n    const sortItem = sortModel.find(item => item.field === colDef.field);\n    return sortItem == null ? void 0 : sortItem.sort;\n  }, [colDef, sortModel]);\n  const sortingOrder = (_colDef$sortingOrder = colDef.sortingOrder) != null ? _colDef$sortingOrder : rootProps.sortingOrder;\n  const onSortMenuItemClick = React.useCallback(event => {\n    onClick(event);\n    const direction = event.currentTarget.getAttribute('data-value') || null;\n    apiRef.current.sortColumn(colDef, direction === sortDirection ? null : direction);\n  }, [apiRef, colDef, onClick, sortDirection]);\n  if (!colDef || !colDef.sortable || !sortingOrder.some(item => !!item)) {\n    return null;\n  }\n  const getLabel = key => {\n    const label = apiRef.current.getLocaleText(key);\n    return typeof label === 'function' ? label(colDef) : label;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [sortingOrder.includes('asc') && sortDirection !== 'asc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"asc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortAscendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortAsc')\n      })]\n    }) : null, sortingOrder.includes('desc') && sortDirection !== 'desc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"desc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortDescendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortDesc')\n      })]\n    }) : null, sortingOrder.includes(null) && sortDirection != null ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {}), /*#__PURE__*/_jsx(ListItemText, {\n        children: apiRef.current.getLocaleText('columnMenuUnsort')\n      })]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuSortItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuSortItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sort\", \"searchPredicate\", \"autoFocusSearchField\", \"disableHideAllButton\", \"disableShowAllButton\", \"getTogglableColumns\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport IconButton from '@mui/material/IconButton';\nimport { switchClasses } from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridPanelContent } from './GridPanelContent';\nimport { GridPanelFooter } from './GridPanelFooter';\nimport { GridPanelHeader } from './GridPanelHeader';\nimport { GridPanelWrapper } from './GridPanelWrapper';\nimport { GRID_EXPERIMENTAL_ENABLED } from '../../constants/envConstants';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsPanel'],\n    columnsPanelRow: ['columnsPanelRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnsPanelRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsPanel',\n  overridesResolver: (props, styles) => styles.columnsPanel\n})({\n  padding: '8px 0px 8px 8px'\n});\nconst GridColumnsPanelRowRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsPanelRow',\n  overridesResolver: (props, styles) => styles.columnsPanelRow\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: '1px 8px 1px 7px',\n  [`& .${switchClasses.root}`]: {\n    marginRight: theme.spacing(0.5)\n  }\n}));\nconst GridIconButtonRoot = styled(IconButton)({\n  justifyContent: 'flex-end'\n});\nconst collator = new Intl.Collator();\nconst defaultSearchPredicate = (column, searchValue) => {\n  return (column.headerName || column.field).toLowerCase().indexOf(searchValue) > -1;\n};\nfunction GridColumnsPanel(props) {\n  var _rootProps$slotProps, _rootProps$slotProps3, _rootProps$slotProps4;\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const classes = useUtilityClasses(rootProps);\n  const {\n      sort,\n      searchPredicate = defaultSearchPredicate,\n      autoFocusSearchField = true,\n      disableHideAllButton = false,\n      disableShowAllButton = false,\n      getTogglableColumns\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const sortedColumns = React.useMemo(() => {\n    switch (sort) {\n      case 'asc':\n        return [...columns].sort((a, b) => collator.compare(a.headerName || a.field, b.headerName || b.field));\n      case 'desc':\n        return [...columns].sort((a, b) => -collator.compare(a.headerName || a.field, b.headerName || b.field));\n      default:\n        return columns;\n    }\n  }, [columns, sort]);\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n  const toggleAllColumns = React.useCallback(isVisible => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    const newModel = _extends({}, currentModel);\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(columns) : null;\n    columns.forEach(col => {\n      if (col.hideable && (togglableColumns == null || togglableColumns.includes(col.field))) {\n        if (isVisible) {\n          // delete the key from the model instead of setting it to `true`\n          delete newModel[col.field];\n        } else {\n          newModel[col.field] = false;\n        }\n      }\n    });\n    return apiRef.current.setColumnVisibilityModel(newModel);\n  }, [apiRef, columns, getTogglableColumns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const currentColumns = React.useMemo(() => {\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(sortedColumns) : null;\n    const togglableSortedColumns = togglableColumns ? sortedColumns.filter(({\n      field\n    }) => togglableColumns.includes(field)) : sortedColumns;\n    if (!searchValue) {\n      return togglableSortedColumns;\n    }\n    return togglableSortedColumns.filter(column => searchPredicate(column, searchValue.toLowerCase()));\n  }, [sortedColumns, searchValue, searchPredicate, getTogglableColumns]);\n  const firstSwitchRef = React.useRef(null);\n  React.useEffect(() => {\n    if (autoFocusSearchField) {\n      searchInputRef.current.focus();\n    } else if (firstSwitchRef.current && typeof firstSwitchRef.current.focus === 'function') {\n      firstSwitchRef.current.focus();\n    }\n  }, [autoFocusSearchField]);\n  let firstHideableColumnFound = false;\n  const isFirstHideableColumn = column => {\n    if (firstHideableColumnFound === false && column.hideable !== false) {\n      firstHideableColumnFound = true;\n      return true;\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({}, other, {\n    children: [/*#__PURE__*/_jsx(GridPanelHeader, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n        label: apiRef.current.getLocaleText('columnsPanelTextFieldLabel'),\n        placeholder: apiRef.current.getLocaleText('columnsPanelTextFieldPlaceholder'),\n        inputRef: searchInputRef,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"standard\",\n        fullWidth: true\n      }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseTextField))\n    }), /*#__PURE__*/_jsx(GridPanelContent, {\n      children: /*#__PURE__*/_jsx(GridColumnsPanelRoot, {\n        className: classes.root,\n        ownerState: rootProps,\n        children: currentColumns.map(column => {\n          var _rootProps$slotProps2;\n          return /*#__PURE__*/_jsxs(GridColumnsPanelRowRoot, {\n            className: classes.columnsPanelRow,\n            ownerState: rootProps,\n            children: [/*#__PURE__*/_jsx(FormControlLabel, {\n              control: /*#__PURE__*/_jsx(rootProps.slots.baseSwitch, _extends({\n                disabled: column.hideable === false,\n                checked: columnVisibilityModel[column.field] !== false,\n                onClick: toggleColumn,\n                name: column.field,\n                size: \"small\",\n                inputRef: isFirstHideableColumn(column) ? firstSwitchRef : undefined\n              }, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseSwitch)),\n              label: column.headerName || column.field\n            }), !rootProps.disableColumnReorder && GRID_EXPERIMENTAL_ENABLED && /*#__PURE__*/_jsx(GridIconButtonRoot, {\n              draggable: true,\n              \"aria-label\": apiRef.current.getLocaleText('columnsPanelDragIconLabel'),\n              title: apiRef.current.getLocaleText('columnsPanelDragIconLabel'),\n              size: \"small\",\n              disabled: true,\n              children: /*#__PURE__*/_jsx(rootProps.slots.columnReorderIcon, {})\n            })]\n          }, column.field);\n        })\n      })\n    }), disableShowAllButton && disableHideAllButton ? null : /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [!disableHideAllButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: () => toggleAllColumns(false)\n      }, (_rootProps$slotProps3 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps3.baseButton, {\n        disabled: disableHideAllButton,\n        children: apiRef.current.getLocaleText('columnsPanelHideAllButton')\n      })) : /*#__PURE__*/_jsx(\"span\", {}), !disableShowAllButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: () => toggleAllColumns(true)\n      }, (_rootProps$slotProps4 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps4.baseButton, {\n        disabled: disableShowAllButton,\n        children: apiRef.current.getLocaleText('columnsPanelShowAllButton')\n      })) : null]\n    })]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the column search field will be focused automatically.\n   * If `false`, the first column switch input will be focused automatically.\n   * This helps to avoid input keyboard panel to popup automatically on touch devices.\n   * @default true\n   */\n  autoFocusSearchField: PropTypes.bool,\n  /**\n   * If `true`, the `Hide all` button will not be displayed.\n   * @default false\n   */\n  disableHideAllButton: PropTypes.bool,\n  /**\n   * If `true`, the `Show all` button will be disabled\n   * @default false\n   */\n  disableShowAllButton: PropTypes.bool,\n  /**\n   * Returns the list of togglable columns.\n   * If used, only those columns will be displayed in the panel\n   * which are passed as the return value of the function.\n   * @param {GridColDef[]} columns The `ColDef` list of all columns.\n   * @returns {GridColDef['field'][]} The list of togglable columns' field names.\n   */\n  getTogglableColumns: PropTypes.func,\n  searchPredicate: PropTypes.func,\n  slotProps: PropTypes.object,\n  sort: PropTypes.oneOf(['asc', 'desc'])\n} : void 0;\nexport { GridColumnsPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPanelClasses = generateUtilityClasses('MuiDataGrid', ['panel', 'paper']);\nconst GridPanelRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Panel',\n  overridesResolver: (props, styles) => styles.panel\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst GridPaperRoot = styled(Paper, {\n  name: 'MuiDataGrid',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  minWidth: 300,\n  maxHeight: 450,\n  display: 'flex'\n}));\nconst GridPanel = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = gridPanelClasses;\n  const [isPlaced, setIsPlaced] = React.useState(false);\n  const handleClickAway = React.useCallback(() => {\n    apiRef.current.hidePreferences();\n  }, [apiRef]);\n  const handleKeyDown = React.useCallback(event => {\n    if (isEscapeKey(event.key)) {\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef]);\n  const modifiers = React.useMemo(() => [{\n    name: 'flip',\n    enabled: false\n  }, {\n    name: 'isPlaced',\n    enabled: true,\n    phase: 'main',\n    fn: () => {\n      setIsPlaced(true);\n    },\n    effect: () => () => {\n      setIsPlaced(false);\n    }\n  }], []);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  React.useEffect(() => {\n    var _apiRef$current$rootE;\n    const columnHeadersElement = (_apiRef$current$rootE = apiRef.current.rootElementRef) == null || (_apiRef$current$rootE = _apiRef$current$rootE.current) == null ? void 0 : _apiRef$current$rootE.querySelector(`.${gridClasses.columnHeaders}`);\n    if (columnHeadersElement) {\n      setAnchorEl(columnHeadersElement);\n    }\n  }, [apiRef]);\n  if (!anchorEl) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridPanelRoot, _extends({\n    ref: ref,\n    placement: \"bottom-start\",\n    className: clsx(className, classes.panel),\n    ownerState: rootProps,\n    anchorEl: anchorEl,\n    modifiers: modifiers\n  }, other, {\n    children: /*#__PURE__*/_jsx(ClickAwayListener, {\n      mouseEvent: \"onMouseUp\",\n      onClickAway: handleClickAway,\n      children: /*#__PURE__*/_jsx(GridPaperRoot, {\n        className: classes.paper,\n        ownerState: rootProps,\n        elevation: 8,\n        onKeyDown: handleKeyDown,\n        children: isPlaced && children\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Popper render function or node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  ownerState: PropTypes.object\n} : void 0;\nexport { GridPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelContent',\n  overridesResolver: (props, styles) => styles.panelContent\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400\n});\nfunction GridPanelContent(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelContentRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelFooter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelFooterRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelFooter',\n  overridesResolver: (props, styles) => styles.panelFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5),\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\nfunction GridPanelFooter(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelFooterRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelHeader']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelHeaderRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelHeader',\n  overridesResolver: (props, styles) => styles.panelHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1)\n}));\nfunction GridPanelHeader(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelHeaderRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport FocusTrap from '@mui/material/Unstable_TrapFocus';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelWrapper']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelWrapper',\n  overridesResolver: (props, styles) => styles.panelWrapper\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  '&:focus': {\n    outline: 0\n  }\n});\nconst isEnabled = () => true;\nconst GridPanelWrapper = /*#__PURE__*/React.forwardRef(function GridPanelWrapper(props, ref) {\n  const {\n      className,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(FocusTrap, _extends({\n    open: true,\n    disableEnforceFocus: true,\n    isEnabled: isEnabled\n  }, slotProps.TrapFocus, {\n    children: /*#__PURE__*/_jsx(GridPanelWrapperRoot, _extends({\n      ref: ref,\n      tabIndex: -1,\n      className: clsx(className, classes.root),\n      ownerState: rootProps\n    }, other))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanelWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridPanelWrapper };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridPreferencesPanel = /*#__PURE__*/React.forwardRef(function GridPreferencesPanel(props, ref) {\n  var _preferencePanelState, _rootProps$slotProps, _rootProps$slotProps2;\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, (_preferencePanelState = preferencePanelState.openedPanelValue) != null ? _preferencePanelState : GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.slots.panel, _extends({\n    ref: ref,\n    as: rootProps.slots.basePopper,\n    open: columns.length > 0 && preferencePanelState.open,\n    id: preferencePanelState.panelId,\n    \"aria-labelledby\": preferencePanelState.labelId\n  }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.panel, props, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.basePopper, {\n    children: panelContent\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"hasMultipleFilters\", \"deleteFilter\", \"applyFilterChanges\", \"multiFilterOperator\", \"showMultiFilterOperators\", \"disableMultiFilterOperator\", \"applyMultiFilterOperatorChanges\", \"focusElementRef\", \"logicOperators\", \"columnsSort\", \"filterColumns\", \"deleteIconProps\", \"logicOperatorInputProps\", \"operatorInputProps\", \"columnInputProps\", \"valueInputProps\", \"children\"],\n  _excluded2 = [\"InputComponentProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_capitalize as capitalize } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { gridFilterableColumnDefinitionsSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { gridFilterModelSelector } from '../../../hooks/features/filter/gridFilterSelector';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { GridLogicOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    logicOperatorInput: ['filterFormLogicOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  padding: theme.spacing(1)\n}));\nconst FilterFormDeleteIcon = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(({\n  theme\n}) => ({\n  flexShrink: 0,\n  justifyContent: 'flex-end',\n  marginRight: theme.spacing(0.5),\n  marginBottom: theme.spacing(0.2)\n}));\nconst FilterFormLogicOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLogicOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLogicOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 120\n});\nconst FilterFormValueInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\nconst getLogicOperatorLocaleKey = logicOperator => {\n  switch (logicOperator) {\n    case GridLogicOperator.And:\n      return 'filterPanelOperatorAnd';\n    case GridLogicOperator.Or:\n      return 'filterPanelOperatorOr';\n    default:\n      throw new Error('MUI: Invalid `logicOperator` property in the `GridFilterPanel`.');\n  }\n};\nconst getColumnLabel = col => col.headerName || col.field;\nconst collator = new Intl.Collator();\nconst GridFilterForm = /*#__PURE__*/React.forwardRef(function GridFilterForm(props, ref) {\n  var _rootProps$slotProps, _rootProps$slotProps2, _baseSelectProps$nati, _rootProps$slotProps3, _rootProps$slotProps4, _rootProps$slotProps5, _rootProps$slotProps6, _rootProps$slotProps7, _rootProps$slotProps8, _currentColumn$filter2;\n  const {\n      item,\n      hasMultipleFilters,\n      deleteFilter,\n      applyFilterChanges,\n      multiFilterOperator,\n      showMultiFilterOperators,\n      disableMultiFilterOperator,\n      applyMultiFilterOperatorChanges,\n      focusElementRef,\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterColumns,\n      deleteIconProps = {},\n      logicOperatorInputProps = {},\n      operatorInputProps = {},\n      columnInputProps = {},\n      valueInputProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const hasLogicOperatorColumn = hasMultipleFilters && logicOperators.length > 0;\n  const baseFormControlProps = ((_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseFormControl) || {};\n  const baseSelectProps = ((_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseSelect) || {};\n  const isBaseSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const baseInputLabelProps = ((_rootProps$slotProps3 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps3.baseInputLabel) || {};\n  const baseSelectOptionProps = ((_rootProps$slotProps4 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps4.baseSelectOption) || {};\n  const {\n      InputComponentProps\n    } = valueInputProps,\n    valueInputPropsOther = _objectWithoutPropertiesLoose(valueInputProps, _excluded2);\n  const filteredColumns = React.useMemo(() => {\n    if (filterColumns === undefined || typeof filterColumns !== 'function') {\n      return filterableColumns;\n    }\n    const filteredFields = filterColumns({\n      field: item.field,\n      columns: filterableColumns,\n      currentFilters: (filterModel == null ? void 0 : filterModel.items) || []\n    });\n    return filterableColumns.filter(column => filteredFields.includes(column.field));\n  }, [filterColumns, filterModel == null ? void 0 : filterModel.items, filterableColumns, item.field]);\n  const sortedFilteredColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filteredColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      case 'desc':\n        return filteredColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      default:\n        return filteredColumns;\n    }\n  }, [filteredColumns, columnsSort]);\n  const currentColumn = item.field ? apiRef.current.getColumn(item.field) : null;\n  const currentOperator = React.useMemo(() => {\n    var _currentColumn$filter;\n    if (!item.operator || !currentColumn) {\n      return null;\n    }\n    return (_currentColumn$filter = currentColumn.filterOperators) == null ? void 0 : _currentColumn$filter.find(operator => operator.value === item.operator);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const field = event.target.value;\n    const column = apiRef.current.getColumn(field);\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    }\n\n    // try to keep the same operator when column change\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operator) || column.filterOperators[0];\n\n    // Erase filter value if the input component or filtered column type is modified\n    const eraseItemValue = !newOperator.InputComponent || newOperator.InputComponent !== (currentOperator == null ? void 0 : currentOperator.InputComponent) || column.type !== currentColumn.type;\n    applyFilterChanges(_extends({}, item, {\n      field,\n      operator: newOperator.value,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operator = event.target.value;\n    const newOperator = currentColumn == null ? void 0 : currentColumn.filterOperators.find(op => op.value === operator);\n    const eraseItemValue = !(newOperator != null && newOperator.InputComponent) || (newOperator == null ? void 0 : newOperator.InputComponent) !== (currentOperator == null ? void 0 : currentOperator.InputComponent);\n    applyFilterChanges(_extends({}, item, {\n      operator,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLogicOperator = React.useCallback(event => {\n    const logicOperator = event.target.value === GridLogicOperator.And.toString() ? GridLogicOperator.And : GridLogicOperator.Or;\n    applyMultiFilterOperatorChanges(logicOperator);\n  }, [applyMultiFilterOperatorChanges]);\n  const handleDeleteFilter = () => {\n    if (rootProps.disableMultipleColumnsFiltering) {\n      if (item.value === undefined) {\n        deleteFilter(item);\n      } else {\n        // TODO v6: simplify the behavior by always remove the filter form\n        applyFilterChanges(_extends({}, item, {\n          value: undefined\n        }));\n      }\n    } else {\n      deleteFilter(item);\n    }\n  };\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator != null && currentOperator.InputComponent) {\n        var _valueRef$current;\n        valueRef == null || (_valueRef$current = valueRef.current) == null || _valueRef$current.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, _extends({\n    ref: ref,\n    className: classes.root,\n    \"data-id\": item.id,\n    ownerState: rootProps\n  }, other, {\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\"\n      }, (_rootProps$slotProps5 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps5.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.filterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    })), /*#__PURE__*/_jsx(FilterFormLogicOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, logicOperatorInputProps, {\n      sx: _extends({\n        display: hasLogicOperatorColumn ? 'flex' : 'none',\n        visibility: showMultiFilterOperators ? 'visible' : 'hidden'\n      }, baseFormControlProps.sx || {}, logicOperatorInputProps.sx || {}),\n      className: clsx(classes.logicOperatorInput, baseFormControlProps.className, logicOperatorInputProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLogicOperator')\n        },\n        value: multiFilterOperator,\n        onChange: changeLogicOperator,\n        disabled: !!disableMultiFilterOperator || logicOperators.length === 1,\n        native: isBaseSelectNative\n      }, (_rootProps$slotProps6 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps6.baseSelect, {\n        children: logicOperators.map(logicOperator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: logicOperator.toString(),\n          value: logicOperator.toString()\n        }), apiRef.current.getLocaleText(getLogicOperatorLocaleKey(logicOperator))))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: item.field || '',\n        onChange: changeColumn,\n        native: isBaseSelectNative\n      }, (_rootProps$slotProps7 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps7.baseSelect, {\n        children: sortedFilteredColumns.map(col => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: col.field,\n          value: col.field\n        }), getColumnLabel(col)))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperator')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperator'),\n        id: operatorSelectId,\n        value: item.operator,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef\n      }, (_rootProps$slotProps8 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps8.baseSelect, {\n        children: currentColumn == null || (_currentColumn$filter2 = currentColumn.filterOperators) == null ? void 0 : _currentColumn$filter2.map(operator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: operator.value,\n          value: operator.value\n        }), operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, valueInputPropsOther, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputPropsOther.className),\n      ownerState: rootProps,\n      children: currentOperator != null && currentOperator.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef\n      }, currentOperator.InputComponentProps, InputComponentProps)) : null\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback called when the operator, column field or value is changed.\n   * @param {GridFilterItem} item The updated [[GridFilterItem]].\n   */\n  applyFilterChanges: PropTypes.func.isRequired,\n  /**\n   * Callback called when the logic operator is changed.\n   * @param {GridLogicOperator} operator The new logic operator.\n   */\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Props passed to the column input component.\n   * @default {}\n   */\n  columnInputProps: PropTypes.any,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Callback called when the delete button is clicked.\n   * @param {GridFilterItem} item The deleted [[GridFilterItem]].\n   */\n  deleteFilter: PropTypes.func.isRequired,\n  /**\n   * Props passed to the delete icon.\n   * @default {}\n   */\n  deleteIconProps: PropTypes.any,\n  /**\n   * If `true`, disables the logic operator field but still renders it.\n   */\n  disableMultiFilterOperator: PropTypes.bool,\n  /**\n   * Allows to filter the columns displayed in the filter form.\n   * @param {FilterColumnsArgs} args The columns of the grid and name of field.\n   * @returns {GridColDef['field'][]} The filtered fields array.\n   */\n  filterColumns: PropTypes.func,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the el\n   */\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the logic operator field is rendered.\n   * The field will be invisible if `showMultiFilterOperators` is also `true`.\n   */\n  hasMultipleFilters: PropTypes.bool.isRequired,\n  /**\n   * The [[GridFilterItem]] representing this form.\n   */\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  /**\n   * Props passed to the logic operator input component.\n   * @default {}\n   */\n  logicOperatorInputProps: PropTypes.any,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * The current logic operator applied.\n   */\n  multiFilterOperator: PropTypes.oneOf(['and', 'or']),\n  /**\n   * Props passed to the operator input component.\n   * @default {}\n   */\n  operatorInputProps: PropTypes.any,\n  /**\n   * If `true`, the logic operator field is visible.\n   */\n  showMultiFilterOperators: PropTypes.bool,\n  /**\n   * Props passed to the value input component.\n   * @default {}\n   */\n  valueInputProps: PropTypes.any\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterForm API](https://mui.com/x/api/data-grid/grid-filter-form/)\n */\nexport { GridFilterForm };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"apiRef\", \"focusElementRef\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"label\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst BooleanOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'center',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputBoolean(props) {\n  var _rootProps$slotProps, _baseSelectProps$nati, _rootProps$slotProps2, _rootProps$slotProps3;\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      clearButton,\n      tabIndex,\n      label: labelProp\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const [filterValueState, setFilterValueState] = React.useState(item.value || '');\n  const rootProps = useGridRootProps();\n  const labelId = useId();\n  const selectId = useId();\n  const baseSelectProps = ((_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const baseSelectOptionProps = ((_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseSelectOption) || {};\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    setFilterValueState(value);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    setFilterValueState(item.value || '');\n  }, [item.value]);\n  const label = labelProp != null ? labelProp : apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(BooleanOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, (_rootProps$slotProps3 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps3.baseInputLabel, {\n        id: labelId,\n        shrink: true,\n        variant: \"standard\",\n        children: label\n      })), /*#__PURE__*/_jsxs(rootProps.slots.baseSelect, _extends({\n        labelId: labelId,\n        id: selectId,\n        label: label,\n        value: filterValueState,\n        onChange: onFilterChange,\n        variant: \"standard\",\n        native: isSelectNative,\n        displayEmpty: true,\n        inputProps: {\n          ref: focusElementRef,\n          tabIndex\n        }\n      }, others, baseSelectProps, {\n        children: [/*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"\",\n          children: apiRef.current.getLocaleText('filterValueAny')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"true\",\n          children: apiRef.current.getLocaleText('filterValueTrue')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"false\",\n          children: apiRef.current.getLocaleText('filterValueFalse')\n        }))]\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputBoolean.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: refType,\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (e.g. `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputBoolean };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"InputProps\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from '../../../hooks/utils/useTimeout';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputDate(props) {\n  var _item$value, _rootProps$slotProps;\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      InputProps,\n      clearButton,\n      tabIndex,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      applyValue(_extends({}, item, {\n        value\n      }));\n      setIsApplying(false);\n    });\n  }, [applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    var _item$value2;\n    const itemValue = (_item$value2 = item.value) != null ? _item$value2 : '';\n    setFilterValueState(String(itemValue));\n  }, [item.value]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    fullWidth: true,\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        max: type === 'datetime-local' ? '9999-12-31T23:59' : '9999-12-31',\n        tabIndex\n      }, InputProps == null ? void 0 : InputProps.inputProps)\n    })\n  }, other, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputDate.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (e.g. `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputDate };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\", \"getOptionLabel\", \"getOptionValue\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { isSingleSelectColDef } from './filterPanelUtils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst filter = createFilterOptions();\nfunction GridFilterInputMultipleSingleSelect(props) {\n  var _resolvedColumn, _resolvedColumn2;\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard',\n      getOptionLabel: getOptionLabelProp,\n      getOptionValue: getOptionValueProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const id = useId();\n  const rootProps = useGridRootProps();\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = getOptionValueProp || ((_resolvedColumn = resolvedColumn) == null ? void 0 : _resolvedColumn.getOptionValue);\n  const getOptionLabel = getOptionLabelProp || ((_resolvedColumn2 = resolvedColumn) == null ? void 0 : _resolvedColumn2.getOptionLabel);\n  const isOptionEqualToValue = React.useCallback((option, value) => getOptionValue(option) === getOptionValue(value), [getOptionValue]);\n  const resolvedValueOptions = React.useMemo(() => {\n    var _resolvedColumn3;\n    if (!((_resolvedColumn3 = resolvedColumn) != null && _resolvedColumn3.valueOptions)) {\n      return [];\n    }\n    if (typeof resolvedColumn.valueOptions === 'function') {\n      return resolvedColumn.valueOptions({\n        field: resolvedColumn.field\n      });\n    }\n    return resolvedColumn.valueOptions;\n  }, [resolvedColumn]);\n  const resolvedFormattedValueOptions = React.useMemo(() => {\n    return resolvedValueOptions == null ? void 0 : resolvedValueOptions.map(getOptionValue);\n  }, [resolvedValueOptions, getOptionValue]);\n\n  // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n  const filteredValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n    if (resolvedValueOptions !== undefined) {\n      const itemValueIndexes = item.value.map(element => {\n        // Gets the index matching between values and valueOptions\n        return resolvedFormattedValueOptions == null ? void 0 : resolvedFormattedValueOptions.findIndex(formattedOption => formattedOption === element);\n      });\n      return itemValueIndexes.filter(index => index >= 0).map(index => resolvedValueOptions[index]);\n    }\n    return item.value;\n  }, [item.value, resolvedValueOptions, resolvedFormattedValueOptions]);\n  React.useEffect(() => {\n    if (!Array.isArray(item.value) || filteredValues.length !== item.value.length) {\n      // Updates the state if the filter value has been cleaned by the component\n      applyValue(_extends({}, item, {\n        value: filteredValues.map(getOptionValue)\n      }));\n    }\n  }, [item, filteredValues, applyValue, getOptionValue]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: value.map(getOptionValue)\n    }));\n  }, [applyValue, item, getOptionValue]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    options: resolvedValueOptions,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filteredValues,\n    onChange: handleChange,\n    getOptionLabel: getOptionLabel,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: getOptionLabel(option)\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => {\n      var _rootProps$slotProps;\n      return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n        label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n        placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n        InputLabelProps: _extends({}, params.InputLabelProps, {\n          shrink: true\n        }),\n        inputRef: focusElementRef,\n        type: \"singleSelect\"\n      }, TextFieldProps, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseTextField));\n    }\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * Used to determine the label displayed for a given value option.\n   * @param {ValueOptions} value The current value option.\n   * @returns {string} The text to be displayed.\n   */\n  getOptionLabel: PropTypes.func,\n  /**\n   * Used to determine the value used for a value option.\n   * @param {ValueOptions} value The current value option.\n   * @returns {string} The value to be used.\n   */\n  getOptionValue: PropTypes.func,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputMultipleValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const [filterValueState, setFilterValueState] = React.useState(item.value || []);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  React.useEffect(() => {\n    var _item$value;\n    const itemValue = (_item$value = item.value) != null ? _item$value : [];\n    setFilterValueState(itemValue.map(String));\n  }, [item.value]);\n  const handleChange = React.useCallback((event, value) => {\n    setFilterValueState(value.map(String));\n    applyValue(_extends({}, item, {\n      value: [...value]\n    }));\n  }, [applyValue, item]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    freeSolo: true,\n    options: [],\n    filterOptions: (options, params) => {\n      const {\n        inputValue\n      } = params;\n      return inputValue == null || inputValue === '' ? [] : [inputValue];\n    },\n    id: id,\n    value: filterValueState,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: option\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => {\n      var _rootProps$slotProps;\n      return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n        label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n        placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n        InputLabelProps: _extends({}, params.InputLabelProps, {\n          shrink: true\n        }),\n        inputRef: focusElementRef,\n        type: type || 'text'\n      }, TextFieldProps, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseTextField));\n    }\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['number', 'text'])\n} : void 0;\nexport { GridFilterInputMultipleValue };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"getOptionLabel\", \"getOptionValue\", \"placeholder\", \"tabIndex\", \"label\", \"isFilterActive\", \"clearButton\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getValueFromValueOptions, isSingleSelectColDef } from './filterPanelUtils';\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst renderSingleSelectOptions = ({\n  column: {\n    valueOptions,\n    field\n  },\n  OptionComponent,\n  getOptionLabel,\n  getOptionValue,\n  isSelectNative,\n  baseSelectOptionProps\n}) => {\n  const iterableColumnValues = typeof valueOptions === 'function' ? ['', ...valueOptions({\n    field\n  })] : ['', ...(valueOptions || [])];\n  return iterableColumnValues.map(option => {\n    const value = getOptionValue(option);\n    const label = getOptionLabel(option);\n    return /*#__PURE__*/_createElement(OptionComponent, _extends({}, baseSelectOptionProps, {\n      native: isSelectNative,\n      key: value,\n      value: value\n    }), label);\n  });\n};\nconst SingleSelectOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'flex-end',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputSingleSelect(props) {\n  var _item$value, _rootProps$slotProps$, _rootProps$slotProps, _resolvedColumn, _resolvedColumn2, _rootProps$slotProps2, _rootProps$slotProps3, _rootProps$slotProps4;\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      getOptionLabel: getOptionLabelProp,\n      getOptionValue: getOptionValueProp,\n      placeholder,\n      tabIndex,\n      label: labelProp,\n      clearButton\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const id = useId();\n  const labelId = useId();\n  const rootProps = useGridRootProps();\n  const isSelectNative = (_rootProps$slotProps$ = (_rootProps$slotProps = rootProps.slotProps) == null || (_rootProps$slotProps = _rootProps$slotProps.baseSelect) == null ? void 0 : _rootProps$slotProps.native) != null ? _rootProps$slotProps$ : true;\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = getOptionValueProp || ((_resolvedColumn = resolvedColumn) == null ? void 0 : _resolvedColumn.getOptionValue);\n  const getOptionLabel = getOptionLabelProp || ((_resolvedColumn2 = resolvedColumn) == null ? void 0 : _resolvedColumn2.getOptionLabel);\n  const currentValueOptions = React.useMemo(() => {\n    if (!resolvedColumn) {\n      return undefined;\n    }\n    return typeof resolvedColumn.valueOptions === 'function' ? resolvedColumn.valueOptions({\n      field: resolvedColumn.field\n    }) : resolvedColumn.valueOptions;\n  }, [resolvedColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value;\n\n    // NativeSelect casts the value to a string.\n    value = getValueFromValueOptions(value, currentValueOptions, getOptionValue);\n    setFilterValueState(String(value));\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [currentValueOptions, getOptionValue, applyValue, item]);\n  React.useEffect(() => {\n    var _itemValue;\n    let itemValue;\n    if (currentValueOptions !== undefined) {\n      // sanitize if valueOptions are provided\n      itemValue = getValueFromValueOptions(item.value, currentValueOptions, getOptionValue);\n      if (itemValue !== item.value) {\n        applyValue(_extends({}, item, {\n          value: itemValue\n        }));\n        return;\n      }\n    } else {\n      itemValue = item.value;\n    }\n    itemValue = (_itemValue = itemValue) != null ? _itemValue : '';\n    setFilterValueState(String(itemValue));\n  }, [item, currentValueOptions, applyValue, getOptionValue]);\n  if (!isSingleSelectColDef(resolvedColumn)) {\n    return null;\n  }\n  if (!isSingleSelectColDef(resolvedColumn)) {\n    return null;\n  }\n  const label = labelProp != null ? labelProp : apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(SingleSelectOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseInputLabel, {\n        id: labelId,\n        htmlFor: id,\n        shrink: true,\n        variant: \"standard\",\n        children: label\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        id: id,\n        label: label,\n        labelId: labelId,\n        value: filterValueState,\n        onChange: onFilterChange,\n        variant: \"standard\",\n        type: type || 'text',\n        inputProps: {\n          tabIndex,\n          ref: focusElementRef,\n          placeholder: placeholder != null ? placeholder : apiRef.current.getLocaleText('filterPanelInputPlaceholder')\n        },\n        native: isSelectNative\n      }, others, (_rootProps$slotProps3 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps3.baseSelect, {\n        children: renderSingleSelectOptions({\n          column: resolvedColumn,\n          OptionComponent: rootProps.slots.baseSelectOption,\n          getOptionLabel,\n          getOptionValue,\n          isSelectNative,\n          baseSelectOptionProps: (_rootProps$slotProps4 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps4.baseSelectOption\n        })\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * Used to determine the label displayed for a given value option.\n   * @param {ValueOptions} value The current value option.\n   * @returns {string} The text to be displayed.\n   */\n  getOptionLabel: PropTypes.func,\n  /**\n   * Used to determine the value used for a value option.\n   * @param {ValueOptions} value The current value option.\n   * @returns {string} The value to be used.\n   */\n  getOptionValue: PropTypes.func,\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (e.g. `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"tabIndex\", \"disabled\", \"isFilterActive\", \"clearButton\", \"InputProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from '../../../hooks/utils/useTimeout';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputValue(props) {\n  var _item$value, _rootProps$slotProps;\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      tabIndex,\n      disabled,\n      clearButton,\n      InputProps\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const {\n      value\n    } = event.target;\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const newItem = _extends({}, item, {\n        value,\n        fromInput: id\n      });\n      applyValue(newItem);\n      setIsApplying(false);\n    });\n  }, [id, applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const itemPlusTag = item;\n    if (itemPlusTag.fromInput !== id || item.value === undefined) {\n      var _item$value2;\n      setFilterValueState(String((_item$value2 = item.value) != null ? _item$value2 : ''));\n    }\n  }, [id, item]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        tabIndex\n      }, InputProps == null ? void 0 : InputProps.inputProps)\n    }),\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, others, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (e.g. `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputValue };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"logicOperators\", \"columnsSort\", \"filterFormProps\", \"getColumnForNewFilter\", \"children\", \"disableAddFilterButton\", \"disableRemoveAllButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridLogicOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridPanelContent } from '../GridPanelContent';\nimport { GridPanelFooter } from '../GridPanelFooter';\nimport { GridPanelWrapper } from '../GridPanelWrapper';\nimport { GridFilterForm } from './GridFilterForm';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { gridFilterModelSelector } from '../../../hooks/features/filter/gridFilterSelector';\nimport { gridFilterableColumnDefinitionsSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getGridFilter = col => ({\n  field: col.field,\n  operator: col.filterOperators[0].value,\n  id: Math.round(Math.random() * 1e5)\n});\nconst GridFilterPanel = /*#__PURE__*/React.forwardRef(function GridFilterPanel(props, ref) {\n  var _rootProps$slotProps, _rootProps$slotProps2;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const lastFilterRef = React.useRef(null);\n  const placeholderFilter = React.useRef(null);\n  const {\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterFormProps,\n      getColumnForNewFilter,\n      disableAddFilterButton = false,\n      disableRemoveAllButton = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const applyFilter = apiRef.current.upsertFilterItem;\n  const applyFilterLogicOperator = React.useCallback(operator => {\n    apiRef.current.setFilterLogicOperator(operator);\n  }, [apiRef]);\n  const getDefaultFilter = React.useCallback(() => {\n    let nextColumnWithOperator;\n    if (getColumnForNewFilter && typeof getColumnForNewFilter === 'function') {\n      // To allow override the column for default (first) filter\n      const nextFieldName = getColumnForNewFilter({\n        currentFilters: (filterModel == null ? void 0 : filterModel.items) || [],\n        columns: filterableColumns\n      });\n      if (nextFieldName === null) {\n        return null;\n      }\n      nextColumnWithOperator = filterableColumns.find(({\n        field\n      }) => field === nextFieldName);\n    } else {\n      nextColumnWithOperator = filterableColumns.find(colDef => {\n        var _colDef$filterOperato;\n        return (_colDef$filterOperato = colDef.filterOperators) == null ? void 0 : _colDef$filterOperato.length;\n      });\n    }\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel == null ? void 0 : filterModel.items, filterableColumns, getColumnForNewFilter]);\n  const getNewFilter = React.useCallback(() => {\n    if (getColumnForNewFilter === undefined || typeof getColumnForNewFilter !== 'function') {\n      return getDefaultFilter();\n    }\n    const currentFilters = filterModel.items.length ? filterModel.items : [getDefaultFilter()].filter(Boolean);\n\n    // If no items are there in filterModel, we have to pass defaultFilter\n    const nextColumnFieldName = getColumnForNewFilter({\n      currentFilters: currentFilters,\n      columns: filterableColumns\n    });\n    if (nextColumnFieldName === null) {\n      return null;\n    }\n    const nextColumnWithOperator = filterableColumns.find(({\n      field\n    }) => field === nextColumnFieldName);\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel.items, filterableColumns, getColumnForNewFilter, getDefaultFilter]);\n  const items = React.useMemo(() => {\n    if (filterModel.items.length) {\n      return filterModel.items;\n    }\n    if (!placeholderFilter.current) {\n      placeholderFilter.current = getDefaultFilter();\n    }\n    return placeholderFilter.current ? [placeholderFilter.current] : [];\n  }, [filterModel.items, getDefaultFilter]);\n  const hasMultipleFilters = items.length > 1;\n  const addNewFilter = () => {\n    const newFilter = getNewFilter();\n    if (!newFilter) {\n      return;\n    }\n    apiRef.current.upsertFilterItems([...items, newFilter]);\n  };\n  const deleteFilter = React.useCallback(item => {\n    const shouldCloseFilterPanel = items.length === 1;\n    apiRef.current.deleteFilterItem(item);\n    if (shouldCloseFilterPanel) {\n      apiRef.current.hideFilterPanel();\n    }\n  }, [apiRef, items.length]);\n  const handleRemoveAll = () => {\n    if (items.length === 1 && items[0].value === undefined) {\n      apiRef.current.deleteFilterItem(items[0]);\n      apiRef.current.hideFilterPanel();\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: []\n    }));\n  };\n  React.useEffect(() => {\n    if (logicOperators.length > 0 && filterModel.logicOperator && !logicOperators.includes(filterModel.logicOperator)) {\n      applyFilterLogicOperator(logicOperators[0]);\n    }\n  }, [logicOperators, applyFilterLogicOperator, filterModel.logicOperator]);\n  React.useEffect(() => {\n    if (items.length > 0) {\n      lastFilterRef.current.focus();\n    }\n  }, [items.length]);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(GridPanelContent, {\n      children: items.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: index > 0,\n        multiFilterOperator: filterModel.logicOperator,\n        disableMultiFilterOperator: index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: index === items.length - 1 ? lastFilterRef : null,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index : item.id))\n    }), !rootProps.disableMultipleColumnsFiltering && !(disableAddFilterButton && disableRemoveAllButton) ? /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [!disableAddFilterButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: addNewFilter,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelAddIcon, {})\n      }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelAddFilter')\n      })) : /*#__PURE__*/_jsx(\"span\", {}), !disableRemoveAllButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: handleRemoveAll,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelRemoveAllIcon, {})\n      }, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelRemoveAll')\n      })) : null]\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * If `true`, the `Add filter` button will not be displayed.\n   * @default false\n   */\n  disableAddFilterButton: PropTypes.bool,\n  /**\n   * If `true`, the `Remove all` button will be disabled\n   * @default false\n   */\n  disableRemoveAllButton: PropTypes.bool,\n  /**\n   * Props passed to each filter form.\n   */\n  filterFormProps: PropTypes.shape({\n    columnInputProps: PropTypes.any,\n    columnsSort: PropTypes.oneOf(['asc', 'desc']),\n    deleteIconProps: PropTypes.any,\n    filterColumns: PropTypes.func,\n    logicOperatorInputProps: PropTypes.any,\n    operatorInputProps: PropTypes.any,\n    valueInputProps: PropTypes.any\n  }),\n  /**\n   * Function that returns the next filter item to be picked as default filter.\n   * @param {GetColumnForNewFilterArgs} args Currently configured filters and columns.\n   * @returns {GridColDef['field']} The field to be used for the next filter or `null` to prevent adding a filter.\n   */\n  getColumnForNewFilter: PropTypes.func,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterPanel API](https://mui.com/x/api/data-grid/grid-filter-panel/)\n */\nexport { GridFilterPanel, getGridFilter };","export function isSingleSelectColDef(colDef) {\n  return (colDef == null ? void 0 : colDef.type) === 'singleSelect';\n}\nexport function getValueFromValueOptions(value, valueOptions, getOptionValue) {\n  if (valueOptions === undefined) {\n    return undefined;\n  }\n  const result = valueOptions.find(option => {\n    const optionValue = getOptionValue(option);\n    return String(optionValue) === String(value);\n  });\n  return getOptionValue(result);\n}\nexport const getLabelFromValueOption = valueOption => {\n  const label = typeof valueOption === 'object' ? valueOption.label : valueOption;\n  return label != null ? String(label) : '';\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"options\"],\n  _excluded2 = [\"hideMenu\", \"options\"],\n  _excluded3 = [\"csvOptions\", \"printOptions\", \"excelOptions\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridToolbarExportContainer } from './GridToolbarExportContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridCsvExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsCsv(options);\n      hideMenu == null || hideMenu();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportCSV')\n  }));\n}\nexport function GridPrintExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsPrint(options);\n      hideMenu == null || hideMenu();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportPrint')\n  }));\n}\nconst GridToolbarExport = /*#__PURE__*/React.forwardRef(function GridToolbarExport(props, ref) {\n  const {\n      csvOptions = {},\n      printOptions = {},\n      excelOptions\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded3);\n  const apiRef = useGridApiContext();\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('exportMenu', [], {\n    excelOptions,\n    csvOptions,\n    printOptions\n  }).sort((a, b) => a.componentName > b.componentName ? 1 : -1);\n  if (preProcessedButtons.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridToolbarExportContainer, _extends({}, other, {\n    ref: ref,\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button.component, {\n      key: index\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExport.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  csvOptions: PropTypes.object,\n  printOptions: PropTypes.object\n} : void 0;\nexport { GridToolbarExport };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"onClick\"];\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport MenuList from '@mui/material/MenuList';\nimport { isHideMenuKey, isTabKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridToolbarExportContainer = /*#__PURE__*/React.forwardRef(function GridToolbarExportContainer(props, ref) {\n  var _rootProps$slotProps;\n  const {\n      children,\n      onClick\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const exportButtonId = useId();\n  const exportMenuId = useId();\n  const [open, setOpen] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const handleRef = useForkRef(ref, buttonRef);\n  const handleMenuOpen = event => {\n    setOpen(prevOpen => !prevOpen);\n    onClick == null || onClick(event);\n  };\n  const handleMenuClose = () => setOpen(false);\n  const handleListKeyDown = event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      handleMenuClose();\n    }\n  };\n  if (children == null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n      ref: handleRef,\n      size: \"small\",\n      startIcon: /*#__PURE__*/_jsx(rootProps.slots.exportIcon, {}),\n      \"aria-expanded\": open,\n      \"aria-label\": apiRef.current.getLocaleText('toolbarExportLabel'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-controls\": open ? exportMenuId : undefined,\n      id: exportButtonId\n    }, other, {\n      onClick: handleMenuOpen\n    }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseButton, {\n      children: apiRef.current.getLocaleText('toolbarExport')\n    })), /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      onClose: handleMenuClose,\n      position: \"bottom-start\",\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: exportMenuId,\n        className: gridClasses.menuList,\n        \"aria-labelledby\": exportButtonId,\n        onKeyDown: handleListKeyDown,\n        autoFocusItem: open,\n        children: React.Children.map(children, child => {\n          if (! /*#__PURE__*/React.isValidElement(child)) {\n            return child;\n          }\n          return /*#__PURE__*/React.cloneElement(child, {\n            hideMenu: handleMenuClose\n          });\n        })\n      })\n    })]\n  });\n});","// A guide to feature toggling (deprecated)\n//\n// The feature toggle is:\n// - independent from the NODE_ENV\n// - isn't pruning code in production, as the objective is to eventually ship the code.\n// - doesn't allow to cherry-pick which feature to enable\n//\n// By default, the experimental features are only enabled in:\n// - the local environment\n// - the pull request previews\n//\n// Reviewers can force the value with the local storage and the GRID_EXPERIMENTAL_ENABLED key:\n// - 'true' => force it to be enabled\n// - 'false' => force it to be disabled\n//\n// Developers (users) are discouraged to enable the experimental feature by setting the GRID_EXPERIMENTAL_ENABLED env.\n// Instead, prefer exposing experimental APIs, for instance, a prop or a new `unstable_` module.\n\nexport const GRID_EXPERIMENTAL_ENABLED = false;","import { unstable_generateUtilityClasses as generateUtilityClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nexport function getDataGridUtilityClass(slot) {\n  return generateUtilityClass('MuiDataGrid', slot);\n}\nexport const gridClasses = generateUtilityClasses('MuiDataGrid', ['actionsCell', 'aggregationColumnHeader', 'aggregationColumnHeader--alignLeft', 'aggregationColumnHeader--alignCenter', 'aggregationColumnHeader--alignRight', 'aggregationColumnHeaderLabel', 'autoHeight', 'autosizing', 'booleanCell', 'cell--editable', 'cell--editing', 'cell--textCenter', 'cell--textLeft', 'cell--textRight', 'cell--withRenderer', 'cell--rangeTop', 'cell--rangeBottom', 'cell--rangeLeft', 'cell--rangeRight', 'cell--selectionMode', 'cell', 'cellContent', 'cellCheckbox', 'cellSkeleton', 'checkboxInput', 'columnHeader--alignCenter', 'columnHeader--alignLeft', 'columnHeader--alignRight', 'columnHeader--dragging', 'columnHeader--moving', 'columnHeader--numeric', 'columnHeader--sortable', 'columnHeader--sorted', 'columnHeader--filtered', 'columnHeader', 'columnHeaderCheckbox', 'columnHeaderDraggableContainer', 'columnHeaderDropZone', 'columnHeaderTitle', 'columnHeaderTitleContainer', 'columnHeaderTitleContainerContent', 'columnGroupHeader', 'columnHeader--filledGroup', 'columnHeader--emptyGroup', 'columnHeader--showColumnBorder', 'columnHeaders', 'columnHeadersInner', 'columnHeadersInner--scrollable', 'columnSeparator--resizable', 'columnSeparator--resizing', 'columnSeparator--sideLeft', 'columnSeparator--sideRight', 'columnSeparator', 'columnsPanel', 'columnsPanelRow', 'detailPanel', 'detailPanels', 'detailPanelToggleCell', 'detailPanelToggleCell--expanded', 'footerCell', 'panel', 'panelHeader', 'panelWrapper', 'panelContent', 'panelFooter', 'paper', 'editBooleanCell', 'editInputCell', 'filterForm', 'filterFormDeleteIcon', 'filterFormLogicOperatorInput', 'filterFormColumnInput', 'filterFormOperatorInput', 'filterFormValueInput', 'filterIcon', 'footerContainer', 'headerFilterRow', 'iconButtonContainer', 'iconSeparator', 'main', 'menu', 'menuIcon', 'menuIconButton', 'menuOpen', 'menuList', 'overlay', 'overlayWrapper', 'overlayWrapperInner', 'root', 'root--densityStandard', 'root--densityComfortable', 'root--densityCompact', 'root--disableUserSelection', 'row', 'row--editable', 'row--editing', 'row--lastVisible', 'row--dragging', 'row--dynamicHeight', 'row--detailPanelExpanded', 'rowReorderCellPlaceholder', 'rowCount', 'rowReorderCellContainer', 'rowReorderCell', 'rowReorderCell--draggable', 'scrollArea--left', 'scrollArea--right', 'scrollArea', 'selectedRowCount', 'sortIcon', 'toolbarContainer', 'toolbarFilterList', 'virtualScroller', 'virtualScrollerContent', 'virtualScrollerContent--overflowed', 'virtualScrollerRenderZone', 'pinnedColumns', 'pinnedColumns--left', 'pinnedColumns--right', 'pinnedColumnHeaders', 'pinnedColumnHeaders--left', 'pinnedColumnHeaders--right', 'withBorderColor', 'cell--withRightBorder', 'columnHeader--withRightBorder', 'treeDataGroupingCell', 'treeDataGroupingCellToggle', 'groupingCriteriaCell', 'groupingCriteriaCellToggle', 'pinnedRows', 'pinnedRows--top', 'pinnedRows--bottom', 'pinnedRowsRenderZone']);","// Can't import from pro package - hence duplication\nexport const GRID_DETAIL_PANEL_TOGGLE_FIELD = '__detail_panel_toggle__';","export const GRID_DEFAULT_LOCALE_TEXT = {\n  // Root\n  noRowsLabel: 'No rows',\n  noResultsOverlayLabel: 'No results found.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Density',\n  toolbarDensityLabel: 'Density',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Comfortable',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Columns',\n  toolbarColumnsLabel: 'Select columns',\n  // Filters toolbar button text\n  toolbarFilters: 'Filters',\n  toolbarFiltersLabel: 'Show filters',\n  toolbarFiltersTooltipHide: 'Hide filters',\n  toolbarFiltersTooltipShow: 'Show filters',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Search…',\n  toolbarQuickFilterLabel: 'Search',\n  toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Download as CSV',\n  toolbarExportPrint: 'Print',\n  toolbarExportExcel: 'Download as Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Find column',\n  columnsPanelTextFieldPlaceholder: 'Column title',\n  columnsPanelDragIconLabel: 'Reorder column',\n  columnsPanelShowAllButton: 'Show all',\n  columnsPanelHideAllButton: 'Hide all',\n  // Filter panel text\n  filterPanelAddFilter: 'Add filter',\n  filterPanelRemoveAll: 'Remove all',\n  filterPanelDeleteIconLabel: 'Delete',\n  filterPanelLogicOperator: 'Logic operator',\n  filterPanelOperator: 'Operator',\n  filterPanelOperatorAnd: 'And',\n  filterPanelOperatorOr: 'Or',\n  filterPanelColumns: 'Columns',\n  filterPanelInputLabel: 'Value',\n  filterPanelInputPlaceholder: 'Filter value',\n  // Filter operators text\n  filterOperatorContains: 'contains',\n  filterOperatorEquals: 'equals',\n  filterOperatorStartsWith: 'starts with',\n  filterOperatorEndsWith: 'ends with',\n  filterOperatorIs: 'is',\n  filterOperatorNot: 'is not',\n  filterOperatorAfter: 'is after',\n  filterOperatorOnOrAfter: 'is on or after',\n  filterOperatorBefore: 'is before',\n  filterOperatorOnOrBefore: 'is on or before',\n  filterOperatorIsEmpty: 'is empty',\n  filterOperatorIsNotEmpty: 'is not empty',\n  filterOperatorIsAnyOf: 'is any of',\n  'filterOperator=': '=',\n  'filterOperator!=': '!=',\n  'filterOperator>': '>',\n  'filterOperator>=': '>=',\n  'filterOperator<': '<',\n  'filterOperator<=': '<=',\n  // Header filter operators text\n  headerFilterOperatorContains: 'Contains',\n  headerFilterOperatorEquals: 'Equals',\n  headerFilterOperatorStartsWith: 'Starts with',\n  headerFilterOperatorEndsWith: 'Ends with',\n  headerFilterOperatorIs: 'Is',\n  headerFilterOperatorNot: 'Is not',\n  headerFilterOperatorAfter: 'Is after',\n  headerFilterOperatorOnOrAfter: 'Is on or after',\n  headerFilterOperatorBefore: 'Is before',\n  headerFilterOperatorOnOrBefore: 'Is on or before',\n  headerFilterOperatorIsEmpty: 'Is empty',\n  headerFilterOperatorIsNotEmpty: 'Is not empty',\n  headerFilterOperatorIsAnyOf: 'Is any of',\n  'headerFilterOperator=': 'Equals',\n  'headerFilterOperator!=': 'Not equals',\n  'headerFilterOperator>': 'Greater than',\n  'headerFilterOperator>=': 'Greater than or equal to',\n  'headerFilterOperator<': 'Less than',\n  'headerFilterOperator<=': 'Less than or equal to',\n  // Filter values text\n  filterValueAny: 'any',\n  filterValueTrue: 'true',\n  filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Show columns',\n  columnMenuManageColumns: 'Manage columns',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Hide column',\n  columnMenuUnsort: 'Unsort',\n  columnMenuSortAsc: 'Sort by ASC',\n  columnMenuSortDesc: 'Sort by DESC',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  columnHeaderFiltersLabel: 'Show filters',\n  columnHeaderSortIconLabel: 'Sort',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rows selected` : `${count.toLocaleString()} row selected`,\n  // Total row amount footer text\n  footerTotalRows: 'Total Rows:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} of ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox selection',\n  checkboxSelectionSelectAllRows: 'Select all rows',\n  checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  checkboxSelectionSelectRow: 'Select row',\n  checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'yes',\n  booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'more',\n  // Column pinning text\n  pinToLeft: 'Pin to left',\n  pinToRight: 'Pin to right',\n  unpin: 'Unpin',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Group',\n  treeDataExpand: 'see children',\n  treeDataCollapse: 'hide children',\n  // Grouping columns\n  groupingColumnHeaderName: 'Group',\n  groupColumn: name => `Group by ${name}`,\n  unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Expand',\n  collapseDetailPanel: 'Collapse',\n  // Used core components translation keys\n  MuiTablePagination: {},\n  // Row reordering text\n  rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  aggregationMenuItemHeader: 'Aggregation',\n  aggregationFunctionLabelSum: 'sum',\n  aggregationFunctionLabelAvg: 'avg',\n  aggregationFunctionLabelMin: 'min',\n  aggregationFunctionLabelMax: 'max',\n  aggregationFunctionLabelSize: 'size'\n};","import * as React from 'react';\nimport { GridApiContext } from '../components/GridApiContext';\nimport { GridPrivateApiContext } from '../hooks/utils/useGridPrivateApiContext';\nimport { GridRootPropsContext } from './GridRootPropsContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridContextProvider({\n  privateApiRef,\n  props,\n  children\n}) {\n  const apiRef = React.useRef(privateApiRef.current.getPublicApi());\n  return /*#__PURE__*/_jsx(GridRootPropsContext.Provider, {\n    value: props,\n    children: /*#__PURE__*/_jsx(GridPrivateApiContext.Provider, {\n      value: privateApiRef,\n      children: /*#__PURE__*/_jsx(GridApiContext.Provider, {\n        value: apiRef,\n        children: children\n      })\n    })\n  });\n}","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\n/**\n * @category ColumnGrouping\n * @ignore - do not document.\n */\nexport const gridColumnGroupingSelector = state => state.columnGrouping;\nexport const gridColumnGroupsUnwrappedModelSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => {\n  var _columnGrouping$unwra;\n  return (_columnGrouping$unwra = columnGrouping == null ? void 0 : columnGrouping.unwrappedGroupingModel) != null ? _columnGrouping$unwra : {};\n});\nexport const gridColumnGroupsLookupSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => {\n  var _columnGrouping$looku;\n  return (_columnGrouping$looku = columnGrouping == null ? void 0 : columnGrouping.lookup) != null ? _columnGrouping$looku : {};\n});\nexport const gridColumnGroupsHeaderStructureSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => {\n  var _columnGrouping$heade;\n  return (_columnGrouping$heade = columnGrouping == null ? void 0 : columnGrouping.headerStructure) != null ? _columnGrouping$heade : [];\n});\nexport const gridColumnGroupsHeaderMaxDepthSelector = createSelector(gridColumnGroupingSelector, columnGrouping => {\n  var _columnGrouping$maxDe;\n  return (_columnGrouping$maxDe = columnGrouping == null ? void 0 : columnGrouping.maxDepth) != null ? _columnGrouping$maxDe : 0;\n});","export const gridColumnMenuSelector = state => state.columnMenu;","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\n/**\n * Get the columns state\n * @category Columns\n */\nexport const gridColumnsStateSelector = state => state.columns;\n\n/**\n * Get an array of column fields in the order rendered on screen.\n * @category Columns\n */\nexport const gridColumnFieldsSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.orderedFields);\n\n/**\n * Get the columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridColumnLookupSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.lookup);\n\n/**\n * Get an array of column definitions in the order rendered on screen..\n * @category Columns\n */\nexport const gridColumnDefinitionsSelector = createSelectorMemoized(gridColumnFieldsSelector, gridColumnLookupSelector, (allFields, lookup) => allFields.map(field => lookup[field]));\n\n/**\n * Get the column visibility model, containing the visibility status of each column.\n * If a column is not registered in the model, it is visible.\n * @category Visible Columns\n */\nexport const gridColumnVisibilityModelSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.columnVisibilityModel);\n\n/**\n * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Visible Columns\n */\nexport const gridVisibleColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector, (columns, columnVisibilityModel) => columns.filter(column => columnVisibilityModel[column.field] !== false));\n\n/**\n * Get the field of each visible column.\n * @category Visible Columns\n */\nexport const gridVisibleColumnFieldsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.map(column => column.field));\n\n/**\n * Get the left position in pixel of each visible columns relative to the left of the first column.\n * @category Visible Columns\n */\nexport const gridColumnPositionsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => {\n  const positions = [];\n  let currentPosition = 0;\n  for (let i = 0; i < visibleColumns.length; i += 1) {\n    positions.push(currentPosition);\n    currentPosition += visibleColumns[i].computedWidth;\n  }\n  return positions;\n});\n\n/**\n * Get the summed width of all the visible columns.\n * @category Visible Columns\n */\nexport const gridColumnsTotalWidthSelector = createSelector(gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n  if (colCount === 0) {\n    return 0;\n  }\n  return positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth;\n});\n\n/**\n * Get the filterable columns as an array.\n * @category Columns\n */\nexport const gridFilterableColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.filter(col => col.filterable));\n\n/**\n * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridFilterableColumnLookupSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.reduce((acc, col) => {\n  if (col.filterable) {\n    acc[col.field] = col;\n  }\n  return acc;\n}, {}));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { DEFAULT_GRID_COL_TYPE_KEY, GRID_STRING_COL_DEF } from '../../../colDef';\nimport { gridColumnsStateSelector, gridColumnVisibilityModelSelector } from './gridColumnsSelector';\nimport { clamp } from '../../../utils/utils';\nimport { gridDensityFactorSelector } from '../density/densitySelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../columnGrouping/gridColumnGroupsSelector';\nexport const COLUMNS_DIMENSION_PROPERTIES = ['maxWidth', 'minWidth', 'width', 'flex'];\n/**\n * Computes width for flex columns.\n * Based on CSS Flexbox specification:\n * https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n */\nexport function computeFlexColumnsWidth({\n  initialFreeSpace,\n  totalFlexUnits,\n  flexColumns\n}) {\n  const uniqueFlexColumns = new Set(flexColumns.map(col => col.field));\n  const flexColumnsLookup = {\n    all: {},\n    frozenFields: [],\n    freeze: field => {\n      const value = flexColumnsLookup.all[field];\n      if (value && value.frozen !== true) {\n        flexColumnsLookup.all[field].frozen = true;\n        flexColumnsLookup.frozenFields.push(field);\n      }\n    }\n  };\n\n  // Step 5 of https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n  function loopOverFlexItems() {\n    // 5a: If all the flex items on the line are frozen, free space has been distributed.\n    if (flexColumnsLookup.frozenFields.length === uniqueFlexColumns.size) {\n      return;\n    }\n    const violationsLookup = {\n      min: {},\n      max: {}\n    };\n    let remainingFreeSpace = initialFreeSpace;\n    let flexUnits = totalFlexUnits;\n    let totalViolation = 0;\n\n    // 5b: Calculate the remaining free space\n    flexColumnsLookup.frozenFields.forEach(field => {\n      remainingFreeSpace -= flexColumnsLookup.all[field].computedWidth;\n      flexUnits -= flexColumnsLookup.all[field].flex;\n    });\n    for (let i = 0; i < flexColumns.length; i += 1) {\n      const column = flexColumns[i];\n      if (flexColumnsLookup.all[column.field] && flexColumnsLookup.all[column.field].frozen === true) {\n        continue;\n      }\n\n      // 5c: Distribute remaining free space proportional to the flex factors\n      const widthPerFlexUnit = remainingFreeSpace / flexUnits;\n      let computedWidth = widthPerFlexUnit * column.flex;\n\n      // 5d: Fix min/max violations\n      if (computedWidth < column.minWidth) {\n        totalViolation += column.minWidth - computedWidth;\n        computedWidth = column.minWidth;\n        violationsLookup.min[column.field] = true;\n      } else if (computedWidth > column.maxWidth) {\n        totalViolation += column.maxWidth - computedWidth;\n        computedWidth = column.maxWidth;\n        violationsLookup.max[column.field] = true;\n      }\n      flexColumnsLookup.all[column.field] = {\n        frozen: false,\n        computedWidth,\n        flex: column.flex\n      };\n    }\n\n    // 5e: Freeze over-flexed items\n    if (totalViolation < 0) {\n      // Freeze all the items with max violations\n      Object.keys(violationsLookup.max).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else if (totalViolation > 0) {\n      // Freeze all the items with min violations\n      Object.keys(violationsLookup.min).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else {\n      // Freeze all items\n      flexColumns.forEach(({\n        field\n      }) => {\n        flexColumnsLookup.freeze(field);\n      });\n    }\n\n    // 5f: Return to the start of this loop\n    loopOverFlexItems();\n  }\n  loopOverFlexItems();\n  return flexColumnsLookup.all;\n}\n\n/**\n * Compute the `computedWidth` (ie: the width the column should have during rendering) based on the `width` / `flex` / `minWidth` / `maxWidth` properties of `GridColDef`.\n * The columns already have been merged with there `type` default values for `minWidth`, `maxWidth` and `width`, thus the `!` for those properties below.\n * TODO: Unit test this function in depth and only keep basic cases for the whole grid testing.\n * TODO: Improve the `GridColDef` typing to reflect the fact that `minWidth` / `maxWidth` and `width` can't be null after the merge with the `type` default values.\n */\nexport const hydrateColumnsWidth = (rawState, viewportInnerWidth) => {\n  const columnsLookup = {};\n  let totalFlexUnits = 0;\n  let widthAllocatedBeforeFlex = 0;\n  const flexColumns = [];\n\n  // For the non-flex columns, compute their width\n  // For the flex columns, compute there minimum width and how much width must be allocated during the flex allocation\n  rawState.orderedFields.forEach(columnField => {\n    const newColumn = _extends({}, rawState.lookup[columnField]);\n    if (rawState.columnVisibilityModel[columnField] === false) {\n      newColumn.computedWidth = 0;\n    } else {\n      let computedWidth;\n      if (newColumn.flex && newColumn.flex > 0) {\n        totalFlexUnits += newColumn.flex;\n        computedWidth = 0;\n        flexColumns.push(newColumn);\n      } else {\n        computedWidth = clamp(newColumn.width || GRID_STRING_COL_DEF.width, newColumn.minWidth || GRID_STRING_COL_DEF.minWidth, newColumn.maxWidth || GRID_STRING_COL_DEF.maxWidth);\n      }\n      widthAllocatedBeforeFlex += computedWidth;\n      newColumn.computedWidth = computedWidth;\n    }\n    columnsLookup[columnField] = newColumn;\n  });\n  const initialFreeSpace = Math.max(viewportInnerWidth - widthAllocatedBeforeFlex, 0);\n\n  // Allocate the remaining space to the flex columns\n  if (totalFlexUnits > 0 && viewportInnerWidth > 0) {\n    const computedColumnWidths = computeFlexColumnsWidth({\n      initialFreeSpace,\n      totalFlexUnits,\n      flexColumns\n    });\n    Object.keys(computedColumnWidths).forEach(field => {\n      columnsLookup[field].computedWidth = computedColumnWidths[field].computedWidth;\n    });\n  }\n  return _extends({}, rawState, {\n    lookup: columnsLookup\n  });\n};\n\n/**\n * Apply the order and the dimensions of the initial state.\n * The columns not registered in `orderedFields` will be placed after the imported columns.\n */\nexport const applyInitialState = (columnsState, initialState) => {\n  if (!initialState) {\n    return columnsState;\n  }\n  const {\n    orderedFields = [],\n    dimensions = {}\n  } = initialState;\n  const columnsWithUpdatedDimensions = Object.keys(dimensions);\n  if (columnsWithUpdatedDimensions.length === 0 && orderedFields.length === 0) {\n    return columnsState;\n  }\n  const orderedFieldsLookup = {};\n  const cleanOrderedFields = [];\n  for (let i = 0; i < orderedFields.length; i += 1) {\n    const field = orderedFields[i];\n\n    // Ignores the fields in the initialState that matches no field on the current column state\n    if (columnsState.lookup[field]) {\n      orderedFieldsLookup[field] = true;\n      cleanOrderedFields.push(field);\n    }\n  }\n  const newOrderedFields = cleanOrderedFields.length === 0 ? columnsState.orderedFields : [...cleanOrderedFields, ...columnsState.orderedFields.filter(field => !orderedFieldsLookup[field])];\n  const newColumnLookup = _extends({}, columnsState.lookup);\n  for (let i = 0; i < columnsWithUpdatedDimensions.length; i += 1) {\n    const field = columnsWithUpdatedDimensions[i];\n    const newColDef = _extends({}, newColumnLookup[field], {\n      hasBeenResized: true\n    });\n    Object.entries(dimensions[field]).forEach(([key, value]) => {\n      newColDef[key] = value === -1 ? Infinity : value;\n    });\n    newColumnLookup[field] = newColDef;\n  }\n  const newColumnsState = _extends({}, columnsState, {\n    orderedFields: newOrderedFields,\n    lookup: newColumnLookup\n  });\n  return newColumnsState;\n};\nfunction getDefaultColTypeDef(columnTypes, type) {\n  let colDef = columnTypes[DEFAULT_GRID_COL_TYPE_KEY];\n  if (type && columnTypes[type]) {\n    colDef = columnTypes[type];\n  }\n  return colDef;\n}\nexport const createColumnsState = ({\n  apiRef,\n  columnsToUpsert,\n  initialState,\n  columnTypes,\n  columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef),\n  keepOnlyColumnsToUpsert = false\n}) => {\n  var _apiRef$current$getRo, _apiRef$current$getRo2, _apiRef$current;\n  const isInsideStateInitializer = !apiRef.current.state.columns;\n  let columnsState;\n  if (isInsideStateInitializer) {\n    columnsState = {\n      orderedFields: [],\n      lookup: {},\n      columnVisibilityModel\n    };\n  } else {\n    const currentState = gridColumnsStateSelector(apiRef.current.state);\n    columnsState = {\n      orderedFields: keepOnlyColumnsToUpsert ? [] : [...currentState.orderedFields],\n      lookup: _extends({}, currentState.lookup),\n      // Will be cleaned later if keepOnlyColumnsToUpsert=true\n      columnVisibilityModel\n    };\n  }\n  let columnsToKeep = {};\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    columnsToKeep = Object.keys(columnsState.lookup).reduce((acc, key) => _extends({}, acc, {\n      [key]: false\n    }), {});\n  }\n  const columnsToUpsertLookup = {};\n  columnsToUpsert.forEach(newColumn => {\n    const {\n      field\n    } = newColumn;\n    columnsToUpsertLookup[field] = true;\n    columnsToKeep[field] = true;\n    let existingState = columnsState.lookup[field];\n    if (existingState == null) {\n      existingState = _extends({}, getDefaultColTypeDef(columnTypes, newColumn.type), {\n        field,\n        hasBeenResized: false\n      });\n      columnsState.orderedFields.push(field);\n    } else if (keepOnlyColumnsToUpsert) {\n      columnsState.orderedFields.push(field);\n    }\n\n    // If the column type has changed - merge the existing state with the default column type definition\n    if (existingState && existingState.type !== newColumn.type) {\n      existingState = _extends({}, getDefaultColTypeDef(columnTypes, newColumn.type), {\n        field\n      });\n    }\n    let hasBeenResized = existingState.hasBeenResized;\n    COLUMNS_DIMENSION_PROPERTIES.forEach(key => {\n      if (newColumn[key] !== undefined) {\n        hasBeenResized = true;\n        if (newColumn[key] === -1) {\n          newColumn[key] = Infinity;\n        }\n      }\n    });\n    columnsState.lookup[field] = _extends({}, existingState, newColumn, {\n      hasBeenResized\n    });\n  });\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    Object.keys(columnsState.lookup).forEach(field => {\n      if (!columnsToKeep[field]) {\n        delete columnsState.lookup[field];\n      }\n    });\n  }\n  const columnsStateWithPreProcessing = apiRef.current.unstable_applyPipeProcessors('hydrateColumns', columnsState);\n  const columnsStateWithPortableColumns = applyInitialState(columnsStateWithPreProcessing, initialState);\n  return hydrateColumnsWidth(columnsStateWithPortableColumns, (_apiRef$current$getRo = (_apiRef$current$getRo2 = (_apiRef$current = apiRef.current).getRootDimensions) == null || (_apiRef$current$getRo2 = _apiRef$current$getRo2.call(_apiRef$current)) == null ? void 0 : _apiRef$current$getRo2.viewportInnerSize.width) != null ? _apiRef$current$getRo : 0);\n};\nexport const mergeColumnsState = columnsState => state => _extends({}, state, {\n  columns: columnsState\n});\nexport function getFirstNonSpannedColumnToRender({\n  firstColumnToRender,\n  apiRef,\n  firstRowToRender,\n  lastRowToRender,\n  visibleRows\n}) {\n  let firstNonSpannedColumnToRender = firstColumnToRender;\n  for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n    const row = visibleRows[i];\n    if (row) {\n      const rowId = visibleRows[i].id;\n      const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, firstColumnToRender);\n      if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n        firstNonSpannedColumnToRender = cellColSpanInfo.leftVisibleCellIndex;\n      }\n    }\n  }\n  return firstNonSpannedColumnToRender;\n}\nexport function getFirstColumnIndexToRender({\n  firstColumnIndex,\n  minColumnIndex,\n  columnBuffer,\n  firstRowToRender,\n  lastRowToRender,\n  apiRef,\n  visibleRows\n}) {\n  const initialFirstColumnToRender = Math.max(firstColumnIndex - columnBuffer, minColumnIndex);\n  const firstColumnToRender = getFirstNonSpannedColumnToRender({\n    firstColumnToRender: initialFirstColumnToRender,\n    apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows\n  });\n  return firstColumnToRender;\n}\nexport function getTotalHeaderHeight(apiRef, headerHeight) {\n  const densityFactor = gridDensityFactorSelector(apiRef);\n  const maxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n  return Math.floor(headerHeight * densityFactor) * ((maxDepth != null ? maxDepth : 0) + 1);\n}","import { createSelector } from '../../../utils/createSelector';\nexport const gridDensitySelector = state => state.density;\nexport const gridDensityValueSelector = createSelector(gridDensitySelector, density => density.value);\nexport const gridDensityFactorSelector = createSelector(gridDensitySelector, density => density.factor);","// TODO v6: rename to gridEditingStateSelector\nexport const gridEditRowsStateSelector = state => state.editRows;","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridSortedRowEntriesSelector } from '../sorting/gridSortingSelector';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\n\n/**\n * @category Filtering\n */\nconst gridFilterStateSelector = state => state.filter;\n\n/**\n * Get the current filter model.\n * @category Filtering\n */\nexport const gridFilterModelSelector = createSelector(gridFilterStateSelector, filterState => filterState.filterModel);\n\n/**\n * Get the current quick filter values.\n * @category Filtering\n */\nexport const gridQuickFilterValuesSelector = createSelector(gridFilterModelSelector, filterModel => filterModel.quickFilterValues);\n\n/**\n * @category Visible rows\n * @ignore - do not document.\n */\nexport const gridVisibleRowsLookupSelector = state => state.visibleRowsLookup;\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredRowsLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredDescendantCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredDescendantCountLookup);\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowEntriesSelector = createSelectorMemoized(gridVisibleRowsLookupSelector, gridSortedRowEntriesSelector, (visibleRowsLookup, sortedRows) => sortedRows.filter(row => visibleRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, visibleSortedRowEntries => visibleSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowEntriesSelector = createSelectorMemoized(gridFilteredRowsLookupSelector, gridSortedRowEntriesSelector, (filteredRowsLookup, sortedRows) => sortedRows.filter(row => filteredRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowIdsSelector = createSelectorMemoized(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredSortedTopLevelRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, (visibleSortedRows, rowTree, rowTreeDepth) => {\n  if (rowTreeDepth < 2) {\n    return visibleSortedRows;\n  }\n  return visibleSortedRows.filter(row => {\n    var _rowTree$row$id;\n    return ((_rowTree$row$id = rowTree[row.id]) == null ? void 0 : _rowTree$row$id.depth) === 0;\n  });\n});\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridExpandedRowCountSelector = createSelector(gridExpandedSortedRowEntriesSelector, visibleSortedRows => visibleSortedRows.length);\n\n/**\n * Get the amount of top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredTopLevelRowCountSelector = createSelector(gridFilteredSortedTopLevelRowEntriesSelector, visibleSortedTopLevelRows => visibleSortedTopLevelRows.length);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsSelector = createSelectorMemoized(gridFilterModelSelector, gridColumnLookupSelector, (filterModel, columnLookup) => {\n  var _filterModel$items;\n  return (_filterModel$items = filterModel.items) == null ? void 0 : _filterModel$items.filter(item => {\n    var _column$filterOperato, _item$value;\n    if (!item.field) {\n      return false;\n    }\n    const column = columnLookup[item.field];\n    if (!(column != null && column.filterOperators) || (column == null || (_column$filterOperato = column.filterOperators) == null ? void 0 : _column$filterOperato.length) === 0) {\n      return false;\n    }\n    const filterOperator = column.filterOperators.find(operator => operator.value === item.operator);\n    if (!filterOperator) {\n      return false;\n    }\n    return !filterOperator.InputComponent || item.value != null && ((_item$value = item.value) == null ? void 0 : _item$value.toString()) !== '';\n  });\n});\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsLookupSelector = createSelectorMemoized(gridFilterActiveItemsSelector, activeFilters => {\n  const result = activeFilters.reduce((res, filterItem) => {\n    if (!res[filterItem.field]) {\n      res[filterItem.field] = [filterItem];\n    } else {\n      res[filterItem.field].push(filterItem);\n    }\n    return res;\n  }, {});\n  return result;\n});","import { GridLogicOperator } from '../../../models/gridFilterItem';\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  logicOperator: GridLogicOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLogicOperator.And\n});\n\n/**\n * @param {GridRowId} rowId The id of the row we want to filter.\n * @param {(filterItem: GridFilterItem) => boolean} shouldApplyItem An optional callback to allow the filtering engine to only apply some items.\n */\n\n/**\n * Visibility status for each row.\n * A row is visible if it is passing the filters AND if its parents are expanded.\n * If a row is not registered in this lookup, it is visible.\n */","export function getPublicApiRef(apiRef) {\n  return {\n    current: apiRef.current.getPublicApi()\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridLogicOperator } from '../../../models';\nimport { GLOBAL_API_REF, isInternalFilter } from '../../../colDef/utils';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { buildWarning } from '../../../utils/warning';\nimport { getPublicApiRef } from '../../../utils/getPublicApiRef';\nimport { gridColumnFieldsSelector, gridColumnLookupSelector, gridVisibleColumnFieldsSelector } from '../columns';\nlet hasEval;\nfunction getHasEval() {\n  if (hasEval !== undefined) {\n    return hasEval;\n  }\n  try {\n    hasEval = new Function('return true')();\n  } catch (_) {\n    hasEval = false;\n  }\n  return hasEval;\n}\n/**\n * Adds default values to the optional fields of a filter items.\n * @param {GridFilterItem} item The raw filter item.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @return {GridFilterItem} The clean filter item with an uniq ID and an always-defined operator.\n * TODO: Make the typing reflect the different between GridFilterInputItem and GridFilterItem.\n */\nexport const cleanFilterItem = (item, apiRef) => {\n  const cleanItem = _extends({}, item);\n  if (cleanItem.id == null) {\n    cleanItem.id = Math.round(Math.random() * 1e5);\n  }\n  if (cleanItem.operator == null) {\n    // Selects a default operator\n    // We don't use `apiRef.current.getColumn` because it is not ready during state initialization\n    const column = gridColumnLookupSelector(apiRef)[cleanItem.field];\n    cleanItem.operator = column && column.filterOperators[0].value;\n  }\n  return cleanItem;\n};\nconst filterModelDisableMultiColumnsFilteringWarning = buildWarning(['MUI: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nconst filterModelMissingItemIdWarning = buildWarning('MUI: The `id` field is required on `filterModel.items` when you use multiple filters.', 'error');\nconst filterModelMissingItemOperatorWarning = buildWarning('MUI: The `operator` field is required on `filterModel.items`, one or more of your filtering item has no `operator` provided.', 'error');\nexport const sanitizeFilterModel = (model, disableMultipleColumnsFiltering, apiRef) => {\n  const hasSeveralItems = model.items.length > 1;\n  let items;\n  if (hasSeveralItems && disableMultipleColumnsFiltering) {\n    filterModelDisableMultiColumnsFilteringWarning();\n    items = [model.items[0]];\n  } else {\n    items = model.items;\n  }\n  const hasItemsWithoutIds = hasSeveralItems && items.some(item => item.id == null);\n  const hasItemWithoutOperator = items.some(item => item.operator == null);\n  if (hasItemsWithoutIds) {\n    filterModelMissingItemIdWarning();\n  }\n  if (hasItemWithoutOperator) {\n    filterModelMissingItemOperatorWarning();\n  }\n  if (hasItemWithoutOperator || hasItemsWithoutIds) {\n    return _extends({}, model, {\n      items: items.map(item => cleanFilterItem(item, apiRef))\n    });\n  }\n  if (model.items !== items) {\n    return _extends({}, model, {\n      items\n    });\n  }\n  return model;\n};\nexport const mergeStateWithFilterModel = (filterModel, disableMultipleColumnsFiltering, apiRef) => filteringState => _extends({}, filteringState, {\n  filterModel: sanitizeFilterModel(filterModel, disableMultipleColumnsFiltering, apiRef)\n});\nexport const removeDiacritics = value => {\n  if (typeof value === 'string') {\n    return value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n  }\n  return value;\n};\nconst getFilterCallbackFromItem = (filterItem, apiRef) => {\n  if (!filterItem.field || !filterItem.operator) {\n    return null;\n  }\n  const column = apiRef.current.getColumn(filterItem.field);\n  if (!column) {\n    return null;\n  }\n  let parsedValue;\n  if (column.valueParser) {\n    var _filterItem$value;\n    const parser = column.valueParser;\n    parsedValue = Array.isArray(filterItem.value) ? (_filterItem$value = filterItem.value) == null ? void 0 : _filterItem$value.map(x => parser(x)) : parser(filterItem.value);\n  } else {\n    parsedValue = filterItem.value;\n  }\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  if (ignoreDiacritics) {\n    parsedValue = removeDiacritics(parsedValue);\n  }\n  const newFilterItem = _extends({}, filterItem, {\n    value: parsedValue\n  });\n  const filterOperators = column.filterOperators;\n  if (!(filterOperators != null && filterOperators.length)) {\n    throw new Error(`MUI: No filter operators found for column '${column.field}'.`);\n  }\n  const filterOperator = filterOperators.find(operator => operator.value === newFilterItem.operator);\n  if (!filterOperator) {\n    throw new Error(`MUI: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operator}'.`);\n  }\n  const hasUserFunctionLegacy = !isInternalFilter(filterOperator.getApplyFilterFn);\n  const hasUserFunctionV7 = !isInternalFilter(filterOperator.getApplyFilterFnV7);\n  const publicApiRef = getPublicApiRef(apiRef);\n  if (filterOperator.getApplyFilterFnV7 && !(hasUserFunctionLegacy && !hasUserFunctionV7)) {\n    const applyFilterOnRow = filterOperator.getApplyFilterFnV7(newFilterItem, column);\n    if (typeof applyFilterOnRow !== 'function') {\n      return null;\n    }\n    return {\n      v7: true,\n      item: newFilterItem,\n      fn: row => {\n        let value = apiRef.current.getRowValue(row, column);\n        if (ignoreDiacritics) {\n          value = removeDiacritics(value);\n        }\n        return applyFilterOnRow(value, row, column, publicApiRef);\n      }\n    };\n  }\n  const applyFilterOnRow = filterOperator.getApplyFilterFn(newFilterItem, column);\n  if (typeof applyFilterOnRow !== 'function') {\n    return null;\n  }\n  return {\n    v7: false,\n    item: newFilterItem,\n    fn: rowId => {\n      const params = apiRef.current.getCellParams(rowId, newFilterItem.field);\n      GLOBAL_API_REF.current = publicApiRef;\n      if (ignoreDiacritics) {\n        params.value = removeDiacritics(params.value);\n      }\n      const result = applyFilterOnRow(params);\n      GLOBAL_API_REF.current = null;\n      return result;\n    }\n  };\n};\nlet filterItemsApplierId = 1;\n\n/**\n * Generates a method to easily check if a row is matching the current filter model.\n * @param {GridFilterModel} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedFilterItemsApplier = (filterModel, apiRef, disableEval) => {\n  const {\n    items\n  } = filterModel;\n  const appliers = items.map(item => getFilterCallbackFromItem(item, apiRef)).filter(callback => !!callback);\n  if (appliers.length === 0) {\n    return null;\n  }\n  if (disableEval || !getHasEval()) {\n    // This is the original logic, which is used if `eval()` is not supported (aka prevented by CSP).\n    return (row, shouldApplyFilter) => {\n      const resultPerItemId = {};\n      for (let i = 0; i < appliers.length; i += 1) {\n        const applier = appliers[i];\n        if (!shouldApplyFilter || shouldApplyFilter(applier.item.field)) {\n          resultPerItemId[applier.item.id] = applier.v7 ? applier.fn(row) : applier.fn(apiRef.current.getRowId(row));\n        }\n      }\n      return resultPerItemId;\n    };\n  }\n\n  // We generate a new function with `new Function()` to avoid expensive patterns for JS engines\n  // such as a dynamic object assignment, e.g. `{ [dynamicKey]: value }`.\n  const filterItemCore = new Function('getRowId', 'appliers', 'row', 'shouldApplyFilter', `\"use strict\";\n${appliers.map((applier, i) => `const shouldApply${i} = !shouldApplyFilter || shouldApplyFilter(${JSON.stringify(applier.item.field)});`).join('\\n')}\n\nconst result$$ = {\n${appliers.map((applier, i) => `  ${JSON.stringify(String(applier.item.id))}: !shouldApply${i}\n    ? false\n    : ${applier.v7 ? `appliers[${i}].fn(row)` : `appliers[${i}].fn(getRowId(row))`},`).join('\\n')}\n};\n\nreturn result$$;`.replaceAll('$$', String(filterItemsApplierId)));\n  filterItemsApplierId += 1;\n\n  // Assign to the arrow function a name to help debugging\n  const filterItem = (row, shouldApplyItem) => filterItemCore(apiRef.current.getRowId, appliers, row, shouldApplyItem);\n  return filterItem;\n};\n\n/**\n * Generates a method to easily check if a row is matching the current quick filter.\n * @param {any[]} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedQuickFilterApplier = (filterModel, apiRef) => {\n  var _filterModel$quickFil, _filterModel$quickFil2, _filterModel$quickFil3;\n  const quickFilterValues = (_filterModel$quickFil = (_filterModel$quickFil2 = filterModel.quickFilterValues) == null ? void 0 : _filterModel$quickFil2.filter(Boolean)) != null ? _filterModel$quickFil : [];\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n  const quickFilterExcludeHiddenColumns = (_filterModel$quickFil3 = filterModel.quickFilterExcludeHiddenColumns) != null ? _filterModel$quickFil3 : false;\n  const columnFields = quickFilterExcludeHiddenColumns ? gridVisibleColumnFieldsSelector(apiRef) : gridColumnFieldsSelector(apiRef);\n  const appliersPerField = [];\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  const publicApiRef = getPublicApiRef(apiRef);\n  columnFields.forEach(field => {\n    const column = apiRef.current.getColumn(field);\n    const getApplyQuickFilterFn = column == null ? void 0 : column.getApplyQuickFilterFn;\n    const getApplyQuickFilterFnV7 = column == null ? void 0 : column.getApplyQuickFilterFnV7;\n    const hasUserFunctionLegacy = !isInternalFilter(getApplyQuickFilterFn);\n    const hasUserFunctionV7 = !isInternalFilter(getApplyQuickFilterFnV7);\n    if (getApplyQuickFilterFnV7 && !(hasUserFunctionLegacy && !hasUserFunctionV7)) {\n      appliersPerField.push({\n        column,\n        appliers: quickFilterValues.map(quickFilterValue => {\n          const value = ignoreDiacritics ? removeDiacritics(quickFilterValue) : quickFilterValue;\n          return {\n            v7: true,\n            fn: getApplyQuickFilterFnV7(value, column, publicApiRef)\n          };\n        })\n      });\n    } else if (getApplyQuickFilterFn) {\n      appliersPerField.push({\n        column,\n        appliers: quickFilterValues.map(quickFilterValue => {\n          const value = ignoreDiacritics ? removeDiacritics(quickFilterValue) : quickFilterValue;\n          return {\n            v7: false,\n            fn: getApplyQuickFilterFn(value, column, publicApiRef)\n          };\n        })\n      });\n    }\n  });\n  return function isRowMatchingQuickFilter(row, shouldApplyFilter) {\n    const result = {};\n    const usedCellParams = {};\n\n    /* eslint-disable no-restricted-syntax, no-labels */\n    outer: for (let v = 0; v < quickFilterValues.length; v += 1) {\n      const filterValue = quickFilterValues[v];\n      for (let i = 0; i < appliersPerField.length; i += 1) {\n        const {\n          column,\n          appliers\n        } = appliersPerField[i];\n        const {\n          field\n        } = column;\n        if (shouldApplyFilter && !shouldApplyFilter(field)) {\n          continue;\n        }\n        const applier = appliers[v];\n        let value = apiRef.current.getRowValue(row, column);\n        if (applier.fn === null) {\n          continue;\n        }\n        if (applier.v7) {\n          if (ignoreDiacritics) {\n            value = removeDiacritics(value);\n          }\n          const isMatching = applier.fn(value, row, column, publicApiRef);\n          if (isMatching) {\n            result[filterValue] = true;\n            continue outer;\n          }\n        } else {\n          var _usedCellParams$field;\n          const cellParams = (_usedCellParams$field = usedCellParams[field]) != null ? _usedCellParams$field : apiRef.current.getCellParams(apiRef.current.getRowId(row), field);\n          if (ignoreDiacritics) {\n            cellParams.value = removeDiacritics(cellParams.value);\n          }\n          usedCellParams[field] = cellParams;\n          const isMatching = applier.fn(cellParams);\n          if (isMatching) {\n            result[filterValue] = true;\n            continue outer;\n          }\n        }\n      }\n      result[filterValue] = false;\n    }\n    /* eslint-enable no-restricted-syntax, no-labels */\n\n    return result;\n  };\n};\nexport const buildAggregatedFilterApplier = (filterModel, apiRef, disableEval) => {\n  const isRowMatchingFilterItems = buildAggregatedFilterItemsApplier(filterModel, apiRef, disableEval);\n  const isRowMatchingQuickFilter = buildAggregatedQuickFilterApplier(filterModel, apiRef);\n  return function isRowMatchingFilters(row, shouldApplyFilter, result) {\n    var _isRowMatchingFilterI, _isRowMatchingQuickFi;\n    result.passingFilterItems = (_isRowMatchingFilterI = isRowMatchingFilterItems == null ? void 0 : isRowMatchingFilterItems(row, shouldApplyFilter)) != null ? _isRowMatchingFilterI : null;\n    result.passingQuickFilterValues = (_isRowMatchingQuickFi = isRowMatchingQuickFilter == null ? void 0 : isRowMatchingQuickFilter(row, shouldApplyFilter)) != null ? _isRowMatchingQuickFi : null;\n  };\n};\nconst isNotNull = result => result != null;\nconst filterModelItems = (cache, apiRef, items) => {\n  if (!cache.cleanedFilterItems) {\n    cache.cleanedFilterItems = items.filter(item => getFilterCallbackFromItem(item, apiRef) !== null);\n  }\n  return cache.cleanedFilterItems;\n};\nexport const passFilterLogic = (allFilterItemResults, allQuickFilterResults, filterModel, apiRef, cache) => {\n  const cleanedFilterItems = filterModelItems(cache, apiRef, filterModel.items);\n  const cleanedFilterItemResults = allFilterItemResults.filter(isNotNull);\n  const cleanedQuickFilterResults = allQuickFilterResults.filter(isNotNull);\n\n  // get result for filter items model\n  if (cleanedFilterItemResults.length > 0) {\n    var _filterModel$logicOpe;\n    // Return true if the item pass with one of the rows\n    const filterItemPredicate = item => {\n      return cleanedFilterItemResults.some(filterItemResult => filterItemResult[item.id]);\n    };\n    const logicOperator = (_filterModel$logicOpe = filterModel.logicOperator) != null ? _filterModel$logicOpe : getDefaultGridFilterModel().logicOperator;\n    if (logicOperator === GridLogicOperator.And) {\n      const passesAllFilters = cleanedFilterItems.every(filterItemPredicate);\n      if (!passesAllFilters) {\n        return false;\n      }\n    } else {\n      const passesSomeFilters = cleanedFilterItems.some(filterItemPredicate);\n      if (!passesSomeFilters) {\n        return false;\n      }\n    }\n  }\n\n  // get result for quick filter model\n  if (cleanedQuickFilterResults.length > 0 && filterModel.quickFilterValues != null) {\n    var _filterModel$quickFil4;\n    // Return true if the item pass with one of the rows\n    const quickFilterValuePredicate = value => {\n      return cleanedQuickFilterResults.some(quickFilterValueResult => quickFilterValueResult[value]);\n    };\n    const quickFilterLogicOperator = (_filterModel$quickFil4 = filterModel.quickFilterLogicOperator) != null ? _filterModel$quickFil4 : getDefaultGridFilterModel().quickFilterLogicOperator;\n    if (quickFilterLogicOperator === GridLogicOperator.And) {\n      const passesAllQuickFilterValues = filterModel.quickFilterValues.every(quickFilterValuePredicate);\n      if (!passesAllQuickFilterValues) {\n        return false;\n      }\n    } else {\n      const passesSomeQuickFilterValues = filterModel.quickFilterValues.some(quickFilterValuePredicate);\n      if (!passesSomeQuickFilterValues) {\n        return false;\n      }\n    }\n  }\n  return true;\n};","import { createSelector } from '../../../utils/createSelector';\nexport const gridFocusStateSelector = state => state.focus;\nexport const gridFocusCellSelector = createSelector(gridFocusStateSelector, focusState => focusState.cell);\nexport const gridFocusColumnHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeader);\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_gridFocusColumnHeaderFilterSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeaderFilter);\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_gridFocusColumnGroupHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnGroupHeader);\nexport const gridTabIndexStateSelector = state => state.tabIndex;\nexport const gridTabIndexCellSelector = createSelector(gridTabIndexStateSelector, state => state.cell);\nexport const gridTabIndexColumnHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeader);\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_gridTabIndexColumnHeaderFilterSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeaderFilter);\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_gridTabIndexColumnGroupHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnGroupHeader);","/* eslint-disable @typescript-eslint/naming-convention */\nimport { createSelector } from '../../../utils/createSelector';\nexport const unstable_gridHeaderFilteringStateSelector = state => state.headerFiltering;\nexport const unstable_gridHeaderFilteringEditFieldSelector = createSelector(unstable_gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.editing);\nexport const unstable_gridHeaderFilteringMenuSelector = createSelector(unstable_gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.menuOpen);","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridFilteredTopLevelRowCountSelector, gridExpandedSortedRowEntriesSelector, gridExpandedSortedRowIdsSelector, gridFilteredSortedTopLevelRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\nimport { getPageCount } from './gridPaginationUtils';\n\n/**\n * @category Pagination\n * @ignore - do not document.\n */\nexport const gridPaginationSelector = state => state.pagination;\n\n/**\n * Get the pagination model\n * @category Pagination\n */\nexport const gridPaginationModelSelector = createSelector(gridPaginationSelector, pagination => pagination.paginationModel);\n\n/**\n * Get the index of the page to render if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.page);\n\n/**\n * Get the maximum amount of rows to display on a single page if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSizeSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.pageSize);\n\n/**\n * Get the amount of pages needed to display all the rows if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageCountSelector = createSelector(gridPaginationModelSelector, gridFilteredTopLevelRowCountSelector, (paginationModel, visibleTopLevelRowCount) => getPageCount(visibleTopLevelRowCount, paginationModel.pageSize));\n\n/**\n * Get the index of the first and the last row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginationRowRangeSelector = createSelectorMemoized(gridPaginationModelSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, gridExpandedSortedRowEntriesSelector, gridFilteredSortedTopLevelRowEntriesSelector, (paginationModel, rowTree, rowTreeDepth, visibleSortedRowEntries, visibleSortedTopLevelRowEntries) => {\n  const visibleTopLevelRowCount = visibleSortedTopLevelRowEntries.length;\n  const topLevelFirstRowIndex = Math.min(paginationModel.pageSize * paginationModel.page, visibleTopLevelRowCount - 1);\n  const topLevelLastRowIndex = Math.min(topLevelFirstRowIndex + paginationModel.pageSize - 1, visibleTopLevelRowCount - 1);\n\n  // The range contains no element\n  if (topLevelFirstRowIndex === -1 || topLevelLastRowIndex === -1) {\n    return null;\n  }\n\n  // The tree is flat, there is no need to look for children\n  if (rowTreeDepth < 2) {\n    return {\n      firstRowIndex: topLevelFirstRowIndex,\n      lastRowIndex: topLevelLastRowIndex\n    };\n  }\n  const topLevelFirstRow = visibleSortedTopLevelRowEntries[topLevelFirstRowIndex];\n  const topLevelRowsInCurrentPageCount = topLevelLastRowIndex - topLevelFirstRowIndex + 1;\n  const firstRowIndex = visibleSortedRowEntries.findIndex(row => row.id === topLevelFirstRow.id);\n  let lastRowIndex = firstRowIndex;\n  let topLevelRowAdded = 0;\n  while (lastRowIndex < visibleSortedRowEntries.length && topLevelRowAdded <= topLevelRowsInCurrentPageCount) {\n    var _rowTree$row$id;\n    const row = visibleSortedRowEntries[lastRowIndex];\n    const depth = (_rowTree$row$id = rowTree[row.id]) == null ? void 0 : _rowTree$row$id.depth;\n    if (depth === undefined) {\n      lastRowIndex += 1;\n    } else {\n      if (topLevelRowAdded < topLevelRowsInCurrentPageCount || depth > 0) {\n        lastRowIndex += 1;\n      }\n      if (depth === 0) {\n        topLevelRowAdded += 1;\n      }\n    }\n  }\n  return {\n    firstRowIndex,\n    lastRowIndex: lastRowIndex - 1\n  };\n});\n\n/**\n * Get the id and the model of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridPaginationRowRangeSelector, (visibleSortedRowEntries, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowEntries.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n\n/**\n * Get the id of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridPaginationRowRangeSelector, (visibleSortedRowIds, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowIds.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});","import { buildWarning } from '../../../utils/warning';\nimport { GridSignature } from '../../utils';\nconst MAX_PAGE_SIZE = 100;\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\nexport const getPageCount = (rowCount, pageSize) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n  return 0;\n};\nexport const noRowCountInServerMode = buildWarning([\"MUI: the 'rowCount' prop is undefined while using paginationMode='server'\", 'For more detail, see http://mui.com/components/data-grid/pagination/#basic-implementation'], 'error');\nexport const getDefaultGridPaginationModel = autoPageSize => ({\n  page: 0,\n  pageSize: autoPageSize ? 0 : 100\n});\nexport const getValidPage = (page, pageCount = 0) => {\n  if (pageCount === 0) {\n    return page;\n  }\n  return Math.max(Math.min(page, pageCount - 1), 0);\n};\nexport const throwIfPageSizeExceedsTheLimit = (pageSize, signatureProp) => {\n  if (signatureProp === GridSignature.DataGrid && pageSize > MAX_PAGE_SIZE) {\n    throw new Error(['MUI: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n  }\n};","export const gridPreferencePanelStateSelector = state => state.preferencePanel;","var GridPreferencePanelsValue = /*#__PURE__*/function (GridPreferencePanelsValue) {\n  GridPreferencePanelsValue[\"filters\"] = \"filters\";\n  GridPreferencePanelsValue[\"columns\"] = \"columns\";\n  return GridPreferencePanelsValue;\n}(GridPreferencePanelsValue || {});\nexport { GridPreferencePanelsValue };","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nexport const gridRowSelectionStateSelector = state => state.rowSelection;\nexport const selectedGridRowsCountSelector = createSelector(gridRowSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelectorMemoized(gridRowSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelectorMemoized(gridRowSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));","export const gridRowsMetaSelector = state => state.rowsMeta;","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nconst gridRowsStateSelector = state => state.rows;\nexport const gridRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalRowCount);\nexport const gridRowsLoadingSelector = createSelector(gridRowsStateSelector, rows => rows.loading);\nexport const gridTopLevelRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\n\n// TODO rows v6: Rename\nexport const gridRowsLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToModelLookup);\nexport const gridRowsDataRowIdToIdLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToIdLookup);\nexport const gridRowTreeSelector = createSelector(gridRowsStateSelector, rows => rows.tree);\nexport const gridRowGroupingNameSelector = createSelector(gridRowsStateSelector, rows => rows.groupingName);\nexport const gridRowTreeDepthsSelector = createSelector(gridRowsStateSelector, rows => rows.treeDepths);\nexport const gridRowMaximumTreeDepthSelector = createSelectorMemoized(gridRowsStateSelector, rows => {\n  const entries = Object.entries(rows.treeDepths);\n  if (entries.length === 0) {\n    return 1;\n  }\n  return entries.filter(([, nodeCount]) => nodeCount > 0).map(([depth]) => Number(depth)).sort((a, b) => b - a)[0] + 1;\n});\nexport const gridDataRowIdsSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIds);\n\n/**\n * @ignore - do not document.\n */\nexport const gridAdditionalRowGroupsSelector = createSelector(gridRowsStateSelector, rows => rows == null ? void 0 : rows.additionalRowGroups);\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsSelector = createSelectorMemoized(gridAdditionalRowGroupsSelector, additionalRowGroups => {\n  var _rawPinnedRows$bottom, _rawPinnedRows$top;\n  const rawPinnedRows = additionalRowGroups == null ? void 0 : additionalRowGroups.pinnedRows;\n  return {\n    bottom: rawPinnedRows == null || (_rawPinnedRows$bottom = rawPinnedRows.bottom) == null ? void 0 : _rawPinnedRows$bottom.map(rowEntry => {\n      var _rowEntry$model;\n      return {\n        id: rowEntry.id,\n        model: (_rowEntry$model = rowEntry.model) != null ? _rowEntry$model : {}\n      };\n    }),\n    top: rawPinnedRows == null || (_rawPinnedRows$top = rawPinnedRows.top) == null ? void 0 : _rawPinnedRows$top.map(rowEntry => {\n      var _rowEntry$model2;\n      return {\n        id: rowEntry.id,\n        model: (_rowEntry$model2 = rowEntry.model) != null ? _rowEntry$model2 : {}\n      };\n    })\n  };\n});\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsCountSelector = createSelector(gridPinnedRowsSelector, pinnedRows => {\n  var _pinnedRows$top, _pinnedRows$bottom;\n  return ((pinnedRows == null || (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.length) || 0) + ((pinnedRows == null || (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.length) || 0);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\nimport { gridDensityFactorSelector } from '../density/densitySelector';\nexport const GRID_ROOT_GROUP_ID = `auto-generated-group-node-root`;\nexport const GRID_ID_AUTOGENERATED = Symbol('mui.id_autogenerated');\nexport const buildRootGroup = () => ({\n  type: 'group',\n  id: GRID_ROOT_GROUP_ID,\n  depth: -1,\n  groupingField: null,\n  groupingKey: null,\n  isAutoGenerated: true,\n  children: [],\n  childrenFromPath: {},\n  childrenExpanded: true,\n  parent: null\n});\n\n/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\nexport function checkGridRowIdIsValid(id, row, detailErrorMessage = 'A row was provided without id in the rows prop:') {\n  if (id == null) {\n    throw new Error(['MUI: The data grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport const getRowIdFromRowModel = (rowModel, getRowId, detailErrorMessage) => {\n  const id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n};\nexport const createRowsInternalCache = ({\n  rows,\n  getRowId,\n  loading,\n  rowCount\n}) => {\n  const updates = {\n    type: 'full',\n    rows: []\n  };\n  const dataRowIdToModelLookup = {};\n  const dataRowIdToIdLookup = {};\n  for (let i = 0; i < rows.length; i += 1) {\n    const model = rows[i];\n    const id = getRowIdFromRowModel(model, getRowId);\n    dataRowIdToModelLookup[id] = model;\n    dataRowIdToIdLookup[id] = id;\n    updates.rows.push(id);\n  }\n  return {\n    rowsBeforePartialUpdates: rows,\n    loadingPropBeforePartialUpdates: loading,\n    rowCountPropBeforePartialUpdates: rowCount,\n    updates,\n    dataRowIdToIdLookup,\n    dataRowIdToModelLookup\n  };\n};\nexport const getTopLevelRowCount = ({\n  tree,\n  rowCountProp = 0\n}) => {\n  const rootGroupNode = tree[GRID_ROOT_GROUP_ID];\n  return Math.max(rowCountProp, rootGroupNode.children.length + (rootGroupNode.footerId == null ? 0 : 1));\n};\nexport const getRowsStateFromCache = ({\n  apiRef,\n  rowCountProp = 0,\n  loadingProp,\n  previousTree,\n  previousTreeDepths\n}) => {\n  const cache = apiRef.current.caches.rows;\n\n  // 1. Apply the \"rowTreeCreation\" family processing.\n  const {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIds: unProcessedDataRowIds,\n    groupingName\n  } = apiRef.current.applyStrategyProcessor('rowTreeCreation', {\n    previousTree,\n    previousTreeDepths,\n    updates: cache.updates,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup\n  });\n\n  // 2. Apply the \"hydrateRows\" pipe-processing.\n  const groupingParamsWithHydrateRows = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIds: unProcessedDataRowIds,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup\n  });\n\n  // 3. Reset the cache updates\n  apiRef.current.caches.rows.updates = {\n    type: 'partial',\n    actions: {\n      insert: [],\n      modify: [],\n      remove: []\n    },\n    idToActionLookup: {}\n  };\n  return _extends({}, groupingParamsWithHydrateRows, {\n    totalRowCount: Math.max(rowCountProp, groupingParamsWithHydrateRows.dataRowIds.length),\n    totalTopLevelRowCount: getTopLevelRowCount({\n      tree: groupingParamsWithHydrateRows.tree,\n      rowCountProp\n    }),\n    groupingName,\n    loading: loadingProp\n  });\n};\nexport const isAutoGeneratedRow = rowNode => rowNode.type === 'skeletonRow' || rowNode.type === 'footer' || rowNode.type === 'group' && rowNode.isAutoGenerated || rowNode.type === 'pinnedRow' && rowNode.isAutoGenerated;\nexport const getTreeNodeDescendants = (tree, parentId, skipAutoGeneratedRows) => {\n  const node = tree[parentId];\n  if (node.type !== 'group') {\n    return [];\n  }\n  const validDescendants = [];\n  for (let i = 0; i < node.children.length; i += 1) {\n    const child = node.children[i];\n    if (!skipAutoGeneratedRows || !isAutoGeneratedRow(tree[child])) {\n      validDescendants.push(child);\n    }\n    const childDescendants = getTreeNodeDescendants(tree, child, skipAutoGeneratedRows);\n    for (let j = 0; j < childDescendants.length; j += 1) {\n      validDescendants.push(childDescendants[j]);\n    }\n  }\n  if (!skipAutoGeneratedRows && node.footerId != null) {\n    validDescendants.push(node.footerId);\n  }\n  return validDescendants;\n};\nexport const updateCacheWithNewRows = ({\n  previousCache,\n  getRowId,\n  updates\n}) => {\n  var _previousCache$update, _previousCache$update2, _previousCache$update3;\n  if (previousCache.updates.type === 'full') {\n    throw new Error('MUI: Unable to prepare a partial update if a full update is not applied yet');\n  }\n\n  // Remove duplicate updates.\n  // A server can batch updates, and send several updates for the same row in one fn call.\n  const uniqueUpdates = new Map();\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    if (uniqueUpdates.has(id)) {\n      uniqueUpdates.set(id, _extends({}, uniqueUpdates.get(id), update));\n    } else {\n      uniqueUpdates.set(id, update);\n    }\n  });\n  const partialUpdates = {\n    type: 'partial',\n    actions: {\n      insert: [...((_previousCache$update = previousCache.updates.actions.insert) != null ? _previousCache$update : [])],\n      modify: [...((_previousCache$update2 = previousCache.updates.actions.modify) != null ? _previousCache$update2 : [])],\n      remove: [...((_previousCache$update3 = previousCache.updates.actions.remove) != null ? _previousCache$update3 : [])]\n    },\n    idToActionLookup: _extends({}, previousCache.updates.idToActionLookup)\n  };\n  const dataRowIdToModelLookup = _extends({}, previousCache.dataRowIdToModelLookup);\n  const dataRowIdToIdLookup = _extends({}, previousCache.dataRowIdToIdLookup);\n  const alreadyAppliedActionsToRemove = {\n    insert: {},\n    modify: {},\n    remove: {}\n  };\n\n  // Depending on the action already applied to the data row,\n  // We might want drop the already-applied-update.\n  // For instance:\n  // - if you delete then insert, then you don't want to apply the deletion in the tree.\n  // - if you insert, then modify, then you just want to apply the insertion in the tree.\n  uniqueUpdates.forEach((partialRow, id) => {\n    const actionAlreadyAppliedToRow = partialUpdates.idToActionLookup[id];\n\n    // Action === \"delete\"\n    // eslint-disable-next-line no-underscore-dangle\n    if (partialRow._action === 'delete') {\n      // If the data row has been removed since the last state update,\n      // Then do nothing.\n      if (actionAlreadyAppliedToRow === 'remove' || !dataRowIdToModelLookup[id]) {\n        return;\n      }\n\n      // If the data row has been inserted / modified since the last state update,\n      // Then drop this \"insert\" / \"modify\" update.\n      if (actionAlreadyAppliedToRow != null) {\n        alreadyAppliedActionsToRemove[actionAlreadyAppliedToRow][id] = true;\n      }\n\n      // Remove the data row from the lookups and add it to the \"delete\" update.\n      partialUpdates.actions.remove.push(id);\n      delete dataRowIdToModelLookup[id];\n      delete dataRowIdToIdLookup[id];\n      return;\n    }\n    const oldRow = dataRowIdToModelLookup[id];\n\n    // Action === \"modify\"\n    if (oldRow) {\n      // If the data row has been removed since the last state update,\n      // Then drop this \"remove\" update and add it to the \"modify\" update instead.\n      if (actionAlreadyAppliedToRow === 'remove') {\n        alreadyAppliedActionsToRemove.remove[id] = true;\n        partialUpdates.actions.modify.push(id);\n      }\n      // If the date has not been inserted / modified since the last state update,\n      // Then add it to the \"modify\" update (if it has been inserted it should just remain \"inserted\").\n      else if (actionAlreadyAppliedToRow == null) {\n        partialUpdates.actions.modify.push(id);\n      }\n\n      // Update the data row lookups.\n      dataRowIdToModelLookup[id] = _extends({}, oldRow, partialRow);\n      return;\n    }\n\n    // Action === \"insert\"\n    // If the data row has been removed since the last state update,\n    // Then drop the \"remove\" update and add it to the \"insert\" update instead.\n    if (actionAlreadyAppliedToRow === 'remove') {\n      alreadyAppliedActionsToRemove.remove[id] = true;\n      partialUpdates.actions.insert.push(id);\n    }\n    // If the data row has not been inserted since the last state update,\n    // Then add it to the \"insert\" update.\n    // `actionAlreadyAppliedToRow` can't be equal to \"modify\", otherwise we would have an `oldRow` above.\n    else if (actionAlreadyAppliedToRow == null) {\n      partialUpdates.actions.insert.push(id);\n    }\n\n    // Update the data row lookups.\n    dataRowIdToModelLookup[id] = partialRow;\n    dataRowIdToIdLookup[id] = id;\n  });\n  const actionTypeWithActionsToRemove = Object.keys(alreadyAppliedActionsToRemove);\n  for (let i = 0; i < actionTypeWithActionsToRemove.length; i += 1) {\n    const actionType = actionTypeWithActionsToRemove[i];\n    const idsToRemove = alreadyAppliedActionsToRemove[actionType];\n    if (Object.keys(idsToRemove).length > 0) {\n      partialUpdates.actions[actionType] = partialUpdates.actions[actionType].filter(id => !idsToRemove[id]);\n    }\n  }\n  return {\n    dataRowIdToModelLookup,\n    dataRowIdToIdLookup,\n    updates: partialUpdates,\n    rowsBeforePartialUpdates: previousCache.rowsBeforePartialUpdates,\n    loadingPropBeforePartialUpdates: previousCache.loadingPropBeforePartialUpdates,\n    rowCountPropBeforePartialUpdates: previousCache.rowCountPropBeforePartialUpdates\n  };\n};\nexport function calculatePinnedRowsHeight(apiRef) {\n  var _pinnedRows$top, _pinnedRows$bottom;\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsHeight = (pinnedRows == null || (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0)) || 0;\n  const bottomPinnedRowsHeight = (pinnedRows == null || (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0)) || 0;\n  return {\n    top: topPinnedRowsHeight,\n    bottom: bottomPinnedRowsHeight\n  };\n}\nexport function getMinimalContentHeight(apiRef, rowHeight) {\n  const densityFactor = gridDensityFactorSelector(apiRef);\n  return `var(--DataGrid-overlayHeight, ${2 * Math.floor(rowHeight * densityFactor)}px)`;\n}","import * as React from 'react';\nimport { getGridCellElement, getGridColumnHeaderElement, getGridRowElement } from '../../../utils/domUtils';\nimport { GRID_ID_AUTOGENERATED } from './gridRowsUtils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nexport class MissingRowIdError extends Error {}\n\n/**\n * @requires useGridColumns (method)\n * @requires useGridRows (method)\n * @requires useGridFocus (state)\n * @requires useGridEditing (method)\n * TODO: Impossible priority - useGridEditing also needs to be after useGridParamsApi\n * TODO: Impossible priority - useGridFocus also needs to be after useGridParamsApi\n */\nexport function useGridParamsApi(apiRef, props) {\n  const {\n    getRowId\n  } = props;\n  const getColumnHeaderParams = React.useCallback(field => ({\n    field,\n    colDef: apiRef.current.getColumn(field)\n  }), [apiRef]);\n  const getRowParams = React.useCallback(id => {\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const params = {\n      id,\n      columns: apiRef.current.getAllColumns(),\n      row\n    };\n    return params;\n  }, [apiRef]);\n  const getBaseCellParams = React.useCallback((id, field) => {\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n    if (!row || !rowNode) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      value: row[field],\n      colDef: apiRef.current.getColumn(field),\n      cellMode: apiRef.current.getCellMode(id, field),\n      api: apiRef.current,\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1\n    };\n    return params;\n  }, [apiRef]);\n  const getCellParams = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const value = apiRef.current.getCellValue(id, field);\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n    if (!row || !rowNode) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      colDef,\n      cellMode: apiRef.current.getCellMode(id, field),\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1,\n      value,\n      formattedValue: value,\n      isEditable: false\n    };\n    if (colDef && colDef.valueFormatter) {\n      params.formattedValue = colDef.valueFormatter({\n        id,\n        field: params.field,\n        value: params.value,\n        api: apiRef.current\n      });\n    }\n    params.isEditable = colDef && apiRef.current.isCellEditable(params);\n    return params;\n  }, [apiRef]);\n  const getCellValue = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    if (!colDef || !colDef.valueGetter) {\n      const rowModel = apiRef.current.getRow(id);\n      if (!rowModel) {\n        throw new MissingRowIdError(`No row with id #${id} found`);\n      }\n      return rowModel[field];\n    }\n    return colDef.valueGetter(getBaseCellParams(id, field));\n  }, [apiRef, getBaseCellParams]);\n  const getRowValue = React.useCallback((row, colDef) => {\n    var _getRowId;\n    const id = GRID_ID_AUTOGENERATED in row ? row[GRID_ID_AUTOGENERATED] : (_getRowId = getRowId == null ? void 0 : getRowId(row)) != null ? _getRowId : row.id;\n    const field = colDef.field;\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    return colDef.valueGetter(getBaseCellParams(id, field));\n  }, [getBaseCellParams, getRowId]);\n  const getRowFormattedValue = React.useCallback((row, colDef) => {\n    var _ref;\n    const value = getRowValue(row, colDef);\n    if (!colDef || !colDef.valueFormatter) {\n      return value;\n    }\n    const id = (_ref = getRowId ? getRowId(row) : row.id) != null ? _ref : row[GRID_ID_AUTOGENERATED];\n    const field = colDef.field;\n    return colDef.valueFormatter({\n      id,\n      field,\n      value,\n      api: apiRef.current\n    });\n  }, [apiRef, getRowId, getRowValue]);\n  const getColumnHeaderElement = React.useCallback(field => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridColumnHeaderElement(apiRef.current.rootElementRef.current, field);\n  }, [apiRef]);\n  const getRowElement = React.useCallback(id => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridRowElement(apiRef.current.rootElementRef.current, id);\n  }, [apiRef]);\n  const getCellElement = React.useCallback((id, field) => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridCellElement(apiRef.current.rootElementRef.current, {\n      id,\n      field\n    });\n  }, [apiRef]);\n  const paramsApi = {\n    getCellValue,\n    getCellParams,\n    getCellElement,\n    getRowValue,\n    getRowFormattedValue,\n    getRowParams,\n    getRowElement,\n    getColumnHeaderParams,\n    getColumnHeaderElement\n  };\n  useGridApiMethod(apiRef, paramsApi, 'public');\n}","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\n\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nconst gridSortingStateSelector = state => state.sorting;\n\n/**\n * Get the id of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowIdsSelector = createSelector(gridSortingStateSelector, sortingState => sortingState.sortedRows);\n\n/**\n * Get the id and the model of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowEntriesSelector = createSelectorMemoized(gridSortedRowIdsSelector, gridRowsLookupSelector,\n// TODO rows v6: Is this the best approach ?\n(sortedIds, idRowsLookup) => sortedIds.map(id => {\n  var _idRowsLookup$id;\n  return {\n    id,\n    model: (_idRowsLookup$id = idRowsLookup[id]) != null ? _idRowsLookup$id : {}\n  };\n}));\n\n/**\n * Get the current sorting model.\n * @category Sorting\n */\nexport const gridSortModelSelector = createSelector(gridSortingStateSelector, sorting => sorting.sortModel);\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortColumnLookupSelector = createSelectorMemoized(gridSortModelSelector, sortModel => {\n  const result = sortModel.reduce((res, sortItem, index) => {\n    res[sortItem.field] = {\n      sortDirection: sortItem.sort,\n      sortIndex: sortModel.length > 1 ? index + 1 : undefined\n    };\n    return res;\n  }, {});\n  return result;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { buildWarning } from '../../../utils/warning';\nconst sortModelDisableMultiColumnsSortingWarning = buildWarning(['MUI: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nexport const sanitizeSortModel = (model, disableMultipleColumnsSorting) => {\n  if (disableMultipleColumnsSorting && model.length > 1) {\n    sortModelDisableMultiColumnsSortingWarning();\n    return [model[0]];\n  }\n  return model;\n};\nexport const mergeStateWithSortModel = (sortModel, disableMultipleColumnsSorting) => state => _extends({}, state, {\n  sorting: _extends({}, state.sorting, {\n    sortModel: sanitizeSortModel(sortModel, disableMultipleColumnsSorting)\n  })\n});\nconst isDesc = direction => direction === 'desc';\n\n/**\n * Transform an item of the sorting model into a method comparing two rows.\n * @param {GridSortItem} sortItem The sort item we want to apply.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridParsedSortItem | null} The parsed sort item. Returns `null` is the sort item is not valid.\n */\nconst parseSortItem = (sortItem, apiRef) => {\n  const column = apiRef.current.getColumn(sortItem.field);\n  if (!column) {\n    return null;\n  }\n  const comparator = isDesc(sortItem.sort) ? (...args) => -1 * column.sortComparator(...args) : column.sortComparator;\n  const getSortCellParams = id => ({\n    id,\n    field: column.field,\n    rowNode: apiRef.current.getRowNode(id),\n    value: apiRef.current.getCellValue(id, column.field),\n    api: apiRef.current\n  });\n  return {\n    getSortCellParams,\n    comparator\n  };\n};\n/**\n * Compare two rows according to a list of valid sort items.\n * The `row1Params` and `row2Params` must have the same length as `parsedSortItems`,\n * and each of their index must contain the `GridSortCellParams` of the sort item with the same index.\n * @param {GridParsedSortItem[]} parsedSortItems All the sort items with which we want to compare the rows.\n * @param {GridRowAggregatedSortingParams} row1 The node and params of the 1st row for each sort item.\n * @param {GridRowAggregatedSortingParams} row2 The node and params of the 2nd row for each sort item.\n */\nconst compareRows = (parsedSortItems, row1, row2) => {\n  return parsedSortItems.reduce((res, item, index) => {\n    if (res !== 0) {\n      // return the results of the first comparator which distinguish the two rows\n      return res;\n    }\n    const sortCellParams1 = row1.params[index];\n    const sortCellParams2 = row2.params[index];\n    res = item.comparator(sortCellParams1.value, sortCellParams2.value, sortCellParams1, sortCellParams2);\n    return res;\n  }, 0);\n};\n\n/**\n * Generates a method to easily sort a list of rows according to the current sort model.\n * @param {GridSortModel} sortModel The model with which we want to sort the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridSortingModelApplier | null} A method that generates a list of sorted row ids from a list of rows according to the current sort model. If `null`, we consider that the rows should remain in the order there were provided.\n */\nexport const buildAggregatedSortingApplier = (sortModel, apiRef) => {\n  const comparatorList = sortModel.map(item => parseSortItem(item, apiRef)).filter(comparator => !!comparator);\n  if (comparatorList.length === 0) {\n    return null;\n  }\n  return rowList => rowList.map(node => ({\n    node,\n    params: comparatorList.map(el => el.getSortCellParams(node.id))\n  })).sort((a, b) => compareRows(comparatorList, a, b)).map(row => row.node.id);\n};\nexport const getNextGridSortDirection = (sortingOrder, current) => {\n  const currentIdx = sortingOrder.indexOf(current);\n  if (!current || currentIdx === -1 || currentIdx + 1 === sortingOrder.length) {\n    return sortingOrder[0];\n  }\n  return sortingOrder[currentIdx + 1];\n};\nconst gridNillComparator = (v1, v2) => {\n  if (v1 == null && v2 != null) {\n    return -1;\n  }\n  if (v2 == null && v1 != null) {\n    return 1;\n  }\n  if (v1 == null && v2 == null) {\n    return 0;\n  }\n  return null;\n};\nconst collator = new Intl.Collator();\nexport const gridStringOrNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (typeof value1 === 'string') {\n    return collator.compare(value1.toString(), value2.toString());\n  }\n  return value1 - value2;\n};\nexport const gridNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  return Number(value1) - Number(value2);\n};\nexport const gridDateComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (value1 > value2) {\n    return 1;\n  }\n  if (value1 < value2) {\n    return -1;\n  }\n  return 0;\n};","import { createSelector } from '../../../utils/createSelector';\n/**\n * Get the columns state\n * @category Virtualization\n */\nexport const gridVirtualizationSelector = state => state.virtualization;\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabled);\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationColumnEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForColumns);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"style\"],\n  _excluded2 = [\"style\"];\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useTheme } from '@mui/material/styles';\nimport { defaultMemoize } from 'reselect';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridVisibleColumnDefinitionsSelector, gridColumnsTotalWidthSelector, gridColumnPositionsSelector } from '../columns/gridColumnsSelector';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { clamp } from '../../../utils/utils';\nimport { selectedIdsLookupSelector } from '../rowSelection/gridRowSelectionSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getFirstNonSpannedColumnToRender } from '../columns/gridColumnsUtils';\nimport { getMinimalContentHeight } from '../rows/gridRowsUtils';\nimport { gridVirtualizationEnabledSelector, gridVirtualizationColumnEnabledSelector } from './gridVirtualizationSelectors';\n\n// Uses binary search to avoid looping through all possible positions\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function binarySearch(offset, positions, sliceStart = 0, sliceEnd = positions.length) {\n  if (positions.length <= 0) {\n    return -1;\n  }\n  if (sliceStart >= sliceEnd) {\n    return sliceStart;\n  }\n  const pivot = sliceStart + Math.floor((sliceEnd - sliceStart) / 2);\n  const itemOffset = positions[pivot];\n  return offset <= itemOffset ? binarySearch(offset, positions, sliceStart, pivot) : binarySearch(offset, positions, pivot + 1, sliceEnd);\n}\nfunction exponentialSearch(offset, positions, index) {\n  let interval = 1;\n  while (index < positions.length && Math.abs(positions[index]) < offset) {\n    index += interval;\n    interval *= 2;\n  }\n  return binarySearch(offset, positions, Math.floor(index / 2), Math.min(index, positions.length));\n}\nexport const getRenderableIndexes = ({\n  firstIndex,\n  lastIndex,\n  buffer,\n  minFirstIndex,\n  maxLastIndex\n}) => {\n  return [clamp(firstIndex - buffer, minFirstIndex, maxLastIndex), clamp(lastIndex + buffer, minFirstIndex, maxLastIndex)];\n};\nexport const areRenderContextsEqual = (context1, context2) => {\n  if (context1 === context2) {\n    return true;\n  }\n  return context1.firstRowIndex === context2.firstRowIndex && context1.lastRowIndex === context2.lastRowIndex && context1.firstColumnIndex === context2.firstColumnIndex && context1.lastColumnIndex === context2.lastColumnIndex;\n};\n// The `maxSize` is 3 so that reselect caches the `renderedColumns` values for the pinned left,\n// unpinned, and pinned right sections.\nconst MEMOIZE_OPTIONS = {\n  maxSize: 3\n};\nexport const useGridVirtualScroller = props => {\n  var _currentPage$range3, _currentPage$range4;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const enabled = useGridSelector(apiRef, gridVirtualizationEnabledSelector);\n  const enabledForColumns = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector);\n  const {\n    ref,\n    onRenderZonePositioning,\n    renderZoneMinColumnIndex = 0,\n    renderZoneMaxColumnIndex = visibleColumns.length,\n    getRowProps\n  } = props;\n  const theme = useTheme();\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const cellFocus = useGridSelector(apiRef, gridFocusCellSelector);\n  const cellTabIndex = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const selectedRowsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const renderZoneRef = React.useRef(null);\n  const rootRef = React.useRef(null);\n  const handleRef = useForkRef(ref, rootRef);\n  const [renderContext, setRenderContextState] = React.useState(null);\n  const prevRenderContext = React.useRef(renderContext);\n  const scrollPosition = React.useRef({\n    top: 0,\n    left: 0\n  });\n  const [containerDimensions, setContainerDimensions] = React.useState({\n    width: null,\n    height: null\n  });\n  const prevTotalWidth = React.useRef(columnsTotalWidth);\n  // Each visible row (not to be confused with a filter result) is composed of a central row element\n  // and up to two additional row elements for pinned columns (left and right).\n  // When hovering any of these elements, the :hover styles are applied only to the row element that\n  // was actually hovered, not its additional siblings. To make it look like a contiguous row,\n  // we add/remove the .Mui-hovered class to all of the row elements inside one visible row.\n  const [hoveredRowId, setHoveredRowId] = React.useState(null);\n  const rowStyleCache = React.useRef(Object.create(null));\n  const prevGetRowProps = React.useRef();\n  const prevRootRowStyle = React.useRef();\n  const getRenderedColumnsRef = React.useRef(defaultMemoize((columns, firstColumnToRender, lastColumnToRender, minFirstColumn, maxLastColumn, indexOfColumnWithFocusedCell) => {\n    // If the selected column is not within the current range of columns being displayed,\n    // we need to render it at either the left or right of the columns,\n    // depending on whether it is above or below the range.\n    let focusedCellColumnIndexNotInRange;\n    const renderedColumns = columns.slice(firstColumnToRender, lastColumnToRender);\n    if (indexOfColumnWithFocusedCell > -1) {\n      // check if it is not on the left pinned column.\n      if (firstColumnToRender > indexOfColumnWithFocusedCell && indexOfColumnWithFocusedCell >= minFirstColumn) {\n        focusedCellColumnIndexNotInRange = indexOfColumnWithFocusedCell;\n      }\n      // check if it is not on the right pinned column.\n      else if (lastColumnToRender < indexOfColumnWithFocusedCell && indexOfColumnWithFocusedCell < maxLastColumn) {\n        focusedCellColumnIndexNotInRange = indexOfColumnWithFocusedCell;\n      }\n    }\n    return {\n      focusedCellColumnIndexNotInRange,\n      renderedColumns\n    };\n  }, MEMOIZE_OPTIONS));\n  const indexOfColumnWithFocusedCell = React.useMemo(() => {\n    if (cellFocus !== null) {\n      return visibleColumns.findIndex(column => column.field === cellFocus.field);\n    }\n    return -1;\n  }, [cellFocus, visibleColumns]);\n  const getNearestIndexToRender = React.useCallback(offset => {\n    var _currentPage$range, _currentPage$range2;\n    const lastMeasuredIndexRelativeToAllRows = apiRef.current.getLastMeasuredRowIndex();\n    let allRowsMeasured = lastMeasuredIndexRelativeToAllRows === Infinity;\n    if ((_currentPage$range = currentPage.range) != null && _currentPage$range.lastRowIndex && !allRowsMeasured) {\n      // Check if all rows in this page are already measured\n      allRowsMeasured = lastMeasuredIndexRelativeToAllRows >= currentPage.range.lastRowIndex;\n    }\n    const lastMeasuredIndexRelativeToCurrentPage = clamp(lastMeasuredIndexRelativeToAllRows - (((_currentPage$range2 = currentPage.range) == null ? void 0 : _currentPage$range2.firstRowIndex) || 0), 0, rowsMeta.positions.length);\n    if (allRowsMeasured || rowsMeta.positions[lastMeasuredIndexRelativeToCurrentPage] >= offset) {\n      // If all rows were measured (when no row has \"auto\" as height) or all rows before the offset\n      // were measured, then use a binary search because it's faster.\n      return binarySearch(offset, rowsMeta.positions);\n    }\n\n    // Otherwise, use an exponential search.\n    // If rows have \"auto\" as height, their positions will be based on estimated heights.\n    // In this case, we can skip several steps until we find a position higher than the offset.\n    // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n    return exponentialSearch(offset, rowsMeta.positions, lastMeasuredIndexRelativeToCurrentPage);\n  }, [apiRef, (_currentPage$range3 = currentPage.range) == null ? void 0 : _currentPage$range3.firstRowIndex, (_currentPage$range4 = currentPage.range) == null ? void 0 : _currentPage$range4.lastRowIndex, rowsMeta.positions]);\n  const computeRenderContext = React.useCallback(() => {\n    if (!enabled) {\n      return {\n        firstRowIndex: 0,\n        lastRowIndex: currentPage.rows.length,\n        firstColumnIndex: 0,\n        lastColumnIndex: visibleColumns.length\n      };\n    }\n    const {\n      top,\n      left\n    } = scrollPosition.current;\n\n    // Clamp the value because the search may return an index out of bounds.\n    // In the last index, this is not needed because Array.slice doesn't include it.\n    const firstRowIndex = Math.min(getNearestIndexToRender(top), rowsMeta.positions.length - 1);\n    const lastRowIndex = rootProps.autoHeight ? firstRowIndex + currentPage.rows.length : getNearestIndexToRender(top + containerDimensions.height);\n    let firstColumnIndex = 0;\n    let lastColumnIndex = columnPositions.length;\n    if (enabledForColumns) {\n      let hasRowWithAutoHeight = false;\n      const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n        firstIndex: firstRowIndex,\n        lastIndex: lastRowIndex,\n        minFirstIndex: 0,\n        maxLastIndex: currentPage.rows.length,\n        buffer: rootProps.rowBuffer\n      });\n      for (let i = firstRowToRender; i < lastRowToRender && !hasRowWithAutoHeight; i += 1) {\n        const row = currentPage.rows[i];\n        hasRowWithAutoHeight = apiRef.current.rowHasAutoHeight(row.id);\n      }\n      if (!hasRowWithAutoHeight) {\n        firstColumnIndex = binarySearch(Math.abs(left), columnPositions);\n        lastColumnIndex = binarySearch(Math.abs(left) + containerDimensions.width, columnPositions);\n      }\n    }\n    return {\n      firstRowIndex,\n      lastRowIndex,\n      firstColumnIndex,\n      lastColumnIndex\n    };\n  }, [enabled, enabledForColumns, getNearestIndexToRender, rowsMeta.positions.length, rootProps.autoHeight, rootProps.rowBuffer, currentPage.rows, columnPositions, visibleColumns.length, apiRef, containerDimensions]);\n  useEnhancedEffect(() => {\n    if (enabled) {\n      // TODO a scroll reset should not be necessary\n      rootRef.current.scrollLeft = 0;\n      rootRef.current.scrollTop = 0;\n    } else {\n      renderZoneRef.current.style.transform = `translate3d(0px, 0px, 0px)`;\n    }\n  }, [enabled]);\n  useEnhancedEffect(() => {\n    setContainerDimensions({\n      width: rootRef.current.clientWidth,\n      height: rootRef.current.clientHeight\n    });\n  }, [rowsMeta.currentPageTotalHeight]);\n  const handleResize = React.useCallback(() => {\n    if (rootRef.current) {\n      setContainerDimensions({\n        width: rootRef.current.clientWidth,\n        height: rootRef.current.clientHeight\n      });\n    }\n  }, []);\n  useGridApiEventHandler(apiRef, 'debouncedResize', handleResize);\n  const updateRenderZonePosition = React.useCallback(nextRenderContext => {\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const [initialFirstColumnToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstColumnIndex,\n      lastIndex: nextRenderContext.lastColumnIndex,\n      minFirstIndex: renderZoneMinColumnIndex,\n      maxLastIndex: renderZoneMaxColumnIndex,\n      buffer: rootProps.columnBuffer\n    });\n    const firstColumnToRender = getFirstNonSpannedColumnToRender({\n      firstColumnToRender: initialFirstColumnToRender,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const direction = theme.direction === 'ltr' ? 1 : -1;\n    const top = gridRowsMetaSelector(apiRef.current.state).positions[firstRowToRender];\n    const left = direction * gridColumnPositionsSelector(apiRef)[firstColumnToRender]; // Call directly the selector because it might be outdated when this method is called\n    renderZoneRef.current.style.transform = `translate3d(${left}px, ${top}px, 0px)`;\n    if (typeof onRenderZonePositioning === 'function') {\n      onRenderZonePositioning({\n        top,\n        left\n      });\n    }\n  }, [apiRef, currentPage.rows, onRenderZonePositioning, renderZoneMinColumnIndex, renderZoneMaxColumnIndex, rootProps.columnBuffer, rootProps.rowBuffer, theme.direction]);\n  const getRenderContext = React.useCallback(() => prevRenderContext.current, []);\n  const setRenderContext = React.useCallback(nextRenderContext => {\n    if (prevRenderContext.current && areRenderContextsEqual(nextRenderContext, prevRenderContext.current)) {\n      updateRenderZonePosition(nextRenderContext);\n      return;\n    }\n    setRenderContextState(nextRenderContext);\n    updateRenderZonePosition(nextRenderContext);\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    apiRef.current.publishEvent('renderedRowsIntervalChange', {\n      firstRowToRender,\n      lastRowToRender\n    });\n    prevRenderContext.current = nextRenderContext;\n  }, [apiRef, setRenderContextState, prevRenderContext, currentPage.rows.length, rootProps.rowBuffer, updateRenderZonePosition]);\n  useEnhancedEffect(() => {\n    if (containerDimensions.width == null) {\n      return;\n    }\n    const initialRenderContext = computeRenderContext();\n    setRenderContext(initialRenderContext);\n    const {\n      top,\n      left\n    } = scrollPosition.current;\n    const params = {\n      top,\n      left,\n      renderContext: initialRenderContext\n    };\n    apiRef.current.publishEvent('scrollPositionChange', params);\n  }, [apiRef, computeRenderContext, containerDimensions.width, setRenderContext]);\n  const handleScroll = useEventCallback(event => {\n    const {\n      scrollTop,\n      scrollLeft\n    } = event.currentTarget;\n    scrollPosition.current.top = scrollTop;\n    scrollPosition.current.left = scrollLeft;\n\n    // On iOS and macOS, negative offsets are possible when swiping past the start\n    if (!prevRenderContext.current || scrollTop < 0) {\n      return;\n    }\n    if (theme.direction === 'ltr') {\n      if (scrollLeft < 0) {\n        return;\n      }\n    }\n    if (theme.direction === 'rtl') {\n      if (scrollLeft > 0) {\n        return;\n      }\n    }\n\n    // When virtualization is disabled, the context never changes during scroll\n    const nextRenderContext = enabled ? computeRenderContext() : prevRenderContext.current;\n    const topRowsScrolledSincePreviousRender = Math.abs(nextRenderContext.firstRowIndex - prevRenderContext.current.firstRowIndex);\n    const bottomRowsScrolledSincePreviousRender = Math.abs(nextRenderContext.lastRowIndex - prevRenderContext.current.lastRowIndex);\n    const topColumnsScrolledSincePreviousRender = Math.abs(nextRenderContext.firstColumnIndex - prevRenderContext.current.firstColumnIndex);\n    const bottomColumnsScrolledSincePreviousRender = Math.abs(nextRenderContext.lastColumnIndex - prevRenderContext.current.lastColumnIndex);\n    const shouldSetState = topRowsScrolledSincePreviousRender >= rootProps.rowThreshold || bottomRowsScrolledSincePreviousRender >= rootProps.rowThreshold || topColumnsScrolledSincePreviousRender >= rootProps.columnThreshold || bottomColumnsScrolledSincePreviousRender >= rootProps.columnThreshold || prevTotalWidth.current !== columnsTotalWidth;\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollTop,\n      left: scrollLeft,\n      renderContext: shouldSetState ? nextRenderContext : prevRenderContext.current\n    }, event);\n    if (shouldSetState) {\n      // Prevents batching render context changes\n      ReactDOM.flushSync(() => {\n        setRenderContext(nextRenderContext);\n      });\n      prevTotalWidth.current = columnsTotalWidth;\n    }\n  });\n  const handleWheel = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerWheel', {}, event);\n  });\n  const handleTouchMove = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerTouchMove', {}, event);\n  });\n  const indexOfRowWithFocusedCell = React.useMemo(() => {\n    if (cellFocus !== null) {\n      return currentPage.rows.findIndex(row => row.id === cellFocus.id);\n    }\n    return -1;\n  }, [cellFocus, currentPage.rows]);\n  useGridApiEventHandler(apiRef, 'rowMouseOver', (params, event) => {\n    var _params$id;\n    if (event.currentTarget.contains(event.relatedTarget)) {\n      return;\n    }\n    setHoveredRowId((_params$id = params.id) != null ? _params$id : null);\n  });\n  useGridApiEventHandler(apiRef, 'rowMouseOut', (params, event) => {\n    if (event.currentTarget.contains(event.relatedTarget)) {\n      return;\n    }\n    setHoveredRowId(null);\n  });\n  const getRows = (params = {\n    renderContext\n  }) => {\n    var _rootProps$slotProps;\n    const {\n      onRowRender,\n      renderContext: nextRenderContext,\n      minFirstColumn = renderZoneMinColumnIndex,\n      maxLastColumn = renderZoneMaxColumnIndex,\n      availableSpace = containerDimensions.width,\n      rowIndexOffset = 0,\n      position = 'center'\n    } = params;\n    if (!nextRenderContext || availableSpace == null) {\n      return null;\n    }\n    const rowBuffer = enabled ? rootProps.rowBuffer : 0;\n    const columnBuffer = enabled ? rootProps.columnBuffer : 0;\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rowBuffer\n    });\n    const renderedRows = [];\n    if (params.rows) {\n      params.rows.forEach(row => {\n        renderedRows.push(row);\n        apiRef.current.calculateColSpan({\n          rowId: row.id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n      });\n    } else {\n      if (!currentPage.range) {\n        return null;\n      }\n      for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n        const row = currentPage.rows[i];\n        renderedRows.push(row);\n        apiRef.current.calculateColSpan({\n          rowId: row.id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n      }\n    }\n    // If the selected row is not within the current range of rows being displayed,\n    // we need to render it at either the top or bottom of the rows,\n    // depending on whether it is above or below the range.\n\n    let isRowWithFocusedCellNotInRange = false;\n    if (indexOfRowWithFocusedCell > -1) {\n      const rowWithFocusedCell = currentPage.rows[indexOfRowWithFocusedCell];\n      if (firstRowToRender > indexOfRowWithFocusedCell || lastRowToRender < indexOfRowWithFocusedCell) {\n        isRowWithFocusedCellNotInRange = true;\n        if (indexOfRowWithFocusedCell > firstRowToRender) {\n          renderedRows.push(rowWithFocusedCell);\n        } else {\n          renderedRows.unshift(rowWithFocusedCell);\n        }\n        apiRef.current.calculateColSpan({\n          rowId: rowWithFocusedCell.id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n      }\n    }\n    const [initialFirstColumnToRender, lastColumnToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstColumnIndex,\n      lastIndex: nextRenderContext.lastColumnIndex,\n      minFirstIndex: minFirstColumn,\n      maxLastIndex: maxLastColumn,\n      buffer: columnBuffer\n    });\n    const firstColumnToRender = getFirstNonSpannedColumnToRender({\n      firstColumnToRender: initialFirstColumnToRender,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    let isColumnWihFocusedCellNotInRange = false;\n    if (firstColumnToRender > indexOfColumnWithFocusedCell || lastColumnToRender < indexOfColumnWithFocusedCell) {\n      isColumnWihFocusedCellNotInRange = true;\n    }\n    const {\n      focusedCellColumnIndexNotInRange,\n      renderedColumns\n    } = getRenderedColumnsRef.current(visibleColumns, firstColumnToRender, lastColumnToRender, minFirstColumn, maxLastColumn, isColumnWihFocusedCellNotInRange ? indexOfColumnWithFocusedCell : -1);\n    const _ref = ((_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.row) || {},\n      {\n        style: rootRowStyle\n      } = _ref,\n      rootRowProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n    const invalidatesCachedRowStyle = prevGetRowProps.current !== getRowProps || prevRootRowStyle.current !== rootRowStyle;\n    if (invalidatesCachedRowStyle) {\n      rowStyleCache.current = Object.create(null);\n    }\n    const rows = [];\n    let isRowWithFocusedCellRendered = false;\n    for (let i = 0; i < renderedRows.length; i += 1) {\n      var _currentPage$range5;\n      const {\n        id,\n        model\n      } = renderedRows[i];\n      const isRowNotVisible = isRowWithFocusedCellNotInRange && cellFocus.id === id;\n      const lastVisibleRowIndex = isRowWithFocusedCellNotInRange ? firstRowToRender + i === currentPage.rows.length : firstRowToRender + i === currentPage.rows.length - 1;\n      const baseRowHeight = !apiRef.current.rowHasAutoHeight(id) ? apiRef.current.unstable_getRowHeight(id) : 'auto';\n      let isSelected;\n      if (selectedRowsLookup[id] == null) {\n        isSelected = false;\n      } else {\n        isSelected = apiRef.current.isRowSelectable(id);\n      }\n      if (onRowRender) {\n        onRowRender(id);\n      }\n      const focusedCell = cellFocus !== null && cellFocus.id === id ? cellFocus.field : null;\n      const columnWithFocusedCellNotInRange = focusedCellColumnIndexNotInRange !== undefined && visibleColumns[focusedCellColumnIndexNotInRange];\n      const renderedColumnsWithFocusedCell = columnWithFocusedCellNotInRange && focusedCell ? [columnWithFocusedCellNotInRange, ...renderedColumns] : renderedColumns;\n      let tabbableCell = null;\n      if (cellTabIndex !== null && cellTabIndex.id === id) {\n        const cellParams = apiRef.current.getCellParams(id, cellTabIndex.field);\n        tabbableCell = cellParams.cellMode === 'view' ? cellTabIndex.field : null;\n      }\n      const _ref2 = typeof getRowProps === 'function' && getRowProps(id, model) || {},\n        {\n          style: rowStyle\n        } = _ref2,\n        rowProps = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n      if (!rowStyleCache.current[id]) {\n        const style = _extends({}, rowStyle, rootRowStyle);\n        rowStyleCache.current[id] = style;\n      }\n      let index = rowIndexOffset + ((currentPage == null || (_currentPage$range5 = currentPage.range) == null ? void 0 : _currentPage$range5.firstRowIndex) || 0) + firstRowToRender + i;\n      if (isRowWithFocusedCellNotInRange && (cellFocus == null ? void 0 : cellFocus.id) === id) {\n        index = indexOfRowWithFocusedCell;\n        isRowWithFocusedCellRendered = true;\n      } else if (isRowWithFocusedCellRendered) {\n        index -= 1;\n      }\n      rows.push( /*#__PURE__*/_jsx(rootProps.slots.row, _extends({\n        row: model,\n        rowId: id,\n        focusedCellColumnIndexNotInRange: focusedCellColumnIndexNotInRange,\n        isNotVisible: isRowNotVisible,\n        rowHeight: baseRowHeight,\n        focusedCell: focusedCell,\n        tabbableCell: tabbableCell,\n        renderedColumns: renderedColumnsWithFocusedCell,\n        visibleColumns: visibleColumns,\n        firstColumnToRender: firstColumnToRender,\n        lastColumnToRender: lastColumnToRender,\n        selected: isSelected,\n        index: index,\n        containerWidth: availableSpace,\n        isLastVisible: lastVisibleRowIndex,\n        position: position\n      }, rowProps, rootRowProps, {\n        hovered: hoveredRowId === id,\n        style: rowStyleCache.current[id]\n      }), id));\n    }\n    prevGetRowProps.current = getRowProps;\n    prevRootRowStyle.current = rootRowStyle;\n    return rows;\n  };\n  const needsHorizontalScrollbar = containerDimensions.width && columnsTotalWidth >= containerDimensions.width;\n  const contentSize = React.useMemo(() => {\n    // In cases where the columns exceed the available width,\n    // the horizontal scrollbar should be shown even when there're no rows.\n    // Keeping 1px as minimum height ensures that the scrollbar will visible if necessary.\n    const height = Math.max(rowsMeta.currentPageTotalHeight, 1);\n    let shouldExtendContent = false;\n    if (rootRef != null && rootRef.current && height <= (rootRef == null ? void 0 : rootRef.current.clientHeight)) {\n      shouldExtendContent = true;\n    }\n    const size = {\n      width: needsHorizontalScrollbar ? columnsTotalWidth : 'auto',\n      height,\n      minHeight: shouldExtendContent ? '100%' : 'auto'\n    };\n    if (rootProps.autoHeight && currentPage.rows.length === 0) {\n      size.height = getMinimalContentHeight(apiRef, rootProps.rowHeight); // Give room to show the overlay when there no rows.\n    }\n    return size;\n  }, [apiRef, rootRef, columnsTotalWidth, rowsMeta.currentPageTotalHeight, needsHorizontalScrollbar, rootProps.autoHeight, rootProps.rowHeight, currentPage.rows.length]);\n  React.useEffect(() => {\n    apiRef.current.publishEvent('virtualScrollerContentSizeChange');\n  }, [apiRef, contentSize]);\n  const rootStyle = React.useMemo(() => {\n    const style = {};\n    if (!needsHorizontalScrollbar) {\n      style.overflowX = 'hidden';\n    }\n    if (rootProps.autoHeight) {\n      style.overflowY = 'hidden';\n    }\n    return style;\n  }, [needsHorizontalScrollbar, rootProps.autoHeight]);\n  apiRef.current.register('private', {\n    getRenderContext\n  });\n  return {\n    renderContext,\n    updateRenderZonePosition,\n    getRows,\n    getRootProps: (inputProps = {}) => _extends({\n      ref: handleRef,\n      onScroll: handleScroll,\n      onWheel: handleWheel,\n      onTouchMove: handleTouchMove\n    }, inputProps, {\n      style: inputProps.style ? _extends({}, inputProps.style, rootStyle) : rootStyle,\n      role: 'presentation'\n    }),\n    getContentProps: ({\n      style\n    } = {}) => ({\n      style: style ? _extends({}, style, contentSize) : contentSize,\n      role: 'presentation'\n    }),\n    getRenderZoneProps: () => ({\n      ref: renderZoneRef,\n      role: 'rowgroup'\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport const virtualizationStateInitializer = (state, props) => {\n  const virtualization = {\n    enabled: !props.disableVirtualization,\n    enabledForColumns: true\n  };\n  return _extends({}, state, {\n    virtualization\n  });\n};\nexport function useGridVirtualization(apiRef, props) {\n  /*\n   * API METHODS\n   */\n\n  const setVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled\n      })\n    }));\n  };\n  const setColumnVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabledForColumns: enabled\n      })\n    }));\n  };\n  const api = {\n    unstable_setVirtualization: setVirtualization,\n    unstable_setColumnVirtualization: setColumnVirtualization\n  };\n  useGridApiMethod(apiRef, api, 'public');\n\n  /*\n   * EFFECTS\n   */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(() => {\n    setVirtualization(!props.disableVirtualization);\n  }, [props.disableVirtualization]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","import * as React from 'react';\nexport const useFirstRender = callback => {\n  const isFirstRender = React.useRef(true);\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    callback();\n  }\n};","// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor(timeout = CLEANUP_TIMER_LOOP_MILLIS) {\n    this.timeouts = new Map();\n    this.cleanupTimeout = CLEANUP_TIMER_LOOP_MILLIS;\n    this.cleanupTimeout = timeout;\n  }\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n}","export class FinalizationRegistryBasedCleanupTracking {\n  constructor() {\n    this.registry = new FinalizationRegistry(unsubscribe => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  reset() {}\n}","import * as React from 'react';\nimport { TimerBasedCleanupTracking } from '../../utils/cleanupTracking/TimerBasedCleanupTracking';\nimport { FinalizationRegistryBasedCleanupTracking } from '../../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking';\n/**\n * Signal to the underlying logic what version of the public component API\n * of the data grid is exposed.\n */\nvar GridSignature = /*#__PURE__*/function (GridSignature) {\n  GridSignature[\"DataGrid\"] = \"DataGrid\";\n  GridSignature[\"DataGridPro\"] = \"DataGridPro\";\n  return GridSignature;\n}(GridSignature || {});\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {}\n\n// Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\nexport function createUseGridApiEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useGridApiEventHandler(apiRef, eventName, handler, options) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef();\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event, details) => {\n        if (!event.defaultMuiPrevented) {\n          var _handlerRef$current;\n          (_handlerRef$current = handlerRef.current) == null || _handlerRef$current.call(handlerRef, params, event, details);\n        }\n      };\n      subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact,\n      // The callback below will be called once this reference stops being retained\n      () => {\n        var _subscription$current;\n        (_subscription$current = subscription.current) == null || _subscription$current.call(subscription);\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event, details) => {\n          if (!event.defaultMuiPrevented) {\n            var _handlerRef$current2;\n            (_handlerRef$current2 = handlerRef.current) == null || _handlerRef$current2.call(handlerRef, params, event, details);\n          }\n        };\n        subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      }\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n      return () => {\n        var _subscription$current2;\n        (_subscription$current2 = subscription.current) == null || _subscription$current2.call(subscription);\n        subscription.current = null;\n      };\n    }, [apiRef, eventName, options]);\n  };\n}\nconst registryContainer = {\n  registry: null\n};\n\n// TODO: move to @mui/x-data-grid/internals\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCleanupTracking = () => {\n  var _registryContainer$re;\n  (_registryContainer$re = registryContainer.registry) == null || _registryContainer$re.reset();\n  registryContainer.registry = null;\n};\nexport const useGridApiEventHandler = createUseGridApiEventHandler(registryContainer);\nconst optionsSubscriberOptions = {\n  isFirst: true\n};\nexport function useGridApiOptionHandler(apiRef, eventName, handler) {\n  // Validate that only one per event name?\n  useGridApiEventHandler(apiRef, eventName, handler, optionsSubscriberOptions);\n}\nexport { GridSignature };","import * as React from 'react';\nexport function useGridApiMethod(privateApiRef, apiMethods, visibility) {\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    isFirstRender.current = false;\n    privateApiRef.current.register(visibility, apiMethods);\n  }, [privateApiRef, visibility, apiMethods]);\n  if (isFirstRender.current) {\n    privateApiRef.current.register(visibility, apiMethods);\n  }\n}","import { gridVisibleColumnDefinitionsSelector } from '../features/columns/gridColumnsSelector';\nimport { useGridSelector } from './useGridSelector';\nimport { useGridRootProps } from './useGridRootProps';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../features/columnGrouping/gridColumnGroupsSelector';\nimport { gridPinnedRowsCountSelector, gridRowCountSelector } from '../features/rows/gridRowsSelector';\nimport { useGridPrivateApiContext } from './useGridPrivateApiContext';\nexport const useGridAriaAttributes = () => {\n  var _rootProps$experiment;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  let role = 'grid';\n  if ((_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.ariaV7 && rootProps.treeData) {\n    role = 'treegrid';\n  }\n  return {\n    role,\n    'aria-colcount': visibleColumns.length,\n    'aria-rowcount': headerGroupingMaxDepth + 1 + pinnedRowsCount + totalRowCount,\n    'aria-multiselectable': !rootProps.disableMultipleRowSelection\n  };\n};","import * as React from 'react';\nexport function useGridLogger(privateApiRef, name) {\n  const logger = React.useRef(null);\n  if (logger.current) {\n    return logger.current;\n  }\n  const newLogger = privateApiRef.current.getLogger(name);\n  logger.current = newLogger;\n  return newLogger;\n}","import * as React from 'react';\nimport { isFunction } from '../../utils/utils';\nimport { useGridLogger } from './useGridLogger';\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    let targetElement;\n    if (isFunction(ref)) {\n      targetElement = ref();\n    } else {\n      targetElement = ref && ref.current ? ref.current : null;\n    }\n    if (targetElement && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      const boundElem = targetElement;\n      setAdded(true);\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        boundElem.removeEventListener(eventName, wrapHandler, options);\n      };\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [ref, wrapHandler, eventName, added, logger, options, apiRef]);\n};","import * as React from 'react';\nexport const GridPrivateApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridPrivateApiContext.displayName = 'GridPrivateApiContext';\n}\nexport function useGridPrivateApiContext() {\n  const privateApiRef = React.useContext(GridPrivateApiContext);\n  if (privateApiRef === undefined) {\n    throw new Error(['MUI: Could not find the data grid private context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the data grid.'].join('\\n'));\n  }\n  return privateApiRef;\n}","import * as React from 'react';\nimport { useLazyRef } from './useLazyRef';\nimport { useOnMount } from './useOnMount';\nimport { buildWarning } from '../../utils/warning';\nimport { fastObjectShallowCompare } from '../../utils/fastObjectShallowCompare';\nconst stateNotInitializedWarning = buildWarning(['MUI: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\nfunction applySelector(apiRef, selector) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n  return selector(apiRef.current.state);\n}\nconst defaultCompare = Object.is;\nexport const objectShallowCompare = fastObjectShallowCompare;\nconst createRefs = () => ({\n  state: null,\n  equals: null,\n  selector: null\n});\nexport const useGridSelector = (apiRef, selector, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      stateNotInitializedWarning();\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelector(apiRef, selector));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelector(apiRef, refs.current.selector);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};","import * as React from 'react';\nimport { gridPaginationRowRangeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector } from '../features/pagination/gridPaginationSelector';\nimport { gridExpandedSortedRowEntriesSelector } from '../features/filter/gridFilterSelector';\nexport const getVisibleRows = (apiRef, props) => {\n  let rows;\n  let range;\n  if (props.pagination && props.paginationMode === 'client') {\n    range = gridPaginationRowRangeSelector(apiRef);\n    rows = gridPaginatedVisibleSortedGridRowEntriesSelector(apiRef);\n  } else {\n    rows = gridExpandedSortedRowEntriesSelector(apiRef);\n    if (rows.length === 0) {\n      range = null;\n    } else {\n      range = {\n        firstRowIndex: 0,\n        lastRowIndex: rows.length - 1\n      };\n    }\n  }\n  return {\n    rows,\n    range\n  };\n};\n\n/**\n * Computes the list of rows that are reachable by scroll.\n * Depending on whether pagination is enabled, it will return the rows in the current page.\n * - If the pagination is disabled or in server mode, it equals all the visible rows.\n * - If the row tree has several layers, it contains up to `state.pageSize` top level rows and all their descendants.\n * - If the row tree is flat, it only contains up to `state.pageSize` rows.\n */\nexport const useGridVisibleRows = (apiRef, props) => {\n  const response = getVisibleRows(apiRef, props);\n  return React.useMemo(() => ({\n    rows: response.rows,\n    range: response.range\n  }), [response.rows, response.range]);\n};","import * as React from 'react';\nconst UNINITIALIZED = {};\n\n// See https://github.com/facebook/react/issues/14490 for when to use this.\nexport function useLazyRef(init, initArg) {\n  const ref = React.useRef(UNINITIALIZED);\n  if (ref.current === UNINITIALIZED) {\n    ref.current = init(initArg);\n  }\n  return ref;\n}","import * as React from 'react';\nconst EMPTY = [];\nexport function useOnMount(fn) {\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(fn, EMPTY);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","import { useLazyRef } from './useLazyRef';\nimport { useOnMount } from './useOnMount';\nclass Timeout {\n  constructor() {\n    this.currentId = 0;\n    this.clear = () => {\n      if (this.currentId !== 0) {\n        clearTimeout(this.currentId);\n        this.currentId = 0;\n      }\n    };\n    this.disposeEffect = () => {\n      return this.clear;\n    };\n  }\n  static create() {\n    return new Timeout();\n  }\n  start(delay, fn) {\n    this.clear();\n    this.currentId = setTimeout(fn, delay);\n  }\n}\nexport function useTimeout() {\n  const timeout = useLazyRef(Timeout.create).current;\n  useOnMount(timeout.disposeEffect);\n  return timeout;\n}","import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridArrowUpwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexport const GridArrowDownwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexport const GridKeyboardArrowRight = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexport const GridExpandMoreIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexport const GridFilterListIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\nexport const GridFilterAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexport const GridSearchIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexport const GridMenuIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexport const GridCheckCircleIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexport const GridColumnIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\"\n}), 'ColumnIcon');\nexport const GridSeparatorIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 19V5h2v14z\"\n}), 'Separator');\nexport const GridViewHeadlineIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\"\n}), 'ViewHeadline');\nexport const GridTableRowsIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z\"\n}), 'TableRows');\nexport const GridViewStreamIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 18h17v-6H4v6zM4 5v6h17V5H4z\"\n}), 'ViewStream');\nexport const GridTripleDotsVerticalIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'TripleDotsVertical');\nexport const GridCloseIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexport const GridAddIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexport const GridRemoveIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexport const GridLoadIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Load');\nexport const GridDragIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'Drag');\nexport const GridSaveAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexport const GridCheckIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexport const GridMoreVertIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\nexport const GridVisibilityOffIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexport const GridViewColumnIcon = createSvgIcon( /*#__PURE__*/_jsx(\"g\", {\n  children: /*#__PURE__*/_jsx(\"path\", {\n    d: \"M14.67,5v14H9.33V5H14.67z M15.67,19H21V5h-5.33V19z M8.33,19V5H3v14H8.33z\"\n  })\n}), 'ViewColumn');\nexport const GridClearIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\nexport const GridDeleteIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexport const GridDeleteForeverIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","export function isLeaf(node) {\n  return node.field !== undefined;\n}\n\n/**\n * A function used to process headerClassName params.\n */\n\n/**\n * The union type representing the [[GridColDef]] column header class type.\n */","var GridEditModes = /*#__PURE__*/function (GridEditModes) {\n  GridEditModes[\"Cell\"] = \"cell\";\n  GridEditModes[\"Row\"] = \"row\";\n  return GridEditModes;\n}(GridEditModes || {});\nvar GridCellModes = /*#__PURE__*/function (GridCellModes) {\n  GridCellModes[\"Edit\"] = \"edit\";\n  GridCellModes[\"View\"] = \"view\";\n  return GridCellModes;\n}(GridCellModes || {});\nvar GridRowModes = /*#__PURE__*/function (GridRowModes) {\n  GridRowModes[\"Edit\"] = \"edit\";\n  GridRowModes[\"View\"] = \"view\";\n  return GridRowModes;\n}(GridRowModes || {});\nexport { GridEditModes, GridCellModes, GridRowModes };","/**\n * Filter item definition interface.\n * @demos\n *   - [Custom filter operator](/x/react-data-grid/filtering/customization/#create-a-custom-operator)\n */\nvar GridLogicOperator = /*#__PURE__*/function (GridLogicOperator) {\n  GridLogicOperator[\"And\"] = \"and\";\n  GridLogicOperator[\"Or\"] = \"or\";\n  return GridLogicOperator;\n}(GridLogicOperator || {});\nexport { GridLogicOperator };","/**\n * Params passed to `apiRef.current.setEditCellValue`.\n */\nvar GridCellEditStartReasons = /*#__PURE__*/function (GridCellEditStartReasons) {\n  GridCellEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridCellEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridCellEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  GridCellEditStartReasons[\"pasteKeyDown\"] = \"pasteKeyDown\";\n  return GridCellEditStartReasons;\n}(GridCellEditStartReasons || {});\n/**\n * Params passed to the `cellEditStart` event.\n */\nvar GridCellEditStopReasons = /*#__PURE__*/function (GridCellEditStopReasons) {\n  GridCellEditStopReasons[\"cellFocusOut\"] = \"cellFocusOut\";\n  GridCellEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridCellEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridCellEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridCellEditStopReasons;\n}(GridCellEditStopReasons || {});\n/**\n * Params passed to the `cellEditStop event.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridCellEditStartReasons, GridCellEditStopReasons };","/**\n * Object passed as parameter in the row callbacks.\n * @demos\n *   - [Master detail](/x/react-data-grid/master-detail/)\n */\n/**\n * Object passed as parameter in the row `getRowClassName` callback prop.\n * @demos\n *   - [Styling rows](/x/react-data-grid/style/#styling-rows)\n */\n/**\n * Object passed as parameter in the row `getRowHeight` callback prop.\n */\n/**\n * The getRowHeight return value.\n */\nvar GridRowEditStartReasons = /*#__PURE__*/function (GridRowEditStartReasons) {\n  GridRowEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridRowEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridRowEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  return GridRowEditStartReasons;\n}(GridRowEditStartReasons || {});\n/**\n * Params passed to the `rowEditStart` event.\n */\nvar GridRowEditStopReasons = /*#__PURE__*/function (GridRowEditStopReasons) {\n  GridRowEditStopReasons[\"rowFocusOut\"] = \"rowFocusOut\";\n  GridRowEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridRowEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridRowEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridRowEditStopReasons;\n}(GridRowEditStopReasons || {});\n/**\n * Object passed as parameter in the row `getRowSpacing` callback prop.\n * @demos\n *   - [Row spacing](/x/react-data-grid/row-height/#row-spacing)\n */\n/**\n * The getRowSpacing return value.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridRowEditStartReasons, GridRowEditStopReasons };","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector as reselectCreateSelector } from 'reselect';\nimport { buildWarning } from './warning';\nconst cacheContainer = {\n  cache: new WeakMap()\n};\nconst missingInstanceIdWarning = buildWarning(['MUI: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, e.g. `mySelector(apiRef)`, or pass the instance ID explicitly, e.g. `mySelector(state, apiRef.current.instanceId)`.']);\nfunction checkIsAPIRef(value) {\n  return 'current' in value && 'instanceId' in value.current;\n}\nconst DEFAULT_INSTANCE_ID = {\n  id: 'default'\n};\nexport const createSelector = (a, b, c, d, e, f, ...rest) => {\n  if (rest.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam != null ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      const ve = e(state, instanceId);\n      return f(va, vb, vc, vd, ve);\n    };\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam != null ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      return e(va, vb, vc, vd);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam != null ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      return d(va, vb, vc);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam != null ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      return c(va, vb);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam != null ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      return b(va);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\nexport const createSelectorMemoized = (...args) => {\n  const selector = (...selectorArgs) => {\n    var _cache$get, _cache$get3;\n    const [stateOrApiRef, instanceId] = selectorArgs;\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId != null ? instanceId : DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        missingInstanceIdWarning();\n      }\n    }\n    const {\n      cache\n    } = cacheContainer;\n    if (cache.get(cacheKey) && (_cache$get = cache.get(cacheKey)) != null && _cache$get.get(args)) {\n      var _cache$get2;\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return (_cache$get2 = cache.get(cacheKey)) == null ? void 0 : _cache$get2.get(args)(state, cacheKey);\n    }\n    const newSelector = reselectCreateSelector(...args);\n    if (!cache.get(cacheKey)) {\n      cache.set(cacheKey, new Map());\n    }\n    (_cache$get3 = cache.get(cacheKey)) == null || _cache$get3.set(args, newSelector);\n    return newSelector(state, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCreateSelectorCache = () => {\n  cacheContainer.cache = new WeakMap();\n};","import { gridClasses } from '../constants/gridClasses';\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\nexport function getRowEl(cell) {\n  if (!cell) {\n    return null;\n  }\n  return findParentElementFromClassName(cell, gridClasses.row);\n}\n\n// TODO remove\nexport function isGridCellRoot(elem) {\n  return elem != null && elem.classList.contains(gridClasses.cell);\n}\nexport function isGridHeaderCellRoot(elem) {\n  return elem != null && elem.classList.contains(gridClasses.columnHeader);\n}\nfunction escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nfunction getGridRowElementSelector(id) {\n  return `.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`;\n}\nexport function getGridRowElement(root, id) {\n  return root.querySelector(getGridRowElementSelector(id));\n}\nexport function getGridCellElement(root, {\n  id,\n  field\n}) {\n  const rowSelector = getGridRowElementSelector(id);\n  const cellSelector = `.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`;\n  const selector = `${rowSelector} ${cellSelector}`;\n  return root.querySelector(selector);\n}\n\n// https://www.abeautifulsite.net/posts/finding-the-active-element-in-a-shadow-root/\nexport const getActiveElement = (root = document) => {\n  const activeEl = root.activeElement;\n  if (!activeEl) {\n    return null;\n  }\n  if (activeEl.shadowRoot) {\n    return getActiveElement(activeEl.shadowRoot);\n  }\n  return activeEl;\n};\nexport function isEventTargetInPortal(event) {\n  if (\n  // The target is not an element when triggered by a Select inside the cell\n  // See https://github.com/mui/material-ui/issues/10534\n  event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n    return true;\n  }\n  return false;\n}","import * as React from 'react';\nimport { fastObjectShallowCompare } from './fastObjectShallowCompare';\nexport function fastMemo(component) {\n  return /*#__PURE__*/React.memo(component, fastObjectShallowCompare);\n}","const is = Object.is;\nexport function fastObjectShallowCompare(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (!(a instanceof Object) || !(b instanceof Object)) {\n    return false;\n  }\n  let aLength = 0;\n  let bLength = 0;\n\n  /* eslint-disable no-restricted-syntax */\n  /* eslint-disable guard-for-in */\n  for (const key in a) {\n    aLength += 1;\n    if (!is(a[key], b[key])) {\n      return false;\n    }\n    if (!(key in b)) {\n      return false;\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-unused-vars */\n  for (const _ in b) {\n    bLength += 1;\n  }\n  /* eslint-enable no-restricted-syntax */\n  /* eslint-enable guard-for-in */\n\n  return aLength === bLength;\n}","export const isEscapeKey = key => key === 'Escape'; // TODO remove\nexport const isEnterKey = key => key === 'Enter'; // TODO remove\nexport const isTabKey = key => key === 'Tab'; // TODO remove\n\nexport const isSpaceKey = key => key === ' ';\nexport const isArrowKeys = key => key.indexOf('Arrow') === 0;\nexport const isHomeOrEndKeys = key => key === 'Home' || key === 'End';\nexport const isPageKeys = key => key.indexOf('Page') === 0;\nexport const isDeleteKeys = key => key === 'Delete' || key === 'Backspace';\n\n// Non printable keys have a name, e.g. \"ArrowRight\", see the whole list:\n// https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n// So event.key.length === 1 is often enough.\n//\n// However, we also need to ignore shortcuts, for example: select all:\n// - Windows: Ctrl+A, event.ctrlKey is true\n// - macOS: ⌘ Command+A, event.metaKey is true\nexport function isPrintableKey(event) {\n  return event.key.length === 1 && !event.ctrlKey && !event.metaKey;\n}\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = event => isEnterKey(event.key) || isDeleteKeys(event.key) || isPrintableKey(event);\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => isHomeOrEndKeys(key) || isArrowKeys(key) || isPageKeys(key) || isSpaceKey(key);\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => isTabKey(key) || isEscapeKey(key);","export function isNumber(value) {\n  return typeof value === 'number' && !Number.isNaN(value);\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n\n/**\n * Based on `fast-deep-equal`\n *\n * MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (Array.isArray(a)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entriesA = Array.from(a.entries());\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entries = Array.from(a.entries());\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n    const keys = Object.keys(a);\n    const length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b;\n}\n\n// Pseudo random number. See https://stackoverflow.com/a/47593316\nfunction mulberry32(a) {\n  return () => {\n    /* eslint-disable */\n    let t = a += 0x6d2b79f5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n    /* eslint-enable */\n  };\n}\nexport function randomNumberBetween(seed, min, max) {\n  const random = mulberry32(seed);\n  return () => min + (max - min) * random();\n}\nexport function deepClone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n}","export const buildWarning = (message, gravity = 'warning') => {\n  let alreadyWarned = false;\n  const cleanMessage = Array.isArray(message) ? message.join('\\n') : message;\n  return () => {\n    if (!alreadyWarned) {\n      alreadyWarned = true;\n      if (gravity === 'error') {\n        console.error(cleanMessage);\n      } else {\n        console.warn(cleanMessage);\n      }\n    }\n  };\n};\nexport const wrapWithWarningOnCall = (method, message) => {\n  if (process.env.NODE_ENV === 'production') {\n    return method;\n  }\n  const warning = buildWarning(message);\n  return (...args) => {\n    warning();\n    return method(...args);\n  };\n};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}"],"names":["_excluded","_t","_t2","_t3","_t4","_","t","pulseKeyframe","waveKeyframe","SkeletonRoot","name","slot","overridesResolver","props","styles","ownerState","root","variant","animation","hasChildren","withChildren","width","fitContent","height","heightAuto","theme","radiusUnit","shape","borderRadius","radiusValue","display","backgroundColor","vars","palette","Skeleton","bg","text","primary","mode","marginTop","marginBottom","transformOrigin","transform","Math","round","content","visibility","maxWidth","action","hover","inProps","ref","className","component","style","other","Boolean","children","classes","slots","useUtilityClasses","as","getSkeletonUtilityClass","SwitchRoot","edge","size","overflow","padding","boxSizing","position","flexShrink","zIndex","verticalAlign","colorAdjust","marginLeft","marginRight","thumb","switchBase","checked","SwitchSwitchBase","input","color","top","left","Switch","defaultColor","common","white","grey","transition","transitions","create","duration","shortest","disabled","defaultDisabledColor","track","opacity","switchTrackDisabled","activeChannel","hoverOpacity","active","main","mainChannel","SwitchTrack","onBackground","black","switchTrack","SwitchThumb","boxShadow","shadows","sx","composedClasses","icon","type","checkedIcon","getSwitchUtilityClass","forceDebug","window","localStorage","getItem","noop","noopLogger","debug","info","warn","error","LOG_LEVELS","getAppender","logLevel","appender","console","minLogLevelIdx","indexOf","Error","reduce","loggerObj","method","idx","args","message","Store","value","constructor","_value","this","listeners","subscribe","fn","add","delete","getSnapshot","update","forEach","l","Set","EventManager","maxListeners","warnOnce","events","on","eventName","listener","options","collection","highPriority","Map","regular","isFirst","set","removeListener","removeAllListeners","emit","highPriorityListeners","Array","from","keys","regularListeners","i","length","has","apply","once","that","oneTimeListener","SYMBOL_API_PRIVATE","Symbol","globalId","_typeof","o","iterator","prototype","toPropertyKey","r","e","toPrimitive","call","TypeError","String","GRID_DEFAULT_STRATEGY","GRID_STRATEGIES_PROCESSORS","rowTreeCreation","filtering","sorting","visibleRowsLookupCreation","useGridInitialization","inputApiRef","privateApiRef","publicApiRef","current","_publicApiRef$current","existingPrivateApi","state","privateApi","store","instanceId","id","getPublicApi","register","methods","Object","methodName","currentPrivateMethod","spying","target","publicApi","currentPublicMethod","caches","eventManager","createPrivateAPI","createPublicAPI","publishEvent","params","event","defaultMuiPrevented","undefined","isPropagationStopped","isSyntheticEvent","details","signature","DataGridPro","api","subscribeEvent","handler","useGridApiMethod","useGridApiInitialization","apiRef","getLogger","logger","toString","useGridLoggerFactory","controlStateMapRef","rawForceUpdate","registerControlState","controlStateItem","stateId","setState","reason","newState","ignoreSetState","updatedControlStateIds","controlState","oldSubState","stateSelector","newSubState","push","hasPropChanged","propModel","map","el","join","model","propOnChange","changeEvent","updateControlState","key","previousState","publicStateApi","forceUpdate","privateStateApi","useGridStateInitialization","processorsCache","isRunning","runAppliers","groupCache","values","appliers","callback","preProcessingPrivateApi","registerPipeProcessor","group","processor","processors","get","registerPipeApplier","applier","_appliers","otherAppliers","requestPipeProcessorsApplication","preProcessingPublicApi","unstable_applyPipeProcessors","context","acc","preProcessor","useGridPipeProcessing","availableStrategies","strategiesCache","strategyProcessingApi","registerStrategyProcessor","strategyName","processorName","cleanup","_ref","otherProcessors","groupPreProcessors","previousProcessor","getActiveStrategy","applyStrategyProcessor","activeStrategy","strategyGroup","_availableStrategyEnt","availableStrategyEntry","entries","find","strategy","isAvailable","setStrategyAvailability","useGridStrategyProcessing","getLocaleText","localeText","useGridLocaleText","rootProps","useGridInitializeState","initializer","isInitialized","sanitizeCellValue","delimiterCharacter","some","delimiter","includes","replace","serializeCellValue","cellParams","ignoreValueFormatter","_cellParams$value2","columnType","colDef","_cellParams$value","toISOString","formattedValue","CSVRow","rowString","isEmpty","addValue","getRowString","writeToClipboardPolyfill","data","span","document","createElement","whiteSpace","userSelect","textContent","body","appendChild","range","createRange","selectNode","selection","getSelection","removeAllRanges","addRange","execCommand","removeChild","columnMenuStateInitializer","columnMenu","open","useGridRegisterPipeProcessor","random","registerPreProcessor","useFirstRender","isFirstRender","useGridRegisterPipeApplier","defaultColumnTypes","columnsStateInitializer","_props$initialState","_props$columnVisibili","_props$initialState2","columnsState","columnTypes","columnsToUpsert","columns","initialState","columnVisibilityModel","keepOnlyColumnsToUpsert","DENSITY_FACTORS","compact","comfortable","standard","densityStateInitializer","density","factor","getColumnsToExport","fields","currentColumns","field","column","col","allColumns","filter","disableExport","defaultGetRowsToExport","_pinnedRows$top","_pinnedRows$bottom","filteredSortedRowIds","rowTree","selectedRows","getSelectedRows","bodyRows","pinnedRows","topPinnedRowsIds","row","bottomPinnedRowsIds","bottom","unshift","useGridCsvExport","useGridLogger","ignoreValueFormatterProp","unstable_ignoreValueFormatterDuringExport","csvExport","getDataAsCsv","_options$getRowsToExp","_options$includeHeade","_options$includeColum","rowIds","includeHeaders","includeColumnGroupsHeaders","CSVBody","getCellParams","serializeRow","trim","filteredColumns","headerRows","columnGroupLookup","unstable_getAllGroupDetails","maxColumnGroupsDepth","columnGroupPathsLookup","columnGroupPath","unstable_getColumnGroupPath","max","headerGroupRow","columnGroupId","columnGroup","headerName","groupId","mainHeaderRow","buildCSV","getRowsToExport","exportDataAsCsv","csv","blob","extension","filename","title","fullName","HTMLAnchorElement","url","URL","createObjectURL","a","href","download","click","setTimeout","revokeObjectURL","exportAs","Blob","utf8WithBom","Uint8Array","fileName","csvExportApi","addExportMenuButtons","initialValue","_options$csvOptions","csvOptions","disableToolbarButton","componentName","paginationStateInitializer","_props$paginationMode","paginationModel","autoPageSize","pagination","pageSize","mergeStateWithPaginationModel","rowCount","paginationModelProp","paginationState","_paginationModelProp$","pageCount","page","validPage","useGridRegisterStrategyProcessor","filterStateInitializer","_props$filterModel","filterModel","disableMultipleColumnsFiltering","filteredRowsLookup","filteredDescendantCountLookup","visibleRowsLookup","getVisibleRowsLookup","getVisibleRowsLookupState","tree","rows","createMemoizedValues","defaultMemoize","focusStateInitializer","focus","cell","columnHeader","columnHeaderFilter","columnGroupHeader","tabIndex","getLeftColumnIndex","currentColIndex","firstColIndex","lastColIndex","direction","getRightColumnIndex","preferencePanelStateInitializer","_props$initialState$p","preferencePanel","_excluded2","missingOnProcessRowUpdateErrorWarning","editingStateInitializer","editRows","rowsStateInitializer","getRowId","loading","rowCountProp","loadingProp","previousTree","previousTreeDepths","flatRowTreeCreationMethod","updates","rowId","depth","parent","groupingKey","groupingName","treeDepths","dataRowIds","createFlatRowTree","actions","idsToRemoveFromRootGroup","remove","idToDelete","insert","idToInsert","rootGroup","rootGroupChildren","updateFlatRowTree","getSelectionModelPropValue","selectionModelProp","prevSelectionModel","isArray","rowSelectionStateInitializer","_getSelectionModelPro","rowSelection","rowSelectionModel","sortingStateInitializer","_props$sortModel","sortModel","disableMultipleColumnsSorting","sortedRows","scrollIntoView","dimensions","clientHeight","scrollTop","offsetHeight","offsetTop","elementBottom","rowsMetaStateInitializer","rowsMeta","currentPageTotalHeight","positions","getValidRowHeight","rowHeightProp","defaultRowHeight","warningMessage","recurrentUnwrapGroupingColumnModel","columnGroupNode","parents","unwrappedGroupingModelToComplete","child","unwrapGroupingColumnModel","columnGroupingModel","unwrappedSubTree","getColumnGroupsHeaderStructure","orderedColumns","unwrappedGroupingModel","pinnedFields","getParents","_unwrappedGroupingMod","groupingHeaderStructure","maxDepth","haveSameParents","field1","field2","slice","depthStructure","structure","newField","_getParents$depth","columnFields","lastGroup","prevField","right","createGroupLookup","groupLookup","node","groupParam","subTreeLookup","columnGroupsStateInitializer","_props$experimentalFe","_props$columnGrouping","_props$columnGrouping2","_apiRef$current$state","experimentalFeatures","columnGrouping","visibleColumnFields","columnGroupsHeaderStructure","pinnedColumns","_unwrappedGroupingMod2","lookup","headerStructure","useDataGridComponent","composeClasses","cellCheckbox","columnHeaderCheckbox","updateSelectionColumn","selectionColumn","cellClassName","headerClassName","shouldHaveSelectionColumn","checkboxSelection","haveSelectionColumn","orderedFields","useGridRowSelectionPreProcessors","useGridRowsPreProcessors","initialCurrentPageRows","useGridVisibleRows","useTheme","currentPageRows","enrichPageRowsWithPinnedRows","headerFilteringEnabled","unstable_headerFilters","goToCell","colIndex","closestColumnToUse","visibleSortedRows","nextCellColSpanInfo","unstable_getCellColSpanInfo","spannedByColSpan","leftVisibleCellIndex","rightVisibleCellIndex","rowIndexRelativeToAllRows","findIndex","scrollToIndexes","rowIndex","getVisibleColumns","setCellFocus","goToHeader","setColumnHeaderFocus","goToHeaderFilter","setColumnHeaderFilterFocus","goToGroupHeader","setColumnGroupHeaderFocus","getRowIdFromIndex","_currentPageRows$rowI","handleColumnHeaderKeyDown","headerTitleNode","currentTarget","querySelector","gridClasses","columnHeaderTitleContainerContent","contains","getRootDimensions","viewportPageSize","getViewportPageSize","colIndexBefore","getColumnIndex","firstRowIndexInPage","lastRowIndexInPage","columnGroupMaxDepth","shouldPreventDefault","rightColIndex","leftColIndex","min","ctrlKey","metaKey","toggleColumnMenu","preventDefault","handleHeaderFilterKeyDown","isEditing","isHeaderMenuOpen","handleColumnGroupHeaderKeyDown","focusedColumnGroup","currentField","currentDepth","remainingRightColumns","remainingLeftColumns","handleCellKeyDown","cellMode","Edit","rowIndexBefore","shiftKey","nextRowIndex","checkIfCanStartEditing","useGridApiEventHandler","useGridKeyboardNavigation","runIfRowSelectionIsEnabled","propRowSelectionModel","lastRowToggled","onRowSelectionModelChange","disableMultipleRowSelection","disableRowSelectionOnClick","isRowSelectable","propIsRowSelectable","canHaveMultipleSelection","visibleRows","expandMouseRowRangeSelection","_lastRowToggled$curre","endId","startId","isSelected","isRowSelected","visibleRowIds","startIndex","endIndex","selectRowRange","setRowSelectionModel","DataGrid","getRowParams","rowNode","getRowNode","selectRow","resetSelection","newSelection","selectRows","ids","selectableIds","selectionLookup","getRow","allPagesRowIds","start","end","rowsBetweenStartAndEnd","selectionPublicApi","selectionPrivateApi","removeOutdatedSelection","keepNonExistentRowsSelected","currentSelection","rowsLookup","hasChanged","handleSingleRowSelection","hasCtrlKey","isMultipleSelectionDisabled","handleRowClick","_closest","closest","getAttribute","getColumn","preventSelectionOnShift","_window$getSelection","handleRowSelectionCheckboxChange","nativeEvent","handleHeaderSelectionCheckboxChange","rowsToBeSelected","checkboxSelectionVisibleOnly","getCellMode","focusCell","isNextRowSelected","newRowIndex","getRowIndexRelativeToVisibleRows","previousRowIndex","getAllRowIds","isStateControlled","useGridRowSelection","_props$initialState4","_props$slotProps2","previousColumnsProp","previousColumnTypesProp","onColumnVisibilityModelChange","setGridColumnsState","getAllColumns","useVisibleColumns","getColumnPosition","index","setColumnVisibilityModel","updateColumns","setColumnVisibility","isVisible","_columnVisibilityMode","newModel","getColumnIndexRelativeToVisibleColumns","setColumnIndex","targetIndexPosition","oldIndexPosition","updatedColumns","fieldRemoved","splice","targetIndex","oldIndex","setColumnWidth","_apiRef$current$getRo","_apiRef$current$getRo2","newColumn","hasBeenResized","viewportInnerSize","element","getColumnHeaderElement","columnApi","columnReorderApi","stateExportPreProcessing","prevState","_props$initialState$c","_props$initialState3","columnsStateToExport","columnVisibilityModelToExport","exportOnlyDirtyModels","colDefDimensions","propertyName","propertyValue","Infinity","stateRestorePreProcessing","_context$stateToResto","columnVisibilityModelToImport","stateToRestore","preferencePanelPreProcessing","_props$slotProps","ColumnsPanel","columnsPanel","slotProps","addColumnMenuItems","columnMenuItems","disableColumnSelector","prevInnerWidth","hydrateColumns","useGridColumns","currentPage","lastUpdateMs","Date","now","timeout","useTimeout","getRowIdProp","throttledRowsChange","cache","throttle","run","clear","throttleRemainingTimeMs","throttleRowsMs","setRows","prevCache","rowsBeforePartialUpdates","updateRows","nonPinnedRowsUpdates","pinnedRowsCache","prevModel","idLookup","previousCache","getRowModels","dataRows","idRowsLookup","_idRowsLookup$id","getRowsCount","setRowChildrenExpansion","isExpanded","currentNode","newNode","childrenExpanded","getRowGroupChildren","skipAutoGeneratedRows","applySorting","applyFiltering","groupNode","sortedRowIds","childId","setRowIndex","allRows","updatedRows","rowApi","unstable_replaceRows","firstRowToRender","newRows","dataRowIdToModelLookup","dataRowIdToIdLookup","rowModel","replacedRowId","rowTreeNodeConfig","rowProApi","groupRows","handleStrategyProcessorChange","handleStrategyActivityChange","applyHydrateRowsProcessor","response","totalTopLevelRowCount","areNewRowsAlreadyInState","isNewLoadingAlreadyInState","loadingPropBeforePartialUpdates","isNewRowCountAlreadyInState","rowCountPropBeforePartialUpdates","totalRowCount","useGridRows","useGridParamsApi","setCellColSpanInfo","columnIndex","cellColSpanInfo","sizes","getCellColSpanInfo","_lookup$current$rowId","calculateCellColSpan","minFirstColumnIndex","maxLastColumnIndex","columnsLength","colSpan","cellProps","computedWidth","j","nextColumnIndex","columnSpanningPublicApi","columnSpanningPrivateApi","calculateColSpan","minFirstColumn","maxLastColumn","handleColumnReorderChange","useGridColumnSpanning","_props$experimentalFe3","columnGroupingApi","_unwrappedGroupingMod3","handleColumnIndexChange","_props$columnGrouping3","_state$columns$ordere","_state$columns","_state$pinnedColumns","updateColumnGroupingState","_props$experimentalFe2","_apiRef$current$getPi","_apiRef$current$getPi2","_apiRef$current","getPinnedColumns","_unwrappedGroupingMod4","_unwrappedGroupingMod5","useGridColumnGrouping","cellModesModel","setCellModesModel","cellModesModelRef","prevCellModesModel","processRowUpdate","onProcessRowUpdateError","cellModesModelProp","onCellModesModelChange","runIfEditModeIsCell","editMode","Cell","throwIfNotEditable","isCellEditable","throwIfNotInMode","handleCellDoubleClick","isEditable","newParams","cellDoubleClick","handleCellFocusOut","View","cellFocusOut","which","escapeKeyDown","enterKeyDown","shiftTabKeyDown","tabKeyDown","printableKeyDown","pasteKeyDown","deleteKeyDown","handleCellEditStart","startCellEditModeParams","deleteValue","startCellEditMode","handleCellEditStop","cellToFocusAfter","runPendingEditCellValueMutation","ignoreModifications","stopCellEditMode","onCellEditStart","onCellEditStop","editingState","updateCellModesModel","useEventCallback","isNewModelDifferentFromProp","updateFieldInCellModesModel","newProps","_newModel$id","otherFields","updateOrDeleteFieldState","newEditingState","updateStateToStartCellEditMode","newValue","getCellValue","isProcessingProps","updateStateToStopCellEditMode","async","finishCellEditMode","moveFocusToRelativeCell","rowUpdate","getRowWithUpdatedValuesFromCellEditing","handleError","errorThrown","Promise","resolve","then","finalRowUpdate","catch","editingApi","editingPrivateApi","setCellEditingEditCellValue","_editingState$id","debounceMs","unstable_skipValueParser","skipValueParser","parsedValue","valueParser","changeReason","preProcessEditCellProps","valueSetter","useEnhancedEffect","idToIdLookup","copyOfPrevCellModes","_copyOfPrevCellModes$","_idToIdLookup$id","prevMode","originalId","useGridCellEditing","rowModesModel","setRowModesModel","rowModesModelRef","prevRowModesModel","focusTimeout","nextFocusedCell","rowModesModelProp","onRowModesModelChange","runIfEditModeIsRow","Row","getRowMode","rowParams","handleCellFocusIn","_nextFocusedCell$curr","rowFocusOut","clearTimeout","nextFieldToFocus","handleRowEditStart","startRowEditModeParams","fieldToFocus","startRowEditMode","handleRowEditStop","stopRowEditMode","onRowEditStart","onRowEditStop","updateRowModesModel","updateRowInRowModesModel","updateOrDeleteRowState","updateStateToStartRowEditMode","updateStateToStopRowEditMode","focusedField","finishRowEditMode","fieldProps","getRowWithUpdatedValuesFromRowEditing","setRowEditingEditCellValue","promises","otherFieldsProps","promise","processedProps","thisField","fieldColumn","_editingState$id2","all","copyOfPrevRowModesModel","_copyOfPrevRowModesMo","useGridRowEditing","debounceMap","isCellEditableProp","editable","renderEditCell","debounces","runCallback","debouncedField","editingSharedApi","setEditCellValue","maybeDebounce","setEditCellValueToCall","result","getRowWithUpdatedValues","unstable_getEditCellMeta","_editingState$id$fiel","editingSharedPrivateApi","useGridEditing","lastClickedCell","publishCellFocusOut","focusedCell","getColumnGroupHeaderFocus","columnIndexToFocus","visibleColumns","paginationMode","concat","rowIndexToFocus","rowToFocus","colSpanInfo","columnToFocus","handleColumnHeaderFocus","handleColumnGroupHeaderFocus","handleBlur","_event$relatedTarget","relatedTarget","handleCellMouseDown","handleDocumentClick","cellElement","getCellElement","handleCellModeChange","handleRowSet","handlePaginationModelChange","currentFocusedCell","focusApi","focusPrivateApi","doc","ownerDocument","rootElementRef","addEventListener","removeEventListener","useGridFocus","hideTimeout","immediateTimeout","hidePreferences","preferencePanelState","openedPanelValue","doNotHidePanel","hidePreferencesDelayed","showPreferences","panelId","labelId","preferencePanelToExport","useGridPreferencesPanel","onFilterModelChange","updateFilteredRows","isRowMatchingFilters","filterMode","disableEval","filteringResult","visibleRowsLookupState","addColumnMenuItem","filterable","disableColumnFilter","applyFilters","upsertFilterItem","item","items","itemIndex","filterItem","setFilterModel","upsertFilterItems","existingItems","deleteFilterItem","itemToDelete","showFilterPanel","targetColumnField","filterItemsWithValue","_column$filterOperato","filterOperator","filterOperators","operator","requiresFilterValue","newFilterItems","filterItemOnTarget","targetColumn","filters","hideFilterPanel","setFilterLogicOperator","logicOperator","setQuickFilterValues","quickFilterValues","filterApi","unstable_applyFilters","ignoreDiacritics","filterModelToExport","callbacks","FilterPanel","filterPanel","getRowsRef","useLazyRef","flatFilteringMethod","filterCache","passingFilterItems","passingQuickFilterValues","isRowPassing","footerId","handleColumnsChange","filterableColumnsLookup","updateVisibleRowsLookupState","quickFilterExcludeHiddenColumns","useGridFilter","onSortModelChange","upsertSortModel","sortItem","existingIdx","c","newSortModel","createSortItem","directionOverride","_col$sortingOrder2","existing","_col$sortingOrder","nextSort","sortingOrder","sort","sortable","sortingMode","sortRowList","setSortModel","sortColumn","allowMultipleSorting","sortApi","getSortModel","getSortedRows","getSortedRowIds","getRowIdFromRowIndex","sortModelToExport","flatSortingMethod","rootGroupNode","sortedChildren","handleColumnHeaderClick","latestColumns","useGridSorting","setDensity","newDensity","currentDensityState","newDensityState","densityApi","useGridDensity","visibleTopLevelRowCount","useGridSelector","densityFactor","rowHeight","floor","onPaginationModelChange","pageApi","setPage","currentModel","setPaginationModel","setPageSize","_props$rowCount","_context$stateToResto2","_props$rowCount2","handleUpdateAutoPageSize","pinnedRowsHeight","maximumPageSizeWithoutScrollBar","_apiRef$current$virtu","virtualScrollerRef","_props$rowCount3","useGridPagination","getRowHeight","getRowHeightProp","getRowSpacing","getEstimatedRowHeight","rowsHeightLookup","lastMeasuredRowIndex","hasRowWithAutoHeight","gridPaginationSelector","validRowHeight","hydrateRowsMeta","calculateRowProcessedSizes","baseCenter","isResized","autoHeight","needsFirstMeasurement","baseRowHeight","existingBaseRowHeight","rowHeightFromUser","estimatedRowHeight","initialHeights","test","_spacing$top","_spacing$bottom","indexRelativeToCurrentPage","spacing","isFirstVisible","isLastVisible","spacingTop","spacingBottom","processedSizes","maximumBaseSize","otherSizes","setRowHeight","debouncedHydrateRowsMeta","debounce","rowPositionsDebounceMs","storeMeasuredRowHeight","needsHydration","capitalize","rowHasAutoHeight","_rowsHeightLookup$cur2","getLastMeasuredRowIndex","setLastMeasuredRowIndex","resetRowHeights","rowsMetaApi","unstable_setLastMeasuredRowIndex","unstable_getRowHeight","unstable_getRowInternalSizes","_rowsHeightLookup$cur","unstable_setRowHeight","unstable_storeRowHeightMeasurement","rowsMetaPrivateApi","useGridRowsMeta","colRef","columnHeadersElementRef","scrollCoordinates","columnPositions","cellWidth","_visibleSortedRows$pa","clientWidth","abs","scrollLeft","_querySelector","_querySelector2","gridRowsMetaSelector","elementIndex","targetOffsetHeight","topPinnedRowsHeight","bottomPinnedRowsHeight","scroll","scrollApi","getScrollPosition","useGridScroll","showColumnMenu","hideColumnMenu","columnMenuState","columnLookup","visibleOrderedFields","fieldIndex","columnMenuApi","useGridColumnMenu","previousGridState","previousColumnVisibility","previousRows","updateGridColumnsForPrint","includeCheckboxes","exportedColumnFields","newColumnVisibilityModel","updateGridRowsForPrint","handlePrintWindowLoad","printWindow","normalizeOptions","copyStyles","hideToolbar","hideFooter","printDoc","contentDocument","gridRootElement","gridClone","cloneNode","contain","columnHeaders","columnHeadersInner","gridToolbarElementHeight","toolbarContainer","gridFooterElementHeight","footerContainer","_gridClone$querySelec","_gridClone$querySelec2","computedTotalHeight","columnHeaderHeight","gridFooterElement","container","innerHTML","defaultPageStyle","pageStyle","styleElement","createTextNode","head","bodyClassName","classList","split","stylesheetLoadPromises","rootCandidate","getRootNode","headStyleElements","querySelectorAll","tagName","newHeadStyleElements","sheet","styleCSS","cssRules","cssText","attributes","attr","setAttribute","nodeName","nodeValue","contentWindow","print","handlePrintWindowAfterPrint","_previousGridState$cu","restoreState","unstable_setVirtualization","printExportApi","exportDataAsPrint","exportState","gridRowsLookup","visibleRowCount","requestAnimationFrame","iframeEl","buildPrintWindow","onload","matchMedia","mql","matches","_options$printOptions","printOptions","useGridPrintExport","clipboardExport","clipboardCopyCellDelimiter","handleCopy","selectionEnd","selectionStart","textToCopy","navigator","clipboard","writeText","useGridNativeEventListener","onClipboardCopy","useGridClipboard","errorShown","rootDimensionsRef","fullDimensionsRef","totalHeaderHeight","updateGridDimensionsRef","_apiRef$current$rootE","rootElement","columnsTotalWidth","scrollBarSize","viewportOuterSize","hasScrollX","hasScrollY","scrollbarSize","scrollDiv","offsetWidth","scrollInformation","hasScrollXIfNoYScrollBar","hasScrollYIfNoXScrollBar","hasScroll","newFullDimensions","prevDimensions","savedSize","setSavedSize","debouncedSetSavedSize","previousSize","resize","computeSizeAndPublishResizeEvent","renderContext","getRenderContext","lastRowIndex","firstRowIndex","_apiRef$current$mainE","_previousSize$current","_previousSize$current2","mainEl","mainElementRef","computedStyle","ownerWindow","getComputedStyle","parseFloat","hasHeightChanged","hasWidthChanged","dimensionsApi","dimensionsPrivateApi","isFirstSizing","handleResize","isJSDOM","userAgent","onResize","useGridDimensions","onColumnHeaderClick","onColumnHeaderDoubleClick","onColumnHeaderOver","onColumnHeaderOut","onColumnHeaderEnter","onColumnHeaderLeave","onCellClick","onCellDoubleClick","onCellKeyDown","onPreferencePanelClose","onPreferencePanelOpen","onMenuOpen","onMenuClose","onRowDoubleClick","onRowClick","onStateChange","useGridEvents","statePersistenceApi","useGridStatePersistence","useGridVirtualization","VirtualScrollerRoot","styled","virtualScroller","GridVirtualScroller","useGridRootProps","clsx","VirtualScrollerContentRoot","virtualScrollerContent","GridVirtualScrollerContent","_props$style","overflowedContent","minHeight","VirtualScrollerRenderZoneRoot","virtualScrollerRenderZone","flexDirection","GridVirtualScrollerRenderZone","DataGridVirtualScroller","getRootProps","getContentProps","getRenderZoneProps","getRows","useGridVirtualScroller","GridOverlays","DataGridRaw","useDataGridProps","GridContextProvider","GridRoot","forwardedProps","GridHeader","GridBody","VirtualScrollerComponent","GridFooterPlaceholder","SUBMIT_FILTER_STROKE_TIME","filterDebounceMs","SUBMIT_FILTER_DATE_STROKE_TIME","propTypes","isRequired","columnBuffer","columnThreshold","components","componentsProps","disableColumnMenu","disableDensitySelector","disableVirtualization","ariaV7","warnIfFocusStateIsNotSynced","quickFilterLogicOperator","getCellClassName","getDetailPanelContent","getRowClassName","hideFooterPagination","hideFooterSelectedRowCount","nonce","onColumnOrderChange","onRowEditCommit","pageSizeOptions","label","rowBuffer","rowSpacingType","rowThreshold","showCellVerticalBorder","showColumnVerticalBorder","GridNoResultsOverlay","noResultsOverlayLabel","useGridApiContext","GridOverlay","GridColumnUnsortedIcon","nextSortDirection","Icon","columnSortedAscendingIcon","columnSortedDescendingIcon","iconSlots","BooleanCellTrueIcon","BooleanCellFalseIcon","ColumnMenuIcon","OpenFilterButtonIcon","FilterPanelDeleteIcon","ColumnFilteredIcon","ColumnSelectorIcon","ColumnUnsortedIcon","ColumnSortedAscendingIcon","ColumnSortedDescendingIcon","ColumnResizeIcon","DensityCompactIcon","DensityStandardIcon","DensityComfortableIcon","ExportIcon","MoreActionsIcon","TreeDataCollapseIcon","TreeDataExpandIcon","GroupingCriteriaCollapseIcon","GroupingCriteriaExpandIcon","DetailPanelExpandIcon","DetailPanelCollapseIcon","RowReorderIcon","QuickFilterIcon","QuickFilterClearIcon","ColumnMenuHideIcon","ColumnMenuSortAscendingIcon","ColumnMenuSortDescendingIcon","ColumnMenuFilterIcon","ColumnMenuManageColumnsIcon","ColumnMenuClearIcon","LoadIcon","FilterPanelAddIcon","FilterPanelRemoveAllIcon","ColumnReorderIcon","BaseCheckbox","BaseTextField","BaseFormControl","BaseSelect","BaseSwitch","BaseButton","BaseIconButton","BaseInputAdornment","BaseTooltip","BasePopper","BaseInputLabel","BaseSelectOption","native","BaseChip","DATA_GRID_DEFAULT_SLOTS_COMPONENTS","material","GridCell","SkeletonCell","GridSkeletonCell","ColumnHeaderFilterIconButton","GridColumnHeaderFilterIconButton","ColumnMenu","GridColumnMenu","ColumnHeaders","GridColumnHeaders","Footer","GridFooter","FooterRowCount","GridRowCount","Toolbar","PreferencesPanel","GridPreferencesPanel","LoadingOverlay","GridLoadingOverlay","NoResultsOverlay","NoRowsOverlay","GridNoRowsOverlay","Pagination","GridPagination","GridFilterPanel","GridColumnsPanel","G","Panel","GridPanel","GridRow","uncapitalizeObjectKeys","capitalizedObject","charAt","toLowerCase","groupForwardedProps","_props$forwardedProps","startsWith","DATA_GRID_FORCED_PROPS","hideFooterRowCount","disableColumnReorder","disableColumnResize","keepColumnPositionIfDraggedOutside","DATA_GRID_PROPS_DEFAULT_VALUES","defaultSlots","themedProps","allProps","useThemeProps","overrides","k","computeSlots","_themedProps$slotProp","GRID_ACTIONS_COLUMN_TYPE","GRID_ACTIONS_COL_DEF","aggregable","align","headerAlign","renderCell","getApplyQuickFilterFn","getApplyQuickFilterFnV7","GRID_BOOLEAN_COL_DEF","sortComparator","valueFormatter","pastedValueParser","stringToBoolean","getGridBooleanOperators","getApplyFilterFnV7","valueAsBoolean","InputComponent","GRID_CHECKBOX_SELECTION_FIELD","GRID_CHECKBOX_SELECTION_COL_DEF","resizable","disableReorder","valueGetter","renderHeader","throwIfNotDateObject","gridDateFormatter","toLocaleDateString","gridDateTimeFormatter","toLocaleString","GRID_DATE_COL_DEF","GRID_DATETIME_COL_DEF","dateRegex","dateTimeRegex","buildApplyFilterFn","compareFn","showTime","keepHours","year","month","day","hour","minute","match","Number","time","getTime","timeToCompare","setHours","getHours","getMinutes","getGridDateOperators","value1","value2","InputComponentProps","DEFAULT_GRID_COL_TYPE_KEY","getGridDefaultColumnTypes","string","number","date","dateTime","boolean","singleSelect","GRID_NUMERIC_COL_DEF","parseNumericValue","getGridNumericQuickFilterFn","isNaN","columnValue","getGridNumericOperators","GRID_SINGLE_SELECT_COL_DEF","getOptionLabel","getOptionValue","valueOptions","valueOption","option","colDefValueOptions","parseObjectValue","getGridSingleSelectOperators","filterItemValues","GRID_STRING_COL_DEF","minWidth","hideable","groupable","pinnable","getGridStringQuickFilterFn","filterRegex","RegExp","getRowFormattedValue","getGridStringOperators","disableTrim","filterItemValue","collator","Intl","Collator","sensitivity","usage","compare","val","filterValue","GLOBAL_API_REF","tagInternalFilter","isInternal","isInternalFilter","convertLegacyOperators","ops","op","getApplyFilterFn","filterFn","convertQuickFilterV7ToLegacy","GridColumnGroupHeader","_columnGroupsLookup$g","hasFocus","isLastColumn","headerCellRef","columnGroupsLookup","description","headerComponent","render","renderHeaderGroup","renderParams","showColumnBorder","isDragging","useId","elementId","draggableContainer","titleContainer","titleContainerContent","elementToFocus","publish","mouseEventsHandlers","onKeyDown","onFocus","onBlur","GridGenericColumnHeaderItem","columnMenuOpen","isResizing","sortDirection","isDraggable","columnMenuIconButton","columnTitleIconButtons","GridColumnHeaderRow","columnHeaderRow","GridColumnHeadersRoot","alignItems","borderBottom","borderTopLeftRadius","borderTopRightRadius","GridBaseColumnHeaders","role","GridColumnHeadersInnerRoot","columnHeaderDropZone","columnHeaderDraggableContainer","cursor","borderRight","GridColumnHeadersInner","innerRef","sortColumnLookup","filterColumnLookup","columnHeaderTabIndexState","columnGroupHeaderTabIndexState","columnHeaderFocus","columnGroupHeaderFocus","headerGroupingMaxDepth","columnVisibility","hasOtherElementInTabSequence","getInnerProps","getColumnHeaders","getColumnGroupHeaders","innerRefProp","minColumnIndex","dragCol","setDragCol","resizeCol","setResizeCol","useGridPrivateApiContext","hasVirtualization","handleInnerRef","useForkRef","setRenderContextRaw","prevRenderContext","prevScrollLeft","headerHeight","setRenderContext","nextRenderContext","columnHeadersContainerElementRef","getFirstColumnIndexToRenderRef","equalityCheck","b","every","updateInnerPosition","lastRowToRender","firstIndex","lastIndex","minFirstIndex","maxLastIndex","buffer","firstColumnToRender","firstColumnIndex","offset","handleScroll","_prevRenderContext$cu","_prevRenderContext$cu2","lastColumnIndex","canUpdateInnerPosition","isUIEvent","handleColumnResizeStart","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","getColumnsToRender","lastColumnToRender","renderedColumns","rootStyle","maxHeight","lineHeight","columnsToRender","isFirstColumn","GridColumnHeaderItem","filterItemsCounter","headerToRender","_apiRef$current$unsta","_apiRef$current$unsta2","rowStructure","firstColumnFieldToRender","firstGroupToRender","firstGroupIndex","lastColumnFieldToRender","lastGroupToRender","lastGroupIndex","visibleColumnGroupHeader","groupStructure","firstVisibleColumnIndex","leftOverflow","_column$computedWidth","elements","headerInfo","depthInfo","depthIndex","groupIndex","useGridColumnHeaders","MemoizedGridColumnHeaders","fastMemo","_rootProps$slotProps","_rootProps$slotProps2","selectedRowCount","selectedRowCountElement","rowCountElement","footerRowCount","paginationElement","preferencesPanel","toolbar","noRowsLabel","GridPaginationRoot","selectLabel","breakpoints","up","_rootProps$rowCount","lastPage","handlePageSizeChange","handlePageChange","isPageSizeIncludedInPageSizeOptions","count","rowsPerPageOptions","rowsPerPage","onPageChange","onRowsPerPageChange","EmptyCell","withBorderColor","refProp","selected","hovered","styleProp","containerWidth","focusedCellColumnIndexNotInRange","isNotVisible","onClick","onDoubleClick","onMouseEnter","onMouseLeave","onMouseOut","onMouseOver","treeDepth","editRowsState","handleRef","ariaRowIndex","editing","ResizeObserver","resizeObserver","entry","borderBoxSize","blockSize","contentRect","observe","disconnect","propHandler","publishClick","CellComponent","rowReordering","getCell","_editRowsState$rowId$","_editRowsState$rowId","disableDragEvents","editCellState","cellIsNotVisible","showRightBorder","indexRelativeToAllColumns","numberOfBaseSizes","maximumSize","rowStyle","property","parseInt","rowClassNames","_currentPage$range","randomNumber","rowType","cells","contentWidth","skeletonCell","emptyCellWidth","eventHandlers","MemoizedGridRow","GridRowCountRoot","margin","GridSelectedRowCountRoot","GridSelectedRowCount","rowSelectedText","GridMainContainerRoot","flexGrow","GridMainContainer","_rootProps$experiment","getAriaAttributes","useGridAriaAttributes","ariaAttributes","ColumnHeadersProps","rootRef","cellTabIndexState","elementToObserve","animationFrame","observer","cancelAnimationFrame","unobserve","columnHeadersRef","columnsContainerRef","hasDimensions","footer","GridOverlayWrapperRoot","shouldForwardProp","prop","overlayWrapper","overlayType","GridOverlayWrapperInner","overlayWrapperInner","inner","GridOverlayWrapper","_viewportInnerSize$he","_viewportInnerSize$wi","setViewportInnerSize","handleViewportSizeChange","_apiRef$current$getRo3","_apiRef$current$getRo4","showNoResultsOverlay","overlay","_rootProps$slotProps3","noRowsOverlay","noResultsOverlay","loadingOverlay","hasActions","getActions","GridActionsCell","focusElementRef","focusedButtonIndex","setFocusedButtonIndex","setOpen","buttonRef","ignoreCallToFocus","touchRippleRefs","menuId","buttonId","iconButtons","showInMenu","menuButtons","numberOfButtons","stop","preventScroll","focusableButtonIndex","hideMenu","handleTouchRippleRef","instance","handleButtonClick","actionsCell","getNewIndex","_options","indexMod","newIndex","stopPropagation","button","touchRippleRef","baseIconButton","moreActionsIcon","fontSize","onClose","menuList","autoFocusItem","closeMenu","renderActionsCell","GridBooleanCellRaw","booleanCellTrueIcon","booleanCellFalseIcon","titleAccess","GridBooleanCell","renderBooleanCell","cachedSupportsPreventScroll","doesSupportPreventScroll","_excluded3","_excluded4","EMPTY_CELL_PARAMS","isSelectionMode","GridCellWrapper","cellParamsWithAPI","managesOwnFocus","rootClasses","classNames","updatedRow","editCellStateRest","_rootProps$experiment2","childrenProp","onMouseDown","onMouseUp","onKeyUp","onDragEnter","onDragOver","valueToRender","cellRef","publishMouseUp","publishMouseDown","border","activeElement","focusableElement","scrollPosition","handleFocus","valueString","draggableEventHandlers","MemoizedCellWrapper","GridCellV7","_getActions","_rootProps$unstable_c","_rootProps$experiment4","canManageOwnFocus","unstable_cellSelection","MemoizedGridCellV7","GridEditBooleanCell","idProp","onValueChange","inputRef","valueState","setValueState","handleChange","htmlFor","baseCheckbox","onChange","renderEditBooleanCell","StyledInputBase","GridEditDateCell","valueProp","inputProps","isDateTime","valueTransformed","parsedDate","formattedDate","getTimezoneOffset","substr","parsed","formatted","parseValueToDate","setFullYear","hours","minutes","newFormattedDate","newParsedDate","_valueTransformed$par","_state$parsed","fullWidth","renderEditDateCell","GridEditInputCellRoot","editInputCell","typography","body2","GridEditInputCell","meta","endAdornment","loadIcon","renderEditInputCell","GridEditSingleSelectCell","_baseSelectProps$nati","initialOpen","getOptionLabelProp","getOptionValueProp","isSelectNative","baseSelect","MenuProps","otherBaseSelectProps","_inputRef$current","formattedTargetValue","onOpen","isKeyboardEvent","baseSelectOption","renderEditSingleSelectCell","counter","toggleFilter","getColumnHeaderParams","iconButton","columnFilteredIcon","baseTooltip","enterDelay","badgeContent","ColumnHeaderMenuIcon","columnMenuId","columnMenuButtonId","iconButtonRef","handleMenuIconClick","columnMenuIcon","isColumnSorted","isColumnFiltered","isColumnNumeric","_colDef$sortingOrder","_colDef$headerName","sortIndex","separatorSide","showColumnMenuIcon","setShowColumnMenuIcon","onDragStart","onDragEnd","columnHeaderSeparatorProps","handleExited","GridColumnHeaderMenu","ContentComponent","contentComponentProps","onExited","columnHeaderFilterIconButton","hideSortIcons","GridColumnHeaderSortIcon","draggableContainerProps","GridColumnHeaderSeparatorSides","GridColumnHeaderSeparatorRaw","side","Right","resizing","stopClick","columnResizeIcon","GridColumnHeaderSeparator","GridColumnHeaderSortIconRaw","iconElement","icons","iconProps","columnUnsortedIcon","getIcon","GridColumnHeaderTitleRoot","columnHeaderTitle","textOverflow","fontWeight","ColumnHeaderInnerTitle","GridColumnHeaderTitle","titleRef","tooltip","setTooltip","handleMouseOver","isOver","ariaSort","draggable","columnWidth","GridIconButtonContainerRoot","iconButtonContainer","GridIconButtonContainer","GridCellCheckboxForwardRef","isChecked","checkboxElement","rippleRef","_checkboxElement$curr","handleKeyDown","isSelectable","GridCellCheckboxRenderer","GridHeaderCheckbox","tabIndexState","paginatedVisibleRowIds","filteredSelection","selectionCandidates","currentSelectionSize","isIndeterminate","handleSelectionChange","p","indeterminate","GridFooterContainerRoot","justifyContent","borderTop","GridFooterContainer","GridOverlayRoot","alignSelf","columnHeadersStyles","columnSeparator","columnHeaderStyles","menuIcon","GridRootStyles","aggregationColumnHeader","aggregationColumnHeaderLabel","autosizing","editBooleanCell","cellContent","cellSkeleton","checkboxInput","headerFilterRow","columnHeaderTitleContainer","filterIcon","iconSeparator","menuIconButton","menuOpen","rowReorderCellPlaceholder","rowReorderCell","sortIcon","treeDataGroupingCell","treeDataGroupingCellToggle","detailPanelToggleCell","borderColor","TableCell","divider","getBorderColor","radius","fontWeightMedium","background","defaultChannel","disabledOpacity","default","flex","borderWidth","borderStyle","outline","overflowAnchor","borderBottomColor","groupingCriteriaCell","WebkitTapHighlightColor","outlineWidth","outlineOffset","shorter","borderBottomWidth","borderBottomStyle","touchAction","pointerEvents","breakInside","selectedOpacity","paper","booleanCell","secondary","gridGap","rowReorderCellContainer","borderRightWidth","borderRightStyle","groupingCriteriaCellToggle","densityValue","rootContainerRef","mountedState","setMountedState","GridMenuRoot","menu","modal","GridMenu","savedFocusRef","_savedFocusRef$curren","_savedFocusRef$curren2","HTMLElement","handleClickAway","basePopper","anchorEl","placement","TransitionProps","onClickAway","mouseEvent","popperOnExited","labelledby","GRID_COLUMN_MENU_SLOTS","columnMenuSortItem","GridColumnMenuSortItem","columnMenuFilterItem","GridColumnMenuFilterItem","columnMenuColumnsItem","GridColumnMenuColumnsItem","GRID_COLUMN_MENU_SLOT_PROPS","displayOrder","GridGenericColumnMenu","defaultSlotProps","orderedSlots","addDividers","processedComponents","processedSlotProps","mergedProps","currentSlotProps","defaultItems","userItems","defaultComponentKeys","sorted","leftItemProps","rightItemProps","isFinite","itemProps","processedComponentProps","customProps","Divider","useGridColumnMenuSlots","GridColumnMenuContainer","Component","otherProps","StyledMenuList","handleListKeyDown","autoFocus","showFilter","columnMenuFilterIcon","GridColumnMenuHideItem","toggleColumn","columnMenuHideIcon","GridColumnMenuManageItem","showColumns","columnMenuManageColumnsIcon","onSortMenuItemClick","getLabel","columnMenuSortAscendingIcon","columnMenuSortDescendingIcon","columnsPanelRow","GridColumnsPanelRoot","GridColumnsPanelRowRoot","GridIconButtonRoot","defaultSearchPredicate","searchValue","_rootProps$slotProps4","searchInputRef","setSearchValue","searchPredicate","autoFocusSearchField","disableHideAllButton","disableShowAllButton","getTogglableColumns","sortedColumns","toggleAllColumns","togglableColumns","handleSearchValueChange","togglableSortedColumns","firstSwitchRef","firstHideableColumnFound","isFirstHideableColumn","baseTextField","placeholder","control","baseSwitch","columnReorderIcon","baseButton","gridPanelClasses","GridPanelRoot","panel","GridPaperRoot","isPlaced","setIsPlaced","modifiers","enabled","phase","effect","setAnchorEl","columnHeadersElement","elevation","GridPanelContentRoot","panelContent","GridPanelContent","GridPanelFooterRoot","panelFooter","GridPanelFooter","GridPanelHeaderRoot","panelHeader","GridPanelHeader","GridPanelWrapperRoot","panelWrapper","isEnabled","GridPanelWrapper","disableEnforceFocus","TrapFocus","_preferencePanelState","GridFilterFormRoot","filterForm","FilterFormDeleteIcon","filterFormDeleteIcon","FilterFormLogicOperatorInput","filterFormLogicOperatorInput","FilterFormColumnInput","filterFormColumnInput","FilterFormOperatorInput","filterFormOperatorInput","FilterFormValueInput","filterFormValueInput","getColumnLabel","GridFilterForm","_rootProps$slotProps5","_rootProps$slotProps6","_rootProps$slotProps7","_rootProps$slotProps8","_currentColumn$filter2","hasMultipleFilters","deleteFilter","applyFilterChanges","multiFilterOperator","showMultiFilterOperators","disableMultiFilterOperator","applyMultiFilterOperatorChanges","logicOperators","And","Or","columnsSort","filterColumns","deleteIconProps","logicOperatorInputProps","operatorInputProps","columnInputProps","valueInputProps","filterableColumns","columnSelectId","columnSelectLabelId","operatorSelectId","operatorSelectLabelId","deleteIcon","logicOperatorInput","columnInput","operatorInput","valueInput","valueRef","filterSelectorRef","hasLogicOperatorColumn","baseFormControlProps","baseFormControl","isBaseSelectNative","baseInputLabelProps","baseInputLabel","baseSelectOptionProps","valueInputPropsOther","filteredFields","currentFilters","sortedFilteredColumns","currentColumn","currentOperator","_currentColumn$filter","changeColumn","newOperator","eraseItemValue","changeOperator","changeLogicOperator","_valueRef$current","filterPanelDeleteIcon","getLogicOperatorLocaleKey","applyValue","BooleanOperatorContainer","GridFilterInputBoolean","clearButton","labelProp","others","filterValueState","setFilterValueState","selectId","baseSelectProps","onFilterChange","shrink","displayEmpty","GridFilterInputDate","_item$value","InputProps","filterTimeout","applying","setIsApplying","_item$value2","itemValue","InputLabelProps","GridFilterInputMultipleSingleSelect","_resolvedColumn","_resolvedColumn2","helperText","TextFieldProps","resolvedColumn","isOptionEqualToValue","resolvedValueOptions","_resolvedColumn3","resolvedFormattedValueOptions","filteredValues","formattedOption","A","multiple","filterOptions","renderTags","getTagProps","baseChip","renderInput","GridFilterInputMultipleValue","freeSolo","inputValue","renderSingleSelectOptions","OptionComponent","SingleSelectOperatorContainer","GridFilterInputSingleSelect","_rootProps$slotProps$","currentValueOptions","_itemValue","GridFilterInputValue","newItem","fromInput","getGridFilter","lastFilterRef","placeholderFilter","filterFormProps","getColumnForNewFilter","disableAddFilterButton","disableRemoveAllButton","applyFilter","applyFilterLogicOperator","getDefaultFilter","nextColumnWithOperator","nextFieldName","_colDef$filterOperato","getNewFilter","nextColumnFieldName","shouldCloseFilterPanel","newFilter","startIcon","filterPanelAddIcon","filterPanelRemoveAllIcon","isSingleSelectColDef","getValueFromValueOptions","optionValue","GridCsvExportMenuItem","GridPrintExportMenuItem","GridToolbarExport","excelOptions","preProcessedButtons","GridToolbarExportContainer","exportButtonId","exportMenuId","handleMenuClose","exportIcon","prevOpen","GRID_EXPERIMENTAL_ENABLED","getDataGridUtilityClass","GRID_DETAIL_PANEL_TOGGLE_FIELD","GRID_DEFAULT_LOCALE_TEXT","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","toolbarQuickFilterPlaceholder","toolbarQuickFilterLabel","toolbarQuickFilterDeleteIconLabel","toolbarExport","toolbarExportLabel","toolbarExportCSV","toolbarExportPrint","toolbarExportExcel","columnsPanelTextFieldLabel","columnsPanelTextFieldPlaceholder","columnsPanelDragIconLabel","columnsPanelShowAllButton","columnsPanelHideAllButton","filterPanelAddFilter","filterPanelRemoveAll","filterPanelDeleteIconLabel","filterPanelLogicOperator","filterPanelOperator","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","filterPanelInputLabel","filterPanelInputPlaceholder","filterOperatorContains","filterOperatorEquals","filterOperatorStartsWith","filterOperatorEndsWith","filterOperatorIs","filterOperatorNot","filterOperatorAfter","filterOperatorOnOrAfter","filterOperatorBefore","filterOperatorOnOrBefore","filterOperatorIsEmpty","filterOperatorIsNotEmpty","filterOperatorIsAnyOf","headerFilterOperatorContains","headerFilterOperatorEquals","headerFilterOperatorStartsWith","headerFilterOperatorEndsWith","headerFilterOperatorIs","headerFilterOperatorNot","headerFilterOperatorAfter","headerFilterOperatorOnOrAfter","headerFilterOperatorBefore","headerFilterOperatorOnOrBefore","headerFilterOperatorIsEmpty","headerFilterOperatorIsNotEmpty","headerFilterOperatorIsAnyOf","filterValueAny","filterValueTrue","filterValueFalse","columnMenuLabel","columnMenuShowColumns","columnMenuManageColumns","columnMenuFilter","columnMenuHideColumn","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerRowSelected","footerTotalRows","footerTotalVisibleRows","visibleCount","totalCount","checkboxSelectionHeaderName","checkboxSelectionSelectAllRows","checkboxSelectionUnselectAllRows","checkboxSelectionSelectRow","checkboxSelectionUnselectRow","booleanCellTrueLabel","booleanCellFalseLabel","actionsCellMore","pinToLeft","pinToRight","unpin","treeDataGroupingHeaderName","treeDataExpand","treeDataCollapse","groupingColumnHeaderName","groupColumn","unGroupColumn","detailPanelToggle","expandDetailPanel","collapseDetailPanel","MuiTablePagination","rowReorderingHeaderName","aggregationMenuItemHeader","aggregationFunctionLabelSum","aggregationFunctionLabelAvg","aggregationFunctionLabelMin","aggregationFunctionLabelMax","aggregationFunctionLabelSize","Provider","gridColumnGroupingSelector","gridColumnGroupsUnwrappedModelSelector","_columnGrouping$unwra","gridColumnGroupsLookupSelector","_columnGrouping$looku","gridColumnGroupsHeaderStructureSelector","_columnGrouping$heade","gridColumnGroupsHeaderMaxDepthSelector","_columnGrouping$maxDe","gridColumnMenuSelector","gridColumnsStateSelector","gridColumnFieldsSelector","gridColumnLookupSelector","gridColumnDefinitionsSelector","allFields","gridColumnVisibilityModelSelector","gridVisibleColumnDefinitionsSelector","gridVisibleColumnFieldsSelector","gridColumnPositionsSelector","currentPosition","gridColumnsTotalWidthSelector","colCount","gridFilterableColumnDefinitionsSelector","gridFilterableColumnLookupSelector","COLUMNS_DIMENSION_PROPERTIES","hydrateColumnsWidth","rawState","viewportInnerWidth","columnsLookup","totalFlexUnits","widthAllocatedBeforeFlex","flexColumns","columnField","initialFreeSpace","computedColumnWidths","uniqueFlexColumns","flexColumnsLookup","frozenFields","freeze","frozen","loopOverFlexItems","violationsLookup","remainingFreeSpace","flexUnits","totalViolation","computeFlexColumnsWidth","getDefaultColTypeDef","createColumnsState","isInsideStateInitializer","currentState","columnsToKeep","columnsToUpsertLookup","existingState","columnsStateWithPortableColumns","columnsWithUpdatedDimensions","orderedFieldsLookup","cleanOrderedFields","newOrderedFields","newColumnLookup","newColDef","applyInitialState","mergeColumnsState","getFirstNonSpannedColumnToRender","firstNonSpannedColumnToRender","getFirstColumnIndexToRender","getTotalHeaderHeight","gridDensitySelector","gridDensityValueSelector","gridDensityFactorSelector","gridEditRowsStateSelector","gridFilterStateSelector","gridFilterModelSelector","filterState","gridQuickFilterValuesSelector","gridVisibleRowsLookupSelector","gridFilteredRowsLookupSelector","gridFilteredDescendantCountLookupSelector","gridExpandedSortedRowEntriesSelector","gridExpandedSortedRowIdsSelector","visibleSortedRowEntries","gridFilteredSortedRowEntriesSelector","gridFilteredSortedRowIdsSelector","filteredSortedRowEntries","gridFilteredSortedTopLevelRowEntriesSelector","rowTreeDepth","_rowTree$row$id","gridExpandedRowCountSelector","gridFilteredTopLevelRowCountSelector","visibleSortedTopLevelRows","gridFilterActiveItemsSelector","_filterModel$items","gridFilterActiveItemsLookupSelector","activeFilters","res","getDefaultGridFilterModel","getPublicApiRef","hasEval","cleanFilterItem","cleanItem","filterModelDisableMultiColumnsFilteringWarning","filterModelMissingItemIdWarning","filterModelMissingItemOperatorWarning","sanitizeFilterModel","hasSeveralItems","hasItemsWithoutIds","hasItemWithoutOperator","mergeStateWithFilterModel","filteringState","removeDiacritics","normalize","getFilterCallbackFromItem","_filterItem$value","parser","x","newFilterItem","hasUserFunctionLegacy","hasUserFunctionV7","applyFilterOnRow","v7","getRowValue","filterItemsApplierId","buildAggregatedFilterApplier","isRowMatchingFilterItems","Function","getHasEval","shouldApplyFilter","resultPerItemId","filterItemCore","JSON","stringify","replaceAll","shouldApplyItem","buildAggregatedFilterItemsApplier","isRowMatchingQuickFilter","_filterModel$quickFil","_filterModel$quickFil2","_filterModel$quickFil3","appliersPerField","quickFilterValue","usedCellParams","outer","v","_usedCellParams$field","buildAggregatedQuickFilterApplier","_isRowMatchingFilterI","_isRowMatchingQuickFi","isNotNull","passFilterLogic","allFilterItemResults","allQuickFilterResults","cleanedFilterItems","filterModelItems","cleanedFilterItemResults","cleanedQuickFilterResults","_filterModel$logicOpe","filterItemPredicate","filterItemResult","_filterModel$quickFil4","quickFilterValuePredicate","quickFilterValueResult","gridFocusStateSelector","gridFocusCellSelector","focusState","gridFocusColumnHeaderSelector","unstable_gridFocusColumnHeaderFilterSelector","unstable_gridFocusColumnGroupHeaderSelector","gridTabIndexStateSelector","gridTabIndexCellSelector","gridTabIndexColumnHeaderSelector","unstable_gridTabIndexColumnHeaderFilterSelector","unstable_gridTabIndexColumnGroupHeaderSelector","unstable_gridHeaderFilteringStateSelector","headerFiltering","unstable_gridHeaderFilteringEditFieldSelector","headerFilteringState","unstable_gridHeaderFilteringMenuSelector","gridPaginationModelSelector","gridPageSelector","gridPageSizeSelector","gridPageCountSelector","gridPaginationRowRangeSelector","visibleSortedTopLevelRowEntries","topLevelFirstRowIndex","topLevelLastRowIndex","topLevelFirstRow","topLevelRowsInCurrentPageCount","topLevelRowAdded","gridPaginatedVisibleSortedGridRowEntriesSelector","paginationRange","gridPaginatedVisibleSortedGridRowIdsSelector","visibleSortedRowIds","defaultPageSize","getPageCount","ceil","getDefaultGridPaginationModel","getValidPage","throwIfPageSizeExceedsTheLimit","signatureProp","gridPreferencePanelStateSelector","GridPreferencePanelsValue","gridRowSelectionStateSelector","selectedGridRowsCountSelector","selectedGridRowsSelector","selectedIdsLookupSelector","gridRowsStateSelector","gridRowCountSelector","gridRowsLoadingSelector","gridTopLevelRowCountSelector","gridRowsLookupSelector","gridRowsDataRowIdToIdLookupSelector","gridRowTreeSelector","gridRowGroupingNameSelector","gridRowTreeDepthsSelector","gridRowMaximumTreeDepthSelector","nodeCount","gridDataRowIdsSelector","gridAdditionalRowGroupsSelector","additionalRowGroups","gridPinnedRowsSelector","_rawPinnedRows$bottom","_rawPinnedRows$top","rawPinnedRows","rowEntry","_rowEntry$model","_rowEntry$model2","gridPinnedRowsCountSelector","GRID_ROOT_GROUP_ID","GRID_ID_AUTOGENERATED","buildRootGroup","groupingField","isAutoGenerated","childrenFromPath","checkGridRowIdIsValid","detailErrorMessage","getRowIdFromRowModel","createRowsInternalCache","getTopLevelRowCount","getRowsStateFromCache","unProcessedTree","unProcessedTreeDepths","unProcessedDataRowIds","groupingParamsWithHydrateRows","modify","idToActionLookup","isAutoGeneratedRow","getTreeNodeDescendants","parentId","validDescendants","childDescendants","updateCacheWithNewRows","_previousCache$update","_previousCache$update2","_previousCache$update3","uniqueUpdates","partialUpdates","alreadyAppliedActionsToRemove","partialRow","actionAlreadyAppliedToRow","_action","oldRow","actionTypeWithActionsToRemove","actionType","idsToRemove","calculatePinnedRowsHeight","getMinimalContentHeight","MissingRowIdError","getBaseCellParams","cellFocus","cellTabIndex","_getRowId","getRowElement","paramsApi","gridSortingStateSelector","gridSortedRowIdsSelector","sortingState","gridSortedRowEntriesSelector","sortedIds","gridSortModelSelector","gridSortColumnLookupSelector","sortModelDisableMultiColumnsSortingWarning","sanitizeSortModel","mergeStateWithSortModel","buildAggregatedSortingApplier","comparatorList","getSortCellParams","comparator","parseSortItem","rowList","compareRows","row1","row2","sortCellParams1","sortCellParams2","getNextGridSortDirection","currentIdx","gridNillComparator","v1","v2","gridStringOrNumberComparator","nillResult","gridNumberComparator","gridDateComparator","gridVirtualizationSelector","virtualization","gridVirtualizationEnabledSelector","gridVirtualizationColumnEnabledSelector","enabledForColumns","binarySearch","sliceStart","sliceEnd","pivot","getRenderableIndexes","areRenderContextsEqual","context1","context2","MEMOIZE_OPTIONS","maxSize","_currentPage$range3","_currentPage$range4","onRenderZonePositioning","renderZoneMinColumnIndex","renderZoneMaxColumnIndex","getRowProps","selectedRowsLookup","renderZoneRef","setRenderContextState","containerDimensions","setContainerDimensions","prevTotalWidth","hoveredRowId","setHoveredRowId","rowStyleCache","prevGetRowProps","prevRootRowStyle","getRenderedColumnsRef","indexOfColumnWithFocusedCell","getNearestIndexToRender","_currentPage$range2","lastMeasuredIndexRelativeToAllRows","allRowsMeasured","lastMeasuredIndexRelativeToCurrentPage","interval","exponentialSearch","computeRenderContext","updateRenderZonePosition","initialFirstColumnToRender","initialRenderContext","topRowsScrolledSincePreviousRender","bottomRowsScrolledSincePreviousRender","topColumnsScrolledSincePreviousRender","bottomColumnsScrolledSincePreviousRender","shouldSetState","handleWheel","handleTouchMove","indexOfRowWithFocusedCell","_params$id","needsHorizontalScrollbar","contentSize","shouldExtendContent","overflowX","overflowY","onRowRender","availableSpace","rowIndexOffset","renderedRows","isRowWithFocusedCellNotInRange","rowWithFocusedCell","isColumnWihFocusedCellNotInRange","rootRowStyle","rootRowProps","isRowWithFocusedCellRendered","_currentPage$range5","isRowNotVisible","lastVisibleRowIndex","columnWithFocusedCellNotInRange","renderedColumnsWithFocusedCell","tabbableCell","_ref2","rowProps","onScroll","onWheel","onTouchMove","virtualizationStateInitializer","setVirtualization","unstable_setColumnVirtualization","TimerBasedCleanupTracking","timeouts","cleanupTimeout","object","unsubscribe","unregisterToken","cleanupToken","unregister","reset","FinalizationRegistryBasedCleanupTracking","registry","FinalizationRegistry","GridSignature","ObjectToBeRetainedByReact","createUseGridApiEventHandler","registryContainer","cleanupTokensCounter","objectRetainedByReact","subscription","handlerRef","cleanupTokenRef","enhancedHandler","_handlerRef$current","_subscription$current","_handlerRef$current2","_subscription$current2","unstable_resetCleanupTracking","_registryContainer$re","optionsSubscriberOptions","useGridApiOptionHandler","apiMethods","pinnedRowsCount","treeData","newLogger","added","setAdded","wrapHandler","targetElement","boundElem","GridPrivateApiContext","applySelector","selector","acceptsApiRef","isOutputSelector","defaultCompare","is","objectShallowCompare","createRefs","equals","refs","didInit","getVisibleRows","UNINITIALIZED","init","initArg","EMPTY","useOnMount","Timeout","currentId","disposeEffect","delay","GridArrowUpwardIcon","d","GridArrowDownwardIcon","GridKeyboardArrowRight","GridExpandMoreIcon","GridFilterListIcon","GridFilterAltIcon","GridSearchIcon","GridMenuIcon","GridCheckCircleIcon","GridColumnIcon","GridSeparatorIcon","GridViewHeadlineIcon","GridTableRowsIcon","GridViewStreamIcon","GridTripleDotsVerticalIcon","GridCloseIcon","GridAddIcon","GridRemoveIcon","GridLoadIcon","GridDragIcon","GridSaveAltIcon","GridCheckIcon","GridMoreVertIcon","GridVisibilityOffIcon","GridViewColumnIcon","GridClearIcon","GridDeleteIcon","GridDeleteForeverIcon","isLeaf","GridEditModes","GridCellModes","GridRowModes","GridLogicOperator","GridCellEditStartReasons","GridCellEditStopReasons","GridRowEditStartReasons","GridRowEditStopReasons","createSelectorCreator","memoize","_len","arguments","memoizeOptionsFromArgs","_key","_len2","funcs","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","pop","_directlyPassedOption2","finalMemoizeOptions","dependencies","dep","dependencyTypes","getDependencies","memoizedResultFunc","assign","lastResult","recomputations","resetRecomputations","createSelector","cacheContainer","WeakMap","checkIsAPIRef","DEFAULT_INSTANCE_ID","f","rest","stateOrApiRef","instanceIdParam","isAPIRef","va","vb","vc","vd","ve","createSelectorMemoized","selectorArgs","_cache$get","_cache$get3","cacheKey","_cache$get2","newSelector","isOverflown","scrollHeight","scrollWidth","findParentElementFromClassName","elem","escapeOperandAttributeSelector","operand","getGridColumnHeaderElement","getGridRowElementSelector","getGridRowElement","getGridCellElement","isEventTargetInPortal","nodeType","fastObjectShallowCompare","aLength","bLength","isEscapeKey","isEnterKey","isTabKey","isSpaceKey","isPrintableKey","isNavigationKey","isHomeOrEndKeys","isArrowKeys","isPageKeys","isHideMenuKey","isNumber","isFunction","isObject","localStorageAvailable","setItem","removeItem","err","escapeRegExp","clamp","isDeepEqual","entriesA","entryA","ArrayBuffer","isView","source","flags","valueOf","hasOwnProperty","randomNumberBetween","seed","imul","deepClone","obj","structuredClone","parse","buildWarning","gravity","alreadyWarned","cleanMessage","NOT_FOUND","defaultEqualityCheck","func","equalityCheckOrOptions","providedOptions","_providedOptions$equa","_providedOptions$maxS","resultEqualityCheck","prev","next","createCacheKeyComparator","put","getEntries","cacheIndex","createLruCache","memoized","matchingEntry","clearCache"],"sourceRoot":""}