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,kCACA,iCACA,yBACA,6BACA,6BACA,0BACA,iCACA,kCACA,+BACA,mCACA,0BACA,4BACA,2BACA,2BACA,0BACA,+BACA,2BACA,sCACA,2BACA,6BACA,2BACA,6BACA,oCACA,8BACA,oCACA,kCACA,0BACA,yBACA,+BACA,kCACA,8BACA,6BACA,4BACA,4BACA,2BACA,wBACA,0BACA,8BACA,8BACA,mCACA,gCACA,8BACA,oCACA,6BACA,mCACA,yBACA,8BACA,qCACA,iCACA,sCACA,4BACA,4BACA,+BACA,0BACA,iCACA,iCACA,sBACA,2BACA,6BACA,uBACA,4BACA,yBACA,sBACA,oBACA,4BACA,uBACA,4BACA,qBACA,4BACA,+BACA,4BACA,2BACA,0BACA,iCACA,yBACA,kCACA,qBACA,yBACA,0BACA,uBACA,8BACA,4BACA,8BACA,kCACA,wBACA,uBACA,oBACA,qBACA,4BACA,0BACA,4BACA,iCACA,+BACA,0BACA,qBACA,qBACA,qBACA,2BACA,sBACA,0BACA,2BACA,+BACA,qBACA,+BACA,qBACA,yBACA,+BACA,wCACA,6BACA,8BACA,6BACA,qBACA,yBACA,yBACA,sBACA,6BACA,8BACA,2BACA,+BACA,sBACA,wBACA,uBACA,uBACA,sBACA,2BACA,uBACA,kCACA,uBACA,yBACA,uBACA,yBACA,gCACA,0BACA,gCACA,8BACA,sBACA,qBACA,2BACA,8BACA,0BACA,yBACA,wBACA,wBACA,uBACA,oBACA,sBACA,0BACA,0BACA,+BACA,4BACA,0BACA,gCACA,yBACA,+BACA,qBACA,0BACA,iCACA,6BACA,kCACA,wBACA,wBACA,2BACA,gCACA,qCACA,gCACA,yBACA,mBACA,uBACA,sCACA,+CACA,kDACA,kDACA,gDACA,iDAEA,6CACA,uEACA,0EACA,gEACA,oEACA,6DACA,8BACA,+BACA,mBACA,qBACA,2BACA,6BACA,4BACA,qCACA,wBACA,oCACA,0BACA,oDACA,2CC5NIsG,EAAU,CACdC,WAAW1H,EAAAA,EAAAA,OAAK,kBA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{"version":3,"file":"static/js/8105.b55e8d24.chunk.js","mappings":"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","sources":["../../../packages/core/BaseFeatureWidget/index.ts","../../../packages/core/Plugin.ts","../../../packages/core/rpc/methods/CoreGetRefNames.ts","../../../packages/core/rpc/methods/util.ts","../../../packages/core/rpc/methods/CoreGetFeatureDetails.ts","../../../packages/core/rpc/methods/CoreGetMetadata.ts","../../../packages/core/rpc/methods/CoreGetFileInfo.ts","../../../packages/core/rpc/methods/CoreGetFeatures.ts","../../../packages/core/rpc/methods/CoreRender.ts","../../../packages/core/rpc/methods/CoreFreeResources.ts","../../../packages/core/rpc/methods/CoreGetFeatureDensityStats.ts","../../../packages/core/data_adapters/CytobandAdapter/configSchema.ts","../../../packages/core/CorePlugin.ts","../../../packages/core/data_adapters/CytobandAdapter/index.ts","../../../packages/core/PluginManager.ts","../../../packages/core/ReExports/list.ts","../../../packages/core/ReExports/modules.tsx","../../../packages/core/TextSearch/BaseResults.ts","../../../packages/core/configuration/configurationSlot.ts","../../../packages/core/configuration/configurationSchema.ts","../../../packages/core/configuration/util.ts","../../../packages/core/data_adapters/BaseAdapter/util.ts","../../../packages/core/data_adapters/BaseAdapter/BaseAdapter.ts","../../../packages/core/data_adapters/BaseAdapter/BaseFeatureDataAdapter.ts","../../../packages/core/data_adapters/BaseAdapter/BaseSequenceAdapter.ts","../../../packages/core/data_adapters/dataAdapterCache.ts","../../../packages/core/pluggableElementTypes/AdapterType.ts","../../../packages/core/pluggableElementTypes/AddTrackWorkflowType.ts","../../../packages/core/pluggableElementTypes/ConnectionType.ts","../../../packages/core/pluggableElementTypes/DisplayType.ts","../../../packages/core/pluggableElementTypes/InternetAccountType.ts","../../../packages/core/pluggableElementTypes/PluggableElementBase.ts","../../../packages/core/util/map-obj.ts","../../../packages/core/pluggableElementTypes/RpcMethodType.ts","../../../packages/core/pluggableElementTypes/TextSearchAdapterType.ts","../../../packages/core/pluggableElementTypes/TrackType.ts","../../../packages/core/pluggableElementTypes/ViewType.ts","../../../packages/core/pluggableElementTypes/WidgetType.ts","../../../packages/core/pluggableElementTypes/models/BaseViewModel.ts","../../../packages/core/pluggableElementTypes/models/baseConnectionConfig.ts","../../../packages/core/pluggableElementTypes/models/BaseConnectionModelFactory.ts","../../../packages/core/pluggableElementTypes/models/BaseDisplayModel.tsx","../../../packages/core/pluggableElementTypes/models/baseInternetAccountConfig.ts","../../../packages/core/pluggableElementTypes/models/InternetAccountModel.ts","../../../packages/core/pluggableElementTypes/models/BaseTrackModel.ts","../../../packages/core/pluggableElementTypes/models/baseTrackConfig.ts","../../../packages/core/pluggableElementTypes/renderers/BoxRendererType.ts","../../../packages/core/pluggableElementTypes/renderers/RpcRenderedSvgGroup.tsx","../../../packages/core/pluggableElementTypes/renderers/CircularChordRendererType.tsx","../../../packages/core/pluggableElementTypes/renderers/ComparativeServerSideRendererType.ts","../../../packages/core/pluggableElementTypes/renderers/FeatureRendererType.ts","../../../packages/core/pluggableElementTypes/renderers/RendererType.ts","../../../packages/core/pluggableElementTypes/renderers/ServerSideRenderedContent.tsx","../../../packages/core/pluggableElementTypes/renderers/ServerSideRendererType.tsx","../../../packages/core/pluggableElementTypes/renderers/util/serializableFilterChain.ts","../../../packages/core/ui/CascadingMenuButton.tsx","../../../packages/core/ui/FatalErrorDialog.tsx","../../../packages/core/ui/FileSelector/LocalFileChooser.tsx","../../../packages/core/ui/FileSelector/UrlChooser.tsx","../../../packages/core/ui/LoadingEllipses.tsx","../../../packages/core/ui/colors.ts","../../../packages/core/util/Base1DUtils.ts","../../../packages/core/util/Base1DViewModel.ts","../../../packages/core/util/aborting.ts","../../../packages/core/util/blockTypes.ts","../../../packages/core/util/calculateDynamicBlocks.ts","../../../packages/core/util/calculateStaticBlocks.ts","../../../packages/core/util/color/cssColorsLevel4.ts","../../../packages/core/util/color/index.ts","../../../packages/core/util/dedupe.ts","../../../packages/core/util/idMaker.ts","../../../packages/core/util/io/RemoteFileWithRangeCache.ts","../../../packages/core/util/io/index.ts","../../../packages/core/util/jexl.ts","../../../packages/core/util/jexlStrings.ts","../../../packages/core/util/layouts/GranularRectLayout.ts","../../../packages/core/util/layouts/MultiLayout.ts","../../../packages/core/util/layouts/PrecomputedLayout.ts","../../../packages/core/util/layouts/PrecomputedMultiLayout.js","../../../packages/core/util/layouts/SceneGraph.ts","../../../packages/core/util/mst-reflection.ts","../../../packages/core/util/offscreenCanvasPonyfill.tsx","../../../packages/core/util/offscreenCanvasUtils.tsx","../../../packages/core/util/range.ts","../../../packages/core/util/rxjs.ts","../../../packages/core/util/simpleFeature.ts","../../../packages/core/util/stats.ts","../../../packages/core/util/tracks.ts","../../../packages/core/util/types/index.ts","../../../packages/core/util/types/mst.ts","../../../packages/core/util/useMeasure.ts","../../../packages/core/util/when.ts","../../../plugins/alignments/src/MismatchParser/index.ts","../../../plugins/alignments/src/CramAdapter/configSchema.ts","../../../plugins/alignments/src/CramAdapter/index.ts","../../../plugins/alignments/src/BamAdapter/configSchema.ts","../../../plugins/alignments/src/BamAdapter/index.ts","../../../plugins/alignments/src/HtsgetBamAdapter/configSchema.ts","../../../plugins/alignments/src/HtsgetBamAdapter/index.ts","../../../plugins/alignments/src/SNPCoverageAdapter/configSchema.ts","../../../plugins/alignments/src/SNPCoverageAdapter/index.ts","../../../plugins/alignments/src/SNPCoverageRenderer/configSchema.ts","../../../plugins/alignments/src/SNPCoverageRenderer/SNPCoverageRenderer.ts","../../../plugins/alignments/src/SNPCoverageRenderer/index.ts","../../../plugins/alignments/src/PileupRenderer/PileupLayoutSession.ts","../../../plugins/alignments/src/PileupRenderer/layoutFeatures.ts","../../../plugins/alignments/src/PileupRenderer/sortUtil.ts","../../../plugins/alignments/src/PileupRenderer/layoutFeature.ts","../../../plugins/alignments/src/PileupRenderer/util.ts","../../../plugins/alignments/src/PileupRenderer/colorBy.ts","../../../plugins/alignments/src/PileupRenderer/getAlignmentShapeColor.ts","../../../plugins/alignments/src/PileupRenderer/renderAlignment.ts","../../../plugins/alignments/src/PileupRenderer/renderAlignmentShape.ts","../../../plugins/alignments/src/PileupRenderer/renderPerBaseQuality.ts","../../../plugins/alignments/src/PileupRenderer/renderPerBaseLettering.ts","../../../plugins/alignments/src/PileupRenderer/renderModifications.ts","../../../plugins/alignments/src/PileupRenderer/renderMethylation.ts","../../../plugins/alignments/src/PileupRenderer/renderMismatches.ts","../../../plugins/alignments/src/PileupRenderer/renderSoftClipping.ts","../../../plugins/alignments/src/PileupRenderer/makeImageData.ts","../../../plugins/alignments/src/PileupRenderer/PileupRenderer.ts","../../../plugins/alignments/src/PileupRenderer/configSchema.ts","../../../plugins/alignments/src/PileupRenderer/components/PileupRendering.tsx","../../../plugins/alignments/src/PileupRenderer/index.ts","../../../plugins/alignments/src/LinearAlignmentsDisplay/models/model.tsx","../../../plugins/alignments/src/LinearAlignmentsDisplay/components/AlignmentsDisplay.tsx","../../../plugins/alignments/src/LinearAlignmentsDisplay/index.ts","../../../plugins/alignments/src/LinearAlignmentsDisplay/models/configSchema.ts","../../../plugins/alignments/src/LinearSNPCoverageDisplay/components/Tooltip.tsx","../../../plugins/alignments/src/shared/index.ts","../../../plugins/alignments/src/LinearSNPCoverageDisplay/models/model.ts","../../../plugins/alignments/src/LinearSNPCoverageDisplay/index.ts","../../../plugins/alignments/src/LinearSNPCoverageDisplay/models/configSchema.ts","../../../plugins/alignments/src/shared/BaseDisplayComponent.tsx","../../../plugins/alignments/src/LinearReadArcsDisplay/components/ReactComponent.tsx","../../../plugins/alignments/src/LinearReadArcsDisplay/configSchema.ts","../../../plugins/alignments/src/LinearReadArcsDisplay/model.tsx","../../../plugins/alignments/src/LinearReadArcsDisplay/index.ts","../../../plugins/alignments/src/LinearReadCloudDisplay/components/ReactComponent.tsx","../../../plugins/alignments/src/LinearReadCloudDisplay/configSchema.ts","../../../plugins/alignments/src/LinearReadCloudDisplay/model.tsx","../../../plugins/alignments/src/LinearReadCloudDisplay/index.ts","../../../plugins/alignments/src/AlignmentsTrack/index.ts","../../../plugins/alignments/src/AlignmentsTrack/configSchemaF.ts","../../../plugins/alignments/src/AlignmentsFeatureDetail/index.ts","../../../plugins/alignments/src/PileupRPC/util.ts","../../../plugins/alignments/src/PileupRPC/base.ts","../../../plugins/alignments/src/PileupRPC/methods/GetReducedFeatures.ts","../../../plugins/alignments/src/PileupRPC/methods/GetVisibleModifications.ts","../../../plugins/alignments/src/PileupRPC/methods/GetGlobalValueForTag.ts","../../../plugins/alignments/src/PileupRPC/index.ts","../../../plugins/alignments/src/GuessAlignmentsTypes/index.ts","../../../plugins/alignments/src/LinearPileupDisplay/configSchema.ts","../../../plugins/alignments/src/LinearPileupDisplay/components/LinearPileupDisplayBlurb.tsx","../../../plugins/alignments/src/LinearPileupDisplay/model.ts","../../../plugins/alignments/src/LinearPileupDisplay/index.ts","../../../plugins/alignments/src/index.ts","../../../plugins/alignments/src/shared/color.ts","../../../plugins/alignments/src/util.ts","../../../plugins/breakpoint-split-view/src/BreakpointSplitView/util.ts","../../../plugins/circular-view/src/CircularView/models/viewportVisibleRegion.ts","../../../plugins/circular-view/src/CircularView/models/slices.ts","../../../plugins/circular-view/src/CircularView/models/CircularView.ts","../../../plugins/circular-view/src/BaseChordDisplay/components/Loading.tsx","../../../plugins/circular-view/src/BaseChordDisplay/components/DisplayError.tsx","../../../plugins/circular-view/src/BaseChordDisplay/components/BaseChordDisplay.tsx","../../../plugins/circular-view/src/BaseChordDisplay/models/renderReaction.ts","../../../plugins/circular-view/src/BaseChordDisplay/models/configSchema.ts","../../../plugins/circular-view/src/BaseChordDisplay/models/model.tsx","../../../plugins/circular-view/src/index.ts","../../../plugins/circular-view/src/CircularView/index.ts","../../../plugins/circular-view/src/LaunchCircularView/index.ts","../../../plugins/config/src/ConfigurationEditorWidget/components/JsonEditor.tsx","../../../plugins/config/src/ConfigurationEditorWidget/model.ts","../../../plugins/config/src/ConfigurationEditorWidget/index.tsx","../../../plugins/config/src/FromConfigAdapter/configSchema.ts","../../../plugins/config/src/FromConfigRegionsAdapter/configSchema.ts","../../../plugins/config/src/FromConfigSequenceAdapter/configSchema.ts","../../../plugins/config/src/RefNameAliasAdapter/configSchema.ts","../../../plugins/config/src/index.ts","../../../plugins/config/src/FromConfigAdapter/index.ts","../../../plugins/config/src/FromConfigRegionsAdapter/index.ts","../../../plugins/config/src/FromConfigSequenceAdapter/index.ts","../../../plugins/config/src/RefNameAliasAdapter/index.ts","../../../plugins/data-management/src/AddConnectionWidget/model.ts","../../../plugins/data-management/src/AddConnectionWidget/index.ts","../../../plugins/data-management/src/AddTrackWidget/model.ts","../../../plugins/data-management/src/AddTrackWidget/index.ts","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/configSchema.ts","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/index.ts","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/model.ts","../../../plugins/data-management/src/PluginStoreWidget/model.ts","../../../plugins/data-management/src/PluginStoreWidget/index.ts","../../../plugins/data-management/src/ucsc-trackhub/configSchema.ts","../../../plugins/data-management/src/ucsc-trackhub/model.ts","../../../plugins/data-management/src/ucsc-trackhub/index.ts","../../../plugins/dotplot-view/src/DotplotView/components/util.ts","../../../plugins/linear-genome-view/src/BaseLinearDisplay/components/Block.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/Cytobands.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/TrackLabel.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/TrackLabelContainer.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/TrackRenderingContainer.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/TrackContainer.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/hooks.ts","../../../plugins/linear-genome-view/src/LinearGenomeView/components/VerticalGuide.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/Rubberband.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/Scalebar.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/Gridlines.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/CenterLine.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/TracksContainer.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/LinearGenomeView.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/OverviewRubberband.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/OverviewScalebar.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/RefNameAutocomplete/util.ts","../../../plugins/linear-genome-view/src/LinearGenomeView/components/RefNameAutocomplete/EndAdornment.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/RefNameAutocomplete/AutocompleteTextField.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/RefNameAutocomplete/index.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/RubberbandSpan.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/util.ts","../../../plugins/linear-genome-view/src/LinearGenomeView/components/MiniControls.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/ZoomControls.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/SearchBox.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/Header.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/model.ts","../../../plugins/linear-genome-view/src/LinearGenomeView/index.ts","../../../plugins/linear-genome-view/src/LinearGenomeView/svgcomponents/SVGBackground.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/svgcomponents/SVGRegionSeparators.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/svgcomponents/SVGTrackLabel.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/svgcomponents/SVGTracks.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/svgcomponents/SVGRuler.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/svgcomponents/SVGScalebar.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/svgcomponents/SVGHeader.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/svgcomponents/SVGLinearGenomeView.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/util.ts","../../../plugins/linear-genome-view/src/BaseLinearDisplay/models/configSchema.ts","../../../packages/core/util/compositeMap.ts","../../../plugins/linear-genome-view/src/BaseLinearDisplay/components/LinearBlocks.tsx","../../../plugins/linear-genome-view/src/BaseLinearDisplay/components/Tooltip.tsx","../../../plugins/linear-genome-view/src/BaseLinearDisplay/components/BlockMsg.tsx","../../../plugins/linear-genome-view/src/BaseLinearDisplay/components/BaseLinearDisplay.tsx","../../../plugins/linear-genome-view/src/BaseLinearDisplay/components/ServerSideRenderedBlockContent.tsx","../../../plugins/linear-genome-view/src/BaseLinearDisplay/models/serverSideRenderedBlock.ts","../../../plugins/linear-genome-view/src/BaseLinearDisplay/models/util.ts","../../../plugins/linear-genome-view/src/BaseLinearDisplay/models/renderSvg.tsx","../../../plugins/linear-genome-view/src/BaseLinearDisplay/models/TrackHeightMixin.tsx","../../../plugins/linear-genome-view/src/BaseLinearDisplay/components/TooLargeMessage.tsx","../../../plugins/linear-genome-view/src/BaseLinearDisplay/models/autorunFeatureDensityStats.ts","../../../plugins/linear-genome-view/src/BaseLinearDisplay/models/FeatureDensityMixin.tsx","../../../plugins/linear-genome-view/src/BaseLinearDisplay/models/BaseLinearDisplayModel.tsx","../../../plugins/linear-genome-view/src/LinearBareDisplay/configSchema.ts","../../../plugins/linear-genome-view/src/LinearBareDisplay/model.ts","../../../plugins/linear-genome-view/src/LinearBareDisplay/index.ts","../../../plugins/linear-genome-view/src/LinearBasicDisplay/configSchema.ts","../../../plugins/linear-genome-view/src/LinearBasicDisplay/model.ts","../../../plugins/linear-genome-view/src/FeatureTrack/configSchema.ts","../../../plugins/linear-genome-view/src/BasicTrack/configSchema.ts","../../../plugins/linear-genome-view/src/index.ts","../../../plugins/linear-genome-view/src/FeatureTrack/index.ts","../../../plugins/linear-genome-view/src/BasicTrack/index.ts","../../../plugins/linear-genome-view/src/LinearBasicDisplay/index.ts","../../../plugins/linear-genome-view/src/LaunchLinearGenomeView/index.ts","../../../plugins/variants/src/VcfFeature/util.ts","../../../plugins/variants/src/VcfFeature/index.ts","../../../plugins/variants/src/VcfAdapter/configSchema.ts","../../../plugins/variants/src/VcfTabixAdapter/configSchema.ts","../../../plugins/variants/src/VariantTrack/configSchema.ts","../../../plugins/variants/src/ChordVariantDisplay/models/configSchema.ts","../../../plugins/variants/src/ChordVariantDisplay/models/stateModelFactory.ts","../../../plugins/variants/src/LinearVariantDisplay/model.ts","../../../plugins/variants/src/LinearVariantDisplay/index.ts","../../../plugins/variants/src/LinearVariantDisplay/configSchema.ts","../../../plugins/variants/src/StructuralVariantChordRenderer/configSchema.ts","../../../plugins/variants/src/StructuralVariantChordRenderer/Chord.tsx","../../../plugins/variants/src/StructuralVariantChordRenderer/ReactComponent.tsx","../../../plugins/variants/src/VariantFeatureWidget/index.ts","../../../plugins/variants/src/index.ts","../../../plugins/variants/src/VariantTrack/index.ts","../../../plugins/variants/src/VcfAdapter/index.ts","../../../plugins/variants/src/VcfTabixAdapter/index.ts","../../../plugins/variants/src/extensionPoints.ts","../../../plugins/variants/src/StructuralVariantChordRenderer/index.ts","../../../plugins/variants/src/ChordVariantDisplay/index.ts","../../../plugins/wiggle/src/LinearWiggleDisplay/components/WiggleDisplayComponent.tsx","../../../plugins/wiggle/src/WiggleBaseRenderer.tsx","../../../plugins/wiggle/src/BigWigAdapter/configSchema.ts","../../../plugins/wiggle/src/QuantitativeTrack/configSchema.ts","../../../plugins/wiggle/src/MultiQuantitativeTrack/configSchema.ts","../../../plugins/wiggle/src/MultiWiggleAdapter/configSchema.ts","../../../plugins/wiggle/src/configSchema.ts","../../../plugins/wiggle/src/DensityRenderer/configSchema.ts","../../../plugins/wiggle/src/util.ts","../../../plugins/wiggle/src/drawxy.ts","../../../plugins/wiggle/src/DensityRenderer/DensityRenderer.ts","../../../plugins/wiggle/src/WiggleRendering.tsx","../../../plugins/wiggle/src/XYPlotRenderer/XYPlotRenderer.ts","../../../plugins/wiggle/src/XYPlotRenderer/configSchema.ts","../../../plugins/wiggle/src/LinePlotRenderer/configSchema.ts","../../../plugins/wiggle/src/LinePlotRenderer/LinePlotRenderer.ts","../../../plugins/wiggle/src/shared/configShared.ts","../../../plugins/wiggle/src/Tooltip.tsx","../../../plugins/wiggle/src/LinearWiggleDisplay/components/Tooltip.tsx","../../../plugins/wiggle/src/shared/modelShared.ts","../../../plugins/wiggle/src/LinearWiggleDisplay/models/model.tsx","../../../plugins/wiggle/src/LinearWiggleDisplay/index.ts","../../../plugins/wiggle/src/LinearWiggleDisplay/models/configSchema.ts","../../../plugins/wiggle/src/MultiLinearWiggleDisplay/components/Tooltip.tsx","../../../plugins/wiggle/src/MultiLinearWiggleDisplay/models/model.tsx","../../../plugins/wiggle/src/MultiLinearWiggleDisplay/index.ts","../../../plugins/wiggle/src/MultiLinearWiggleDisplay/models/configSchema.ts","../../../plugins/wiggle/src/MultiWiggleRendering.tsx","../../../plugins/wiggle/src/MultiXYPlotRenderer/MultiXYPlotRenderer.ts","../../../plugins/wiggle/src/MultiXYPlotRenderer/configSchema.ts","../../../plugins/wiggle/src/MultiRowXYPlotRenderer/MultiRowXYPlotRenderer.ts","../../../plugins/wiggle/src/MultiRowXYPlotRenderer/configSchema.ts","../../../plugins/wiggle/src/MultiDensityRenderer/configSchema.ts","../../../plugins/wiggle/src/MultiDensityRenderer/MultiDensityRenderer.ts","../../../plugins/wiggle/src/MultiLineRenderer/MultiLineRenderer.ts","../../../plugins/wiggle/src/MultiLineRenderer/configSchema.ts","../../../plugins/wiggle/src/MultiRowLineRenderer/MultiRowLineRenderer.ts","../../../plugins/wiggle/src/MultiRowLineRenderer/configSchema.ts","../../../plugins/wiggle/src/CreateMultiWiggleExtension/index.ts","../../../plugins/wiggle/src/MultiWiggleAddTrackWidget/AddTrackWorkflow.tsx","../../../plugins/wiggle/src/MultiWiggleAddTrackWidget/index.ts","../../../plugins/wiggle/src/WiggleRPC/MultiWiggleGetSources.ts","../../../plugins/wiggle/src/WiggleRPC/WiggleGetMultiRegionQuantitativeStats.ts","../../../plugins/wiggle/src/WiggleRPC/WiggleGetGlobalQuantitativeStats.ts","../../../plugins/wiggle/src/index.ts","../../../plugins/wiggle/src/MultiWiggleAdapter/index.ts","../../../plugins/wiggle/src/BigWigAdapter/index.ts","../../../plugins/wiggle/src/QuantitativeTrack/index.ts","../../../plugins/wiggle/src/MultiQuantitativeTrack/index.ts","../../../plugins/wiggle/src/LinePlotRenderer/index.ts","../../../plugins/wiggle/src/XYPlotRenderer/index.ts","../../../plugins/wiggle/src/DensityRenderer/index.ts","../../../plugins/wiggle/src/MultiXYPlotRenderer/index.ts","../../../plugins/wiggle/src/MultiRowXYPlotRenderer/index.ts","../../../plugins/wiggle/src/MultiDensityRenderer/index.ts","../../../plugins/wiggle/src/MultiLineRenderer/index.ts","../../../plugins/wiggle/src/MultiRowLineRenderer/index.ts","../../../plugins/wiggle/src/shared/YScaleBar.tsx","../../../plugins/authentication/src/OAuthModel/configSchema.ts","../../../plugins/authentication/src/OAuthModel/util.ts","../../../plugins/authentication/src/util.ts","../../../plugins/authentication/src/OAuthModel/model.tsx","../../../plugins/authentication/src/ExternalTokenModel/configSchema.ts","../../../plugins/authentication/src/ExternalTokenModel/ExternalTokenEntryForm.tsx","../../../plugins/authentication/src/ExternalTokenModel/model.tsx","../../../plugins/authentication/src/HTTPBasicModel/configSchema.ts","../../../plugins/authentication/src/HTTPBasicModel/HTTPBasicLoginForm.tsx","../../../plugins/authentication/src/HTTPBasicModel/model.tsx","../../../plugins/authentication/src/DropboxOAuthModel/configSchema.ts","../../../plugins/authentication/src/DropboxOAuthModel/util.ts","../../../plugins/authentication/src/DropboxOAuthModel/model.tsx","../../../plugins/authentication/src/GoogleDriveOAuthModel/configSchema.ts","../../../plugins/authentication/src/GoogleDriveOAuthModel/util.ts","../../../plugins/authentication/src/GoogleDriveOAuthModel/GoogleDriveFilehandle.ts","../../../plugins/authentication/src/GoogleDriveOAuthModel/model.tsx","../../../plugins/authentication/src/index.ts","../../../plugins/bed/src/BigBedAdapter/configSchema.ts","../../../plugins/bed/src/BedpeAdapter/configSchema.ts","../../../plugins/bed/src/BedTabixAdapter/configSchema.ts","../../../plugins/bed/src/BedAdapter/configSchema.ts","../../../plugins/bed/src/index.ts","../../../plugins/bed/src/BigBedAdapter/index.ts","../../../plugins/bed/src/BedAdapter/index.ts","../../../plugins/bed/src/BedpeAdapter/index.ts","../../../plugins/bed/src/BedTabixAdapter/index.ts","../../../plugins/breakpoint-split-view/src/BreakpointAlignmentsFeatureDetail/index.ts","../../../plugins/breakpoint-split-view/src/BreakpointSplitView/BreakpointSplitView.ts","../../../plugins/breakpoint-split-view/src/BreakpointSplitView/model.ts","../../../plugins/breakpoint-split-view/src/BreakpointSplitView/index.ts","../../../plugins/breakpoint-split-view/src/index.ts","../../../plugins/comparative-adapters/src/PAFAdapter/configSchema.ts","../../../plugins/comparative-adapters/src/MCScanAnchorsAdapter/configSchema.ts","../../../plugins/comparative-adapters/src/MCScanSimpleAnchorsAdapter/configSchema.ts","../../../plugins/comparative-adapters/src/MashMapAdapter/configSchema.ts","../../../plugins/comparative-adapters/src/DeltaAdapter/configSchema.ts","../../../plugins/comparative-adapters/src/ChainAdapter/configSchema.ts","../../../plugins/comparative-adapters/src/index.ts","../../../plugins/comparative-adapters/src/PAFAdapter/index.ts","../../../plugins/comparative-adapters/src/DeltaAdapter/index.ts","../../../plugins/comparative-adapters/src/ChainAdapter/index.ts","../../../plugins/comparative-adapters/src/MCScanAnchorsAdapter/index.ts","../../../plugins/comparative-adapters/src/MCScanSimpleAnchorsAdapter/index.ts","../../../plugins/comparative-adapters/src/MashMapAdapter/index.ts","../../../plugins/dotplot-view/src/DotplotView/1dview.ts","../../../plugins/dotplot-view/src/DotplotView/model.ts","../../../plugins/dotplot-view/src/ServerSideRenderedBlockContent.tsx","../../../plugins/dotplot-view/src/DotplotDisplay/renderDotplotBlock.ts","../../../plugins/dotplot-view/src/DotplotDisplay/stateModelFactory.tsx","../../../plugins/dotplot-view/src/DotplotDisplay/components/DotplotDisplay.tsx","../../../plugins/dotplot-view/src/DotplotDisplay/index.ts","../../../plugins/dotplot-view/src/DotplotRenderer/components/DotplotRendering.tsx","../../../plugins/dotplot-view/src/DotplotRenderer/DotplotRenderer.ts","../../../plugins/dotplot-view/src/DotplotRenderer/configSchema.ts","../../../plugins/dotplot-view/src/LaunchDotplotView.ts","../../../plugins/dotplot-view/src/ComparativeRenderer/index.ts","../../../plugins/dotplot-view/src/DotplotReadVsRef/DotplotReadVsRef.ts","../../../plugins/dotplot-view/src/DotplotReadVsRef/index.ts","../../../plugins/dotplot-view/src/index.ts","../../../plugins/dotplot-view/src/DotplotView/index.ts","../../../plugins/dotplot-view/src/DotplotRenderer/index.ts","../../../plugins/gtf/src/GtfAdapter/configSchema.ts","../../../plugins/gtf/src/index.ts","../../../plugins/gff3/src/Gff3TabixAdapter/configSchema.ts","../../../plugins/gff3/src/Gff3Adapter/configSchema.ts","../../../plugins/gff3/src/index.ts","../../../plugins/gff3/src/Gff3TabixAdapter/index.ts","../../../plugins/gff3/src/Gff3Adapter/index.ts","../../../plugins/gff3/src/GuessGff3/index.ts","../../../plugins/legacy-jbrowse/src/NCListAdapter/configSchema.ts","../../../plugins/legacy-jbrowse/src/JBrowse1TextSearchAdapter/HttpMap.ts","../../../plugins/legacy-jbrowse/src/JBrowse1TextSearchAdapter/JBrowse1TextSearchAdapter.ts","../../../plugins/legacy-jbrowse/src/JBrowse1TextSearchAdapter/configSchema.ts","../../../plugins/legacy-jbrowse/src/JBrowse1Connection/configSchema.ts","../../../plugins/legacy-jbrowse/src/JBrowse1Connection/model.tsx","../../../plugins/legacy-jbrowse/src/JBrowse1Connection/index.ts","../../../plugins/legacy-jbrowse/src/index.ts","../../../plugins/legacy-jbrowse/src/NCListAdapter/index.ts","../../../plugins/legacy-jbrowse/src/GuessNCList/index.ts","../../../plugins/legacy-jbrowse/src/JBrowse1TextSearchAdapter/index.ts","../../../plugins/linear-comparative-view/src/LinearComparativeDisplay/configSchemaF.ts","../../../plugins/linear-comparative-view/src/LinearComparativeDisplay/stateModelFactory.ts","../../../plugins/linear-comparative-view/src/LinearComparativeView/model.ts","../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/configSchemaF.ts","../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/model.ts","../../../plugins/linear-comparative-view/src/LGVSyntenyDisplay/configSchemaF.ts","../../../plugins/linear-comparative-view/src/LGVSyntenyDisplay/model.ts","../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/Icons.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyView/model.ts","../../../plugins/linear-comparative-view/src/LaunchLinearSyntenyView.ts","../../../plugins/linear-comparative-view/src/SyntenyTrack/configSchema.ts","../../../plugins/linear-comparative-view/src/SyntenyFeatureDetail/index.ts","../../../plugins/linear-comparative-view/src/LinearReadVsRef/LinearReadVsRef.tsx","../../../plugins/linear-comparative-view/src/index.tsx","../../../plugins/linear-comparative-view/src/SyntenyTrack/index.tsx","../../../plugins/linear-comparative-view/src/LinearComparativeView/index.ts","../../../plugins/linear-comparative-view/src/LinearSyntenyView/index.ts","../../../plugins/linear-comparative-view/src/LinearComparativeDisplay/index.ts","../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/index.ts","../../../plugins/linear-comparative-view/src/LGVSyntenyDisplay/index.ts","../../../plugins/linear-comparative-view/src/LinearReadVsRef/index.ts","../../../plugins/lollipop/src/LinearLollipopDisplay/model.ts","../../../plugins/lollipop/src/LollipopRenderer/components/ScoreText.tsx","../../../plugins/lollipop/src/LollipopRenderer/components/Lollipop.tsx","../../../plugins/lollipop/src/LollipopRenderer/components/Stick.tsx","../../../plugins/lollipop/src/LollipopRenderer/components/LollipopRendering.tsx","../../../plugins/lollipop/src/LollipopRenderer/configSchema.ts","../../../plugins/lollipop/src/LollipopRenderer/Layout.ts","../../../plugins/lollipop/src/LollipopRenderer/LollipopRenderer.js","../../../plugins/lollipop/src/index.ts","../../../plugins/lollipop/src/LinearLollipopDisplay/configSchema.ts","../../../plugins/arc/src/LinearArcDisplay/model.ts","../../../plugins/arc/src/LinearArcDisplay/index.ts","../../../plugins/arc/src/LinearArcDisplay/configSchema.ts","../../../plugins/arc/src/ArcRenderer/ArcRendering.tsx","../../../plugins/arc/src/ArcRenderer/configSchema.ts","../../../plugins/arc/src/ArcRenderer/ArcRenderer.ts","../../../plugins/arc/src/index.ts","../../../plugins/arc/src/ArcRenderer/index.ts","../../../plugins/menus/src/AboutWidget/index.ts","../../../plugins/menus/src/HelpWidget/index.ts","../../../plugins/menus/src/ImportSessionWidget/index.ts","../../../plugins/menus/src/SessionManager/index.ts","../../../plugins/menus/src/index.ts","../../../plugins/rdf/src/SPARQLAdapter/SPARQLAdapter.ts","../../../plugins/rdf/src/SPARQLAdapter/configSchema.ts","../../../plugins/rdf/src/index.ts","../../../plugins/sequence/src/TwoBitAdapter/configSchema.ts","../../../plugins/sequence/src/DivSequenceRenderer/components/DivSequenceRendering.tsx","../../../plugins/sequence/src/DivSequenceRenderer/configSchema.ts","../../../plugins/sequence/src/DivSequenceRenderer/index.ts","../../../plugins/sequence/src/BgzipFastaAdapter/configSchema.ts","../../../plugins/sequence/src/ChromSizesAdapter/configSchema.ts","../../../plugins/sequence/src/IndexedFastaAdapter/configSchema.ts","../../../plugins/sequence/src/SequenceSearchAdapter/configSchema.ts","../../../plugins/sequence/src/ReferenceSequenceTrack/index.ts","../../../plugins/sequence/src/ReferenceSequenceTrack/configSchema.ts","../../../plugins/sequence/src/LinearReferenceSequenceDisplay/configSchema.ts","../../../plugins/sequence/src/LinearReferenceSequenceDisplay/index.ts","../../../plugins/sequence/src/LinearReferenceSequenceDisplay/model.ts","../../../plugins/sequence/src/index.ts","../../../plugins/sequence/src/TwoBitAdapter/index.ts","../../../plugins/sequence/src/BgzipFastaAdapter/index.ts","../../../plugins/sequence/src/ChromSizesAdapter/index.ts","../../../plugins/sequence/src/IndexedFastaAdapter/index.ts","../../../plugins/sequence/src/SequenceSearchAdapter/index.ts","../../../plugins/sequence/src/createExtensionPoints.ts","../../../plugins/svg/src/SvgFeatureRenderer/components/FeatureLabel.tsx","../../../plugins/svg/src/SvgFeatureRenderer/components/FeatureGlyph.tsx","../../../plugins/svg/src/SvgFeatureRenderer/components/SvgOverlay.tsx","../../../plugins/svg/src/SvgFeatureRenderer/components/Arrow.tsx","../../../plugins/svg/src/SvgFeatureRenderer/components/Box.tsx","../../../plugins/svg/src/SvgFeatureRenderer/components/Segments.tsx","../../../plugins/svg/src/SvgFeatureRenderer/components/ProcessedTranscript.tsx","../../../plugins/svg/src/SvgFeatureRenderer/components/Subfeatures.tsx","../../../plugins/svg/src/SvgFeatureRenderer/components/util.ts","../../../plugins/svg/src/SvgFeatureRenderer/components/SvgFeatureRendering.tsx","../../../plugins/svg/src/SvgFeatureRenderer/configSchema.ts","../../../plugins/svg/src/index.ts","../../../plugins/gccontent/src/GCContentAdapter/configSchema.ts","../../../plugins/gccontent/src/LinearGCContentDisplay/index.ts","../../../plugins/gccontent/src/LinearGCContentDisplay/config.ts","../../../plugins/gccontent/src/LinearGCContentDisplay/stateModel.ts","../../../plugins/gccontent/src/index.ts","../../../plugins/gccontent/src/GCContentAdapter/index.ts","../../../plugins/spreadsheet-view/src/SpreadsheetView/models/ColumnDataTypes/MakeSpreadsheetColumnType.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/models/ColumnDataTypes/LocString.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/models/ColumnDataTypes/Text.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/models/ColumnDataTypes/LocRef.ts","../../../plugins/spreadsheet-view/src/SpreadsheetView/models/ColumnDataTypes/Number.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/models/ColumnDataTypes/index.ts","../../../plugins/spreadsheet-view/src/SpreadsheetView/models/ColumnDataTypes/LocStart.ts","../../../plugins/spreadsheet-view/src/SpreadsheetView/models/ColumnDataTypes/LocEnd.ts","../../../plugins/spreadsheet-view/src/SpreadsheetView/models/Row.ts","../../../plugins/spreadsheet-view/src/SpreadsheetView/models/StaticRowSet.ts","../../../plugins/spreadsheet-view/src/SpreadsheetView/models/Spreadsheet.ts","../../../plugins/spreadsheet-view/src/SpreadsheetView/models/ImportWizard.ts","../../../plugins/spreadsheet-view/src/SpreadsheetView/models/FilterControls.ts","../../../plugins/spreadsheet-view/src/SpreadsheetView/models/SpreadsheetView.ts","../../../plugins/spreadsheet-view/src/index.ts","../../../plugins/spreadsheet-view/src/SpreadsheetView/index.ts","../../../plugins/spreadsheet-view/src/LaunchSpreadsheetView/index.ts","../../../plugins/sv-inspector/src/SvInspectorView/components/CircularViewOptions.tsx","../../../plugins/sv-inspector/src/SvInspectorView/components/SvInspectorView.tsx","../../../plugins/sv-inspector/src/SvInspectorView/models/adhocFeatureUtils.js","../../../plugins/sv-inspector/src/SvInspectorView/models/breakpointSplitViewFromTableRow.js","../../../plugins/sv-inspector/src/SvInspectorView/models/SvInspectorView.ts","../../../plugins/sv-inspector/src/SvInspectorView/index.ts","../../../plugins/sv-inspector/src/index.ts","../../../plugins/sv-inspector/src/LaunchSvInspectorView/index.ts","../../../plugins/hic/src/HicRenderer/components/HicRendering.tsx","../../../plugins/hic/src/HicRenderer/configSchema.ts","../../../plugins/hic/src/HicRenderer/HicRenderer.tsx","../../../plugins/hic/src/HicTrack/configSchema.ts","../../../plugins/hic/src/LinearHicDisplay/configSchema.ts","../../../plugins/hic/src/LinearHicDisplay/model.ts","../../../plugins/hic/src/HicAdapter/configSchema.ts","../../../plugins/hic/src/index.ts","../../../plugins/hic/src/HicAdapter/index.ts","../../../plugins/hic/src/HicRenderer/index.ts","../../../plugins/hic/src/HicTrack/index.ts","../../../plugins/hic/src/LinearHicDisplay/index.ts","../../../plugins/trix/src/TrixTextSearchAdapter/TrixTextSearchAdapter.ts","../../../plugins/trix/src/TrixTextSearchAdapter/configSchema.ts","../../../plugins/trix/src/index.ts","../../../plugins/grid-bookmark/src/GridBookmarkWidget/model.ts","../../../plugins/grid-bookmark/src/GridBookmarkWidget/index.ts","../../../plugins/grid-bookmark/src/index.ts","corePlugins.ts"],"sourcesContent":["import { types, addDisposer } from 'mobx-state-tree'\nimport { autorun } from 'mobx'\nimport clone from 'clone'\n\n// locals\nimport PluginManager from '../PluginManager'\nimport { getConf, ConfigurationSchema } from '../configuration'\nimport { getSession } from '../util'\nimport { ElementId } from '../util/types/mst'\n\nconst configSchema = ConfigurationSchema('BaseFeatureWidget', {})\n\ninterface Feat {\n  subfeatures?: Record<string, unknown>[]\n}\n\nfunction formatSubfeatures(\n  obj: Feat,\n  depth: number,\n  parse: (obj: Record<string, unknown>) => void,\n  currentDepth = 0,\n  returnObj = {} as Record<string, unknown>,\n) {\n  if (depth <= currentDepth) {\n    return returnObj\n  }\n  returnObj.subfeatures = obj.subfeatures?.map(sub => {\n    formatSubfeatures(sub, depth, parse, currentDepth + 1, returnObj)\n    return parse(sub)\n  })\n  return returnObj\n}\n\nexport default function stateModelFactory(pluginManager: PluginManager) {\n  return types\n    .model('BaseFeatureWidget', {\n      id: ElementId,\n      type: types.literal('BaseFeatureWidget'),\n      featureData: types.frozen(),\n      formattedFields: types.frozen(),\n      unformattedFeatureData: types.frozen(),\n      view: types.safeReference(\n        pluginManager.pluggableMstType('view', 'stateModel'),\n      ),\n      track: types.safeReference(\n        pluginManager.pluggableMstType('track', 'stateModel'),\n      ),\n      trackId: types.maybe(types.string),\n      trackType: types.maybe(types.string),\n    })\n    .volatile(() => ({\n      error: undefined as unknown,\n    }))\n    .actions(self => ({\n      setFeatureData(featureData: Record<string, unknown>) {\n        self.unformattedFeatureData = featureData\n      },\n      clearFeatureData() {\n        self.featureData = undefined\n      },\n      setFormattedData(feat: Record<string, unknown>) {\n        self.featureData = feat\n      },\n      setExtra(type?: string, trackId?: string) {\n        self.trackId = trackId\n        self.trackType = type\n      },\n      setError(e: unknown) {\n        self.error = e\n      },\n    }))\n    .actions(self => ({\n      afterCreate() {\n        addDisposer(\n          self,\n          autorun(() => {\n            try {\n              self.setExtra(self.track?.type, self.track?.configuration.trackId)\n              const { unformattedFeatureData, track } = self\n              const session = getSession(self)\n              if (unformattedFeatureData) {\n                const feature = clone(unformattedFeatureData)\n\n                const combine = (\n                  arg2: string,\n                  feature: Record<string, unknown>,\n                ) => ({\n                  ...getConf(session, ['formatDetails', arg2], { feature }),\n                  ...getConf(track, ['formatDetails', arg2], { feature }),\n                })\n\n                if (track) {\n                  // eslint-disable-next-line no-underscore-dangle\n                  feature.__jbrowsefmt = combine('feature', feature)\n                  const depth = getConf(track, ['formatDetails', 'depth'])\n                  formatSubfeatures(feature, depth, sub => {\n                    // eslint-disable-next-line no-underscore-dangle\n                    sub.__jbrowsefmt = combine('subfeatures', sub)\n                  })\n                }\n\n                self.setFormattedData(feature)\n              }\n            } catch (e) {\n              console.error(e)\n              self.setError(e)\n            }\n          }),\n        )\n      },\n    }))\n    .preProcessSnapshot(snap => {\n      // @ts-expect-error\n      const { featureData, finalizedFeatureData, ...rest } = snap\n      return {\n        unformattedFeatureData: featureData,\n        featureData: finalizedFeatureData,\n        ...rest,\n      }\n    })\n    .postProcessSnapshot(snap => {\n      // xref https://github.com/mobxjs/mobx-state-tree/issues/1524 for Omit\n      const { unformattedFeatureData, featureData, ...rest } = snap as Omit<\n        typeof snap,\n        symbol\n      >\n      // finalizedFeatureData avoids running formatter twice if loading from\n      // snapshot\n      return {\n        // replacing undefined with null helps with allowing fields to be\n        // hidden, setting null is not allowed by jexl so we set it to\n        // undefined to hide. see config guide. this replacement happens both\n        // here and when displaying the featureData in base feature widget\n        finalizedFeatureData: JSON.parse(\n          JSON.stringify(featureData, (_, v) => (v === undefined ? null : v)),\n        ),\n        ...rest,\n      }\n    })\n}\n\nexport { configSchema, stateModelFactory }\n","import PluginManager from './PluginManager'\nimport { AnyConfigurationSchemaType } from './configuration'\n\n/**\n * base class for a JBrowse plugin\n */\nexport default abstract class Plugin {\n  abstract name: string\n\n  url?: string\n\n  version?: string\n\n  install(_pluginManager: PluginManager): void {}\n\n  configure(_pluginManager: PluginManager): void {}\n\n  configurationSchema: AnyConfigurationSchemaType | undefined = undefined\n}\n\nexport type PluginConstructor = new (...args: unknown[]) => Plugin\n","import { getAdapter } from '../../data_adapters/dataAdapterCache'\nimport RpcMethodType from '../../pluggableElementTypes/RpcMethodType'\n\nimport { RemoteAbortSignal } from '../remoteAbortSignals'\nimport { isFeatureAdapter } from '../../data_adapters/BaseAdapter'\n\nexport default class CoreGetRefNames extends RpcMethodType {\n  name = 'CoreGetRefNames'\n\n  async execute(\n    args: {\n      sessionId: string\n      signal: RemoteAbortSignal\n      adapterConfig: {}\n    },\n    rpcDriver: string,\n  ) {\n    const pm = this.pluginManager\n    const deserializedArgs = await this.deserializeArguments(args, rpcDriver)\n    const { sessionId, adapterConfig } = deserializedArgs\n    const { dataAdapter } = await getAdapter(pm, sessionId, adapterConfig)\n\n    if (isFeatureAdapter(dataAdapter)) {\n      return dataAdapter.getRefNames(deserializedArgs)\n    }\n    return []\n  }\n}\n","import ServerSideRendererType, {\n  RenderArgs as ServerSideRenderArgs,\n  RenderArgsSerialized as ServerSideRenderArgsSerialized,\n} from '../../pluggableElementTypes/renderers/ServerSideRendererType'\nimport { Region } from '../../util'\n\nexport interface RenderArgs extends ServerSideRenderArgs {\n  adapterConfig: {}\n  rendererType: string\n}\n\nexport interface RenderArgsSerialized extends ServerSideRenderArgsSerialized {\n  assemblyName: string\n  regions: Region[]\n  adapterConfig: {}\n  rendererType: string\n}\n\nexport function validateRendererType<T>(rendererType: string, RendererType: T) {\n  if (!RendererType) {\n    throw new Error(`renderer \"${rendererType}\" not found`)\n  }\n  // @ts-expect-error\n  if (!RendererType.ReactComponent) {\n    throw new Error(\n      `renderer ${rendererType} has no ReactComponent, it may not be completely implemented yet`,\n    )\n  }\n\n  if (!(RendererType instanceof ServerSideRendererType)) {\n    throw new TypeError(\n      'CoreRender requires a renderer that is a subclass of ServerSideRendererType',\n    )\n  }\n  return RendererType\n}\n\nexport {\n  type RenderResults,\n  type ResultsSerialized,\n} from '../../pluggableElementTypes/renderers/ServerSideRendererType'\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport RpcMethodType from '../../pluggableElementTypes/RpcMethodType'\nimport { RenderArgs } from './util'\nimport { RemoteAbortSignal } from '../remoteAbortSignals'\nimport { renameRegionsIfNeeded, getLayoutId } from '../../util'\nimport { RenderArgsSerialized, validateRendererType } from './util'\n\n/**\n * fetches features from an adapter and call a renderer with them\n */\nexport default class CoreGetFeatureDetails extends RpcMethodType {\n  name = 'CoreGetFeatureDetails'\n\n  async serializeArguments(args: RenderArgs, rpcDriver: string) {\n    const { rootModel } = this.pluginManager\n    const assemblyManager = rootModel!.session!.assemblyManager\n    const renamedArgs = await renameRegionsIfNeeded(assemblyManager, args)\n    const superArgs = (await super.serializeArguments(\n      renamedArgs,\n      rpcDriver,\n    )) as RenderArgs\n    if (rpcDriver === 'MainThreadRpcDriver') {\n      return superArgs\n    }\n\n    const { rendererType } = args\n\n    const RendererType = validateRendererType(\n      rendererType,\n      this.pluginManager.getRendererType(rendererType),\n    )\n\n    return RendererType.serializeArgsInClient(superArgs)\n  }\n\n  async execute(\n    args: RenderArgsSerialized & { signal?: RemoteAbortSignal },\n    rpcDriver: string,\n  ) {\n    let deserializedArgs = args\n    if (rpcDriver !== 'MainThreadRpcDriver') {\n      deserializedArgs = await this.deserializeArguments(args, rpcDriver)\n    }\n    const { rendererType, featureId } = deserializedArgs\n    const RendererType = validateRendererType(\n      rendererType,\n      this.pluginManager.getRendererType(rendererType),\n    )\n\n    return {\n      // @ts-expect-error\n      feature: RendererType.sessions[getLayoutId(args)]?.cachedLayout.layout\n        .getDataByID(featureId)\n        ?.toJSON(),\n    }\n  }\n}\n","import { getAdapter } from '../../data_adapters/dataAdapterCache'\nimport RpcMethodType from '../../pluggableElementTypes/RpcMethodType'\n\nimport { RemoteAbortSignal } from '../remoteAbortSignals'\nimport { isFeatureAdapter } from '../../data_adapters/BaseAdapter'\n\nexport default class CoreGetMetadata extends RpcMethodType {\n  name = 'CoreGetMetadata'\n\n  async execute(\n    args: {\n      sessionId: string\n      signal: RemoteAbortSignal\n      adapterConfig: {}\n    },\n    rpcDriver: string,\n  ) {\n    const pm = this.pluginManager\n    const deserializedArgs = await this.deserializeArguments(args, rpcDriver)\n    const { sessionId, adapterConfig } = deserializedArgs\n    const { dataAdapter } = await getAdapter(pm, sessionId, adapterConfig)\n    return isFeatureAdapter(dataAdapter)\n      ? dataAdapter.getMetadata(deserializedArgs)\n      : null\n  }\n}\n","import { getAdapter } from '../../data_adapters/dataAdapterCache'\nimport RpcMethodType from '../../pluggableElementTypes/RpcMethodType'\n\nimport { RemoteAbortSignal } from '../remoteAbortSignals'\nimport { isFeatureAdapter } from '../../data_adapters/BaseAdapter'\n\nexport default class CoreGetFileInfo extends RpcMethodType {\n  name = 'CoreGetInfo'\n\n  async execute(\n    args: {\n      sessionId: string\n      signal: RemoteAbortSignal\n      adapterConfig: {}\n    },\n    rpcDriver: string,\n  ) {\n    const pm = this.pluginManager\n    const deserializedArgs = await this.deserializeArguments(args, rpcDriver)\n    const { sessionId, adapterConfig } = deserializedArgs\n    const { dataAdapter } = await getAdapter(pm, sessionId, adapterConfig)\n    return isFeatureAdapter(dataAdapter)\n      ? dataAdapter.getHeader(deserializedArgs)\n      : null\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { toArray } from 'rxjs/operators'\nimport { firstValueFrom } from 'rxjs'\n\n// locals\nimport { getAdapter } from '../../data_adapters/dataAdapterCache'\nimport RpcMethodType from '../../pluggableElementTypes/RpcMethodType'\nimport { RenderArgs } from './util'\nimport { RemoteAbortSignal } from '../remoteAbortSignals'\nimport { isFeatureAdapter } from '../../data_adapters/BaseAdapter'\nimport { renameRegionsIfNeeded, Region } from '../../util'\nimport SimpleFeature, {\n  SimpleFeatureSerialized,\n} from '../../util/simpleFeature'\n\nexport default class CoreGetFeatures extends RpcMethodType {\n  name = 'CoreGetFeatures'\n\n  async deserializeReturn(\n    feats: SimpleFeatureSerialized[],\n    args: unknown,\n    rpcDriver: string,\n  ) {\n    const superDeserialized = (await super.deserializeReturn(\n      feats,\n      args,\n      rpcDriver,\n    )) as SimpleFeatureSerialized[]\n    return superDeserialized.map(feat => new SimpleFeature(feat))\n  }\n\n  async serializeArguments(args: RenderArgs, rpcDriver: string) {\n    const { rootModel } = this.pluginManager\n    const assemblyManager = rootModel!.session!.assemblyManager\n    const renamedArgs = await renameRegionsIfNeeded(assemblyManager, args)\n    return super.serializeArguments(\n      renamedArgs,\n      rpcDriver,\n    ) as Promise<RenderArgs>\n  }\n\n  async execute(\n    args: {\n      sessionId: string\n      regions: Region[]\n      adapterConfig: {}\n      signal?: RemoteAbortSignal\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      opts?: any\n    },\n    rpcDriver: string,\n  ) {\n    const pm = this.pluginManager\n    const deserializedArgs = await this.deserializeArguments(args, rpcDriver)\n    const { signal, sessionId, adapterConfig, regions, opts } = deserializedArgs\n    const { dataAdapter } = await getAdapter(pm, sessionId, adapterConfig)\n    if (!isFeatureAdapter(dataAdapter)) {\n      throw new Error('Adapter does not support retrieving features')\n    }\n    const ret = dataAdapter.getFeaturesInMultipleRegions(regions, {\n      ...opts,\n      signal,\n    })\n    const r = await firstValueFrom(ret.pipe(toArray()))\n    return r.map(f => f.toJSON())\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nimport RpcMethodType from '../../pluggableElementTypes/RpcMethodType'\nimport {\n  RenderResults,\n  ResultsSerialized,\n  RenderArgs,\n  RenderArgsSerialized,\n  validateRendererType,\n} from './util'\nimport { RemoteAbortSignal } from '../remoteAbortSignals'\nimport { checkAbortSignal, renameRegionsIfNeeded } from '../../util'\n\n/**\n * fetches features from an adapter and call a renderer with them\n */\nexport default class CoreRender extends RpcMethodType {\n  name = 'CoreRender'\n\n  async serializeArguments(args: RenderArgs, rpcDriver: string) {\n    const { rootModel } = this.pluginManager\n    const assemblyManager = rootModel!.session!.assemblyManager\n    const renamedArgs = await renameRegionsIfNeeded(assemblyManager, args)\n\n    const superArgs = (await super.serializeArguments(\n      renamedArgs,\n      rpcDriver,\n    )) as RenderArgs\n    if (rpcDriver === 'MainThreadRpcDriver') {\n      return superArgs\n    }\n\n    const { rendererType } = args\n\n    const RendererType = validateRendererType(\n      rendererType,\n      this.pluginManager.getRendererType(rendererType),\n    )\n\n    return RendererType.serializeArgsInClient(superArgs)\n  }\n\n  async execute(\n    args: RenderArgsSerialized & { signal?: RemoteAbortSignal },\n    rpcDriver: string,\n  ) {\n    let deserializedArgs = args\n    if (rpcDriver !== 'MainThreadRpcDriver') {\n      deserializedArgs = await this.deserializeArguments(args, rpcDriver)\n    }\n    const { sessionId, rendererType, signal } = deserializedArgs\n    if (!sessionId) {\n      throw new Error('must pass a unique session id')\n    }\n\n    checkAbortSignal(signal)\n\n    const RendererType = validateRendererType(\n      rendererType,\n      this.pluginManager.getRendererType(rendererType),\n    )\n\n    const result =\n      rpcDriver === 'MainThreadRpcDriver'\n        ? await RendererType.render(deserializedArgs)\n        : await RendererType.renderInWorker(deserializedArgs)\n\n    checkAbortSignal(signal)\n    return result\n  }\n\n  async deserializeReturn(\n    serializedReturn: RenderResults | ResultsSerialized,\n    args: RenderArgs,\n    rpcDriver: string,\n  ): Promise<unknown> {\n    const des = await super.deserializeReturn(serializedReturn, args, rpcDriver)\n    if (rpcDriver === 'MainThreadRpcDriver') {\n      return des\n    }\n\n    const { rendererType } = args\n    const RendererType = validateRendererType(\n      rendererType,\n      this.pluginManager.getRendererType(rendererType),\n    )\n    return RendererType.deserializeResultsInClient(\n      des as ResultsSerialized,\n      args,\n    )\n  }\n}\n","import RpcMethodType from '../../pluggableElementTypes/RpcMethodType'\nimport { freeAdapterResources } from '../../data_adapters/dataAdapterCache'\n\n/**\n * free up any resources (e.g. cached adapter objects)\n * that are only associated with the given track ID.\n *\n * returns number of objects deleted\n */\nexport default class CoreFreeResources extends RpcMethodType {\n  name = 'CoreFreeResources'\n\n  async execute(specification: {}) {\n    let deleteCount = 0\n\n    deleteCount += freeAdapterResources(specification)\n\n    // pass the freeResources hint along to all the renderers as well\n    this.pluginManager.getRendererTypes().forEach(renderer => {\n      const count = renderer.freeResources(/* specification */)\n      if (count) {\n        deleteCount += count\n      }\n    })\n\n    return deleteCount\n  }\n  async serializeArguments(args: {}, _rpcDriver: string): Promise<{}> {\n    return args\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { getAdapter } from '../../data_adapters/dataAdapterCache'\nimport RpcMethodType from '../../pluggableElementTypes/RpcMethodType'\nimport { RenderArgs } from './util'\nimport { RemoteAbortSignal } from '../remoteAbortSignals'\nimport { isFeatureAdapter } from '../../data_adapters/BaseAdapter'\nimport { renameRegionsIfNeeded, Region } from '../../util'\n\nexport default class CoreGetFeatureDensityStats extends RpcMethodType {\n  name = 'CoreGetFeatureDensityStats'\n\n  async serializeArguments(\n    args: RenderArgs & {\n      signal?: AbortSignal\n      statusCallback?: (arg: string) => void\n    },\n    rpcDriver: string,\n  ) {\n    const { rootModel } = this.pluginManager\n    const assemblyManager = rootModel!.session!.assemblyManager\n    const renamedArgs = await renameRegionsIfNeeded(assemblyManager, {\n      ...args,\n      filters: args.filters?.toJSON().filters,\n    })\n\n    return super.serializeArguments(renamedArgs, rpcDriver)\n  }\n\n  async execute(\n    args: {\n      adapterConfig: {}\n      regions: Region[]\n      signal?: RemoteAbortSignal\n      headers?: Record<string, string>\n      sessionId: string\n    },\n    rpcDriver: string,\n  ) {\n    const pm = this.pluginManager\n    const deserializedArgs = await this.deserializeArguments(args, rpcDriver)\n    const { adapterConfig, sessionId, regions } = deserializedArgs\n    const { dataAdapter } = await getAdapter(pm, sessionId, adapterConfig)\n\n    if (!isFeatureAdapter(dataAdapter)) {\n      throw new Error('Adapter does not support retrieving features')\n    }\n    return dataAdapter.getMultiRegionFeatureDensityStats(\n      regions,\n      deserializedArgs,\n    )\n  }\n}\n","import { ConfigurationSchema } from '../../configuration'\n\n/**\n * #config CytobandAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = ConfigurationSchema(\n  'CytobandAdapter',\n  {\n    /**\n     * #slot\n     */\n    cytobandLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/cytoband.txt.gz' },\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default configSchema\n","import { lazy } from 'react'\nimport { configSchema, stateModelFactory } from './BaseFeatureWidget'\nimport Plugin from './Plugin'\nimport PluginManager from './PluginManager'\nimport * as coreRpcMethods from './rpc/coreRpcMethods'\nimport WidgetType from './pluggableElementTypes/WidgetType'\nimport CytobandAdapterF from './data_adapters/CytobandAdapter'\n\n// the core plugin, which registers types that ALL JBrowse applications are\n// expected to need.\nexport default class CorePlugin extends Plugin {\n  name = 'CorePlugin'\n\n  install(pluginManager: PluginManager) {\n    // register all our core rpc methods\n    Object.values(coreRpcMethods).forEach(RpcMethod => {\n      pluginManager.addRpcMethod(() => new RpcMethod(pluginManager))\n    })\n\n    CytobandAdapterF(pluginManager)\n\n    pluginManager.addWidgetType(() => {\n      return new WidgetType({\n        name: 'BaseFeatureWidget',\n        heading: 'Feature details',\n        configSchema,\n        stateModel: stateModelFactory(pluginManager),\n        ReactComponent: lazy(\n          () => import('./BaseFeatureWidget/BaseFeatureDetail'),\n        ),\n      })\n    })\n  }\n}\n","import { AdapterType } from '../../pluggableElementTypes'\nimport PluginManager from '../../PluginManager'\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'CytobandAdapter',\n        configSchema,\n        getAdapterClass: () => import('./CytobandAdapter').then(f => f.default),\n      }),\n  )\n}\n","import {\n  isModelType,\n  isType,\n  types,\n  IAnyType,\n  IAnyModelType,\n} from 'mobx-state-tree'\n\n// Pluggable elements\nimport PluggableElementBase from './pluggableElementTypes/PluggableElementBase'\nimport RendererType from './pluggableElementTypes/renderers/RendererType'\nimport AdapterType from './pluggableElementTypes/AdapterType'\nimport TrackType from './pluggableElementTypes/TrackType'\nimport DisplayType from './pluggableElementTypes/DisplayType'\nimport ViewType from './pluggableElementTypes/ViewType'\nimport WidgetType from './pluggableElementTypes/WidgetType'\nimport ConnectionType from './pluggableElementTypes/ConnectionType'\nimport RpcMethodType from './pluggableElementTypes/RpcMethodType'\nimport InternetAccountType from './pluggableElementTypes/InternetAccountType'\nimport TextSearchAdapterType from './pluggableElementTypes/TextSearchAdapterType'\nimport AddTrackWorkflowType from './pluggableElementTypes/AddTrackWorkflowType'\n\nimport {\n  ConfigurationSchema,\n  isBareConfigurationSchemaType,\n} from './configuration'\n\nimport Plugin from './Plugin'\nimport ReExports from './ReExports'\n\nimport {\n  PluggableElementType,\n  PluggableElementMember,\n} from './pluggableElementTypes'\nimport { AbstractRootModel } from './util'\nimport CorePlugin from './CorePlugin'\nimport createJexlInstance from './util/jexl'\nimport { PluginDefinition } from './PluginLoader'\n\n/** little helper class that keeps groups of callbacks that are\nthen run in a specified order by group */\nclass PhasedScheduler<PhaseName extends string> {\n  phaseCallbacks = new Map<PhaseName, Function[]>()\n\n  phaseOrder: PhaseName[] = []\n\n  constructor(...phaseOrder: PhaseName[]) {\n    this.phaseOrder = phaseOrder\n  }\n\n  add(phase: PhaseName, callback: Function) {\n    if (!this.phaseOrder.includes(phase)) {\n      throw new Error(`unknown phase ${phase}`)\n    }\n    let phaseCallbacks = this.phaseCallbacks.get(phase)\n    if (!phaseCallbacks) {\n      phaseCallbacks = []\n      this.phaseCallbacks.set(phase, phaseCallbacks)\n    }\n    phaseCallbacks.push(callback)\n  }\n\n  run() {\n    this.phaseOrder.forEach(phaseName => {\n      this.phaseCallbacks.get(phaseName)?.forEach(callback => callback())\n    })\n  }\n}\n\ntype PluggableElementTypeGroup =\n  | 'renderer'\n  | 'adapter'\n  | 'display'\n  | 'track'\n  | 'connection'\n  | 'view'\n  | 'widget'\n  | 'rpc method'\n  | 'internet account'\n  | 'text search adapter'\n  | 'add track workflow'\n\n/** internal class that holds the info for a certain element type */\nclass TypeRecord<ElementClass extends PluggableElementBase> {\n  registeredTypes: { [name: string]: ElementClass } = {}\n\n  constructor(\n    public typeName: string,\n    public baseClass: // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    | { new (...args: any[]): ElementClass }\n      // covers abstract class case\n      | (Function & {\n          prototype: ElementClass\n        }),\n  ) {}\n\n  add(name: string, t: ElementClass) {\n    this.registeredTypes[name] = t\n  }\n\n  has(name: string) {\n    return name in this.registeredTypes\n  }\n\n  get(name: string) {\n    if (!this.has(name)) {\n      throw new Error(\n        `${this.typeName} '${name}' not found, perhaps its plugin is not loaded or its plugin has not added it.`,\n      )\n    }\n    return this.registeredTypes[name]\n  }\n\n  all() {\n    return Object.values(this.registeredTypes)\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AnyFunction = (...args: any) => any\n\n/**\n * free-form string-to-unknown mapping of metadata related to the instance\n * of this plugin. `isCore` is typically set to `Boolean(true)` if the plugin was\n * loaded as part of the \"core\" set of plugins for this application.\n * Can also use this metadata to stash other things about why the plugin is\n * loaded, such as where it came from, what plugin depends on it, etc.\n */\nexport type PluginMetadata = Record<string, unknown>\n\nexport interface PluginLoadRecord {\n  metadata?: PluginMetadata\n  plugin: Plugin\n}\nexport interface RuntimePluginLoadRecord extends PluginLoadRecord {\n  definition: PluginDefinition\n}\n\nexport default class PluginManager {\n  plugins: Plugin[] = []\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  jexl: any = createJexlInstance()\n\n  pluginMetadata: Record<string, PluginMetadata> = {}\n\n  runtimePluginDefinitions: PluginDefinition[] = []\n\n  elementCreationSchedule = new PhasedScheduler<PluggableElementTypeGroup>(\n    'renderer',\n    'adapter',\n    'text search adapter',\n    'display',\n    'track',\n    'connection',\n    'view',\n    'widget',\n    'rpc method',\n    'internet account',\n    'add track workflow',\n  ) as PhasedScheduler<PluggableElementTypeGroup> | undefined\n\n  rendererTypes = new TypeRecord('RendererType', RendererType)\n\n  adapterTypes = new TypeRecord('AdapterType', AdapterType)\n\n  textSearchAdapterTypes = new TypeRecord(\n    'TextSearchAdapterType',\n    TextSearchAdapterType,\n  )\n\n  trackTypes = new TypeRecord('TrackType', TrackType)\n\n  displayTypes = new TypeRecord('DisplayType', DisplayType)\n\n  connectionTypes = new TypeRecord('ConnectionType', ConnectionType)\n\n  viewTypes = new TypeRecord('ViewType', ViewType)\n\n  widgetTypes = new TypeRecord('WidgetType', WidgetType)\n\n  rpcMethods = new TypeRecord('RpcMethodType', RpcMethodType)\n\n  addTrackWidgets = new TypeRecord('AddTrackWorkflow', AddTrackWorkflowType)\n\n  internetAccountTypes = new TypeRecord(\n    'InternetAccountType',\n    InternetAccountType,\n  )\n\n  configured = false\n\n  rootModel?: AbstractRootModel\n\n  extensionPoints: Map<string, Function[]> = new Map()\n\n  constructor(initialPlugins: (Plugin | PluginLoadRecord)[] = []) {\n    // add the core plugin\n    this.addPlugin({ plugin: new CorePlugin(), metadata: { isCore: true } })\n\n    // add all the initial plugins\n    initialPlugins.forEach(plugin => {\n      this.addPlugin(plugin)\n    })\n  }\n\n  pluginConfigurationSchemas() {\n    const configurationSchemas: { [key: string]: unknown } = {}\n    this.plugins.forEach(plugin => {\n      if (plugin.configurationSchema) {\n        configurationSchemas[plugin.name] = plugin.configurationSchema\n      }\n    })\n    return configurationSchemas\n  }\n\n  addPlugin(load: Plugin | PluginLoadRecord | RuntimePluginLoadRecord) {\n    if (this.configured) {\n      throw new Error('JBrowse already configured, cannot add plugins')\n    }\n\n    // check for availability of 'install' and 'configure' as a proxy for being\n    // an 'instanceof Plugin'\n    const [plugin, metadata = {}] =\n      'install' in load && 'configure' in load\n        ? [load, {}]\n        : [load.plugin, load.metadata]\n\n    if (this.plugins.includes(plugin)) {\n      throw new Error('plugin already installed')\n    }\n\n    this.pluginMetadata[plugin.name] = metadata\n    if ('definition' in load) {\n      this.runtimePluginDefinitions.push(load.definition)\n    }\n    plugin.install(this)\n    this.plugins.push(plugin)\n    return this\n  }\n\n  getPlugin(name: string) {\n    return this.plugins.find(p => p.name === name)\n  }\n\n  hasPlugin(name: string) {\n    return this.getPlugin(name) !== undefined\n  }\n\n  createPluggableElements() {\n    // run the creation callbacks for each element type in order.\n    // see elementCreationSchedule above for the creation order\n    if (this.elementCreationSchedule) {\n      this.elementCreationSchedule.run()\n      delete this.elementCreationSchedule\n    }\n    return this\n  }\n\n  setRootModel(rootModel: AbstractRootModel) {\n    this.rootModel = rootModel\n  }\n\n  configure() {\n    if (this.configured) {\n      throw new Error('already configured')\n    }\n\n    this.plugins.forEach(plugin => plugin.configure(this))\n\n    this.configured = true\n\n    return this\n  }\n\n  getElementTypeRecord(\n    groupName: PluggableElementTypeGroup,\n  ): TypeRecord<PluggableElementBase> {\n    switch (groupName) {\n      case 'adapter':\n        return this.adapterTypes\n      case 'text search adapter':\n        return this.textSearchAdapterTypes\n      case 'connection':\n        return this.connectionTypes\n      case 'widget':\n        return this.widgetTypes\n      case 'renderer':\n        return this.rendererTypes\n      case 'display':\n        return this.displayTypes\n      case 'track':\n        return this.trackTypes\n      case 'view':\n        return this.viewTypes\n      case 'rpc method':\n        return this.rpcMethods\n      case 'internet account':\n        return this.internetAccountTypes\n      case 'add track workflow':\n        return this.addTrackWidgets\n      default:\n        throw new Error(`invalid element type '${groupName}'`)\n    }\n  }\n\n  addElementType(\n    groupName: PluggableElementTypeGroup,\n    creationCallback: (pluginManager: PluginManager) => PluggableElementType,\n  ) {\n    if (typeof creationCallback !== 'function') {\n      throw new Error(\n        'must provide a callback function that returns the new type object',\n      )\n    }\n    const typeRecord = this.getElementTypeRecord(groupName)\n\n    this.elementCreationSchedule?.add(groupName, () => {\n      const newElement = creationCallback(this)\n      if (!newElement.name) {\n        throw new Error(`cannot add a ${groupName} with no name`)\n      }\n\n      if (typeRecord.has(newElement.name)) {\n        throw new Error(\n          `${groupName} ${newElement.name} already registered, cannot register it again`,\n        )\n      }\n\n      typeRecord.add(\n        newElement.name,\n        this.evaluateExtensionPoint(\n          'Core-extendPluggableElement',\n          newElement,\n        ) as PluggableElementType,\n      )\n    })\n\n    return this\n  }\n\n  getElementType(groupName: PluggableElementTypeGroup, typeName: string) {\n    return this.getElementTypeRecord(groupName).get(typeName)\n  }\n\n  getElementTypesInGroup(groupName: PluggableElementTypeGroup) {\n    return this.getElementTypeRecord(groupName).all()\n  }\n\n  getTrackElements() {\n    return this.getElementTypesInGroup('track') as TrackType[]\n  }\n\n  getConnectionElements() {\n    return this.getElementTypesInGroup('connection') as ConnectionType[]\n  }\n\n  getAddTrackWorkflowElements() {\n    return this.getElementTypesInGroup(\n      'add track workflow',\n    ) as AddTrackWorkflowType[]\n  }\n\n  getRpcElements() {\n    return this.getElementTypesInGroup('rpc method') as RpcMethodType[]\n  }\n\n  getDisplayElements() {\n    return this.getElementTypesInGroup('display') as DisplayType[]\n  }\n\n  getAdapterElements() {\n    return this.getElementTypesInGroup('adapter') as AdapterType[]\n  }\n\n  /** get a MST type for the union of all specified pluggable MST types */\n  pluggableMstType(\n    groupName: PluggableElementTypeGroup,\n    fieldName: PluggableElementMember,\n    fallback: IAnyType = types.maybe(types.null),\n  ) {\n    const pluggableTypes = this.getElementTypeRecord(groupName)\n      .all()\n      // @ts-expect-error\n      .map(t => t[fieldName])\n      .filter(t => isType(t) && isModelType(t)) as IAnyType[]\n\n    // try to smooth over the case when no types are registered, mostly\n    // encountered in tests\n    if (pluggableTypes.length === 0 && typeof jest === 'undefined') {\n      console.warn(\n        `No pluggable types found matching ('${groupName}','${fieldName}')`,\n      )\n      return fallback\n    }\n    return types.union(...pluggableTypes)\n  }\n\n  /** get a MST type for the union of all specified pluggable config schemas */\n  pluggableConfigSchemaType(\n    typeGroup: PluggableElementTypeGroup,\n    fieldName: PluggableElementMember = 'configSchema',\n  ) {\n    const pluggableTypes = this.getElementTypeRecord(typeGroup)\n      .all()\n      // @ts-expect-error\n      .map(t => t[fieldName])\n      .filter(t => isBareConfigurationSchemaType(t)) as IAnyType[]\n\n    if (pluggableTypes.length === 0) {\n      pluggableTypes.push(ConfigurationSchema('Null', {}))\n    }\n    return types.union(...pluggableTypes) as IAnyModelType\n  }\n\n  jbrequireCache = new Map()\n\n  lib = ReExports\n\n  load = <FTYPE extends AnyFunction>(lib: FTYPE): ReturnType<FTYPE> => {\n    if (!this.jbrequireCache.has(lib)) {\n      this.jbrequireCache.set(lib, lib(this))\n    }\n    return this.jbrequireCache.get(lib)\n  }\n\n  /**\n   * Get the re-exported version of the given package name.\n   * Throws an error if the package is not re-exported by the plugin manager.\n   *\n   * @returns the library's default export\n   */\n  jbrequire = (\n    lib: keyof typeof ReExports | AnyFunction | { default: AnyFunction },\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): any => {\n    if (typeof lib === 'string') {\n      const pack = this.lib[lib]\n      if (!pack) {\n        throw new TypeError(\n          `No jbrequire re-export defined for package '${lib}'. If this package must be shared between plugins, add it to ReExports.js. If it does not need to be shared, just import it normally.`,\n        )\n      }\n      return pack\n    }\n\n    if (typeof lib === 'function') {\n      return this.load(lib)\n    }\n\n    if (lib.default) {\n      return this.jbrequire(lib.default)\n    }\n\n    throw new TypeError(\n      'lib passed to jbrequire must be either a string or a function',\n    )\n  }\n\n  getRendererType(typeName: string): RendererType {\n    return this.rendererTypes.get(typeName)\n  }\n\n  getRendererTypes(): RendererType[] {\n    return this.rendererTypes.all()\n  }\n\n  getAdapterType(typeName: string): AdapterType {\n    return this.adapterTypes.get(typeName)\n  }\n\n  getTextSearchAdapterType(typeName: string): TextSearchAdapterType {\n    return this.textSearchAdapterTypes.get(typeName)\n  }\n\n  getTrackType(typeName: string): TrackType {\n    return this.trackTypes.get(typeName)\n  }\n\n  getDisplayType(typeName: string): DisplayType {\n    return this.displayTypes.get(typeName)\n  }\n\n  getViewType(typeName: string): ViewType {\n    return this.viewTypes.get(typeName)\n  }\n\n  getAddTrackWorkflow(typeName: string): AddTrackWorkflowType {\n    return this.addTrackWidgets.get(typeName)\n  }\n\n  getWidgetType(typeName: string): WidgetType {\n    return this.widgetTypes.get(typeName)\n  }\n\n  getConnectionType(typeName: string): ConnectionType {\n    return this.connectionTypes.get(typeName)\n  }\n\n  getRpcMethodType(methodName: string): RpcMethodType {\n    return this.rpcMethods.get(methodName)\n  }\n\n  getInternetAccountType(name: string): InternetAccountType {\n    return this.internetAccountTypes.get(name)\n  }\n\n  addRendererType(cb: (pm: PluginManager) => RendererType) {\n    return this.addElementType('renderer', cb)\n  }\n\n  addAdapterType(cb: (pm: PluginManager) => AdapterType) {\n    return this.addElementType('adapter', cb)\n  }\n\n  addTextSearchAdapterType(cb: (pm: PluginManager) => TextSearchAdapterType) {\n    return this.addElementType('text search adapter', cb)\n  }\n\n  addTrackType(cb: (pm: PluginManager) => TrackType) {\n    // Goes through the already-created displays and registers the ones that\n    // specify this track type\n    const callback = () => {\n      const track = cb(this)\n      const displays = this.getElementTypesInGroup('display') as DisplayType[]\n      displays.forEach(display => {\n        // track may have already added the displayType in its cb\n        if (\n          display.trackType === track.name &&\n          !track.displayTypes.includes(display)\n        ) {\n          track.addDisplayType(display)\n        }\n      })\n      return track\n    }\n    return this.addElementType('track', callback)\n  }\n\n  addDisplayType(cb: (pluginManager: PluginManager) => DisplayType) {\n    return this.addElementType('display', cb)\n  }\n\n  addViewType(cb: (pluginManager: PluginManager) => ViewType) {\n    const callback = () => {\n      const newView = cb(this)\n      const displays = this.getElementTypesInGroup('display') as DisplayType[]\n      displays.forEach(display => {\n        // view may have already added the displayType in its callback\n        // see ViewType for description of extendedName\n        if (\n          (display.viewType === newView.name ||\n            display.viewType === newView.extendedName) &&\n          !newView.displayTypes.includes(display)\n        ) {\n          newView.addDisplayType(display)\n        }\n      })\n      return newView\n    }\n    return this.addElementType('view', callback)\n  }\n\n  addWidgetType(cb: (pm: PluginManager) => WidgetType) {\n    return this.addElementType('widget', cb)\n  }\n\n  addConnectionType(cb: (pm: PluginManager) => ConnectionType) {\n    return this.addElementType('connection', cb)\n  }\n\n  addRpcMethod(cb: (pm: PluginManager) => RpcMethodType) {\n    return this.addElementType('rpc method', cb)\n  }\n\n  addInternetAccountType(cb: (pm: PluginManager) => InternetAccountType) {\n    return this.addElementType('internet account', cb)\n  }\n\n  addAddTrackWorkflowType(cb: (pm: PluginManager) => AddTrackWorkflowType) {\n    return this.addElementType('add track workflow', cb)\n  }\n\n  addToExtensionPoint<T>(\n    extensionPointName: string,\n    callback: (extendee: T, props: Record<string, unknown>) => T,\n  ) {\n    let callbacks = this.extensionPoints.get(extensionPointName)\n    if (!callbacks) {\n      callbacks = []\n      this.extensionPoints.set(extensionPointName, callbacks)\n    }\n    callbacks.push(callback)\n  }\n\n  evaluateExtensionPoint(\n    extensionPointName: string,\n    extendee: unknown,\n    props?: Record<string, unknown>,\n  ) {\n    const callbacks = this.extensionPoints.get(extensionPointName)\n    let accumulator = extendee\n    if (callbacks) {\n      for (const callback of callbacks) {\n        try {\n          accumulator = callback(accumulator, props)\n        } catch (error) {\n          console.error(error)\n        }\n      }\n    }\n    return accumulator\n  }\n\n  async evaluateAsyncExtensionPoint(\n    extensionPointName: string,\n    extendee: unknown,\n    props?: Record<string, unknown>,\n  ) {\n    const callbacks = this.extensionPoints.get(extensionPointName)\n    let accumulator = extendee\n    if (callbacks) {\n      for (const callback of callbacks) {\n        try {\n          accumulator = await callback(accumulator, props)\n        } catch (error) {\n          console.error(error)\n        }\n      }\n    }\n    return accumulator\n  }\n}\n","/**\n * Used by plugin build systems to determine if a module is provided by JBrowse\n * globally and thus doesn't need to be bundled. A check in ./modules.tsx makes\n * sure this is in sync with the re-exported modules.\n */\nexport default [\n  'mobx',\n  'mobx-state-tree',\n  'react',\n  'react/jsx-runtime',\n  'react-dom',\n  'mobx-react',\n  '@mui/x-data-grid',\n  '@mui/material/utils',\n  '@material-ui/core/utils',\n  'tss-react/mui',\n  '@material-ui/core',\n  '@mui/material',\n  'prop-types',\n\n  '@mui/material/styles',\n  '@material-ui/core/styles',\n  '@material-ui/core/Accordion',\n  '@material-ui/core/AccordionActions',\n  '@material-ui/core/AccordionDetails',\n  '@material-ui/core/Alert',\n  '@material-ui/core/AlertTitle',\n  '@material-ui/core/Autocomplete',\n  '@material-ui/core/Avatar',\n  '@material-ui/core/AvatarGroup',\n  '@material-ui/core/Backdrop',\n  '@material-ui/core/Badge',\n  '@material-ui/core/Box',\n  '@material-ui/core/Breadcrumbs',\n  '@material-ui/core/Button',\n  '@material-ui/core/ButtonGroup',\n  '@material-ui/core/Card',\n  '@material-ui/core/CardActions',\n  '@material-ui/core/CardActionArea',\n  '@material-ui/core/CardContent',\n  '@material-ui/core/CardHeader',\n  '@material-ui/core/CardMedia',\n  '@material-ui/core/CircularProgress',\n  '@material-ui/core/Collapse',\n  '@material-ui/core/ClickAwayListener',\n  '@material-ui/core/Chip',\n  '@material-ui/core/Checkbox',\n  '@material-ui/core/Container',\n  '@material-ui/core/Dialog',\n  '@material-ui/core/DialogActions',\n  '@material-ui/core/DialogTitle',\n  '@material-ui/core/DialogContent',\n  '@material-ui/core/DialogContentText',\n  '@material-ui/core/Divider',\n  '@material-ui/core/Drawer',\n  '@material-ui/core/Fab',\n  '@material-ui/core/Fade',\n  '@material-ui/core/FilledInput',\n  '@material-ui/core/FormLabel',\n  '@material-ui/core/FormControl',\n  '@material-ui/core/FormControlLabel',\n  '@material-ui/core/FormHelperText',\n  '@material-ui/core/FormGroup',\n  '@material-ui/core/Grid',\n  '@material-ui/core/Grow',\n  '@material-ui/core/Icon',\n  '@material-ui/core/IconButton',\n  '@material-ui/core/Input',\n  '@material-ui/core/InputBase',\n  '@material-ui/core/InputLabel',\n  '@material-ui/core/InputAdornment',\n  '@material-ui/core/Link',\n  '@material-ui/core/LinearProgress',\n  '@material-ui/core/List',\n  '@material-ui/core/ListItem',\n  '@material-ui/core/ListItemAvatar',\n  '@material-ui/core/ListItemSecondaryAction',\n  '@material-ui/core/ListItemIcon',\n  '@material-ui/core/ListSubheader',\n  '@material-ui/core/ListItemText',\n  '@material-ui/core/Menu',\n  '@material-ui/core/MenuItem',\n  '@material-ui/core/MenuList',\n  '@material-ui/core/Modal',\n  '@material-ui/core/NativeSelect',\n  '@material-ui/core/OutlinedInput',\n  '@material-ui/core/Pagination',\n  '@material-ui/core/PaginationItem',\n  '@material-ui/core/Paper',\n  '@material-ui/core/Popover',\n  '@material-ui/core/Popper',\n  '@material-ui/core/Portal',\n  '@material-ui/core/Radio',\n  '@material-ui/core/RadioGroup',\n  '@material-ui/core/Rating',\n  '@material-ui/core/ScopedCssBaseline',\n  '@material-ui/core/Select',\n  '@material-ui/core/Skeleton',\n  '@material-ui/core/Slider',\n  '@material-ui/core/Snackbar',\n  '@material-ui/core/SnackbarContent',\n  '@material-ui/core/SpeedDial',\n  '@material-ui/core/SpeedDialAction',\n  '@material-ui/core/SpeedDialIcon',\n  '@material-ui/core/Stack',\n  '@material-ui/core/Step',\n  '@material-ui/core/StepButton',\n  '@material-ui/core/StepConnector',\n  '@material-ui/core/StepLabel',\n  '@material-ui/core/StepIcon',\n  '@material-ui/core/Stepper',\n  '@material-ui/core/SvgIcon',\n  '@material-ui/core/Switch',\n  '@material-ui/core/Tab',\n  '@material-ui/core/Table',\n  '@material-ui/core/TableBody',\n  '@material-ui/core/TableCell',\n  '@material-ui/core/TableContainer',\n  '@material-ui/core/TableFooter',\n  '@material-ui/core/TableHead',\n  '@material-ui/core/TablePagination',\n  '@material-ui/core/TableRow',\n  '@material-ui/core/TableSortLabel',\n  '@material-ui/core/Tabs',\n  '@material-ui/core/TextField',\n  '@material-ui/core/TextareaAutosize',\n  '@material-ui/core/ToggleButton',\n  '@material-ui/core/ToggleButtonGroup',\n  '@material-ui/core/Toolbar',\n  '@material-ui/core/Tooltip',\n  '@material-ui/core/Typography',\n  '@mui/material/Accordion',\n  '@mui/material/AccordionActions',\n  '@mui/material/AccordionDetails',\n  '@mui/material/Alert',\n  '@mui/material/AlertTitle',\n  '@mui/material/Autocomplete',\n  '@mui/material/Avatar',\n  '@mui/material/AvatarGroup',\n  '@mui/material/Backdrop',\n  '@mui/material/Badge',\n  '@mui/material/Box',\n  '@mui/material/Breadcrumbs',\n  '@mui/material/Button',\n  '@mui/material/ButtonGroup',\n  '@mui/material/Card',\n  '@mui/material/CardActions',\n  '@mui/material/CardActionArea',\n  '@mui/material/CardContent',\n  '@mui/material/CardHeader',\n  '@mui/material/CardMedia',\n  '@mui/material/CircularProgress',\n  '@mui/material/Collapse',\n  '@mui/material/ClickAwayListener',\n  '@mui/material/Chip',\n  '@mui/material/Checkbox',\n  '@mui/material/Container',\n  '@mui/material/Dialog',\n  '@mui/material/DialogActions',\n  '@mui/material/DialogTitle',\n  '@mui/material/DialogContent',\n  '@mui/material/DialogContentText',\n  '@mui/material/Divider',\n  '@mui/material/Drawer',\n  '@mui/material/Fab',\n  '@mui/material/Fade',\n  '@mui/material/FilledInput',\n  '@mui/material/FormLabel',\n  '@mui/material/FormControl',\n  '@mui/material/FormControlLabel',\n  '@mui/material/FormHelperText',\n  '@mui/material/FormGroup',\n  '@mui/material/Grid',\n  '@mui/material/Grow',\n  '@mui/material/Icon',\n  '@mui/material/IconButton',\n  '@mui/material/Input',\n  '@mui/material/InputBase',\n  '@mui/material/InputLabel',\n  '@mui/material/InputAdornment',\n  '@mui/material/Link',\n  '@mui/material/LinearProgress',\n  '@mui/material/List',\n  '@mui/material/ListItem',\n  '@mui/material/ListItemAvatar',\n  '@mui/material/ListItemSecondaryAction',\n  '@mui/material/ListItemIcon',\n  '@mui/material/ListSubheader',\n  '@mui/material/ListItemText',\n  '@mui/material/Menu',\n  '@mui/material/MenuItem',\n  '@mui/material/MenuList',\n  '@mui/material/Modal',\n  '@mui/material/NativeSelect',\n  '@mui/material/OutlinedInput',\n  '@mui/material/Pagination',\n  '@mui/material/PaginationItem',\n  '@mui/material/Paper',\n  '@mui/material/Popover',\n  '@mui/material/Popper',\n  '@mui/material/Portal',\n  '@mui/material/Radio',\n  '@mui/material/RadioGroup',\n  '@mui/material/Rating',\n  '@mui/material/ScopedCssBaseline',\n  '@mui/material/Select',\n  '@mui/material/Skeleton',\n  '@mui/material/Slider',\n  '@mui/material/Snackbar',\n  '@mui/material/SnackbarContent',\n  '@mui/material/SpeedDial',\n  '@mui/material/SpeedDialAction',\n  '@mui/material/SpeedDialIcon',\n  '@mui/material/Stack',\n  '@mui/material/Step',\n  '@mui/material/StepButton',\n  '@mui/material/StepConnector',\n  '@mui/material/StepLabel',\n  '@mui/material/StepIcon',\n  '@mui/material/Stepper',\n  '@mui/material/SvgIcon',\n  '@mui/material/Switch',\n  '@mui/material/Tab',\n  '@mui/material/Table',\n  '@mui/material/TableBody',\n  '@mui/material/TableCell',\n  '@mui/material/TableContainer',\n  '@mui/material/TableFooter',\n  '@mui/material/TableHead',\n  '@mui/material/TablePagination',\n  '@mui/material/TableRow',\n  '@mui/material/TableSortLabel',\n  '@mui/material/Tabs',\n  '@mui/material/TextField',\n  '@mui/material/TextareaAutosize',\n  '@mui/material/ToggleButton',\n  '@mui/material/ToggleButtonGroup',\n  '@mui/material/Toolbar',\n  '@mui/material/Tooltip',\n  '@mui/material/Typography',\n  '@material-ui/lab/ToggleButton',\n  '@material-ui/lab/ToggleButtonGroup',\n  '@material-ui/lab/Autocomplete',\n  '@material-ui/lab/Alert',\n  '@material-ui/lab',\n  '@jbrowse/core/Plugin',\n  '@jbrowse/core/pluggableElementTypes',\n  '@jbrowse/core/pluggableElementTypes/ViewType',\n  '@jbrowse/core/pluggableElementTypes/AdapterType',\n  '@jbrowse/core/pluggableElementTypes/DisplayType',\n  '@jbrowse/core/pluggableElementTypes/TrackType',\n  '@jbrowse/core/pluggableElementTypes/WidgetType',\n\n  '@jbrowse/core/pluggableElementTypes/models',\n  '@jbrowse/core/pluggableElementTypes/renderers/ServerSideRendererType',\n  '@jbrowse/core/pluggableElementTypes/renderers/CircularChordRendererType',\n  '@jbrowse/core/pluggableElementTypes/renderers/BoxRendererType',\n  '@jbrowse/core/pluggableElementTypes/renderers/FeatureRendererType',\n  '@jbrowse/core/pluggableElementTypes/renderers/RendererType',\n  '@jbrowse/core/configuration',\n  '@jbrowse/core/util/types/mst',\n  '@jbrowse/core/ui',\n  '@jbrowse/core/util',\n  '@jbrowse/core/util/color',\n  '@jbrowse/core/util/layouts',\n  '@jbrowse/core/util/tracks',\n  '@jbrowse/core/util/Base1DViewModel',\n  '@jbrowse/core/util/io',\n  '@jbrowse/core/util/mst-reflection',\n  '@jbrowse/core/util/rxjs',\n  '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail',\n  '@jbrowse/core/data_adapters/BaseAdapter',\n]\n","// this is all the stuff that the pluginManager re-exports for plugins to use\nimport React, { lazy, LazyExoticComponent, Suspense } from 'react'\nimport * as ReactJSXRuntime from 'react/jsx-runtime'\nimport * as ReactDom from 'react-dom'\nimport * as mobx from 'mobx'\nimport * as mst from 'mobx-state-tree'\nimport * as mxreact from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\nimport PropTypes from 'prop-types'\n\nimport * as MUIStyles from '@mui/material/styles'\nimport * as MUIUtils from '@mui/material/utils'\nimport { useTheme } from '@mui/material'\nimport {\n  useGridApiContext,\n  useGridApiRef,\n  useGridRootProps,\n} from '@mui/x-data-grid'\n\n// material-ui lab\nimport * as BaseAdapterExports from '../data_adapters/BaseAdapter'\n\nimport Base1DView from '../util/Base1DViewModel'\nimport * as pluggableElementTypes from '../pluggableElementTypes'\nimport ViewType from '../pluggableElementTypes/ViewType'\nimport AdapterType from '../pluggableElementTypes/AdapterType'\nimport DisplayType from '../pluggableElementTypes/DisplayType'\nimport TrackType from '../pluggableElementTypes/TrackType'\nimport WidgetType from '../pluggableElementTypes/WidgetType'\n\nimport * as pluggableElementTypeModels from '../pluggableElementTypes/models'\nimport * as ServerSideRendererType from '../pluggableElementTypes/renderers/ServerSideRendererType'\nimport CircularChordRendererType from '../pluggableElementTypes/renderers/CircularChordRendererType'\nimport * as BoxRendererType from '../pluggableElementTypes/renderers/BoxRendererType'\nimport * as FeatureRendererType from '../pluggableElementTypes/renderers/FeatureRendererType'\nimport * as RendererType from '../pluggableElementTypes/renderers/RendererType'\n\nimport * as Configuration from '../configuration'\nimport Plugin from '../Plugin'\nimport * as coreUi from '../ui'\nimport * as coreUtil from '../util'\nimport * as coreColor from '../util/color'\nimport * as coreLayouts from '../util/layouts'\nimport * as trackUtils from '../util/tracks'\nimport * as coreIo from '../util/io'\nimport * as coreMstReflection from '../util/mst-reflection'\nimport * as rxjs from '../util/rxjs'\nimport * as mstTypes from '../util/types/mst'\n\nimport reExportsList from './list'\n\nconst Entries = {\n  Accordion: lazy(() => import('@mui/material/Accordion')),\n  AccordionActions: lazy(() => import('@mui/material/AccordionActions')),\n  AccordionDetails: lazy(() => import('@mui/material/AccordionDetails')),\n  Alert: lazy(() => import('@mui/material/Alert')),\n  AlertTitle: lazy(() => import('@mui/material/AlertTitle')),\n  Autocomplete: lazy(() => import('@mui/material/Autocomplete')),\n  Avatar: lazy(() => import('@mui/material/Avatar')),\n  AvatarGroup: lazy(() => import('@mui/material/AvatarGroup')),\n  Backdrop: lazy(() => import('@mui/material/Backdrop')),\n  Badge: lazy(() => import('@mui/material/Badge')),\n  Box: lazy(() => import('@mui/material/Box')),\n  Breadcrumbs: lazy(() => import('@mui/material/Breadcrumbs')),\n  Button: lazy(() => import('@mui/material/Button')),\n  ButtonGroup: lazy(() => import('@mui/material/ButtonGroup')),\n  Card: lazy(() => import('@mui/material/Card')),\n  CardActions: lazy(() => import('@mui/material/CardActions')),\n  CardActionArea: lazy(() => import('@mui/material/CardActionArea')),\n  CardContent: lazy(() => import('@mui/material/CardContent')),\n  CardHeader: lazy(() => import('@mui/material/CardHeader')),\n  CardMedia: lazy(() => import('@mui/material/CardMedia')),\n  CircularProgress: lazy(() => import('@mui/material/CircularProgress')),\n  Collapse: lazy(() => import('@mui/material/Collapse')),\n  ClickAwayListener: lazy(() => import('@mui/material/ClickAwayListener')),\n  Chip: lazy(() => import('@mui/material/Chip')),\n  Checkbox: lazy(() => import('@mui/material/Checkbox')),\n  Container: lazy(() => import('@mui/material/Container')),\n  Dialog: lazy(() => import('@mui/material/Dialog')),\n  DialogActions: lazy(() => import('@mui/material/DialogActions')),\n  DialogTitle: lazy(() => import('@mui/material/DialogTitle')),\n  DialogContent: lazy(() => import('@mui/material/DialogContent')),\n  DialogContentText: lazy(() => import('@mui/material/DialogContentText')),\n  Divider: lazy(() => import('@mui/material/Divider')),\n  Drawer: lazy(() => import('@mui/material/Drawer')),\n  Fab: lazy(() => import('@mui/material/Fab')),\n  Fade: lazy(() => import('@mui/material/Fade')),\n  FilledInput: lazy(() => import('@mui/material/FilledInput')),\n  FormLabel: lazy(() => import('@mui/material/FormLabel')),\n  FormControl: lazy(() => import('@mui/material/FormControl')),\n  FormControlLabel: lazy(() => import('@mui/material/FormControlLabel')),\n  FormHelperText: lazy(() => import('@mui/material/FormHelperText')),\n  FormGroup: lazy(() => import('@mui/material/FormGroup')),\n  Grid: lazy(() => import('@mui/material/Grid')),\n  Grow: lazy(() => import('@mui/material/Grow')),\n  Icon: lazy(() => import('@mui/material/Icon')),\n  IconButton: lazy(() => import('@mui/material/IconButton')),\n  Input: lazy(() => import('@mui/material/Input')),\n  InputBase: lazy(() => import('@mui/material/InputBase')),\n  InputLabel: lazy(() => import('@mui/material/InputLabel')),\n  InputAdornment: lazy(() => import('@mui/material/InputAdornment')),\n  Link: lazy(() => import('@mui/material/Link')),\n  LinearProgress: lazy(() => import('@mui/material/LinearProgress')),\n  List: lazy(() => import('@mui/material/List')),\n  ListItem: lazy(() => import('@mui/material/ListItem')),\n  ListItemAvatar: lazy(() => import('@mui/material/ListItemAvatar')),\n  ListItemSecondaryAction: lazy(\n    () => import('@mui/material/ListItemSecondaryAction'),\n  ),\n  ListItemIcon: lazy(() => import('@mui/material/ListItemIcon')),\n  ListSubheader: lazy(() => import('@mui/material/ListSubheader')),\n  ListItemText: lazy(() => import('@mui/material/ListItemText')),\n  Menu: lazy(() => import('@mui/material/Menu')),\n  MenuItem: lazy(() => import('@mui/material/MenuItem')),\n  MenuList: lazy(() => import('@mui/material/MenuList')),\n  Modal: lazy(() => import('@mui/material/Modal')),\n  NativeSelect: lazy(() => import('@mui/material/NativeSelect')),\n  OutlinedInput: lazy(() => import('@mui/material/OutlinedInput')),\n  Pagination: lazy(() => import('@mui/material/Pagination')),\n  PaginationItem: lazy(() => import('@mui/material/PaginationItem')),\n  Paper: lazy(() => import('@mui/material/Paper')),\n  Popover: lazy(() => import('@mui/material/Popover')),\n  Popper: lazy(() => import('@mui/material/Popper')),\n  Portal: lazy(() => import('@mui/material/Portal')),\n  Radio: lazy(() => import('@mui/material/Radio')),\n  RadioGroup: lazy(() => import('@mui/material/RadioGroup')),\n  Rating: lazy(() => import('@mui/material/Rating')),\n  ScopedCssBaseline: lazy(() => import('@mui/material/ScopedCssBaseline')),\n  Select: lazy(() => import('@mui/material/Select')),\n  Skeleton: lazy(() => import('@mui/material/Skeleton')),\n  Slider: lazy(() => import('@mui/material/Slider')),\n  Snackbar: lazy(() => import('@mui/material/Snackbar')),\n  SnackbarContent: lazy(() => import('@mui/material/SnackbarContent')),\n  SpeedDial: lazy(() => import('@mui/material/SpeedDial')),\n  SpeedDialAction: lazy(() => import('@mui/material/SpeedDialAction')),\n  SpeedDialIcon: lazy(() => import('@mui/material/SpeedDialIcon')),\n  Stack: lazy(() => import('@mui/material/Stack')),\n  Step: lazy(() => import('@mui/material/Step')),\n  StepButton: lazy(() => import('@mui/material/StepButton')),\n  StepConnector: lazy(() => import('@mui/material/StepConnector')),\n  StepLabel: lazy(() => import('@mui/material/StepLabel')),\n  StepIcon: lazy(() => import('@mui/material/StepIcon')),\n  Stepper: lazy(() => import('@mui/material/Stepper')),\n  SvgIcon: lazy(() => import('@mui/material/SvgIcon')),\n  Switch: lazy(() => import('@mui/material/Switch')),\n  Tab: lazy(() => import('@mui/material/Tab')),\n  Table: lazy(() => import('@mui/material/Table')),\n  TableBody: lazy(() => import('@mui/material/TableBody')),\n  TableCell: lazy(() => import('@mui/material/TableCell')),\n  TableContainer: lazy(() => import('@mui/material/TableContainer')),\n  TableFooter: lazy(() => import('@mui/material/TableFooter')),\n  TableHead: lazy(() => import('@mui/material/TableHead')),\n  TablePagination: lazy(() => import('@mui/material/TablePagination')),\n  TableRow: lazy(() => import('@mui/material/TableRow')),\n  TableSortLabel: lazy(() => import('@mui/material/TableSortLabel')),\n  Tabs: lazy(() => import('@mui/material/Tabs')),\n  TextField: lazy(() => import('@mui/material/TextField')),\n  TextareaAutosize: lazy(() => import('@mui/material/TextareaAutosize')),\n  ToggleButton: lazy(() => import('@mui/material/ToggleButton')),\n  ToggleButtonGroup: lazy(() => import('@mui/material/ToggleButtonGroup')),\n  Toolbar: lazy(() => import('@mui/material/Toolbar')),\n  Tooltip: lazy(() => import('@mui/material/Tooltip')),\n  Typography: lazy(() => import('@mui/material/Typography')),\n}\n\nconst LazyMUICore = Object.fromEntries(\n  Object.entries(Entries).map(([key, ReactComponent]) => [\n    key,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (props: any) => (\n      <Suspense fallback={<div />}>\n        <ReactComponent {...props} />\n      </Suspense>\n    ),\n  ]),\n)\n\nconst MaterialPrefixMUI = Object.fromEntries(\n  Object.entries(LazyMUICore).map(([key, value]) => [\n    '@material-ui/core/' + key,\n    value,\n  ]),\n)\n\nconst MuiPrefixMUI = Object.fromEntries(\n  Object.entries(LazyMUICore).map(([key, value]) => [\n    '@mui/material/' + key,\n    value,\n  ]),\n)\n\nconst Attributes = lazy(() => import('./Attributes'))\nconst FeatureDetails = lazy(() => import('./FeatureDetails'))\nconst BaseCard = lazy(() => import('./BaseCard'))\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst DataGridEntries: Record<string, LazyExoticComponent<any>> = {\n  DataGrid: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({ default: module.DataGrid })),\n  ),\n  GridActionsCellItem: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridActionsCellItem,\n    })),\n  ),\n  GridAddIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridAddIcon,\n    })),\n  ),\n  GridArrowDownwardIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridArrowDownwardIcon,\n    })),\n  ),\n  GridArrowUpwardIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridArrowUpwardIcon,\n    })),\n  ),\n  GridCellCheckboxForwardRef: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridCellCheckboxForwardRef,\n    })),\n  ),\n  GridCellCheckboxRenderer: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridCellCheckboxRenderer,\n    })),\n  ),\n  GridCheckCircleIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridCheckCircleIcon,\n    })),\n  ),\n  GridCheckIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridCheckIcon,\n    })),\n  ),\n  GridCloseIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridCloseIcon,\n    })),\n  ),\n  GridColumnHeaderSeparator: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridColumnHeaderSeparator,\n    })),\n  ),\n  GridColumnHeaderSortIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridColumnHeaderSortIcon,\n    })),\n  ),\n  GridColumnIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridColumnIcon,\n    })),\n  ),\n  GridColumnMenu: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridColumnMenu,\n    })),\n  ),\n  GridColumnMenuContainer: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridColumnMenuContainer,\n    })),\n  ),\n  GridDragIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridDragIcon,\n    })),\n  ),\n  GridExpandMoreIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridExpandMoreIcon,\n    })),\n  ),\n  GridFilterAltIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridFilterAltIcon,\n    })),\n  ),\n  GridFilterForm: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridFilterForm,\n    })),\n  ),\n  GridFilterListIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridFilterListIcon,\n    })),\n  ),\n  GridFilterPanel: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridFilterPanel,\n    })),\n  ),\n  GridFooter: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({ default: module.GridFooter })),\n  ),\n  GridFooterContainer: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridFooterContainer,\n    })),\n  ),\n  GridHeader: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({ default: module.GridHeader })),\n  ),\n  GridHeaderCheckbox: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridHeaderCheckbox,\n    })),\n  ),\n  GridKeyboardArrowRight: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridKeyboardArrowRight,\n    })),\n  ),\n  GridLoadIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridLoadIcon,\n    })),\n  ),\n  GridLoadingOverlay: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridLoadingOverlay,\n    })),\n  ),\n  GridMenuIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridMenuIcon,\n    })),\n  ),\n  GridMoreVertIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridMoreVertIcon,\n    })),\n  ),\n  GridNoRowsOverlay: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridNoRowsOverlay,\n    })),\n  ),\n  GridOverlay: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridOverlay,\n    })),\n  ),\n  GridPagination: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridPagination,\n    })),\n  ),\n  GridPanel: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({ default: module.GridPanel })),\n  ),\n  GridPanelWrapper: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridPanelWrapper,\n    })),\n  ),\n  GridPreferencesPanel: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridPreferencesPanel,\n    })),\n  ),\n  GridRemoveIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridRemoveIcon,\n    })),\n  ),\n  GridRoot: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({ default: module.GridRoot })),\n  ),\n  GridRowCount: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridRowCount,\n    })),\n  ),\n  GridSaveAltIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridSaveAltIcon,\n    })),\n  ),\n  GridSearchIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridSearchIcon,\n    })),\n  ),\n  GridSelectedRowCount: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridSelectedRowCount,\n    })),\n  ),\n  GridSeparatorIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridSeparatorIcon,\n    })),\n  ),\n  GridTableRowsIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridTableRowsIcon,\n    })),\n  ),\n  GridToolbar: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridToolbar,\n    })),\n  ),\n  GridToolbarColumnsButton: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridToolbarColumnsButton,\n    })),\n  ),\n  GridToolbarContainer: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridToolbarContainer,\n    })),\n  ),\n  GridToolbarDensitySelector: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridToolbarDensitySelector,\n    })),\n  ),\n  GridToolbarExport: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridToolbarExport,\n    })),\n  ),\n  GridToolbarExportContainer: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridToolbarExportContainer,\n    })),\n  ),\n  GridToolbarFilterButton: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridToolbarFilterButton,\n    })),\n  ),\n  GridTripleDotsVerticalIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridTripleDotsVerticalIcon,\n    })),\n  ),\n  GridViewHeadlineIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridViewHeadlineIcon,\n    })),\n  ),\n  GridViewStreamIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridViewStreamIcon,\n    })),\n  ),\n}\n\nconst LazyDataGridComponents = Object.fromEntries(\n  Object.entries(DataGridEntries).map(([key, ReactComponent]) => [\n    key,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (props: any) => (\n      <Suspense fallback={<div />}>\n        <ReactComponent {...props} />\n      </Suspense>\n    ),\n  ]),\n)\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst LazyAttributes = (props: any) => (\n  <Suspense fallback={<div />}>\n    <Attributes {...props} />\n  </Suspense>\n)\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst LazyFeatureDetails = (props: any) => (\n  <Suspense fallback={<div />}>\n    <FeatureDetails {...props} />\n  </Suspense>\n)\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst LazyBaseCard = (props: any) => (\n  <Suspense fallback={<div />}>\n    <BaseCard {...props} />\n  </Suspense>\n)\n\nconst libs = {\n  mobx,\n  'mobx-state-tree': mst,\n  react: React,\n  'react/jsx-runtime': ReactJSXRuntime,\n  'react-dom': ReactDom,\n  'mobx-react': mxreact,\n  '@mui/x-data-grid': {\n    useGridApiContext,\n    useGridApiRef,\n    useGridRootProps,\n    ...LazyDataGridComponents,\n  },\n\n  // special case so plugins can easily use @mui/icons-material; don't remove\n  '@mui/material/utils': MUIUtils,\n  '@material-ui/core/utils': MUIUtils,\n  'tss-react/mui': { makeStyles },\n\n  '@material-ui/core': {\n    ...LazyMUICore,\n    useTheme,\n    alpha: MUIStyles.alpha,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    makeStyles: (args: any) => {\n      const useStyles = makeStyles()(args)\n      return () => useStyles().classes\n    },\n  },\n  '@mui/material': {\n    ...LazyMUICore,\n    alpha: MUIStyles.alpha,\n    useTheme: MUIStyles.useTheme,\n  },\n  'prop-types': PropTypes,\n\n  // end special case\n  // material-ui subcomponents, should get rid of these\n  '@mui/material/styles': MUIStyles,\n  '@material-ui/core/styles': MUIStyles,\n  ...MaterialPrefixMUI,\n  ...MuiPrefixMUI,\n\n  // these are core in @mui/material, but used to be in @material-ui/lab\n  '@material-ui/lab/ToggleButton': Entries.ToggleButton,\n  '@material-ui/lab/ToggleButtonGroup': Entries.ToggleButtonGroup,\n  '@material-ui/lab/Autocomplete': Entries.Autocomplete,\n  '@material-ui/lab/Alert': Entries.Alert,\n  '@material-ui/lab': {\n    Alert: Entries.Alert,\n    Autocomplete: Entries.Autocomplete,\n    ToggleButton: Entries.ToggleButton,\n    ToggleButtonGroup: Entries.ToggleButtonGroup,\n  },\n\n  '@jbrowse/core/Plugin': Plugin,\n  '@jbrowse/core/pluggableElementTypes': pluggableElementTypes,\n  '@jbrowse/core/pluggableElementTypes/ViewType': ViewType,\n  '@jbrowse/core/pluggableElementTypes/AdapterType': AdapterType,\n  '@jbrowse/core/pluggableElementTypes/DisplayType': DisplayType,\n  '@jbrowse/core/pluggableElementTypes/TrackType': TrackType,\n  '@jbrowse/core/pluggableElementTypes/WidgetType': WidgetType,\n  '@jbrowse/core/pluggableElementTypes/models': pluggableElementTypeModels,\n  '@jbrowse/core/pluggableElementTypes/renderers/ServerSideRendererType':\n    ServerSideRendererType,\n  '@jbrowse/core/pluggableElementTypes/renderers/CircularChordRendererType':\n    CircularChordRendererType,\n  '@jbrowse/core/pluggableElementTypes/renderers/BoxRendererType':\n    BoxRendererType,\n  '@jbrowse/core/pluggableElementTypes/renderers/FeatureRendererType':\n    FeatureRendererType,\n  '@jbrowse/core/pluggableElementTypes/renderers/RendererType': RendererType,\n  '@jbrowse/core/configuration': Configuration,\n  '@jbrowse/core/util/types/mst': mstTypes,\n  '@jbrowse/core/ui': coreUi,\n  '@jbrowse/core/util': coreUtil,\n  '@jbrowse/core/util/color': coreColor,\n  '@jbrowse/core/util/layouts': coreLayouts,\n  '@jbrowse/core/util/tracks': trackUtils,\n  '@jbrowse/core/util/Base1DViewModel': Base1DView,\n  '@jbrowse/core/util/io': coreIo,\n  '@jbrowse/core/util/mst-reflection': coreMstReflection,\n  '@jbrowse/core/util/rxjs': rxjs,\n\n  '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail': {\n    Attributes: LazyAttributes,\n    FeatureDetails: LazyFeatureDetails,\n    BaseCard: LazyBaseCard,\n  },\n  '@jbrowse/core/data_adapters/BaseAdapter': BaseAdapterExports,\n}\n\nconst libsList = Object.keys(libs)\n\n// make sure that all the items in the ReExports/list array (used by build\n// systems and such) are included here, and vice versa\nconst inLibsOnly = libsList.filter(mod => !reExportsList.includes(mod))\nif (inLibsOnly.length > 0) {\n  throw new Error(\n    `The following modules are in the re-exports list, but not the modules libs: ${inLibsOnly.join(\n      ', ',\n    )}`,\n  )\n}\nconst inReExportsOnly = reExportsList.filter(mod => !libsList.includes(mod))\nif (inReExportsOnly.length) {\n  throw new Error(\n    `The following modules are in the modules libs, but not the re-exports list: ${inReExportsOnly.join(\n      ', ',\n    )}`,\n  )\n}\n\nexport default libs\n","import React from 'react'\nimport TextSearchAdapterType from '../pluggableElementTypes/TextSearchAdapterType'\nimport { SearchType } from '../data_adapters/BaseAdapter'\n\nexport interface BaseResultArgs {\n  label: string\n\n  displayString?: string\n\n  renderingComponent?: React.ReactElement\n\n  matchedAttribute?: string\n\n  matchedObject?: object\n\n  textSearchAdapter?: TextSearchAdapterType\n\n  relevance?: SearchType\n\n  locString?: string\n\n  refName?: string\n\n  trackId?: string\n\n  score?: number\n\n  results?: BaseResult[]\n}\n\nexport default class BaseResult {\n  label: string\n\n  renderingComponent?: React.ReactElement\n\n  displayString?: string\n\n  matchedAttribute?: string\n\n  matchedObject?: object\n\n  textSearchAdapter?: TextSearchAdapterType\n\n  relevance?: SearchType\n\n  trackId?: string\n\n  score: number\n\n  locString?: string\n\n  results?: BaseResult[]\n  constructor(args: BaseResultArgs) {\n    this.label = args.label\n    this.locString = args.locString\n    this.renderingComponent = args.renderingComponent\n    this.displayString = args.displayString\n    this.matchedAttribute = args.matchedAttribute\n    this.matchedObject = args.matchedObject\n    this.textSearchAdapter = args.textSearchAdapter\n    this.relevance = args.relevance\n    this.trackId = args.trackId\n    this.score = args.score || 1\n    this.results = args.results || []\n  }\n\n  getLabel() {\n    return this.label\n  }\n\n  getDisplayString() {\n    return this.displayString || this.label\n  }\n\n  getRenderingComponent() {\n    return this.renderingComponent\n  }\n\n  getTrackId() {\n    return this.trackId\n  }\n\n  getScore() {\n    return this.score\n  }\n\n  updateScore(newScore: number) {\n    this.score = newScore\n    return this.score\n  }\n\n  getId() {\n    return `${this.getLabel()}-${this.getLocation()}-${this.getTrackId()}`\n  }\n\n  hasLocation() {\n    return !!this.locString\n  }\n\n  getLocation() {\n    return this.locString\n  }\n\n  getComboResults() {\n    return this.results\n  }\n}\n\nexport class RefSequenceResult extends BaseResult {\n  refName: string\n\n  constructor(args: BaseResultArgs) {\n    super(args)\n    this.refName = args.refName ?? ''\n  }\n\n  getLocation() {\n    return this.refName\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { types, IAnyModelType, IAnyComplexType } from 'mobx-state-tree'\nimport { stringToJexlExpression } from '../util/jexlStrings'\nimport { FileLocation } from '../util/types/mst'\nimport { getEnv } from '../util'\n\nfunction isValidColorString(/* str */) {\n  // TODO: check all the crazy cases for whether it's a valid HTML/CSS color string\n  return true\n}\nconst typeModels: { [typeName: string]: any } = {\n  stringArray: types.array(types.string),\n  stringArrayMap: types.map(types.array(types.string)),\n  numberMap: types.map(types.number),\n  boolean: types.boolean,\n  color: types.refinement('Color', types.string, isValidColorString),\n  integer: types.integer,\n  number: types.number,\n  string: types.string,\n  text: types.string,\n  fileLocation: FileLocation,\n  frozen: types.frozen(),\n}\n\n// default values we use if the defaultValue is malformed or does not work\nconst fallbackDefaults: { [typeName: string]: any } = {\n  stringArray: [],\n  stringArrayMap: {},\n  numberMap: {},\n  boolean: true,\n  color: 'black',\n  integer: 1,\n  number: 1,\n  string: '',\n  text: '',\n  fileLocation: { uri: '/path/to/resource.txt', locationType: 'UriLocation' },\n  frozen: {},\n}\n\nconst literalJSON = (self: { value: any }) => ({\n  views: {\n    get valueJSON() {\n      return self.value\n    },\n  },\n})\n\nconst objectJSON = (self: { value: any }) => ({\n  views: {\n    get valueJSON() {\n      return JSON.stringify(self.value)\n    },\n  },\n})\n\n// custom actions for modifying the value models\nconst typeModelExtensions: { [typeName: string]: (self: any) => any } = {\n  fileLocation: objectJSON,\n  number: literalJSON,\n  integer: literalJSON,\n  boolean: literalJSON,\n  frozen: objectJSON,\n  // special actions for working with stringArray slots\n  stringArray: (self: { value: string[] }) => ({\n    views: {\n      get valueJSON() {\n        return JSON.stringify(self.value)\n      },\n    },\n    actions: {\n      add(val: string) {\n        self.value.push(val)\n      },\n      removeAtIndex(idx: number) {\n        self.value.splice(idx, 1)\n      },\n      setAtIndex(idx: number, val: string) {\n        self.value[idx] = val\n      },\n    },\n  }),\n  stringArrayMap: (self: { value: Map<string, string[]> }) => ({\n    views: {\n      get valueJSON() {\n        return JSON.stringify(self.value)\n      },\n    },\n    actions: {\n      add(key: string, val: any) {\n        self.value.set(key, val)\n      },\n      remove(key: string) {\n        self.value.delete(key)\n      },\n      addToKey(key: string, val: string) {\n        const ar = self.value.get(key)\n        if (!ar) {\n          throw new Error(`${key} not found`)\n        }\n        ar.push(val)\n      },\n      removeAtKeyIndex(key: string, idx: number) {\n        const ar = self.value.get(key)\n        if (!ar) {\n          throw new Error(`${key} not found`)\n        }\n        ar.splice(idx, 1)\n      },\n      setAtKeyIndex(key: string, idx: number, val: string) {\n        const ar = self.value.get(key)\n        if (!ar) {\n          throw new Error(`${key} not found`)\n        }\n        ar[idx] = val\n      },\n    },\n  }),\n  numberMap: (self: { value: Map<string, number> }) => ({\n    views: {\n      get valueJSON() {\n        return JSON.stringify(self.value)\n      },\n    },\n    actions: {\n      add(key: string, val: number) {\n        self.value.set(key, val)\n      },\n      remove(key: string) {\n        self.value.delete(key)\n      },\n    },\n  }),\n}\n\n// const FunctionStringType = types.refinement(\n//   'FunctionString',\n//   types.string,\n//   str => functionRegexp.test(str),\n// )\n\nconst JexlStringType = types.refinement('JexlString', types.string, str =>\n  str.startsWith('jexl:'),\n)\n\nexport interface ConfigSlotDefinition {\n  /** human-readable description of the slot's meaning */\n  description?: string\n  /** custom base MST model for the slot's value */\n  model?: IAnyModelType | IAnyComplexType\n  /** name of the type of slot, e.g. \"string\", \"number\", \"stringArray\" */\n  type: string\n  /** default value of the slot */\n  defaultValue: any\n  /** parameter names of the function callback */\n  contextVariable?: string[]\n}\n\n/**\n * builds a MST model for a configuration slot\n *\n * @param slotName -\n * @param  definition -\n */\nexport default function ConfigSlot(\n  slotName: string,\n  {\n    description = '',\n    model,\n    type,\n    defaultValue,\n    contextVariable = [],\n  }: ConfigSlotDefinition,\n) {\n  if (!type) {\n    throw new Error('type name required')\n  }\n  if (!model) {\n    model = typeModels[type]\n  }\n  if (!model) {\n    throw new Error(\n      `no builtin config slot type \"${type}\", and no 'model' param provided`,\n    )\n  }\n\n  if (defaultValue === undefined) {\n    throw new Error(\"no 'defaultValue' provided\")\n  }\n\n  // if the `type` is something like `color`, then the model name\n  // here will be `ColorConfigSlot`\n  const configSlotModelName = `${slotName\n    .charAt(0)\n    .toUpperCase()}${slotName.slice(1)}ConfigSlot`\n  let slot = types\n    .model(configSlotModelName, {\n      name: types.literal(slotName),\n      description: types.literal(description),\n      type: types.literal(type),\n      value: types.optional(types.union(JexlStringType, model), defaultValue),\n    })\n    .volatile(() => ({\n      contextVariable,\n    }))\n    .views(self => ({\n      get isCallback() {\n        return String(self.value).startsWith('jexl:')\n      },\n    }))\n    .views(self => ({\n      get expr() {\n        if (self.isCallback) {\n          // compile as jexl function\n          const { pluginManager } = getEnv(self)\n          if (!pluginManager && typeof jest === 'undefined') {\n            console.warn(\n              'no pluginManager detected on config env (if you dynamically instantiate a config, for example in renderProps for your display model, check that you add the env argument)',\n            )\n          }\n          return stringToJexlExpression(String(self.value), pluginManager?.jexl)\n        }\n        return { evalSync: () => self.value }\n      },\n\n      // JS representation of the value of this slot, suitable\n      // for embedding in either JSON or a JS function string.\n      // many of the data types override this in typeModelExtensions\n      get valueJSON(): any[] | Record<string, any> | string | undefined {\n        if (self.isCallback) {\n          return undefined\n        }\n        function json(value: { toJSON: Function } | any) {\n          if (value && value.toJSON) {\n            return value.toJSON()\n          }\n          return `\"${value}\"`\n        }\n        return json(self.value)\n      },\n    }))\n    .preProcessSnapshot(val =>\n      typeof val === 'object' && val.name === slotName\n        ? val\n        : {\n            name: slotName,\n            description,\n            type,\n            value: val,\n          },\n    )\n    .postProcessSnapshot(snap => {\n      if (typeof snap.value === 'object') {\n        return JSON.stringify(snap.value) !== JSON.stringify(defaultValue)\n          ? snap.value\n          : undefined\n      }\n      return snap.value !== defaultValue ? snap.value : undefined\n    })\n    .actions(self => ({\n      set(newVal: any) {\n        self.value = newVal\n      },\n      reset() {\n        self.value = defaultValue\n      },\n      convertToCallback() {\n        if (self.isCallback) {\n          return\n        }\n        self.value = `jexl:${self.valueJSON || \"''\"}`\n      },\n      convertToValue() {\n        if (!self.isCallback) {\n          return\n        }\n        // try calling it with no arguments\n        try {\n          const funcResult = self.expr.evalSync()\n          if (funcResult !== undefined) {\n            self.value = funcResult\n            return\n          }\n        } catch (e) {\n          /* ignore */\n        }\n        self.value = defaultValue\n        // if it is still a callback (happens if the defaultValue is a callback),\n        // then use the last-resort fallback default\n\n        // if defaultValue has jexl: string, run this part\n        if (self.isCallback) {\n          if (!(type in fallbackDefaults)) {\n            throw new Error(`no fallbackDefault defined for type ${type}`)\n          }\n          self.value = fallbackDefaults[type]\n        }\n      },\n    }))\n\n  // if there are any type-specific extensions (views or actions)\n  //  to the slot, add those in\n  if (typeModelExtensions[type]) {\n    slot = slot.extend(typeModelExtensions[type])\n  }\n\n  const completeModel = types.optional(slot, {\n    name: slotName,\n    type,\n    description,\n    value: defaultValue,\n  })\n  const m = completeModel\n  Object.defineProperty(m, 'isJBrowseConfigurationSlot', { value: true })\n  return m\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  types,\n  isStateTreeNode,\n  isType,\n  isLateType,\n  getSnapshot,\n  IAnyType,\n  SnapshotOut,\n} from 'mobx-state-tree'\n\nimport { ElementId } from '../util/types/mst'\n\nimport ConfigSlot, { ConfigSlotDefinition } from './configurationSlot'\nimport { isConfigurationSchemaType } from './util'\nimport { AnyConfigurationSchemaType } from './types'\n\nexport type {\n  AnyConfigurationSchemaType,\n  AnyConfigurationModel,\n  AnyConfigurationSlot,\n  AnyConfigurationSlotType,\n} from './types'\n\nfunction isEmptyObject(thing: unknown) {\n  return (\n    typeof thing === 'object' &&\n    !Array.isArray(thing) &&\n    thing !== null &&\n    Object.keys(thing).length === 0\n  )\n}\n\nfunction isEmptyArray(thing: unknown) {\n  return Array.isArray(thing) && thing.length === 0\n}\n\nexport interface ConfigurationSchemaDefinition {\n  [n: string]:\n    | ConfigSlotDefinition\n    | ConfigurationSchemaDefinition\n    | string\n    | number\n    | IAnyType\n}\n\nexport interface ConfigurationSchemaOptions<\n  BASE_SCHEMA extends AnyConfigurationSchemaType | undefined,\n  EXPLICIT_IDENTIFIER extends string | undefined,\n> {\n  explicitlyTyped?: boolean\n  explicitIdentifier?: EXPLICIT_IDENTIFIER\n  implicitIdentifier?: string | boolean\n  baseConfiguration?: BASE_SCHEMA\n\n  actions?: (self: unknown) => any\n  views?: (self: unknown) => any\n  extend?: (self: unknown) => any\n  preProcessSnapshot?: (snapshot: {}) => {}\n}\n\nfunction preprocessConfigurationSchemaArguments(\n  modelName: string,\n  inputSchemaDefinition: ConfigurationSchemaDefinition,\n  inputOptions: ConfigurationSchemaOptions<any, any> = {},\n) {\n  if (typeof modelName !== 'string') {\n    throw new Error(\n      'first arg must be string name of the model that this config schema goes with',\n    )\n  }\n\n  // if we have a base configuration schema that we are\n  // extending, grab the slot definitions from that\n  let schemaDefinition = inputSchemaDefinition\n  let options = inputOptions\n  if (\n    inputOptions.baseConfiguration &&\n    inputOptions.baseConfiguration.jbrowseSchemaDefinition\n  ) {\n    schemaDefinition = {\n      ...inputOptions.baseConfiguration.jbrowseSchemaDefinition,\n      ...schemaDefinition,\n    }\n    options = {\n      ...inputOptions.baseConfiguration.jbrowseSchemaOptions,\n      ...inputOptions,\n    }\n    delete options.baseConfiguration\n  }\n  return { schemaDefinition, options }\n}\n\nfunction makeConfigurationSchemaModel<\n  DEFINITION extends ConfigurationSchemaDefinition,\n  OPTIONS extends ConfigurationSchemaOptions<any, any>,\n>(modelName: string, schemaDefinition: DEFINITION, options: OPTIONS) {\n  // now assemble the MST model of the configuration schema\n  const modelDefinition: Record<string, any> = {}\n  let identifier\n\n  if (options.explicitlyTyped) {\n    modelDefinition.type = types.optional(types.literal(modelName), modelName)\n  }\n\n  if (options.explicitIdentifier && options.implicitIdentifier) {\n    throw new Error(\n      `Cannot have both explicit and implicit identifiers in ${modelName}`,\n    )\n  }\n  if (options.explicitIdentifier) {\n    if (typeof options.explicitIdentifier === 'string') {\n      modelDefinition[options.explicitIdentifier] = types.identifier\n      identifier = options.explicitIdentifier\n    } else {\n      modelDefinition.id = types.identifier\n      identifier = 'id'\n    }\n  } else if (options.implicitIdentifier) {\n    if (typeof options.implicitIdentifier === 'string') {\n      modelDefinition[options.implicitIdentifier] = ElementId\n      identifier = options.implicitIdentifier\n    } else {\n      modelDefinition.id = ElementId\n      identifier = 'id'\n    }\n  }\n\n  const volatileConstants: Record<string, any> = {\n    isJBrowseConfigurationSchema: true,\n    jbrowseSchema: {\n      modelName,\n      definition: schemaDefinition,\n      options,\n    },\n  }\n  Object.entries(schemaDefinition).forEach(([slotName, slotDefinition]) => {\n    if (\n      (isType(slotDefinition) && isLateType(slotDefinition)) ||\n      isConfigurationSchemaType(slotDefinition)\n    ) {\n      // this is either an MST late() type (which we assume to be a sub-configuration),\n      // or an actual sub-configuration\n      modelDefinition[slotName] = slotDefinition\n    } else if (\n      typeof slotDefinition === 'string' ||\n      typeof slotDefinition === 'number'\n    ) {\n      volatileConstants[slotName] = slotDefinition\n    } else if (typeof slotDefinition === 'object') {\n      // this is a slot definition\n      if (!slotDefinition.type) {\n        throw new Error(`no type set for config slot ${modelName}.${slotName}`)\n      }\n      try {\n        modelDefinition[slotName] = ConfigSlot(\n          slotName,\n          slotDefinition as ConfigSlotDefinition,\n        )\n      } catch (e) {\n        throw new Error(\n          `invalid config slot definition for ${modelName}.${slotName}: ${e}`,\n        )\n      }\n    } else {\n      throw new Error(\n        `invalid configuration schema definition, \"${slotName}\" must be either a valid configuration slot definition, a constant, or a nested configuration schema`,\n      )\n    }\n  })\n\n  let completeModel = types\n    .model(`${modelName}ConfigurationSchema`, modelDefinition)\n    .actions(self => ({\n      setSubschema(slotName: string, data: unknown) {\n        if (!isConfigurationSchemaType(modelDefinition[slotName])) {\n          throw new Error(`${slotName} is not a subschema, cannot replace`)\n        }\n        const newSchema = isStateTreeNode(data)\n          ? data\n          : modelDefinition[slotName].create(data)\n        self[slotName] = newSchema\n        return newSchema\n      },\n    }))\n\n  if (Object.keys(volatileConstants).length) {\n    completeModel = completeModel.volatile((/* self */) => volatileConstants)\n  }\n  if (options.actions) {\n    completeModel = completeModel.actions(options.actions)\n  }\n  if (options.views) {\n    completeModel = completeModel.views(options.views)\n  }\n  if (options.extend) {\n    completeModel = completeModel.extend(options.extend)\n  }\n\n  const identifierDefault = identifier ? { [identifier]: 'placeholderId' } : {}\n  const modelDefault = options.explicitlyTyped\n    ? { type: modelName, ...identifierDefault }\n    : identifierDefault\n\n  const defaultSnap = getSnapshot(completeModel.create(modelDefault))\n  completeModel = completeModel.postProcessSnapshot(snap => {\n    const newSnap: SnapshotOut<typeof completeModel> = {}\n    let matchesDefault = true\n    // let keyCount = 0\n    for (const [key, value] of Object.entries(snap)) {\n      if (matchesDefault) {\n        if (typeof defaultSnap[key] === 'object' && typeof value === 'object') {\n          if (JSON.stringify(defaultSnap[key]) !== JSON.stringify(value)) {\n            matchesDefault = false\n          }\n        } else if (defaultSnap[key] !== value) {\n          matchesDefault = false\n        }\n      }\n      if (\n        value !== undefined &&\n        volatileConstants[key] === undefined &&\n        !isEmptyObject(value) &&\n        !isEmptyArray(value)\n      ) {\n        // keyCount += 1\n        newSnap[key] = value\n      }\n    }\n    if (matchesDefault) {\n      return {}\n    }\n    return newSnap\n  })\n\n  if (options.preProcessSnapshot) {\n    completeModel = completeModel.preProcessSnapshot(options.preProcessSnapshot)\n  }\n\n  return types.optional(completeModel, modelDefault)\n}\n\nexport interface ConfigurationSchemaType<\n  DEFINITION extends ConfigurationSchemaDefinition,\n  OPTIONS extends ConfigurationSchemaOptions<any, any>,\n> extends ReturnType<typeof makeConfigurationSchemaModel<DEFINITION, OPTIONS>> {\n  isJBrowseConfigurationSchema: boolean\n  jbrowseSchemaDefinition: DEFINITION\n  jbrowseSchemaOptions: OPTIONS\n  type: string\n  [key: string]: unknown\n}\n\nexport function ConfigurationSchema<\n  DEFINITION extends ConfigurationSchemaDefinition,\n  OPTIONS extends ConfigurationSchemaOptions<BASE_SCHEMA, EXPLICIT_IDENTIFIER>,\n  BASE_SCHEMA extends AnyConfigurationSchemaType | undefined = undefined,\n  EXPLICIT_IDENTIFIER extends string | undefined = undefined,\n>(\n  modelName: string,\n  inputSchemaDefinition: DEFINITION,\n  inputOptions?: ConfigurationSchemaOptions<BASE_SCHEMA, EXPLICIT_IDENTIFIER>,\n): ConfigurationSchemaType<DEFINITION, OPTIONS> {\n  const { schemaDefinition, options } = preprocessConfigurationSchemaArguments(\n    modelName,\n    inputSchemaDefinition,\n    inputOptions,\n  )\n  const schemaType = makeConfigurationSchemaModel(\n    modelName,\n    schemaDefinition,\n    options,\n  ) as AnyConfigurationSchemaType\n  // saving a couple of jbrowse-specific things in the type object. hope nobody gets mad.\n  schemaType.isJBrowseConfigurationSchema = true\n  schemaType.jbrowseSchemaDefinition = schemaDefinition\n  schemaType.jbrowseSchemaOptions = options\n  return schemaType\n}\n\nexport function ConfigurationReference<\n  SCHEMATYPE extends AnyConfigurationSchemaType,\n>(schemaType: SCHEMATYPE) {\n  // we cast this to SCHEMATYPE, because the reference *should* behave just\n  // like the object it points to. It won't be undefined (this is a\n  // `reference`, not a `safeReference`)\n  return types.union(types.reference(schemaType), schemaType) as SCHEMATYPE\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  isStateTreeNode,\n  getSnapshot,\n  getType,\n  isMapType,\n  isType,\n  isUnionType,\n  isOptionalType,\n  isArrayType,\n  isModelType,\n  isLateType,\n} from 'mobx-state-tree'\n\nimport {\n  getUnionSubTypes,\n  getDefaultValue,\n  getSubType,\n  resolveLateType,\n} from '../util/mst-reflection'\n\nimport {\n  AnyConfigurationModel,\n  AnyConfigurationSchemaType,\n  ConfigurationSlotName,\n  ConfigurationSchemaForModel,\n} from './types'\n\n/**\n * given a configuration model (an instance of a ConfigurationSchema),\n * read the configuration variable at the given path\n *\n * @param model - instance of ConfigurationSchema\n * @param slotPaths - array of paths to read\n * @param args - extra arguments e.g. for a feature callback,\n *  will be sent to each of the slotNames\n */\nexport function readConfObject<CONFMODEL extends AnyConfigurationModel>(\n  confObject: CONFMODEL,\n  slotPath?:\n    | ConfigurationSlotName<ConfigurationSchemaForModel<CONFMODEL>>\n    | string[],\n  args: Record<string, unknown> = {},\n): any {\n  if (!confObject) {\n    throw new TypeError('must provide conf object to read')\n  }\n  if (!slotPath) {\n    return JSON.parse(JSON.stringify(getSnapshot(confObject)))\n  }\n  if (typeof slotPath === 'string') {\n    let slot = confObject[slotPath]\n    // check for the subconf being a map if we don't find it immediately\n    if (\n      !slot &&\n      isStateTreeNode(confObject) &&\n      isMapType(getType(confObject))\n    ) {\n      slot = confObject.get(slotPath)\n    }\n    if (!slot) {\n      return undefined\n      // if we want to be very strict about config slots, we could uncomment the below\n      // instead of returning undefined\n      //\n      // const modelType = getType(model)\n      // const schemaType = model.configuration && getType(model.configuration)\n      // throw new Error(\n      //   `no slot \"${slotName}\" found in ${modelType.name} configuration (${\n      //     schemaType.name\n      //   })`,\n      // )\n    }\n\n    if (slot.expr) {\n      const appliedFunc = slot.expr.evalSync(args)\n      if (isStateTreeNode(appliedFunc)) {\n        return JSON.parse(JSON.stringify(getSnapshot(appliedFunc)))\n      }\n      return appliedFunc\n    }\n    if (isStateTreeNode(slot)) {\n      return JSON.parse(JSON.stringify(getSnapshot(slot)))\n    }\n    return slot\n  }\n\n  if (Array.isArray(slotPath)) {\n    const slotName = slotPath[0]\n    if (slotPath.length > 1) {\n      const newPath = slotPath.slice(1)\n      let subConf = confObject[slotName]\n      // check for the subconf being a map if we don't find it immediately\n      if (\n        !subConf &&\n        isStateTreeNode(confObject) &&\n        isMapType(getType(confObject))\n      ) {\n        subConf = confObject.get(slotName)\n      }\n      return subConf ? readConfObject(subConf, newPath, args) : undefined\n    }\n    return readConfObject(\n      confObject,\n      slotName as ConfigurationSlotName<ConfigurationSchemaForModel<CONFMODEL>>,\n      args,\n    )\n  }\n  throw new TypeError('slotPath must be a string or array')\n}\n\n/**\n * helper method for readConfObject, reads the config from a mst model\n *\n * @param model - object containing a 'configuration' member\n * @param slotPaths - array of paths to read\n * @param args - extra arguments e.g. for a feature callback,\n *   will be sent to each of the slotNames\n */\nexport function getConf<CONFMODEL extends AnyConfigurationModel>(\n  model: { configuration: CONFMODEL },\n  slotPath?: Parameters<typeof readConfObject<CONFMODEL>>[1],\n  args?: Parameters<typeof readConfObject<CONFMODEL>>[2],\n) {\n  if (!model) {\n    throw new TypeError('must provide a model object')\n  }\n  const { configuration } = model\n  if (isConfigurationModel(configuration)) {\n    return readConfObject<CONFMODEL>(configuration, slotPath, args)\n  }\n  throw new TypeError('cannot getConf on this model, it has no configuration')\n}\n\n/**\n * given a union of explicitly typed configuration schema types,\n * extract an array of the type names contained in the union\n *\n * @param unionType -\n * @returns Array of type names contained in the union\n */\nexport function getTypeNamesFromExplicitlyTypedUnion(maybeUnionType: unknown) {\n  if (isType(maybeUnionType)) {\n    maybeUnionType = resolveLateType(maybeUnionType)\n    // @ts-expect-error\n    if (isUnionType(maybeUnionType)) {\n      const typeNames: string[] = []\n      getUnionSubTypes(maybeUnionType).forEach(type => {\n        type = resolveLateType(type)\n        let typeName = getTypeNamesFromExplicitlyTypedUnion(type)\n        if (!typeName.length) {\n          const def = getDefaultValue(type)\n          typeName = [def.type]\n        }\n        if (!typeName[0]) {\n          // debugger\n          throw new Error(`invalid config schema type ${type}`)\n        }\n        typeNames.push(...typeName)\n      })\n      return typeNames\n    }\n  }\n  return []\n}\n\nexport function isBareConfigurationSchemaType(\n  thing: unknown,\n): thing is AnyConfigurationSchemaType {\n  if (isType(thing)) {\n    if (\n      isModelType(thing) &&\n      ('isJBrowseConfigurationSchema' in thing ||\n        thing.name.includes('ConfigurationSchema'))\n    ) {\n      return true\n    }\n    // if it's a late type, assume its a config schema\n    if (isLateType(thing)) {\n      return true\n    }\n  }\n  return false\n}\n\nexport function isConfigurationSchemaType(\n  thing: unknown,\n): thing is AnyConfigurationSchemaType {\n  if (!isType(thing)) {\n    return false\n  }\n\n  // written as a series of if-statements instead of a big logical OR\n  // because this construction gives much better debugging backtraces.\n\n  // also, note that the order of these statements matters, because\n  // for example some union types are also optional types\n\n  if (isBareConfigurationSchemaType(thing)) {\n    return true\n  }\n\n  if (isUnionType(thing)) {\n    return getUnionSubTypes(thing).every(\n      t => isConfigurationSchemaType(t) || t.name === 'undefined',\n    )\n  }\n\n  if (isOptionalType(thing) && isConfigurationSchemaType(getSubType(thing))) {\n    return true\n  }\n\n  if (isArrayType(thing) && isConfigurationSchemaType(getSubType(thing))) {\n    return true\n  }\n\n  if (isMapType(thing) && isConfigurationSchemaType(getSubType(thing))) {\n    return true\n  }\n\n  return false\n}\n\nexport function isConfigurationModel(\n  thing: unknown,\n): thing is AnyConfigurationModel {\n  return isStateTreeNode(thing) && isConfigurationSchemaType(getType(thing))\n}\n\nexport function isConfigurationSlotType(thing: unknown) {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'isJBrowseConfigurationSlot' in thing\n  )\n}\n","import { BaseAdapter } from './BaseAdapter'\nimport { BaseFeatureDataAdapter } from './BaseFeatureDataAdapter'\nimport { BaseRefNameAliasAdapter } from './BaseRefNameAliasAdapter'\nimport { BaseSequenceAdapter } from './BaseSequenceAdapter'\nimport { BaseTextSearchAdapter } from './BaseTextSearchAdapter'\nimport { RegionsAdapter } from './RegionsAdapter'\n\nexport type AnyDataAdapter =\n  | BaseAdapter\n  | BaseFeatureDataAdapter\n  | BaseRefNameAliasAdapter\n  | BaseTextSearchAdapter\n  | RegionsAdapter\n  | BaseSequenceAdapter\n\nexport function isSequenceAdapter(t: AnyDataAdapter): t is BaseSequenceAdapter {\n  return 'getRegions' in t && 'getFeatures' in t\n}\n\nexport function isRegionsAdapter(t: AnyDataAdapter): t is RegionsAdapter {\n  return 'getRegions' in t\n}\n\nexport function isFeatureAdapter(\n  t: AnyDataAdapter,\n): t is BaseFeatureDataAdapter {\n  return 'getFeatures' in t\n}\n\nexport function isRefNameAliasAdapter(t: object): t is BaseRefNameAliasAdapter {\n  return 'getRefNameAliases' in t\n}\n\nexport function isTextSearchAdapter(\n  t: AnyDataAdapter,\n): t is BaseTextSearchAdapter {\n  return 'searchIndex' in t\n}\n","import { isStateTreeNode, getSnapshot } from 'mobx-state-tree'\n\n// locals\nimport { readConfObject, AnyConfigurationModel } from '../../configuration'\nimport { getSubAdapterType } from '../dataAdapterCache'\nimport { AugmentedRegion as Region } from '../../util/types'\nimport idMaker from '../../util/idMaker'\nimport PluginManager from '../../PluginManager'\nimport { ConfigurationSchema } from '../../configuration'\n\nconst EmptyConfig = ConfigurationSchema('empty', {})\n\nexport abstract class BaseAdapter {\n  public id: string\n\n  static capabilities = [] as string[]\n\n  constructor(\n    public config: AnyConfigurationModel = EmptyConfig.create(),\n    public getSubAdapter?: getSubAdapterType,\n    public pluginManager?: PluginManager,\n  ) {\n    // note: we use switch on jest here for more simple feature IDs\n    // in test environment\n    if (typeof jest === 'undefined') {\n      const data = isStateTreeNode(config) ? getSnapshot(config) : config\n      this.id = `${idMaker(data)}`\n    } else {\n      this.id = 'test'\n    }\n  }\n\n  /**\n   * Same as `readConfObject(this.config, arg)`.\n   * @deprecated Does not offer the same TS type checking as `readConfObject`, consider using that instead.\n   */\n  getConf(arg: string | string[]) {\n    return readConfObject(this.config, arg)\n  }\n\n  /**\n   * Called to provide a hint that data tied to a certain region will not be\n   * needed for the foreseeable future and can be purged from caches, etc\n   * @param region - Region\n   */\n  public abstract freeResources(region: Region): void\n}\n","import { Observable, firstValueFrom, merge } from 'rxjs'\nimport { toArray } from 'rxjs/operators'\n\n// locals\nimport { BaseAdapter } from './BaseAdapter'\nimport { BaseOptions } from './BaseOptions'\nimport { FeatureDensityStats } from './types'\nimport { ObservableCreate } from '../../util/rxjs'\nimport { checkAbortSignal, sum, max, min } from '../../util'\nimport { Feature } from '../../util/simpleFeature'\nimport { AugmentedRegion as Region } from '../../util/types'\nimport { blankStats, rectifyStats, scoresToStats } from '../../util/stats'\n\n/**\n * Base class for feature adapters to extend. Defines some methods that\n * subclasses must implement.\n */\nexport abstract class BaseFeatureDataAdapter extends BaseAdapter {\n  /**\n   * Get all reference sequence names used in the data source\n   * Example:\n   * public async getRefNames(opts?: BaseOptions): Promise\\<string[]\\> \\}\n   *   await this.setup()\n   *   const \\{ refNames \\} = this.metadata\n   *   return refNames\n   * \\}\n   *\n   *\n   * NOTE: If an adapter is unable to determine the reference sequence names,\n   * the array will be empty\n   * @param opts - Feature adapter options\n   */\n  public abstract getRefNames(opts?: BaseOptions): Promise<string[]>\n\n  /**\n   * Get features from the data source that overlap a region\n   * Example:\n   * public getFeatures(\n   *   region: Region,\n   *   opts: BaseOptions,\n   * ): Observable<Feature> \\{\n   *   return ObservableCreate(observer =\\> \\{\n   *     const records = getRecords(assembly, refName, start, end)\n   *     records.forEach(record =\\> \\{\n   *       observer.next(this.recordToFeature(record))\n   *     \\})\n   *     observer.complete()\n   *   \\})\n   * \\}\n   * @param region - Region\n   * @param opts - Feature adapter options\n   * @returns Observable of Feature objects in the region\n   */\n  public abstract getFeatures(\n    region: Region,\n    opts?: BaseOptions,\n  ): Observable<Feature>\n\n  /**\n   * Return \"header info\" that is fetched from the data file, or other info\n   * that would not simply be in the config of the file. The return value can\n   * be `{tag:string, data: any}[]` e.g. list of tags with their values which\n   * is how VCF,BAM,CRAM return values for getInfo or it can be a nested JSON\n   * object\n   */\n  public async getHeader(_opts?: BaseOptions): Promise<unknown> {\n    return null\n  }\n\n  /**\n   * Return info that is primarily used for interpreting the data that is there,\n   * primarily in reference to being used for augmenting feature details panels\n   */\n  public async getMetadata(_opts?: BaseOptions): Promise<unknown> {\n    return null\n  }\n\n  /**\n   * Checks if the store has data for the given assembly and reference\n   * sequence, and then gets the features in the region if it does.\n   */\n  public getFeaturesInRegion(region: Region, opts: BaseOptions = {}) {\n    return ObservableCreate<Feature>(async observer => {\n      const hasData = await this.hasDataForRefName(region.refName, opts)\n      checkAbortSignal(opts.signal)\n      if (!hasData) {\n        observer.complete()\n      } else {\n        this.getFeatures(region, opts).subscribe(observer)\n      }\n    })\n  }\n\n  /**\n   * Checks if the store has data for the given assembly and reference\n   * sequence, and then gets the features in the region if it does.\n   *\n   * Currently this just calls getFeatureInRegion for each region. Adapters that\n   * are frequently called on multiple regions simultaneously may want to\n   * implement a more efficient custom version of this method.\n   *\n   * Currently this just calls getFeatureInRegion for each region. Adapters that\n   * are frequently called on multiple regions simultaneously may want to\n   * implement a more efficient custom version of this method.\n   *\n   * @param regions - Regions\n   * @param opts - Feature adapter options\n   * @returns Observable of Feature objects in the regions\n   */\n  public getFeaturesInMultipleRegions(\n    regions: Region[],\n    opts: BaseOptions = {},\n  ) {\n    return merge(\n      ...regions.map(region => this.getFeaturesInRegion(region, opts)),\n    )\n  }\n\n  /**\n   * Check if the store has data for the given reference name.\n   * @param refName - Name of the reference sequence\n   * @returns Whether data source has data for the given reference name\n   */\n  public async hasDataForRefName(refName: string, opts: BaseOptions = {}) {\n    const refNames = await this.getRefNames(opts)\n    return refNames.includes(refName)\n  }\n\n  /**\n   * Calculates the minimum score, maximum score, and other statistics from\n   * features over a region, primarily used for quantitative tracks\n   */\n  public async getRegionQuantitativeStats(region: Region, opts?: BaseOptions) {\n    const feats = this.getFeatures(region, opts)\n    return scoresToStats(region, feats)\n  }\n  /**\n   * Calculates the minimum score, maximum score, and other statistics from\n   * features over multiple regions, primarily used for quantitative tracks\n   */\n  public async getMultiRegionQuantitativeStats(\n    regions: Region[] = [],\n    opts?: BaseOptions,\n  ) {\n    if (!regions.length) {\n      return blankStats()\n    }\n    const feats = await Promise.all(\n      regions.map(region => this.getRegionQuantitativeStats(region, opts)),\n    )\n\n    const scoreMax = max(feats.map(a => a.scoreMax))\n    const scoreMin = min(feats.map(a => a.scoreMin))\n    const scoreSum = sum(feats.map(a => a.scoreSum))\n    const scoreSumSquares = sum(feats.map(a => a.scoreSumSquares))\n    const featureCount = sum(feats.map(a => a.featureCount))\n    const basesCovered = sum(feats.map(a => a.basesCovered))\n\n    return rectifyStats({\n      scoreMin,\n      scoreMax,\n      featureCount,\n      basesCovered,\n      scoreSumSquares,\n      scoreSum,\n    })\n  }\n\n  /**\n   * Calculates the \"feature density\" of a region. The primary purpose of this\n   * API is to alert the user if they are going to be downloading too much\n   * information, and give them a hint to zoom in to see more. The default\n   * implementation samples from the regions, downloads feature data with\n   * getFeatures, and returns an object with the form \\{featureDensity:number\\}\n   *\n   * Derived classes can override this to return alternative calculations for\n   * featureDensity, or they can also return an object containing a byte size\n   * calculation with the format \\{bytes:number, fetchSizeLimit:number\\} where\n   * fetchSizeLimit is the adapter-defined limit for what it thinks is 'too much\n   * data' (e.g. CRAM and\n   * BAM may vary on what they think too much data is)\n   */\n  getRegionFeatureDensityStats(region: Region, opts?: BaseOptions) {\n    let lastTime = +Date.now()\n    const statsFromInterval = async (length: number, expansionTime: number) => {\n      const { start, end } = region\n      const sampleCenter = start * 0.75 + end * 0.25\n\n      const features = await firstValueFrom(\n        this.getFeatures(\n          {\n            ...region,\n            start: Math.max(0, Math.round(sampleCenter - length / 2)),\n            end: Math.min(Math.round(sampleCenter + length / 2), end),\n          },\n          opts,\n        ).pipe(toArray()),\n      )\n\n      return maybeRecordStats(\n        length,\n        { featureDensity: features.length / length },\n        features.length,\n        expansionTime,\n      )\n    }\n\n    const maybeRecordStats = async (\n      interval: number,\n      stats: FeatureDensityStats,\n      statsSampleFeatures: number,\n      expansionTime: number,\n    ): Promise<FeatureDensityStats> => {\n      const refLen = region.end - region.start\n      if (statsSampleFeatures >= 70 || interval * 2 > refLen) {\n        return stats\n      } else if (expansionTime <= 5000) {\n        const currTime = +Date.now()\n        expansionTime += currTime - lastTime\n        lastTime = currTime\n        return statsFromInterval(interval * 2, expansionTime)\n      } else {\n        console.warn(\n          \"Stats estimation reached timeout, or didn't get enough features\",\n        )\n        return { featureDensity: Number.POSITIVE_INFINITY }\n      }\n    }\n\n    return statsFromInterval(1000, 0)\n  }\n\n  /**\n   * Calculates the \"feature density\" of a set of regions. The primary purpose\n   * of this API is to alert the user if they are going to be downloading too\n   * much information, and give them a hint to zoom in to see more. The default\n   * implementation samples from the regions, downloads feature data with\n   * getFeatures, and returns an object with the form \\{featureDensity:number\\}\n   *\n   * Derived classes can override this to return alternative calculations for\n   * featureDensity, or they can also return an object containing a byte size\n   * calculation with the format \\{bytes:number, fetchSizeLimit:number\\} where\n   * fetchSizeLimit is the adapter-defined limit for what it thinks is 'too much\n   * data' (e.g. CRAM and\n   * BAM may vary on what they think too much data is)\n   */\n  public async getMultiRegionFeatureDensityStats(\n    regions: Region[],\n    opts?: BaseOptions,\n  ) {\n    if (!regions.length) {\n      throw new Error('No regions supplied')\n    }\n    return this.getRegionFeatureDensityStats(regions[0], opts)\n  }\n}\n","import { NoAssemblyRegion } from '../../util'\nimport { BaseOptions } from './types'\nimport { RegionsAdapter } from '../BaseAdapter'\nimport { BaseFeatureDataAdapter } from './BaseFeatureDataAdapter'\n\nexport abstract class BaseSequenceAdapter\n  extends BaseFeatureDataAdapter\n  implements RegionsAdapter\n{\n  async getMultiRegionFeatureDensityStats() {\n    return { featureDensity: 0 }\n  }\n\n  /**\n   * Fetches a list of 'regions' with refName, start, and extends\n   */\n  abstract getRegions(opts: BaseOptions): Promise<NoAssemblyRegion[]>\n}\n","import { SnapshotIn } from 'mobx-state-tree'\nimport PluginManager from '../PluginManager'\nimport { AnyConfigurationSchemaType } from '../configuration'\nimport { AnyDataAdapter } from './BaseAdapter'\nimport idMaker from '../util/idMaker'\n\ntype ConfigSnap = SnapshotIn<AnyConfigurationSchemaType>\n\nfunction adapterConfigCacheKey(adapterConfig: ConfigSnap) {\n  return `${idMaker(adapterConfig)}`\n}\n\ninterface AdapterCacheEntry {\n  dataAdapter: AnyDataAdapter\n  sessionIds: Set<string>\n}\n\nlet adapterCache: Record<string, AdapterCacheEntry> = {}\n\n/**\n * instantiate a data adapter, or return an already-instantiated one if we have one with the same\n * configuration\n *\n * @param pluginManager -\n * @param sessionId - session ID of the associated worker session.\n *   used for reference counting\n * @param adapterConfigSnapshot - plain-JS configuration snapshot for the adapter\n */\nexport async function getAdapter(\n  pluginManager: PluginManager,\n  sessionId: string,\n  adapterConfigSnapshot: SnapshotIn<AnyConfigurationSchemaType>,\n) {\n  // cache the adapter object\n  const cacheKey = adapterConfigCacheKey(adapterConfigSnapshot)\n  if (!adapterCache[cacheKey]) {\n    const adapterType = (adapterConfigSnapshot || {}).type\n    if (!adapterType) {\n      throw new Error(\n        'could not determine adapter type from adapter config snapshot',\n      )\n    }\n    const dataAdapterType = pluginManager.getAdapterType(adapterType)\n    if (!dataAdapterType) {\n      throw new Error(`unknown data adapter type ${adapterType}`)\n    }\n\n    // instantiate the data adapter's config schema so it gets its defaults,\n    // callbacks, etc\n    const adapterConfig = dataAdapterType.configSchema.create(\n      adapterConfigSnapshot,\n      { pluginManager },\n    )\n\n    const getSubAdapter = getAdapter.bind(null, pluginManager, sessionId)\n\n    // instantiate the adapter itself with its config schema, and a bound\n    // func that it can use to get any inner adapters\n    // (such as sequence adapters or wrapped subadapters) that it needs\n    //\n    const { AdapterClass, getAdapterClass } = dataAdapterType\n\n    const CLASS = AdapterClass || (await getAdapterClass())\n    if (!CLASS) {\n      throw new Error('Failed to get adapter')\n    }\n\n    const dataAdapter = new CLASS(adapterConfig, getSubAdapter, pluginManager)\n\n    // store it in our cache\n    adapterCache[cacheKey] = {\n      dataAdapter,\n      sessionIds: new Set([sessionId]),\n    }\n  }\n\n  const cacheEntry = adapterCache[cacheKey]\n  cacheEntry.sessionIds.add(sessionId)\n\n  return cacheEntry\n}\n\n/**\n * this is a callback that is passed to adapters that\n * allows them to get any sub-adapters that they need\n * internally, staying with the same worker session ID\n */\nexport type getSubAdapterType = (\n  adapterConfigSnap: ConfigSnap,\n) => ReturnType<typeof getAdapter>\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function freeAdapterResources(specification: Record<string, any>) {\n  let deleteCount = 0\n  const specKeys = Object.keys(specification)\n\n  // if we don't specify a range, delete any adapters that are\n  // only associated with that session\n  if (specKeys.length === 1 && specKeys[0] === 'sessionId') {\n    const { sessionId } = specification\n    Object.entries(adapterCache).forEach(([cacheKey, cacheEntry]) => {\n      cacheEntry.sessionIds.delete(sessionId)\n      if (cacheEntry.sessionIds.size === 0) {\n        deleteCount += 1\n        delete adapterCache[cacheKey]\n      }\n    })\n  } else {\n    // otherwise call freeResources on all the cached data adapters\n    Object.values(adapterCache).forEach(cacheEntry => {\n      if (!cacheEntry.dataAdapter.freeResources) {\n        console.warn(cacheEntry.dataAdapter, 'does not implement freeResources')\n      } else {\n        const regions =\n          specification.regions ||\n          (specification.region ? [specification.region] : [])\n        for (const region of regions) {\n          if (region.refName !== undefined) {\n            cacheEntry.dataAdapter.freeResources(region)\n          }\n        }\n      }\n    })\n  }\n\n  return deleteCount\n}\n\nexport function clearAdapterCache() {\n  adapterCache = {}\n}\n","import PluggableElementBase from './PluggableElementBase'\nimport { AnyConfigurationSchemaType } from '../configuration'\nimport { AnyAdapter } from '../data_adapters/BaseAdapter'\n\nexport type AdapterMetadata = {\n  category?: string\n  hiddenFromGUI?: boolean\n  description?: string\n}\n\nexport default class AdapterType extends PluggableElementBase {\n  AdapterClass?: AnyAdapter\n\n  getAdapterClass: () => Promise<AnyAdapter>\n\n  configSchema: AnyConfigurationSchemaType\n\n  adapterCapabilities: string[]\n\n  adapterMetadata?: AdapterMetadata\n\n  constructor(\n    stuff: {\n      name: string\n      configSchema: AnyConfigurationSchemaType\n      displayName?: string\n      adapterCapabilities?: string[]\n      adapterMetadata?: AdapterMetadata\n    } & (\n      | { AdapterClass: AnyAdapter }\n      | { getAdapterClass: () => Promise<AnyAdapter> }\n    ),\n  ) {\n    super(stuff)\n    if ('AdapterClass' in stuff) {\n      this.AdapterClass = stuff.AdapterClass\n      this.getAdapterClass = async () => stuff.AdapterClass\n    } else if ('getAdapterClass' in stuff) {\n      this.getAdapterClass = stuff.getAdapterClass\n    } else {\n      throw new Error(\n        `no AdapterClass or getAdapterClass is defined for adapter type ${this.name}`,\n      )\n    }\n    this.configSchema = stuff.configSchema\n    this.adapterCapabilities = stuff.adapterCapabilities || []\n    this.adapterMetadata = stuff.adapterMetadata\n  }\n}\n","import React from 'react'\nimport { IAnyModelType } from 'mobx-state-tree'\nimport PluggableElementBase from './PluggableElementBase'\n\ntype BasicComponent = React.ComponentType<{\n  // TODO: can we use AbstractViewModel here?\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  model: any\n}>\ntype AddTrackWorkflowComponentType =\n  | React.LazyExoticComponent<BasicComponent>\n  | BasicComponent\n\nexport default class AddTrackWorkflow extends PluggableElementBase {\n  ReactComponent: AddTrackWorkflowComponentType\n\n  stateModel: IAnyModelType\n\n  constructor(stuff: {\n    name: string\n    ReactComponent: AddTrackWorkflowComponentType\n    stateModel: IAnyModelType\n  }) {\n    super(stuff)\n    this.ReactComponent = stuff.ReactComponent\n    this.stateModel = stuff.stateModel\n    if (!this.ReactComponent) {\n      throw new Error(`no ReactComponent defined for view ${this.name}`)\n    }\n    if (!this.stateModel) {\n      throw new Error(`no stateModel defined for view ${this.name}`)\n    }\n  }\n}\n","import { IAnyModelType } from 'mobx-state-tree'\nimport PluggableElementBase from './PluggableElementBase'\nimport { AnyConfigurationSchemaType } from '../configuration'\nimport { AnyReactComponentType } from '../util'\n\nexport default class ConnectionType extends PluggableElementBase {\n  stateModel: IAnyModelType\n\n  configSchema: AnyConfigurationSchemaType\n\n  description: string\n\n  url: string\n\n  configEditorComponent?: AnyReactComponentType\n\n  constructor(stuff: {\n    name: string\n    stateModel: IAnyModelType\n    configSchema: AnyConfigurationSchemaType\n    displayName: string\n    description: string\n    configEditorComponent?: AnyReactComponentType\n    url: string\n  }) {\n    super(stuff)\n    this.stateModel = stuff.stateModel\n    this.configSchema = stuff.configSchema\n    this.description = stuff.description\n    this.url = stuff.url\n    this.configEditorComponent = stuff.configEditorComponent\n    if (!this.stateModel) {\n      throw new Error(`no stateModel defined for connection ${this.name}`)\n    }\n    if (!this.configSchema) {\n      throw new Error(`no configSchema defined for connection ${this.name}`)\n    }\n  }\n}\n","import { IAnyModelType } from 'mobx-state-tree'\nimport PluggableElementBase from './PluggableElementBase'\nimport { AnyReactComponentType } from '../util'\nimport { getDefaultValue } from '../util/mst-reflection'\nimport { AnyConfigurationSchemaType } from '../configuration'\n\nexport default class DisplayType extends PluggableElementBase {\n  stateModel: IAnyModelType\n\n  configSchema: AnyConfigurationSchemaType\n\n  ReactComponent: AnyReactComponentType\n\n  /**\n   * The track type the display is associated with\n   */\n  trackType: string\n\n  /*\n   * Indicates that this display type can be a \"sub-display\" of another type of\n   * display, e.g. in AlignmentsDisplay, has Pileup and SNPCoverage subDisplays\n   */\n  subDisplay?: unknown\n\n  /**\n   * The view type the display is associated with\n   */\n  viewType: string\n\n  constructor(stuff: {\n    name: string\n    stateModel: IAnyModelType\n    trackType: string\n    viewType: string\n    displayName?: string\n    subDisplay?: unknown\n    configSchema: AnyConfigurationSchemaType\n    ReactComponent: AnyReactComponentType\n  }) {\n    super(stuff)\n    this.stateModel = stuff.stateModel\n    this.subDisplay = stuff.subDisplay\n    this.configSchema = stuff.configSchema\n    this.ReactComponent = stuff.ReactComponent\n    this.trackType = stuff.trackType\n    this.viewType = stuff.viewType\n    if (!this.stateModel) {\n      throw new Error(`no stateModel defined for display ${this.name}`)\n    }\n    if (!this.configSchema) {\n      throw new Error(`no configSchema provided for display ${this.name}`)\n    }\n    if (!this.ReactComponent) {\n      throw new Error(`no ReactComponent provided for display ${this.name}`)\n    }\n    if (!this.trackType) {\n      throw new Error(`no trackType provided for display ${this.name}`)\n    }\n    if (!this.viewType) {\n      throw new Error(`no viewType provided for display ${this.name}`)\n    }\n    if (!getDefaultValue(this.configSchema).type) {\n      const name = this.configSchema ? this.configSchema.name : 'UNKNOWN'\n      throw new Error(`${name} is not explicitlyTyped`)\n    }\n  }\n}\n","import { IAnyModelType } from 'mobx-state-tree'\nimport PluggableElementBase from './PluggableElementBase'\nimport { getDefaultValue } from '../util/mst-reflection'\nimport { AnyConfigurationSchemaType } from '../configuration/types'\n\nexport default class InternetAccountType extends PluggableElementBase {\n  stateModel: IAnyModelType\n\n  configSchema: AnyConfigurationSchemaType\n\n  constructor(stuff: {\n    name: string\n    stateModel: IAnyModelType\n    configSchema: AnyConfigurationSchemaType\n  }) {\n    super(stuff)\n    this.stateModel = stuff.stateModel\n    this.configSchema = stuff.configSchema\n    if (!this.stateModel) {\n      throw new Error(\n        `no stateModel defined for internet account type ${this.name}`,\n      )\n    }\n    if (!this.configSchema) {\n      throw new Error(\n        `no configSchema provided for internet account type ${this.name}`,\n      )\n    }\n    if (!getDefaultValue(this.configSchema).type) {\n      const name = this.configSchema ? this.configSchema.name : 'UNKNOWN'\n      throw new Error(`${name} is not explicitlyTyped`)\n    }\n  }\n}\n","export default abstract class PluggableElementBase {\n  name: string\n  maybeDisplayName?: string\n\n  constructor(args: { name?: string; displayName?: string }) {\n    this.name = args.name || 'UNKNOWN'\n    this.maybeDisplayName = args.displayName\n  }\n\n  get displayName() {\n    return this.maybeDisplayName || this.name\n  }\n}\n","// adapted from map-obj (MIT), with modifications to pass the \"whole object\"\n// from an array of objects into itself\nconst isObject = (value: unknown) => typeof value === 'object' && value !== null\n\n// Customized for this use-case\nconst isObjectCustom = (value: unknown) =>\n  isObject(value) &&\n  !(value instanceof RegExp) &&\n  !(value instanceof Error) &&\n  !(value instanceof Date) &&\n  !(globalThis.Blob && value instanceof globalThis.Blob)\n\ntype Obj = Record<string, unknown>\n\nexport default function map(\n  object: Obj,\n  mapper: (val: unknown) => void,\n  isSeen = new WeakSet(),\n) {\n  if (isSeen.has(object)) {\n    return\n  }\n\n  isSeen.add(object)\n\n  const mapArray = (array: unknown[]) =>\n    array.forEach(element => {\n      mapper(element)\n      if (isObject(element)) {\n        map(element as Record<string, unknown>, mapper, isSeen)\n      }\n    })\n\n  if (Array.isArray(object)) {\n    mapArray(object)\n  }\n\n  for (const value of Object.values(object)) {\n    mapper(value)\n\n    if (isObjectCustom(value)) {\n      Array.isArray(value) ? mapArray(value) : map(value as Obj, mapper, isSeen)\n    }\n  }\n}\n","import mapObject from '../util/map-obj'\nimport PluginManager from '../PluginManager'\nimport PluggableElementBase from './PluggableElementBase'\nimport { setBlobMap, getBlobMap } from '../util/tracks'\nimport {\n  isAppRootModel,\n  isUriLocation,\n  isAuthNeededException,\n  RetryError,\n  UriLocation,\n} from '../util/types'\n\nimport {\n  deserializeAbortSignal,\n  isRemoteAbortSignal,\n  RemoteAbortSignal,\n} from '../rpc/remoteAbortSignals'\n\ninterface SerializedArgs {\n  signal?: RemoteAbortSignal\n  blobMap?: Record<string, File>\n}\nexport type RpcMethodConstructor = new (pm: PluginManager) => RpcMethodType\n\nexport default abstract class RpcMethodType extends PluggableElementBase {\n  constructor(public pluginManager: PluginManager) {\n    super({})\n  }\n\n  async serializeArguments(args: {}, rpcDriverClassName: string): Promise<{}> {\n    const blobMap = getBlobMap()\n    await this.augmentLocationObjects(args, rpcDriverClassName)\n    return { ...args, blobMap }\n  }\n\n  async serializeNewAuthArguments(\n    loc: UriLocation,\n    rpcDriverClassName: string,\n  ) {\n    const rootModel = this.pluginManager.rootModel\n\n    // args dont need auth or already have auth\n    if (!isAppRootModel(rootModel) || loc.internetAccountPreAuthorization) {\n      return loc\n    }\n\n    const account = rootModel.findAppropriateInternetAccount(loc)\n\n    // mutating loc object is not allowed in MainThreadRpcDriver, and is only\n    // needed for web worker RPC\n    if (account && rpcDriverClassName !== 'MainThreadRpcDriver') {\n      loc.internetAccountPreAuthorization =\n        await account.getPreAuthorizationInformation(loc)\n    }\n    return loc\n  }\n\n  async deserializeArguments<T extends SerializedArgs>(\n    serializedArgs: T,\n    _rpcDriverClassName: string,\n  ) {\n    if (serializedArgs.blobMap) {\n      setBlobMap(serializedArgs.blobMap)\n    }\n    const { signal } = serializedArgs\n\n    return {\n      ...serializedArgs,\n      signal: isRemoteAbortSignal(signal)\n        ? deserializeAbortSignal(signal)\n        : undefined,\n    }\n  }\n\n  abstract execute(\n    serializedArgs: unknown,\n    rpcDriverClassName: string,\n  ): Promise<unknown>\n\n  async serializeReturn(\n    originalReturn: unknown,\n    _args: unknown,\n    _rpcDriverClassName: string,\n  ) {\n    return originalReturn\n  }\n\n  async deserializeReturn(\n    serializedReturn: unknown,\n    _args: unknown,\n    _rpcDriverClassName: string,\n  ) {\n    let r\n    try {\n      r = await serializedReturn\n    } catch (error) {\n      if (isAuthNeededException(error)) {\n        const retryAccount =\n          // @ts-expect-error\n          this.pluginManager.rootModel?.createEphemeralInternetAccount(\n            `HTTPBasicInternetAccount-${new URL(error.url).origin}`,\n            {},\n            error.url,\n          )\n        throw new RetryError(\n          'Retrying with created internet account',\n          retryAccount.internetAccountId,\n        )\n      }\n      throw error\n    }\n    return r\n  }\n\n  private async augmentLocationObjects(\n    thing: Record<string, unknown>,\n    rpcDriverClassName: string,\n  ) {\n    const uris = [] as UriLocation[]\n\n    // using map-obj avoids cycles, seen in circular view svg export\n    mapObject(thing, val => {\n      if (isUriLocation(val)) {\n        uris.push(val)\n      }\n    })\n    for (const uri of uris) {\n      await this.serializeNewAuthArguments(uri, rpcDriverClassName)\n    }\n    return thing\n  }\n}\n","import PluggableElementBase from './PluggableElementBase'\nimport { AnyConfigurationSchemaType } from '../configuration'\nimport { AnyAdapter } from '../data_adapters/BaseAdapter'\n\nexport default class TextSearchAdapterType extends PluggableElementBase {\n  AdapterClass: AnyAdapter\n\n  configSchema: AnyConfigurationSchemaType\n\n  description?: string\n\n  constructor(stuff: {\n    name: string\n    displayName?: string\n    description?: string\n    configSchema: AnyConfigurationSchemaType\n    AdapterClass: AnyAdapter\n  }) {\n    super(stuff)\n    this.description = stuff.description\n    this.configSchema = stuff.configSchema\n    this.AdapterClass = stuff.AdapterClass\n    if (!this.AdapterClass) {\n      throw new Error(`no AdapterClass defined for adapter type ${this.name}`)\n    }\n  }\n}\n","import { IAnyModelType } from 'mobx-state-tree'\nimport PluggableElementBase from './PluggableElementBase'\nimport { getDefaultValue } from '../util/mst-reflection'\nimport { AnyConfigurationSchemaType } from '../configuration'\nimport DisplayType from './DisplayType'\n\nexport default class TrackType extends PluggableElementBase {\n  stateModel: IAnyModelType\n\n  configSchema: AnyConfigurationSchemaType\n\n  displayTypes: DisplayType[] = []\n\n  constructor(stuff: {\n    name: string\n    stateModel: IAnyModelType\n    displayName?: string\n    configSchema: AnyConfigurationSchemaType\n  }) {\n    super(stuff)\n    this.stateModel = stuff.stateModel\n    this.configSchema = stuff.configSchema\n    if (!this.stateModel) {\n      throw new Error(`no stateModel defined for track ${this.name}`)\n    }\n    if (!this.configSchema) {\n      throw new Error(`no configSchema provided for track ${this.name}`)\n    }\n    if (!getDefaultValue(this.configSchema).type) {\n      const name = this.configSchema ? this.configSchema.name : 'UNKNOWN'\n      throw new Error(`${name} is not explicitlyTyped`)\n    }\n  }\n\n  addDisplayType(display: DisplayType) {\n    this.displayTypes.push(display)\n  }\n}\n","import React from 'react'\nimport { IAnyModelType, IAnyStateTreeNode } from 'mobx-state-tree'\nimport PluggableElementBase from './PluggableElementBase'\nimport DisplayType from './DisplayType'\n\ntype BasicView = React.ComponentType<{\n  // TODO: can we use AbstractViewModel here?\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  model: any\n  session?: IAnyStateTreeNode\n}>\ntype ViewComponentType = React.LazyExoticComponent<BasicView> | BasicView\n\nexport default class ViewType extends PluggableElementBase {\n  ReactComponent: ViewComponentType\n\n  stateModel: IAnyModelType\n\n  displayTypes: DisplayType[] = []\n\n  // extendedName can be used for when you extend a given view type, and want\n  // to register all of that view types displays to yourself e.g. you create a\n  // linear-genome-view subtype, and want all the tracks that are compatible\n  // display types for the linear-genome-view to be compatible with your type\n  // also (without this, display types are only registered to a single view\n  // type)\n  extendedName?: string\n\n  constructor(stuff: {\n    name: string\n    displayName?: string\n    ReactComponent: ViewComponentType\n    stateModel: IAnyModelType\n    extendedName?: string\n  }) {\n    super(stuff)\n    this.ReactComponent = stuff.ReactComponent\n    this.stateModel = stuff.stateModel\n    this.extendedName = stuff.extendedName\n    if (!this.ReactComponent) {\n      throw new Error(`no ReactComponent defined for view ${this.name}`)\n    }\n    if (!this.stateModel) {\n      throw new Error(`no stateModel defined for view ${this.name}`)\n    }\n  }\n\n  addDisplayType(display: DisplayType) {\n    this.displayTypes.push(display)\n  }\n}\n","import React, { ComponentType, LazyExoticComponent } from 'react'\nimport { IAnyModelType, IAnyStateTreeNode } from 'mobx-state-tree'\nimport PluggableElementBase from './PluggableElementBase'\nimport { AnyConfigurationSchemaType } from '../configuration'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype WidgetComponentType = LazyExoticComponent<React.FC<any>> | React.FC<any>\n\ntype HeadingComponentType = ComponentType<{ model: IAnyStateTreeNode }>\n\nexport default class WidgetType extends PluggableElementBase {\n  heading?: string\n\n  configSchema: AnyConfigurationSchemaType\n\n  HeadingComponent?: HeadingComponentType\n\n  ReactComponent: WidgetComponentType\n\n  stateModel: IAnyModelType\n\n  constructor(stuff: {\n    name: string\n    heading?: string\n    HeadingComponent?: HeadingComponentType\n    configSchema: AnyConfigurationSchemaType\n    stateModel: IAnyModelType\n    ReactComponent: WidgetComponentType\n  }) {\n    super(stuff)\n    this.heading = stuff.heading\n    this.HeadingComponent = stuff.HeadingComponent\n    this.configSchema = stuff.configSchema\n    this.stateModel = stuff.stateModel\n    this.ReactComponent = stuff.ReactComponent\n    if (!this.ReactComponent) {\n      throw new Error(`no ReactComponent defined for widget ${this.name}`)\n    }\n    if (!this.stateModel) {\n      throw new Error(`no stateModel defined for widget ${this.name}`)\n    }\n  }\n}\n","import { types, Instance } from 'mobx-state-tree'\nimport { ElementId } from '../../util/types/mst'\nimport { MenuItem } from '../../ui'\nimport { Region } from '../../util/types/mst'\n\n/**\n * #stateModel BaseViewModel\n * #category view\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst BaseViewModel = types\n  .model('BaseView', {\n    /**\n     * #property\n     */\n    id: ElementId,\n\n    /**\n     * #property\n     * displayName is displayed in the header of the view, or assembly names\n     * being used if none is specified\n     */\n    displayName: types.maybe(types.string),\n\n    /**\n     * #property\n     */\n    minimized: false,\n  })\n  .volatile(() => ({\n    width: 800,\n  }))\n  .views(() => ({\n    /**\n     * #getter\n     */\n    menuItems(): MenuItem[] {\n      return []\n    },\n  }))\n  .actions(self => ({\n    /**\n     * #action\n     */\n    setDisplayName(name: string) {\n      self.displayName = name\n    },\n\n    /**\n     * #action\n     * width is an important attribute of the view model, when it becomes set, it\n     * often indicates when the app can start drawing to it. certain views like\n     * lgv are strict about this because if it tries to draw before it knows the\n     * width it should draw to, it may start fetching data for regions it doesn't\n     * need to\n     *\n     * setWidth is updated by a ResizeObserver generally, the views often need\n     * to know how wide they are to properly draw genomic regions\n     */\n    setWidth(newWidth: number) {\n      self.width = newWidth\n    },\n\n    /**\n     * #action\n     */\n    setMinimized(flag: boolean) {\n      self.minimized = flag\n    },\n  }))\n\nexport default BaseViewModel\n\nexport type IBaseViewModel = Instance<typeof BaseViewModel>\n\nexport const BaseViewModelWithDisplayedRegions = BaseViewModel.props({\n  displayedRegions: types.array(Region),\n})\nexport type IBaseViewModelWithDisplayedRegions = Instance<\n  typeof BaseViewModelWithDisplayedRegions\n>\n","import type { Instance } from 'mobx-state-tree'\nimport { ConfigurationSchema } from '../../configuration'\n\n/**\n * #config BaseConnection\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst BaseConnectionConfig = ConfigurationSchema(\n  'BaseConnection',\n  {\n    /**\n     * #slot\n     */\n    name: {\n      type: 'string',\n      defaultValue: 'nameOfConnection',\n      description: 'a unique name for this connection',\n    },\n    /**\n     * #slot\n     */\n    assemblyNames: {\n      type: 'stringArray',\n      defaultValue: [],\n      description: 'optional list of names of assemblies in this connection',\n    },\n  },\n  {\n    explicitlyTyped: true,\n    /**\n     * #identifier\n     */\n    explicitIdentifier: 'connectionId',\n  },\n)\n\nexport default BaseConnectionConfig\nexport type BaseConnectionConfigSchema = typeof BaseConnectionConfig\nexport type BaseConnectionConfigModel = Instance<BaseConnectionConfigSchema>\n","import { cast, types } from 'mobx-state-tree'\nimport {\n  AnyConfigurationModel,\n  ConfigurationReference,\n} from '../../configuration'\nimport PluginManager from '../../PluginManager'\n\nimport configSchema from './baseConnectionConfig'\n/**\n * #stateModel BaseConnectionModel\n */\nfunction stateModelFactory(pluginManager: PluginManager) {\n  return types\n    .model('Connection', {\n      /**\n       * #property\n       */\n      name: types.identifier,\n      /**\n       * #property\n       */\n      tracks: types.array(pluginManager.pluggableConfigSchemaType('track')),\n\n      /**\n       * #property\n       */\n      configuration: ConfigurationReference(configSchema),\n    })\n    .actions(self => ({\n      afterAttach() {\n        if (self.tracks.length === 0) {\n          // @ts-expect-error\n          self.connect(self.configuration)\n        }\n      },\n      /**\n       * #action\n       */\n      addTrackConf(trackConf: AnyConfigurationModel) {\n        const length = self.tracks.push(trackConf)\n        return self.tracks[length - 1]\n      },\n      /**\n       * #action\n       */\n      addTrackConfs(trackConfs: AnyConfigurationModel[]) {\n        const length = self.tracks.push(...trackConfs)\n        return self.tracks.slice(length - 1 - trackConfs.length, length - 1)\n      },\n      /**\n       * #action\n       */\n      setTrackConfs(trackConfs: AnyConfigurationModel[]) {\n        self.tracks = cast(trackConfs)\n        return self.tracks\n      },\n      /**\n       * #action\n       */\n      clear() {},\n    }))\n}\n\nexport type BaseConnectionModel = ReturnType<typeof stateModelFactory>\nexport default stateModelFactory\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react'\nimport { getParent, Instance, types, isRoot } from 'mobx-state-tree'\n\n// locals\nimport { getConf } from '../../configuration'\nimport { MenuItem } from '../../ui'\nimport { getParentRenderProps } from '../../util/tracks'\nimport { getContainingView, getEnv } from '../../util'\nimport { ElementId } from '../../util/types/mst'\n\n/**\n * #stateModel BaseDisplay\n * #category display\n */\nfunction stateModelFactory() {\n  return types\n    .model('BaseDisplay', {\n      /**\n       * #property\n       */\n      id: ElementId,\n      /**\n       * #property\n       */\n      type: types.string,\n      /**\n       * #property\n       */\n      rpcDriverName: types.maybe(types.string),\n    })\n    .volatile(() => ({\n      rendererTypeName: '',\n      error: undefined as unknown,\n      message: undefined as string | undefined,\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get RenderingComponent(): React.FC<{\n        model: typeof self\n        onHorizontalScroll?: Function\n        blockState?: Record<string, any>\n      }> {\n        const { pluginManager } = getEnv(self)\n        const displayType = pluginManager.getDisplayType(self.type)\n        return displayType.ReactComponent as React.FC<{\n          model: typeof self\n          onHorizontalScroll?: Function\n          blockState?: Record<string, any>\n        }>\n      },\n\n      /**\n       * #getter\n       */\n      get DisplayBlurb(): React.FC<{ model: typeof self }> | null {\n        return null\n      },\n\n      /**\n       * #getter\n       */\n      get adapterConfig() {\n        return getConf(this.parentTrack, 'adapter')\n      },\n\n      /**\n       * #getter\n       */\n      get parentTrack() {\n        let track = getParent<any>(self)\n        while (!(track.configuration && getConf(track, 'trackId'))) {\n          if (isRoot(track)) {\n            throw new Error(`No parent track found for ${self.type} ${self.id}`)\n          }\n          track = getParent<any>(track)\n        }\n        return track\n      },\n\n      /**\n       * #method\n       * the react props that are passed to the Renderer when data\n       * is rendered in this display\n       */\n      renderProps() {\n        return {\n          ...getParentRenderProps(self),\n          notReady: getContainingView(self).minimized,\n          rpcDriverName: self.rpcDriverName,\n          displayModel: self,\n        }\n      },\n\n      /**\n       * #getter\n       * the pluggable element type object for this display's\n       * renderer\n       */\n      get rendererType() {\n        const { pluginManager } = getEnv(self)\n        const RendererType = pluginManager.getRendererType(\n          self.rendererTypeName,\n        )\n        if (!RendererType) {\n          throw new Error(`renderer \"${self.rendererTypeName}\" not found`)\n        }\n        if (!RendererType.ReactComponent) {\n          throw new Error(\n            `renderer ${self.rendererTypeName} has no ReactComponent, it may not be completely implemented yet`,\n          )\n        }\n        return RendererType\n      },\n\n      /**\n       * #getter\n       * if a display-level message should be displayed instead,\n       * make this return a react component\n       */\n      get DisplayMessageComponent() {\n        return undefined as undefined | React.FC<any>\n      },\n      /**\n       * #method\n       */\n      trackMenuItems(): MenuItem[] {\n        return []\n      },\n\n      /**\n       * #getter\n       */\n      get viewMenuActions(): MenuItem[] {\n        return []\n      },\n      /**\n       * #method\n       * @param region -\n       * @returns falsy if the region is fine to try rendering. Otherwise,\n       *  return a react node + string of text.\n       *  string of text describes why it cannot be rendered\n       *  react node allows user to force load at current setting\n       */\n      regionCannotBeRendered(/* region */) {\n        return null\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setMessage(arg?: string) {\n        self.message = arg\n      },\n      /**\n       * #action\n       */\n      setError(error?: unknown) {\n        self.error = error\n      },\n      /**\n       * #action\n       */\n      setRpcDriverName(rpcDriverName: string) {\n        self.rpcDriverName = rpcDriverName\n      },\n      /**\n       * #action\n       * base display reload does nothing, see specialized displays for details\n       */\n      reload() {},\n    }))\n}\n\nexport const BaseDisplay = stateModelFactory()\nexport type BaseDisplayStateModel = typeof BaseDisplay\nexport type BaseDisplayModel = Instance<BaseDisplayStateModel>\n","import { ConfigurationSchema } from '../../configuration'\n\n/**\n * #config BaseInternetAccount\n * the \"base\" internet account type\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport const BaseInternetAccountConfig = ConfigurationSchema(\n  'InternetAccount',\n  {\n    /**\n     * #slot\n     */\n    name: {\n      description: 'descriptive name of the internet account',\n      type: 'string',\n      defaultValue: '',\n    },\n    /**\n     * #slot\n     */\n    description: {\n      description: 'a description of the internet account',\n      type: 'string',\n      defaultValue: '',\n    },\n    /**\n     * #slot\n     */\n    authHeader: {\n      description: 'request header for credentials',\n      type: 'string',\n      defaultValue: 'Authorization',\n    },\n    /**\n     * #slot\n     */\n    tokenType: {\n      description: 'a custom name for a token to include in the header',\n      type: 'string',\n      defaultValue: '',\n    },\n    /**\n     * #slot\n     */\n    domains: {\n      description:\n        'array of valid domains the url can contain to use this account',\n      type: 'stringArray',\n      defaultValue: [],\n    },\n  },\n  {\n    /**\n     * #identifier\n     */\n    explicitIdentifier: 'internetAccountId',\n    explicitlyTyped: true,\n  },\n)\n","import React from 'react'\nimport { Instance, types } from 'mobx-state-tree'\nimport { ConfigurationReference, getConf } from '../../configuration'\nimport { RemoteFileWithRangeCache } from '../../util/io'\nimport { ElementId } from '../../util/types/mst'\nimport { UriLocation, AnyReactComponentType } from '../../util/types'\nimport { BaseInternetAccountConfig } from './baseInternetAccountConfig'\n\nconst inWebWorker = typeof sessionStorage === 'undefined'\n\n/**\n * #stateModel BaseInternetAccountModel\n * #category internetAccount\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport const InternetAccount = types\n  .model('InternetAccount', {\n    /**\n     * #property\n     */\n    id: ElementId,\n    /**\n     * #property\n     */\n    type: types.string,\n    /**\n     * #property\n     */\n    configuration: ConfigurationReference(BaseInternetAccountConfig),\n  })\n  .views(self => ({\n    /**\n     * #getter\n     */\n    get name(): string {\n      return getConf(self, 'name')\n    },\n    /**\n     * #getter\n     */\n    get description(): string {\n      return getConf(self, 'description')\n    },\n    /**\n     * #getter\n     */\n    get internetAccountId(): string {\n      return getConf(self, 'internetAccountId') // NOTE: this is the explicitIdentifier of the config schema\n    },\n    /**\n     * #getter\n     */\n    get authHeader(): string {\n      return getConf(self, 'authHeader')\n    },\n    /**\n     * #getter\n     */\n    get tokenType(): string {\n      return getConf(self, 'tokenType')\n    },\n    /**\n     * #getter\n     */\n    get domains(): string[] {\n      return getConf(self, 'domains')\n    },\n    /**\n     * #getter\n     * Can use this to customize what is displayed in fileSelector's toggle box\n     */\n    get toggleContents(): React.ReactNode {\n      return null\n    },\n    /**\n     * #getter\n     * Can use this to customize what the fileSelector. It takes a prop called\n     * `setLocation` that should be used to set a UriLocation\n     */\n    get SelectorComponent(): AnyReactComponentType | undefined {\n      return undefined\n    },\n    /**\n     * #getter\n     * Can use this to add a label to the UrlChooser. Has no effect if a custom\n     * SelectorComponent is supplied\n     */\n    get selectorLabel(): string | undefined {\n      return undefined\n    },\n  }))\n  .views(self => ({\n    /**\n     * #method\n     * Determine whether this internetAccount provides credentials for a URL\n     * @param location  - UriLocation of resource\n     * @returns true or false\n     */\n    handlesLocation(location: UriLocation) {\n      return self.domains.some(domain => location?.uri.includes(domain))\n    },\n    /**\n     * #getter\n     * The key used to store this internetAccount's token in sessionStorage\n     */\n    get tokenKey() {\n      return `${self.internetAccountId}-token`\n    },\n  }))\n  .actions(self => ({\n    /**\n     * #action\n     * Must be implemented by a model extending or composing this one. Pass the\n     * user's token to `resolve`.\n     * @param resolve - Pass the token to this function\n     * @param reject - If there is an error getting the token, call this function\n     */\n    getTokenFromUser(\n      resolve: (token: string) => void,\n      reject: (error: Error) => void,\n    ): void {\n      throw new Error('getTokenFromUser must be implemented by extending model')\n    },\n    /**\n     * #action\n     */\n    storeToken(token: string) {\n      sessionStorage.setItem(self.tokenKey, token)\n    },\n    /**\n     * #action\n     */\n    removeToken() {\n      sessionStorage.removeItem(self.tokenKey)\n    },\n    /**\n     * #action\n     */\n    retrieveToken() {\n      return sessionStorage.getItem(self.tokenKey)\n    },\n    /**\n     * #action\n     * This can be used by an internetAccount to validate a token works before\n     * it is used. This is run when preAuthorizationInformation is requested,\n     * so it can be used to check that a token is valid before sending it to a\n     * worker thread. It expects the token to be returned so that this action\n     * can also be used to generate a new token (e.g. by using a refresh token)\n     * if the original one was invalid. Should throw an error if a token is\n     * invalid.\n     *\n     * @param token - Auth token\n     * @param loc - UriLocation of the resource\n     * @returns - Valid auth token\n     */\n    async validateToken(token: string, loc: UriLocation) {\n      return token\n    },\n  }))\n  .actions(self => {\n    let tokenPromise: Promise<string> | undefined = undefined\n    return {\n      /**\n       * #action\n       * Try to get the token from the location pre-auth, from local storage,\n       * or from a previously cached promise. If token is not available, uses\n       * `getTokenFromUser`.\n       *\n       * @param location - UriLocation of the resource\n       * @returns A promise for the token\n       */\n      async getToken(location?: UriLocation): Promise<string> {\n        if (tokenPromise) {\n          return tokenPromise\n        }\n        let token = location?.internetAccountPreAuthorization?.authInfo?.token\n        if (token) {\n          tokenPromise = Promise.resolve(token)\n          return tokenPromise\n        }\n        if (inWebWorker) {\n          throw new Error(\n            'Did not get internet account pre-authorization info in worker',\n          )\n        }\n        token = self.retrieveToken()\n        if (token) {\n          tokenPromise = Promise.resolve(token)\n          return tokenPromise\n        }\n        tokenPromise = new Promise((resolve, reject) =>\n          self.getTokenFromUser(\n            token => {\n              self.storeToken(token)\n              resolve(token)\n            },\n            error => {\n              self.removeToken()\n              reject(error)\n            },\n          ),\n        )\n        return tokenPromise\n      },\n    }\n  })\n  .actions(self => ({\n    /**\n     * #action\n     */\n    addAuthHeaderToInit(init: RequestInit = {}, token: string) {\n      return {\n        ...init,\n        headers: new Headers({\n          ...init.headers,\n          [self.authHeader]: self.tokenType\n            ? `${self.tokenType} ${token}`\n            : token,\n        }),\n      }\n    },\n    /**\n     * #action\n     * Gets the token and returns it along with the information needed to\n     * create a new internetAccount.\n     *\n     * @param location - UriLocation of the resource\n     * @returns\n     */\n    async getPreAuthorizationInformation(location: UriLocation) {\n      const authToken = await self.getToken(location)\n      let validatedToken: string | undefined\n      try {\n        validatedToken = await self.validateToken(authToken, location)\n      } catch (error) {\n        self.removeToken()\n        throw error\n      }\n      return {\n        internetAccountType: self.type,\n        authInfo: {\n          token: validatedToken,\n          configuration: getConf(self),\n        },\n      }\n    },\n  }))\n  .actions(self => ({\n    /**\n     * #action\n     * Get a fetch method that will add any needed authentication headers to\n     * the request before sending it. If location is provided, it will be\n     * checked to see if it includes a token in it pre-auth information.\n     *\n     * @param loc - UriLocation of the resource\n     * @returns A function that can be used to fetch\n     */\n    getFetcher(loc?: UriLocation) {\n      return async (input: RequestInfo, init?: RequestInit) => {\n        const authToken = await self.getToken(loc)\n        const newInit = self.addAuthHeaderToInit(init, authToken)\n        return fetch(input, newInit)\n      }\n    },\n  }))\n  .actions(self => ({\n    /**\n     * #action\n     * Gets a filehandle that uses a fetch that adds auth headers\n     * @param location - UriLocation of the resource\n     * @returns A filehandle\n     */\n    openLocation(location: UriLocation) {\n      return new RemoteFileWithRangeCache(location.uri, {\n        fetch: self.getFetcher(location),\n      })\n    },\n  }))\n\nexport type BaseInternetAccountStateModel = typeof InternetAccount\nexport type BaseInternetAccountModel = Instance<BaseInternetAccountStateModel>\n","import { transaction } from 'mobx'\nimport {\n  getRoot,\n  resolveIdentifier,\n  types,\n  Instance,\n  IAnyStateTreeNode,\n} from 'mobx-state-tree'\n\n// locals\nimport {\n  getConf,\n  AnyConfigurationModel,\n  AnyConfigurationSchemaType,\n  ConfigurationReference,\n} from '../../configuration'\nimport PluginManager from '../../PluginManager'\nimport { MenuItem } from '../../ui'\nimport { getContainingView, getEnv, getSession } from '../../util'\nimport { isSessionModelWithConfigEditing } from '../../util/types'\nimport { ElementId } from '../../util/types/mst'\n\nexport function getCompatibleDisplays(self: IAnyStateTreeNode) {\n  const { pluginManager } = getEnv(self)\n  const view = getContainingView(self)\n  const viewType = pluginManager.getViewType(view.type)\n  const compatTypes = new Set(viewType.displayTypes.map(d => d.name))\n  const displays = self.configuration.displays as AnyConfigurationModel[]\n  return displays.filter(d => compatTypes.has(d.type))\n}\n\n/**\n * #stateModel BaseTrackModel\n * #category track\n * these MST models only exist for tracks that are *shown*. they should contain\n * only UI state for the track, and have a reference to a track configuration.\n * note that multiple displayed tracks could use the same configuration.\n */\nexport function createBaseTrackModel(\n  pm: PluginManager,\n  trackType: string,\n  baseTrackConfig: AnyConfigurationSchemaType,\n) {\n  return types\n    .model(trackType, {\n      /**\n       * #property\n       */\n      id: ElementId,\n      /**\n       * #property\n       */\n      type: types.literal(trackType),\n      /**\n       * #property\n       */\n      configuration: ConfigurationReference(baseTrackConfig),\n      /**\n       * #property\n       */\n      minimized: false,\n      /**\n       * #property\n       */\n      displays: types.array(pm.pluggableMstType('display', 'stateModel')),\n    })\n    .views(self => ({\n      /**\n       * #getter\n       * determines which webworker to send the track to, currently based on trackId\n       */\n      get rpcSessionId() {\n        return self.configuration?.trackId\n      },\n      /**\n       * #getter\n       */\n      get name() {\n        return getConf(self, 'name')\n      },\n      /**\n       * #getter\n       */\n      get textSearchAdapter() {\n        return getConf(self, 'textSearchAdapter')\n      },\n\n      /**\n       * #getter\n       */\n      get adapterType() {\n        const adapterConfig = getConf(self, 'adapter')\n        if (!adapterConfig) {\n          throw new Error(`no adapter configuration provided for ${self.type}`)\n        }\n        const adapterType = pm.getAdapterType(adapterConfig.type)\n        if (!adapterType) {\n          throw new Error(`unknown adapter type ${adapterConfig.type}`)\n        }\n        return adapterType\n      },\n\n      /**\n       * #getter\n       */\n      get viewMenuActions(): MenuItem[] {\n        return self.displays.flatMap(d => d.viewMenuActions)\n      },\n\n      /**\n       * #getter\n       */\n      get canConfigure() {\n        const session = getSession(self)\n        const { sessionTracks, adminMode } = session\n        return (\n          isSessionModelWithConfigEditing(session) &&\n          (adminMode ||\n            sessionTracks.find(\n              (track: { trackId: string }) =>\n                track.trackId === self.configuration?.trackId,\n            ))\n        )\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setMinimized(flag: boolean) {\n        self.minimized = flag\n      },\n      /**\n       * #action\n       */\n      activateConfigurationUI() {\n        const session = getSession(self)\n        const view = getContainingView(self)\n        if (isSessionModelWithConfigEditing(session)) {\n          // @ts-expect-error\n          const trackConf = session.editTrackConfiguration(self.configuration)\n          if (trackConf && trackConf !== self.configuration) {\n            view.hideTrack(self.configuration)\n            view.showTrack(trackConf)\n          }\n        }\n      },\n\n      /**\n       * #action\n       */\n      showDisplay(displayId: string, initialSnapshot = {}) {\n        const schema = pm.pluggableConfigSchemaType('display')\n        const conf = resolveIdentifier(schema, getRoot(self), displayId)\n        const displayType = pm.getDisplayType(conf.type)\n        if (!displayType) {\n          throw new Error(`unknown display type ${conf.type}`)\n        }\n        const display = displayType.stateModel.create({\n          ...initialSnapshot,\n          type: conf.type,\n          configuration: conf,\n        })\n        self.displays.push(display)\n      },\n\n      /**\n       * #action\n       */\n      hideDisplay(displayId: string) {\n        const schema = pm.pluggableConfigSchemaType('display')\n        const conf = resolveIdentifier(schema, getRoot(self), displayId)\n        const t = self.displays.filter(d => d.configuration === conf)\n        transaction(() => t.forEach(d => self.displays.remove(d)))\n        return t.length\n      },\n\n      /**\n       * #action\n       */\n      replaceDisplay(oldId: string, newId: string, initialSnapshot = {}) {\n        const idx = self.displays.findIndex(\n          d => d.configuration.displayId === oldId,\n        )\n        if (idx === -1) {\n          throw new Error(`could not find display id ${oldId} to replace`)\n        }\n        const schema = pm.pluggableConfigSchemaType('display')\n        const conf = resolveIdentifier(schema, getRoot(self), newId)\n        const displayType = pm.getDisplayType(conf.type)\n        if (!displayType) {\n          throw new Error(`unknown display type ${conf.type}`)\n        }\n        self.displays.splice(idx, 1, {\n          ...initialSnapshot,\n          type: conf.type,\n          configuration: conf,\n        })\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       */\n      trackMenuItems() {\n        const menuItems: MenuItem[] = self.displays.flatMap(d =>\n          d.trackMenuItems(),\n        )\n        const shownId = self.displays[0].configuration.displayId\n        const compatDisp = getCompatibleDisplays(self)\n\n        return [\n          ...menuItems,\n          ...(compatDisp.length > 1\n            ? [\n                {\n                  type: 'subMenu',\n                  label: 'Display types',\n                  subMenu: compatDisp.map(d => ({\n                    type: 'radio',\n                    label: pm.getDisplayType(d.type).displayName,\n                    checked: d.displayId === shownId,\n                    onClick: () => self.replaceDisplay(shownId, d.displayId),\n                  })),\n                },\n              ]\n            : []),\n        ]\n      },\n    }))\n}\n\nexport type BaseTrackStateModel = ReturnType<typeof createBaseTrackModel>\nexport type BaseTrackModel = Instance<BaseTrackStateModel>\n","import { types, Instance } from 'mobx-state-tree'\nimport { ConfigurationSchema } from '../../configuration'\nimport PluginManager from '../../PluginManager'\n\n/**\n * #config BaseTrack\n */\nexport function createBaseTrackConfig(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'BaseTrack',\n    {\n      /**\n       * #slot\n       */\n      name: {\n        description: 'descriptive name of the track',\n        type: 'string',\n        defaultValue: 'Track',\n      },\n      /**\n       * #slot\n       */\n      assemblyNames: {\n        description: 'name of the assembly (or assemblies) track belongs to',\n        type: 'stringArray',\n        defaultValue: ['assemblyName'],\n      },\n      /**\n       * #slot\n       */\n      description: {\n        description: 'a description of the track',\n        type: 'string',\n        defaultValue: '',\n      },\n      /**\n       * #slot\n       */\n      category: {\n        description: 'the category and sub-categories of a track',\n        type: 'stringArray',\n        defaultValue: [],\n      },\n      /**\n       * #slot\n       */\n      metadata: {\n        type: 'frozen',\n        description: 'anything to add about this track',\n        defaultValue: {},\n      },\n      /**\n       * #slot\n       */\n      adapter: pluginManager.pluggableConfigSchemaType('adapter'),\n\n      textSearching: ConfigurationSchema('textSearching', {\n        /**\n         * #slot textSearching.indexedAttributes\n         */\n        indexingAttributes: {\n          type: 'stringArray',\n          description:\n            'list of which feature attributes to index for text searching',\n          defaultValue: ['Name', 'ID'],\n        },\n        /**\n         * #slot textSearching.indexingFeatureTypesToExclude\n         */\n        indexingFeatureTypesToExclude: {\n          type: 'stringArray',\n          description: 'list of feature types to exclude in text search index',\n          defaultValue: ['CDS', 'exon'],\n        },\n\n        /**\n         * #slot textSearching.textSearchAdapter\n         */\n        textSearchAdapter: pluginManager.pluggableConfigSchemaType(\n          'text search adapter',\n        ),\n      }),\n\n      /**\n       * #slot\n       */\n      displays: types.array(pluginManager.pluggableConfigSchemaType('display')),\n\n      formatDetails: ConfigurationSchema('FormatDetails', {\n        /**\n         * #slot formatDetails.feature\n         */\n        feature: {\n          type: 'frozen',\n          description: 'adds extra fields to the feature details',\n          defaultValue: {},\n          contextVariable: ['feature'],\n        },\n\n        /**\n         * #slot formatDetails.subfeatures\n         */\n        subfeatures: {\n          type: 'frozen',\n          description: 'adds extra fields to the subfeatures of a feature',\n          defaultValue: {},\n          contextVariable: ['feature'],\n        },\n\n        /**\n         * #slot formatDetails.depth\n         */\n        depth: {\n          type: 'number',\n          defaultValue: 2,\n          description:\n            'depth of subfeatures to iterate the formatter on formatDetails.subfeatures (e.g. you may not want to format the exon/cds subfeatures, so limited to 2',\n        },\n      }),\n      formatAbout: ConfigurationSchema('FormatAbout', {\n        /**\n         * #slot formatAbout.config\n         */\n        config: {\n          type: 'frozen',\n          description: 'formats configuration object in about dialog',\n          defaultValue: {},\n          contextVariable: ['config'],\n        },\n\n        /**\n         * #slot formatAbout.hideUris\n         */\n        hideUris: {\n          type: 'boolean',\n          defaultValue: false,\n        },\n      }),\n    },\n    {\n      preProcessSnapshot: s2 => {\n        const snap = pluginManager.evaluateExtensionPoint(\n          'Core-preProcessTrackConfig',\n          JSON.parse(JSON.stringify(s2)),\n        ) as {\n          trackId: string\n          name: string\n          type: string\n          displays: { type: string; displayId: string }[]\n        }\n        const displayTypes = new Set()\n        const { displays = [] } = snap\n        if (snap.trackId !== 'placeholderId') {\n          // Gets the displays on the track snapshot and the possible displays\n          // from the track type and adds any missing possible displays to the\n          // snapshot\n          displays.forEach(d => d && displayTypes.add(d.type))\n          const trackType = pluginManager.getTrackType(snap.type)\n          trackType.displayTypes.forEach(displayType => {\n            if (!displayTypes.has(displayType.name)) {\n              displays.push({\n                displayId: `${snap.trackId}-${displayType.name}`,\n                type: displayType.name,\n              })\n            }\n          })\n        }\n        return { ...snap, displays }\n      },\n      /**\n       * #identifier\n       */\n      explicitIdentifier: 'trackId',\n      explicitlyTyped: true,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      actions: (self: any) => ({\n        addDisplayConf(conf: { type: string; displayId: string }) {\n          const { type } = conf\n          if (!type) {\n            throw new Error(`unknown display type ${type}`)\n          }\n          const display = self.displays.find(\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            (d: any) => d?.displayId === conf.displayId,\n          )\n          if (display) {\n            return display\n          }\n          const length = self.displays.push(conf)\n          return self.displays[length - 1]\n        },\n      }),\n    },\n  )\n}\n\nexport type BaseTrackConfigSchema = ReturnType<typeof createBaseTrackConfig>\nexport type BaseTrackConfig = Instance<BaseTrackConfigSchema>\n","import deepEqual from 'fast-deep-equal'\n\n// layouts\nimport GranularRectLayout from '../../util/layouts/GranularRectLayout'\nimport MultiLayout from '../../util/layouts/MultiLayout'\nimport { SerializedLayout, BaseLayout } from '../../util/layouts/BaseLayout'\nimport PrecomputedLayout from '../../util/layouts/PrecomputedLayout'\n\n// other\nimport FeatureRendererType, {\n  RenderArgs as FeatureRenderArgs,\n  RenderArgsSerialized as FeatureRenderArgsSerialized,\n  RenderArgsDeserialized as FeatureRenderArgsDeserialized,\n  RenderResults as FeatureRenderResults,\n  ResultsSerialized as FeatureResultsSerialized,\n  ResultsDeserialized as FeatureResultsDeserialized,\n} from './FeatureRendererType'\nimport { getLayoutId, Region, Feature } from '../../util'\nimport { readConfObject, AnyConfigurationModel } from '../../configuration'\nimport SerializableFilterChain from './util/serializableFilterChain'\nimport RpcManager from '../../rpc/RpcManager'\n\nexport interface LayoutSessionProps {\n  config: AnyConfigurationModel\n  bpPerPx: number\n  filters: SerializableFilterChain\n}\n\nexport type MyMultiLayout = MultiLayout<GranularRectLayout<unknown>, unknown>\nexport interface CachedLayout {\n  layout: MyMultiLayout\n  config: AnyConfigurationModel\n  filters: SerializableFilterChain\n}\n\nexport class LayoutSession implements LayoutSessionProps {\n  config: AnyConfigurationModel\n\n  bpPerPx: number\n\n  filters: SerializableFilterChain\n\n  constructor(args: LayoutSessionProps) {\n    this.config = args.config\n    this.bpPerPx = args.bpPerPx\n    this.filters = args.filters\n    this.update(args)\n  }\n\n  update(props: LayoutSessionProps) {\n    Object.assign(this, props)\n  }\n\n  makeLayout() {\n    return new MultiLayout(GranularRectLayout, {\n      maxHeight: readConfObject(this.config, 'maxHeight'),\n      displayMode: readConfObject(this.config, 'displayMode'),\n      pitchX: this.bpPerPx,\n      pitchY: readConfObject(this.config, 'noSpacing') ? 1 : 3,\n    })\n  }\n\n  /**\n   * @param layout -\n   * @returns true if the given layout is a valid one to use for this session\n   */\n  cachedLayoutIsValid(cachedLayout: CachedLayout) {\n    return (\n      cachedLayout &&\n      cachedLayout.layout.subLayoutConstructorArgs.pitchX === this.bpPerPx &&\n      deepEqual(readConfObject(this.config), cachedLayout.config) &&\n      deepEqual(this.filters, cachedLayout.filters)\n    )\n  }\n\n  cachedLayout: CachedLayout | undefined\n\n  get layout(): MyMultiLayout {\n    if (!this.cachedLayout || !this.cachedLayoutIsValid(this.cachedLayout)) {\n      this.cachedLayout = {\n        layout: this.makeLayout(),\n        config: readConfObject(this.config),\n        filters: this.filters,\n      }\n    }\n    return this.cachedLayout.layout\n  }\n}\nexport interface RenderArgs extends FeatureRenderArgs {\n  bpPerPx: number\n  layoutId: string\n}\n\nexport interface RenderArgsSerialized extends FeatureRenderArgsSerialized {\n  bpPerPx: number\n}\n\nexport interface RenderArgsDeserialized extends FeatureRenderArgsDeserialized {\n  bpPerPx: number\n  layoutId: string\n}\n\nexport interface RenderResults extends FeatureRenderResults {\n  layout: BaseLayout<Feature>\n}\n\nexport interface ResultsSerialized extends FeatureResultsSerialized {\n  maxHeightReached: boolean\n  layout: SerializedLayout\n}\n\nexport interface ResultsDeserialized extends FeatureResultsDeserialized {\n  maxHeightReached: boolean\n  layout: PrecomputedLayout<string>\n}\n\nexport default class BoxRendererType extends FeatureRendererType {\n  sessions: { [key: string]: LayoutSession } = {}\n\n  getWorkerSession(\n    props: LayoutSessionProps & { sessionId: string; layoutId: string },\n  ) {\n    const key = getLayoutId(props)\n    if (!this.sessions[key]) {\n      this.sessions[key] = this.createSession(props)\n    }\n    const session = this.sessions[key]\n    session.update(props)\n    return session\n  }\n\n  // expands region for glyphs to use\n  getExpandedRegion(region: Region, renderArgs: RenderArgsDeserialized) {\n    if (!region) {\n      return region\n    }\n    const { bpPerPx, config } = renderArgs\n    const maxFeatureGlyphExpansion =\n      config === undefined\n        ? 0\n        : readConfObject(config, 'maxFeatureGlyphExpansion')\n    if (!maxFeatureGlyphExpansion) {\n      return region\n    }\n    const bpExpansion = Math.round(maxFeatureGlyphExpansion * bpPerPx)\n    return {\n      ...region,\n      start: Math.floor(Math.max(region.start - bpExpansion, 0)),\n      end: Math.ceil(region.end + bpExpansion),\n    }\n  }\n\n  createSession(props: LayoutSessionProps) {\n    return new LayoutSession(props)\n  }\n\n  async freeResourcesInClient(rpcManager: RpcManager, args: RenderArgs) {\n    const { regions } = args\n    const key = getLayoutId(args)\n    let freed = 0\n    const session = this.sessions[key]\n    if (!regions && session) {\n      delete this.sessions[key]\n      freed = 1\n    }\n    if (session && regions) {\n      session.layout.discardRange(\n        regions[0].refName,\n        regions[0].start,\n        regions[0].end,\n      )\n    }\n    return freed + (await super.freeResourcesInClient(rpcManager, args))\n  }\n\n  deserializeLayoutInClient(json: SerializedLayout) {\n    return new PrecomputedLayout(json)\n  }\n\n  deserializeResultsInClient(result: ResultsSerialized, args: RenderArgs) {\n    const layout = this.deserializeLayoutInClient(result.layout)\n    return super.deserializeResultsInClient(\n      { ...result, layout } as FeatureResultsSerialized,\n      args,\n    ) as ResultsDeserialized\n  }\n\n  createLayoutInWorker(args: RenderArgsDeserialized) {\n    const { regions } = args\n    const session = this.getWorkerSession(args)\n    return session.layout.getSublayout(regions[0].refName)\n  }\n\n  serializeResultsInWorker(\n    results: RenderResults,\n    args: RenderArgsDeserialized,\n  ): ResultsSerialized {\n    const serialized = super.serializeResultsInWorker(\n      results,\n      args,\n    ) as ResultsSerialized\n\n    const [region] = args.regions\n    serialized.layout = results.layout.serializeRegion(\n      this.getExpandedRegion(region, args),\n    )\n    if (serialized.layout.rectangles) {\n      serialized.features = serialized.features.filter(f => {\n        return Boolean(serialized.layout.rectangles[f.uniqueId])\n      })\n    }\n\n    serialized.maxHeightReached = serialized.layout.maxHeightReached\n    return serialized\n  }\n\n  /**\n   * gets layout and renders\n   *\n   * @param props - render args\n   */\n  async render(props: RenderArgsDeserialized): Promise<RenderResults> {\n    const layout =\n      (props.layout as undefined | BaseLayout<unknown>) ||\n      this.createLayoutInWorker(props)\n    const result = await super.render({ ...props, layout })\n    return { ...result, layout }\n  }\n}\n","import React, { useEffect, useRef } from 'react'\nimport { observer } from 'mobx-react'\nimport { hydrate, unmountComponentAtNode } from 'react-dom'\nimport { AnyReactComponentType, Feature, rIC } from '../../util'\n\nexport default observer(function (props: {\n  html: string\n  features: Map<string, Feature>\n  RenderingComponent: AnyReactComponentType\n}) {\n  const { html, RenderingComponent } = props\n  const ref = useRef<SVGGElement>(null)\n  useEffect(() => {\n    const domNode = ref.current\n    function doHydrate() {\n      if (domNode && html) {\n        if (domNode.innerHTML) {\n          unmountComponentAtNode(domNode)\n        }\n\n        // setting outline:none fixes react \"focusable\" element issue. see\n        // https://github.com/GMOD/jbrowse-components/issues/2160\n        domNode.style.outline = 'none'\n        domNode.innerHTML = html\n        // use requestIdleCallback to defer main-thread rendering\n        // and hydration for when we have some free time. helps\n        // keep the framerate up.\n        rIC(() => {\n          hydrate(<RenderingComponent {...props} />, domNode)\n        })\n      }\n    }\n    doHydrate()\n    return () => {\n      if (domNode) {\n        unmountComponentAtNode(domNode)\n      }\n    }\n  }, [html, RenderingComponent, props])\n\n  return <g ref={ref} />\n})\n","import React from 'react'\nimport { SimpleFeature, SimpleFeatureSerialized } from '../../util'\nimport FeatureRenderer from './FeatureRendererType'\nimport RpcRenderedSvgGroup from './RpcRenderedSvgGroup'\n\nexport default class CircularChordRendererType extends FeatureRenderer {\n  supportsSVG = true\n\n  deserializeResultsInClient(\n    res: { features: SimpleFeatureSerialized[]; html: string },\n    args: { exportSVG?: { rasterizeLayers?: boolean } },\n  ) {\n    const deserializedFeatures = new Map(\n      res.features.map(f => SimpleFeature.fromJSON(f)).map(f => [f.id(), f]),\n    )\n    // if we are rendering svg, we skip hydration\n    if (args.exportSVG) {\n      // only return the res if the renderer explicitly has\n      // this.supportsSVG support to avoid garbage being rendered in SVG\n      // document\n      return {\n        ...res,\n        features: deserializedFeatures,\n        blockKey: 'circularChord',\n        html: this.supportsSVG\n          ? res.html\n          : '<text y=\"12\" fill=\"black\">SVG export not supported for this track</text>',\n      }\n    }\n\n    // hydrate res using ServerSideRenderedContent\n    return {\n      ...res,\n      features: deserializedFeatures,\n      blockKey: 'circularChord',\n      reactElement: (\n        <RpcRenderedSvgGroup\n          {...args}\n          {...res}\n          features={deserializedFeatures}\n          RenderingComponent={this.ReactComponent}\n        />\n      ),\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { filter, toArray } from 'rxjs/operators'\nimport { Feature } from '../../util/simpleFeature'\nimport { Region } from '../../util/types'\nimport ServerSideRenderer, {\n  RenderArgs as ServerSideRenderArgs,\n  RenderArgsSerialized as ServerSideRenderArgsSerialized,\n  RenderArgsDeserialized as ServerSideRenderArgsDeserialized,\n  ResultsSerialized as ServerSideResultsSerialized,\n  ResultsDeserialized as ServerSideResultsDeserialized,\n} from './ServerSideRendererType'\nimport RpcManager from '../../rpc/RpcManager'\nimport { getAdapter } from '../../data_adapters/dataAdapterCache'\nimport { BaseFeatureDataAdapter } from '../../data_adapters/BaseAdapter'\nimport { dedupe, getSerializedSvg } from '../../util'\nimport { firstValueFrom } from 'rxjs'\n\nexport interface RenderArgs extends ServerSideRenderArgs {\n  displayModel: {}\n  blockKey: string\n}\n\nexport interface RenderArgsSerialized extends ServerSideRenderArgsSerialized {\n  displayModel: {}\n  blockKey: string\n}\n\nexport interface RenderArgsDeserialized\n  extends ServerSideRenderArgsDeserialized {\n  displayModel: {}\n  blockKey: string\n}\n\nexport type ResultsSerialized = ServerSideResultsSerialized\n\nexport interface ResultsDeserialized extends ServerSideResultsDeserialized {\n  blockKey: string\n}\n\nexport interface ResultsSerializedSvgExport extends ResultsSerialized {\n  canvasRecordedData: unknown\n  width: number\n  height: number\n  reactElement: unknown\n}\n\nfunction isSvgExport(e: ResultsSerialized): e is ResultsSerializedSvgExport {\n  return 'canvasRecordedData' in e\n}\n\nexport default class ComparativeServerSideRenderer extends ServerSideRenderer {\n  /**\n   * directly modifies the render arguments to prepare\n   * them to be serialized and sent to the worker.\n   *\n   * the base class replaces the `displayModel` param\n   * (which on the client is a MST model) with a stub\n   * that only contains the `selectedFeature`, since\n   * this is the only part of the track model that most\n   * renderers read.\n   *\n   * @param args - the arguments passed to render\n   * @returns the same object\n   */\n\n  async renameRegionsIfNeeded(args: RenderArgs) {\n    return args\n  }\n\n  serializeArgsInClient(args: RenderArgs) {\n    const deserializedArgs = {\n      ...args,\n      displayModel: {},\n    }\n\n    return super.serializeArgsInClient(deserializedArgs)\n  }\n\n  // deserialize some of the results that came back from the worker\n  deserializeResultsInClient(\n    result: ResultsSerialized,\n    args: RenderArgs,\n  ): ResultsDeserialized {\n    const deserialized = super.deserializeResultsInClient(result, args)\n    return { ...deserialized, blockKey: args.blockKey }\n  }\n\n  /**\n   * Render method called on the client. Serializes args, then\n   * calls `render` with the RPC manager.\n   */\n  async renderInClient(rpcManager: RpcManager, args: RenderArgs) {\n    const results = (await rpcManager.call(\n      args.sessionId,\n      'ComparativeRender',\n      args,\n    )) as ResultsSerialized\n\n    if (isSvgExport(results)) {\n      results.html = await getSerializedSvg(results)\n      delete results.reactElement\n    }\n    return results\n  }\n\n  /**\n   * @param renderArgs -\n   * @param feature -\n   * @returns true if this feature passes all configured filters\n   */\n  featurePassesFilters(renderArgs: RenderArgsDeserialized, feature: Feature) {\n    return renderArgs.filters\n      ? renderArgs.filters.passes(feature, renderArgs)\n      : true\n  }\n\n  async getFeatures(renderArgs: any) {\n    const pm = this.pluginManager\n    const { sessionId, adapterConfig } = renderArgs\n    const { dataAdapter } = await getAdapter(pm, sessionId, adapterConfig)\n    const regions = renderArgs.regions as Region[]\n    if (!regions || regions.length === 0) {\n      console.warn('no regions supplied to comparative renderer')\n      return []\n    }\n\n    const requestRegions = regions.map(r => {\n      // make sure the requested region's start and end are integers, if\n      // there is a region specification.\n      const requestRegion = { ...r }\n      if (requestRegion.start) {\n        requestRegion.start = Math.floor(requestRegion.start)\n      }\n      if (requestRegion.end) {\n        requestRegion.end = Math.floor(requestRegion.end)\n      }\n      return requestRegion\n    })\n\n    // note that getFeaturesInMultipleRegions does not do glyph expansion\n    const res = await firstValueFrom(\n      (dataAdapter as BaseFeatureDataAdapter)\n        .getFeaturesInMultipleRegions(requestRegions, renderArgs)\n        .pipe(\n          filter(f => this.featurePassesFilters(renderArgs, f)),\n          toArray(),\n        ),\n    )\n\n    // dedupe needed xref https://github.com/GMOD/jbrowse-components/pull/3404/\n    return dedupe(res, f => f.id())\n  }\n}\n\nexport { type RenderResults } from './ServerSideRendererType'\n","import { toArray } from 'rxjs/operators'\nimport clone from 'clone'\nimport { firstValueFrom } from 'rxjs'\n\n// locals\nimport { checkAbortSignal, iterMap } from '../../util'\nimport SimpleFeature, {\n  Feature,\n  SimpleFeatureSerialized,\n} from '../../util/simpleFeature'\nimport { AugmentedRegion as Region } from '../../util/types'\nimport { getAdapter } from '../../data_adapters/dataAdapterCache'\nimport ServerSideRendererType, {\n  RenderArgs as ServerSideRenderArgs,\n  RenderArgsSerialized as ServerSideRenderArgsSerialized,\n  RenderArgsDeserialized as ServerSideRenderArgsDeserialized,\n  RenderResults as ServerSideRenderResults,\n  ResultsDeserialized as ServerSideResultsDeserialized,\n  ResultsSerialized as ServerSideResultsSerialized,\n} from './ServerSideRendererType'\nimport { isFeatureAdapter } from '../../data_adapters/BaseAdapter'\nimport { AnyConfigurationModel } from '../../configuration'\n\nexport interface RenderArgs extends ServerSideRenderArgs {\n  displayModel: { id: string; selectedFeatureId?: string }\n  regions: Region[]\n  blockKey: string\n}\n\nexport interface RenderArgsSerialized extends ServerSideRenderArgsSerialized {\n  displayModel: { id: string; selectedFeatureId?: string }\n  regions: Region[]\n  blockKey: string\n}\n\nexport interface RenderArgsDeserialized\n  extends ServerSideRenderArgsDeserialized {\n  displayModel: { id: string; selectedFeatureId?: string }\n  regions: Region[]\n  blockKey: string\n  adapterConfig: AnyConfigurationModel\n}\n\nexport interface RenderResults extends ServerSideRenderResults {\n  features: Map<string, Feature>\n}\n\nexport interface ResultsSerialized extends ServerSideResultsSerialized {\n  features: SimpleFeatureSerialized[]\n}\n\nexport interface ResultsDeserialized extends ServerSideResultsDeserialized {\n  features: Map<string, Feature>\n  blockKey: string\n}\n\nexport default class FeatureRendererType extends ServerSideRendererType {\n  /**\n   * replaces the `displayModel` param (which on the client is a MST model)\n   * with a stub that only contains the `selectedFeature`, since this is the only\n   * part of the track model that most renderers read. also serializes the config\n   * and regions to JSON from MST objects.\n   *\n   * @param args - the arguments passed to render\n   */\n  serializeArgsInClient(args: RenderArgs) {\n    const { displayModel, regions } = args\n    const serializedArgs = {\n      ...args,\n      displayModel: displayModel && {\n        id: displayModel.id,\n        selectedFeatureId: displayModel.selectedFeatureId,\n      },\n      regions: clone(regions),\n    }\n    return super.serializeArgsInClient(serializedArgs)\n  }\n\n  /**\n   * Adds feature deserialization to base server-side result deserialization\n   *\n   * @param results - the results of the render\n   * @param args - the arguments passed to render\n   */\n  deserializeResultsInClient(\n    result: ResultsSerialized,\n    args: RenderArgs,\n  ): ResultsDeserialized {\n    const deserializedFeatures = new Map<string, SimpleFeature>(\n      result.features.map(f => SimpleFeature.fromJSON(f)).map(f => [f.id(), f]),\n    )\n\n    const deserialized = super.deserializeResultsInClient(\n      {\n        ...result,\n        features: deserializedFeatures,\n      } as ServerSideResultsSerialized,\n      args,\n    )\n    return {\n      ...deserialized,\n      blockKey: args.blockKey,\n      features: deserializedFeatures,\n    }\n  }\n\n  /**\n   * Adds feature serialization to base server-side result serialization\n   *\n   * @param result - object containing the results of calling the `render`\n   * method\n   * @param args - deserialized render args\n   */\n  serializeResultsInWorker(\n    result: RenderResults,\n    args: RenderArgsDeserialized,\n  ): ResultsSerialized {\n    const serialized = super.serializeResultsInWorker(result, args)\n    const { features } = result\n    return {\n      ...serialized,\n      features: iterMap(features.values(), f => f.toJSON(), features.size),\n    }\n  }\n\n  /**\n   * will expand if soft clipping or feature glyphs are shown\n   *\n   * @param region - rendering region\n   * @param _renderArgs - render args, unused, may be used in deriving classes\n   */\n  getExpandedRegion(region: Region, _renderArgs: RenderArgsDeserialized) {\n    return region\n  }\n\n  /**\n   * use the dataAdapter to fetch the features to be rendered\n   *\n   * @param renderArgs -\n   * @returns Map of features as `{ id => feature, ... }`\n   */\n  async getFeatures(\n    renderArgs: RenderArgsDeserialized,\n  ): Promise<Map<string, Feature>> {\n    const pm = this.pluginManager\n    const { signal, regions, sessionId, adapterConfig } = renderArgs\n    const { dataAdapter } = await getAdapter(pm, sessionId, adapterConfig)\n    if (!isFeatureAdapter(dataAdapter)) {\n      throw new Error('Adapter does not support retrieving features')\n    }\n    const features = new Map()\n\n    if (!regions || regions.length === 0) {\n      return features\n    }\n    // make sure the requested region's start and end are integers, if\n    // there is a region specification.\n    const requestRegions = regions.map((r: Region) => {\n      const requestRegion = { ...r }\n      if (requestRegion.start) {\n        requestRegion.start = Math.floor(requestRegion.start)\n      }\n      if (requestRegion.end) {\n        requestRegion.end = Math.ceil(requestRegion.end)\n      }\n      return requestRegion\n    })\n\n    const region = requestRegions[0]\n\n    const featureObservable =\n      requestRegions.length === 1\n        ? dataAdapter.getFeatures(\n            this.getExpandedRegion(region, renderArgs),\n            renderArgs,\n          )\n        : dataAdapter.getFeaturesInMultipleRegions(requestRegions, renderArgs)\n\n    const feats = await firstValueFrom(featureObservable.pipe(toArray()))\n    checkAbortSignal(signal)\n    return new Map<string, Feature>(\n      feats\n        .filter(feat => this.featurePassesFilters(renderArgs, feat))\n        .map(feat => [feat.id(), feat] as const),\n    )\n  }\n\n  /**\n   * @param renderArgs -\n   * @param feature -\n   * @returns true if this feature passes all configured filters\n   */\n  featurePassesFilters(renderArgs: RenderArgsDeserialized, feature: Feature) {\n    return renderArgs.filters\n      ? renderArgs.filters.passes(feature, renderArgs)\n      : true\n  }\n\n  /**\n   * gets features and renders\n   *\n   * @param props - render args\n   */\n  async render(\n    props: RenderArgsDeserialized & { features?: Map<string, Feature> },\n  ): Promise<RenderResults> {\n    const features = props.features || (await this.getFeatures(props))\n    const result = await super.render({ ...props, features })\n    return { ...result, features }\n  }\n}\n","import React, { ReactElement } from 'react'\nimport { getDefaultValue } from '../../util/mst-reflection'\nimport PluggableElementBase from '../PluggableElementBase'\nimport { AnyConfigurationSchemaType } from '../../configuration'\nimport { AnyReactComponentType } from '../../util'\nimport PluginManager from '../../PluginManager'\n\nexport type RenderProps = Record<string, unknown>\n\nexport interface RenderResults {\n  reactElement?: ReactElement\n  html?: string\n}\n\nexport default class RendererType extends PluggableElementBase {\n  ReactComponent: AnyReactComponentType\n\n  supportsSVG = false\n\n  configSchema: AnyConfigurationSchemaType\n\n  pluginManager: PluginManager\n\n  constructor(stuff: {\n    name: string\n    ReactComponent: AnyReactComponentType\n    displayName?: string\n    configSchema: AnyConfigurationSchemaType\n    pluginManager: PluginManager\n  }) {\n    super(stuff)\n    this.ReactComponent = stuff.ReactComponent\n    this.configSchema = stuff.configSchema\n    this.pluginManager = stuff.pluginManager\n\n    if (!this.ReactComponent) {\n      throw new Error(`no ReactComponent defined for renderer ${this.name}`)\n    }\n    if (!getDefaultValue(this.configSchema).type) {\n      throw new Error(\n        `${this.name} config schema ${this.configSchema.name} is not explicitlyTyped`,\n      )\n    }\n    if (!this.pluginManager) {\n      throw new Error(`no plugin manager defined for renderer ${this.name}`)\n    }\n  }\n\n  async render(props: RenderProps): Promise<RenderResults> {\n    return {\n      reactElement: React.createElement(this.ReactComponent, props, null),\n    }\n  }\n\n  /**\n   * frees resources associated with the given range, session, etc.\n   * optionally returns the number of data items deleted\n   */\n  freeResources(/* specification: {} */): number {\n    return 0\n  }\n}\n","import React, { useEffect, useRef } from 'react'\nimport { ThemeProvider } from '@mui/material/styles'\nimport { hydrate, unmountComponentAtNode } from 'react-dom'\n\n// locals\nimport { createJBrowseTheme } from '../../ui'\nimport { rIC } from '../../util'\nimport { ResultsSerialized, RenderArgs } from './ServerSideRendererType'\n\ninterface Props extends ResultsSerialized, RenderArgs {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  RenderingComponent: React.ComponentType<any>\n}\n\nexport default function ({ theme, html, RenderingComponent, ...rest }: Props) {\n  const ref = useRef<HTMLDivElement>(null)\n  const jbrowseTheme = createJBrowseTheme(theme)\n\n  useEffect(() => {\n    const domNode = ref.current\n    function doHydrate() {\n      if (domNode) {\n        if (domNode) {\n          unmountComponentAtNode(domNode)\n        }\n        domNode.innerHTML = html\n\n        // defer main-thread rendering and hydration for when\n        // we have some free time. helps keep the framerate up.\n        //\n        // note: the timeout param to rIC below helps when you are doing\n        // a long continuous scroll, it forces it to evaluate because\n        // otherwise the continuous scroll would never give it time to do\n        // so\n        rIC(\n          () => {\n            hydrate(\n              <ThemeProvider theme={jbrowseTheme}>\n                <RenderingComponent {...rest} />\n              </ThemeProvider>,\n              domNode,\n            )\n          },\n          { timeout: 300 },\n        )\n      }\n    }\n\n    doHydrate()\n\n    return () => {\n      if (domNode) {\n        unmountComponentAtNode(domNode)\n      }\n    }\n  }, [html, jbrowseTheme, rest, RenderingComponent])\n\n  return <div ref={ref} />\n}\n","import React from 'react'\nimport { ThemeOptions } from '@mui/material'\nimport { ThemeProvider } from '@mui/material/styles'\nimport { renderToString } from 'react-dom/server'\nimport {\n  SnapshotOrInstance,\n  SnapshotIn,\n  getSnapshot,\n  isStateTreeNode,\n} from 'mobx-state-tree'\n\n// locals\nimport { checkAbortSignal, getSerializedSvg, updateStatus } from '../../util'\nimport SerializableFilterChain, {\n  SerializedFilterChain,\n} from './util/serializableFilterChain'\nimport { AnyConfigurationModel } from '../../configuration'\nimport RpcManager from '../../rpc/RpcManager'\nimport { createJBrowseTheme } from '../../ui'\n\nimport RendererType, { RenderProps, RenderResults } from './RendererType'\nimport ServerSideRenderedContent from './ServerSideRenderedContent'\n\ninterface BaseRenderArgs extends RenderProps {\n  sessionId: string\n  // Note that signal serialization happens after serializeArgsInClient and\n  // deserialization happens before deserializeArgsInWorker\n  signal?: AbortSignal\n  theme: ThemeOptions\n  exportSVG: { rasterizeLayers?: boolean }\n}\n\nexport interface RenderArgs extends BaseRenderArgs {\n  config: SnapshotOrInstance<AnyConfigurationModel>\n  filters: SerializableFilterChain\n}\n\nexport interface RenderArgsSerialized extends BaseRenderArgs {\n  statusCallback?: (arg: string) => void\n  config: SnapshotIn<AnyConfigurationModel>\n  filters: SerializedFilterChain\n}\nexport interface RenderArgsDeserialized extends BaseRenderArgs {\n  config: AnyConfigurationModel\n  filters: SerializableFilterChain\n}\n\nexport interface ResultsSerialized extends Omit<RenderResults, 'reactElement'> {\n  html: string\n}\n\nexport interface ResultsSerializedSvgExport extends ResultsSerialized {\n  canvasRecordedData: unknown\n  width: number\n  height: number\n  reactElement: unknown\n}\n\nexport type ResultsDeserialized = RenderResults\n\nfunction isSvgExport(e: ResultsSerialized): e is ResultsSerializedSvgExport {\n  return 'canvasRecordedData' in e\n}\n\nexport default class ServerSideRenderer extends RendererType {\n  /**\n   * directly modifies the render arguments to prepare them to be serialized and\n   * sent to the worker.\n   *\n   * @param args - the arguments passed to render\n   * @returns the same object\n   */\n  serializeArgsInClient(args: RenderArgs): RenderArgsSerialized {\n    return {\n      ...args,\n      config: isStateTreeNode(args.config)\n        ? getSnapshot(args.config)\n        : args.config,\n      filters: args.filters?.toJSON().filters,\n    }\n  }\n\n  /**\n   * Deserialize the render results from the worker in the client. Includes\n   * hydrating of the React HTML string, and not hydrating the result if SVG is\n   * being rendered\n   *\n   * @param results - the results of the render\n   * @param args - the arguments passed to render\n   */\n  deserializeResultsInClient(\n    res: ResultsSerialized,\n    args: RenderArgs,\n  ): ResultsDeserialized {\n    // if we are rendering svg, we skip hydration\n    if (args.exportSVG) {\n      // only return the res if the renderer explicitly has\n      // this.supportsSVG support to avoid garbage being rendered in SVG\n      // document\n      return {\n        ...res,\n        html: this.supportsSVG\n          ? res.html\n          : '<text y=\"12\" fill=\"black\">SVG export not supported for this track</text>',\n      }\n    }\n\n    // get res using ServerSideRenderedContent\n    return {\n      ...res,\n      reactElement: (\n        <ServerSideRenderedContent\n          {...args}\n          {...res}\n          RenderingComponent={this.ReactComponent}\n        />\n      ),\n    }\n  }\n\n  /**\n   * modifies the passed arguments object to inflate arguments as necessary.\n   * called in the worker process.\n   *\n   * @param args - the converted arguments to modify\n   */\n  deserializeArgsInWorker(args: RenderArgsSerialized): RenderArgsDeserialized {\n    const deserialized = { ...args } as unknown as RenderArgsDeserialized\n    deserialized.config = this.configSchema.create(args.config || {}, {\n      pluginManager: this.pluginManager,\n    })\n    deserialized.filters = new SerializableFilterChain({\n      filters: args.filters,\n    })\n\n    return deserialized\n  }\n\n  /**\n   * Serialize results of the render to send them to the client. Includes\n   * rendering React to an HTML string.\n   *\n   * @param results - object containing the results of calling the `render`\n   * method\n   * @param args - deserialized render args\n   */\n  serializeResultsInWorker(\n    results: RenderResults,\n    args: RenderArgsDeserialized,\n  ): ResultsSerialized {\n    const html = renderToString(\n      <ThemeProvider theme={createJBrowseTheme(args.theme)}>\n        {results.reactElement}\n      </ThemeProvider>,\n    )\n    delete results.reactElement\n    return { ...results, html }\n  }\n\n  /**\n   * Render method called on the client. Serializes args, then calls\n   * \"CoreRender\" with the RPC manager.\n   *\n   * @param rpcManager - RPC manager\n   * @param args - render args\n   */\n  async renderInClient(rpcManager: RpcManager, args: RenderArgs) {\n    const results = (await rpcManager.call(\n      args.sessionId,\n      'CoreRender',\n      args,\n    )) as ResultsSerialized\n\n    if (isSvgExport(results)) {\n      results.html = await getSerializedSvg(results)\n      delete results.reactElement\n    }\n    return results\n  }\n\n  /**\n   * Render method called on the worker. `render` is called here in server-side\n   * rendering\n   *\n   * @param args - serialized render args\n   */\n  async renderInWorker(args: RenderArgsSerialized): Promise<ResultsSerialized> {\n    const { signal, statusCallback = () => {} } = args\n    const deserializedArgs = this.deserializeArgsInWorker(args)\n\n    const results = await updateStatus('Rendering plot', statusCallback, () =>\n      this.render(deserializedArgs),\n    )\n    checkAbortSignal(signal)\n\n    // serialize the results for passing back to the main thread.\n    // these will be transmitted to the main process, and will come out\n    // as the result of renderRegionWithWorker.\n    return updateStatus('Serializing results', statusCallback, () =>\n      this.serializeResultsInWorker(results, deserializedArgs),\n    )\n  }\n\n  async freeResourcesInClient(rpcManager: RpcManager, args: RenderArgs) {\n    const serializedArgs = this.serializeArgsInClient(args)\n\n    const freed = this.freeResources()\n    const freedRpc = (await rpcManager.call(\n      args.sessionId,\n      'CoreFreeResources',\n      serializedArgs,\n    )) as number\n    return freed + freedRpc\n  }\n}\n\nexport { type RenderResults } from './RendererType'\n","import { stringToJexlExpression } from '../../../util/jexlStrings'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype FilterExpression = (...args: Record<string, any>[] | any[]) => boolean\n\ninterface Filter {\n  string: string\n  expr: FilterExpression\n}\n\nexport type SerializedFilterChain = string[]\n\nexport default class SerializableFilterChain {\n  filterChain: Filter[]\n\n  constructor({ filters = [] }: { filters: SerializedFilterChain }) {\n    this.filterChain = filters.map(inputFilter => {\n      if (typeof inputFilter === 'string') {\n        const expr = stringToJexlExpression(inputFilter) as FilterExpression\n        return { expr, string: inputFilter }\n      }\n      throw new Error(`invalid inputFilter string \"${inputFilter}\"`)\n    })\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  passes(...args: any[]) {\n    for (let i = 0; i < this.filterChain.length; i += 1) {\n      if (\n        // @ts-expect-error\n        !this.filterChain[i].expr.evalSync({ feature: args[0] })\n      ) {\n        return false\n      }\n    }\n    return true\n  }\n\n  toJSON() {\n    return { filters: this.filterChain.map(f => f.string) }\n  }\n\n  static fromJSON(json: { filters: SerializedFilterChain }) {\n    return new SerializableFilterChain(json)\n  }\n}\n","import React from 'react'\nimport CascadingMenu from '@jbrowse/core/ui/CascadingMenu'\nimport { IconButton } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport {\n  bindTrigger,\n  bindPopover,\n  usePopupState,\n} from 'material-ui-popup-state/hooks'\nimport { MenuItem } from '@jbrowse/core/ui'\n\nconst CascadingMenuButton = observer(function CascadingMenuButton({\n  children,\n  menuItems,\n  ...rest\n}: {\n  children?: React.ReactElement\n  menuItems: MenuItem[]\n  [key: string]: unknown\n}) {\n  const popupState = usePopupState({\n    popupId: 'viewMenu',\n    variant: 'popover',\n  })\n  return (\n    <>\n      <IconButton\n        {...bindTrigger(popupState)}\n        {...rest}\n        disabled={menuItems.length === 0}\n      >\n        {children}\n      </IconButton>\n      <CascadingMenu\n        {...bindPopover(popupState)}\n        onMenuItemClick={(_: unknown, callback: () => void) => callback()}\n        menuItems={menuItems}\n        popupState={popupState}\n      />\n    </>\n  )\n})\n\nexport default CascadingMenuButton\n","import React, { useState } from 'react'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from '@mui/material'\nimport FactoryResetDialog from './FactoryResetDialog'\nimport ErrorMessage from './ErrorMessage'\n\nconst ResetComponent = ({\n  onFactoryReset,\n  resetButtonText,\n}: {\n  onFactoryReset: () => void\n  resetButtonText: string\n}) => {\n  const [dialogOpen, setDialogOpen] = useState(false)\n\n  return (\n    <>\n      <Button\n        data-testid=\"fatal-error\"\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={() => setDialogOpen(true)}\n      >\n        {resetButtonText}\n      </Button>\n      <FactoryResetDialog\n        onClose={() => setDialogOpen(false)}\n        open={dialogOpen}\n        onFactoryReset={onFactoryReset}\n      />\n    </>\n  )\n}\n\nexport default function FatalErrorDialog({\n  componentStack,\n  error = 'No error message provided',\n  onFactoryReset,\n  resetButtonText = 'Factory Reset',\n}: {\n  componentStack?: string\n  error?: unknown\n  onFactoryReset: () => void\n  resetButtonText?: string\n}) {\n  return (\n    <Dialog maxWidth=\"xl\" open>\n      <DialogTitle>Fatal error</DialogTitle>\n      <DialogContent>\n        <ErrorMessage error={error} />\n        <pre>{componentStack}</pre>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={() => window.location.reload()}\n        >\n          Refresh\n        </Button>\n        <ResetComponent\n          onFactoryReset={onFactoryReset}\n          resetButtonText={resetButtonText}\n        />\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport { Box, Button, Typography, FormControl } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { isElectron } from '../../util'\nimport { LocalPathLocation, FileLocation, BlobLocation } from '../../util/types'\nimport { getBlob, storeBlobLocation } from '../../util/tracks'\n\nfunction isLocalPathLocation(\n  location: FileLocation,\n): location is LocalPathLocation {\n  return 'localPath' in location\n}\n\nfunction isBlobLocation(location: FileLocation): location is BlobLocation {\n  return 'blobId' in location\n}\n\nconst useStyles = makeStyles()(theme => ({\n  filename: {\n    marginLeft: theme.spacing(1),\n  },\n}))\n\nfunction LocalFileChooser(props: {\n  location?: FileLocation\n  setLocation: Function\n}) {\n  const { classes } = useStyles()\n  const { location, setLocation } = props\n\n  const filename =\n    location &&\n    ((isBlobLocation(location) && location.name) ||\n      (isLocalPathLocation(location) && location.localPath))\n\n  const needToReload =\n    location && isBlobLocation(location) && !getBlob(location.blobId)\n\n  return (\n    <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n      <Box>\n        <FormControl fullWidth>\n          <Button variant=\"outlined\" component=\"label\">\n            Choose File\n            <input\n              type=\"file\"\n              hidden\n              onChange={({ target }) => {\n                const file = target && target.files && target.files[0]\n                if (file) {\n                  if (isElectron) {\n                    setLocation({\n                      localPath: (file as File & { path: string }).path,\n                      locationType: 'LocalPathLocation',\n                    })\n                  } else {\n                    setLocation(storeBlobLocation({ blob: file }))\n                  }\n                }\n              }}\n            />\n          </Button>\n        </FormControl>\n      </Box>\n      <Box>\n        <Typography\n          component=\"span\"\n          className={classes.filename}\n          color={filename ? 'initial' : 'textSecondary'}\n        >\n          {filename || 'No file chosen'}\n        </Typography>\n        {needToReload ? (\n          <Typography color=\"error\">(need to reload)</Typography>\n        ) : null}\n      </Box>\n    </Box>\n  )\n}\n\nexport default LocalFileChooser\n","import React from 'react'\nimport { TextField } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { FileLocation, isUriLocation } from '../../util/types'\n\nexport default observer(function UrlChooser(props: {\n  location?: FileLocation\n  setLocation: Function\n  label?: string\n}) {\n  const { location, setLocation, label } = props\n\n  return (\n    <TextField\n      fullWidth\n      variant=\"outlined\"\n      inputProps={{ 'data-testid': 'urlInput' }}\n      defaultValue={location && isUriLocation(location) ? location.uri : ''}\n      label={label || 'Enter URL'}\n      onChange={event => {\n        setLocation({\n          uri: event.target.value.trim(),\n          locationType: 'UriLocation',\n        })\n      }}\n    />\n  )\n})\n","import React from 'react'\nimport { Typography, TypographyProps } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { keyframes } from 'tss-react'\n\nconst useStyles = makeStyles()({\n  dots: {\n    '&::after': {\n      display: 'inline-block',\n      content: '\"\"',\n      width: '1em',\n      textAlign: 'left',\n      animation: `${keyframes`\n      0% {\n        content: '';\n      }\n      25% {\n          content: '.';\n      }\n      50% {\n        content: '..';\n      }\n      75% {\n        content: '...';\n      }\n      `} 1.2s infinite ease-in-out`,\n    },\n  },\n})\n\ninterface Props extends TypographyProps {\n  message?: string\n}\n\nexport default function LoadingEllipses({\n  message,\n  variant = 'body2',\n  ...rest\n}: Props) {\n  const { classes } = useStyles()\n  return (\n    <Typography className={classes.dots} {...rest} variant={variant}>\n      {`${message || 'Loading'}`}\n    </Typography>\n  )\n}\n","const category10 = [\n  '#1f77b4',\n  '#ff7f0e',\n  '#2ca02c',\n  '#d62728',\n  '#9467bd',\n  '#8c564b',\n  '#e377c2',\n  '#7f7f7f',\n  '#bcbd22',\n  '#17becf',\n]\nconst dark2 = [\n  '#1b9e77',\n  '#d95f02',\n  '#7570b3',\n  '#e7298a',\n  '#66a61e',\n  '#e6ab02',\n  '#a6761d',\n  '#666666',\n]\nconst set1 = [\n  '#e41a1c',\n  '#377eb8',\n  '#4daf4a',\n  '#984ea3',\n  '#ff7f00',\n  '#ffff33',\n  '#a65628',\n  '#f781bf',\n  '#999999',\n]\nconst set2 = [\n  '#66c2a5',\n  '#fc8d62',\n  '#8da0cb',\n  '#e78ac3',\n  '#a6d854',\n  '#ffd92f',\n  '#e5c494',\n  '#b3b3b3',\n]\nconst tableau10 = [\n  '#4e79a7',\n  '#f28e2c',\n  '#e15759',\n  '#76b7b2',\n  '#59a14f',\n  '#edc949',\n  '#af7aa1',\n  '#ff9da7',\n  '#9c755f',\n  '#bab0ab',\n]\n\nconst ggplot2Colors6 = [\n  '#F8766D',\n  '#B79F00',\n  '#00BA38',\n  '#00BFC4',\n  '#619CFF',\n  '#F564E3',\n]\n\nconst ggplot2Colors5 = ['#F8766D', '#A3A500', '#00BF7D', '#00B0F6', '#E76BF3']\nconst ggplot2Colors4 = ['#F8766D', '#7CAE00', '#00BFC4', '#C77CFF']\nconst ggplot2Colors3 = ['#F8766D', '#00BA38', '#619CFF']\n\nexport {\n  set1,\n  set2,\n  tableau10,\n  dark2,\n  category10,\n  ggplot2Colors6,\n  ggplot2Colors5,\n  ggplot2Colors4,\n  ggplot2Colors3,\n}\n","import { getSnapshot } from 'mobx-state-tree'\nimport { Region, ViewSnap } from './index'\n\nexport interface BpOffset {\n  refName?: string\n  index: number\n  offset: number\n  start?: number\n  end?: number\n}\n\nfunction lengthBetween(self: ViewSnap, start: BpOffset, end: BpOffset) {\n  let bpSoFar = 0\n  const { displayedRegions } = self\n  if (start.index === end.index) {\n    bpSoFar += end.offset - start.offset\n  } else {\n    const s = displayedRegions[start.index]\n    bpSoFar += s.end - s.start - start.offset\n    if (end.index - start.index >= 2) {\n      for (let i = start.index + 1; i < end.index; i++) {\n        const region = displayedRegions[i]\n        const len = region.end - region.start\n        bpSoFar += len\n      }\n    }\n    bpSoFar += end.offset\n  }\n  return bpSoFar\n}\n\nexport function moveTo(\n  self: ViewSnap & {\n    zoomTo: (arg: number) => number\n    scrollTo: (arg: number) => void\n  },\n  start?: BpOffset,\n  end?: BpOffset,\n) {\n  if (!start || !end) {\n    return\n  }\n  const {\n    width,\n    interRegionPaddingWidth,\n    displayedRegions,\n    bpPerPx,\n    minimumBlockWidth,\n  } = self\n\n  const len = lengthBetween(self, start, end)\n  let numBlocksWideEnough = 0\n  for (let i = start.index; i < end.index; i++) {\n    const r = displayedRegions[i]\n    if ((r.end - r.start) / bpPerPx > minimumBlockWidth) {\n      numBlocksWideEnough++\n    }\n  }\n\n  const targetBpPerPx =\n    len / (width - interRegionPaddingWidth * numBlocksWideEnough)\n  const newBpPerPx = self.zoomTo(targetBpPerPx)\n\n  // If our target bpPerPx was smaller than the allowed minBpPerPx, adjust\n  // the scroll so the requested range is in the middle of the screen\n  let extraBp = 0\n  if (targetBpPerPx < newBpPerPx) {\n    extraBp = ((newBpPerPx - targetBpPerPx) * self.width) / 2\n  }\n\n  let bpToStart = -extraBp\n\n  for (let i = 0; i < self.displayedRegions.length; i += 1) {\n    const region = self.displayedRegions[i]\n    if (start.index === i) {\n      bpToStart += start.offset\n      break\n    } else {\n      bpToStart += region.end - region.start\n    }\n  }\n\n  self.scrollTo(Math.round(bpToStart / self.bpPerPx))\n}\n\nfunction coord(r: Region, bp: number) {\n  return Math.floor(r.reversed ? r.end - bp : r.start + bp) + 1\n}\n\n// manual return type since getSnapshot hard to infer here\nexport function pxToBp(\n  self: ViewSnap,\n  px: number,\n): {\n  coord: number\n  index: number\n  refName: string\n  oob: boolean\n  assemblyName: string\n  offset: number\n  start: number\n  end: number\n  reversed: boolean\n} {\n  let bpSoFar = 0\n  const {\n    bpPerPx,\n    offsetPx,\n    displayedRegions,\n    interRegionPaddingWidth,\n    staticBlocks,\n  } = self\n  const blocks = staticBlocks.contentBlocks\n  const bp = (offsetPx + px) * bpPerPx\n  if (bp < 0) {\n    const r = displayedRegions[0]\n    const snap = getSnapshot(r)\n    // @ts-expect-error\n    return {\n      // xref https://github.com/mobxjs/mobx-state-tree/issues/1524 for Omit\n      ...(snap as Omit<typeof snap, symbol>),\n      oob: true,\n      coord: coord(r, bp),\n      offset: bp,\n      index: 0,\n    }\n  }\n\n  const interRegionPaddingBp = interRegionPaddingWidth * bpPerPx\n  let currBlock = 0\n  for (let i = 0; i < displayedRegions.length; i++) {\n    const r = displayedRegions[i]\n    const len = r.end - r.start\n    const offset = bp - bpSoFar\n    if (len + bpSoFar > bp && bpSoFar <= bp) {\n      const snap = getSnapshot(r)\n      // @ts-expect-error\n      return {\n        // xref https://github.com/mobxjs/mobx-state-tree/issues/1524 for Omit\n        ...(snap as Omit<typeof snap, symbol>),\n        oob: false,\n        offset,\n        coord: coord(r, offset),\n        index: i,\n      }\n    }\n\n    // add the interRegionPaddingWidth if the boundary is in the screen e.g. in\n    // a static block\n    if (blocks[currBlock]?.regionNumber === i) {\n      bpSoFar += len + interRegionPaddingBp\n      currBlock++\n    } else {\n      bpSoFar += len\n    }\n  }\n\n  if (bp >= bpSoFar && displayedRegions.length > 0) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const r = displayedRegions.at(-1)!\n    const len = r.end - r.start\n    const offset = bp - bpSoFar + len\n\n    const snap = getSnapshot(r)\n    // @ts-expect-error\n    return {\n      // xref https://github.com/mobxjs/mobx-state-tree/issues/1524 for Omit\n      ...(snap as Omit<typeof snap, symbol>),\n      oob: true,\n      offset,\n      coord: coord(r, offset),\n      index: displayedRegions.length - 1,\n    }\n  }\n  return {\n    coord: 0,\n    index: 0,\n    refName: '',\n    oob: true,\n    assemblyName: '',\n    offset: 0,\n    start: 0,\n    end: 0,\n    reversed: false,\n  }\n}\n\nexport function bpToPx({\n  refName,\n  coord,\n  regionNumber,\n  self,\n}: {\n  refName: string\n  coord: number\n  regionNumber?: number\n  self: ViewSnap\n}) {\n  let bpSoFar = 0\n\n  const { interRegionPaddingWidth, bpPerPx, displayedRegions, staticBlocks } =\n    self\n  const blocks = staticBlocks.contentBlocks\n  const interRegionPaddingBp = interRegionPaddingWidth * bpPerPx\n  let currBlock = 0\n\n  let i = 0\n  for (; i < displayedRegions.length; i++) {\n    const r = displayedRegions[i]\n    const len = r.end - r.start\n    if (\n      refName === r.refName &&\n      coord >= r.start &&\n      coord <= r.end &&\n      (regionNumber ? regionNumber === i : true)\n    ) {\n      bpSoFar += r.reversed ? r.end - coord : coord - r.start\n      break\n    }\n\n    // add the interRegionPaddingWidth if the boundary is in the screen e.g. in\n    // a static block\n    if (blocks[currBlock]?.regionNumber === i) {\n      bpSoFar += len + interRegionPaddingBp\n      currBlock++\n    } else {\n      bpSoFar += len\n    }\n  }\n  const found = displayedRegions[i]\n  if (found) {\n    return {\n      index: i,\n      offsetPx: Math.round(bpSoFar / bpPerPx),\n    }\n  }\n\n  return undefined\n}\n\nexport function bpToPxMap({\n  refName,\n  coord,\n  regionNumber,\n  self,\n}: {\n  refName: string\n  coord: number\n  regionNumber?: number\n  self: ViewSnap\n}) {\n  let bpSoFar = 0\n\n  const { interRegionPaddingWidth, bpPerPx, displayedRegions, staticBlocks } =\n    self\n  const blocks = staticBlocks.contentBlocks\n  const interRegionPaddingBp = interRegionPaddingWidth * bpPerPx\n  const map = {}\n  let currBlock = 0\n\n  let i = 0\n  for (; i < displayedRegions.length; i++) {\n    const r = displayedRegions[i]\n    const len = r.end - r.start\n    if (\n      refName === r.refName &&\n      coord >= r.start &&\n      coord <= r.end &&\n      (regionNumber === undefined ? true : regionNumber === i)\n    ) {\n      bpSoFar += r.reversed ? r.end - coord : coord - r.start\n      break\n    }\n\n    // add the interRegionPaddingWidth if the boundary is in the screen e.g. in\n    // a static block\n    if (blocks[currBlock]?.regionNumber === i) {\n      bpSoFar += len + interRegionPaddingBp\n      currBlock++\n    } else {\n      bpSoFar += len\n    }\n  }\n  const found = displayedRegions[i]\n  if (found) {\n    return {\n      index: i,\n      offsetPx: Math.round(bpSoFar / bpPerPx),\n    }\n  }\n\n  return map\n}\n","import { types, cast, Instance } from 'mobx-state-tree'\nimport { clamp } from './index'\nimport { Feature } from './simpleFeature'\nimport { Region, ElementId } from './types/mst'\nimport { Region as IRegion } from './types'\nimport calculateDynamicBlocks from './calculateDynamicBlocks'\nimport calculateStaticBlocks from './calculateStaticBlocks'\nimport { moveTo, pxToBp, bpToPx, BpOffset } from './Base1DUtils'\n\n/**\n * #stateModel Base1DView\n * used in non-lgv view representations of a 1d view e.g. the two axes of the\n * dotplot use this\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst Base1DView = types\n  .model('Base1DView', {\n    /**\n     * #property\n     */\n    id: ElementId,\n    /**\n     * #property\n     */\n    displayedRegions: types.array(Region),\n    /**\n     * #property\n     */\n    bpPerPx: 0,\n    /**\n     * #property\n     */\n    offsetPx: 0,\n    /**\n     * #property\n     */\n    interRegionPaddingWidth: types.optional(types.number, 0),\n    /**\n     * #property\n     */\n    minimumBlockWidth: types.optional(types.number, 0),\n  })\n  .volatile(() => ({\n    features: undefined as undefined | Feature[],\n    volatileWidth: 0,\n  }))\n  .actions(self => ({\n    /**\n     * #action\n     */\n    setDisplayedRegions(regions: IRegion[]) {\n      self.displayedRegions = cast(regions)\n    },\n    /**\n     * #action\n     */\n    setBpPerPx(val: number) {\n      self.bpPerPx = val\n    },\n    /**\n     * #action\n     */\n    setVolatileWidth(width: number) {\n      self.volatileWidth = width\n    },\n  }))\n  .views(self => ({\n    /**\n     * #getter\n     */\n    get width() {\n      return self.volatileWidth\n    },\n    /**\n     * #getter\n     */\n    get assemblyNames() {\n      return [\n        ...new Set(self.displayedRegions.map(region => region.assemblyName)),\n      ]\n    },\n    /**\n     * #getter\n     */\n    get displayedRegionsTotalPx() {\n      return this.totalBp / self.bpPerPx\n    },\n\n    /**\n     * #getter\n     */\n    get maxOffset() {\n      // objectively determined to keep the linear genome on the main screen\n      const leftPadding = 10\n      return this.displayedRegionsTotalPx - leftPadding\n    },\n\n    /**\n     * #getter\n     */\n    get minOffset() {\n      // objectively determined to keep the linear genome on the main screen\n      const rightPadding = 30\n      return -this.width + rightPadding\n    },\n\n    /**\n     * #getter\n     */\n    get totalBp() {\n      return self.displayedRegions\n        .map(a => a.end - a.start)\n        .reduce((a, b) => a + b, 0)\n    },\n  }))\n  .views(self => ({\n    /**\n     * #getter\n     */\n    get dynamicBlocks() {\n      return calculateDynamicBlocks(self)\n    },\n\n    /**\n     * #getter\n     */\n    get staticBlocks() {\n      return calculateStaticBlocks(self)\n    },\n\n    /**\n     * #getter\n     */\n    get currBp() {\n      return this.dynamicBlocks\n        .map(a => a.end - a.start)\n        .reduce((a, b) => a + b, 0)\n    },\n  }))\n  .views(self => ({\n    /**\n     * #method\n     */\n    pxToBp(px: number) {\n      return pxToBp(self, px)\n    },\n\n    /**\n     * #method\n     */\n    bpToPx({\n      refName,\n      coord,\n      regionNumber,\n    }: {\n      refName: string\n      coord: number\n      regionNumber?: number\n    }) {\n      return bpToPx({ refName, coord, regionNumber, self })?.offsetPx\n    },\n  }))\n  .actions(self => ({\n    /**\n     * #action\n     */\n    setFeatures(features: Feature[]) {\n      self.features = features\n    },\n\n    /**\n     * #action\n     * this makes a zoomed out view that shows all displayedRegions that makes\n     * the overview bar square with the scale bar\n     */\n    showAllRegions() {\n      self.bpPerPx = self.totalBp / self.width\n      self.offsetPx = 0\n    },\n\n    /**\n     * #action\n     */\n    zoomOut() {\n      this.zoomTo(self.bpPerPx * 2)\n    },\n\n    /**\n     * #action\n     */\n    zoomIn() {\n      this.zoomTo(self.bpPerPx / 2)\n    },\n\n    /**\n     * #action\n     */\n    zoomTo(bpPerPx: number, offset = self.width / 2) {\n      const newBpPerPx = clamp(\n        bpPerPx,\n        'minBpPerPx' in self ? (self.minBpPerPx as number) : 0,\n        'maxBpPerPx' in self ? (self.maxBpPerPx as number) : Infinity,\n      )\n\n      const oldBpPerPx = self.bpPerPx\n      if (Math.abs(oldBpPerPx - newBpPerPx) < 0.000001) {\n        return oldBpPerPx\n      }\n\n      self.bpPerPx = newBpPerPx\n\n      // tweak the offset so that the center of the view remains at the same\n      // coordinate\n      self.offsetPx = clamp(\n        Math.round(\n          ((self.offsetPx + offset) * oldBpPerPx) / newBpPerPx - offset,\n        ),\n        self.minOffset,\n        self.maxOffset,\n      )\n      return self.bpPerPx\n    },\n\n    /**\n     * #action\n     */\n    scrollTo(offsetPx: number) {\n      const newOffsetPx = clamp(offsetPx, self.minOffset, self.maxOffset)\n      self.offsetPx = newOffsetPx\n      return newOffsetPx\n    },\n    /**\n     * #action\n     */\n    centerAt(coord: number, refName: string | undefined, regionNumber: number) {\n      if (!refName) {\n        return\n      }\n      const centerPx = self.bpToPx({\n        refName,\n        coord,\n        regionNumber,\n      })\n      if (centerPx) {\n        this.scrollTo(Math.round(centerPx - self.width / 2))\n      }\n    },\n\n    /**\n     * #action\n     * note: the scroll is clamped to keep the view on the main screen\n     */\n    scroll(distance: number) {\n      const oldOffsetPx = self.offsetPx\n      const newOffsetPx = clamp(\n        self.offsetPx + distance,\n        self.minOffset,\n        self.maxOffset,\n      )\n      self.offsetPx = newOffsetPx\n      return newOffsetPx - oldOffsetPx\n    },\n  }))\n  .actions(self => ({\n    /**\n     * #action\n     * offset is the base-pair-offset in the displayed region, index is the index of the\n     * displayed region in the linear genome view\n     *\n     * @param start - object as `{start, end, offset, index}`\n     * @param end - object as `{start, end, offset, index}`\n     */\n    moveTo(start?: BpOffset, end?: BpOffset) {\n      moveTo(self, start, end)\n    },\n  }))\n\nexport type Base1DViewStateModel = typeof Base1DView\nexport type Base1DViewModel = Instance<Base1DViewStateModel>\n\nexport default Base1DView\n","import { Observable, fromEvent } from 'rxjs'\n\nclass AbortError extends Error {\n  public code: string | undefined\n}\n\n/**\n * properly check if the given AbortSignal is aborted.\n * per the standard, if the signal reads as aborted,\n * this function throws either a DOMException AbortError, or a regular error\n * with a `code` attribute set to `ERR_ABORTED`.\n *\n * for convenience, passing `undefined` is a no-op\n *\n * @param signal -\n * @returns nothing\n */\nexport function checkAbortSignal(signal?: AbortSignal): void {\n  if (!signal) {\n    return\n  }\n\n  if (!(signal instanceof AbortSignal)) {\n    throw new TypeError('must pass an AbortSignal')\n  }\n\n  if (signal.aborted) {\n    throw makeAbortError()\n  }\n}\n\nfunction timeout(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n/**\n * Skips to the next tick, then runs `checkAbortSignal`.\n * Await this to inside an otherwise synchronous loop to\n * provide a place to break when an abort signal is received.\n */\nexport async function abortBreakPoint(signal?: AbortSignal) {\n  // it was observed that an actual timeout is needed to get the aborting (wrap\n  // hicrenderer in a try catch, console.error the error, and rethrow the error\n  // to see). using await Promise.resolve() did not appear to allow aborting to\n  // occur\n  await timeout(1)\n  checkAbortSignal(signal)\n}\n\nexport function makeAbortError() {\n  if (typeof DOMException !== 'undefined') {\n    return new DOMException('aborted', 'AbortError')\n  }\n  const e = new AbortError('aborted')\n  e.code = 'ERR_ABORTED'\n  return e\n}\n\nexport function observeAbortSignal(signal?: AbortSignal): Observable<Event> {\n  if (!signal) {\n    return Observable.create()\n  }\n  return fromEvent(signal, 'abort')\n}\n\n/**\n * check if the given exception was caused by an operation being intentionally aborted\n * @param exception -\n */\nexport function isAbortException(exception: unknown): boolean {\n  return (\n    exception instanceof Error &&\n    // DOMException\n    (exception.name === 'AbortError' ||\n      // standard-ish non-DOM abort exception\n      (exception as AbortError).code === 'ERR_ABORTED' ||\n      // message contains aborted for bubbling through RPC\n      // things we have seen that we want to catch here\n      // Error: aborted\n      // AbortError: aborted\n      // AbortError: The user aborted a request.\n      !!/\\b(aborted|aborterror)\\b/i.test(exception.message))\n  )\n}\n","type Func<T> = (value: BaseBlock, index: number, array: BaseBlock[]) => T\n\nexport class BlockSet {\n  constructor(public blocks: BaseBlock[] = []) {}\n\n  push(block: BaseBlock) {\n    if (block instanceof ElidedBlock && this.blocks.length > 0) {\n      const lastBlock = this.blocks.at(-1)\n      if (lastBlock instanceof ElidedBlock) {\n        lastBlock.push(block)\n        return\n      }\n    }\n\n    this.blocks.push(block)\n  }\n\n  getBlocks() {\n    return this.blocks\n  }\n\n  getRegions() {\n    return this.blocks.map(block => block.toRegion())\n  }\n\n  map<T, U = this>(func: Func<T>, thisarg?: U) {\n    // eslint-disable-next-line unicorn/no-array-method-this-argument\n    return this.blocks.map(func, thisarg)\n  }\n\n  forEach<T, U = this>(func: Func<T>, thisarg?: U) {\n    // eslint-disable-next-line unicorn/no-array-method-this-argument\n    return this.blocks.forEach(func, thisarg)\n  }\n\n  get length() {\n    return this.blocks.length\n  }\n\n  get totalWidthPx() {\n    return this.blocks.length > 0\n      ? this.blocks.map(blocks => blocks.widthPx).reduce((a, b) => a + b)\n      : 0\n  }\n\n  get totalWidthPxWithoutBorders() {\n    return this.blocks.length > 0\n      ? this.blocks\n          .filter(block => block.variant !== 'boundary')\n          .map(blocks => blocks.widthPx)\n          .reduce((a, b) => a + b)\n      : 0\n  }\n\n  get offsetPx() {\n    return this.blocks.length > 0 ? this.blocks[0].offsetPx : 0\n  }\n\n  get contentBlocks() {\n    return this.blocks.filter(block => block instanceof ContentBlock)\n  }\n\n  get totalBp() {\n    return this.contentBlocks\n      .map(block => block.end - block.start)\n      .reduce((a, b) => a + b, 0)\n  }\n}\n\nexport class BaseBlock {\n  public regionNumber?: number\n\n  public reversed?: boolean\n\n  public refName: string\n\n  public start: number\n\n  public end: number\n\n  public assemblyName: string\n\n  public key: string\n\n  public offsetPx: number\n\n  public widthPx = 0\n\n  public variant?: string\n\n  public isLeftEndOfDisplayedRegion?: boolean\n\n  /**\n   * a block that should be shown as filled with data\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(data: any) {\n    Object.assign(this, data)\n    this.assemblyName = data.assemblyName\n    this.refName = data.refName\n    this.start = data.start\n    this.end = data.end\n    this.key = data.key\n    this.offsetPx = data.offsetPx\n  }\n\n  /**\n   * rename the reference sequence of this block and return a new one\n   *\n   * @param refName -\n   * @returns either a new block with a renamed reference sequence,\n   * or the same block, if the ref name is not actually different\n   */\n  renameReference(refName: string) {\n    if (this.refName && refName !== this.refName) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return new (this.constructor as any)({ ...this, refName })\n    }\n    return this\n  }\n\n  toRegion() {\n    return {\n      refName: this.refName,\n      start: this.start,\n      end: this.end,\n      assemblyName: this.assemblyName,\n      reversed: this.reversed,\n    }\n  }\n}\n\nexport class ContentBlock extends BaseBlock {}\n\n/**\n * marker block representing one or more blocks that are\n * too small to be shown at the current zoom level\n */\nexport class ElidedBlock extends BaseBlock {\n  public widthPx: number\n\n  public elidedBlockCount = 0\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(data: Record<string, any>) {\n    super(data)\n    this.widthPx = data.widthPx\n  }\n\n  push(otherBlock: ElidedBlock) {\n    this.elidedBlockCount += 1\n\n    if (otherBlock) {\n      this.refName = ''\n      this.start = 0\n      this.end = 0\n      this.widthPx += otherBlock.widthPx\n    }\n  }\n}\n\n/**\n * marker block that sits between two different displayed regions\n * and provides a thick border between them\n */\nexport class InterRegionPaddingBlock extends BaseBlock {}\n","import { isStateTreeNode, getSnapshot } from 'mobx-state-tree'\nimport { intersection2 } from './range'\nimport { assembleLocStringFast } from '.'\nimport {\n  BlockSet,\n  ContentBlock,\n  ElidedBlock,\n  InterRegionPaddingBlock,\n} from './blockTypes'\nimport { Base1DViewModel } from './calculateStaticBlocks'\n\n/**\n * returns a BlockSet of which the `blocks` attribute is an array of 'dynamic\n * blocks', which are blocks representing only the regions that are visible in\n * the view right now. these are mostly used by tracks for which static blocks\n * are not feasible.\n *\n * each block is a plain JS object like:\n *   `{ refName, start, end, offsetPx, reversed? }`\n *\n * start and end are in bp, and start is always less than end, but if reversed\n * is true, startBp will be on the right side of the visible region.\n *\n * offsetPx is the number of pixels from the left edge of the view to the left\n * edge of the region\n *\n * NOTE: start, end, and offsetPx may all be fractional!\n *\n * @returns BlockSet of `{ refName, startBp, end, offset, reversed? }`\n */\nexport default function calculateDynamicBlocks(\n  model: Base1DViewModel,\n  padding = true,\n  elision = true,\n) {\n  const {\n    offsetPx,\n    displayedRegions,\n    bpPerPx,\n    width,\n    minimumBlockWidth,\n    interRegionPaddingWidth,\n  } = model\n\n  if (!width) {\n    throw new Error('view has no width, cannot calculate displayed blocks')\n  }\n  const blocks = new BlockSet()\n  let displayedRegionLeftPx = 0\n  const windowLeftPx = offsetPx\n  const windowRightPx = windowLeftPx + width\n  displayedRegions.forEach((region, regionNumber) => {\n    const {\n      assemblyName,\n      refName,\n      start: regionStart,\n      end: regionEnd,\n      reversed,\n    } = region\n    const displayedRegionRightPx =\n      displayedRegionLeftPx + (regionEnd - regionStart) / bpPerPx\n\n    const regionWidthPx = (regionEnd - regionStart) / bpPerPx\n    const parentRegion = isStateTreeNode(region) ? getSnapshot(region) : region\n\n    if (\n      displayedRegionLeftPx < windowRightPx &&\n      displayedRegionRightPx > windowLeftPx\n    ) {\n      // this displayed region overlaps the view, so make a record for it\n      const [leftPx, rightPx] = intersection2(\n        windowLeftPx,\n        windowRightPx,\n        displayedRegionLeftPx,\n        displayedRegionRightPx,\n      )\n      let start: number\n      let end: number\n      let isLeftEndOfDisplayedRegion: boolean\n      let isRightEndOfDisplayedRegion: boolean\n      let blockOffsetPx: number\n      if (reversed) {\n        start = Math.max(\n          regionStart,\n          regionEnd - (rightPx - displayedRegionLeftPx) * bpPerPx,\n        )\n        end = regionEnd - (leftPx - displayedRegionLeftPx) * bpPerPx\n        isLeftEndOfDisplayedRegion = end === regionEnd\n        isRightEndOfDisplayedRegion = start === regionStart\n        blockOffsetPx = displayedRegionLeftPx + (regionEnd - end) / bpPerPx\n      } else {\n        start = (leftPx - displayedRegionLeftPx) * bpPerPx + regionStart\n        end = Math.min(\n          regionEnd,\n          (rightPx - displayedRegionLeftPx) * bpPerPx + regionStart,\n        )\n        isLeftEndOfDisplayedRegion = start === regionStart\n        isRightEndOfDisplayedRegion = end === regionEnd\n        blockOffsetPx = displayedRegionLeftPx + (start - regionStart) / bpPerPx\n      }\n      const widthPx = (end - start) / bpPerPx\n      const blockData = {\n        assemblyName,\n        refName,\n        start,\n        end,\n        reversed,\n        offsetPx: blockOffsetPx,\n        parentRegion,\n        regionNumber,\n        widthPx,\n        isLeftEndOfDisplayedRegion,\n        isRightEndOfDisplayedRegion,\n        key: '',\n      }\n      blockData.key = `${assembleLocStringFast(blockData)}-${regionNumber}${\n        reversed ? '-reversed' : ''\n      }`\n\n      if (padding && blocks.length === 0 && isLeftEndOfDisplayedRegion) {\n        blocks.push(\n          new InterRegionPaddingBlock({\n            key: `${blockData.key}-beforeFirstRegion`,\n            widthPx: -offsetPx,\n            offsetPx: blockData.offsetPx + offsetPx,\n            variant: 'boundary',\n          }),\n        )\n      }\n\n      if (elision && regionWidthPx < minimumBlockWidth) {\n        blocks.push(new ElidedBlock(blockData))\n      } else {\n        blocks.push(new ContentBlock(blockData))\n      }\n\n      if (padding) {\n        // insert a inter-region padding block if we are crossing a displayed region\n        if (\n          regionWidthPx >= minimumBlockWidth &&\n          blockData.isRightEndOfDisplayedRegion &&\n          regionNumber < displayedRegions.length - 1\n        ) {\n          blocks.push(\n            new InterRegionPaddingBlock({\n              key: `${blockData.key}-rightpad`,\n              widthPx: interRegionPaddingWidth,\n              offsetPx: blockData.offsetPx + blockData.widthPx,\n            }),\n          )\n          displayedRegionLeftPx += interRegionPaddingWidth\n        }\n\n        if (\n          regionNumber === displayedRegions.length - 1 &&\n          blockData.isRightEndOfDisplayedRegion\n        ) {\n          blockOffsetPx = blockData.offsetPx + blockData.widthPx\n          blocks.push(\n            new InterRegionPaddingBlock({\n              key: `${blockData.key}-afterLastRegion`,\n              widthPx: width - blockOffsetPx + offsetPx,\n              offsetPx: blockOffsetPx,\n              variant: 'boundary',\n            }),\n          )\n        }\n      }\n    }\n    displayedRegionLeftPx += (regionEnd - regionStart) / bpPerPx\n  })\n  return blocks\n}\n","import { isStateTreeNode, getSnapshot, Instance } from 'mobx-state-tree'\nimport { assembleLocStringFast } from '.'\nimport {\n  BlockSet,\n  ContentBlock,\n  ElidedBlock,\n  InterRegionPaddingBlock,\n} from './blockTypes'\nimport { Region } from './types'\nimport { Region as RegionModel } from './types/mst'\n\nexport interface Base1DViewModel {\n  offsetPx: number\n  width: number\n  displayedRegions: (Region | Instance<typeof RegionModel>)[]\n  bpPerPx: number\n  minimumBlockWidth: number\n  interRegionPaddingWidth: number\n}\n\nexport default function calculateStaticBlocks(\n  model: Base1DViewModel,\n  padding = true,\n  elision = true,\n  extra = 0,\n  width = 800,\n) {\n  const {\n    offsetPx,\n    displayedRegions,\n    bpPerPx,\n    minimumBlockWidth,\n    interRegionPaddingWidth,\n    width: modelWidth,\n  } = model\n\n  const windowLeftBp = offsetPx * bpPerPx\n  const windowRightBp = (offsetPx + modelWidth) * bpPerPx\n  const blockSizePx = width\n  const blockSizeBp = Math.ceil(blockSizePx * bpPerPx)\n  // for each displayed region\n  let regionBpOffset = 0\n  const blocks = new BlockSet()\n  displayedRegions.forEach((region, regionNumber) => {\n    // find the block numbers of the left and right window sides,\n    // clamp those to the region range, and then make blocks for that range\n    const {\n      assemblyName,\n      refName,\n      start: regionStart,\n      end: regionEnd,\n      reversed,\n    } = region\n    const regionBlockCount = Math.ceil((regionEnd - regionStart) / blockSizeBp)\n    const parentRegion = isStateTreeNode(region) ? getSnapshot(region) : region\n\n    let windowRightBlockNum =\n      Math.floor((windowRightBp - regionBpOffset) / blockSizeBp) + extra\n    if (windowRightBlockNum >= regionBlockCount) {\n      windowRightBlockNum = regionBlockCount - 1\n    }\n\n    let windowLeftBlockNum =\n      Math.floor((windowLeftBp - regionBpOffset) / blockSizeBp) - extra\n    if (windowLeftBlockNum < 0) {\n      windowLeftBlockNum = 0\n    }\n\n    const regionWidthPx = (regionEnd - regionStart) / bpPerPx\n\n    for (\n      let blockNum = windowLeftBlockNum;\n      blockNum <= windowRightBlockNum;\n      blockNum += 1\n    ) {\n      let start: number\n      let end: number\n      let isLeftEndOfDisplayedRegion: boolean\n      let isRightEndOfDisplayedRegion: boolean\n      if (reversed) {\n        start = Math.max(regionStart, regionEnd - (blockNum + 1) * blockSizeBp)\n        end = regionEnd - blockNum * blockSizeBp\n        isLeftEndOfDisplayedRegion = end === regionEnd\n        isRightEndOfDisplayedRegion = start === regionStart\n      } else {\n        start = regionStart + blockNum * blockSizeBp\n        end = Math.min(regionEnd, regionStart + (blockNum + 1) * blockSizeBp)\n        isLeftEndOfDisplayedRegion = start === regionStart\n        isRightEndOfDisplayedRegion = end === regionEnd\n      }\n      const widthPx = (end - start) / bpPerPx\n      const blockData = {\n        assemblyName,\n        refName,\n        start,\n        end,\n        reversed,\n        offsetPx: (regionBpOffset + blockNum * blockSizeBp) / bpPerPx,\n        parentRegion,\n        regionNumber,\n        widthPx,\n        isLeftEndOfDisplayedRegion,\n        isRightEndOfDisplayedRegion,\n        key: '',\n      }\n      blockData.key = `${assembleLocStringFast(blockData)}-${regionNumber}${\n        reversed ? '-reversed' : ''\n      }`\n\n      if (padding && regionNumber === 0 && blockNum === 0) {\n        blocks.push(\n          new InterRegionPaddingBlock({\n            key: `${blockData.key}-beforeFirstRegion`,\n            widthPx: width,\n            offsetPx: blockData.offsetPx - width,\n            variant: 'boundary',\n          }),\n        )\n      }\n\n      if (elision && regionWidthPx < minimumBlockWidth) {\n        blocks.push(new ElidedBlock(blockData))\n      } else {\n        blocks.push(new ContentBlock(blockData))\n      }\n\n      if (padding) {\n        // insert a inter-region padding block if we are crossing a displayed region\n        if (\n          regionWidthPx >= minimumBlockWidth &&\n          blockData.isRightEndOfDisplayedRegion &&\n          regionNumber < displayedRegions.length - 1\n        ) {\n          regionBpOffset += interRegionPaddingWidth * bpPerPx\n          blocks.push(\n            new InterRegionPaddingBlock({\n              key: `${blockData.key}-rightpad`,\n              widthPx: interRegionPaddingWidth,\n              offsetPx: blockData.offsetPx + blockData.widthPx,\n            }),\n          )\n        }\n        if (\n          regionNumber === displayedRegions.length - 1 &&\n          blockData.isRightEndOfDisplayedRegion\n        ) {\n          regionBpOffset += interRegionPaddingWidth * bpPerPx\n          blocks.push(\n            new InterRegionPaddingBlock({\n              key: `${blockData.key}-afterLastRegion`,\n              widthPx: width,\n              offsetPx: blockData.offsetPx + blockData.widthPx,\n              variant: 'boundary',\n            }),\n          )\n        }\n      }\n    }\n    regionBpOffset += regionEnd - regionStart\n  })\n  return blocks\n}\n","// from https://www.w3.org/TR/css-color-4/#named-colors\n\nconst colors: Record<string, string> = {\n  aliceblue: '#F0F8FF',\n  antiquewhite: '#FAEBD7',\n  aqua: '#00FFFF',\n  aquamarine: '#7FFFD4',\n  azure: '#F0FFFF',\n  beige: '#F5F5DC',\n  bisque: '#FFE4C4',\n  black: '#000000',\n  blanchedalmond: '#FFEBCD',\n  blue: '#0000FF',\n  blueviolet: '#8A2BE2',\n  brown: '#A52A2A',\n  burlywood: '#DEB887',\n  cadetblue: '#5F9EA0',\n  chartreuse: '#7FFF00',\n  chocolate: '#D2691E',\n  coral: '#FF7F50',\n  cornflowerblue: '#6495ED',\n  cornsilk: '#FFF8DC',\n  crimson: '#DC143C',\n  cyan: '#00FFFF',\n  darkblue: '#00008B',\n  darkcyan: '#008B8B',\n  darkgoldenrod: '#B8860B',\n  darkgray: '#A9A9A9',\n  darkgreen: '#006400',\n  darkgrey: '#A9A9A9',\n  darkkhaki: '#BDB76B',\n  darkmagenta: '#8B008B',\n  darkolivegreen: '#556B2F',\n  darkorange: '#FF8C00',\n  darkorchid: '#9932CC',\n  darkred: '#8B0000',\n  darksalmon: '#E9967A',\n  darkseagreen: '#8FBC8F',\n  darkslateblue: '#483D8B',\n  darkslategray: '#2F4F4F',\n  darkslategrey: '#2F4F4F',\n  darkturquoise: '#00CED1',\n  darkviolet: '#9400D3',\n  deeppink: '#FF1493',\n  deepskyblue: '#00BFFF',\n  dimgray: '#696969',\n  dimgrey: '#696969',\n  dodgerblue: '#1E90FF',\n  firebrick: '#B22222',\n  floralwhite: '#FFFAF0',\n  forestgreen: '#228B22',\n  fuchsia: '#FF00FF',\n  gainsboro: '#DCDCDC',\n  ghostwhite: '#F8F8FF',\n  gold: '#FFD700',\n  goldenrod: '#DAA520',\n  gray: '#808080',\n  green: '#008000',\n  greenyellow: '#ADFF2F',\n  grey: '#808080',\n  honeydew: '#F0FFF0',\n  hotpink: '#FF69B4',\n  indianred: '#CD5C5C',\n  indigo: '#4B0082',\n  ivory: '#FFFFF0',\n  khaki: '#F0E68C',\n  lavender: '#E6E6FA',\n  lavenderblush: '#FFF0F5',\n  lawngreen: '#7CFC00',\n  lemonchiffon: '#FFFACD',\n  lightblue: '#ADD8E6',\n  lightcoral: '#F08080',\n  lightcyan: '#E0FFFF',\n  lightgoldenrodyellow: '#FAFAD2',\n  lightgray: '#D3D3D3',\n  lightgreen: '#90EE90',\n  lightgrey: '#D3D3D3',\n  lightpink: '#FFB6C1',\n  lightsalmon: '#FFA07A',\n  lightseagreen: '#20B2AA',\n  lightskyblue: '#87CEFA',\n  lightslategray: '#778899',\n  lightslategrey: '#778899',\n  lightsteelblue: '#B0C4DE',\n  lightyellow: '#FFFFE0',\n  lime: '#00FF00',\n  limegreen: '#32CD32',\n  linen: '#FAF0E6',\n  magenta: '#FF00FF',\n  maroon: '#800000',\n  mediumaquamarine: '#66CDAA',\n  mediumblue: '#0000CD',\n  mediumorchid: '#BA55D3',\n  mediumpurple: '#9370DB',\n  mediumseagreen: '#3CB371',\n  mediumslateblue: '#7B68EE',\n  mediumspringgreen: '#00FA9A',\n  mediumturquoise: '#48D1CC',\n  mediumvioletred: '#C71585',\n  midnightblue: '#191970',\n  mintcream: '#F5FFFA',\n  mistyrose: '#FFE4E1',\n  moccasin: '#FFE4B5',\n  navajowhite: '#FFDEAD',\n  navy: '#000080',\n  oldlace: '#FDF5E6',\n  olive: '#808000',\n  olivedrab: '#6B8E23',\n  orange: '#FFA500',\n  orangered: '#FF4500',\n  orchid: '#DA70D6',\n  palegoldenrod: '#EEE8AA',\n  palegreen: '#98FB98',\n  paleturquoise: '#AFEEEE',\n  palevioletred: '#DB7093',\n  papayawhip: '#FFEFD5',\n  peachpuff: '#FFDAB9',\n  peru: '#CD853F',\n  pink: '#FFC0CB',\n  plum: '#DDA0DD',\n  powderblue: '#B0E0E6',\n  purple: '#800080',\n  rebeccapurple: '#663399',\n  red: '#FF0000',\n  rosybrown: '#BC8F8F',\n  royalblue: '#4169E1',\n  saddlebrown: '#8B4513',\n  salmon: '#FA8072',\n  sandybrown: '#F4A460',\n  seagreen: '#2E8B57',\n  seashell: '#FFF5EE',\n  sienna: '#A0522D',\n  silver: '#C0C0C0',\n  skyblue: '#87CEEB',\n  slateblue: '#6A5ACD',\n  slategray: '#708090',\n  slategrey: '#708090',\n  snow: '#FFFAFA',\n  springgreen: '#00FF7F',\n  steelblue: '#4682B4',\n  tan: '#D2B48C',\n  teal: '#008080',\n  thistle: '#D8BFD8',\n  tomato: '#FF6347',\n  turquoise: '#40E0D0',\n  violet: '#EE82EE',\n  wheat: '#F5DEB3',\n  white: '#FFFFFF',\n  whitesmoke: '#F5F5F5',\n  yellow: '#FFFF00',\n  yellowgreen: '#9ACD32',\n}\n\nexport function namedColorToHex(name: string): string | undefined {\n  return colors[name]\n}\n\nexport function isNamedColor(name: string): boolean {\n  return !!colors[name]\n}\n","import {\n  darken,\n  emphasize as muiEmphasize,\n  getContrastRatio,\n  getLuminance as muiGetLuminance,\n  lighten,\n} from '@mui/material/styles'\nimport { namedColorToHex } from './cssColorsLevel4'\n\n/**\n * Algorithmically pick a contrasting text color that will\n * be visible on top of the given background color. Either\n * black or white.\n *\n * @param color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(),\n *  hsl(), hsla(), or named color\n * @returns 'black' or 'white'\n */\nexport function contrastingTextColor(color: string): string {\n  const luminance = getLuminance(color)\n  return luminance > 0.5 ? 'black' : 'white'\n}\n\n/**\n * The relative brightness of any point in a color space,\n * normalized to 0 for darkest black and 1 for lightest white.\n * Uses MUI's `getLuminance`, but adds support for named colors\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n *\n * @param color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(),\n *  hsl(), hsla(), or named color\n * @returns The relative brightness of the color in the range 0 - 1\n */\nfunction getLuminance(color: string): number {\n  const convertedColor = namedColorToHex(color)\n  return muiGetLuminance(convertedColor || color)\n}\n\n/**\n * Darken or lighten a color, depending on its luminance.\n * Light colors are darkened, dark colors are lightened.\n * Uses MUI's `emphasize`, but adds support for named colors\n *\n * @param color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(),\n * hsl(), hsla(), or named color\n * @param coefficient - multiplier in the range 0 - 1, defaults to 0.15\n * @returns A CSS color string. Hex input values are returned as rgb\n */\nexport function emphasize(color: string, coefficient = 0.15): string {\n  const convertedColor = namedColorToHex(color)\n  return muiEmphasize(convertedColor || color, coefficient)\n}\n\nexport function makeContrasting(\n  foreground: string,\n  background = 'white',\n  minContrastRatio = 3,\n) {\n  let convertedForeground = namedColorToHex(foreground) || foreground\n  const convertedBackground = namedColorToHex(background) || background\n  const backgroundLuminance = getLuminance(convertedBackground)\n  let contrastRatio = getContrastRatio(convertedForeground, convertedBackground)\n  const originalColor = convertedForeground\n  let coefficient = 0.05\n  while (contrastRatio < minContrastRatio) {\n    convertedForeground =\n      backgroundLuminance > 0.5\n        ? darken(originalColor, coefficient)\n        : lighten(originalColor, coefficient)\n    coefficient += 0.05\n    contrastRatio = getContrastRatio(convertedForeground, convertedBackground)\n  }\n  return convertedForeground\n}\n\nexport { isNamedColor, namedColorToHex } from './cssColorsLevel4'\n","type Hasher<T> = (input: T) => string\n\n// from https://github.com/seriousManual/dedupe/blob/master/LICENSE\nexport function dedupe<T>(list: T[], hasher: Hasher<T> = JSON.stringify) {\n  const clone: T[] = []\n  const lookup = new Set<string>()\n\n  for (let i = 0; i < list.length; i++) {\n    const entry = list[i]\n    const hashed = hasher(entry)\n\n    if (!lookup.has(hashed)) {\n      clone.push(entry)\n      lookup.add(hashed)\n    }\n  }\n\n  return clone\n}\n","import { hashCode } from './'\n\n// generates a short \"id fingerprint\" from the config passed to the base\n// feature adapter by recursively enumerating props, but if config is too big\n// does not process entire config (FromConfigAdapter for example can be large)\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport default function idMaker(args: any, id = '') {\n  const keys = Object.keys(args)\n  for (const key of keys) {\n    if (id.length > 5000) {\n      break\n    }\n    id +=\n      typeof args[key] === 'object' && args[key]\n        ? idMaker(args[key], id)\n        : `${key}-${args[key]};`\n  }\n  return hashCode(id)\n}\n","import { HttpRangeFetcher } from 'http-range-fetcher'\nimport { Buffer } from 'buffer'\nimport { RemoteFile, PolyfilledResponse } from 'generic-filehandle'\n\ntype BinaryRangeFetch = (\n  url: string,\n  start: number,\n  end: number,\n  options?: { headers?: HeadersInit; signal?: AbortSignal },\n) => Promise<BinaryRangeResponse>\n\nexport interface BinaryRangeResponse {\n  headers: Record<string, string>\n  requestDate: Date\n  responseDate: Date\n  buffer: Buffer\n}\n\nconst fetchers: Record<string, BinaryRangeFetch> = {}\n\nfunction binaryRangeFetch(\n  url: string,\n  start: number,\n  end: number,\n  options: { headers?: HeadersInit; signal?: AbortSignal } = {},\n): Promise<BinaryRangeResponse> {\n  const fetcher = fetchers[url]\n  if (!fetcher) {\n    throw new Error(`fetch not registered for ${url}`)\n  }\n  return fetcher(url, start, end, options)\n}\n\nconst globalRangeCache = new HttpRangeFetcher({\n  fetch: binaryRangeFetch,\n  size: 500 * 1024 ** 2, // 500MiB\n  chunkSize: 128 * 124, // 128KiB\n  maxFetchSize: 100 * 1024 ** 2, // 100MiB\n  minimumTTL: 24 * 60 * 60 * 1000, // 1 day\n})\n\nexport function clearCache() {\n  globalRangeCache.reset()\n}\n\nexport class RemoteFileWithRangeCache extends RemoteFile {\n  public async fetch(\n    url: RequestInfo,\n    init?: RequestInit,\n  ): Promise<PolyfilledResponse> {\n    if (!fetchers[String(url)]) {\n      fetchers[String(url)] = this.fetchBinaryRange.bind(this)\n    }\n    // if it is a range request, route it through the range cache\n    const requestHeaders = init && init.headers\n    let range\n    if (requestHeaders) {\n      if (requestHeaders instanceof Headers) {\n        range = requestHeaders.get('range')\n      } else if (Array.isArray(requestHeaders)) {\n        ;[, range] = requestHeaders.find(([key]) => key === 'range') || [\n          undefined,\n          undefined,\n        ]\n      } else {\n        range = requestHeaders.range\n      }\n    }\n    if (range) {\n      const rangeParse = /bytes=(\\d+)-(\\d+)/.exec(range)\n      if (rangeParse) {\n        const [, start, end] = rangeParse\n        const s = Number.parseInt(start, 10)\n        const e = Number.parseInt(end, 10)\n        const response = (await globalRangeCache.getRange(url, s, e - s + 1, {\n          signal: init && init.signal,\n        })) as BinaryRangeResponse\n        const { headers } = response\n        return new Response(response.buffer, { status: 206, headers })\n      }\n    }\n    return super.fetch(url, init)\n  }\n\n  public async fetchBinaryRange(\n    url: string,\n    start: number,\n    end: number,\n    options: { headers?: HeadersInit; signal?: AbortSignal } = {},\n  ): Promise<BinaryRangeResponse> {\n    const requestDate = new Date()\n    const requestHeaders = {\n      ...options.headers,\n      range: `bytes=${start}-${end}`,\n    }\n    const res = await super.fetch(url, {\n      ...options,\n      headers: requestHeaders,\n    })\n    const responseDate = new Date()\n    if (res.status !== 206) {\n      const errorMessage = `HTTP ${res.status} (${res.statusText}) when fetching ${url} bytes ${start}-${end}`\n      const hint = ' (should be 206 for range requests)'\n      throw new Error(`${errorMessage}${res.status === 200 ? hint : ''}`)\n    }\n\n    // translate the Headers object into a regular key -> value object.\n    // will miss duplicate headers of course\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const headers: Record<string, any> = {}\n    for (const [k, v] of res.headers.entries()) {\n      headers[k] = v\n    }\n\n    // return the response headers, and the data buffer\n    const arrayBuffer = await res.arrayBuffer()\n    return {\n      headers,\n      requestDate,\n      responseDate,\n      buffer: Buffer.from(arrayBuffer),\n    }\n  }\n}\n","import {\n  BlobFile,\n  GenericFilehandle,\n  LocalFile,\n  Fetcher,\n} from 'generic-filehandle'\nimport isNode from 'detect-node'\n\n// locals\nimport { RemoteFileWithRangeCache } from './RemoteFileWithRangeCache'\nimport {\n  FileLocation,\n  LocalPathLocation,\n  BlobLocation,\n  isRootModelWithInternetAccounts,\n  isUriLocation,\n  AuthNeededError,\n  UriLocation,\n} from '../types'\nimport { BaseInternetAccountModel } from '../../pluggableElementTypes/models'\nimport { getBlob } from '../tracks'\nimport PluginManager from '../../PluginManager'\nimport { isElectron } from '../'\n\nfunction isLocalPathLocation(\n  location: FileLocation,\n): location is LocalPathLocation {\n  return 'localPath' in location\n}\n\nfunction isBlobLocation(location: FileLocation): location is BlobLocation {\n  return 'blobId' in location\n}\n\n/** if a UriLocation has a baseUri, resolves its uri with respect to that base */\nexport function resolveUriLocation(location: UriLocation) {\n  return location.baseUri\n    ? { ...location, uri: new URL(location.uri, location.baseUri).href }\n    : location\n}\n\nexport function openLocation(\n  location: FileLocation,\n  pluginManager?: PluginManager,\n): GenericFilehandle {\n  if (!location) {\n    throw new Error('must provide a location to openLocation')\n  }\n  if (isLocalPathLocation(location)) {\n    if (!location.localPath) {\n      throw new Error('No local path provided')\n    }\n\n    if (isNode || isElectron) {\n      return new LocalFile(location.localPath)\n    } else {\n      throw new Error(\"can't use local files in the browser\")\n    }\n  }\n  if (isBlobLocation(location)) {\n    // special case where blob is not directly stored on the model, use a getter\n    const blob = getBlob(location.blobId)\n    if (!blob) {\n      throw new Error(\n        `file (\"${location.name}\") was opened locally from a previous session. To restore it, go to track settings and reopen the file`,\n      )\n    }\n    return new BlobFile(blob)\n  }\n  if (isUriLocation(location)) {\n    // Check for empty string\n    if (!location.uri) {\n      throw new Error('No URI provided')\n    }\n\n    // Resolve any relative URLs to absolute URLs\n    const absoluteLocation = resolveUriLocation(location)\n\n    // If there is a plugin manager, we can try internet accounts\n    if (pluginManager) {\n      const internetAccount = getInternetAccount(location, pluginManager)\n      // If an internetAccount was found, use it to open the location\n      if (internetAccount) {\n        return internetAccount.openLocation(absoluteLocation)\n      }\n    }\n    // Otherwise fall back on usual open\n    return new RemoteFileWithRangeCache(absoluteLocation.uri, {\n      fetch: checkAuthNeededFetch,\n    })\n  }\n  throw new Error('invalid fileLocation')\n}\n\nexport function getFetcher(\n  location: FileLocation,\n  pluginManager?: PluginManager,\n): Fetcher {\n  if (!isUriLocation(location)) {\n    throw new Error(`Not a valid UriLocation: ${JSON.stringify(location)}`)\n  }\n  if (pluginManager) {\n    const internetAccount = getInternetAccount(location, pluginManager)\n    if (internetAccount) {\n      return internetAccount.getFetcher(location)\n    }\n  }\n  return checkAuthNeededFetch\n}\n\nfunction getInternetAccount(\n  location: UriLocation,\n  pluginManager: PluginManager,\n): BaseInternetAccountModel | undefined {\n  const { rootModel } = pluginManager\n  // If there is an appRootModel, use it to find the internetAccount\n  if (rootModel && isRootModelWithInternetAccounts(rootModel)) {\n    return rootModel.findAppropriateInternetAccount(location)\n  }\n  // If there is no appRootModel, but there is pre-auth, create a temporary\n  // internetAccount. This is typical in a worker.\n  if (location.internetAccountPreAuthorization) {\n    if (!location.internetAccountPreAuthorization.authInfo.token) {\n      throw new Error(\n        'Failed to obtain token from internet account. Try reloading the page',\n      )\n    }\n    const internetAccountType = pluginManager.getInternetAccountType(\n      location.internetAccountPreAuthorization.internetAccountType,\n    )\n    return internetAccountType.stateModel.create({\n      type: location.internetAccountPreAuthorization.internetAccountType,\n      configuration:\n        location.internetAccountPreAuthorization.authInfo.configuration,\n    })\n  }\n  return undefined\n}\n\n// This fetch throws a special error if the response is \"401\" and includes a\n// \"WWW-Authenticate: Basic\" header. This is so downstream code can retry if\n// needed with HTTP Basic authentication included\nasync function checkAuthNeededFetch(url: RequestInfo, opts?: RequestInit) {\n  const response = await fetch(url, opts)\n  if (\n    response.status === 401 &&\n    response.headers.get('WWW-Authenticate')?.includes('Basic')\n  ) {\n    throw new AuthNeededError(\n      'Accessing HTTPBasic resource without authentication',\n      url.toString(),\n    )\n  }\n  return response\n}\n\nexport { RemoteFileWithRangeCache } from './RemoteFileWithRangeCache'\n","import jexl from 'jexl'\nimport { Feature } from './simpleFeature'\n\ntype JexlWithAddFunction = typeof jexl & {\n  addFunction(name: string, func: Function): void\n}\ntype JexlNonBuildable = Omit<typeof jexl, 'Jexl'>\n\nexport default function (/* config?: any*/): JexlNonBuildable {\n  const j = new jexl.Jexl() as JexlWithAddFunction\n  // someday will make sure all of configs callbacks are added in, including\n  // ones passed in\n\n  // below are core functions\n  j.addFunction('get', (feature: Feature, data: string) => feature.get(data))\n  j.addFunction('parent', (feature: Feature) => feature.parent())\n\n  j.addFunction('id', (feature: Feature) => feature.id())\n\n  // let user cast a jexl type into a javascript type\n  j.addFunction('cast', (arg: unknown) => arg)\n\n  // logging\n  j.addFunction('log', (thing: unknown) => {\n    console.log(thing) // eslint-disable-line no-console\n    return thing\n  })\n\n  // math\n  // addfunction added in jexl 2.3 but types/jexl still on 2.2\n  j.addFunction('max', Math.max)\n  j.addFunction('min', Math.min)\n  j.addFunction('sqrt', Math.sqrt)\n  j.addFunction('ceil', Math.ceil)\n  j.addFunction('floor', Math.floor)\n  j.addFunction('round', Math.round)\n  j.addFunction('abs', Math.abs)\n  j.addFunction('log10', Math.log10)\n  j.addFunction('parseInt', Number.parseInt)\n  j.addFunction('parseFloat', Number.parseFloat)\n\n  // string\n  j.addFunction('split', (s: string, char: string) => s.split(char))\n  j.addFunction('charAt', (s: string, index: number) => s.charAt(index))\n  j.addFunction('charCodeAt', (s: string, index: number) => s.charCodeAt(index))\n  j.addFunction('codePointAt', (s: string, pos: number) => s.codePointAt(pos))\n  j.addFunction('startsWith', (s: string, search: string, len?: number) =>\n    s.startsWith(search, len),\n  )\n  j.addFunction('endsWith', (s: string, search: string, len?: number) =>\n    s.endsWith(search, len),\n  )\n  j.addFunction('padEnd', (s: string, len: number, pad?: string) =>\n    s.padEnd(len, pad),\n  )\n  j.addFunction('padStart', (s: string, len: number, fill?: string) =>\n    s.padStart(len, fill),\n  )\n  j.addFunction('repeat', (s: string, count: number) => s.repeat(count))\n  j.addFunction('replace', (s: string, match: string, sub: string) =>\n    s.replace(match, sub),\n  )\n  j.addFunction('replaceAll', (s: string, match: string, sub: string) =>\n    s.replaceAll(match, sub),\n  )\n  j.addFunction('slice', (s: string, start: number, end?: number) =>\n    s.slice(start, end),\n  )\n  j.addFunction('startsWith', (s: string, search: string, pos?: number) =>\n    s.startsWith(search, pos),\n  )\n  j.addFunction('substring', (s: string, start: number, end?: number) =>\n    // eslint-disable-next-line unicorn/prefer-string-slice\n    s.substring(start, end),\n  )\n  j.addFunction('toLowerCase', (s: string) => s.toLowerCase())\n  j.addFunction('toUpperCase', (s: string) => s.toUpperCase())\n  j.addFunction('trim', (s: string) => s.trim())\n  j.addFunction('trimEnd', (s: string) => s.trimEnd())\n  j.addFunction('trimStart', (s: string) => s.trimStart())\n\n  j.addFunction('getTag', (feature: Feature, s: string) => {\n    const tags = feature.get('tags')\n    return tags ? tags[s] : feature.get(s)\n  })\n\n  j.addBinaryOp('&', 15, (a: number, b: number) => a & b)\n\n  return j\n}\n","import createJexlInstance from './jexl'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst compilationCache: Record<string, any> = {}\n\n// revert function strings back to main, create a different file for jexlStrings.ts\n// pass the jexl property of the pluginManager as a param\n\n/**\n * compile a jexlExpression to a string\n *\n * @param str - string of code like `jexl:...`\n * @param options -\n */\nexport function stringToJexlExpression(\n  str: string,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  jexl?: any,\n) {\n  const cacheKey = `nosig|${str}`\n  if (!compilationCache[cacheKey]) {\n    const match = str.startsWith('jexl:')\n    if (!match) {\n      throw new Error('string does not appear to be in jexl format')\n    }\n    const code = str.split('jexl:')[1]\n    const compiled = jexl\n      ? jexl.compile(`${code}`)\n      : createJexlInstance().compile(`${code}`)\n    compilationCache[cacheKey] = compiled\n  }\n\n  return compilationCache[cacheKey]\n}\n","import {\n  RectTuple,\n  SerializedLayout,\n  Rectangle,\n  BaseLayout,\n} from './BaseLayout'\n\n/**\n * Rectangle-layout manager that lays out rectangles using bitmaps at\n * resolution that, for efficiency, may be somewhat lower than that of\n * the coordinate system for the rectangles being laid out.  `pitchX`\n * and `pitchY` are the ratios of input scale resolution to internal\n * bitmap resolution.\n */\n\n// minimum excess size of the array at which we garbage collect\nconst minSizeToBotherWith = 10000\nconst maxFeaturePitchWidth = 20000\n\nfunction segmentsIntersect(\n  x1: number,\n  x2: number,\n  y1: number,\n  y2: number,\n): boolean {\n  return x2 >= y1 && y2 >= x1\n}\n\ntype Bit<T> = Record<string, T> | string | undefined\n\ninterface RowState<T> {\n  min: number\n  max: number\n  offset: number\n  bits: Bit<T>[]\n}\n// a single row in the layout\nclass LayoutRow<T> {\n  private padding = 1\n\n  private allFilled?: Record<string, T> | string\n\n  private widthLimit = 1_000_000\n\n  private rowState?: RowState<T>\n\n  // this.rowState.bits is the array of items in the layout row, indexed by (x - this.offset)\n  // this.rowState.min is the leftmost edge of all the rectangles we have in the layout\n  // this.rowState.max is the rightmost edge of all the rectangles we have in the layout\n  // this.rowState.offset is the offset of the bits array relative to the genomic coordinates\n  //      (modified by pitchX, but we don't know that in this class)\n\n  setAllFilled(data: Record<string, T> | string): void {\n    this.allFilled = data\n  }\n\n  getItemAt(x: number): Record<string, T> | string | undefined {\n    if (this.allFilled) {\n      return this.allFilled\n    }\n    if (\n      this.rowState?.min === undefined ||\n      x < this.rowState.min ||\n      x >= this.rowState.max\n    ) {\n      return undefined\n    }\n    return this.rowState.bits[x - this.rowState.offset]\n  }\n\n  isRangeClear(left: number, right: number) {\n    if (this.allFilled) {\n      return false\n    }\n\n    if (\n      this.rowState === undefined ||\n      right <= this.rowState.min ||\n      left >= this.rowState.max\n    ) {\n      return true\n    }\n    const { min, max, offset, bits } = this.rowState\n\n    const maxX = Math.min(max, right) - offset\n    let flag = true\n    for (let x = Math.max(min, left) - offset; x < maxX && flag; x++) {\n      flag = bits[x] === undefined\n    }\n\n    return flag\n  }\n\n  // NOTE: this.rowState.min, this.rowState.max, and this.rowState.offset are\n  // interbase coordinates\n  initialize(left: number, right: number): RowState<T> {\n    const rectWidth = right - left\n    return {\n      offset: left - rectWidth,\n      min: left,\n      max: right,\n      bits: Array.from({ length: 3 * rectWidth }),\n    }\n  }\n\n  addRect(rect: Rectangle<T>, data: Record<string, T> | string): void {\n    const left = rect.l\n    const right = rect.r + this.padding // only padding on the right\n    if (!this.rowState) {\n      this.rowState = this.initialize(left, right)\n    }\n\n    // or check if we need to expand to the left and/or to the right\n    let oLeft = left - this.rowState.offset\n    let oRight = right - this.rowState.offset\n    const currLength = this.rowState.bits.length\n\n    // expand rightward if necessary\n    if (oRight >= this.rowState.bits.length) {\n      const additionalLength = oRight + 1\n      if (this.rowState.bits.length + additionalLength > this.widthLimit) {\n        console.warn(\n          'Layout width limit exceeded, discarding old layout. Please be more careful about discarding unused blocks.',\n        )\n        this.rowState = this.initialize(left, right)\n      } else if (additionalLength > 0) {\n        this.rowState.bits = [\n          ...this.rowState.bits,\n          ...Array.from<Bit<T>>({ length: additionalLength }),\n        ]\n      }\n    }\n\n    // expand leftward if necessary\n    if (left < this.rowState.offset) {\n      // use math.min to avoid negative lengths\n      const additionalLength = Math.min(\n        currLength - oLeft,\n        this.rowState.offset,\n      )\n      if (this.rowState.bits.length + additionalLength > this.widthLimit) {\n        console.warn(\n          'Layout width limit exceeded, discarding old layout. Please be more careful about discarding unused blocks.',\n        )\n\n        this.rowState = this.initialize(left, right)\n      } else {\n        this.rowState.bits = [\n          ...Array.from<Bit<T>>({ length: additionalLength }),\n          ...this.rowState.bits,\n        ]\n        this.rowState.offset -= additionalLength\n      }\n    }\n    oRight = right - this.rowState.offset\n    oLeft = left - this.rowState.offset\n    const w = oRight - oLeft\n\n    if (w > maxFeaturePitchWidth) {\n      console.warn(\n        `Layout X pitch set too low, feature spans ${w} bits in a single row.`,\n        rect,\n        data,\n      )\n    }\n\n    for (let x = oLeft; x < oRight; x += 1) {\n      this.rowState.bits[x] = data\n    }\n\n    if (left < this.rowState.min) {\n      this.rowState.min = left\n    }\n    if (right > this.rowState.max) {\n      this.rowState.max = right\n    }\n  }\n\n  /**\n   *  Given a range of interbase coordinates, deletes all data dealing with that range\n   */\n  discardRange(left: number, right: number): void {\n    if (this.allFilled) {\n      return\n    } // allFilled is irrevocable currently\n\n    // if we have no data, do nothing\n    if (!this.rowState) {\n      return\n    }\n\n    // if doesn't overlap at all, do nothing\n    if (right <= this.rowState.min || left >= this.rowState.max) {\n      return\n    }\n\n    // if completely encloses range, discard everything\n    if (left <= this.rowState.min && right >= this.rowState.max) {\n      this.rowState = undefined\n      return\n    }\n\n    // if overlaps left edge, adjust the min\n    if (right > this.rowState.min && left <= this.rowState.min) {\n      this.rowState.min = right\n    }\n\n    // if overlaps right edge, adjust the max\n    if (left < this.rowState.max && right >= this.rowState.max) {\n      this.rowState.max = left\n    }\n\n    // now trim the left, right, or both sides of the array\n    if (\n      this.rowState.offset < this.rowState.min - minSizeToBotherWith &&\n      this.rowState.bits.length >\n        this.rowState.max + minSizeToBotherWith - this.rowState.offset\n    ) {\n      // trim both sides\n      const leftTrimAmount = this.rowState.min - this.rowState.offset\n      const rightTrimAmount =\n        this.rowState.bits.length -\n        1 -\n        (this.rowState.max - this.rowState.offset)\n      // if (rightTrimAmount <= 0) debugger\n      // if (leftTrimAmount <= 0) debugger\n      // this.log(`trim both sides, ${leftTrimAmount} from left, ${rightTrimAmount} from right`)\n      this.rowState.bits = this.rowState.bits.slice(\n        leftTrimAmount,\n        this.rowState.bits.length - rightTrimAmount,\n      )\n      this.rowState.offset += leftTrimAmount\n      // if (this.rowState.offset > this.rowState.min) debugger\n      // if (this.rowState.bits.length <= this.rowState.max - this.rowState.offset) debugger\n    } else if (this.rowState.offset < this.rowState.min - minSizeToBotherWith) {\n      // trim left side\n      const desiredOffset =\n        this.rowState.min - Math.floor(minSizeToBotherWith / 2)\n      const trimAmount = desiredOffset - this.rowState.offset\n      // this.log(`trim left side by ${trimAmount}`)\n      this.rowState.bits.splice(0, trimAmount)\n      this.rowState.offset += trimAmount\n      // if (this.rowState.offset > this.rowState.min) debugger\n      // if (this.rowState.bits.length <= this.rowState.max - this.rowState.offset) debugger\n    } else if (\n      this.rowState.bits.length >\n      this.rowState.max - this.rowState.offset + minSizeToBotherWith\n    ) {\n      // trim right side\n      const desiredLength =\n        this.rowState.max -\n        this.rowState.offset +\n        1 +\n        Math.floor(minSizeToBotherWith / 2)\n      // this.log(`trim right side by ${this.rowState.bits.length-desiredLength}`)\n      // if (desiredLength > this.rowState.bits.length) debugger\n      this.rowState.bits.length = desiredLength\n      // if (this.rowState.offset > this.rowState.min) debugger\n      // if (this.rowState.bits.length <= this.rowState.max - this.rowState.offset) debugger\n    }\n\n    // if (this.rowState.offset > this.rowState.min) debugger\n    // if (this.rowState.bits.length <= this.rowState.max - this.rowState.offset) debugger\n\n    // if range now enclosed in the new bounds, loop through and clear the bits\n    const oLeft = Math.max(this.rowState.min, left) - this.rowState.offset\n    // if (oLeft < 0) debugger\n    // if (oLeft >= this.rowState.bits.length) debugger\n    // if (oRight < 0) debugger\n    // if (oRight >= this.rowState.bits.length) debugger\n\n    const oRight = Math.min(right, this.rowState.max) - this.rowState.offset\n    for (let x = oLeft; x >= 0 && x < oRight; x += 1) {\n      this.rowState.bits[x] = undefined\n    }\n  }\n}\n\nexport default class GranularRectLayout<T> implements BaseLayout<T> {\n  private pitchX: number\n\n  private pitchY: number\n\n  private hardRowLimit: number\n\n  private bitmap: LayoutRow<T>[]\n\n  private rectangles: Map<string, Rectangle<T>>\n\n  public maxHeightReached: boolean\n\n  private maxHeight: number\n\n  private displayMode: string\n\n  private pTotalHeight: number\n\n  /**\n   * pitchX - layout grid pitch in the X direction\n   * pitchY - layout grid pitch in the Y direction\n   * maxHeight - maximum layout height, default Infinity (no max)\n   */\n  constructor({\n    pitchX = 10,\n    pitchY = 10,\n    maxHeight = 10000,\n    hardRowLimit = 10000,\n    displayMode = 'normal',\n  }: {\n    pitchX?: number\n    pitchY?: number\n    maxHeight?: number\n    displayMode?: string\n    hardRowLimit?: number\n  } = {}) {\n    this.pitchX = pitchX\n    this.pitchY = pitchY\n    this.hardRowLimit = hardRowLimit\n    this.maxHeightReached = false\n    this.displayMode = displayMode\n\n    // reduce the pitchY to try and pack the features tighter\n    if (this.displayMode === 'compact') {\n      this.pitchY = Math.round(this.pitchY / 4) || 1\n      this.pitchX = Math.round(this.pitchX / 4) || 1\n    }\n\n    this.bitmap = []\n    this.rectangles = new Map()\n    this.maxHeight = Math.ceil(maxHeight / this.pitchY)\n    this.pTotalHeight = 0 // total height, in units of bitmap squares (px/pitchY)\n  }\n\n  /**\n   * @returns top position for the rect, or Null if laying\n   *  out the rect would exceed maxHeight\n   */\n  addRect(\n    id: string,\n    left: number,\n    right: number,\n    height: number,\n    data?: T,\n  ): number | null {\n    // if we have already laid it out, return its layout\n    const storedRec = this.rectangles.get(id)\n    if (storedRec) {\n      if (storedRec.top === null) {\n        return null\n      }\n\n      // add it to the bitmap again, since that bitmap range may have been\n      // discarded\n      this.addRectToBitmap(storedRec)\n      return storedRec.top * this.pitchY\n    }\n\n    const pLeft = Math.floor(left / this.pitchX)\n    const pRight = Math.floor(right / this.pitchX)\n    const pHeight = Math.ceil(height / this.pitchY)\n\n    const rectangle: Rectangle<T> = {\n      id,\n      l: pLeft,\n      r: pRight,\n      top: null,\n      h: pHeight,\n      originalHeight: height,\n      data,\n    }\n\n    const maxTop = this.maxHeight - pHeight\n    let top = 0\n    if (this.displayMode !== 'collapse') {\n      for (; top <= maxTop; top += 1) {\n        if (!this.collides(rectangle, top)) {\n          break\n        }\n      }\n\n      if (top > maxTop) {\n        rectangle.top = null\n        this.rectangles.set(id, rectangle)\n        this.maxHeightReached = true\n        return null\n      }\n    }\n    rectangle.top = top\n    this.addRectToBitmap(rectangle)\n    this.rectangles.set(id, rectangle)\n    this.pTotalHeight = Math.max(this.pTotalHeight || 0, top + pHeight)\n    return top * this.pitchY\n  }\n\n  collides(rect: Rectangle<T>, top: number) {\n    const { bitmap } = this\n\n    const maxY = top + rect.h\n    for (let y = top; y < maxY; y += 1) {\n      const row = bitmap[y]\n      if (row !== undefined && !row.isRangeClear(rect.l, rect.r)) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  /**\n   * make a subarray if it does not exist\n   */\n  private autovivifyRow(bitmap: LayoutRow<T>[], y: number) {\n    let row = bitmap[y]\n    if (!row) {\n      if (y > this.hardRowLimit) {\n        throw new Error(\n          `layout hard limit (${\n            this.hardRowLimit * this.pitchY\n          }px) exceeded, aborting layout`,\n        )\n      }\n      row = new LayoutRow()\n      bitmap[y] = row\n    }\n    return row\n  }\n\n  addRectToBitmap(rect: Rectangle<T>) {\n    if (rect.top === null) {\n      return\n    }\n\n    const data = rect.id\n    const yEnd = rect.top + rect.h\n    if (rect.r - rect.l > maxFeaturePitchWidth) {\n      // the rect is very big in relation to the view size, just pretend, for\n      // the purposes of layout, that it extends infinitely.  this will cause\n      // weird layout if a user scrolls manually for a very, very long time\n      // along the genome at the same zoom level.  but most users will not do\n      // that.  hopefully.\n      for (let y = rect.top; y < yEnd; y += 1) {\n        this.autovivifyRow(this.bitmap, y).setAllFilled(data)\n      }\n    } else {\n      for (let y = rect.top; y < yEnd; y += 1) {\n        this.autovivifyRow(this.bitmap, y).addRect(rect, data)\n      }\n    }\n  }\n\n  /**\n   *  Given a range of X coordinates, deletes all data dealing with\n   *  the features.\n   */\n  discardRange(left: number, right: number) {\n    // console.log( 'discard', left, right );\n    const pLeft = Math.floor(left / this.pitchX)\n    const pRight = Math.floor(right / this.pitchX)\n    const { bitmap } = this\n    for (let y = 0; y < bitmap.length; y += 1) {\n      const row = bitmap[y]\n      if (row) {\n        row.discardRange(pLeft, pRight)\n      }\n    }\n  }\n\n  hasSeen(id: string) {\n    return this.rectangles.has(id)\n  }\n\n  getByCoord(x: number, y: number) {\n    const pY = Math.floor(y / this.pitchY)\n    const row = this.bitmap[pY]\n    if (!row) {\n      return undefined\n    }\n    const pX = Math.floor(x / this.pitchX)\n    return row.getItemAt(pX)\n  }\n\n  getByID(id: string) {\n    const r = this.rectangles.get(id)\n    if (r) {\n      const t = (r.top as number) * this.pitchY\n      return [\n        r.l * this.pitchX,\n        t,\n        r.r * this.pitchX,\n        t + r.originalHeight,\n      ] as RectTuple\n    }\n\n    return undefined\n  }\n\n  getDataByID(id: string) {\n    return this.rectangles.get(id)?.data\n  }\n\n  cleanup() {}\n\n  getTotalHeight() {\n    return this.pTotalHeight * this.pitchY\n  }\n\n  get totalHeight() {\n    return this.getTotalHeight()\n  }\n\n  getRectangles(): Map<string, RectTuple> {\n    return new Map(\n      [...this.rectangles.entries()].map(([id, rect]) => {\n        const { l, r, originalHeight, top } = rect\n        const t = (top || 0) * this.pitchY\n        const b = t + originalHeight\n        return [id, [l * this.pitchX, t, r * this.pitchX, b]] // left, top, right, bottom\n      }),\n    )\n  }\n\n  serializeRegion(region: { start: number; end: number }): SerializedLayout {\n    const regionRectangles: { [key: string]: RectTuple } = {}\n    let maxHeightReached = false\n    for (const [id, rect] of this.rectangles.entries()) {\n      const { l, r, originalHeight, top } = rect\n      if (rect.top === null) {\n        maxHeightReached = true\n      } else {\n        const t = (top || 0) * this.pitchY\n        const b = t + originalHeight\n        const y1 = l * this.pitchX\n        const y2 = r * this.pitchX\n        const x1 = region.start\n        const x2 = region.end\n        // add +/- pitchX to avoid resolution causing errors\n        if (segmentsIntersect(x1, x2, y1 - this.pitchX, y2 + this.pitchX)) {\n          regionRectangles[id] = [y1, t, y2, b]\n        }\n      }\n    }\n    return {\n      rectangles: regionRectangles,\n      containsNoTransferables: true,\n      totalHeight: this.getTotalHeight(),\n      maxHeightReached,\n    }\n  }\n\n  toJSON(): SerializedLayout {\n    const rectangles = Object.fromEntries(this.getRectangles())\n    return {\n      rectangles,\n      containsNoTransferables: true,\n      totalHeight: this.getTotalHeight(),\n      maxHeightReached: this.maxHeightReached,\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { BaseLayout, SerializedLayout } from './BaseLayout'\n\nexport default class MultiLayout<SUB_LAYOUT_CLASS extends BaseLayout<T>, T> {\n  subLayouts: Map<string, SUB_LAYOUT_CLASS> = new Map()\n\n  /**\n   * layout class that just keeps a number of named sub-layouts.\n   * basically just a fancier\n   * `{ layout1: new GranularRectLayout(), layout2: new GranularRectLayout() ...}`\n   */\n  constructor(\n    public SubLayoutClass: new (...args: any[]) => SUB_LAYOUT_CLASS,\n    public subLayoutConstructorArgs: Record<string, any> = {},\n  ) {}\n\n  getDataByID(id: string): unknown {\n    for (const layout of this.subLayouts.values()) {\n      // @ts-expect-error\n      const r = layout.getDataByID(id)\n      if (r) {\n        return r\n      }\n    }\n    return undefined\n  }\n\n  getSublayout(layoutName: string): SUB_LAYOUT_CLASS {\n    let subLayout = this.subLayouts.get(layoutName)\n    if (subLayout === undefined) {\n      subLayout = new this.SubLayoutClass(this.subLayoutConstructorArgs)\n      this.subLayouts.set(layoutName, subLayout)\n      return subLayout\n    }\n\n    return subLayout\n  }\n\n  addRect(\n    layoutName: string,\n    id: string,\n    left: number,\n    right: number,\n    height: number,\n    data: Record<string, T> = {},\n  ) {\n    return this.getSublayout(layoutName).addRect(id, left, right, height, data)\n  }\n\n  discardRange(layoutName: string, left: number, right: number) {\n    return this.subLayouts.get(layoutName)?.discardRange(left, right)\n  }\n\n  toJSON() {\n    const data: Record<string, SerializedLayout> = {}\n    for (const [layoutName, sublayout] of this.subLayouts.entries()) {\n      data[layoutName] = sublayout.toJSON()\n    }\n    return data\n  }\n}\n","import {\n  RectTuple,\n  SerializedLayout,\n  BaseLayout,\n  Rectangle,\n} from './BaseLayout'\nimport RBush from 'rbush'\n\nexport interface Layout {\n  minX: number\n  minY: number\n  maxX: number\n  maxY: number\n  name: string\n}\n\nexport default class PrecomputedLayout<T> implements BaseLayout<T> {\n  private rectangles: Map<string, RectTuple>\n\n  private totalHeight: number\n\n  public maxHeightReached: boolean\n\n  private rbush: RBush<Layout>\n\n  constructor({ rectangles, totalHeight, maxHeightReached }: SerializedLayout) {\n    this.rectangles = new Map(Object.entries(rectangles))\n    // rectangles is of the form \"featureId\": [leftPx, topPx, rightPx, bottomPx]\n    this.totalHeight = totalHeight\n    this.maxHeightReached = maxHeightReached\n    this.rbush = new RBush()\n    for (const [key, layout] of Object.entries(rectangles)) {\n      this.rbush.insert({\n        minX: layout[0],\n        minY: layout[1],\n        maxX: layout[2],\n        maxY: layout[3],\n        name: key,\n      })\n    }\n  }\n\n  addRect(id: string) {\n    const rect = this.rectangles.get(id)\n    if (!rect) {\n      throw new Error(`id ${id} not found in precomputed feature layout`)\n    }\n    // left, top, right, bottom\n    return rect[1]\n  }\n\n  /**\n   * returns a Map of `feature id -> rectangle`\n   */\n  getRectangles(): Map<string, RectTuple> {\n    return this.rectangles\n  }\n\n  getTotalHeight(): number {\n    return this.totalHeight\n  }\n\n  collides(_rect: Rectangle<T>, _top: number): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  getByCoord(x: number, y: number) {\n    const rect = { minX: x, minY: y, maxX: x + 1, maxY: y + 1 }\n    return this.rbush.collides(rect)\n      ? this.rbush.search(rect)[0].name\n      : undefined\n  }\n\n  getByID(id: string) {\n    return this.rectangles.get(id)\n  }\n\n  addRectToBitmap(_rect: Rectangle<T>, _data: Record<string, T>): void {\n    throw new Error('Method not implemented.')\n  }\n\n  discardRange(_left: number, _right: number): void {\n    throw new Error('Method not implemented.')\n  }\n\n  serializeRegion(_region: { start: number; end: number }): SerializedLayout {\n    throw new Error('Method not implemented.')\n  }\n\n  toJSON(): SerializedLayout {\n    return {\n      rectangles: Object.fromEntries(this.rectangles),\n      totalHeight: this.totalHeight,\n      maxHeightReached: false,\n      containsNoTransferables: true,\n    }\n  }\n}\n","import MultiLayout from './MultiLayout'\nimport PrecomputedLayout from './PrecomputedLayout'\n\nclass ThrowingLayout {\n  constructor() {\n    throw new Error('invalid layout name')\n  }\n}\n\nexport default class PrecomputedMultiLayout extends MultiLayout {\n  constructor(json) {\n    // use ThrowingLayout because there is not supposed to be any creation\n    // of new layouts in a precomputed layout\n    super(ThrowingLayout)\n    Object.entries(json).forEach(([layoutName, sublayoutJson]) => {\n      this.subLayouts.set(layoutName, new PrecomputedLayout(sublayoutJson))\n    })\n  }\n}\n","import { inDevelopment } from '..'\n\ninterface AbsoluteCache {\n  dirty: boolean\n  left?: number\n  right?: number\n  top?: number\n  bottom?: number\n  width?: number\n  height?: number\n}\n\nexport default class SceneGraph {\n  private children: Map<string, SceneGraph>\n\n  private absoluteCache: AbsoluteCache\n\n  public parent?: SceneGraph\n\n  /**\n   * note: all coordinates are inter-base or inter-pixel coordinates\n   */\n  constructor(\n    public name: string,\n    public left: number,\n    public top: number,\n    public width: number,\n    public height: number,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public data?: Record<string, any>,\n  ) {\n    if (\n      inDevelopment &&\n      (typeof name !== 'string' ||\n        typeof left !== 'number' ||\n        Number.isNaN(left) ||\n        typeof top !== 'number' ||\n        Number.isNaN(top) ||\n        typeof width !== 'number' ||\n        Number.isNaN(width) ||\n        typeof height !== 'number' ||\n        Number.isNaN(height))\n    ) {\n      throw new TypeError('invalid SceneGraph arguments')\n    }\n    this.children = new Map()\n    this.absoluteCache = { dirty: true }\n  }\n\n  addChild(\n    nameOrSceneGraph: string | SceneGraph,\n    left: number,\n    top: number,\n    width: number,\n    height: number,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data?: Record<string, any>,\n  ): SceneGraph {\n    const child =\n      nameOrSceneGraph instanceof SceneGraph\n        ? nameOrSceneGraph\n        : new SceneGraph(nameOrSceneGraph, left, top, width, height, data)\n\n    if (!(child instanceof SceneGraph)) {\n      throw new TypeError(\n        'argument to addChild must be an array or a SceneGraph',\n      )\n    }\n\n    if (this.children.has(child.name)) {\n      throw new Error(`child named \"${child.name}\" already exists`)\n    }\n\n    // update the bounds to match the child\n    child.parent = this\n    const {\n      left: childLeft,\n      right: childRight,\n      top: childTop,\n      bottom: childBottom,\n    } = child.absolute\n    if (\n      childLeft !== undefined &&\n      childRight !== undefined &&\n      childTop !== undefined &&\n      childBottom !== undefined\n    ) {\n      this.expand(childLeft, childRight, childTop, childBottom)\n      this.children.set(child.name, child)\n    }\n    return child\n  }\n\n  getSubRecord(name: string): SceneGraph | undefined {\n    return this.children.get(name)\n  }\n\n  /**\n   * if the record does not already cover the given\n   * absolute extents, extend it to cover them\n   *\n   * @param left -\n   * @param right -\n   * @param top -\n   * @param bottom -\n   */\n  expand(\n    newLeft: number,\n    newRight: number,\n    newTop: number,\n    newBottom: number,\n  ): void {\n    const { left, right, top, bottom } = this.absolute\n    if (left !== undefined && newLeft < left) {\n      const diff = left - newLeft\n      this.width += diff\n      this.left -= diff\n    }\n    if (right !== undefined && newRight > right) {\n      this.width += newRight - right\n    }\n    if (top !== undefined && newTop < top) {\n      const diff = top - newTop\n      this.height += diff\n      this.top -= diff\n    }\n    if (bottom !== undefined && newBottom > bottom) {\n      this.height += newBottom - bottom\n    }\n    if (this.parent) {\n      this.parent.expand(newLeft, newRight, newTop, newBottom)\n    }\n    this.absoluteCache.dirty = true\n  }\n\n  get bottom(): number {\n    return this.top + this.height\n  }\n\n  get right(): number {\n    return this.left + this.width\n  }\n\n  walkParents(callback: Function): void {\n    if (this.parent) {\n      callback(this.parent)\n      this.parent.walkParents(callback)\n    }\n  }\n\n  walkChildren(callback: Function): void {\n    for (const sub of this.children.values()) {\n      callback(sub)\n      sub.walkChildren(callback)\n    }\n  }\n\n  get absolute(): AbsoluteCache {\n    if (this.absoluteCache.dirty) {\n      let xOffset = 0\n      let yOffset = 0\n      this.walkParents((node: SceneGraph) => {\n        xOffset += node.left\n        yOffset += node.top\n      })\n      this.absoluteCache = {\n        dirty: false,\n        left: this.left + xOffset,\n        right: this.right + xOffset,\n        top: this.top + yOffset,\n        bottom: this.bottom + yOffset,\n        width: this.width,\n        height: this.height,\n      }\n    }\n    return this.absoluteCache\n  }\n\n  move(x: number, y: number): void {\n    this.left += x\n    this.top += y\n\n    this.absoluteCache.dirty = true\n    this.walkChildren((c: SceneGraph) => {\n      c.absoluteCache.dirty = true\n    })\n    const { left, right, top, bottom } = this.absolute\n    if (\n      left !== undefined &&\n      right !== undefined &&\n      top !== undefined &&\n      bottom !== undefined\n    ) {\n      this.expand(left, right, top, bottom)\n    }\n  }\n}\n","/* eslint-disable no-underscore-dangle */\nimport {\n  isOptionalType,\n  isUnionType,\n  isArrayType,\n  isMapType,\n  isLateType,\n  IAnyType,\n  IModelReflectionPropertiesData,\n  IAnyComplexType,\n  ISimpleType,\n  UnionStringArray,\n} from 'mobx-state-tree'\n\nexport interface ILiteralType<T> extends ISimpleType<T> {\n  value: T\n}\n\n/**\n * get the inner type of an MST optional, array, or late type object\n */\nexport function getSubType(type: IAnyType): IAnyType {\n  let t\n  if (isOptionalType(type)) {\n    // @ts-expect-error\n    t = type._subtype || type.type\n  } else if (isArrayType(type) || isMapType(type)) {\n    // @ts-expect-error\n    t = type._subtype || type._subType || type.subType\n    // @ts-expect-error\n  } else if (typeof type.getSubType === 'function') {\n    // @ts-expect-error\n    return type.getSubType()\n  } else {\n    throw new TypeError('unsupported mst type')\n  }\n  if (!t) {\n    // debugger\n    throw new Error('failed to get subtype')\n  }\n  return t\n}\n\n/**\n * get the array of the subtypes in a union\n */\nexport function getUnionSubTypes(unionType: IAnyType): IAnyType[] {\n  if (!isUnionType(unionType)) {\n    throw new TypeError('not an MST union type')\n  }\n  const t =\n    // @ts-expect-error\n    unionType._types ||\n    // @ts-expect-error\n    unionType.types ||\n    // @ts-expect-error\n    getSubType(unionType)._types ||\n    // @ts-expect-error\n    getSubType(unionType).types\n  if (!t) {\n    // debugger\n    throw new Error('failed to extract subtypes from mst union')\n  }\n  return t\n}\n\n/**\n * get the type of one of the properties of the given MST model type\n */\nexport function getPropertyType(\n  type: IModelReflectionPropertiesData,\n  propertyName: string,\n) {\n  return type.properties[propertyName]\n}\n\n/**\n * get the base type from inside an MST optional type\n */\nexport function getDefaultValue(type: IAnyType) {\n  if (!isOptionalType(type)) {\n    throw new TypeError('type must be an optional type')\n  }\n  // @ts-expect-error\n  return type._defaultValue || type.defaultValue\n}\n\nexport type IEnumerationType<T extends string> = ISimpleType<\n  UnionStringArray<T[]>\n>\n\n/** get the string values of an MST enumeration type */\nexport function getEnumerationValues(type: IAnyComplexType) {\n  const subtypes = getUnionSubTypes(type) as ILiteralType<string>[]\n  // the subtypes should all be literals with a value member\n  return subtypes.map(t => t.value)\n}\n\nexport function resolveLateType(maybeLate: IAnyType) {\n  if (\n    !isUnionType(maybeLate) &&\n    !isArrayType(maybeLate) &&\n    isLateType(maybeLate)\n  ) {\n    // @ts-expect-error\n    return maybeLate.getSubType()\n  }\n  return maybeLate\n}\n","// This file is a ponyfill for the HTML5 OffscreenCanvas API.\n\nimport isNode from 'detect-node'\n\nimport { CanvasSequence } from 'canvas-sequencer'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AbstractCanvas = any\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AbstractImageBitmap = any\n\nexport let createCanvas: (width: number, height: number) => AbstractCanvas\nexport let createImageBitmap: (\n  canvas: AbstractCanvas,\n) => Promise<AbstractImageBitmap>\n\n/** the JS class (constructor) for offscreen-generated image bitmap data */\nexport let ImageBitmapType: Function\n\nexport function drawImageOntoCanvasContext(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  imageData: any,\n  context: CanvasRenderingContext2D,\n) {\n  if (imageData.serializedCommands) {\n    const seq = new CanvasSequence(imageData.serializedCommands)\n    seq.execute(context)\n  } else {\n    context.drawImage(imageData as CanvasImageSource, 0, 0)\n  }\n}\n\nconst weHave = {\n  realOffscreenCanvas: typeof OffscreenCanvas === 'function',\n  node: isNode,\n}\n\nif (weHave.realOffscreenCanvas) {\n  createCanvas = (width, height) => new OffscreenCanvas(width, height)\n  // eslint-disable-next-line no-restricted-globals\n  createImageBitmap = window.createImageBitmap || self.createImageBitmap\n  // eslint-disable-next-line no-restricted-globals\n  ImageBitmapType = window.ImageBitmap || self.ImageBitmap\n} else if (weHave.node) {\n  // use node-canvas if we are running in node (i.e. automated tests)\n  createCanvas = (...args) => {\n    // @ts-expect-error\n    // eslint-disable-next-line no-undef\n    return nodeCreateCanvas(...args)\n  }\n  createImageBitmap = async (canvas, ...otherargs) => {\n    if (otherargs.length > 0) {\n      throw new Error(\n        'only one-argument uses of createImageBitmap are supported by the node offscreencanvas ponyfill',\n      )\n    }\n    const dataUri = canvas.toDataURL()\n    // @ts-expect-error\n    // eslint-disable-next-line no-undef\n    const img = new nodeImage()\n    return new Promise((resolve, reject) => {\n      // need onload for jest\n      img.onload = () => resolve(img)\n      img.onerror = reject\n      img.src = dataUri\n    })\n  }\n} else {\n  createCanvas = (width: number, height: number) => {\n    const context = new CanvasSequence()\n    return {\n      width,\n      height,\n      getContext() {\n        return context\n      },\n    }\n  }\n  createImageBitmap = async canvas => {\n    const ctx = canvas.getContext('2d')\n    return {\n      height: canvas.height,\n      width: canvas.width,\n      serializedCommands: ctx.toJSON(),\n      containsNoTransferables: true,\n    }\n  }\n  ImageBitmapType = String\n}\n","import React from 'react'\nimport { CanvasSequence } from 'canvas-sequencer'\n\n// locals\nimport { createCanvas, createImageBitmap } from './offscreenCanvasPonyfill'\nimport { blobToDataURL } from './index'\n\nexport type RenderReturn = Record<string, unknown> | void\n\ntype RendererRet = Promise<RenderReturn> | RenderReturn\n\nexport async function renderToAbstractCanvas(\n  width: number,\n  height: number,\n  opts: {\n    exportSVG?: { rasterizeLayers?: boolean; scale?: number }\n    highResolutionScaling?: number\n  },\n  cb: (ctx: CanvasRenderingContext2D) => RendererRet,\n) {\n  const { exportSVG, highResolutionScaling = 1 } = opts\n\n  if (exportSVG) {\n    if (!exportSVG.rasterizeLayers) {\n      const fakeCtx = new CanvasSequence()\n      const result = await cb(fakeCtx)\n      return {\n        ...result,\n        canvasRecordedData: fakeCtx.toJSON(),\n      }\n    } else {\n      const s = exportSVG.scale || highResolutionScaling\n      const canvas = createCanvas(Math.ceil(width * s), height * s)\n      const ctx = canvas.getContext('2d')\n      if (!ctx) {\n        throw new Error('2d canvas rendering not supported on this platform')\n      }\n      ctx.scale(s, s)\n      const result = await cb(ctx)\n\n      // two methods needed for converting canvas to PNG, one for webworker\n      // offscreen canvas, one for main thread\n      return {\n        ...result,\n        reactElement: (\n          <image\n            width={width}\n            height={height}\n            xlinkHref={\n              'convertToBlob' in canvas\n                ? await blobToDataURL(\n                    await canvas.convertToBlob({\n                      type: 'image/png',\n                    }),\n                  )\n                : canvas.toDataURL('image/png')\n            }\n          />\n        ),\n      }\n    }\n  } else {\n    const s = highResolutionScaling\n    const canvas = createCanvas(Math.ceil(width * s), height * s)\n    const ctx = canvas.getContext('2d')\n    if (!ctx) {\n      throw new Error('2d canvas rendering not supported on this platform')\n    }\n    ctx.scale(s, s)\n    const result = await cb(ctx)\n    return { ...result, imageData: await createImageBitmap(canvas) }\n  }\n}\n\nexport async function getSerializedSvg(results: {\n  width: number\n  height: number\n  canvasRecordedData: unknown\n}) {\n  const { width, height, canvasRecordedData } = results\n\n  // @ts-ignore needs to be ignore not expect error, produces error in build step\n  const C2S = await import('canvas2svg')\n  const ctx = new C2S.default(width, height)\n  const seq = new CanvasSequence(canvasRecordedData)\n  seq.execute(ctx)\n\n  // innerHTML strips the outer <svg> element from returned data, we add\n  // our own <svg> element in the view's SVG export\n  return ctx.getSvg().innerHTML as string\n}\n\nexport function ReactRendering({\n  rendering,\n}: {\n  rendering: {\n    reactElement?: React.ReactNode\n    html?: string\n  }\n}) {\n  return (\n    <>\n      {React.isValidElement(rendering.reactElement) ? (\n        rendering.reactElement\n      ) : (\n        <g\n          /* eslint-disable-next-line react/no-danger */\n          dangerouslySetInnerHTML={{ __html: rendering.html || '' }}\n        />\n      )}\n    </>\n  )\n}\n","/**\n * fast low-level intersection of 2 coordinate ranges. assumes interbase coordinates.\n *\n * assumes `left <= right` for both ranges\n *\n * @returns array of [left, right], or [] if the ranges do not intersect. the choice of [] is because it allows destructuring array assignment without check for undefined return\n */\nexport function intersection2(\n  left1: number,\n  right1: number,\n  left2: number,\n  right2: number,\n) {\n  // this code is verbose because \"if\" statements are faster than Math.min and Math.max\n  if (right1 > left2 && left1 < right2 && right2 - left2 && right1 - left1) {\n    if (left1 > left2) {\n      if (right1 < right2) {\n        // 1     |-------|\n        //     |------------|\n        return [left1, right1]\n      }\n      // 2         |----|\n      //      |------|\n      return [left1, right2]\n    }\n    if (right1 < right2) {\n      // 3  |-----|\n      //       |------|\n      return [left2, right1]\n    }\n    // 4     |------------|\n    //         |-------|\n    return [left2, right2]\n  }\n  return []\n}\n\n/**\n * Return whether 2 interbase coordinate ranges intersect.\n *\n * @param left1 -\n * @param right1 -\n * @param left2 -\n * @param right2 -\n *\n * @returns true if the two ranges intersect\n */\nexport function doesIntersect2(\n  left1: number,\n  right1: number,\n  left2: number,\n  right2: number,\n) {\n  return right1 > left2 && left1 < right2\n}\n\n/**\n * Return whether the first region is completely contained within the second region\n *\n * @param left1 - candidate inner region left\n * @param right1 - candidate inner region right\n * @param left2 - candidate outer region left\n * @param right2 - candidate outer region right\n */\nexport function isContainedWithin(\n  left1: number,\n  right1: number,\n  left2: number,\n  right2: number,\n) {\n  return left2 <= left1 && right2 >= right1\n}\n","import { Observable, Observer } from 'rxjs'\nimport { takeUntil } from 'rxjs/operators'\nimport { observeAbortSignal } from '.'\n\n/**\n * Wrapper for rxjs Observable.create with improved error handling and\n * aborting support\n * @param func - observer function, could be async\n */\nexport function ObservableCreate<T>(\n  func: (arg: Observer<T>) => void | Promise<void>,\n  signal?: AbortSignal,\n): Observable<T> {\n  return Observable.create((observer: Observer<T>) => {\n    try {\n      const ret = func(observer)\n      // catch async errors\n      if (ret && ret.catch) {\n        ret.catch(error => observer.error(error))\n      }\n    } catch (error) {\n      // catch sync errors\n      observer.error(error)\n    }\n  }).pipe(takeUntil(observeAbortSignal(signal)))\n}\n","/**\n * Abstract feature object\n */\nexport interface Feature {\n  /**\n   * Get a piece of data about the feature.  All features must have\n   * 'start' and 'end', but everything else is optional.\n   */\n  get(name: 'refName'): string\n  get(name: 'start'): number\n  get(name: 'end'): number\n  get(name: 'subfeatures'): Feature[] | undefined\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  get(name: string): any\n\n  /**\n   * Set an item of data.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  set(name: string, val: any): void\n\n  /**\n   * Get an array listing which data keys are present in this feature.\n   */\n  tags(): string[]\n\n  /**\n   * Get the unique ID of this feature.\n   */\n  id(): string\n\n  /**\n   * Get this feature's parent feature, or undefined if none.\n   */\n  parent(): Feature | undefined\n\n  /**\n   * Get an array of child features, or undefined if none.\n   */\n  children(): Feature[] | undefined\n\n  /**\n   * Convert to JSON\n   */\n  toJSON(): SimpleFeatureSerialized\n}\n\nexport function isFeature(thing: unknown): thing is Feature {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    typeof (thing as Feature).get === 'function' &&\n    typeof (thing as Feature).id === 'function'\n  )\n}\n\nexport interface SimpleFeatureArgs {\n  /** key-value data, must include 'start' and 'end' */\n  data: {}\n  /** optional parent feature */\n  parent?: Feature\n  /** unique identifier. can also be in data.uniqueId */\n  id: string | number // thing that can be stringified easily\n}\n\n// subfeatures do not have to have uniqueId\nexport interface SimpleFeatureSerializedNoId {\n  [key: string]: unknown\n  parentId?: string\n  subfeatures?: SimpleFeatureSerializedNoId[]\n}\n\n// base serialized feature has to have a uniqueId\nexport interface SimpleFeatureSerialized extends SimpleFeatureSerializedNoId {\n  subfeatures?: SimpleFeatureSerializedNoId[]\n  uniqueId: string\n}\n\nfunction isSimpleFeatureSerialized(\n  args: SimpleFeatureSerialized | SimpleFeatureArgs,\n): args is SimpleFeatureSerialized {\n  return 'uniqueId' in args && typeof args.data !== 'object'\n}\n\n/**\n * Simple implementation of a feature object.\n */\nexport default class SimpleFeature implements Feature {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private data: Record<string, any>\n\n  private subfeatures?: SimpleFeature[]\n\n  private parentHandle?: Feature\n\n  private uniqueId: string\n\n  /**\n   * @param args - SimpleFeature args\n   *\n   * Note: args.data.subfeatures can be an array of these same args,\n   * which will be inflated to more instances of this class.\n   */\n  public constructor(args: SimpleFeatureArgs | SimpleFeatureSerialized) {\n    if (isSimpleFeatureSerialized(args)) {\n      this.data = args\n    } else {\n      this.data = args.data || {}\n      // load handle from args.parent (not args.data.parent)\n      // this reason is because if args is an object, it likely isn't properly loaded with\n      // parent as a Feature reference (probably a raw parent ID or something instead)\n      this.parentHandle = args.parent\n    }\n\n    // the feature id comes from\n    // args.id, args.data.uniqueId, or args.uniqueId due to this initialization\n    const id = isSimpleFeatureSerialized(args) ? args.uniqueId : args.id\n    if (id === undefined || id === null) {\n      throw new Error(\n        'SimpleFeature requires a unique `id` or `data.uniqueId` attribute',\n      )\n    }\n    this.uniqueId = String(id)\n\n    if (!(this.data.aliases || this.data.end - this.data.start >= 0)) {\n      throw new Error(\n        `invalid feature data, end less than start. end: ${this.data.end} start: ${this.data.start}`,\n      )\n    }\n\n    if (this.data.subfeatures) {\n      this.subfeatures = this.data.subfeatures?.map(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (f: any, i: number) =>\n          typeof f.get !== 'function'\n            ? new SimpleFeature({\n                id: f.uniqueId || `${id}-${i}`,\n                data: {\n                  strand: this.data.strand,\n                  ...f,\n                  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                } as Record<string, any>,\n                parent: this,\n              })\n            : f,\n      )\n    }\n  }\n\n  /**\n   * Get a piece of data about the feature.  All features must have\n   * 'start' and 'end', but everything else is optional.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public get(name: string): any {\n    return name === 'subfeatures'\n      ? this.subfeatures\n      : name === 'parent'\n      ? this.parent()\n      : this.data[name]\n  }\n\n  /**\n   * Set an item of data.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public set(name: string, val: any): void {\n    this.data[name] = val\n  }\n\n  /**\n   * Get an array listing which data keys are present in this feature.\n   */\n  public tags(): string[] {\n    return Object.keys(this.data)\n  }\n\n  /**\n   * Get the unique ID of this feature.\n   */\n  public id(): string {\n    return this.uniqueId\n  }\n\n  /**\n   * Get this feature's parent feature, or undefined if none.\n   */\n  public parent(): Feature | undefined {\n    return this.parentHandle\n  }\n\n  /**\n   * Get an array of child features, or undefined if none.\n   */\n  public children(): Feature[] | undefined {\n    return this.get('subfeatures')\n  }\n\n  public toJSON(): SimpleFeatureSerialized {\n    const d = { ...this.data, uniqueId: this.id() } as SimpleFeatureSerialized\n    const p = this.parent()\n    if (p) {\n      d.parentId = p.id()\n    }\n    const c = this.children()\n    if (c) {\n      d.subfeatures = c.map(child => child.toJSON())\n    }\n    return d\n  }\n\n  public static fromJSON(json: SimpleFeatureSerialized) {\n    return new SimpleFeature({ ...json })\n  }\n}\n","import { firstValueFrom, Observable } from 'rxjs'\nimport { reduce } from 'rxjs/operators'\n\n// locals\nimport { NoAssemblyRegion } from './types'\nimport { Feature } from './simpleFeature'\n\nexport interface UnrectifiedQuantitativeStats {\n  scoreMin: number\n  scoreMax: number\n  scoreSum: number\n  scoreSumSquares: number\n  featureCount: number\n  basesCovered: number\n}\nexport interface QuantitativeStats extends UnrectifiedQuantitativeStats {\n  featureDensity: number\n  scoreMean: number\n  scoreStdDev: number\n}\n\n/**\n * calculate standard deviation using the 'shortcut method' that accepts\n * the sum and the sum squares of the elements\n *\n * @param sum - sum(i, 1..n)\n * @param sumSquares - sum(i^2, 1..n)\n * @param n - number of elements\n * @param population - boolean: use population instead of sample correction\n * @returns - the estimated std deviation\n */\nexport function calcStdFromSums(\n  sum: number,\n  sumSquares: number,\n  n: number,\n  population = false,\n): number {\n  if (n === 0) {\n    return 0\n  }\n  let variance\n  if (population) {\n    variance = sumSquares / n - (sum * sum) / (n * n)\n  } else {\n    // sample correction is n-1\n    variance = sumSquares - (sum * sum) / n\n    if (n > 1) {\n      variance /= n - 1\n    }\n  }\n\n  return variance < 0 ? 0 : Math.sqrt(variance)\n}\n\n/**\n * @param stats - a summary stats object with scoreSum, featureCount,\n * scoreSumSquares, and basesCovered\n * @returns - a summary stats object with\n * scoreMean, scoreStdDev, and featureDensity added\n */\nexport function rectifyStats(s: UnrectifiedQuantitativeStats) {\n  return {\n    ...s,\n    scoreMean: (s.scoreSum || 0) / (s.featureCount || s.basesCovered || 1),\n    scoreStdDev: calcStdFromSums(\n      s.scoreSum,\n      s.scoreSumSquares,\n      s.featureCount || s.basesCovered,\n    ),\n    featureDensity: (s.featureCount || 1) / s.basesCovered,\n  } as QuantitativeStats\n}\n\n/**\n * calculates per-base scores for variable width features over a region\n *\n * @param region - object contains start, end\n * @param features - list of features with start, end, score\n * @returns array of numeric scores\n */\nexport function calcPerBaseStats(\n  region: NoAssemblyRegion,\n  features: Feature[],\n): number[] {\n  const { start, end } = region\n  const scores = []\n  const feats = features.sort((a, b) => a.get('start') - b.get('start'))\n  let pos = start\n  let currentFeat = 0\n  let i = 0\n\n  while (pos < end) {\n    while (currentFeat < feats.length && pos >= feats[currentFeat].get('end')) {\n      currentFeat += 1\n    }\n    const f = feats[currentFeat]\n    if (!f) {\n      scores[i] = 0\n    } else if (pos >= f.get('start') && pos < f.get('end')) {\n      scores[i] = f.get('score')\n    } else {\n      scores[i] = 0\n    }\n    i += 1\n    pos += 1\n  }\n  return scores\n}\n\n/**\n * transform a list of scores to summary statistics\n *\n * @param region - object with start, end\n * @param features - array of features which are possibly summary features\n * @returns - object with scoreMax, scoreMin, scoreSum, scoreSumSquares, etc\n */\nexport async function scoresToStats(\n  region: NoAssemblyRegion,\n  feats: Observable<Feature>,\n) {\n  const { start, end } = region\n  const seed = {\n    scoreMin: Number.MAX_VALUE,\n    scoreMax: Number.MIN_VALUE,\n    scoreSum: 0,\n    scoreSumSquares: 0,\n    featureCount: 0,\n  }\n  let found = false\n\n  const { scoreMin, scoreMax, scoreSum, scoreSumSquares, featureCount } =\n    await firstValueFrom(\n      feats.pipe(\n        reduce((acc, f) => {\n          const s = f.get('score')\n          const summary = f.get('summary')\n          const { scoreMax, scoreMin } = acc\n          acc.scoreMax = Math.max(scoreMax, summary ? f.get('maxScore') : s)\n          acc.scoreMin = Math.min(scoreMin, summary ? f.get('minScore') : s)\n          acc.scoreSum += s\n          acc.scoreSumSquares += s * s\n          acc.featureCount += 1\n          found = true\n\n          return acc\n        }, seed),\n      ),\n    )\n\n  return found\n    ? rectifyStats({\n        scoreMax,\n        scoreMin,\n        scoreSum,\n        scoreSumSquares,\n        featureCount,\n        basesCovered: end - start + 1,\n      })\n    : blankStats()\n}\n\nexport function blankStats() {\n  return {\n    scoreMin: 0,\n    scoreMax: 0,\n    scoreMean: 0,\n    scoreStdDev: 0,\n    scoreSum: 0,\n    scoreSumSquares: 0,\n    featureCount: 0,\n    featureDensity: 0,\n    basesCovered: 0,\n  } as QuantitativeStats\n}\n","import { getParent, isRoot, IAnyStateTreeNode } from 'mobx-state-tree'\nimport { getSession, objectHash, getEnv } from './index'\nimport { PreFileLocation, FileLocation } from './types'\nimport {\n  getConf,\n  readConfObject,\n  AnyConfigurationModel,\n} from '../configuration'\n\n/* utility functions for use by track models and so forth */\n\nexport function getTrackAssemblyNames(\n  track: IAnyStateTreeNode & { configuration: AnyConfigurationModel },\n) {\n  const trackAssemblyNames = getConf(track, 'assemblyNames') as string[]\n  if (!trackAssemblyNames) {\n    // Check if it's an assembly sequence track\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const parent = getParent<any>(track.configuration)\n    if ('sequence' in parent) {\n      return [readConfObject(parent, 'name') as string]\n    }\n  }\n  return trackAssemblyNames\n}\n\n/** return the rpcSessionId of the highest parent node in the tree that has an rpcSessionId */\n\nexport function getRpcSessionId(thisNode: IAnyStateTreeNode) {\n  interface NodeWithRpcSessionId extends IAnyStateTreeNode {\n    rpcSessionId: string\n  }\n  let highestRpcSessionId\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  for (let node = thisNode; !isRoot(node); node = getParent<any>(node)) {\n    if ('rpcSessionId' in node) {\n      highestRpcSessionId = (node as NodeWithRpcSessionId).rpcSessionId\n    }\n  }\n  if (!highestRpcSessionId) {\n    throw new Error(\n      'getRpcSessionId failed, no parent node in the state tree has an `rpcSessionId` attribute',\n    )\n  }\n  return highestRpcSessionId\n}\n\n/**\n * given an MST node, get the renderprops of the first parent container that has\n * renderProps\n * @param node -\n * @returns renderprops, or empty object if none found\n */\nexport function getParentRenderProps(node: IAnyStateTreeNode) {\n  for (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let currentNode = getParent<any>(node);\n    !isRoot(currentNode);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    currentNode = getParent<any>(currentNode)\n  ) {\n    if ('renderProps' in currentNode) {\n      return currentNode.renderProps()\n    }\n  }\n\n  return {}\n}\n\nexport const UNKNOWN = 'UNKNOWN'\nexport const UNSUPPORTED = 'UNSUPPORTED'\n\nlet blobMap: { [key: string]: File } = {}\n\n// get a specific blob\nexport function getBlob(id: string) {\n  return blobMap[id]\n}\n\n// used to export entire context to webworker\nexport function getBlobMap() {\n  return blobMap\n}\n\n// used in new contexts like webworkers\nexport function setBlobMap(map: { [key: string]: File }) {\n  blobMap = map\n}\n\nlet counter = 0\n\n// blob files are stored in a global map. the blobId is based on a combination\n// of timestamp plus counter to be unique across sessions and fast repeated\n// calls\nexport function storeBlobLocation(location: PreFileLocation) {\n  if (location && 'blob' in location) {\n    const blobId = `b${+Date.now()}-${counter++}`\n    blobMap[blobId] = location.blob\n    return { name: location?.blob.name, blobId, locationType: 'BlobLocation' }\n  }\n  return location\n}\n\n/**\n * creates a new location from the provided location including the appropriate suffix and location type\n * @param location - the FileLocation\n * @param suffix - the file suffix (e.g. .bam)\n * @returns the constructed location object from the provided parameters\n */\nexport function makeIndex(location: FileLocation, suffix: string) {\n  if ('uri' in location) {\n    return { uri: location.uri + suffix, locationType: 'UriLocation' }\n  }\n\n  if ('localPath' in location) {\n    return {\n      localPath: location.localPath + suffix,\n      locationType: 'LocalPathLocation',\n    }\n  }\n\n  return location\n}\n\n/**\n * constructs a potential index file (with suffix) from the provided file name\n * @param name - the name of the index file\n * @param typeA - one option of a potential two file suffix (e.g. CSI, BAI)\n * @param typeB - the second option of a potential two file suffix (e.g. CSI, BAI)\n * @returns a likely name of the index file for a given filename\n */\nexport function makeIndexType(\n  name: string | undefined,\n  typeA: string,\n  typeB: string,\n) {\n  return name?.toUpperCase().endsWith(typeA) ? typeA : typeB\n}\n\nexport interface AdapterConfig {\n  type: string\n  [key: string]: unknown\n}\n\nexport type AdapterGuesser = (\n  file: FileLocation,\n  index?: FileLocation,\n  adapterHint?: string,\n) => AdapterConfig | undefined\n\nexport type TrackTypeGuesser = (adapterName: string) => string | undefined\n\nexport function getFileName(track: FileLocation) {\n  const uri = 'uri' in track ? track.uri : undefined\n  const localPath = 'localPath' in track ? track.localPath : undefined\n  const blob = 'blobId' in track ? track : undefined\n  return (\n    blob?.name ||\n    uri?.slice(uri.lastIndexOf('/') + 1) ||\n    localPath?.slice(localPath.lastIndexOf('/') + 1) ||\n    ''\n  )\n}\n\nexport function guessAdapter(\n  file: FileLocation,\n  index: FileLocation | undefined,\n  adapterHint?: string,\n  model?: IAnyStateTreeNode,\n) {\n  if (model) {\n    const { pluginManager } = getEnv(model)\n    const adapterGuesser = pluginManager.evaluateExtensionPoint(\n      'Core-guessAdapterForLocation',\n      (\n        _file: FileLocation,\n        _index?: FileLocation,\n        _adapterHint?: string,\n      ): AdapterConfig | undefined => {\n        return undefined\n      },\n    ) as AdapterGuesser\n\n    const adapter = adapterGuesser(file, index, adapterHint)\n\n    if (adapter) {\n      return adapter\n    }\n  }\n\n  return {\n    type: UNKNOWN,\n  }\n}\n\nexport function guessTrackType(\n  adapterType: string,\n  model?: IAnyStateTreeNode,\n): string {\n  if (model) {\n    const session = getSession(model)\n\n    const trackTypeGuesser = getEnv(\n      session,\n    ).pluginManager.evaluateExtensionPoint(\n      'Core-guessTrackTypeForLocation',\n      (_adapterName: string): AdapterConfig | undefined => {\n        return undefined\n      },\n    ) as TrackTypeGuesser\n\n    const trackType = trackTypeGuesser(adapterType)\n\n    if (trackType) {\n      return trackType\n    }\n  }\n  return 'FeatureTrack'\n}\n\nexport function generateUnsupportedTrackConf(\n  trackName: string,\n  trackUrl: string,\n  categories: string[] | undefined,\n) {\n  const conf = {\n    type: 'FeatureTrack',\n    name: `${trackName} (Unsupported)`,\n    description: `Support not yet implemented for \"${trackUrl}\"`,\n    category: categories,\n    trackId: '',\n  }\n  conf.trackId = objectHash(conf)\n  return conf\n}\n\nexport function generateUnknownTrackConf(\n  trackName: string,\n  trackUrl: string,\n  categories: string[] | undefined,\n) {\n  const conf = {\n    type: 'FeatureTrack',\n    name: `${trackName} (Unknown)`,\n    description: `Could not determine track type for \"${trackUrl}\"`,\n    category: categories,\n    trackId: '',\n  }\n  conf.trackId = objectHash(conf)\n  return conf\n}\n\nexport function getTrackName(\n  conf: AnyConfigurationModel,\n  session: { assemblies: AnyConfigurationModel[] },\n) {\n  const trackName = readConfObject(conf, 'name') as string\n  if (!trackName && readConfObject(conf, 'type') === 'ReferenceSequenceTrack') {\n    const asm = session.assemblies.find(a => a.sequence === conf)\n    return asm\n      ? `Reference sequence (${\n          readConfObject(asm, 'displayName') || readConfObject(asm, 'name')\n        })`\n      : 'Reference sequence'\n  }\n  return trackName\n}\n","import React from 'react'\nimport {\n  isStateTreeNode,\n  Instance,\n  SnapshotIn,\n  IAnyStateTreeNode,\n  IStateTreeNode,\n  IType,\n} from 'mobx-state-tree'\nimport { AnyConfigurationModel } from '../../configuration'\n\nimport assemblyManager from '../../assemblyManager'\nimport TextSearchManager from '../../TextSearch/TextSearchManager'\nimport { MenuItem } from '../../ui'\nimport {\n  NoAssemblyRegion as MUNoAssemblyRegion,\n  Region as MUIRegion,\n  LocalPathLocation as MULocalPathLocation,\n  UriLocation as MUUriLocation,\n  BlobLocation as MUBlobLocation,\n} from './mst'\nimport RpcManager from '../../rpc/RpcManager'\nimport { Feature } from '../simpleFeature'\nimport { BaseInternetAccountModel } from '../../pluggableElementTypes/models'\n\nexport * from './util'\n\n/** abstract type for a model that contains multiple views */\nexport interface AbstractViewContainer\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  extends IStateTreeNode<IType<any, unknown, any>> {\n  views: AbstractViewModel[]\n  removeView(view: AbstractViewModel): void\n  addView(\n    typeName: string,\n    initialState?: Record<string, unknown>,\n  ): AbstractViewModel\n}\nexport function isViewContainer(\n  thing: unknown,\n): thing is AbstractViewContainer {\n  return (\n    isStateTreeNode(thing) &&\n    'removeView' in thing &&\n    'addView' in thing &&\n    'views' in thing\n  )\n}\n\nexport type NotificationLevel = 'error' | 'info' | 'warning' | 'success'\nexport interface SnackAction {\n  name: string\n  onClick: () => void\n}\n\nexport type AssemblyManager = Instance<ReturnType<typeof assemblyManager>>\n\nexport interface BasePlugin {\n  version?: string\n  name: string\n  url?: string\n}\n\nexport interface JBrowsePlugin {\n  name: string\n  authors: string[]\n  description: string\n  location: string\n  url?: string\n  umdUrl?: string\n  esmUrl?: string\n  cjsUrl?: string\n  license: string\n  image?: string\n}\n\nexport type DialogComponentType =\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  | React.LazyExoticComponent<React.FC<any>>\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  | React.FC<any>\n\n/** minimum interface that all session state models must implement */\nexport interface AbstractSessionModel extends AbstractViewContainer {\n  drawerPosition?: string\n  setSelection(feature: Feature): void\n  clearSelection(): void\n  configuration: AnyConfigurationModel\n  rpcManager: RpcManager\n  assemblyNames: string[]\n  assemblies: AnyConfigurationModel[]\n  selection?: unknown\n  duplicateCurrentSession?(): void\n  notify(message: string, level?: NotificationLevel, action?: SnackAction): void\n  assemblyManager: AssemblyManager\n  version: string\n  getTrackActionMenuItems?: Function\n  addAssembly?: Function\n  removeAssembly?: Function\n  textSearchManager?: TextSearchManager\n  connections: AnyConfigurationModel[]\n  deleteConnection?: Function\n  sessionConnections?: AnyConfigurationModel[]\n  connectionInstances?: {\n    name: string\n    tracks: AnyConfigurationModel[]\n    configuration: AnyConfigurationModel\n  }[]\n  makeConnection?: Function\n  adminMode?: boolean\n  showWidget?: Function\n  addWidget?: Function\n\n  DialogComponent?: DialogComponentType\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  DialogProps: any\n  queueDialog<T extends DialogComponentType>(\n    callback: (doneCallback: () => void) => [T, React.ComponentProps<T>],\n  ): void\n  name: string\n  id?: string\n  tracks: AnyConfigurationModel[]\n}\nexport function isSessionModel(thing: unknown): thing is AbstractSessionModel {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'rpcManager' in thing &&\n    'configuration' in thing\n  )\n}\n\n/** abstract interface for a session allows editing configurations */\nexport interface SessionWithConfigEditing extends AbstractSessionModel {\n  editConfiguration(configuration: AnyConfigurationModel): void\n}\nexport function isSessionModelWithConfigEditing(\n  thing: unknown,\n): thing is SessionWithConfigEditing {\n  return isSessionModel(thing) && 'editConfiguration' in thing\n}\n\n/** abstract interface for a session allows adding tracks */\nexport interface SessionWithConfigEditing extends AbstractSessionModel {\n  addTrackConf(\n    configuration: AnyConfigurationModel | SnapshotIn<AnyConfigurationModel>,\n  ): void\n}\nexport function isSessionWithAddTracks(\n  thing: unknown,\n): thing is SessionWithConfigEditing {\n  return (\n    // @ts-expect-error\n    isSessionModel(thing) && 'addTrackConf' in thing && !thing.disableAddTracks\n  )\n}\n\nexport interface Widget {\n  type: string\n  id: string\n}\n\n/** abstract interface for a session that manages widgets */\nexport interface SessionWithWidgets extends AbstractSessionModel {\n  minimized: boolean\n  visibleWidget?: Widget\n  widgets: Map<string, Widget>\n  hideAllWidgets: () => void\n  activeWidgets: Map<string, Widget>\n  addWidget(\n    typeName: string,\n    id: string,\n    initialState?: Record<string, unknown>,\n    configuration?: { type: string },\n  ): Widget\n  showWidget(widget: unknown): void\n  hideWidget(widget: unknown): void\n}\n\n/* only some sessions with widgets use a drawer widget */\nexport interface SessionWithDrawerWidgets extends SessionWithWidgets {\n  drawerWidth: number\n  resizeDrawer(arg: number): number\n  minimizeWidgetDrawer(): void\n  showWidgetDrawer: () => void\n  drawerPosition: string\n  setDrawerPosition(arg: string): void\n}\n\nexport function isSessionModelWithWidgets(\n  thing: unknown,\n): thing is SessionWithWidgets {\n  return isSessionModel(thing) && 'widgets' in thing\n}\ninterface SessionWithConnections {\n  makeConnection: (arg: AnyConfigurationModel) => void\n}\nexport function isSessionModelWithConnections(\n  thing: unknown,\n): thing is SessionWithConnections {\n  return isSessionModel(thing) && 'makeConnection' in thing\n}\n\ninterface SessionWithConnectionEditing {\n  addConnectionConf: (arg: AnyConfigurationModel) => void\n}\n\nexport function isSessionModelWithConnectionEditing(\n  thing: unknown,\n): thing is SessionWithConnectionEditing {\n  return isSessionModel(thing) && 'addConnectionConf' in thing\n}\n\nexport interface SessionWithSessionPlugins extends AbstractSessionModel {\n  sessionPlugins: JBrowsePlugin[]\n  addSessionPlugin: Function\n  removeSessionPlugin: Function\n}\nexport function isSessionWithSessionPlugins(\n  thing: unknown,\n): thing is SessionWithSessionPlugins {\n  return isSessionModel(thing) && 'sessionPlugins' in thing\n}\n\n/** abstract interface for a session that manages a global selection */\nexport interface SelectionContainer extends AbstractSessionModel {\n  selection?: unknown\n  setSelection(thing: unknown): void\n}\nexport function isSelectionContainer(\n  thing: unknown,\n): thing is SelectionContainer {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'selection' in thing &&\n    'setSelection' in thing\n  )\n}\n\n/** minimum interface that all view state models must implement */\nexport interface AbstractViewModel {\n  id: string\n  type: string\n  width: number\n  minimized: boolean\n  setWidth(width: number): void\n  setMinimized(flag: boolean): void\n  displayName: string | undefined\n  setDisplayName: (arg: string) => void\n  menuItems: () => MenuItem[]\n}\nexport function isViewModel(thing: unknown): thing is AbstractViewModel {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'width' in thing &&\n    'setWidth' in thing\n  )\n}\n\nexport interface AbstractTrackModel {\n  displays: AbstractDisplayModel[]\n  configuration: AnyConfigurationModel\n}\n\nexport function isTrackModel(thing: unknown): thing is AbstractTrackModel {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'configuration' in thing &&\n    // @ts-expect-error\n    thing.configuration.trackId\n  )\n}\n\nexport interface AbstractDisplayModel {\n  id: string\n  parentTrack: AbstractTrackModel\n  renderDelay: number\n  rendererType: any // eslint-disable-line @typescript-eslint/no-explicit-any\n  cannotBeRenderedReason?: string\n}\nexport function isDisplayModel(thing: unknown): thing is AbstractDisplayModel {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'configuration' in thing &&\n    // @ts-expect-error\n    thing.configuration.displayId\n  )\n}\n\nexport interface TrackViewModel extends AbstractViewModel {\n  showTrack(trackId: string): void\n  hideTrack(trackId: string): void\n}\nexport function isTrackViewModel(thing: unknown): thing is TrackViewModel {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'showTrack' in thing &&\n    'hideTrack' in thing\n  )\n}\n\n/** minimum interface for the root MST model of a JBrowse app */\nexport interface AbstractRootModel {\n  jbrowse: IAnyStateTreeNode\n  session?: AbstractSessionModel\n  setDefaultSession?(): void\n  adminMode?: boolean\n  error?: unknown\n}\n\n/** root model with more included for the heavier JBrowse web and desktop app */\nexport interface AppRootModel extends AbstractRootModel {\n  isAssemblyEditing: boolean\n  isDefaultSessionEditing: boolean\n  setAssemblyEditing: (arg: boolean) => boolean\n  setDefaultSessionEditing: (arg: boolean) => boolean\n  internetAccounts: BaseInternetAccountModel[]\n  findAppropriateInternetAccount(\n    location: UriLocation,\n  ): BaseInternetAccountModel | undefined\n}\n\nexport function isAppRootModel(thing: unknown): thing is AppRootModel {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'isAssemblyEditing' in thing &&\n    'findAppropriateInternetAccount' in thing\n  )\n}\n\nexport interface RootModelWithInternetAccounts extends AbstractRootModel {\n  internetAccounts: BaseInternetAccountModel[]\n  findAppropriateInternetAccount(\n    location: UriLocation,\n  ): BaseInternetAccountModel | undefined\n}\n\nexport function isRootModelWithInternetAccounts(\n  thing: unknown,\n): thing is RootModelWithInternetAccounts {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'internetAccounts' in thing &&\n    'findAppropriateInternetAccount' in thing\n  )\n}\n\n/** a root model that manages global menus */\nexport interface AbstractMenuManager {\n  appendMenu(menuName: string): void\n  insertMenu(menuName: string, position: number): number\n  insertInMenu(menuName: string, menuItem: MenuItem, position: number): number\n  appendToMenu(menuName: string, menuItem: MenuItem): number\n  appendToSubMenu(menuPath: string[], menuItem: MenuItem): number\n  insertInSubMenu(\n    menuPath: string[],\n    menuItem: MenuItem,\n    position: number,\n  ): number\n}\nexport function isAbstractMenuManager(\n  thing: unknown,\n): thing is AbstractMenuManager {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'appendMenu' in thing &&\n    'appendToSubMenu' in thing\n  )\n}\n\n// Empty interfaces required by mobx-state-tree\n// See https://mobx-state-tree.js.org/tips/typescript#using-a-mst-type-at-design-time\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\nexport interface NoAssemblyRegion\n  extends SnapshotIn<typeof MUNoAssemblyRegion> {}\n\n/** a description of a specific genomic region. assemblyName, refName, start, end, and reversed */\nexport interface Region extends SnapshotIn<typeof MUIRegion> {}\n\nexport interface AugmentedRegion extends Region {\n  originalRefName?: string\n}\n\nexport interface LocalPathLocation\n  extends SnapshotIn<typeof MULocalPathLocation> {}\n\nexport interface UriLocation extends SnapshotIn<typeof MUUriLocation> {}\n\nexport function isUriLocation(location: unknown): location is UriLocation {\n  return (\n    typeof location === 'object' &&\n    location !== null &&\n    'uri' in location &&\n    !!location.uri\n  )\n}\nexport class AuthNeededError extends Error {\n  constructor(public message: string, public url: string) {\n    super(message)\n    this.name = 'AuthNeededError'\n\n    Object.setPrototypeOf(this, AuthNeededError.prototype)\n  }\n}\n\nexport class RetryError extends Error {\n  constructor(public message: string, public internetAccountId: string) {\n    super(message)\n    this.name = 'RetryError'\n  }\n}\n\nexport function isAuthNeededException(\n  exception: unknown,\n): exception is AuthNeededError {\n  return (\n    exception instanceof Error &&\n    // DOMException\n    (exception.name === 'AuthNeededError' ||\n      (exception as AuthNeededError).url !== undefined)\n  )\n}\n\nexport function isRetryException(exception: Error): boolean {\n  return (\n    // DOMException\n    exception.name === 'RetryError' ||\n    (exception as RetryError).internetAccountId !== undefined\n  )\n}\n\nexport interface BlobLocation extends SnapshotIn<typeof MUBlobLocation> {}\n\nexport type FileLocation = LocalPathLocation | UriLocation | BlobLocation\n\n// These types are slightly different than the MST models representing a\n// location because a blob cannot be stored in a MST, so this is the\n// pre-processed file location\nexport type PreUriLocation = { uri: string }\nexport type PreLocalPathLocation = { localPath: string }\nexport type PreBlobLocation = { blob: File }\nexport type PreFileLocation =\n  | PreUriLocation\n  | PreLocalPathLocation\n  | PreBlobLocation\n\nexport { type default as TextSearchManager } from '../../TextSearch/TextSearchManager'\n","import shortid from 'shortid'\nimport { types } from 'mobx-state-tree'\nimport propTypes from 'prop-types'\nimport { PropTypes as MxPropTypes } from 'mobx-react'\n\nexport const ElementId = types.optional(types.identifier, shortid.generate)\n\n// PropTypes that are useful when working with instances of these in react components\nexport const PropTypes = {\n  Region: propTypes.shape({\n    refName: propTypes.string.isRequired,\n    start: propTypes.number.isRequired,\n    end: propTypes.number.isRequired,\n  }),\n  ConfigSchema: MxPropTypes.objectOrObservableObject,\n  Feature: propTypes.shape({\n    get: propTypes.func.isRequired,\n    id: propTypes.func.isRequired,\n  }),\n}\n\nexport const NoAssemblyRegion = types\n  .model('NoAssemblyRegion', {\n    refName: types.string,\n    start: types.number,\n    end: types.number,\n    reversed: types.optional(types.boolean, false),\n  })\n  .actions(self => ({\n    setRefName(newRefName: string): void {\n      self.refName = newRefName\n    },\n  }))\n\nexport const Region = types.compose(\n  'Region',\n  NoAssemblyRegion,\n  types.model({\n    assemblyName: types.string,\n  }),\n)\n\nexport const LocalPathLocation = types.model('LocalPathLocation', {\n  locationType: types.literal('LocalPathLocation'),\n  localPath: types.string,\n})\n\n// like how blobId is used to get a blob map\nexport const BlobLocation = types.model('BlobLocation', {\n  locationType: types.literal('BlobLocation'),\n  name: types.string,\n  blobId: types.string,\n})\n\nexport const UriLocationRaw = types.model('UriLocation', {\n  locationType: types.literal('UriLocation'),\n  uri: types.string,\n  baseUri: types.maybe(types.string),\n\n  internetAccountId: types.maybe(types.string),\n\n  // auths information (such as tokens) needed for using this resource.\n  // if provided, these must be completely sufficient for using it\n  internetAccountPreAuthorization: types.maybe(\n    types.model('InternetAccountPreAuthorization', {\n      internetAccountType: types.string,\n      authInfo: types.frozen(),\n    }),\n  ),\n})\n\nexport const UriLocation = types.snapshotProcessor(UriLocationRaw, {\n  postProcessor: snap => {\n    // xref https://github.com/mobxjs/mobx-state-tree/issues/1524 for Omit\n    const { baseUri, ...rest } = snap as Omit<typeof snap, symbol>\n    if (!baseUri) {\n      return rest\n    }\n    return snap\n  },\n})\n\nexport const FileLocation = types.snapshotProcessor(\n  types.union(LocalPathLocation, UriLocation, BlobLocation),\n  {\n    // @ts-expect-error\n    preProcessor(snap) {\n      if (!snap) {\n        return undefined\n      }\n\n      // @ts-expect-error\n      // xref https://github.com/mobxjs/mobx-state-tree/issues/1524 for Omit\n      const { locationType, ...rest } = snap as Omit<typeof snap, symbol>\n      if (!locationType) {\n        // @ts-expect-error\n        const { uri, localPath, blob } = rest\n        let locationType = ''\n        if (uri !== undefined) {\n          locationType = 'UriLocation'\n        } else if (localPath !== undefined) {\n          locationType = 'LocalPathLocation'\n        } else if (blob !== undefined) {\n          locationType = 'BlobLocation'\n        }\n\n        return { ...rest, locationType }\n      }\n      return snap\n    },\n  },\n)\n","import { useState, useEffect, useRef } from 'react'\n\nexport default function useMeasure() {\n  const ref = useRef<HTMLDivElement>(null)\n  const [dims, setDims] = useState<{ width?: number; height?: number }>({\n    width: undefined,\n    height: undefined,\n  })\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const RS =\n      typeof window !== 'undefined' && 'ResizeObserver' in window\n        ? window.ResizeObserver\n        : undefined\n\n    if (!RS) {\n      return\n    }\n    const observer = new RS(entries => {\n      setDims({\n        width: entries[0].contentRect.width,\n        height: entries[0].contentRect.height,\n      })\n    })\n    observer.observe(ref.current)\n\n    // Callback fired when component is unmounted\n    return () => {\n      observer.disconnect()\n    }\n  }, [])\n\n  return [ref, dims] as const\n}\n","import { when as mobxWhen, IWhenOptions } from 'mobx'\nimport { makeAbortError } from './aborting'\n\ninterface WhenOpts extends IWhenOptions {\n  signal?: AbortSignal\n}\n\n/**\n * Wrapper for mobx `when` that adds timeout and aborting support.\n */\nexport function when(\n  getter: () => boolean,\n  { timeout, signal, name }: WhenOpts = {},\n) {\n  return new Promise((resolve, reject) => {\n    let finished = false\n\n    const whenPromise = mobxWhen(getter)\n\n    // set up timeout\n    let timeoutId: ReturnType<typeof setTimeout> | undefined\n    let finishTimeout = () => {}\n    if (timeout) {\n      timeoutId = setTimeout(() => {\n        if (!finished) {\n          finished = true\n          whenPromise.cancel()\n          reject(new Error(`timed out waiting for ${name || 'whenPresent'}`))\n        }\n      }, timeout)\n      finishTimeout = () => timeoutId && clearTimeout(timeoutId)\n    }\n\n    // set up aborting\n    if (signal) {\n      signal.addEventListener('abort', () => {\n        if (!finished) {\n          finished = true\n\n          // mobx when supports a cancel method\n          whenPromise.cancel()\n          finishTimeout()\n\n          reject(makeAbortError())\n        }\n      })\n    }\n\n    whenPromise\n      .then(() => {\n        if (!finished) {\n          finished = true\n          finishTimeout()\n\n          resolve(true)\n        }\n      })\n      .catch(err => {\n        if (!finished) {\n          finished = true\n          finishTimeout()\n\n          reject(err)\n        }\n      })\n  })\n}\n\n/**\n * Wrapper for mobx `when` that makes a promise for the return value\n * of the given function at the point in time when it becomes not\n * undefined and not null.\n */\nexport async function whenPresent<FUNCTION extends () => unknown>(\n  getter: FUNCTION,\n  opts: WhenOpts = {},\n): Promise<NonNullable<ReturnType<FUNCTION>>> {\n  await when(() => {\n    const val = getter()\n    return val !== undefined && val !== null\n  }, opts)\n\n  return getter() as NonNullable<ReturnType<FUNCTION>>\n}\n","import { revcom, Feature } from '@jbrowse/core/util'\nimport { getTagAlt } from '../util'\n\nexport interface Mismatch {\n  qual?: number\n  start: number\n  length: number\n  type: string\n  base: string\n  altbase?: string\n  seq?: string\n  cliplen?: number\n}\nconst mdRegex = new RegExp(/(\\d+|\\^[a-z]+|[a-z])/gi)\nconst modificationRegex = new RegExp(/([A-Z])([-+])([^,.?]+)([.?])?/)\nconst cigarRegex = new RegExp(/([MIDNSHPX=])/)\nconst startClip = new RegExp(/(\\d+)[SH]$/)\nconst endClip = new RegExp(/^(\\d+)([SH])/)\n\nexport function parseCigar(cigar = '') {\n  return cigar.split(cigarRegex).slice(0, -1)\n}\n\nexport function cigarToMismatches(\n  ops: string[],\n  seq?: string,\n  ref?: string,\n  qual?: Buffer,\n) {\n  let roffset = 0 // reference offset\n  let soffset = 0 // seq offset\n  const mismatches: Mismatch[] = []\n  const hasRefAndSeq = ref && seq\n  for (let i = 0; i < ops.length; i += 2) {\n    const len = +ops[i]\n    const op = ops[i + 1]\n\n    if (op === 'M' || op === '=' || op === 'E') {\n      if (hasRefAndSeq) {\n        for (let j = 0; j < len; j++) {\n          if (\n            // @ts-ignore in the full yarn build of the repo, this says that object is possibly undefined for some reason, ignored\n            seq[soffset + j].toUpperCase() !== ref[roffset + j].toUpperCase()\n          ) {\n            mismatches.push({\n              start: roffset + j,\n              type: 'mismatch',\n              base: seq[soffset + j],\n              altbase: ref[roffset + j],\n              length: 1,\n            })\n          }\n        }\n      }\n      soffset += len\n    }\n    if (op === 'I') {\n      mismatches.push({\n        start: roffset,\n        type: 'insertion',\n        base: `${len}`,\n        length: 0,\n      })\n      soffset += len\n    } else if (op === 'D') {\n      mismatches.push({\n        start: roffset,\n        type: 'deletion',\n        base: '*',\n        length: len,\n      })\n    } else if (op === 'N') {\n      mismatches.push({\n        start: roffset,\n        type: 'skip',\n        base: 'N',\n        length: len,\n      })\n    } else if (op === 'X') {\n      const r = seq?.slice(soffset, soffset + len) || []\n      const q = qual?.slice(soffset, soffset + len) || []\n\n      for (let j = 0; j < len; j++) {\n        mismatches.push({\n          start: roffset + j,\n          type: 'mismatch',\n          base: r[j],\n          qual: q[j],\n          length: 1,\n        })\n      }\n      soffset += len\n    } else if (op === 'H') {\n      mismatches.push({\n        start: roffset,\n        type: 'hardclip',\n        base: `H${len}`,\n        cliplen: len,\n        length: 1,\n      })\n    } else if (op === 'S') {\n      mismatches.push({\n        start: roffset,\n        type: 'softclip',\n        base: `S${len}`,\n        cliplen: len,\n        length: 1,\n      })\n      soffset += len\n    }\n\n    if (op !== 'I' && op !== 'S' && op !== 'H') {\n      roffset += len\n    }\n  }\n  return mismatches\n}\n\n/**\n * parse a SAM MD tag to find mismatching bases of the template versus the\n * reference @returns array of mismatches and their positions\n */\nexport function mdToMismatches(\n  mdstring: string,\n  ops: string[],\n  cigarMismatches: Mismatch[],\n  seq: string,\n  qual?: Buffer,\n) {\n  let curr: Mismatch = { start: 0, base: '', length: 0, type: 'mismatch' }\n  let lastCigar = 0\n  let lastTemplateOffset = 0\n  let lastRefOffset = 0\n  let lastSkipPos = 0\n  const mismatchRecords: Mismatch[] = []\n  const skips = cigarMismatches.filter(cigar => cigar.type === 'skip')\n\n  // convert a position on the reference sequence to a position\n  // on the template sequence, taking into account hard and soft\n  // clipping of reads\n\n  function nextRecord(): void {\n    mismatchRecords.push(curr)\n\n    // get a new mismatch record ready\n    curr = {\n      start: curr.start + curr.length,\n      length: 0,\n      base: '',\n      type: 'mismatch',\n    }\n  }\n\n  function getTemplateCoordLocal(refCoord: number): number {\n    let templateOffset = lastTemplateOffset\n    let refOffset = lastRefOffset\n    for (\n      let i = lastCigar;\n      i < ops.length && refOffset <= refCoord;\n      i += 2, lastCigar = i\n    ) {\n      const len = +ops[i]\n      const op = ops[i + 1]\n\n      if (op === 'S' || op === 'I') {\n        templateOffset += len\n      } else if (op === 'D' || op === 'P' || op === 'N') {\n        refOffset += len\n      } else if (op !== 'H') {\n        templateOffset += len\n        refOffset += len\n      }\n    }\n    lastTemplateOffset = templateOffset\n    lastRefOffset = refOffset\n\n    return templateOffset - (refOffset - refCoord)\n  }\n\n  // now actually parse the MD string\n  const md = mdstring.match(mdRegex) || []\n  for (let i = 0; i < md.length; i++) {\n    const token = md[i]\n    const num = +token\n    if (!Number.isNaN(num)) {\n      curr.start += num\n    } else if (token.startsWith('^')) {\n      curr.start += token.length - 1\n    } else {\n      // mismatch\n      for (let j = 0; j < token.length; j += 1) {\n        curr.length = 1\n\n        while (lastSkipPos < skips.length) {\n          const mismatch = skips[lastSkipPos]\n          if (curr.start >= mismatch.start) {\n            curr.start += mismatch.length\n            lastSkipPos++\n          } else {\n            break\n          }\n        }\n        const s = getTemplateCoordLocal(curr.start)\n        curr.base = seq[s] || 'X'\n        curr.qual = qual?.[s]\n        curr.altbase = token\n        nextRecord()\n      }\n    }\n  }\n  return mismatchRecords\n}\n\nexport function getMismatches(\n  cigar: string,\n  md?: string,\n  seq?: string,\n  ref?: string,\n  qual?: Buffer,\n) {\n  let mismatches: Mismatch[] = []\n  const ops = parseCigar(cigar)\n\n  // parse the CIGAR tag if it has one\n  if (cigar) {\n    mismatches = mismatches.concat(cigarToMismatches(ops, seq, ref, qual))\n  }\n\n  // now let's look for CRAM or MD mismatches\n  if (md && seq) {\n    mismatches = mismatches.concat(\n      mdToMismatches(md, ops, mismatches, seq, qual),\n    )\n  }\n\n  return mismatches\n}\n// get relative reference sequence positions for positions given relative to\n// the read sequence\nexport function* getNextRefPos(cigarOps: string[], positions: number[]) {\n  let readPos = 0\n  let refPos = 0\n  let currPos = 0\n\n  for (let i = 0; i < cigarOps.length && currPos < positions.length; i += 2) {\n    const len = +cigarOps[i]\n    const op = cigarOps[i + 1]\n    if (op === 'S' || op === 'I') {\n      for (let i = 0; i < len && currPos < positions.length; i++) {\n        if (positions[currPos] === readPos + i) {\n          currPos++\n        }\n      }\n      readPos += len\n    } else if (op === 'D' || op === 'N') {\n      refPos += len\n    } else if (op === 'M' || op === 'X' || op === '=') {\n      for (let i = 0; i < len && currPos < positions.length; i++) {\n        if (positions[currPos] === readPos + i) {\n          yield refPos + i\n          currPos++\n        }\n      }\n      readPos += len\n      refPos += len\n    }\n  }\n}\n\nexport function getModificationProbabilities(feature: Feature) {\n  const m = (getTagAlt(feature, 'ML', 'Ml') as number[] | string) || []\n  return m\n    ? (typeof m === 'string' ? m.split(',').map(e => +e) : m).map(e => e / 255)\n    : (getTagAlt(feature, 'MP', 'Mp') as string | undefined)\n        ?.split('')\n        .map(s => s.charCodeAt(0) - 33)\n        .map(elt => Math.min(1, elt / 50))\n}\n\nexport function getMethBins(feature: Feature) {\n  const fstart = feature.get('start')\n  const fend = feature.get('end')\n  const fstrand = feature.get('strand') as -1 | 0 | 1\n  const flen = fend - fstart\n  const mm = (getTagAlt(feature, 'MM', 'Mm') as string | undefined) || ''\n  const methBins = new Array<number>(flen)\n  const methProbs = new Array<number>(flen)\n  const seq = feature.get('seq') as string | undefined\n  if (seq) {\n    const ops = parseCigar(feature.get('CIGAR'))\n    const probabilities = getModificationProbabilities(feature)\n    const modifications = getModificationPositions(mm, seq, fstrand)\n    let probIndex = 0\n    for (const { type, positions } of modifications) {\n      if (type === 'm') {\n        for (const ref of getNextRefPos(ops, positions)) {\n          const prob = probabilities?.[probIndex] || 0\n          probIndex++\n          if (ref >= 0 && ref < flen) {\n            methBins[ref] = 1\n            methProbs[ref] = prob\n          }\n        }\n      }\n    }\n  }\n  return { methBins, methProbs }\n}\n\nexport function getModificationPositions(\n  mm: string,\n  fseq: string,\n  fstrand: number,\n) {\n  const seq = fstrand === -1 ? revcom(fseq) : fseq\n  const mods = mm.split(';').filter(mod => !!mod)\n  const result = []\n  for (let i = 0; i < mods.length; i++) {\n    const mod = mods[i]\n    const [basemod, ...skips] = mod.split(',')\n\n    // regexes based on parse_mm.pl from hts-specs\n    const matches = basemod.match(modificationRegex)\n    if (!matches) {\n      throw new Error('bad format for MM tag')\n    }\n    const [, base, strand, typestr] = matches\n\n    // can be a multi e.g. C+mh for both meth (m) and hydroxymeth (h) so\n    // split, and they can also be chemical codes (ChEBI) e.g. C+16061\n    const types = typestr.split(/(\\d+|.)/).filter(f => !!f)\n\n    if (strand === '-') {\n      console.warn('unsupported negative strand modifications')\n      // make sure to return a somewhat matching type even in this case\n      result.push({ type: 'unsupported', positions: [] as number[] })\n    }\n\n    // this logic also based on parse_mm.pl from hts-specs is that in the\n    // sequence of the read, if we have a modification type e.g. C+m;2 and a\n    // sequence ACGTACGTAC we skip the two instances of C and go to the last\n    // C\n    for (let j = 0; j < types.length; j++) {\n      const type = types[j]\n      let i = 0\n      const positions = []\n      for (let k = 0; k < skips.length; k++) {\n        let delta = +skips[k]\n        do {\n          if (base === 'N' || base === seq[i]) {\n            delta--\n          }\n          i++\n        } while (delta >= 0 && i < seq.length)\n\n        const temp = i - 1\n        positions.push(fstrand === -1 ? seq.length - 1 - temp : temp)\n      }\n      if (fstrand === -1) {\n        positions.sort((a, b) => a - b)\n      }\n      result.push({\n        type,\n        positions,\n      })\n    }\n  }\n  return result\n}\n\nexport function getModificationTypes(mm: string) {\n  return mm\n    .split(';')\n    .filter(mod => !!mod)\n    .flatMap(mod => {\n      const [basemod] = mod.split(',')\n\n      const matches = basemod.match(modificationRegex)\n      if (!matches) {\n        throw new Error(`bad format for MM tag: ${mm}`)\n      }\n      const typestr = matches[3]\n\n      // can be a multi e.g. C+mh for both meth (m) and hydroxymeth (h) so\n      // split, and they can also be chemical codes (ChEBI) e.g. C+16061\n      return typestr.split(/(\\d+|.)/).filter(f => !!f)\n    })\n}\n\nexport function getOrientedCigar(flip: boolean, cigar: string[]) {\n  if (flip) {\n    const ret = []\n    for (let i = 0; i < cigar.length; i += 2) {\n      const len = cigar[i]\n      let op = cigar[i + 1]\n      if (op === 'D') {\n        op = 'I'\n      } else if (op === 'I') {\n        op = 'D'\n      }\n      ret.push(len, op)\n    }\n    return ret\n  } else {\n    return cigar\n  }\n}\n\nexport function getOrientedMismatches(flip: boolean, cigar: string) {\n  const p = parseCigar(cigar)\n  return cigarToMismatches(flip ? getOrientedCigar(flip, p) : p)\n}\n\nexport function getLengthOnRef(cigar: string) {\n  const cigarOps = parseCigar(cigar)\n  let lengthOnRef = 0\n  for (let i = 0; i < cigarOps.length; i += 2) {\n    const len = +cigarOps[i]\n    const op = cigarOps[i + 1]\n    if (op !== 'H' && op !== 'S' && op !== 'I') {\n      lengthOnRef += len\n    }\n  }\n  return lengthOnRef\n}\n\nexport function getLength(cigar: string) {\n  const cigarOps = parseCigar(cigar)\n  let length = 0\n  for (let i = 0; i < cigarOps.length; i += 2) {\n    const len = +cigarOps[i]\n    const op = cigarOps[i + 1]\n    if (op !== 'D' && op !== 'N') {\n      length += len\n    }\n  }\n  return length\n}\n\nexport function getLengthSansClipping(cigar: string) {\n  const cigarOps = parseCigar(cigar)\n  let length = 0\n  for (let i = 0; i < cigarOps.length; i += 2) {\n    const len = +cigarOps[i]\n    const op = cigarOps[i + 1]\n    if (op !== 'H' && op !== 'S' && op !== 'D' && op !== 'N') {\n      length += len\n    }\n  }\n  return length\n}\n\nexport function getClip(cigar: string, strand: number) {\n  return strand === -1\n    ? +(cigar.match(startClip) || [])[1] || 0\n    : +(cigar.match(endClip) || [])[1] || 0\n}\n\nexport function getTag(f: Feature, tag: string) {\n  const tags = f.get('tags')\n  return tags ? tags[tag] : f.get(tag)\n}\n\n// produces a list of \"feature-like\" object from parsing supplementary\n// alignments in the SA tag\n//\n// @param normalize - used specifically in the linear-read-vs-ref context, it\n// flips features around relative to the original feature. other contexts of\n// usage can keep this false\nexport function featurizeSA(\n  SA: string | undefined,\n  id: string,\n  strand: number,\n  readName: string,\n  normalize?: boolean,\n) {\n  return (\n    SA?.split(';')\n      .filter(aln => !!aln)\n      .map((aln, index) => {\n        const [saRef, saStart, saStrand, saCigar] = aln.split(',')\n        const saLengthOnRef = getLengthOnRef(saCigar)\n        const saLength = getLength(saCigar)\n        const saLengthSansClipping = getLengthSansClipping(saCigar)\n        const saStrandNormalized = saStrand === '-' ? -1 : 1\n        const saClipPos = getClip(\n          saCigar,\n          (normalize ? strand : 1) * saStrandNormalized,\n        )\n        const saRealStart = +saStart - 1\n        return {\n          refName: saRef,\n          start: saRealStart,\n          end: saRealStart + saLengthOnRef,\n          seqLength: saLength,\n          clipPos: saClipPos,\n          CIGAR: saCigar,\n          strand: (normalize ? strand : 1) * saStrandNormalized,\n          uniqueId: `${id}_SA${index}`,\n          mate: {\n            start: saClipPos,\n            end: saClipPos + saLengthSansClipping,\n            refName: readName,\n          },\n        }\n      }) || []\n  )\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config CramAdapter\n * used to configure CRAM adapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = ConfigurationSchema(\n  'CramAdapter',\n  {\n    /**\n     * #slot fetchSizeLimit\n     */\n    fetchSizeLimit: {\n      type: 'number',\n      description:\n        'size in bytes over which to display a warning to the user that too much data will be fetched',\n      defaultValue: 3_000_000,\n    },\n\n    /**\n     * #slot cramLocation\n     */\n    cramLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/my.cram',\n        locationType: 'UriLocation',\n      },\n    },\n\n    /**\n     * #slot craiLocation\n     */\n    craiLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/my.cram.crai',\n        locationType: 'UriLocation',\n      },\n    },\n\n    /**\n     * #slot sequenceAdapter\n     * generally refers to the reference genome assembly's sequence adapter\n     * currently needs to be manually added\n     */\n    sequenceAdapter: {\n      type: 'frozen',\n      description: 'sequence data adapter',\n      defaultValue: null,\n    },\n  },\n  { explicitlyTyped: true },\n)\nexport default configSchema\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\n// locals\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(() => {\n    return new AdapterType({\n      name: 'CramAdapter',\n      displayName: 'CRAM adapter',\n      configSchema,\n      getAdapterClass: () => import('./CramAdapter').then(r => r.default),\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\n/**\n * #config BamAdapter\n * used to configure BAM adapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = ConfigurationSchema(\n  'BamAdapter',\n  {\n    /**\n     * #slot\n     */\n    bamLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/my.bam', locationType: 'UriLocation' },\n    },\n\n    index: ConfigurationSchema('BamIndex', {\n      /**\n       * #slot index.indexType\n       */\n      indexType: {\n        model: types.enumeration('IndexType', ['BAI', 'CSI']),\n        type: 'stringEnum',\n        defaultValue: 'BAI',\n      },\n      /**\n       * #slot index.location\n       */\n      location: {\n        type: 'fileLocation',\n        defaultValue: {\n          uri: '/path/to/my.bam.bai',\n          locationType: 'UriLocation',\n        },\n      },\n    }),\n    /**\n     * #slot\n     */\n    fetchSizeLimit: {\n      type: 'number',\n      description:\n        'size to fetch in bytes over which to display a warning to the user that too much data will be fetched',\n      defaultValue: 5_000_000,\n    },\n    /**\n     * #slot\n     * generally refers to the reference genome assembly's sequence adapter\n     * currently needs to be manually added\n     */\n    sequenceAdapter: {\n      type: 'frozen',\n      description:\n        'sequence data adapter, used to calculate SNPs when BAM reads lacking MD tags',\n      defaultValue: null,\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default configSchema\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(() => {\n    return new AdapterType({\n      name: 'BamAdapter',\n      displayName: 'BAM adapter',\n      configSchema,\n      getAdapterClass: () => import('./BamAdapter').then(r => r.default),\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n/**\n * #config HtsgetBamAdapter\n * Used to fetch data from Htsget endpoints in BAM format, using the gmod/bam library\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst HtsgetBamAdapter = ConfigurationSchema(\n  'HtsgetBamAdapter',\n  {\n    /**\n     * #slot\n     */\n    htsgetBase: {\n      type: 'string',\n      description: 'the base URL to fetch from',\n      defaultValue: '',\n    },\n    /**\n     * #slot\n     */\n    htsgetTrackId: {\n      type: 'string',\n      description: 'the trackId, which is appended to the base URL',\n      defaultValue: '',\n    },\n    /**\n     * #slot\n     */\n    sequenceAdapter: {\n      type: 'frozen',\n      description:\n        'sequence data adapter, used to calculate SNPs when BAM reads lacking MD tags',\n      defaultValue: null,\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default HtsgetBamAdapter\n","import configSchema from './configSchema'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(() => {\n    return new AdapterType({\n      name: 'HtsgetBamAdapter',\n      displayName: 'Htsget BAM adapter',\n      adapterMetadata: {\n        hiddenFromGUI: true,\n      },\n      configSchema,\n      getAdapterClass: () => import('./HtsgetBamAdapter').then(r => r.default),\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config SNPCoverageAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = ConfigurationSchema(\n  'SNPCoverageAdapter',\n  {\n    /**\n     * #slot\n     * normally refers to a BAM or CRAM adapter\n     */\n    subadapter: {\n      type: 'frozen',\n      defaultValue: null,\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default configSchema\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\nimport configSchema from './configSchema'\n\nexport default function (pluginManager: PluginManager) {\n  pluginManager.addAdapterType(() => {\n    return new AdapterType({\n      name: 'SNPCoverageAdapter',\n      displayName: 'SNPCoverage adapter',\n      adapterMetadata: {\n        hiddenFromGUI: true,\n      },\n      getAdapterClass: () =>\n        import('./SNPCoverageAdapter').then(r => r.default),\n      configSchema,\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config SNPCoverageRenderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst SNPCoverageRenderer = ConfigurationSchema(\n  'SNPCoverageRenderer',\n  {\n    /**\n     * #slot\n     */\n    clipColor: {\n      type: 'color',\n      description: 'the color of the clipping marker',\n      defaultValue: 'red',\n    },\n    /**\n     * #slot\n     */\n    indicatorThreshold: {\n      type: 'number',\n      description:\n        'the proportion of reads containing a insertion/clip indicator',\n      defaultValue: 0.4,\n    },\n    /**\n     * #slot\n     */\n    drawArcs: {\n      type: 'boolean',\n      description: 'Draw sashimi-style arcs for intron features',\n      defaultValue: true,\n    },\n    /**\n     * #slot\n     */\n    drawInterbaseCounts: {\n      type: 'boolean',\n      description:\n        'draw count \"upsidedown histogram\" of the interbase events that don\\'t contribute to the coverage count so are not drawn in the normal histogram',\n      defaultValue: true,\n    },\n    /**\n     * #slot\n     */\n    drawIndicators: {\n      type: 'boolean',\n      description:\n        'draw a triangular indicator where an event has been detected',\n      defaultValue: true,\n    },\n\n    color: {\n      type: 'color',\n      description: 'Background color for the SNPCoverage renderer',\n      defaultValue: '#d3d3d3',\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default SNPCoverageRenderer\n","import { createJBrowseTheme } from '@jbrowse/core/ui'\nimport { featureSpanPx, bpSpanPx, Feature } from '@jbrowse/core/util'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { RenderArgsDeserialized as FeatureRenderArgsDeserialized } from '@jbrowse/core/pluggableElementTypes/renderers/FeatureRendererType'\nimport {\n  getOrigin,\n  getScale,\n  ScaleOpts,\n  WiggleBaseRenderer,\n  YSCALEBAR_LABEL_OFFSET,\n} from '@jbrowse/plugin-wiggle'\n\nexport interface RenderArgsDeserialized extends FeatureRenderArgsDeserialized {\n  bpPerPx: number\n  height: number\n  highResolutionScaling: number\n  scaleOpts: ScaleOpts\n}\n\nexport interface RenderArgsDeserializedWithFeatures\n  extends RenderArgsDeserialized {\n  features: Map<string, Feature>\n  ticks: { values: number[] }\n  displayCrossHatches: boolean\n  modificationTagMap?: Record<string, string | undefined>\n}\n\ntype Counts = {\n  [key: string]: { total: number; strands: { [key: string]: number } }\n}\n\ninterface SNPInfo {\n  cov: Counts\n  noncov: Counts\n  total: number\n}\n\nconst fudgeFactor = 0.6\n\nexport default class SNPCoverageRenderer extends WiggleBaseRenderer {\n  // note: the snps are drawn on linear scale even if the data is drawn in log\n  // scape hence the two different scales being used\n  async draw(\n    ctx: CanvasRenderingContext2D,\n    props: RenderArgsDeserializedWithFeatures,\n  ) {\n    const {\n      features,\n      regions,\n      bpPerPx,\n      displayCrossHatches,\n      modificationTagMap = {},\n      scaleOpts,\n      height: unadjustedHeight,\n      theme: configTheme,\n      config: cfg,\n      ticks,\n    } = props\n    const theme = createJBrowseTheme(configTheme)\n    const [region] = regions\n    const width = (region.end - region.start) / bpPerPx\n\n    // the adjusted height takes into account YSCALEBAR_LABEL_OFFSET from the\n    // wiggle display, and makes the height of the actual drawn area add\n    // \"padding\" to the top and bottom of the display\n    const offset = YSCALEBAR_LABEL_OFFSET\n    const height = unadjustedHeight - offset * 2\n\n    const { domain } = scaleOpts\n    if (!domain) {\n      return\n    }\n    const opts = { ...scaleOpts, range: [0, height] }\n    const viewScale = getScale(opts)\n\n    // clipping and insertion indicators, uses a smaller height/2 scale\n    const indicatorViewScale = getScale({\n      ...opts,\n      range: [0, height / 2],\n      scaleType: 'linear',\n    })\n    const originY = getOrigin(scaleOpts.scaleType)\n    const originLinear = getOrigin('linear')\n\n    const indicatorThreshold = readConfObject(cfg, 'indicatorThreshold')\n    const drawInterbaseCounts = readConfObject(cfg, 'drawInterbaseCounts')\n    const drawArcs = readConfObject(cfg, 'drawArcs')\n    const drawIndicators = readConfObject(cfg, 'drawIndicators')\n\n    // get the y coordinate that we are plotting at, this can be log scale\n    const toY = (n: number) => height - (viewScale(n) || 0) + offset\n    const toHeight = (n: number) => toY(originY) - toY(n)\n    // used specifically for indicator\n    const toY2 = (n: number) => height - (indicatorViewScale(n) || 0) + offset\n    const toHeight2 = (n: number) => toY2(originLinear) - toY2(n)\n\n    const { bases } = theme.palette\n    const colorForBase: { [key: string]: string } = {\n      A: bases.A.main,\n      C: bases.C.main,\n      G: bases.G.main,\n      T: bases.T.main,\n      insertion: 'purple',\n      softclip: 'blue',\n      hardclip: 'red',\n      total: readConfObject(cfg, 'color'),\n      meth: 'red',\n      unmeth: 'blue',\n    }\n\n    const feats = [...features.values()]\n    const coverage = feats.filter(f => f.get('type') !== 'skip')\n    const skips = feats.filter(f => f.get('type') === 'skip')\n\n    // Use two pass rendering, which helps in visualizing the SNPs at higher\n    // bpPerPx First pass: draw the gray background\n    ctx.fillStyle = colorForBase.total\n    for (let i = 0; i < coverage.length; i++) {\n      const feature = coverage[i]\n      const [leftPx, rightPx] = featureSpanPx(feature, region, bpPerPx)\n      const w = rightPx - leftPx + fudgeFactor\n      const score = feature.get('score') as number\n      ctx.fillRect(leftPx, toY(score), w, toHeight(score))\n    }\n\n    // Keep track of previous total which we will use it to draw the interbase\n    // indicator (if there is a sudden clip, there will be no read coverage but\n    // there will be \"clip\" coverage) at that position beyond the read. if the\n    // clip is right at a block boundary then prevTotal will not be available,\n    // so this is a best attempt to plot interbase indicator at the \"cliffs\"\n    let prevTotal = 0\n\n    // extraHorizontallyFlippedOffset is used to draw interbase items, which\n    // are located to the left when forward and right when reversed\n    const extraHorizontallyFlippedOffset = region.reversed ? 1 / bpPerPx : 0\n\n    // Second pass: draw the SNP data, and add a minimum feature width of 1px\n    // which can be wider than the actual bpPerPx This reduces overdrawing of\n    // the grey background over the SNPs\n\n    for (let i = 0; i < coverage.length; i++) {\n      const feature = coverage[i]\n      const [leftPx, rightPx] = featureSpanPx(feature, region, bpPerPx)\n\n      const score = feature.get('score') as number\n      const snpinfo = feature.get('snpinfo') as SNPInfo\n      const w = Math.max(rightPx - leftPx, 1)\n      const totalScore = snpinfo.total\n      const keys = Object.keys(snpinfo.cov).sort()\n\n      let curr = 0\n      for (let i = 0; i < keys.length; i++) {\n        const base = keys[i]\n        const { total } = snpinfo.cov[base]\n        ctx.fillStyle =\n          colorForBase[base] ||\n          modificationTagMap[base.replace('mod_', '')] ||\n          'black'\n\n        const height = toHeight(score)\n        const bottom = toY(score) + height\n        ctx.fillRect(\n          Math.round(leftPx),\n          bottom - ((total + curr) / score) * height,\n          w,\n          (total / score) * height,\n        )\n        curr += total\n      }\n\n      const interbaseEvents = Object.keys(snpinfo.noncov)\n      const indicatorHeight = 4.5\n      if (drawInterbaseCounts) {\n        let curr = 0\n        for (let i = 0; i < interbaseEvents.length; i++) {\n          const base = interbaseEvents[i]\n          const { total } = snpinfo.noncov[base]\n          const r = 0.6\n          ctx.fillStyle = colorForBase[base]\n          ctx.fillRect(\n            leftPx - r + extraHorizontallyFlippedOffset,\n            indicatorHeight + toHeight2(curr),\n            r * 2,\n            toHeight2(total),\n          )\n          curr += total\n        }\n      }\n\n      if (drawIndicators) {\n        let accum = 0\n        let max = 0\n        let maxBase = ''\n        for (let i = 0; i < interbaseEvents.length; i++) {\n          const base = interbaseEvents[i]\n          const { total } = snpinfo.noncov[base]\n          accum += total\n          if (total > max) {\n            max = total\n            maxBase = base\n          }\n        }\n\n        // avoid drawing a bunch of indicators if coverage is very low e.g.\n        // less than 7, uses the prev total in the case of the \"cliff\"\n        const indicatorComparatorScore = Math.max(totalScore, prevTotal)\n        if (\n          accum > indicatorComparatorScore * indicatorThreshold &&\n          indicatorComparatorScore > 7\n        ) {\n          ctx.fillStyle = colorForBase[maxBase]\n          ctx.beginPath()\n          const l = leftPx + extraHorizontallyFlippedOffset\n          ctx.moveTo(l - 3.5, 0)\n          ctx.lineTo(l + 3.5, 0)\n          ctx.lineTo(l, indicatorHeight)\n          ctx.fill()\n        }\n      }\n      prevTotal = totalScore\n    }\n\n    if (drawArcs) {\n      for (let i = 0; i < skips.length; i++) {\n        const f = skips[i]\n        const [left, right] = bpSpanPx(\n          f.get('start'),\n          f.get('end'),\n          region,\n          bpPerPx,\n        )\n\n        ctx.beginPath()\n        const str = f.get('strand') as number\n        const xs = f.get('xs') as string\n        const pos = 'rgba(255,200,200,0.7)'\n        const neg = 'rgba(200,200,255,0.7)'\n        const neutral = 'rgba(200,200,200,0.7)'\n\n        if (xs === '+') {\n          ctx.strokeStyle = pos\n        } else if (xs === '-') {\n          ctx.strokeStyle = neg\n        } else if (str === 1) {\n          ctx.strokeStyle = pos\n        } else if (str === -1) {\n          ctx.strokeStyle = neg\n        } else {\n          ctx.strokeStyle = neutral\n        }\n\n        ctx.lineWidth = Math.log(f.get('score') + 1)\n        ctx.moveTo(left, height - offset * 2)\n        ctx.bezierCurveTo(left, 0, right, 0, right, height - offset * 2)\n        ctx.stroke()\n      }\n    }\n\n    if (displayCrossHatches) {\n      ctx.lineWidth = 1\n      ctx.strokeStyle = 'rgba(140,140,140,0.8)'\n      ticks.values.forEach(tick => {\n        ctx.beginPath()\n        ctx.moveTo(0, Math.round(toY(tick)))\n        ctx.lineTo(width, Math.round(toY(tick)))\n        ctx.stroke()\n      })\n    }\n  }\n}\n","import configSchema from './configSchema'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport SNPCoverageRenderer from './SNPCoverageRenderer'\n\nimport { WiggleRendering } from '@jbrowse/plugin-wiggle'\n\nexport default function register(pluginManager: PluginManager) {\n  pluginManager.addRendererType(\n    () =>\n      new SNPCoverageRenderer({\n        name: 'SNPCoverageRenderer',\n        ReactComponent: WiggleRendering,\n        configSchema,\n        pluginManager,\n      }),\n  )\n}\n","import deepEqual from 'fast-deep-equal'\nimport { LayoutSession } from '@jbrowse/core/pluggableElementTypes/renderers/BoxRendererType'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport SerializableFilterChain from '@jbrowse/core/pluggableElementTypes/renderers/util/serializableFilterChain'\nimport GranularRectLayout from '@jbrowse/core/util/layouts/GranularRectLayout'\nimport MultiLayout from '@jbrowse/core/util/layouts/MultiLayout'\nimport { readConfObject } from '@jbrowse/core/configuration'\n\nexport interface PileupLayoutSessionProps {\n  config: AnyConfigurationModel\n  bpPerPx: number\n  filters: SerializableFilterChain\n  filterBy: unknown\n  sortedBy: unknown\n  showSoftClip: unknown\n}\n\ntype MyMultiLayout = MultiLayout<GranularRectLayout<unknown>, unknown>\ninterface CachedPileupLayout {\n  layout: MyMultiLayout\n  config: AnyConfigurationModel\n  filters: SerializableFilterChain\n  filterBy: unknown\n  sortedBy: unknown\n  showSoftClip: boolean\n}\n// Sorting and revealing soft clip changes the layout of Pileup renderer\n// Adds extra conditions to see if cached layout is valid\nexport class PileupLayoutSession extends LayoutSession {\n  sortedBy: unknown\n  filterBy: unknown\n\n  showSoftClip = false\n\n  constructor(args: PileupLayoutSessionProps) {\n    super(args)\n    this.config = args.config\n  }\n\n  cachedLayoutIsValid(cachedLayout: CachedPileupLayout) {\n    return (\n      super.cachedLayoutIsValid(cachedLayout) &&\n      this.showSoftClip === cachedLayout.showSoftClip &&\n      deepEqual(this.sortedBy, cachedLayout.sortedBy) &&\n      deepEqual(this.filterBy, cachedLayout.filterBy)\n    )\n  }\n\n  cachedLayout: CachedPileupLayout | undefined\n\n  get layout(): MyMultiLayout {\n    if (!this.cachedLayout || !this.cachedLayoutIsValid(this.cachedLayout)) {\n      this.cachedLayout = {\n        layout: this.makeLayout(),\n        config: readConfObject(this.config),\n        filters: this.filters,\n        filterBy: this.filterBy,\n        sortedBy: this.sortedBy,\n        showSoftClip: this.showSoftClip,\n      }\n    }\n    return this.cachedLayout.layout\n  }\n}\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { iterMap } from '@jbrowse/core/util'\n\n// locals\nimport { layoutFeature } from './layoutFeature'\nimport { RenderArgsDeserializedWithFeaturesAndLayout } from './PileupRenderer'\nimport { sortFeature } from './sortUtil'\n\n// layout determines the height of the canvas that we use to render\nexport function layoutFeats(\n  props: RenderArgsDeserializedWithFeaturesAndLayout,\n) {\n  const { layout, features, sortedBy, config, bpPerPx, showSoftClip, regions } =\n    props\n  const [region] = regions\n  if (!layout) {\n    throw new Error(`layout required`)\n  }\n  if (!layout.addRect) {\n    throw new Error('invalid layout object')\n  }\n\n  const featureMap =\n    sortedBy?.type && region.start === sortedBy.pos\n      ? sortFeature(features, sortedBy)\n      : features\n\n  const heightPx = readConfObject(config, 'height')\n  const displayMode = readConfObject(config, 'displayMode')\n  return iterMap(\n    featureMap.values(),\n    feature =>\n      layoutFeature({\n        feature,\n        layout,\n        bpPerPx,\n        region,\n        showSoftClip,\n        heightPx,\n        displayMode,\n      }),\n    featureMap.size,\n  )\n}\n","import { doesIntersect2, Feature } from '@jbrowse/core/util'\nimport { Mismatch } from '../MismatchParser'\n\ninterface SortObject {\n  pos: number\n  type: string\n  tag?: string\n}\nexport const sortFeature = (\n  features: Map<string, Feature>,\n  sortedBy: SortObject,\n) => {\n  const featureArray = Array.from(features.values())\n  const featuresInCenterLine: Feature[] = []\n  const featuresOutsideCenter: Feature[] = []\n  const { pos, type } = sortedBy\n\n  // only sort on features that intersect center line, append those outside post-sort\n  featureArray.forEach(innerArray => {\n    const feature = innerArray\n    const start = feature.get('start')\n    const end = feature.get('end')\n    if (doesIntersect2(pos - 1, pos, start, end)) {\n      featuresInCenterLine.push(innerArray)\n    } else {\n      featuresOutsideCenter.push(innerArray)\n    }\n  })\n\n  const isCram = featureArray.length ? featureArray[0].get('tags') : false\n  switch (type) {\n    case 'Start location': {\n      featuresInCenterLine.sort((a, b) => a.get('start') - b.get('start'))\n      break\n    }\n\n    case 'tag': {\n      const tag = sortedBy.tag as string\n      const getTag = (f: Feature, t: string) => {\n        return isCram ? f.get('tags')[t] : f.get(t)\n      }\n      const isString =\n        featuresInCenterLine[0] &&\n        typeof getTag(featuresInCenterLine[0], tag) === 'string'\n      if (isString) {\n        featuresInCenterLine.sort((a, b) =>\n          getTag(b, tag).localeCompare(getTag(a, tag)),\n        )\n      } else {\n        featuresInCenterLine.sort(\n          (a, b) => (getTag(b, tag) || 0) - (getTag(a, tag) || 0),\n        )\n      }\n      break\n    }\n\n    // first sort all mismatches, then all reference bases at the end\n    case 'Base pair': {\n      const baseSortArray: [string, Mismatch][] = []\n      featuresInCenterLine.forEach(feature => {\n        const mismatches: Mismatch[] = feature.get('mismatches')\n        mismatches.forEach(mismatch => {\n          const start = feature.get('start')\n          const offset = start + mismatch.start + 1\n          const consuming =\n            mismatch.type === 'insertion' || mismatch.type === 'softclip'\n          const len = consuming ? 0 : mismatch.length\n          if (pos >= offset && pos < offset + len) {\n            baseSortArray.push([feature.id(), mismatch])\n          }\n        })\n      })\n\n      const baseMap = new Map(baseSortArray)\n      featuresInCenterLine.sort((a, b) => {\n        const aMismatch = baseMap.get(a.id())\n        const bMismatch = baseMap.get(b.id())\n        const acode = bMismatch && bMismatch.base.toUpperCase()\n        const bcode = aMismatch && aMismatch.base.toUpperCase()\n        if (acode === bcode && acode === '*') {\n          // @ts-expect-error\n          return aMismatch.length - bMismatch.length\n        }\n        return (\n          (acode ? acode.charCodeAt(0) : 0) - (bcode ? bcode.charCodeAt(0) : 0)\n        )\n      })\n\n      break\n    }\n\n    // sorts positive strands then negative strands\n    case 'Read strand': {\n      featuresInCenterLine.sort((a, b) =>\n        a.get('strand') <= b.get('strand') ? 1 : -1,\n      )\n      break\n    }\n  }\n\n  return new Map(\n    [...featuresInCenterLine, ...featuresOutsideCenter].map(feature => [\n      feature.id(),\n      feature,\n    ]),\n  )\n}\n","import { bpSpanPx, Feature, Region } from '@jbrowse/core/util'\nimport { BaseLayout } from '@jbrowse/core/util/layouts'\n// locals\nimport { Mismatch } from '../MismatchParser'\n\nexport interface LayoutRecord {\n  feature: Feature\n  leftPx: number\n  rightPx: number\n  topPx: number\n  heightPx: number\n}\n\nexport function layoutFeature({\n  feature,\n  layout,\n  bpPerPx,\n  region,\n  showSoftClip,\n  heightPx,\n  displayMode,\n}: {\n  feature: Feature\n  layout: BaseLayout<Feature>\n  bpPerPx: number\n  region: Region\n  showSoftClip?: boolean\n  heightPx: number\n  displayMode: string\n}): LayoutRecord | null {\n  let expansionBefore = 0\n  let expansionAfter = 0\n\n  // Expand the start and end of feature when softclipping enabled\n  if (showSoftClip) {\n    const mismatches = feature.get('mismatches') as Mismatch[]\n    const seq = feature.get('seq') as string\n    if (seq) {\n      for (let i = 0; i < mismatches.length; i += 1) {\n        const { type, start, cliplen = 0 } = mismatches[i]\n        if (type === 'softclip') {\n          start === 0 ? (expansionBefore = cliplen) : (expansionAfter = cliplen)\n        }\n      }\n    }\n  }\n\n  const [leftPx, rightPx] = bpSpanPx(\n    feature.get('start') - expansionBefore,\n    feature.get('end') + expansionAfter,\n    region,\n    bpPerPx,\n  )\n\n  if (displayMode === 'compact') {\n    heightPx /= 3\n  }\n  if (feature.get('refName') !== region.refName) {\n    throw new Error(\n      `feature ${feature.id()} is not on the current region's reference sequence ${\n        region.refName\n      }`,\n    )\n  }\n  const topPx = layout.addRect(\n    feature.id(),\n    feature.get('start') - expansionBefore,\n    feature.get('end') + expansionAfter,\n    heightPx,\n    feature,\n  )\n  if (topPx === null) {\n    return null\n  }\n\n  return {\n    feature,\n    leftPx,\n    rightPx,\n    topPx: displayMode === 'collapse' ? 0 : topPx,\n    heightPx,\n  }\n}\n","import { Feature, measureText } from '@jbrowse/core/util'\nimport { Theme } from '@mui/material'\n\nexport function fillRect(\n  ctx: CanvasRenderingContext2D,\n  l: number,\n  t: number,\n  w: number,\n  h: number,\n  cw: number,\n  color?: string,\n) {\n  if (l + w < 0 || l > cw) {\n    return\n  } else {\n    if (color) {\n      ctx.fillStyle = color\n    }\n    ctx.fillRect(l, t, w, h)\n  }\n}\n\nexport function getColorBaseMap(theme: Theme) {\n  const { bases } = theme.palette\n  return {\n    A: bases.A.main,\n    C: bases.C.main,\n    G: bases.G.main,\n    T: bases.T.main,\n    deletion: '#808080', // gray\n  }\n}\n\nexport function getContrastBaseMap(theme: Theme) {\n  return Object.fromEntries(\n    Object.entries(getColorBaseMap(theme)).map(([key, value]) => [\n      key,\n      theme.palette.getContrastText(value),\n    ]),\n  )\n}\n\nexport function shouldDrawSNPsMuted(type?: string) {\n  return ['methylation', 'modifications'].includes(type || '')\n}\n\nexport function shouldDrawIndels() {\n  return true\n}\n\nexport interface LayoutFeature {\n  heightPx: number\n  topPx: number\n  feature: Feature\n}\n\n// get width and height of chars the height is an approximation: width letter M\n// is approximately the height\nexport function getCharWidthHeight() {\n  const charWidth = measureText('A')\n  const charHeight = measureText('M') - 2\n  return { charWidth, charHeight }\n}\n","import {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { Feature } from '@jbrowse/core/util'\nimport { fillColor } from '../shared/color'\nimport { orientationTypes } from '../util'\n\nexport function colorByInsertSize(feature: Feature) {\n  return feature.get('is_paired') &&\n    feature.get('refName') !== feature.get('next_ref')\n    ? '#555'\n    : `hsl(${Math.abs(feature.get('template_length')) / 10},50%,50%)`\n}\n\nexport function colorByMappingQuality(feature: Feature) {\n  return `hsl(${feature.get('mq')},50%,50%)`\n}\n\nfunction getOrientation(feature: Feature, config: AnyConfigurationModel) {\n  const orientationType = readConfObject(config, 'orientationType') as\n    | 'fr'\n    | 'ff'\n    | 'rf'\n  const type = orientationTypes[orientationType]\n  const orientation = type[feature.get('pair_orientation') as string]\n  return {\n    LR: 'color_pair_lr' as const,\n    RR: 'color_pair_rr' as const,\n    RL: 'color_pair_rl' as const,\n    LL: 'color_pair_ll' as const,\n  }[orientation]\n}\n\nexport function colorByStrand(feature: Feature) {\n  return feature.get('strand') === -1 ? '#8F8FD8' : '#EC8B8B'\n}\n\nexport function colorByOrientation(\n  feature: Feature,\n  config: AnyConfigurationModel,\n) {\n  return fillColor[getOrientation(feature, config) || 'color_nostrand']\n}\nfunction getStranded(feature: Feature) {\n  const flags = feature.get('flags')\n  const strand = feature.get('strand')\n  // is paired\n  if (flags & 1) {\n    const revflag = flags & 64\n    const flipper = revflag ? -1 : 1\n\n    // proper pairing\n    if (flags & 2) {\n      return strand * flipper === 1 ? 'color_rev_strand' : 'color_fwd_strand'\n    } else if (feature.get('multi_segment_next_segment_unmapped')) {\n      return strand * flipper === 1\n        ? 'color_rev_missing_mate'\n        : 'color_fwd_missing_mate'\n    } else if (feature.get('refName') === feature.get('next_refName')) {\n      return strand * flipper === 1\n        ? 'color_rev_strand_not_proper'\n        : 'color_fwd_strand_not_proper'\n    } else {\n      // should only leave aberrant chr\n      return strand === 1 ? 'color_fwd_diff_chr' : 'color_rev_diff_chr'\n    }\n  }\n  return strand === 1 ? 'color_fwd_strand' : 'color_rev_strand'\n}\n\nexport function colorByStrandedRnaSeq(feature: Feature) {\n  return fillColor[getStranded(feature)]\n}\n","import {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { Feature } from '@jbrowse/core/util'\nimport { fillColor } from '../shared/color'\nimport {\n  colorByInsertSize,\n  colorByMappingQuality,\n  colorByOrientation,\n  colorByStrand,\n  colorByStrandedRnaSeq,\n} from './colorBy'\n\nexport function getAlignmentShapeColor({\n  colorType,\n  tag,\n  feature,\n  config,\n  defaultColor,\n  colorTagMap,\n}: {\n  colorType: string\n  tag: string\n  feature: Feature\n  defaultColor: boolean\n  config: AnyConfigurationModel\n  colorTagMap: Record<string, string>\n}) {\n  // first pass for simple color changes that change the color of the\n  // alignment\n  switch (colorType) {\n    case 'insertSize':\n      return colorByInsertSize(feature)\n    case 'strand':\n      return colorByStrand(feature)\n    case 'mappingQuality':\n      return colorByMappingQuality(feature)\n    case 'pairOrientation':\n      return colorByOrientation(feature, config)\n    case 'stranded':\n      return colorByStrandedRnaSeq(feature)\n    case 'xs':\n    case 'tag': {\n      const tags = feature.get('tags')\n      const val = tags ? tags[tag] : feature.get(tag)\n\n      if (tag === 'XS' || tag === 'TS') {\n        return fillColor[\n          {\n            '-': 'color_rev_strand' as const,\n            '+': 'color_fwd_strand' as const,\n          }[val as '-' | '+'] || 'color_nostrand'\n        ]\n      } else if (tag === 'ts') {\n        return fillColor[\n          {\n            '-':\n              feature.get('strand') === -1\n                ? ('color_fwd_strand' as const)\n                : ('color_rev_strand' as const),\n            '+':\n              feature.get('strand') === -1\n                ? ('color_rev_strand' as const)\n                : ('color_fwd_strand' as const),\n          }[val as '-' | '+'] || 'color_nostrand'\n        ]\n      } else {\n        return colorTagMap[val] || fillColor['color_nostrand']\n      }\n    }\n    case 'insertSizeAndPairOrientation':\n      break\n\n    case 'modifications':\n    case 'methylation':\n      // this coloring is similar to igv.js, and is helpful to color negative\n      // strand reads differently because their c-g will be flipped (e.g. g-c\n      // read right to left)\n      return feature.get('flags') & 16 ? '#c8dcc8' : '#c8c8c8'\n\n    default:\n      return defaultColor\n        ? 'lightgrey'\n        : readConfObject(config, 'color', { feature })\n  }\n}\n","import { LayoutFeature } from './util'\n\nimport { getAlignmentShapeColor } from './getAlignmentShapeColor'\nimport { renderAlignmentShape } from './renderAlignmentShape'\nimport { renderPerBaseQuality } from './renderPerBaseQuality'\nimport { renderPerBaseLettering } from './renderPerBaseLettering'\nimport { renderModifications } from './renderModifications'\nimport { renderMethylation } from './renderMethylation'\nimport { RenderArgsWithColor } from './makeImageData'\n\nexport function renderAlignment({\n  ctx,\n  feat,\n  renderArgs,\n  colorForBase,\n  contrastForBase,\n  charWidth,\n  charHeight,\n  defaultColor,\n  canvasWidth,\n}: {\n  ctx: CanvasRenderingContext2D\n  feat: LayoutFeature\n  renderArgs: RenderArgsWithColor\n  colorForBase: Record<string, string>\n  contrastForBase: Record<string, string>\n  charWidth: number\n  charHeight: number\n  defaultColor: boolean\n  canvasWidth: number\n}) {\n  const { config, bpPerPx, regions, colorBy, colorTagMap = {} } = renderArgs\n  const { tag = '', type: colorType = '' } = colorBy || {}\n  const { feature } = feat\n  const region = regions[0]\n\n  ctx.fillStyle = getAlignmentShapeColor({\n    feature,\n    config,\n    tag,\n    defaultColor,\n    colorType,\n    colorTagMap,\n  })\n\n  renderAlignmentShape({ ctx, feat, renderArgs })\n\n  // second pass for color types that render per-base things that go over the\n  // existing drawing\n  switch (colorType) {\n    case 'perBaseQuality':\n      renderPerBaseQuality({\n        ctx,\n        feat,\n        region,\n        bpPerPx,\n        canvasWidth,\n      })\n      break\n\n    case 'perBaseLettering':\n      renderPerBaseLettering({\n        ctx,\n        feat,\n        region,\n        bpPerPx,\n        colorForBase,\n        contrastForBase,\n        charWidth,\n        charHeight,\n        canvasWidth,\n      })\n      break\n\n    case 'modifications':\n      renderModifications({\n        ctx,\n        feat,\n        region,\n        bpPerPx,\n        renderArgs,\n        canvasWidth,\n      })\n      break\n\n    case 'methylation':\n      renderMethylation({\n        ctx,\n        feat,\n        region,\n        bpPerPx,\n        renderArgs,\n        canvasWidth,\n      })\n      break\n  }\n}\n","import { bpSpanPx } from '@jbrowse/core/util'\nimport { RenderArgsDeserialized } from './PileupRenderer'\nimport { LayoutFeature } from './util'\n\nexport function renderAlignmentShape({\n  ctx,\n  feat,\n  renderArgs,\n}: {\n  ctx: CanvasRenderingContext2D\n  feat: LayoutFeature\n  renderArgs: RenderArgsDeserialized\n}) {\n  const { regions, bpPerPx } = renderArgs\n  const { heightPx, topPx, feature } = feat\n  const [region] = regions\n  const s = feature.get('start')\n  const e = feature.get('end')\n  const [leftPx, rightPx] = bpSpanPx(s, e, region, bpPerPx)\n  const flip = region.reversed ? -1 : 1\n  const strand = feature.get('strand') * flip\n  if (bpPerPx < 10) {\n    if (strand === -1) {\n      ctx.beginPath()\n      ctx.moveTo(leftPx - 5, topPx + heightPx / 2)\n      ctx.lineTo(leftPx, topPx + heightPx)\n      ctx.lineTo(rightPx, topPx + heightPx)\n      ctx.lineTo(rightPx, topPx)\n      ctx.lineTo(leftPx, topPx)\n      ctx.closePath()\n      ctx.fill()\n    } else {\n      ctx.beginPath()\n      ctx.moveTo(leftPx, topPx)\n      ctx.lineTo(leftPx, topPx + heightPx)\n      ctx.lineTo(rightPx, topPx + heightPx)\n      ctx.lineTo(rightPx + 5, topPx + heightPx / 2)\n      ctx.lineTo(rightPx, topPx)\n      ctx.closePath()\n      ctx.fill()\n    }\n  } else {\n    ctx.fillRect(leftPx, topPx, rightPx - leftPx, heightPx)\n  }\n}\n","import { bpSpanPx, Region } from '@jbrowse/core/util'\nimport { parseCigar } from '../MismatchParser'\nimport { fillRect, LayoutFeature } from './util'\n\nexport function renderPerBaseQuality({\n  ctx,\n  feat,\n  region,\n  bpPerPx,\n  canvasWidth,\n}: {\n  ctx: CanvasRenderingContext2D\n  feat: LayoutFeature\n  region: Region\n  bpPerPx: number\n  canvasWidth: number\n}) {\n  const { feature, topPx, heightPx } = feat\n  const qual: string = feature.get('qual') || ''\n  const scores = qual.split(' ').map(val => +val)\n  const cigarOps = parseCigar(feature.get('CIGAR'))\n  const w = 1 / bpPerPx\n  const start = feature.get('start')\n  let soffset = 0 // sequence offset\n  let roffset = 0 // reference offset\n\n  for (let i = 0; i < cigarOps.length; i += 2) {\n    const len = +cigarOps[i]\n    const op = cigarOps[i + 1]\n    if (op === 'S' || op === 'I') {\n      soffset += len\n    } else if (op === 'D' || op === 'N') {\n      roffset += len\n    } else if (op === 'M' || op === 'X' || op === '=') {\n      for (let m = 0; m < len; m++) {\n        const score = scores[soffset + m]\n        const start0 = start + roffset + m\n        const leftPx = bpSpanPx(start0, start0 + 1, region, bpPerPx)[0]\n        const c = `hsl(${score === 255 ? 150 : score * 1.5},55%,50%)`\n        fillRect(ctx, leftPx, topPx, w + 0.5, heightPx, canvasWidth, c)\n      }\n      soffset += len\n      roffset += len\n    }\n  }\n}\n","import { bpSpanPx, Region } from '@jbrowse/core/util'\nimport { parseCigar } from '../MismatchParser'\nimport { fillRect, LayoutFeature } from './util'\n\nexport function renderPerBaseLettering({\n  ctx,\n  feat,\n  region,\n  bpPerPx,\n  colorForBase,\n  contrastForBase,\n  charWidth,\n  charHeight,\n  canvasWidth,\n}: {\n  ctx: CanvasRenderingContext2D\n  feat: LayoutFeature\n  region: Region\n  bpPerPx: number\n  colorForBase: Record<string, string>\n  contrastForBase: Record<string, string>\n  charWidth: number\n  charHeight: number\n  canvasWidth: number\n}) {\n  const heightLim = charHeight - 2\n  const { feature, topPx, heightPx } = feat\n  const seq = feature.get('seq') as string | undefined\n  const cigarOps = parseCigar(feature.get('CIGAR'))\n  const w = 1 / bpPerPx\n  const start = feature.get('start')\n  let soffset = 0\n  let roffset = 0\n\n  if (!seq) {\n    return\n  }\n  for (let i = 0; i < cigarOps.length; i += 2) {\n    const len = +cigarOps[i]\n    const op = cigarOps[i + 1]\n    if (op === 'S' || op === 'I') {\n      soffset += len\n    } else if (op === 'D' || op === 'N') {\n      roffset += len\n    } else if (op === 'M' || op === 'X' || op === '=') {\n      for (let m = 0; m < len; m++) {\n        const letter = seq[soffset + m]\n        const r = start + roffset + m\n        const [leftPx] = bpSpanPx(r, r + 1, region, bpPerPx)\n        const c = colorForBase[letter]\n        fillRect(ctx, leftPx, topPx, w + 0.5, heightPx, canvasWidth, c)\n\n        if (w >= charWidth && heightPx >= heightLim) {\n          // normal SNP coloring\n          ctx.fillStyle = contrastForBase[letter]\n          ctx.fillText(\n            letter,\n            leftPx + (w - charWidth) / 2 + 1,\n            topPx + heightPx,\n          )\n        }\n      }\n      soffset += len\n      roffset += len\n    }\n  }\n}\n","import { bpSpanPx, Region } from '@jbrowse/core/util'\nimport {\n  getModificationPositions,\n  getModificationProbabilities,\n  getNextRefPos,\n  parseCigar,\n} from '../MismatchParser'\nimport { getTagAlt } from '../util'\nimport { fillRect, LayoutFeature } from './util'\nimport { RenderArgsWithColor } from './makeImageData'\n\n// render modifications stored in MM tag in BAM\n//\n// ML stores probabilities as array of numerics and MP is scaled phred scores\n// https://github.com/samtools/hts-specs/pull/418/files#diff-e765c6479316309f56b636f88189cdde8c40b854c7bdcce9ee7fe87a4e76febcR596\n//\n// if we have ML or Ml, it is an 8bit probability, divide by 255\n//\n// if we have MP or Mp it is phred scaled ASCII, which can go up to 90 but\n// has very high likelihood basecalls at that point, we really only care\n// about low qual calls <20 approx\nexport function renderModifications({\n  ctx,\n  feat,\n  region,\n  bpPerPx,\n  renderArgs,\n  canvasWidth,\n}: {\n  ctx: CanvasRenderingContext2D\n  feat: LayoutFeature\n  region: Region\n  bpPerPx: number\n  renderArgs: RenderArgsWithColor\n  canvasWidth: number\n}) {\n  const { feature, topPx, heightPx } = feat\n  const { Color, modificationTagMap = {} } = renderArgs\n\n  const seq = feature.get('seq') as string | undefined\n\n  if (!seq) {\n    return\n  }\n  const mm = (getTagAlt(feature, 'MM', 'Mm') as string) || ''\n  const cigar = feature.get('CIGAR')\n  const start = feature.get('start')\n  const strand = feature.get('strand')\n  const cigarOps = parseCigar(cigar)\n  const probabilities = getModificationProbabilities(feature)\n  const modifications = getModificationPositions(mm, seq, strand)\n\n  // probIndex applies across multiple modifications e.g.\n  let probIndex = 0\n  for (const { type, positions } of modifications) {\n    const col = modificationTagMap[type] || 'black'\n    const base = Color(col)\n    for (const readPos of getNextRefPos(cigarOps, positions)) {\n      const r = start + readPos\n      const [leftPx, rightPx] = bpSpanPx(r, r + 1, region, bpPerPx)\n      const prob = probabilities?.[probIndex] || 0\n      const c =\n        prob !== 1\n          ? base\n              .alpha(prob + 0.1)\n              .hsl()\n              .string()\n          : col\n      const w = rightPx - leftPx + 0.5\n      fillRect(ctx, leftPx, topPx, w, heightPx, canvasWidth, c)\n      probIndex++\n    }\n  }\n}\n","import { bpSpanPx, Region } from '@jbrowse/core/util'\nimport { getMethBins } from '../MismatchParser'\nimport { fillRect, LayoutFeature } from './util'\nimport { RenderArgsWithColor } from './makeImageData'\n\n// Color by methylation is slightly modified version of color by\n// modifications that focuses on CpG sites, with non-methylated CpG colored\nexport function renderMethylation({\n  ctx,\n  feat,\n  region,\n  bpPerPx,\n  renderArgs,\n  canvasWidth,\n}: {\n  ctx: CanvasRenderingContext2D\n  feat: LayoutFeature\n  region: Region\n  bpPerPx: number\n  renderArgs: RenderArgsWithColor\n  canvasWidth: number\n}) {\n  const { regionSequence, Color } = renderArgs\n  const { feature, topPx, heightPx } = feat\n  if (!regionSequence) {\n    throw new Error('region sequence required for methylation')\n  }\n\n  const seq = feature.get('seq') as string | undefined\n  if (!seq) {\n    return\n  }\n  const fstart = feature.get('start')\n  const fend = feature.get('end')\n  const { methBins, methProbs } = getMethBins(feature)\n\n  function getCol(k: number) {\n    if (methBins[k]) {\n      const p = methProbs[k] || 0\n      return p > 0.5\n        ? Color('red')\n            .alpha((p - 0.5) * 2)\n            .hsl()\n            .string()\n        : Color('blue')\n            .alpha(1 - p * 2)\n            .hsl()\n            .string()\n    }\n    return undefined\n  }\n  for (let i = 0; i < fend - fstart; i++) {\n    const j = i + fstart\n    const l1 = regionSequence[j - region.start + 1]?.toLowerCase()\n    const l2 = regionSequence[j - region.start + 2]?.toLowerCase()\n\n    if (l1 === 'c' && l2 === 'g') {\n      if (bpPerPx > 2) {\n        const [leftPx, rightPx] = bpSpanPx(j, j + 2, region, bpPerPx)\n        const w = rightPx - leftPx + 0.5\n        const c = getCol(i) || getCol(i + 1) || 'blue'\n        fillRect(ctx, leftPx, topPx, w, heightPx, canvasWidth, c)\n      } else {\n        const [leftPx, rightPx] = bpSpanPx(j, j + 1, region, bpPerPx)\n        const w = rightPx - leftPx + 0.5\n        const c = getCol(i) || 'blue'\n        fillRect(ctx, leftPx, topPx, w, heightPx, canvasWidth, c)\n        const [leftPx2, rightPx2] = bpSpanPx(j + 1, j + 2, region, bpPerPx)\n        const w2 = rightPx2 - leftPx2 + 0.5\n        const c2 = getCol(i + 1) || 'blue'\n        fillRect(ctx, leftPx2, topPx, w2, heightPx, canvasWidth, c2)\n      }\n    }\n  }\n}\n","import { bpSpanPx, measureText } from '@jbrowse/core/util'\nimport { Mismatch } from '../MismatchParser'\nimport { fillRect, LayoutFeature } from './util'\nimport { RenderArgsWithColor } from './makeImageData'\n\nexport function renderMismatches({\n  ctx,\n  feat,\n  renderArgs,\n  minSubfeatureWidth,\n  largeInsertionIndicatorScale,\n  mismatchAlpha,\n  charWidth,\n  charHeight,\n  colorForBase,\n  contrastForBase,\n  canvasWidth,\n  drawSNPsMuted,\n  drawIndels = true,\n}: {\n  ctx: CanvasRenderingContext2D\n  feat: LayoutFeature\n  renderArgs: RenderArgsWithColor\n  colorForBase: { [key: string]: string }\n  contrastForBase: { [key: string]: string }\n  mismatchAlpha?: boolean\n  drawIndels?: boolean\n  drawSNPsMuted?: boolean\n  minSubfeatureWidth: number\n  largeInsertionIndicatorScale: number\n  charWidth: number\n  charHeight: number\n  canvasWidth: number\n}) {\n  const { Color, bpPerPx, regions } = renderArgs\n  const { heightPx, topPx, feature } = feat\n  const [region] = regions\n  const start = feature.get('start')\n\n  const pxPerBp = Math.min(1 / bpPerPx, 2)\n  const mismatches = feature.get('mismatches') as Mismatch[] | undefined\n  const heightLim = charHeight - 2\n\n  // extraHorizontallyFlippedOffset is used to draw interbase items, which\n  // are located to the left when forward and right when reversed\n  const extraHorizontallyFlippedOffset = region.reversed ? 1 / bpPerPx + 1 : -1\n\n  if (!mismatches) {\n    return\n  }\n\n  // two pass rendering: first pass, draw all the mismatches except wide\n  // insertion markers\n  for (let i = 0; i < mismatches.length; i += 1) {\n    const mismatch = mismatches[i]\n    const mstart = start + mismatch.start\n    const mlen = mismatch.length\n    const mbase = mismatch.base\n    const [leftPx, rightPx] = bpSpanPx(mstart, mstart + mlen, region, bpPerPx)\n    const widthPx = Math.max(minSubfeatureWidth, Math.abs(leftPx - rightPx))\n    if (mismatch.type === 'mismatch') {\n      if (!drawSNPsMuted) {\n        const baseColor = colorForBase[mismatch.base] || '#888'\n        const c = mismatchAlpha\n          ? mismatch.qual === undefined\n            ? baseColor\n            : Color(baseColor)\n                .alpha(Math.min(1, mismatch.qual / 50))\n                .hsl()\n                .string()\n          : baseColor\n\n        fillRect(\n          ctx,\n          Math.round(leftPx),\n          topPx,\n          widthPx,\n          heightPx,\n          canvasWidth,\n          c,\n        )\n      }\n\n      if (widthPx >= charWidth && heightPx >= heightLim) {\n        // normal SNP coloring\n        const contrastColor = drawSNPsMuted\n          ? 'black'\n          : contrastForBase[mismatch.base] || 'black'\n        ctx.fillStyle = mismatchAlpha\n          ? mismatch.qual === undefined\n            ? contrastColor\n            : Color(contrastColor)\n                .alpha(Math.min(1, mismatch.qual / 50))\n                .hsl()\n                .string()\n          : contrastColor\n        ctx.fillText(\n          mbase,\n          leftPx + (widthPx - charWidth) / 2 + 1,\n          topPx + heightPx,\n        )\n      }\n    } else if (mismatch.type === 'deletion' && drawIndels) {\n      fillRect(\n        ctx,\n        leftPx,\n        topPx,\n        Math.abs(leftPx - rightPx),\n        heightPx,\n        canvasWidth,\n        colorForBase.deletion,\n      )\n      const txt = `${mismatch.length}`\n      const rwidth = measureText(txt, 10)\n      if (widthPx >= rwidth && heightPx >= heightLim) {\n        ctx.fillStyle = contrastForBase.deletion\n        ctx.fillText(txt, (leftPx + rightPx) / 2 - rwidth / 2, topPx + heightPx)\n      }\n    } else if (mismatch.type === 'insertion' && drawIndels) {\n      ctx.fillStyle = 'purple'\n      const pos = leftPx + extraHorizontallyFlippedOffset\n      const len = +mismatch.base || mismatch.length\n      const insW = Math.max(0, Math.min(1.2, 1 / bpPerPx))\n      if (len < 10) {\n        fillRect(ctx, pos, topPx, insW, heightPx, canvasWidth, 'purple')\n        if (1 / bpPerPx >= charWidth && heightPx >= heightLim) {\n          const l = pos - insW\n          fillRect(ctx, l, topPx, insW * 3, 1, canvasWidth)\n          fillRect(ctx, l, topPx + heightPx - 1, insW * 3, 1, canvasWidth)\n          ctx.fillText(`(${mismatch.base})`, pos + 3, topPx + heightPx)\n        }\n      }\n    } else if (mismatch.type === 'hardclip' || mismatch.type === 'softclip') {\n      const pos = leftPx + extraHorizontallyFlippedOffset\n      const c = mismatch.type === 'hardclip' ? 'red' : 'blue'\n      const clipW = Math.max(minSubfeatureWidth, pxPerBp)\n      fillRect(ctx, pos, topPx, clipW, heightPx, canvasWidth, c)\n      if (1 / bpPerPx >= charWidth && heightPx >= heightLim) {\n        const l = pos - clipW\n        fillRect(ctx, l, topPx, clipW * 3, 1, canvasWidth)\n        fillRect(ctx, l, topPx + heightPx - 1, clipW * 3, 1, canvasWidth)\n        ctx.fillText(`(${mismatch.base})`, pos + 3, topPx + heightPx)\n      }\n    } else if (mismatch.type === 'skip') {\n      // fix to avoid bad rendering note that this was also related to chrome\n      // bug https://bugs.chromium.org/p/chromium/issues/detail?id=1131528\n      // also affected firefox ref #1236 #2750\n      if (leftPx + widthPx > 0) {\n        // make small exons more visible when zoomed far out\n        const adjustPx = widthPx - (bpPerPx > 10 ? 1.5 : 0)\n        ctx.clearRect(leftPx, topPx, adjustPx, heightPx)\n        fillRect(\n          ctx,\n          Math.max(0, leftPx),\n          topPx + heightPx / 2 - 1,\n          adjustPx + (leftPx < 0 ? leftPx : 0),\n          2,\n          canvasWidth,\n          '#333',\n        )\n      }\n    }\n  }\n\n  // second pass, draw wide insertion markers on top\n  if (drawIndels) {\n    for (let i = 0; i < mismatches.length; i += 1) {\n      const mismatch = mismatches[i]\n      const mstart = start + mismatch.start\n      const mlen = mismatch.length\n      const [leftPx] = bpSpanPx(mstart, mstart + mlen, region, bpPerPx)\n      const len = +mismatch.base || mismatch.length\n      const txt = `${len}`\n      if (mismatch.type === 'insertion' && len >= 10) {\n        if (bpPerPx > largeInsertionIndicatorScale) {\n          fillRect(ctx, leftPx - 1, topPx, 2, heightPx, canvasWidth, 'purple')\n        } else if (heightPx > charHeight) {\n          const rwidth = measureText(txt)\n          const padding = 5\n          fillRect(\n            ctx,\n            leftPx - rwidth / 2 - padding,\n            topPx,\n            rwidth + 2 * padding,\n            heightPx,\n            canvasWidth,\n            'purple',\n          )\n          ctx.fillStyle = 'white'\n          ctx.fillText(txt, leftPx - rwidth / 2, topPx + heightPx)\n        } else {\n          const padding = 2\n          fillRect(\n            ctx,\n            leftPx - padding,\n            topPx,\n            2 * padding,\n            heightPx,\n            canvasWidth,\n            'purple',\n          )\n        }\n      }\n    }\n  }\n}\n","import {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { bpSpanPx } from '@jbrowse/core/util'\nimport { Theme } from '@mui/material'\n\n// locals\nimport { Mismatch } from '../MismatchParser'\nimport { RenderArgsDeserializedWithFeaturesAndLayout } from './PileupRenderer'\nimport { fillRect, getCharWidthHeight, LayoutFeature } from './util'\n\nexport function renderSoftClipping({\n  ctx,\n  feat,\n  renderArgs,\n  config,\n  theme,\n  colorForBase,\n  canvasWidth,\n}: {\n  ctx: CanvasRenderingContext2D\n  feat: LayoutFeature\n  renderArgs: RenderArgsDeserializedWithFeaturesAndLayout\n  config: AnyConfigurationModel\n  colorForBase: Record<string, string>\n  theme: Theme\n  canvasWidth: number\n}) {\n  const { feature, topPx, heightPx } = feat\n  const { regions, bpPerPx } = renderArgs\n  const [region] = regions\n  const minFeatWidth = readConfObject(config, 'minSubfeatureWidth')\n  const mismatches = feature.get('mismatches') as Mismatch[] | undefined\n  const seq = feature.get('seq') as string | undefined\n  const { charWidth, charHeight } = getCharWidthHeight()\n\n  // Display all bases softclipped off in lightened colors\n  if (!(seq && mismatches)) {\n    return\n  }\n  mismatches\n    .filter(mismatch => mismatch.type === 'softclip')\n    .forEach(mismatch => {\n      const len = mismatch.cliplen || 0\n      const s = feature.get('start')\n      const start = mismatch.start === 0 ? s - len : s + mismatch.start\n\n      for (let k = 0; k < len; k += 1) {\n        const base = seq.charAt(k + mismatch.start)\n\n        // If softclip length+start is longer than sequence, no need to\n        // continue showing base\n        if (!base) {\n          return\n        }\n\n        const s0 = start + k\n        const [leftPx, rightPx] = bpSpanPx(s0, s0 + 1, region, bpPerPx)\n        const widthPx = Math.max(minFeatWidth, rightPx - leftPx)\n\n        // Black accounts for IUPAC ambiguity code bases such as N that\n        // show in soft clipping\n        const baseColor = colorForBase[base] || '#000000'\n        ctx.fillStyle = baseColor\n        fillRect(ctx, leftPx, topPx, widthPx, heightPx, canvasWidth)\n\n        if (widthPx >= charWidth && heightPx >= charHeight - 5) {\n          ctx.fillStyle = theme.palette.getContrastText(baseColor)\n          ctx.fillText(\n            base,\n            leftPx + (widthPx - charWidth) / 2 + 1,\n            topPx + heightPx,\n          )\n        }\n      }\n    })\n}\n","import { Feature } from '@jbrowse/core/util'\nimport { RenderArgsDeserializedWithFeaturesAndLayout } from './PileupRenderer'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { createJBrowseTheme } from '@jbrowse/core/ui'\nimport {\n  getCharWidthHeight,\n  getColorBaseMap,\n  getContrastBaseMap,\n  shouldDrawIndels,\n  shouldDrawSNPsMuted,\n} from './util'\nimport { renderAlignment } from './renderAlignment'\nimport { renderMismatches } from './renderMismatches'\nimport { renderSoftClipping } from './renderSoftClipping'\n\nexport interface RenderArgsWithColor\n  extends RenderArgsDeserializedWithFeaturesAndLayout {\n  Color: Awaited<typeof import('color')>\n}\n\ninterface LayoutFeature {\n  heightPx: number\n  topPx: number\n  feature: Feature\n}\n\nexport function makeImageData({\n  ctx,\n  layoutRecords,\n  canvasWidth,\n  renderArgs,\n}: {\n  ctx: CanvasRenderingContext2D\n  canvasWidth: number\n  layoutRecords: LayoutFeature[]\n  renderArgs: RenderArgsWithColor\n}) {\n  const { config, showSoftClip, colorBy, theme: configTheme } = renderArgs\n  const mismatchAlpha = readConfObject(config, 'mismatchAlpha')\n  const minSubfeatureWidth = readConfObject(config, 'minSubfeatureWidth')\n  const largeInsertionIndicatorScale = readConfObject(\n    config,\n    'largeInsertionIndicatorScale',\n  )\n  const defaultColor = readConfObject(config, 'color') === '#f0f'\n  const theme = createJBrowseTheme(configTheme)\n  const colorForBase = getColorBaseMap(theme)\n  const contrastForBase = getContrastBaseMap(theme)\n  ctx.font = 'bold 10px Courier New,monospace'\n\n  const { charWidth, charHeight } = getCharWidthHeight()\n  const drawSNPsMuted = shouldDrawSNPsMuted(colorBy?.type)\n  const drawIndels = shouldDrawIndels()\n  for (const feat of layoutRecords) {\n    renderAlignment({\n      ctx,\n      feat,\n      renderArgs,\n      defaultColor,\n      colorForBase,\n      contrastForBase,\n      charWidth,\n      charHeight,\n      canvasWidth,\n    })\n    renderMismatches({\n      ctx,\n      feat,\n      renderArgs,\n      mismatchAlpha,\n      drawSNPsMuted,\n      drawIndels,\n      largeInsertionIndicatorScale,\n      minSubfeatureWidth,\n      charWidth,\n      charHeight,\n      colorForBase,\n      contrastForBase,\n      canvasWidth,\n    })\n    if (showSoftClip) {\n      renderSoftClipping({\n        ctx,\n        feat,\n        renderArgs,\n        colorForBase,\n        config,\n        theme,\n        canvasWidth,\n      })\n    }\n  }\n}\n","import BoxRendererType, {\n  RenderArgsDeserialized as BoxRenderArgsDeserialized,\n} from '@jbrowse/core/pluggableElementTypes/renderers/BoxRendererType'\nimport {\n  Feature,\n  Region,\n  notEmpty,\n  renderToAbstractCanvas,\n} from '@jbrowse/core/util'\nimport { BaseLayout } from '@jbrowse/core/util/layouts/BaseLayout'\nimport { getAdapter } from '@jbrowse/core/data_adapters/dataAdapterCache'\nimport {\n  PileupLayoutSession,\n  PileupLayoutSessionProps,\n} from './PileupLayoutSession'\nimport { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\n\n// locals\nimport { fetchSequence, shouldFetchReferenceSequence } from '../util'\nimport { layoutFeats } from './layoutFeatures'\nimport { makeImageData } from './makeImageData'\nimport { readConfObject } from '@jbrowse/core/configuration'\n\nexport interface RenderArgsDeserialized extends BoxRenderArgsDeserialized {\n  colorBy?: { type: string; tag?: string }\n  colorTagMap?: Record<string, string>\n  modificationTagMap?: Record<string, string | undefined>\n  sortedBy?: {\n    type: string\n    pos: number\n    refName: string\n    assemblyName: string\n    tag?: string\n  }\n  showSoftClip: boolean\n  highResolutionScaling: number\n}\n\nexport interface RenderArgsDeserializedWithFeaturesAndLayout\n  extends RenderArgsDeserialized {\n  features: Map<string, Feature>\n  layout: BaseLayout<Feature>\n  regionSequence?: string\n}\n\nexport default class PileupRenderer extends BoxRendererType {\n  supportsSVG = true\n\n  async fetchSequence(renderProps: RenderArgsDeserialized) {\n    const { sessionId, regions, adapterConfig } = renderProps\n    const { sequenceAdapter } = adapterConfig\n    if (!sequenceAdapter) {\n      return undefined\n    }\n    const pm = this.pluginManager\n    const { dataAdapter } = await getAdapter(pm, sessionId, sequenceAdapter)\n    const [region] = regions\n    return fetchSequence(region, dataAdapter as BaseFeatureDataAdapter)\n  }\n\n  getExpandedRegion(region: Region, renderArgs: RenderArgsDeserialized) {\n    const { config, showSoftClip } = renderArgs\n    const { start, end } = region\n    const maxClippingSize = readConfObject(config, 'maxClippingSize')\n    const bpExpansion = showSoftClip ? Math.round(maxClippingSize) : 0\n\n    return {\n      // xref https://github.com/mobxjs/mobx-state-tree/issues/1524 for Omit\n      ...(region as Omit<typeof region, symbol>),\n      start: Math.floor(Math.max(start - bpExpansion, 0)),\n      end: Math.ceil(end + bpExpansion),\n    }\n  }\n\n  async render(renderProps: RenderArgsDeserialized) {\n    const features = await this.getFeatures(renderProps)\n    const layout = this.createLayoutInWorker(renderProps)\n    const { regions, bpPerPx } = renderProps\n    const [region] = regions\n\n    const layoutRecords = layoutFeats({\n      ...renderProps,\n      features,\n      layout,\n    })\n\n    // only need reference sequence if there are features and only for some\n    // cases\n    const regionSequence =\n      features.size && shouldFetchReferenceSequence(renderProps.colorBy?.type)\n        ? await this.fetchSequence(renderProps)\n        : undefined\n    const width = (region.end - region.start) / bpPerPx\n    const height = Math.max(layout.getTotalHeight(), 1)\n    const Color = await import('color').then(f => f.default)\n    const res = await renderToAbstractCanvas(width, height, renderProps, ctx =>\n      makeImageData({\n        ctx,\n        layoutRecords: layoutRecords.filter(notEmpty),\n        canvasWidth: width,\n        renderArgs: {\n          ...renderProps,\n          layout,\n          features,\n          regionSequence,\n          Color,\n        },\n      }),\n    )\n\n    const results = await super.render({\n      ...renderProps,\n      ...res,\n      features,\n      layout,\n      height,\n      width,\n    })\n\n    return {\n      ...results,\n      ...res,\n      features: new Map(),\n      layout,\n      height,\n      width,\n      maxHeightReached: layout.maxHeightReached,\n    }\n  }\n\n  createSession(args: PileupLayoutSessionProps) {\n    return new PileupLayoutSession(args)\n  }\n}\n\nexport {\n  type RenderArgs,\n  type RenderResults,\n  type RenderArgsSerialized,\n  type ResultsSerialized,\n  type ResultsDeserialized,\n} from '@jbrowse/core/pluggableElementTypes/renderers/BoxRendererType'\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\n/**\n * #config PileupRenderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst PileupRenderer = ConfigurationSchema(\n  'PileupRenderer',\n  {\n    /**\n     * #slot\n     * default magenta here is used to detect the user has not customized this\n     */\n    color: {\n      type: 'color',\n      description: 'the color of each feature in a pileup alignment',\n      defaultValue: '#f0f',\n      contextVariable: ['feature'],\n    },\n\n    /**\n     * #slot\n     */\n    orientationType: {\n      type: 'stringEnum',\n      model: types.enumeration('orientationType', ['fr', 'rf', 'ff']),\n      defaultValue: 'fr',\n      description:\n        'read sequencer orientation. fr is normal \"reads pointing at each other ---> <--- while some other sequencers can use other options',\n    },\n    /**\n     * #slot\n     */\n    displayMode: {\n      type: 'stringEnum',\n      model: types.enumeration('displayMode', [\n        'normal',\n        'compact',\n        'collapse',\n      ]),\n      description: 'Alternative display modes',\n      defaultValue: 'normal',\n    },\n    /**\n     * #slot\n     */\n    minSubfeatureWidth: {\n      type: 'number',\n      description:\n        'the minimum width in px for a pileup mismatch feature. use for increasing/decreasing mismatch marker widths when zoomed out, e.g. 0 or 1',\n      defaultValue: 1,\n    },\n    /**\n     * #slot\n     */\n    maxHeight: {\n      type: 'integer',\n      description: 'the maximum height to be used in a pileup rendering',\n      defaultValue: 1200,\n    },\n    /**\n     * #slot\n     */\n    maxClippingSize: {\n      type: 'integer',\n      description: 'the max clip size to be used in a pileup rendering',\n      defaultValue: 10000,\n    },\n    /**\n     * #slot\n     */\n    height: {\n      type: 'number',\n      description: 'the height of each feature in a pileup alignment',\n      defaultValue: 7,\n      contextVariable: ['feature'],\n    },\n    /**\n     * #slot\n     */\n    noSpacing: {\n      type: 'boolean',\n      description: 'remove spacing between features',\n      defaultValue: false,\n    },\n    /**\n     * #slot\n     */\n    largeInsertionIndicatorScale: {\n      type: 'number',\n      description:\n        'scale at which to draw the large insertion indicators (bp/pixel)',\n      defaultValue: 10,\n    },\n    /**\n     * #slot\n     */\n    mismatchAlpha: {\n      type: 'boolean',\n      defaultValue: false,\n      description: 'Fade low quality mismatches',\n    },\n  },\n  { explicitlyTyped: true },\n)\nexport default PileupRenderer\n","import React, { useRef, useState, useEffect } from 'react'\nimport { Region } from '@jbrowse/core/util/types'\nimport { PrerenderedCanvas } from '@jbrowse/core/ui'\nimport { bpSpanPx } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\nimport type { BaseLinearDisplayModel } from '@jbrowse/plugin-linear-genome-view'\n\n// used so that user can click-away-from-feature below the laid out features\n// (issue #1248)\nconst canvasPadding = 100\nfunction PileupRendering(props: {\n  blockKey: string\n  displayModel: BaseLinearDisplayModel\n  width: number\n  height: number\n  regions: Region[]\n  bpPerPx: number\n  sortedBy?: { type: string; pos: number; refName: string }\n  colorBy?: { type: string; tag?: string }\n  filterBy?: { tagFilter?: { tag: string } }\n  onMouseMove?: (event: React.MouseEvent, featureId?: string) => void\n}) {\n  const {\n    onMouseMove,\n    blockKey,\n    displayModel,\n    width,\n    height,\n    regions,\n    bpPerPx,\n    sortedBy,\n    colorBy,\n    filterBy,\n  } = props\n  const { selectedFeatureId, featureIdUnderMouse, contextMenuFeature } =\n    displayModel\n\n  const [region] = regions\n  const highlightOverlayCanvas = useRef<HTMLCanvasElement>(null)\n  const [mouseIsDown, setMouseIsDown] = useState(false)\n  const [movedDuringLastMouseDown, setMovedDuringLastMouseDown] =\n    useState(false)\n  useEffect(() => {\n    const canvas = highlightOverlayCanvas.current\n    if (!canvas) {\n      return\n    }\n    const ctx = canvas.getContext('2d')\n    if (!ctx) {\n      return\n    }\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\n    const selectedRect = selectedFeatureId\n      ? displayModel.getFeatureByID?.(blockKey, selectedFeatureId)\n      : undefined\n    if (selectedRect) {\n      const [leftBp, topPx, rightBp, bottomPx] = selectedRect\n      const [leftPx, rightPx] = bpSpanPx(leftBp, rightBp, region, bpPerPx)\n      const rectTop = Math.round(topPx)\n      const rectHeight = Math.round(bottomPx - topPx)\n      ctx.shadowColor = '#222266'\n      ctx.shadowBlur = 10\n      ctx.lineJoin = 'bevel'\n      ctx.lineWidth = 2\n      ctx.strokeStyle = '#00b8ff'\n      ctx.strokeRect(\n        leftPx - 2,\n        rectTop - 2,\n        rightPx - leftPx + 4,\n        rectHeight + 4,\n      )\n      ctx.clearRect(leftPx, rectTop, rightPx - leftPx, rectHeight)\n    }\n    const highlightedFeature = featureIdUnderMouse || contextMenuFeature?.id()\n    const highlightedRect = highlightedFeature\n      ? displayModel.getFeatureByID?.(blockKey, highlightedFeature)\n      : undefined\n    if (highlightedRect) {\n      const [leftBp, topPx, rightBp, bottomPx] = highlightedRect\n      const [leftPx, rightPx] = bpSpanPx(leftBp, rightBp, region, bpPerPx)\n      const rectTop = Math.round(topPx)\n      const rectHeight = Math.round(bottomPx - topPx)\n      ctx.fillStyle = '#0003'\n      ctx.fillRect(leftPx, rectTop, rightPx - leftPx, rectHeight)\n    }\n  }, [\n    bpPerPx,\n    region,\n    blockKey,\n    selectedFeatureId,\n    displayModel,\n    featureIdUnderMouse,\n    contextMenuFeature,\n  ])\n\n  function onMouseDown(event: React.MouseEvent) {\n    setMouseIsDown(true)\n    setMovedDuringLastMouseDown(false)\n    callMouseHandler('MouseDown', event)\n  }\n\n  function onMouseEnter(event: React.MouseEvent) {\n    callMouseHandler('MouseEnter', event)\n  }\n\n  function onMouseOut(event: React.MouseEvent) {\n    callMouseHandler('MouseOut', event)\n    callMouseHandler('MouseLeave', event)\n  }\n\n  function onMouseOver(event: React.MouseEvent) {\n    callMouseHandler('MouseOver', event)\n  }\n\n  function onMouseUp(event: React.MouseEvent) {\n    setMouseIsDown(false)\n    callMouseHandler('MouseUp', event)\n  }\n\n  function onClick(event: React.MouseEvent) {\n    if (!movedDuringLastMouseDown) {\n      callMouseHandler('Click', event)\n    }\n  }\n\n  function onMouseLeave(event: React.MouseEvent) {\n    callMouseHandler('MouseOut', event)\n    callMouseHandler('MouseLeave', event)\n  }\n\n  function onContextMenu(event: React.MouseEvent) {\n    callMouseHandler('ContextMenu', event)\n  }\n\n  function mouseMove(event: React.MouseEvent) {\n    if (!highlightOverlayCanvas.current) {\n      return\n    }\n    if (mouseIsDown) {\n      setMovedDuringLastMouseDown(true)\n    }\n    const rect = highlightOverlayCanvas.current.getBoundingClientRect()\n    const offsetX = event.clientX - rect.left\n    const offsetY = event.clientY - rect.top\n    const px = region.reversed ? width - offsetX : offsetX\n    const clientBp = region.start + bpPerPx * px\n\n    onMouseMove?.(\n      event,\n      displayModel.getFeatureOverlapping(blockKey, clientBp, offsetY),\n    )\n  }\n\n  function callMouseHandler(handlerName: string, event: React.MouseEvent) {\n    // @ts-expect-error\n    // eslint-disable-next-line react/destructuring-assignment\n    const featureHandler = props[`onFeature${handlerName}`]\n    // @ts-expect-error\n    // eslint-disable-next-line react/destructuring-assignment\n    const canvasHandler = props[`on${handlerName}`]\n    if (featureHandler && featureIdUnderMouse) {\n      featureHandler(event, featureIdUnderMouse)\n    } else if (canvasHandler) {\n      canvasHandler(event, featureIdUnderMouse)\n    }\n  }\n\n  const canvasWidth = Math.ceil(width)\n  // need to call this in render so we get the right observer behavior\n  return (\n    <div\n      data-testid={`pileup-${[\n        sortedBy?.type,\n        colorBy?.type,\n        colorBy?.tag,\n        filterBy?.tagFilter?.tag,\n      ]\n        .filter(f => !!f)\n        .join('-')}`}\n      style={{ position: 'relative', width: canvasWidth, height }}\n    >\n      <PrerenderedCanvas\n        {...props}\n        style={{ position: 'absolute', left: 0, top: 0 }}\n      />\n      <canvas\n        data-testid=\"pileup_overlay_canvas\"\n        width={canvasWidth}\n        height={height + canvasPadding}\n        style={{ position: 'absolute', left: 0, top: 0 }}\n        className=\"highlightOverlayCanvas\"\n        ref={highlightOverlayCanvas}\n        onMouseDown={event => onMouseDown(event)}\n        onMouseEnter={event => onMouseEnter(event)}\n        onMouseOut={event => onMouseOut(event)}\n        onMouseOver={event => onMouseOver(event)}\n        onMouseUp={event => onMouseUp(event)}\n        onMouseLeave={event => onMouseLeave(event)}\n        onMouseMove={event => mouseMove(event)}\n        onClick={event => onClick(event)}\n        onContextMenu={event => onContextMenu(event)}\n        onFocus={() => {}}\n        onBlur={() => {}}\n      />\n    </div>\n  )\n}\n\nexport default observer(PileupRendering)\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport PileupRenderer from './PileupRenderer'\nimport configSchema from './configSchema'\nimport ReactComponent from './components/PileupRendering'\n\nexport default function register(pluginManager: PluginManager) {\n  pluginManager.addRendererType(() => {\n    return new PileupRenderer({\n      name: 'PileupRenderer',\n      displayName: 'Pileup renderer',\n      ReactComponent,\n      configSchema,\n      pluginManager,\n    })\n  })\n}\n","import React from 'react'\nimport { autorun, when } from 'mobx'\nimport {\n  addDisposer,\n  getSnapshot,\n  isAlive,\n  types,\n  Instance,\n  IStateTreeNode,\n} from 'mobx-state-tree'\nimport deepEqual from 'fast-deep-equal'\n\n// jbrowse\nimport {\n  ConfigurationReference,\n  AnyConfigurationModel,\n  AnyConfigurationSchemaType,\n  getConf,\n} from '@jbrowse/core/configuration'\nimport { BaseDisplay } from '@jbrowse/core/pluggableElementTypes/models'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { MenuItem } from '@jbrowse/core/ui'\nimport { FeatureDensityStats } from '@jbrowse/core/data_adapters/BaseAdapter'\n\nconst minDisplayHeight = 20\n\nfunction getLowerPanelDisplays(pluginManager: PluginManager) {\n  return (\n    pluginManager\n      .getDisplayElements()\n      // @ts-expect-error\n      .filter(f => f.subDisplay?.type === 'LinearAlignmentsDisplay')\n      // @ts-expect-error\n      .filter(f => f.subDisplay?.lowerPanel)\n  )\n}\n\nfunction deepSnap<T extends IStateTreeNode, U extends IStateTreeNode>(\n  x1: T,\n  x2: U,\n) {\n  return deepEqual(\n    x1 ? getSnapshot(x1) : undefined,\n    x2 ? getSnapshot(x2) : undefined,\n  )\n}\n\nfunction preCheck(self: AlignmentsDisplayModel) {\n  const { PileupDisplay, SNPCoverageDisplay } = self\n  return (\n    PileupDisplay ||\n    isAlive(PileupDisplay) ||\n    SNPCoverageDisplay ||\n    isAlive(SNPCoverageDisplay)\n  )\n}\n\nfunction propagateColorBy(self: AlignmentsDisplayModel) {\n  const { PileupDisplay, SNPCoverageDisplay } = self\n  if (!preCheck(self) || !PileupDisplay.colorBy) {\n    return\n  }\n  if (!deepSnap(PileupDisplay.colorBy, SNPCoverageDisplay.colorBy)) {\n    SNPCoverageDisplay.setColorBy(getSnapshot(PileupDisplay.colorBy))\n  }\n}\n\nfunction propagateFilterBy(self: AlignmentsDisplayModel) {\n  const { PileupDisplay, SNPCoverageDisplay } = self\n  if (!preCheck(self) || !PileupDisplay.filterBy) {\n    return\n  }\n  if (!deepSnap(PileupDisplay.filterBy, SNPCoverageDisplay.filterBy)) {\n    SNPCoverageDisplay.setFilterBy(getSnapshot(PileupDisplay.filterBy))\n  }\n}\n\nfunction AlignmentsModel(\n  pluginManager: PluginManager,\n  configSchema: AnyConfigurationSchemaType,\n) {\n  const lowerPanelDisplays = getLowerPanelDisplays(pluginManager).map(\n    f => f.stateModel,\n  )\n\n  return types.model({\n    /**\n     * #property\n     * refers to LinearPileupDisplay sub-display model\n     */\n    PileupDisplay: types.maybe(types.union(...lowerPanelDisplays)),\n    /**\n     * #property\n     * refers to LinearSNPCoverageDisplay sub-display model\n     */\n    SNPCoverageDisplay: types.maybe(\n      pluginManager.getDisplayType('LinearSNPCoverageDisplay').stateModel,\n    ),\n    /**\n     * #property\n     */\n    snpCovHeight: 45,\n    /**\n     * #property\n     */\n    type: types.literal('LinearAlignmentsDisplay'),\n    /**\n     * #property\n     */\n    configuration: ConfigurationReference(configSchema),\n    /**\n     * #property\n     */\n    heightPreConfig: types.maybe(types.number),\n    /**\n     * #property\n     */\n    userFeatureScreenDensity: types.maybe(types.number),\n    /**\n     * #property\n     */\n    lowerPanelType: 'LinearPileupDisplay',\n  })\n}\n\n/**\n * #stateModel LinearAlignmentsDisplay\n * extends `BaseDisplay`\n */\nfunction stateModelFactory(\n  pluginManager: PluginManager,\n  configSchema: AnyConfigurationSchemaType,\n) {\n  return types\n    .compose(\n      'LinearAlignmentsDisplay',\n      BaseDisplay,\n      AlignmentsModel(pluginManager, configSchema),\n    )\n    .volatile(() => ({\n      scrollTop: 0,\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setScrollTop(scrollTop: number) {\n        self.scrollTop = scrollTop\n      },\n\n      /**\n       * #action\n       */\n      setSNPCoverageHeight(n: number) {\n        self.snpCovHeight = n\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get height() {\n        return self.heightPreConfig ?? getConf(self, 'height')\n      },\n\n      get featureIdUnderMouse() {\n        return (\n          self.PileupDisplay.featureIdUnderMouse ||\n          self.SNPCoverageDisplay.featureIdUnderMouse\n        )\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get pileupConf() {\n        const conf = getConf(self, 'pileupDisplay')\n        return {\n          ...conf,\n          type: self.lowerPanelType,\n          displayId: `${self.configuration.displayId}_${self.lowerPanelType}_xyz`, // xyz to avoid someone accidentally naming the displayId similar to this\n        }\n      },\n\n      /**\n       * #method\n       */\n      getFeatureByID(blockKey: string, id: string) {\n        return self.PileupDisplay.getFeatureByID(blockKey, id)\n      },\n      /**\n       * #method\n       */\n      searchFeatureByID(id: string) {\n        return self.PileupDisplay.searchFeatureByID(id)\n      },\n\n      /**\n       * #getter\n       */\n      get features() {\n        return self.PileupDisplay.features\n      },\n\n      /**\n       * #getter\n       */\n      get DisplayBlurb() {\n        return self.PileupDisplay?.DisplayBlurb\n      },\n\n      /**\n       * #getter\n       */\n      get sortedBy() {\n        return self.PileupDisplay.sortedBy\n      },\n\n      /**\n       * #getter\n       */\n      get coverageConf() {\n        const conf = getConf(self, 'snpCoverageDisplay')\n        return {\n          ...conf,\n          displayId: `${self.configuration.displayId}_snpcoverage_xyz`, // xyz to avoid someone accidentally naming the displayId similar to this\n        }\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setSNPCoverageDisplay(configuration: AnyConfigurationModel) {\n        self.SNPCoverageDisplay = {\n          type: 'LinearSNPCoverageDisplay',\n          configuration,\n          height: self.snpCovHeight,\n        }\n      },\n      /**\n       * #action\n       */\n      setFeatureDensityStatsLimit(stats?: FeatureDensityStats) {\n        self.PileupDisplay.setFeatureDensityStatsLimit(stats)\n        self.SNPCoverageDisplay.setFeatureDensityStatsLimit(stats)\n      },\n\n      /**\n       * #action\n       */\n      setPileupDisplay(configuration: AnyConfigurationModel) {\n        self.PileupDisplay = {\n          type: configuration.type || 'LinearPileupDisplay',\n          configuration,\n        }\n      },\n      /**\n       * #action\n       */\n      setHeight(n: number) {\n        self.heightPreConfig = Math.max(n, minDisplayHeight)\n        return self.heightPreConfig\n      },\n      /**\n       * #action\n       */\n      setLowerPanelType(type: string) {\n        self.lowerPanelType = type\n      },\n      /**\n       * #action\n       */\n      resizeHeight(distance: number) {\n        const oldHeight = self.height\n        const newHeight = this.setHeight(self.height + distance)\n        return newHeight - oldHeight\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(() => {\n            const {\n              SNPCoverageDisplay,\n              PileupDisplay,\n              coverageConf,\n              pileupConf,\n            } = self\n\n            if (!SNPCoverageDisplay) {\n              self.setSNPCoverageDisplay(coverageConf)\n            } else if (\n              !deepEqual(\n                coverageConf,\n                getSnapshot(SNPCoverageDisplay.configuration),\n              )\n            ) {\n              SNPCoverageDisplay.setHeight(self.snpCovHeight)\n              SNPCoverageDisplay.setConfig(self.coverageConf)\n            }\n\n            if (!PileupDisplay || self.lowerPanelType !== PileupDisplay.type) {\n              self.setPileupDisplay(pileupConf)\n            } else if (\n              !deepEqual(pileupConf, getSnapshot(PileupDisplay.configuration))\n            ) {\n              PileupDisplay.setConfig(self.pileupConf)\n            }\n\n            propagateColorBy(self as AlignmentsDisplayModel)\n            propagateFilterBy(self as AlignmentsDisplayModel)\n          }),\n        )\n\n        addDisposer(\n          self,\n          autorun(() => {\n            self.setSNPCoverageHeight(self.SNPCoverageDisplay.height)\n          }),\n        )\n\n        addDisposer(\n          self,\n          autorun(() => {\n            self.PileupDisplay.setHeight(\n              self.height - self.SNPCoverageDisplay.height,\n            )\n          }),\n        )\n      },\n      /**\n       * #action\n       */\n      async renderSvg(opts: { rasterizeLayers?: boolean }) {\n        const pileupHeight = self.height - self.SNPCoverageDisplay.height\n        await when(\n          () =>\n            !self.PileupDisplay.renderProps().notReady &&\n            !self.SNPCoverageDisplay.renderProps().notReady,\n        )\n        return (\n          <>\n            <g>{await self.SNPCoverageDisplay.renderSvg(opts)}</g>\n            <g transform={`translate(0 ${self.SNPCoverageDisplay.height})`}>\n              {await self.PileupDisplay.renderSvg({\n                ...opts,\n                overrideHeight: pileupHeight,\n              })}\n            </g>\n          </>\n        )\n      },\n    }))\n    .views(self => {\n      const { trackMenuItems: superTrackMenuItems } = self\n      return {\n        /**\n         * #method\n         */\n        trackMenuItems(): MenuItem[] {\n          const extra = getLowerPanelDisplays(pluginManager).map(d => ({\n            type: 'radio',\n            label: d.displayName,\n            checked: d.name === self.PileupDisplay.type,\n            onClick: () => self.setLowerPanelType(d.name),\n          }))\n          return [\n            ...superTrackMenuItems(),\n            {\n              type: 'subMenu',\n              label: 'Pileup settings',\n              subMenu: self.PileupDisplay.trackMenuItems(),\n            },\n            {\n              type: 'subMenu',\n              label: 'SNPCoverage settings',\n              subMenu: self.SNPCoverageDisplay.trackMenuItems(),\n            },\n            {\n              type: 'subMenu',\n              label: `Replace lower panel with...`,\n              subMenu: extra,\n            },\n          ]\n        },\n      }\n    })\n    .preProcessSnapshot(snap => {\n      if (!snap) {\n        return snap\n      }\n      // @ts-expect-error\n      const { height, ...rest } = snap\n      return { heightPreConfig: height, ...rest }\n    })\n}\n\nexport default stateModelFactory\nexport type AlignmentsDisplayStateModel = ReturnType<typeof stateModelFactory>\nexport type AlignmentsDisplayModel = Instance<AlignmentsDisplayStateModel>\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\nimport { getConf } from '@jbrowse/core/configuration'\nimport { ResizeHandle } from '@jbrowse/core/ui'\n\n// locals\nimport { AlignmentsDisplayModel } from '../models/model'\n\nconst useStyles = makeStyles()({\n  resizeHandle: {\n    height: 5,\n    position: 'absolute',\n    zIndex: 2,\n  },\n})\n\nfunction AlignmentsDisplay({ model }: { model: AlignmentsDisplayModel }) {\n  const { PileupDisplay, SNPCoverageDisplay } = model\n  const { classes } = useStyles()\n  const top = SNPCoverageDisplay.height\n  return (\n    <div\n      data-testid={`display-${getConf(model, 'displayId')}`}\n      style={{ position: 'relative' }}\n    >\n      <div data-testid=\"Blockset-snpcoverage\">\n        <SNPCoverageDisplay.RenderingComponent model={SNPCoverageDisplay} />\n      </div>\n      <ResizeHandle\n        onDrag={delta => {\n          SNPCoverageDisplay.setHeight(SNPCoverageDisplay.height + delta)\n          return delta\n        }}\n        className={classes.resizeHandle}\n        style={{ top: top - 4 }}\n      />\n\n      <div\n        data-testid=\"Blockset-pileup\"\n        style={{\n          position: 'absolute',\n          top,\n        }}\n      >\n        <PileupDisplay.RenderingComponent model={PileupDisplay} />\n      </div>\n    </div>\n  )\n}\n\nexport default observer(AlignmentsDisplay)\n","import DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\nimport PluginManager from '@jbrowse/core/PluginManager'\n// locals\nimport configSchemaFactory from './models/configSchema'\nimport modelFactory from './models/model'\nimport ReactComponent from './components/AlignmentsDisplay'\n\nexport default function (pluginManager: PluginManager) {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaFactory(pluginManager)\n    return new DisplayType({\n      name: 'LinearAlignmentsDisplay',\n      displayName: 'Alignments display (combination)',\n      configSchema,\n      stateModel: modelFactory(pluginManager, configSchema),\n      trackType: 'AlignmentsTrack',\n      viewType: 'LinearGenomeView',\n      ReactComponent,\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { baseLinearDisplayConfigSchema } from '@jbrowse/plugin-linear-genome-view'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config LinearAlignmentsDisplay\n * has a \"pileup\" sub-display, where you can see individual reads and a\n * quantitative \"snpcoverage\" sub-display track showing SNP frequencies\n */\nexport default function configModelFactory(pm: PluginManager) {\n  return ConfigurationSchema(\n    'LinearAlignmentsDisplay',\n    {\n      /**\n       * #slot\n       */\n      pileupDisplay: pm.getDisplayType('LinearPileupDisplay').configSchema,\n\n      /**\n       * #slot\n       */\n      snpCoverageDisplay: pm.getDisplayType('LinearSNPCoverageDisplay')\n        .configSchema,\n\n      /**\n       * #slot\n       */\n      height: {\n        type: 'number',\n        defaultValue: 250,\n      },\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: baseLinearDisplayConfigSchema,\n      explicitlyTyped: true,\n    },\n  )\n}\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { Feature } from '@jbrowse/core/util'\nimport { Tooltip } from '@jbrowse/plugin-wiggle'\n\ntype Count = {\n  [key: string]: {\n    total: number\n    '-1': number\n    '0': number\n    '1': number\n  }\n}\n\ntype SNPInfo = {\n  cov: Count\n  lowqual: Count\n  noncov: Count\n  delskips: Count\n  refbase: string\n  total: number\n  ref: number\n  all: number\n  '-1': number\n  '0': number\n  '1': number\n}\n\nconst en = (n: number) => n.toLocaleString('en-US')\nconst toP = (s = 0) => +(+s).toFixed(1)\nconst pct = (n: number, total: number) => `${toP((n / (total || 1)) * 100)}%`\ninterface Props {\n  feature: Feature\n}\nconst TooltipContents = React.forwardRef<HTMLDivElement, Props>(function (\n  { feature },\n  reactRef,\n) {\n  const start = feature.get('start')\n  const end = feature.get('end')\n  const name = feature.get('refName')\n  const {\n    refbase,\n    all,\n    total,\n    ref,\n    '-1': rn1,\n    '1': r1,\n    '0': r0,\n    ...info\n  } = feature.get('snpinfo') as SNPInfo\n  const loc = [name, start === end ? en(start) : `${en(start)}..${en(end)}`]\n    .filter(f => !!f)\n    .join(':')\n\n  return (\n    <div ref={reactRef}>\n      <table>\n        <caption>{loc}</caption>\n        <thead>\n          <tr>\n            <th>Base</th>\n            <th>Count</th>\n            <th>% of Total</th>\n            <th>Strands</th>\n            <th>Source</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Total</td>\n            <td>{all}</td>\n          </tr>\n          <tr>\n            <td>REF {refbase ? `(${refbase.toUpperCase()})` : ''}</td>\n            <td>{ref}</td>\n            <td>{pct(ref, all)}</td>\n            <td>\n              {rn1 ? `${rn1}(-)` : ''}\n              {r1 ? `${r1}(+)` : ''}\n            </td>\n            <td />\n          </tr>\n\n          {Object.entries(info as unknown as Record<string, Count>).map(\n            ([key, entry]) =>\n              Object.entries(entry).map(([base, score]) => (\n                <tr key={base}>\n                  <td>{base.toUpperCase()}</td>\n                  <td>{score.total}</td>\n                  <td>\n                    {base === 'total' || base === 'skip'\n                      ? '---'\n                      : pct(score.total, all)}\n                  </td>\n                  <td>\n                    {score['-1'] ? `${score['-1']}(-)` : ''}\n                    {score['1'] ? `${score['1']}(+)` : ''}\n                  </td>\n                  <td>{key}</td>\n                </tr>\n              )),\n          )}\n        </tbody>\n      </table>\n    </div>\n  )\n})\n\ntype Coord = [number, number]\n\nconst SNPCoverageTooltip = observer(\n  (props: {\n    model: { featureUnderMouse: Feature }\n    height: number\n    offsetMouseCoord: Coord\n    clientMouseCoord: Coord\n    clientRect?: DOMRect\n  }) => {\n    const { model } = props\n    const { featureUnderMouse: feat } = model\n    return feat && feat.get('type') === 'skip' ? null : (\n      <Tooltip TooltipContents={TooltipContents} {...props} />\n    )\n  },\n)\n\nexport default SNPCoverageTooltip\n","import { types, IAnyStateTreeNode } from 'mobx-state-tree'\nimport { BlockSet } from '@jbrowse/core/util/blockTypes'\nimport { getSession } from '@jbrowse/core/util'\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\nexport async function getUniqueTagValues(\n  self: IAnyStateTreeNode & { adapterConfig: AnyConfigurationModel },\n  colorScheme: { type: string; tag?: string },\n  blocks: BlockSet,\n  opts?: {\n    headers?: Record<string, string>\n    signal?: AbortSignal\n    filters?: string[]\n  },\n) {\n  const { rpcManager } = getSession(self)\n  const { adapterConfig } = self\n  const sessionId = getRpcSessionId(self)\n  const values = await rpcManager.call(\n    getRpcSessionId(self),\n    'PileupGetGlobalValueForTag',\n    {\n      adapterConfig,\n      tag: colorScheme.tag,\n      sessionId,\n      regions: blocks.contentBlocks,\n      ...opts,\n    },\n  )\n  return values as string[]\n}\n\ntype Track = IAnyStateTreeNode & { configuration: AnyConfigurationModel }\n\nexport async function getUniqueModificationValues(\n  self: IAnyStateTreeNode & {\n    parentTrack: Track\n  },\n  adapterConfig: AnyConfigurationModel,\n  colorScheme: { type: string; tag?: string },\n  blocks: BlockSet,\n  opts?: {\n    headers?: Record<string, string>\n    signal?: AbortSignal\n    filters?: string[]\n  },\n) {\n  const { rpcManager } = getSession(self)\n  const sessionId = getRpcSessionId(self)\n  const values = await rpcManager.call(\n    sessionId,\n    'PileupGetVisibleModifications',\n    {\n      adapterConfig,\n      tag: colorScheme.tag,\n      sessionId,\n      regions: blocks.contentBlocks,\n      ...opts,\n    },\n  )\n  return values as string[]\n}\n\nexport const FilterModel = types.model({\n  flagInclude: types.optional(types.number, 0),\n  flagExclude: types.optional(types.number, 1540),\n  readName: types.maybe(types.string),\n  tagFilter: types.maybe(\n    types.model({\n      tag: types.string,\n      value: types.string,\n    }),\n  ),\n})\n","import { types, cast, getEnv, getSnapshot, isAlive } from 'mobx-state-tree'\nimport { observable } from 'mobx'\n\n// jbrowse\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport {\n  getConf,\n  readConfObject,\n  AnyConfigurationSchemaType,\n  AnyConfigurationModel,\n} from '@jbrowse/core/configuration'\nimport { linearWiggleDisplayModelFactory } from '@jbrowse/plugin-wiggle'\nimport { getContainingView } from '@jbrowse/core/util'\nimport { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\n\n// locals\nimport Tooltip from '../components/Tooltip'\nimport { FilterModel, getUniqueModificationValues } from '../../shared'\nimport { createAutorun, modificationColors } from '../../util'\nimport { randomColor } from '../../util'\n\n// using a map because it preserves order\nconst rendererTypes = new Map([['snpcoverage', 'SNPCoverageRenderer']])\n\ntype LGV = LinearGenomeViewModel\n\n/**\n * #stateModel LinearSNPCoverageDisplay\n * extends `LinearWiggleDisplay`\n */\nfunction stateModelFactory(\n  pluginManager: PluginManager,\n  configSchema: AnyConfigurationSchemaType,\n) {\n  return types\n    .compose(\n      'LinearSNPCoverageDisplay',\n      linearWiggleDisplayModelFactory(pluginManager, configSchema),\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LinearSNPCoverageDisplay'),\n        /**\n         * #property\n         */\n        drawInterbaseCounts: types.maybe(types.boolean),\n        /**\n         * #property\n         */\n        drawIndicators: types.maybe(types.boolean),\n        /**\n         * #property\n         */\n        drawArcs: types.maybe(types.boolean),\n        /**\n         * #property\n         */\n        filterBy: types.optional(FilterModel, {}),\n        /**\n         * #property\n         */\n        colorBy: types.maybe(\n          types.model({\n            type: types.string,\n            tag: types.maybe(types.string),\n          }),\n        ),\n      }),\n    )\n    .volatile(() => ({\n      modificationTagMap: observable.map<string, string>({}),\n      modificationsReady: false,\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setConfig(configuration: AnyConfigurationModel) {\n        self.configuration = configuration\n      },\n      /**\n       * #action\n       */\n      setFilterBy(filter: {\n        flagInclude: number\n        flagExclude: number\n        readName?: string\n        tagFilter?: { tag: string; value: string }\n      }) {\n        self.filterBy = cast(filter)\n      },\n      /**\n       * #action\n       */\n      setColorBy(colorBy?: { type: string; tag?: string }) {\n        self.colorBy = cast(colorBy)\n      },\n\n      /**\n       * #action\n       */\n      updateModificationColorMap(uniqueModifications: string[]) {\n        uniqueModifications.forEach(value => {\n          if (!self.modificationTagMap.has(value)) {\n            self.modificationTagMap.set(\n              value,\n              modificationColors[value] || randomColor(),\n            )\n          }\n        })\n      },\n    }))\n    .views(self => {\n      const { renderProps: superRenderProps } = self\n      return {\n        /**\n         * #getter\n         */\n        get rendererConfig() {\n          const configBlob =\n            getConf(self, ['renderers', self.rendererTypeName]) || {}\n\n          return self.rendererType.configSchema.create(\n            {\n              ...configBlob,\n              drawInterbaseCounts:\n                self.drawInterbaseCounts ?? configBlob.drawInterbaseCounts,\n              drawIndicators: self.drawIndicators ?? configBlob.drawIndicators,\n              drawArcs: self.drawArcs ?? configBlob.drawArcs,\n            },\n            getEnv(self),\n          )\n        },\n        /**\n         * #getter\n         */\n        get drawArcsSetting() {\n          return (\n            self.drawArcs ?? readConfObject(this.rendererConfig, 'drawArcs')\n          )\n        },\n        /**\n         * #getter\n         */\n        get drawInterbaseCountsSetting() {\n          return (\n            self.drawInterbaseCounts ??\n            readConfObject(this.rendererConfig, 'drawInterbaseCounts')\n          )\n        },\n        /**\n         * #getter\n         */\n        get drawIndicatorsSetting() {\n          return (\n            self.drawIndicators ??\n            readConfObject(this.rendererConfig, 'drawIndicators')\n          )\n        },\n\n        /**\n         * #getter\n         */\n        get autorunReady() {\n          const view = getContainingView(self) as LGV\n          return (\n            view.initialized &&\n            self.featureDensityStatsReady &&\n            !self.regionTooLarge &&\n            !self.error\n          )\n        },\n\n        get renderReady() {\n          const superProps = superRenderProps()\n          return !superProps.notReady && self.modificationsReady\n        },\n\n        get ready() {\n          return this.renderReady\n        },\n\n        /**\n         * #method\n         */\n        renderProps() {\n          const superProps = superRenderProps()\n          const { colorBy, filterBy, modificationTagMap } = self\n          return {\n            ...superProps,\n            notReady: !this.ready,\n            modificationTagMap: Object.fromEntries(modificationTagMap.toJSON()),\n\n            // must use getSnapshot because otherwise changes to e.g. just the\n            // colorBy.type are not read\n            colorBy: colorBy ? getSnapshot(colorBy) : undefined,\n            filterBy: filterBy ? getSnapshot(filterBy) : undefined,\n          }\n        },\n      }\n    })\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setModificationsReady(flag: boolean) {\n        self.modificationsReady = flag\n      },\n      /**\n       * #action\n       */\n      toggleDrawIndicators() {\n        self.drawIndicators = !self.drawIndicatorsSetting\n      },\n      /**\n       * #action\n       */\n      toggleDrawInterbaseCounts() {\n        self.drawInterbaseCounts = !self.drawInterbaseCountsSetting\n      },\n      /**\n       * #action\n       */\n      toggleDrawArcs() {\n        self.drawArcs = !self.drawArcsSetting\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        createAutorun(\n          self,\n          async () => {\n            self.setModificationsReady(false)\n            if (!self.autorunReady) {\n              return\n            }\n            const view = getContainingView(self) as LGV\n            const { staticBlocks } = view\n            const { colorBy } = self\n            if (colorBy?.type === 'modifications') {\n              const adapter = getConf(self.parentTrack, 'adapter')\n              const vals = await getUniqueModificationValues(\n                self,\n                adapter,\n                colorBy,\n                staticBlocks,\n              )\n              if (isAlive(self)) {\n                self.updateModificationColorMap(vals)\n                self.setModificationsReady(true)\n              }\n            } else {\n              self.setModificationsReady(true)\n            }\n          },\n          { delay: 1000 },\n        )\n      },\n    }))\n\n    .views(self => {\n      const { trackMenuItems: superTrackMenuItems } = self\n      return {\n        /**\n         * #getter\n         */\n        get TooltipComponent() {\n          return Tooltip\n        },\n\n        /**\n         * #getter\n         */\n        get adapterConfig() {\n          const subadapter = getConf(self.parentTrack, 'adapter')\n          return {\n            type: 'SNPCoverageAdapter',\n            subadapter,\n          }\n        },\n\n        /**\n         * #getter\n         */\n        get rendererTypeName() {\n          return rendererTypes.get('snpcoverage')\n        },\n\n        /**\n         * #getter\n         */\n        get needsScalebar() {\n          return true\n        },\n\n        /**\n         * #method\n         */\n        contextMenuItems() {\n          return []\n        },\n\n        /**\n         * #method\n         */\n        trackMenuItems() {\n          return [\n            ...superTrackMenuItems(),\n            {\n              label: 'Draw insertion/clipping indicators',\n              type: 'checkbox',\n              checked: self.drawIndicatorsSetting,\n              onClick: () => self.toggleDrawIndicators(),\n            },\n            {\n              label: 'Draw insertion/clipping counts',\n              type: 'checkbox',\n              checked: self.drawInterbaseCountsSetting,\n              onClick: () => self.toggleDrawInterbaseCounts(),\n            },\n            {\n              label: 'Draw arcs',\n              type: 'checkbox',\n              checked: self.drawArcsSetting,\n              onClick: () => self.toggleDrawArcs(),\n            },\n          ]\n        },\n      }\n    })\n}\n\nexport type SNPCoverageDisplayModel = ReturnType<typeof stateModelFactory>\n\nexport default stateModelFactory\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport configSchemaFactory from './models/configSchema'\nimport modelFactory from './models/model'\nimport { LinearWiggleDisplayReactComponent } from '@jbrowse/plugin-wiggle'\nimport DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\n\nexport default function register(pluginManager: PluginManager) {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaFactory(pluginManager)\n    return new DisplayType({\n      name: 'LinearSNPCoverageDisplay',\n      displayName: 'SNPCoverage display',\n      configSchema,\n      stateModel: modelFactory(pluginManager, configSchema),\n      trackType: 'AlignmentsTrack',\n      viewType: 'LinearGenomeView',\n      ReactComponent: LinearWiggleDisplayReactComponent,\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { baseLinearDisplayConfigSchema } from '@jbrowse/plugin-linear-genome-view'\nimport { types } from 'mobx-state-tree'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config LinearSNPCoverageDisplay\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport default function SNPCoverageConfigFactory(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'LinearSNPCoverageDisplay',\n    {\n      /**\n       * #slot\n       */\n      autoscale: {\n        type: 'stringEnum',\n        defaultValue: 'local',\n        model: types.enumeration('Autoscale type', ['local']),\n        description:\n          'performs local autoscaling (no other options for SNP Coverage available)',\n      },\n      /**\n       * #slot\n       */\n      minScore: {\n        type: 'number',\n        defaultValue: Number.MIN_VALUE,\n        description: 'minimum value for the y-scale',\n      },\n      /**\n       * #slot\n       */\n      maxScore: {\n        type: 'number',\n        description: 'maximum value for the y-scale',\n        defaultValue: Number.MAX_VALUE,\n      },\n      /**\n       * #slot\n       */\n      scaleType: {\n        type: 'stringEnum',\n        model: types.enumeration('Scale type', ['linear', 'log']), // todo zscale\n        description: 'The type of scale to use',\n        defaultValue: 'linear',\n      },\n      /**\n       * #slot\n       */ inverted: {\n        type: 'boolean',\n        description: 'draw upside down',\n        defaultValue: false,\n      },\n      /**\n       * #slot\n       */\n      multiTicks: {\n        type: 'boolean',\n        description: 'Display multiple values for the ticks',\n        defaultValue: false,\n      },\n      /**\n       * #slot\n       */\n      renderers: ConfigurationSchema('RenderersConfiguration', {\n        SNPCoverageRenderer: pluginManager.getRendererType(\n          'SNPCoverageRenderer',\n        ).configSchema,\n      }),\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: baseLinearDisplayConfigSchema,\n      explicitlyTyped: true,\n    },\n  )\n}\n","import React from 'react'\nimport { LoadingEllipses } from '@jbrowse/core/ui'\nimport { BlockMsg } from '@jbrowse/plugin-linear-genome-view'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\n\n// local\nimport { LinearReadCloudDisplayModel } from '../LinearReadCloudDisplay/model'\nimport { LinearReadArcsDisplayModel } from '../LinearReadArcsDisplay/model'\nimport { getContainingView } from '@jbrowse/core/util'\n\nconst useStyles = makeStyles()(theme => {\n  const bg = theme.palette.action.disabledBackground\n  return {\n    loading: {\n      backgroundColor: theme.palette.background.default,\n      backgroundImage: `repeating-linear-gradient(45deg, transparent, transparent 5px, ${bg} 5px, ${bg} 10px)`,\n      position: 'absolute',\n      bottom: 0,\n      height: 50,\n      width: 300,\n      right: 0,\n      pointerEvents: 'none',\n      textAlign: 'center',\n    },\n  }\n})\n\nexport default observer(function ({\n  model,\n  children,\n}: {\n  model: LinearReadArcsDisplayModel | LinearReadCloudDisplayModel\n  children?: React.ReactNode\n}) {\n  const { error, regionTooLarge } = model\n  return error ? (\n    <BlockMsg\n      message={`${error}`}\n      severity=\"error\"\n      buttonText=\"Reload\"\n      action={model.reload}\n    />\n  ) : regionTooLarge ? (\n    model.regionCannotBeRendered()\n  ) : (\n    <DataDisplay model={model}>{children}</DataDisplay>\n  )\n})\n\nconst DataDisplay = observer(function ({\n  model,\n  children,\n}: {\n  model: LinearReadArcsDisplayModel | LinearReadCloudDisplayModel\n  children?: React.ReactNode\n}) {\n  const { drawn, loading } = model\n  const view = getContainingView(model)\n  const left = (model.lastDrawnOffsetPx || 0) - view.offsetPx\n  return (\n    // this data-testid is located here because changing props on the canvas\n    // itself is very sensitive to triggering ref invalidation\n    <div data-testid={`drawn-${drawn}`}>\n      <div style={{ position: 'absolute', left }}>{children}</div>\n      {left !== 0 || loading ? <LoadingBar model={model} /> : null}\n    </div>\n  )\n})\n\nconst LoadingBar = observer(function ({\n  model,\n}: {\n  model: LinearReadArcsDisplayModel | LinearReadCloudDisplayModel\n}) {\n  const { classes } = useStyles()\n  const { message } = model\n  return (\n    <div className={classes.loading}>\n      <LoadingEllipses message={message} />\n    </div>\n  )\n})\n","import React, { useCallback } from 'react'\nimport { observer } from 'mobx-react'\nimport { getContainingView } from '@jbrowse/core/util'\nimport { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\n\n// local\nimport { LinearReadArcsDisplayModel } from '../model'\nimport BaseDisplayComponent from '../../shared/BaseDisplayComponent'\n\ntype LGV = LinearGenomeViewModel\n\nconst Arcs = observer(function ({\n  model,\n}: {\n  model: LinearReadArcsDisplayModel\n}) {\n  const view = getContainingView(model) as LGV\n  const width = Math.round(view.dynamicBlocks.totalWidthPx)\n  const height = model.height\n  const cb = useCallback(\n    (ref: HTMLCanvasElement) => {\n      model.setRef(ref)\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [model, width, height],\n  )\n\n  // note: the position absolute below avoids scrollbar from appearing on track\n  return (\n    <canvas\n      data-testid=\"arc-canvas\"\n      ref={cb}\n      style={{ width, height, position: 'absolute' }}\n      width={width * 2}\n      height={height * 2}\n    />\n  )\n})\n\nexport default observer(function ({\n  model,\n}: {\n  model: LinearReadArcsDisplayModel\n}) {\n  return (\n    <BaseDisplayComponent model={model}>\n      <Arcs model={model} />\n    </BaseDisplayComponent>\n  )\n})\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { linearBasicDisplayConfigSchemaFactory } from '@jbrowse/plugin-linear-genome-view'\nimport { types } from 'mobx-state-tree'\n\n/**\n * #config LinearReadArcsDisplay\n */\nfunction configSchemaF(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'LinearReadArcsDisplay',\n    {\n      /**\n       * #slot\n       */\n      maxFeatureScreenDensity: {\n        type: 'number',\n        description: 'maximum features per pixel that is displayed in the view',\n        defaultValue: 5,\n      },\n\n      /**\n       * #slot\n       */\n      lineWidth: {\n        type: 'number',\n        description: 'set arc line width',\n        defaultValue: 1,\n      },\n\n      /**\n       * #slot\n       */\n      jitter: {\n        type: 'number',\n        description:\n          'jitters the x position so e.g. if many reads map to exact same x position, jittering makes it easy to see that there are many of them',\n        defaultValue: 0,\n      },\n\n      /**\n       * #slot\n       */\n      colorScheme: {\n        type: 'stringEnum',\n        model: types.enumeration('colorScheme', [\n          'strand',\n          'normal',\n          'insertSize',\n          'insertSizeAndOrientation',\n          'mappingQuality',\n          'tag',\n        ]),\n        description: 'color scheme to use',\n        defaultValue: 'normal',\n      },\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: linearBasicDisplayConfigSchemaFactory(pluginManager),\n      explicitlyTyped: true,\n    },\n  )\n}\n\nexport default configSchemaF\n","import React, { lazy } from 'react'\nimport { cast, types, Instance } from 'mobx-state-tree'\nimport {\n  AnyConfigurationSchemaType,\n  ConfigurationReference,\n  getConf,\n} from '@jbrowse/core/configuration'\nimport { getSession } from '@jbrowse/core/util'\nimport { BaseDisplay } from '@jbrowse/core/pluggableElementTypes'\nimport {\n  FeatureDensityMixin,\n  TrackHeightMixin,\n} from '@jbrowse/plugin-linear-genome-view'\n\n// icons\nimport PaletteIcon from '@mui/icons-material/Palette'\nimport FilterListIcon from '@mui/icons-material/ClearAll'\n\n// locals\nimport { FilterModel } from '../shared'\nimport { ChainData } from '../shared/fetchChains'\n\n// async\nconst FilterByTagDlg = lazy(() => import('../shared/FilterByTag'))\n\ninterface Filter {\n  flagInclude: number\n  flagExclude: number\n  readName?: string\n  tagFilter?: { tag: string; value: string }\n}\n\n/**\n * #stateModel LinearReadArcsDisplay\n * extends `BaseDisplay`, it is not a block based track, hence not\n * BaseLinearDisplay\n */\nfunction stateModelFactory(configSchema: AnyConfigurationSchemaType) {\n  return types\n    .compose(\n      'LinearReadArcsDisplay',\n      BaseDisplay,\n      TrackHeightMixin(),\n      FeatureDensityMixin(),\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LinearReadArcsDisplay'),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n\n        /**\n         * #property\n         */\n        filterBy: types.optional(FilterModel, {}),\n\n        /**\n         * #property\n         */\n        lineWidth: types.maybe(types.number),\n\n        /**\n         * #property\n         */\n        jitter: types.maybe(types.number),\n\n        /**\n         * #property\n         */\n        colorBy: types.maybe(\n          types.model({\n            type: types.string,\n            tag: types.maybe(types.string),\n            extra: types.frozen(),\n          }),\n        ),\n\n        /**\n         * #property\n         */\n        drawInter: true,\n\n        /**\n         * #property\n         */\n        drawLongRange: true,\n      }),\n    )\n    .volatile(() => ({\n      loading: false,\n      chainData: undefined as ChainData | undefined,\n      lastDrawnOffsetPx: undefined as number | undefined,\n      lastDrawnBpPerPx: 0,\n      ref: null as HTMLCanvasElement | null,\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setLastDrawnOffsetPx(n: number) {\n        self.lastDrawnOffsetPx = n\n      },\n      /**\n       * #action\n       */\n      setLastDrawnBpPerPx(n: number) {\n        self.lastDrawnBpPerPx = n\n      },\n      /**\n       * #action\n       */\n      setLoading(f: boolean) {\n        self.loading = f\n      },\n\n      /**\n       * #action\n       */\n      reload() {\n        self.error = undefined\n      },\n      /**\n       * #action\n       * internal, a reference to a HTMLCanvas because we use a autorun to draw\n       * the canvas\n       */\n      setRef(ref: HTMLCanvasElement | null) {\n        self.ref = ref\n      },\n\n      /**\n       * #action\n       */\n      setColorScheme(s: { type: string }) {\n        self.colorBy = cast(s)\n      },\n\n      /**\n       * #action\n       */\n      setChainData(args: ChainData) {\n        self.chainData = args\n      },\n\n      /**\n       * #action\n       */\n      setDrawInter(f: boolean) {\n        self.drawInter = f\n      },\n\n      /**\n       * #action\n       */\n      setDrawLongRange(f: boolean) {\n        self.drawLongRange = f\n      },\n\n      /**\n       * #action\n       */\n      setFilterBy(filter: Filter) {\n        self.filterBy = cast(filter)\n      },\n\n      /**\n       * #action\n       * thin, bold, extrabold, etc\n       */\n      setLineWidth(n: number) {\n        self.lineWidth = n\n      },\n\n      /**\n       * #action\n       * jitter val, helpful to jitter the x direction so you see better\n       * evidence when e.g. 100 long reads map to same x position\n       */\n      setJitter(n: number) {\n        self.jitter = n\n      },\n    }))\n\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get drawn() {\n        return self.lastDrawnOffsetPx !== undefined\n      },\n      /**\n       * #getter\n       */\n      get lineWidthSetting() {\n        return self.lineWidth ?? getConf(self, 'lineWidth')\n      },\n\n      /**\n       * #getter\n       */\n      get jitterVal(): number {\n        return self.jitter ?? getConf(self, 'jitter')\n      },\n    }))\n    .views(self => {\n      const {\n        trackMenuItems: superTrackMenuItems,\n        renderProps: superRenderProps,\n      } = self\n      return {\n        /**\n         * #method\n         * only used to tell system it's ready for export\n         */\n        renderProps() {\n          return {\n            ...superRenderProps(),\n            notReady: !self.chainData,\n          }\n        },\n\n        /**\n         * #method\n         */\n        trackMenuItems() {\n          return [\n            ...superTrackMenuItems(),\n            {\n              label: 'Filter by',\n              icon: FilterListIcon,\n              onClick: () => {\n                getSession(self).queueDialog(handleClose => [\n                  FilterByTagDlg,\n                  { model: self, handleClose },\n                ])\n              },\n            },\n            {\n              label: 'Line width',\n              subMenu: [\n                {\n                  label: 'Thin',\n                  onClick: () => self.setLineWidth(1),\n                },\n                {\n                  label: 'Bold',\n                  onClick: () => self.setLineWidth(2),\n                },\n                {\n                  label: 'Extra bold',\n                  onClick: () => self.setLineWidth(5),\n                },\n              ],\n            },\n            {\n              label: 'Jitter x-positions',\n              subMenu: [\n                {\n                  type: 'checkbox',\n                  checked: self.jitterVal === 0,\n                  label: 'None',\n                  onClick: () => self.setJitter(0),\n                },\n                {\n                  type: 'checkbox',\n                  checked: self.jitterVal === 2,\n                  label: 'Small',\n                  onClick: () => self.setJitter(2),\n                },\n                {\n                  type: 'checkbox',\n                  checked: self.jitterVal === 10,\n                  label: 'Large',\n                  onClick: () => self.setJitter(10),\n                },\n              ],\n            },\n            {\n              label: 'Draw inter-region vertical lines',\n              type: 'checkbox',\n              checked: self.drawInter,\n              onClick: () => self.setDrawInter(!self.drawInter),\n            },\n            {\n              label: 'Draw long range connections',\n              type: 'checkbox',\n              checked: self.drawLongRange,\n              onClick: () => self.setDrawLongRange(!self.drawLongRange),\n            },\n            {\n              label: 'Color scheme',\n              icon: PaletteIcon,\n              subMenu: [\n                {\n                  label: 'Insert size ± 3σ and orientation',\n                  onClick: () =>\n                    self.setColorScheme({ type: 'insertSizeAndOrientation' }),\n                },\n                {\n                  label: 'Insert size ± 3σ',\n                  onClick: () => self.setColorScheme({ type: 'insertSize' }),\n                },\n                {\n                  label: 'Orientation',\n                  onClick: () => self.setColorScheme({ type: 'orientation' }),\n                },\n                {\n                  label: 'Insert size gradient',\n                  onClick: () => self.setColorScheme({ type: 'gradient' }),\n                },\n              ],\n            },\n          ]\n        },\n      }\n    })\n    .views(self => ({\n      /**\n       * #method\n       */\n      async renderSvg(opts: {\n        rasterizeLayers?: boolean\n      }): Promise<React.ReactNode> {\n        const { renderSvg } = await import('../shared/renderSvg')\n        const { drawFeats } = await import('./drawFeats')\n        return renderSvg(self as LinearReadArcsDisplayModel, opts, drawFeats)\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        ;(async () => {\n          try {\n            const { doAfterAttach } = await import('../shared/afterAttach')\n            const { drawFeats } = await import('./drawFeats')\n            doAfterAttach(self, drawFeats)\n          } catch (e) {\n            console.error(e)\n            self.setError(e)\n          }\n        })()\n      },\n    }))\n}\n\nexport type LinearReadArcsDisplayStateModel = ReturnType<\n  typeof stateModelFactory\n>\nexport type LinearReadArcsDisplayModel =\n  Instance<LinearReadArcsDisplayStateModel>\n\nexport default stateModelFactory\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\n\n// locals\nimport ReactComponent from './components/ReactComponent'\nimport configSchemaF from './configSchema'\nimport stateModelF from './model'\n\nexport default function register(pluginManager: PluginManager) {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaF(pluginManager)\n    return new DisplayType({\n      name: 'LinearReadArcsDisplay',\n      displayName: 'Arc display',\n      configSchema,\n      stateModel: stateModelF(configSchema),\n      trackType: 'AlignmentsTrack',\n      viewType: 'LinearGenomeView',\n      subDisplay: { type: 'LinearAlignmentsDisplay', lowerPanel: true },\n      ReactComponent,\n    })\n  })\n}\n","import React, { useCallback } from 'react'\nimport { observer } from 'mobx-react'\nimport { getContainingView } from '@jbrowse/core/util'\nimport { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\n\n// local\nimport { LinearReadCloudDisplayModel } from '../model'\nimport BaseDisplayComponent from '../../shared/BaseDisplayComponent'\n\ntype LGV = LinearGenomeViewModel\n\nconst Cloud = observer(function ({\n  model,\n}: {\n  model: LinearReadCloudDisplayModel\n}) {\n  const view = getContainingView(model) as LGV\n  const width = Math.round(view.dynamicBlocks.totalWidthPx)\n  const height = model.height\n  const cb = useCallback(\n    (ref: HTMLCanvasElement) => model.setRef(ref),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [model, width, height],\n  )\n\n  // note: the position absolute below avoids scrollbar from appearing on track\n  return (\n    <canvas\n      data-testid=\"cloud-canvas\"\n      ref={cb}\n      style={{ width, height, position: 'absolute' }}\n      width={width * 2}\n      height={height * 2}\n    />\n  )\n})\n\nexport default observer(function ({\n  model,\n}: {\n  model: LinearReadCloudDisplayModel\n}) {\n  return (\n    <BaseDisplayComponent model={model}>\n      <Cloud model={model} />\n    </BaseDisplayComponent>\n  )\n})\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { linearBasicDisplayConfigSchemaFactory } from '@jbrowse/plugin-linear-genome-view'\nimport { types } from 'mobx-state-tree'\n\n/**\n * #config LinearReadCloudDisplay\n */\nfunction configSchemaF(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'LinearReadCloudDisplay',\n    {\n      /**\n       * #slot\n       */\n      maxFeatureScreenDensity: {\n        type: 'number',\n        description: 'maximum features per pixel that is displayed in the view',\n        defaultValue: 5,\n      },\n\n      /**\n       * #slot\n       */\n      featureHeight: {\n        type: 'number',\n        defaultValue: 7,\n      },\n\n      /**\n       * #slot\n       */\n      colorScheme: {\n        type: 'stringEnum',\n        model: types.enumeration('colorScheme', [\n          'strand',\n          'normal',\n          'insertSize',\n          'insertSizeAndOrientation',\n          'mappingQuality',\n          'tag',\n        ]),\n        description: 'color scheme to use',\n        defaultValue: 'normal',\n      },\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: linearBasicDisplayConfigSchemaFactory(pluginManager),\n      explicitlyTyped: true,\n    },\n  )\n}\n\nexport default configSchemaF\n","import React, { lazy } from 'react'\nimport { cast, types, Instance } from 'mobx-state-tree'\nimport { BaseDisplay } from '@jbrowse/core/pluggableElementTypes'\nimport {\n  AnyConfigurationSchemaType,\n  ConfigurationReference,\n} from '@jbrowse/core/configuration'\nimport { getSession } from '@jbrowse/core/util'\nimport {\n  FeatureDensityMixin,\n  TrackHeightMixin,\n} from '@jbrowse/plugin-linear-genome-view'\n\n// icons\nimport PaletteIcon from '@mui/icons-material/Palette'\nimport FilterListIcon from '@mui/icons-material/ClearAll'\n\n// locals\nimport { FilterModel } from '../shared'\nimport { ChainData } from '../shared/fetchChains'\n\n// async\nconst FilterByTagDlg = lazy(() => import('../shared/FilterByTag'))\n\ninterface Filter {\n  flagInclude: number\n  flagExclude: number\n  readName?: string\n  tagFilter?: { tag: string; value: string }\n}\n\n/**\n * #stateModel LinearReadCloudDisplay\n * extends `BaseDisplay`, it is not a block based track, hence not BaseLinearDisplay\n */\nfunction stateModelFactory(configSchema: AnyConfigurationSchemaType) {\n  return types\n    .compose(\n      'LinearReadCloudDisplay',\n      BaseDisplay,\n      TrackHeightMixin(),\n      FeatureDensityMixin(),\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LinearReadCloudDisplay'),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n\n        /**\n         * #property\n         */\n        filterBy: types.optional(FilterModel, {}),\n\n        /**\n         * #property\n         */\n        colorBy: types.maybe(\n          types.model({\n            type: types.string,\n            tag: types.maybe(types.string),\n            extra: types.frozen(),\n          }),\n        ),\n\n        /**\n         * #property\n         */\n        drawSingletons: true,\n      }),\n    )\n    .volatile(() => ({\n      loading: false,\n      chainData: undefined as ChainData | undefined,\n      lastDrawnOffsetPx: undefined as number | undefined,\n      lastDrawnBpPerPx: 0,\n      ref: null as HTMLCanvasElement | null,\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setDrawSingletons(f: boolean) {\n        self.drawSingletons = f\n      },\n      /**\n       * #action\n       */\n      setLastDrawnOffsetPx(n: number) {\n        self.lastDrawnOffsetPx = n\n      },\n      /**\n       * #action\n       */\n      setLastDrawnBpPerPx(n: number) {\n        self.lastDrawnBpPerPx = n\n      },\n\n      /**\n       * #action\n       */\n      setLoading(f: boolean) {\n        self.loading = f\n      },\n      /**\n       * #action\n       */\n      reload() {\n        self.error = undefined\n      },\n      /**\n       * #action\n       * internal, a reference to a HTMLCanvas because we use a autorun to draw\n       * the canvas\n       */\n      setRef(ref: HTMLCanvasElement | null) {\n        self.ref = ref\n      },\n\n      setColorScheme(s: { type: string }) {\n        self.colorBy = cast(s)\n      },\n\n      /**\n       * #action\n       */\n      setChainData(args: ChainData) {\n        self.chainData = args\n      },\n\n      /**\n       * #action\n       */\n      setFilterBy(filter: Filter) {\n        self.filterBy = cast(filter)\n      },\n    }))\n    .views(self => ({\n      get drawn() {\n        return self.lastDrawnOffsetPx !== undefined\n      },\n    }))\n    .views(self => {\n      const {\n        trackMenuItems: superTrackMenuItems,\n        renderProps: superRenderProps,\n      } = self\n\n      return {\n        // we don't use a server side renderer, so this fills in minimal\n        // info so as not to crash\n        renderProps() {\n          return {\n            ...superRenderProps(),\n            notReady: !self.chainData,\n          }\n        },\n\n        /**\n         * #method\n         */\n        trackMenuItems() {\n          return [\n            ...superTrackMenuItems(),\n            {\n              label: 'Draw singletons',\n              type: 'checkbox',\n              checked: self.drawSingletons,\n              onClick: () => self.setDrawSingletons(!self.drawSingletons),\n            },\n            {\n              label: 'Filter by',\n              icon: FilterListIcon,\n              onClick: () => {\n                getSession(self).queueDialog(handleClose => [\n                  FilterByTagDlg,\n                  { model: self, handleClose },\n                ])\n              },\n            },\n\n            {\n              label: 'Color scheme',\n              icon: PaletteIcon,\n              subMenu: [\n                {\n                  label: 'Insert size ± 3σ and orientation',\n                  onClick: () =>\n                    self.setColorScheme({ type: 'insertSizeAndOrientation' }),\n                },\n                {\n                  label: 'Insert size ± 3σ',\n                  onClick: () => self.setColorScheme({ type: 'insertSize' }),\n                },\n                {\n                  label: 'Orientation',\n                  onClick: () => self.setColorScheme({ type: 'orientation' }),\n                },\n                {\n                  label: 'Insert size gradient',\n                  onClick: () => self.setColorScheme({ type: 'gradient' }),\n                },\n              ],\n            },\n          ]\n        },\n\n        /**\n         * #method\n         */\n        async renderSvg(opts: {\n          rasterizeLayers?: boolean\n        }): Promise<React.ReactNode> {\n          const { renderSvg } = await import('../shared/renderSvg')\n          const { drawFeats } = await import('./drawFeats')\n          return renderSvg(self as LinearReadCloudDisplayModel, opts, drawFeats)\n        },\n      }\n    })\n    .actions(self => ({\n      afterAttach() {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        ;(async () => {\n          try {\n            const { doAfterAttach } = await import('../shared/afterAttach')\n            const { drawFeats } = await import('./drawFeats')\n            doAfterAttach(self, drawFeats)\n          } catch (e) {\n            console.error(e)\n            self.setError(e)\n          }\n        })()\n      },\n    }))\n}\n\nexport type LinearReadCloudDisplayStateModel = ReturnType<\n  typeof stateModelFactory\n>\nexport type LinearReadCloudDisplayModel =\n  Instance<LinearReadCloudDisplayStateModel>\n\nexport default stateModelFactory\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\n\n// locals\nimport ReactComponent from './components/ReactComponent'\nimport configSchemaF from './configSchema'\nimport stateModelF from './model'\n\nexport default function register(pluginManager: PluginManager) {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaF(pluginManager)\n    return new DisplayType({\n      name: 'LinearReadCloudDisplay',\n      displayName: 'Read cloud display',\n      configSchema,\n      stateModel: stateModelF(configSchema),\n      trackType: 'AlignmentsTrack',\n      viewType: 'LinearGenomeView',\n      subDisplay: { type: 'LinearAlignmentsDisplay', lowerPanel: true },\n      ReactComponent,\n    })\n  })\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport TrackType from '@jbrowse/core/pluggableElementTypes/TrackType'\nimport { createBaseTrackModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport configSchemaF from './configSchemaF'\n\nexport default function register(pm: PluginManager) {\n  pm.addTrackType(() => {\n    const configSchema = configSchemaF(pm)\n    const track = new TrackType({\n      name: 'AlignmentsTrack',\n      displayName: 'Alignments track',\n      configSchema,\n      stateModel: createBaseTrackModel(pm, 'AlignmentsTrack', configSchema),\n    })\n    const linearAlignmentsDisplay = pm.getDisplayType('LinearAlignmentsDisplay')\n    // Add LinearAlignmentsDisplay here so that it has priority over the other\n    // linear displays (defaults to order the displays are added, but we have\n    // to add the Pileup and SNPCoverage displays first).\n    track.addDisplayType(linearAlignmentsDisplay)\n    return track\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { createBaseTrackConfig } from '@jbrowse/core/pluggableElementTypes'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config AlignmentsTrack\n * has very little config; most config and state logic is on the display\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport default function configSchemaFactory(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'AlignmentsTrack',\n    {},\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: createBaseTrackConfig(pluginManager),\n    },\n  )\n}\n","import { lazy } from 'react'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\nimport WidgetType from '@jbrowse/core/pluggableElementTypes/WidgetType'\nimport { stateModelFactory as baseModelFactory } from '@jbrowse/core/BaseFeatureWidget'\n\nconst configSchema = ConfigurationSchema('AlignmentsFeatureWidget', {})\n\nexport function stateModelFactory(pluginManager: PluginManager) {\n  const baseModel = baseModelFactory(pluginManager)\n  return types.compose(\n    baseModel,\n    types.model('AlignmentsFeatureWidget', {\n      type: types.literal('AlignmentsFeatureWidget'),\n    }),\n  )\n}\n\nexport default function register(pluginManager: PluginManager) {\n  pluginManager.addWidgetType(\n    () =>\n      new WidgetType({\n        name: 'AlignmentsFeatureWidget',\n        heading: 'Feature details',\n        configSchema,\n        stateModel: stateModelFactory(pluginManager),\n        ReactComponent: lazy(() => import('./AlignmentsFeatureDetail')),\n      }),\n  )\n}\n\nexport { configSchema }\n","import { ReducedFeature } from '../shared/fetchChains'\n\nexport function getInsertSizeStats(features: ReducedFeature[]) {\n  const filtered = features.map(f => Math.abs(f.tlen))\n  const sum = filtered.reduce((a, b) => a + b, 0)\n  const sum2 = filtered.map(a => a * a).reduce((a, b) => a + b, 0)\n  const total = filtered.length\n  const avg = sum / total\n  const sd = Math.sqrt((total * sum2 - sum * sum) / (total * total))\n  const upper = avg + 4 * sd\n  const lower = avg - 3 * sd\n  return { upper, lower, avg, sd }\n}\n\nexport function filterForPairs(features: ReducedFeature[]) {\n  return features.filter(\n    f => f.flags & 2 && !(f.flags & 256) && !(f.flags & 2048),\n  )\n}\n","import RpcMethodType from '@jbrowse/core/pluggableElementTypes/RpcMethodType'\nimport { renameRegionsIfNeeded } from '@jbrowse/core/util'\nimport { RenderArgs } from '@jbrowse/core/rpc/coreRpcMethods'\n\n// specialized get features to return limited data about alignments\nexport default abstract class PileupBaseRPC extends RpcMethodType {\n  async serializeArguments(\n    args: RenderArgs & {\n      signal?: AbortSignal\n      statusCallback?: (arg: string) => void\n    },\n    rpcDriver: string,\n  ) {\n    const { rootModel } = this.pluginManager\n    const assemblyManager = rootModel?.session?.assemblyManager\n    if (!assemblyManager) {\n      throw new Error('no assembly manager available')\n    }\n\n    const renamedArgs = await renameRegionsIfNeeded(assemblyManager, args)\n\n    return super.serializeArguments(renamedArgs, rpcDriver)\n  }\n}\n","import { getAdapter } from '@jbrowse/core/data_adapters/dataAdapterCache'\nimport { Region, dedupe, groupBy } from '@jbrowse/core/util'\nimport { RemoteAbortSignal } from '@jbrowse/core/rpc/remoteAbortSignals'\nimport { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { toArray } from 'rxjs/operators'\nimport { firstValueFrom } from 'rxjs'\n// locals\nimport { filterForPairs, getInsertSizeStats } from '../util'\nimport PileupBaseRPC from '../base'\nimport { getTag } from '../../util'\n\n// specialized get features to return limited data about alignments\nexport default class PileupGetReducedFeatures extends PileupBaseRPC {\n  name = 'PileupGetReducedFeatures'\n\n  async execute(\n    args: {\n      adapterConfig: {}\n      signal?: RemoteAbortSignal\n      headers?: Record<string, string>\n      regions: Region[]\n      sessionId: string\n      tag: string\n    },\n    rpcDriver: string,\n  ) {\n    const des = await this.deserializeArguments(args, rpcDriver)\n    const { adapterConfig, sessionId, regions } = des\n    const dataAdapter = (\n      await getAdapter(this.pluginManager, sessionId, adapterConfig)\n    ).dataAdapter as BaseFeatureDataAdapter\n\n    const featuresArray = await firstValueFrom(\n      dataAdapter.getFeaturesInMultipleRegions(regions, des).pipe(toArray()),\n    )\n\n    const reduced = dedupe(\n      featuresArray.map(f => ({\n        id: f.id(),\n        refName: f.get('refName'),\n        name: f.get('name'),\n        start: f.get('start'),\n        strand: f.get('strand'),\n        end: f.get('end'),\n        flags: f.get('flags'),\n        tlen: f.get('template_length'),\n        pair_orientation: f.get('pair_orientation'),\n        next_ref: f.get('next_ref'),\n        next_pos: f.get('next_pos'),\n        clipPos: f.get('clipPos'),\n        SA: getTag(f, 'SA'),\n      })),\n      f => f.id,\n    )\n\n    const filtered = filterForPairs(reduced)\n    const stats = filtered.length ? getInsertSizeStats(filtered) : undefined\n    const chains = groupBy(reduced, f => f.name)\n\n    return {\n      chains: Object.values(chains),\n      stats,\n      hasPaired: !!stats,\n      containsNoTransferables: true,\n    }\n  }\n}\n","import { getAdapter } from '@jbrowse/core/data_adapters/dataAdapterCache'\nimport { RemoteAbortSignal } from '@jbrowse/core/rpc/remoteAbortSignals'\nimport { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { Region } from '@jbrowse/core/util'\nimport { toArray } from 'rxjs/operators'\nimport { firstValueFrom } from 'rxjs'\n\n// locals\nimport { getModificationTypes } from '../../MismatchParser'\nimport PileupBaseRPC from '../base'\nimport { getTagAlt } from '../../util'\n\nexport default class PileupGetVisibleModifications extends PileupBaseRPC {\n  name = 'PileupGetVisibleModifications'\n\n  async execute(\n    args: {\n      adapterConfig: {}\n      signal?: RemoteAbortSignal\n      headers?: Record<string, string>\n      regions: Region[]\n      sessionId: string\n      tag: string\n    },\n    rpcDriver: string,\n  ) {\n    const { adapterConfig, sessionId, regions } =\n      await this.deserializeArguments(args, rpcDriver)\n    const dataAdapter = (\n      await getAdapter(this.pluginManager, sessionId, adapterConfig)\n    ).dataAdapter as BaseFeatureDataAdapter\n\n    const featuresArray = await firstValueFrom(\n      dataAdapter.getFeaturesInMultipleRegions(regions).pipe(toArray()),\n    )\n\n    const uniqueValues = new Set<string>()\n    featuresArray.forEach(f => {\n      getModificationTypes(getTagAlt(f, 'MM', 'Mm') || '').forEach(t =>\n        uniqueValues.add(t),\n      )\n    })\n    return [...uniqueValues]\n  }\n}\n","import { getAdapter } from '@jbrowse/core/data_adapters/dataAdapterCache'\nimport { Region } from '@jbrowse/core/util'\nimport { RemoteAbortSignal } from '@jbrowse/core/rpc/remoteAbortSignals'\nimport { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { toArray } from 'rxjs/operators'\nimport { firstValueFrom } from 'rxjs'\n\n// locals\nimport PileupBaseRPC from '../base'\nimport { getTag } from '../../util'\n\nexport default class PileupGetGlobalValueForTag extends PileupBaseRPC {\n  name = 'PileupGetGlobalValueForTag'\n\n  async execute(\n    args: {\n      adapterConfig: {}\n      signal?: RemoteAbortSignal\n      headers?: Record<string, string>\n      regions: Region[]\n      sessionId: string\n      tag: string\n    },\n    rpcDriver: string,\n  ) {\n    const { adapterConfig, sessionId, regions, tag } =\n      await this.deserializeArguments(args, rpcDriver)\n\n    const dataAdapter = (\n      await getAdapter(this.pluginManager, sessionId, adapterConfig)\n    ).dataAdapter as BaseFeatureDataAdapter\n\n    const features = dataAdapter.getFeaturesInMultipleRegions(regions)\n    const featuresArray = await firstValueFrom(features.pipe(toArray()))\n    return [\n      ...new Set(\n        featuresArray\n          .map(feature => getTag(feature, tag))\n          .filter(f => f !== undefined)\n          .map(f => `${f}`),\n      ),\n    ]\n  }\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport {\n  PileupGetGlobalValueForTag,\n  PileupGetVisibleModifications,\n  PileupGetReducedFeatures,\n} from './rpcMethods'\n\nexport default (pm: PluginManager) => {\n  pm.addRpcMethod(() => new PileupGetGlobalValueForTag(pm))\n  pm.addRpcMethod(() => new PileupGetVisibleModifications(pm))\n  pm.addRpcMethod(() => new PileupGetReducedFeatures(pm))\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport {\n  makeIndex,\n  makeIndexType,\n  getFileName,\n  AdapterGuesser,\n  TrackTypeGuesser,\n} from '@jbrowse/core/util/tracks'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addToExtensionPoint(\n    'Core-guessAdapterForLocation',\n    (adapterGuesser: AdapterGuesser) => {\n      return (\n        file: FileLocation,\n        index?: FileLocation,\n        adapterHint?: string,\n      ) => {\n        const regexGuess = /\\.cram$/i\n        const adapterName = 'CramAdapter'\n        const fileName = getFileName(file)\n        const obj = {\n          type: adapterName,\n          cramLocation: file,\n          craiLocation: index || makeIndex(file, '.crai'),\n        }\n        if (regexGuess.test(fileName) && !adapterHint) {\n          return obj\n        } else if (adapterHint === adapterName) {\n          return obj\n        }\n        return adapterGuesser(file, index, adapterHint)\n      }\n    },\n  )\n\n  pluginManager.addToExtensionPoint(\n    'Core-guessAdapterForLocation',\n    (adapterGuesser: AdapterGuesser) => {\n      return (\n        file: FileLocation,\n        index?: FileLocation,\n        adapterHint?: string,\n      ) => {\n        const regexGuess = /\\.bam$/i\n        const adapterName = 'BamAdapter'\n        const fileName = getFileName(file)\n        const indexName = index && getFileName(index)\n\n        const obj = {\n          type: adapterName,\n          bamLocation: file,\n          index: {\n            location: index || makeIndex(file, '.bai'),\n            indexType: makeIndexType(indexName, 'CSI', 'BAI'),\n          },\n        }\n        if (regexGuess.test(fileName) && !adapterHint) {\n          return obj\n        } else if (adapterHint === adapterName) {\n          return obj\n        }\n        return adapterGuesser(file, index, adapterHint)\n      }\n    },\n  )\n  pluginManager.addToExtensionPoint(\n    'Core-guessTrackTypeForLocation',\n    (trackTypeGuesser: TrackTypeGuesser) => {\n      return (adapterName: string) => {\n        if (adapterName === 'BamAdapter' || adapterName === 'CramAdapter') {\n          return 'AlignmentsTrack'\n        }\n        return trackTypeGuesser(adapterName)\n      }\n    },\n  )\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { linearBasicDisplayConfigSchemaFactory } from '@jbrowse/plugin-linear-genome-view'\nimport { types } from 'mobx-state-tree'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config LinearPileupDisplay\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nfunction configSchemaF(pluginManager: PluginManager) {\n  // modify config schema to take in a sub coverage display\n  return ConfigurationSchema(\n    'LinearPileupDisplay',\n    {\n      /**\n       * #slot\n       */\n      defaultRendering: {\n        type: 'stringEnum',\n        model: types.enumeration('Rendering', ['pileup']),\n        defaultValue: 'pileup',\n      },\n      /**\n       * #slot\n       */\n      renderers: ConfigurationSchema('RenderersConfiguration', {\n        PileupRenderer:\n          pluginManager.getRendererType('PileupRenderer').configSchema,\n      }),\n      /**\n       * #slot\n       */\n      maxFeatureScreenDensity: {\n        type: 'number',\n        description: 'maximum features per pixel that is displayed in the view',\n        defaultValue: 5,\n      },\n\n      /**\n       * #slot\n       */\n      colorScheme: {\n        type: 'stringEnum',\n        model: types.enumeration('colorScheme', [\n          'strand',\n          'normal',\n          'insertSize',\n          'insertSizeAndOrientation',\n          'mappingQuality',\n          'tag',\n        ]),\n        description: 'color scheme to use',\n        defaultValue: 'normal',\n      },\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: linearBasicDisplayConfigSchemaFactory(pluginManager),\n      explicitlyTyped: true,\n    },\n  )\n}\n\nexport default configSchemaF\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { Typography } from '@mui/material'\n\nexport interface LinearPileupDisplayBlurbProps {\n  model: {\n    sortedBy?: {\n      pos: number\n      refName: number\n      type: string\n      tag?: string\n    }\n  }\n}\n\nexport default observer(function LinearPileupDisplayBlurb(\n  props: LinearPileupDisplayBlurbProps,\n) {\n  const { model } = props\n  const { sortedBy } = model\n  return sortedBy ? (\n    <div data-testid={`blurb-${sortedBy}`}>\n      <Typography color=\"secondary\" variant=\"caption\">\n        {sortedBy\n          ? `Sorted by ${sortedBy.tag ?? sortedBy.type} at ${\n              sortedBy.refName\n            }:${sortedBy.pos}`\n          : null}\n      </Typography>\n    </div>\n  ) : null\n})\n","import { lazy } from 'react'\nimport { autorun, observable } from 'mobx'\nimport {\n  cast,\n  types,\n  addDisposer,\n  getSnapshot,\n  Instance,\n} from 'mobx-state-tree'\nimport copy from 'copy-to-clipboard'\nimport {\n  AnyConfigurationModel,\n  AnyConfigurationSchemaType,\n  ConfigurationReference,\n  readConfObject,\n  getConf,\n} from '@jbrowse/core/configuration'\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks'\nimport {\n  getEnv,\n  getSession,\n  isSessionModelWithWidgets,\n  getContainingView,\n  SimpleFeature,\n  Feature,\n} from '@jbrowse/core/util'\n\nimport {\n  LinearGenomeViewModel,\n  BaseLinearDisplay,\n} from '@jbrowse/plugin-linear-genome-view'\n\n// icons\nimport VisibilityIcon from '@mui/icons-material/Visibility'\nimport { ContentCopy as ContentCopyIcon } from '@jbrowse/core/ui/Icons'\nimport MenuOpenIcon from '@mui/icons-material/MenuOpen'\nimport SortIcon from '@mui/icons-material/Sort'\nimport PaletteIcon from '@mui/icons-material/Palette'\nimport FilterListIcon from '@mui/icons-material/ClearAll'\n\n// locals\nimport LinearPileupDisplayBlurb from './components/LinearPileupDisplayBlurb'\nimport {\n  getUniqueTagValues,\n  getUniqueModificationValues,\n  FilterModel,\n} from '../shared'\nimport { SimpleFeatureSerialized } from '@jbrowse/core/util/simpleFeature'\nimport { createAutorun, modificationColors } from '../util'\nimport { randomColor } from '../util'\n\n// async\nconst FilterByTagDlg = lazy(() => import('../shared/FilterByTag'))\nconst ColorByTagDlg = lazy(() => import('./components/ColorByTag'))\nconst SortByTagDlg = lazy(() => import('./components/SortByTag'))\nconst SetFeatureHeightDlg = lazy(() => import('./components/SetFeatureHeight'))\nconst SetMaxHeightDlg = lazy(() => import('./components/SetMaxHeight'))\nconst ModificationsDlg = lazy(() => import('./components/ColorByModifications'))\n\n// using a map because it preserves order\nconst rendererTypes = new Map([\n  ['pileup', 'PileupRenderer'],\n  ['svg', 'SvgFeatureRenderer'],\n])\n\ntype LGV = LinearGenomeViewModel\n\nexport interface Filter {\n  flagInclude: number\n  flagExclude: number\n  readName?: string\n  tagFilter?: { tag: string; value: string }\n}\n\n/**\n * #stateModel LinearPileupDisplay\n * #category display\n * extends `BaseLinearDisplay`\n */\nfunction stateModelFactory(configSchema: AnyConfigurationSchemaType) {\n  return types\n    .compose(\n      'LinearPileupDisplay',\n      BaseLinearDisplay,\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LinearPileupDisplay'),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n        /**\n         * #property\n         */\n        showSoftClipping: false,\n        /**\n         * #property\n         */\n        featureHeight: types.maybe(types.number),\n        /**\n         * #property\n         */\n        noSpacing: types.maybe(types.boolean),\n        /**\n         * #property\n         */\n        fadeLikelihood: types.maybe(types.boolean),\n        /**\n         * #property\n         */\n        trackMaxHeight: types.maybe(types.number),\n        /**\n         * #property\n         */\n        mismatchAlpha: types.maybe(types.boolean),\n\n        /**\n         * #property\n         */\n        sortedBy: types.maybe(\n          types.model({\n            type: types.string,\n            pos: types.number,\n            tag: types.maybe(types.string),\n            refName: types.string,\n            assemblyName: types.string,\n          }),\n        ),\n\n        /**\n         * #property\n         */\n        colorBy: types.maybe(\n          types.model({\n            type: types.string,\n            tag: types.maybe(types.string),\n            extra: types.frozen(),\n          }),\n        ),\n\n        /**\n         * #property\n         */\n        filterBy: types.optional(FilterModel, {}),\n      }),\n    )\n    .volatile(() => ({\n      colorTagMap: observable.map<string, string>({}),\n      modificationTagMap: observable.map<string, string>({}),\n      featureUnderMouseVolatile: undefined as undefined | Feature,\n      currSortBpPerPx: 0,\n      modificationsReady: false,\n      sortReady: false,\n      tagsReady: false,\n    }))\n    .views(self => ({\n      get autorunReady() {\n        const view = getContainingView(self) as LGV\n        return (\n          view.initialized &&\n          self.featureDensityStatsReady &&\n          !self.regionTooLarge\n        )\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setModificationsReady(flag: boolean) {\n        self.modificationsReady = flag\n      },\n      /**\n       * #action\n       */\n      setTagsReady(flag: boolean) {\n        self.tagsReady = flag\n      },\n      /**\n       * #action\n       */\n      setSortReady(flag: boolean) {\n        self.sortReady = flag\n      },\n      /**\n       * #action\n       */\n      setCurrSortBpPerPx(n: number) {\n        self.currSortBpPerPx = n\n      },\n      /**\n       * #action\n       */\n      setMaxHeight(n: number) {\n        self.trackMaxHeight = n\n      },\n      /**\n       * #action\n       */\n      setFeatureHeight(n?: number) {\n        self.featureHeight = n\n      },\n      /**\n       * #action\n       */\n      setNoSpacing(flag?: boolean) {\n        self.noSpacing = flag\n      },\n\n      /**\n       * #action\n       */\n      setColorScheme(colorScheme: { type: string; tag?: string }) {\n        self.colorTagMap = observable.map({}) // clear existing mapping\n        self.colorBy = cast(colorScheme)\n        self.tagsReady = false\n        self.modificationsReady = false\n      },\n\n      /**\n       * #action\n       */\n      updateModificationColorMap(uniqueModifications: string[]) {\n        uniqueModifications.forEach(value => {\n          if (!self.modificationTagMap.has(value)) {\n            self.modificationTagMap.set(\n              value,\n              modificationColors[value] || randomColor(),\n            )\n          }\n        })\n      },\n\n      /**\n       * #action\n       */\n      updateColorTagMap(uniqueTag: string[]) {\n        // pale color scheme\n        // https://cran.r-project.org/web/packages/khroma/vignettes/tol.html\n        // e.g. \"tol_light\"\n        const colorPalette = [\n          '#BBCCEE',\n          'pink',\n          '#CCDDAA',\n          '#EEEEBB',\n          '#FFCCCC',\n          'lightblue',\n          'lightgreen',\n          'tan',\n          '#CCEEFF',\n          'lightsalmon',\n        ]\n\n        uniqueTag.forEach(value => {\n          if (!self.colorTagMap.has(value)) {\n            const totalKeys = [...self.colorTagMap.keys()].length\n            self.colorTagMap.set(value, colorPalette[totalKeys])\n          }\n        })\n      },\n      /**\n       * #action\n       */\n      setFeatureUnderMouse(feat?: Feature) {\n        self.featureUnderMouseVolatile = feat\n      },\n\n      /**\n       * #action\n       */\n      selectFeature(feature: Feature) {\n        const session = getSession(self)\n        if (isSessionModelWithWidgets(session)) {\n          const featureWidget = session.addWidget(\n            'AlignmentsFeatureWidget',\n            'alignmentFeature',\n            { featureData: feature.toJSON(), view: getContainingView(self) },\n          )\n          session.showWidget(featureWidget)\n        }\n        session.setSelection(feature)\n      },\n\n      /**\n       * #action\n       */\n      clearSelected() {\n        self.sortedBy = undefined\n      },\n\n      /**\n       * #action\n       * uses copy-to-clipboard and generates notification\n       */\n      copyFeatureToClipboard(feature: Feature) {\n        const { uniqueId, ...rest } = feature.toJSON()\n        const session = getSession(self)\n        copy(JSON.stringify(rest, null, 4))\n        session.notify('Copied to clipboard', 'success')\n      },\n\n      /**\n       * #action\n       */\n      toggleSoftClipping() {\n        self.showSoftClipping = !self.showSoftClipping\n      },\n\n      /**\n       * #action\n       */\n      toggleMismatchAlpha() {\n        self.mismatchAlpha = !self.mismatchAlpha\n      },\n\n      /**\n       * #action\n       */\n      setConfig(conf: AnyConfigurationModel) {\n        self.configuration = conf\n      },\n\n      /**\n       * #action\n       */\n      setSortedBy(type: string, tag?: string) {\n        const { centerLineInfo } = getContainingView(self) as LGV\n        if (!centerLineInfo) {\n          return\n        }\n        const { refName, assemblyName, offset } = centerLineInfo\n        const centerBp = Math.round(offset) + 1\n\n        if (centerBp < 0 || !refName) {\n          return\n        }\n\n        self.sortReady = false\n        self.sortedBy = {\n          type,\n          pos: centerBp,\n          refName,\n          assemblyName,\n          tag,\n        }\n      },\n      setFilterBy(filter: Filter) {\n        self.filterBy = cast(filter)\n      },\n    }))\n    .actions(self => {\n      // resets the sort object and refresh whole display on reload\n      const superReload = self.reload\n\n      return {\n        /**\n         * #action\n         */\n        reload() {\n          self.clearSelected()\n          superReload()\n        },\n      }\n    })\n\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get rendererConfig() {\n        const {\n          featureHeight,\n          noSpacing,\n          trackMaxHeight,\n          mismatchAlpha,\n          rendererTypeName,\n        } = self\n        const configBlob = getConf(self, ['renderers', rendererTypeName]) || {}\n        return self.rendererType.configSchema.create(\n          {\n            ...configBlob,\n            ...(featureHeight !== undefined ? { height: featureHeight } : {}),\n            ...(noSpacing !== undefined ? { noSpacing } : {}),\n            ...(mismatchAlpha !== undefined ? { mismatchAlpha } : {}),\n            ...(trackMaxHeight !== undefined\n              ? { maxHeight: trackMaxHeight }\n              : {}),\n          },\n          getEnv(self),\n        )\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get maxHeight() {\n        return readConfObject(self.rendererConfig, 'maxHeight')\n      },\n\n      /**\n       * #getter\n       */\n      get featureHeightSetting() {\n        return readConfObject(self.rendererConfig, 'height')\n      },\n      /**\n       * #getter\n       */\n      get mismatchAlphaSetting() {\n        return readConfObject(self.rendererConfig, 'mismatchAlpha')\n      },\n      /**\n       * #getter\n       */\n      get featureUnderMouse() {\n        return self.featureUnderMouseVolatile\n      },\n      /**\n       * #getter\n       */\n      get renderReady() {\n        const view = getContainingView(self) as LGV\n        return (\n          self.modificationsReady &&\n          self.tagsReady &&\n          self.currSortBpPerPx === view.bpPerPx\n        )\n      },\n    }))\n    .views(self => {\n      const {\n        trackMenuItems: superTrackMenuItems,\n        renderProps: superRenderProps,\n      } = self\n\n      return {\n        /**\n         * #getter\n         */\n        get rendererTypeName() {\n          const viewName = getConf(self, 'defaultRendering')\n          const rendererType = rendererTypes.get(viewName)\n          if (!rendererType) {\n            throw new Error(`unknown alignments view name ${viewName}`)\n          }\n          return rendererType\n        },\n\n        /**\n         * #method\n         */\n        contextMenuItems() {\n          const feat = self.contextMenuFeature\n          return feat\n            ? [\n                {\n                  label: 'Open feature details',\n                  icon: MenuOpenIcon,\n                  onClick: (): void => {\n                    self.clearFeatureSelection()\n                    if (feat) {\n                      self.selectFeature(feat)\n                    }\n                  },\n                },\n                {\n                  label: 'Copy info to clipboard',\n                  icon: ContentCopyIcon,\n                  onClick: (): void => {\n                    if (feat) {\n                      self.copyFeatureToClipboard(feat)\n                    }\n                  },\n                },\n              ]\n            : []\n        },\n\n        /**\n         * #getter\n         */\n        get DisplayBlurb() {\n          return LinearPileupDisplayBlurb\n        },\n        /**\n         * #method\n         */\n        renderPropsPre() {\n          const {\n            colorTagMap,\n            modificationTagMap,\n            sortedBy,\n            colorBy,\n            filterBy,\n            rpcDriverName,\n          } = self\n\n          const superProps = superRenderProps()\n          return {\n            ...superProps,\n            notReady: superProps.notReady || !self.renderReady,\n            rpcDriverName,\n            displayModel: self,\n            sortedBy: sortedBy ? getSnapshot(sortedBy) : undefined,\n            colorBy: colorBy ? getSnapshot(colorBy) : undefined,\n            filterBy: JSON.parse(JSON.stringify(filterBy)),\n            colorTagMap: Object.fromEntries(colorTagMap.toJSON()),\n            modificationTagMap: Object.fromEntries(modificationTagMap.toJSON()),\n            showSoftClip: self.showSoftClipping,\n            config: self.rendererConfig,\n            async onFeatureClick(_: unknown, featureId?: string) {\n              const session = getSession(self)\n              const { rpcManager } = session\n              try {\n                const f = featureId || self.featureIdUnderMouse\n                if (!f) {\n                  self.clearFeatureSelection()\n                } else {\n                  const sessionId = getRpcSessionId(self)\n                  const { feature } = (await rpcManager.call(\n                    sessionId,\n                    'CoreGetFeatureDetails',\n                    {\n                      featureId: f,\n                      sessionId,\n                      layoutId: getContainingView(self).id,\n                      rendererType: 'PileupRenderer',\n                    },\n                  )) as { feature: SimpleFeatureSerialized | undefined }\n\n                  if (feature) {\n                    self.selectFeature(new SimpleFeature(feature))\n                  }\n                }\n              } catch (e) {\n                console.error(e)\n                session.notify(`${e}`)\n              }\n            },\n\n            onClick() {\n              self.clearFeatureSelection()\n            },\n            // similar to click but opens a menu with further options\n            async onFeatureContextMenu(_: unknown, featureId?: string) {\n              const session = getSession(self)\n              const { rpcManager } = session\n              try {\n                const f = featureId || self.featureIdUnderMouse\n                if (!f) {\n                  self.clearFeatureSelection()\n                } else {\n                  const sessionId = getRpcSessionId(self)\n                  const { feature } = (await rpcManager.call(\n                    sessionId,\n                    'CoreGetFeatureDetails',\n                    {\n                      featureId: f,\n                      sessionId,\n                      layoutId: getContainingView(self).id,\n                      rendererType: 'PileupRenderer',\n                    },\n                  )) as { feature: SimpleFeatureSerialized }\n\n                  if (feature) {\n                    self.setContextMenuFeature(new SimpleFeature(feature))\n                  }\n                }\n              } catch (e) {\n                console.error(e)\n                session.notify(`${e}`)\n              }\n            },\n          }\n        },\n\n        // renderProps and renderPropsPre are separated due to sortReady\n        // causing a infinite loop in the sort autorun, since the sort autorun\n        // uses renderProps\n        /**\n         * #method\n         */\n        renderProps() {\n          const pre = this.renderPropsPre()\n          return {\n            ...pre,\n            notReady: pre.notReady || !self.sortReady,\n          }\n        },\n\n        /**\n         * #method\n         */\n        trackMenuItems() {\n          return [\n            ...superTrackMenuItems(),\n            {\n              label: 'Show soft clipping',\n              icon: VisibilityIcon,\n              type: 'checkbox',\n              checked: self.showSoftClipping,\n              onClick: () => {\n                self.toggleSoftClipping()\n                // if toggling from off to on, will break sort for this track\n                // so clear it\n                if (self.showSoftClipping) {\n                  self.clearSelected()\n                }\n              },\n            },\n            {\n              label: 'Sort by',\n              icon: SortIcon,\n              disabled: self.showSoftClipping,\n              subMenu: [\n                ...['Start location', 'Read strand', 'Base pair'].map(\n                  option => ({\n                    label: option,\n                    onClick: () => self.setSortedBy(option),\n                  }),\n                ),\n                {\n                  label: 'Sort by tag...',\n                  onClick: () => {\n                    getSession(self).queueDialog(handleClose => [\n                      SortByTagDlg,\n                      { model: self, handleClose },\n                    ])\n                  },\n                },\n                {\n                  label: 'Clear sort',\n                  onClick: () => self.clearSelected(),\n                },\n              ],\n            },\n            {\n              label: 'Color scheme',\n              icon: PaletteIcon,\n              subMenu: [\n                {\n                  label: 'Normal',\n                  onClick: () => self.setColorScheme({ type: 'normal' }),\n                },\n                {\n                  label: 'Mapping quality',\n                  onClick: () =>\n                    self.setColorScheme({ type: 'mappingQuality' }),\n                },\n                {\n                  label: 'Strand',\n                  onClick: () => self.setColorScheme({ type: 'strand' }),\n                },\n                {\n                  label: 'Pair orientation',\n                  onClick: () =>\n                    self.setColorScheme({ type: 'pairOrientation' }),\n                },\n                {\n                  label: 'Per-base quality',\n                  onClick: () =>\n                    self.setColorScheme({ type: 'perBaseQuality' }),\n                },\n                {\n                  label: 'Per-base lettering',\n                  onClick: () =>\n                    self.setColorScheme({ type: 'perBaseLettering' }),\n                },\n                {\n                  label: 'Modifications or methylation',\n                  onClick: () => {\n                    getSession(self).queueDialog(doneCallback => [\n                      ModificationsDlg,\n                      { model: self, handleClose: doneCallback },\n                    ])\n                  },\n                },\n                {\n                  label: 'Insert size',\n                  onClick: () => self.setColorScheme({ type: 'insertSize' }),\n                },\n                {\n                  label: 'Stranded paired-end',\n                  onClick: () =>\n                    self.setColorScheme({ type: 'reverseTemplate' }),\n                },\n                {\n                  label: 'Color by tag...',\n                  onClick: () => {\n                    getSession(self).queueDialog(doneCallback => [\n                      ColorByTagDlg,\n                      { model: self, handleClose: doneCallback },\n                    ])\n                  },\n                },\n              ],\n            },\n            {\n              label: 'Filter by',\n              icon: FilterListIcon,\n              onClick: () => {\n                getSession(self).queueDialog(doneCallback => [\n                  FilterByTagDlg,\n                  { model: self, handleClose: doneCallback },\n                ])\n              },\n            },\n            {\n              label: 'Set feature height',\n              subMenu: [\n                {\n                  label: 'Normal',\n                  onClick: () => {\n                    self.setFeatureHeight(7)\n                    self.setNoSpacing(false)\n                  },\n                },\n                {\n                  label: 'Compact',\n                  onClick: () => {\n                    self.setFeatureHeight(2)\n                    self.setNoSpacing(true)\n                  },\n                },\n                {\n                  label: 'Manually set height',\n                  onClick: () => {\n                    getSession(self).queueDialog(doneCallback => [\n                      SetFeatureHeightDlg,\n                      { model: self, handleClose: doneCallback },\n                    ])\n                  },\n                },\n              ],\n            },\n            {\n              label: 'Set max height',\n              onClick: () => {\n                getSession(self).queueDialog(doneCallback => [\n                  SetMaxHeightDlg,\n                  { model: self, handleClose: doneCallback },\n                ])\n              },\n            },\n            {\n              label: 'Fade mismatches by quality',\n              type: 'checkbox',\n              checked: self.mismatchAlphaSetting,\n              onClick: () => self.toggleMismatchAlpha(),\n            },\n          ]\n        },\n      }\n    })\n    .actions(self => ({\n      afterAttach() {\n        createAutorun(\n          self,\n          async () => {\n            const view = getContainingView(self) as LGV\n            if (!self.autorunReady) {\n              return\n            }\n\n            const { colorBy } = self\n            const { staticBlocks } = view\n            if (colorBy?.tag) {\n              const vals = await getUniqueTagValues(self, colorBy, staticBlocks)\n              self.updateColorTagMap(vals)\n            }\n            self.setTagsReady(true)\n          },\n          { delay: 1000 },\n        )\n        createAutorun(self, async () => {\n          if (!self.autorunReady) {\n            return\n          }\n          const { parentTrack, colorBy } = self\n          const { staticBlocks } = getContainingView(self) as LGV\n          if (colorBy?.type === 'modifications') {\n            const adapter = getConf(parentTrack, ['adapter'])\n            const vals = await getUniqueModificationValues(\n              self,\n              adapter,\n              colorBy,\n              staticBlocks,\n            )\n            self.updateModificationColorMap(vals)\n          }\n          self.setModificationsReady(true)\n        })\n\n        createAutorun(\n          self,\n          async () => {\n            const { rpcManager } = getSession(self)\n            const view = getContainingView(self) as LGV\n            if (!self.autorunReady) {\n              return\n            }\n\n            const { sortedBy, adapterConfig, rendererType } = self\n            const { bpPerPx } = view\n\n            if (sortedBy) {\n              const { pos, refName, assemblyName } = sortedBy\n              // render just the sorted region first\n              // @ts-expect-error\n              await self.rendererType.renderInClient(rpcManager, {\n                assemblyName,\n                regions: [\n                  {\n                    start: pos,\n                    end: pos + 1,\n                    refName,\n                    assemblyName,\n                  },\n                ],\n                adapterConfig,\n                rendererType: rendererType.name,\n                sessionId: getRpcSessionId(self),\n                layoutId: view.id,\n                timeout: 1_000_000,\n                ...self.renderPropsPre(),\n              })\n            }\n            self.setCurrSortBpPerPx(bpPerPx)\n            self.setSortReady(true)\n          },\n          { delay: 1000 },\n        )\n\n        // autorun synchronizes featureUnderMouse with featureIdUnderMouse\n        // asynchronously. this is needed due to how we do not serialize all\n        // features from the BAM/CRAM over the rpc\n        addDisposer(\n          self,\n          autorun(async () => {\n            const session = getSession(self)\n            try {\n              const featureId = self.featureIdUnderMouse\n              if (self.featureUnderMouse?.id() !== featureId) {\n                if (!featureId) {\n                  self.setFeatureUnderMouse(undefined)\n                } else {\n                  const sessionId = getRpcSessionId(self)\n                  const view = getContainingView(self)\n                  const { feature } = (await session.rpcManager.call(\n                    sessionId,\n                    'CoreGetFeatureDetails',\n                    {\n                      featureId,\n                      sessionId,\n                      layoutId: view.id,\n                      rendererType: 'PileupRenderer',\n                    },\n                  )) as { feature: SimpleFeatureSerialized }\n\n                  // check featureIdUnderMouse is still the same as the\n                  // feature.id that was returned e.g. that the user hasn't\n                  // moused over to a new position during the async operation\n                  // above\n                  if (self.featureIdUnderMouse === feature.uniqueId) {\n                    self.setFeatureUnderMouse(new SimpleFeature(feature))\n                  }\n                }\n              }\n            } catch (e) {\n              console.error(e)\n              session.notify(`${e}`, 'error')\n            }\n          }),\n        )\n      },\n    }))\n}\n\nexport type LinearPileupDisplayStateModel = ReturnType<typeof stateModelFactory>\nexport type LinearPileupDisplayModel = Instance<LinearPileupDisplayStateModel>\nexport default stateModelFactory\n","import configSchemaFactory from './configSchema'\nimport modelFactory from './model'\nimport DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { BaseLinearDisplayComponent } from '@jbrowse/plugin-linear-genome-view'\n\nexport default function register(pluginManager: PluginManager) {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaFactory(pluginManager)\n    return new DisplayType({\n      name: 'LinearPileupDisplay',\n      displayName: 'Pileup display',\n      configSchema,\n      stateModel: modelFactory(configSchema),\n      subDisplay: { type: 'LinearAlignmentsDisplay', lowerPanel: true },\n      trackType: 'AlignmentsTrack',\n      viewType: 'LinearGenomeView',\n      ReactComponent: BaseLinearDisplayComponent,\n    })\n  })\n}\n\nexport { default as linearPileupDisplayStateModelFactory } from './model'\nexport { default as linearPileupDisplayConfigSchemaFactory } from './configSchema'\n","import Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport BamAdapterF from './CramAdapter'\nimport CramAdapterF from './BamAdapter'\nimport HtsgetBamAdapterF from './HtsgetBamAdapter'\nimport SNPCoverageAdapterF from './SNPCoverageAdapter'\nimport SNPCoverageRendererF from './SNPCoverageRenderer'\nimport PileupRendererF from './PileupRenderer'\nimport LinearAlignmentsDisplayF from './LinearAlignmentsDisplay'\nimport LinearSNPCoverageDisplayF from './LinearSNPCoverageDisplay'\nimport LinearReadArcsDisplayF from './LinearReadArcsDisplay'\nimport LinearReadCloudDisplayF from './LinearReadCloudDisplay'\nimport AlignmentsTrackF from './AlignmentsTrack'\nimport AlignmentsFeatureWidgetF from './AlignmentsFeatureDetail'\nimport PileupRPCMethodsF from './PileupRPC'\nimport GuessAlignmentsTypesF from './GuessAlignmentsTypes'\nimport LinearPileupDisplayF from './LinearPileupDisplay'\n\nexport default class AlignmentsPlugin extends Plugin {\n  name = 'AlignmentsPlugin'\n\n  install(pluginManager: PluginManager) {\n    ;[\n      CramAdapterF,\n      BamAdapterF,\n      LinearPileupDisplayF,\n      LinearSNPCoverageDisplayF,\n      AlignmentsTrackF,\n      SNPCoverageAdapterF,\n      HtsgetBamAdapterF,\n      PileupRendererF,\n      PileupRPCMethodsF,\n      SNPCoverageRendererF,\n      LinearReadArcsDisplayF,\n      LinearReadCloudDisplayF,\n      LinearAlignmentsDisplayF,\n      AlignmentsFeatureWidgetF,\n      GuessAlignmentsTypesF,\n    ].map(f => f(pluginManager))\n  }\n}\n\nexport {\n  linearPileupDisplayStateModelFactory,\n  linearPileupDisplayConfigSchemaFactory,\n} from './LinearPileupDisplay'\nexport { type LinearPileupDisplayModel } from './LinearPileupDisplay/model'\nexport * as MismatchParser from './MismatchParser'\n","import { orientationTypes, pairMap } from '../util'\nimport { ChainStats } from './fetchChains'\n\nexport const fillColor = {\n  color_fwd_strand_not_proper: '#ECC8C8',\n  color_rev_strand_not_proper: '#BEBED8',\n  color_fwd_strand: '#EC8B8B',\n  color_rev_strand: '#8F8FD8',\n  color_fwd_missing_mate: '#D11919',\n  color_rev_missing_mate: '#1919D1',\n  color_fwd_diff_chr: '#000',\n  color_rev_diff_chr: '#969696',\n  color_pair_lr: '#c8c8c8',\n  color_pair_rr: 'navy',\n  color_pair_rl: 'teal',\n  color_pair_ll: 'green',\n  color_nostrand: '#c8c8c8',\n  color_interchrom: 'purple',\n  color_longinsert: 'red',\n  color_shortinsert: 'pink',\n  color_unknown: 'grey',\n}\n\n// manually calculated by running\n// const color = require('color')\n// Object.fromEntries(Object.entries(fillColor).map(([key,val])=>{\n//   return [key, color(val).darken('0.3').hex()]\n// }))\n// this avoids (expensive) use of Color module at runtime\nexport const strokeColor = {\n  color_fwd_strand_not_proper: '#CA6767',\n  color_rev_strand_not_proper: '#7272AA',\n  color_fwd_strand: '#DC2A2A',\n  color_rev_strand: '#4141BA',\n  color_fwd_missing_mate: '#921111',\n  color_rev_missing_mate: '#111192',\n  color_fwd_diff_chr: '#000000',\n  color_rev_diff_chr: '#696969',\n  color_pair_lr: '#8C8C8C',\n  color_pair_rr: '#00005A',\n  color_pair_rl: '#005A5A',\n  color_pair_ll: '#005A00',\n  color_nostrand: '#8C8C8C',\n  color_interchrom: '#5A005A',\n  color_longinsert: '#B30000',\n  color_shortinsert: '#FF3A5C',\n  color_unknown: 'grey',\n}\n\nexport function getPairedInsertSizeColor(\n  f1: { refName: string; tlen?: number },\n  f2: { refName: string },\n  stats?: ChainStats,\n) {\n  const sameRef = f1.refName === f2.refName\n  const tlen = Math.abs(f1.tlen || 0)\n  if (sameRef && tlen > (stats?.upper || 0)) {\n    return [fillColor.color_longinsert, strokeColor.color_longinsert] as const\n  } else if (sameRef && tlen < (stats?.lower || 0)) {\n    return [fillColor.color_shortinsert, strokeColor.color_shortinsert] as const\n  } else if (!sameRef) {\n    return [fillColor.color_interchrom, strokeColor.color_interchrom] as const\n  }\n  return undefined\n}\n\nexport function getPairedInsertSizeAndOrientationColor(\n  f1: { refName: string; pair_orientation?: string; tlen?: number },\n  f2: { refName: string },\n  stats?: ChainStats,\n) {\n  return (\n    getPairedInsertSizeColor(f1, f2, stats) || getPairedOrientationColor(f1)\n  )\n}\n\nexport function getPairedOrientationColor(f: { pair_orientation?: string }) {\n  const type = orientationTypes.fr\n  const type2 = pairMap[\n    type[f.pair_orientation || ''] as keyof typeof pairMap\n  ] as keyof typeof fillColor\n  return [\n    fillColor[type2] || fillColor.color_unknown,\n    strokeColor[type2] || strokeColor.color_unknown,\n  ] as const\n}\n","import { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { Feature, AugmentedRegion } from '@jbrowse/core/util'\nimport { toArray } from 'rxjs/operators'\nimport { firstValueFrom } from 'rxjs'\nimport { IAnyStateTreeNode, addDisposer, isAlive } from 'mobx-state-tree'\nimport { IAutorunOptions, autorun } from 'mobx'\n\n// get tag from BAM or CRAM feature, where CRAM uses feature.get('tags') and\n// BAM does not\nexport function getTag(feature: Feature, tag: string) {\n  const tags = feature.get('tags')\n  return tags !== undefined ? tags[tag] : feature.get(tag)\n}\n\n// use fallback alt tag, used in situations where upper case/lower case tags\n// exist e.g. Mm/MM for base modifications\nexport function getTagAlt(feature: Feature, tag: string, alt: string) {\n  return getTag(feature, tag) ?? getTag(feature, alt)\n}\n\n// orientation definitions from igv.js, see also\n// https://software.broadinstitute.org/software/igv/interpreting_pair_orientations\nexport const orientationTypes = {\n  fr: {\n    F1R2: 'LR',\n    F2R1: 'LR',\n\n    F1F2: 'LL',\n    F2F1: 'LL',\n\n    R1R2: 'RR',\n    R2R1: 'RR',\n\n    R1F2: 'RL',\n    R2F1: 'RL',\n  } as { [key: string]: string },\n\n  rf: {\n    R1F2: 'LR',\n    R2F1: 'LR',\n\n    R1R2: 'LL',\n    R2R1: 'LL',\n\n    F1F2: 'RR',\n    F2F1: 'RR',\n\n    F1R2: 'RL',\n    F2R1: 'RL',\n  } as { [key: string]: string },\n\n  ff: {\n    F2F1: 'LR',\n    R1R2: 'LR',\n\n    F2R1: 'LL',\n    R1F2: 'LL',\n\n    R2F1: 'RR',\n    F1R2: 'RR',\n\n    R2R1: 'RL',\n    F1F2: 'RL',\n  } as { [key: string]: string },\n}\n\nexport const pairMap = {\n  LR: 'color_pair_lr',\n  LL: 'color_pair_ll',\n  RR: 'color_pair_rr',\n  RL: 'color_pair_rl',\n} as const\n\nexport function getColorWGBS(strand: number, base: string) {\n  if (strand === 1) {\n    if (base === 'C') {\n      return '#f00'\n    }\n    if (base === 'T') {\n      return '#00f'\n    }\n  } else if (strand === -1) {\n    if (base === 'G') {\n      return '#f00'\n    }\n    if (base === 'A') {\n      return '#00f'\n    }\n  }\n  return '#888'\n}\n\n// fetches region sequence augmenting by +/- 1bp for CpG on either side of\n// requested region\nexport async function fetchSequence(\n  region: AugmentedRegion,\n  adapter: BaseFeatureDataAdapter,\n) {\n  const { start, end, originalRefName, refName } = region\n\n  const feats = await firstValueFrom(\n    adapter\n      .getFeatures({\n        ...region,\n        refName: originalRefName || refName,\n        end: end + 1,\n        start: Math.max(0, start - 1),\n      })\n      .pipe(toArray()),\n  )\n  return feats[0]?.get('seq')\n}\n\n// has to check underlying C-G (aka CpG) on the reference sequence\nexport function shouldFetchReferenceSequence(type?: string) {\n  return type === 'methylation'\n}\n\n// adapted from IGV\n// https://github.com/igvteam/igv/blob/e803e3af2d8c9ea049961dfd4628146bdde9a574/src/main/java/org/broad/igv/sam/mods/BaseModificationColors.java#L27\nexport const modificationColors = {\n  m: 'rgb(255,0,0)',\n  h: 'rgb(11, 132, 165)',\n  o: 'rgb(111, 78, 129)',\n  f: 'rgb(246, 200, 95)',\n  c: 'rgb(157, 216, 102)',\n  g: 'rgb(255, 160, 86)',\n  e: 'rgb(141, 221, 208)',\n  b: 'rgb(202, 71, 47)',\n} as Record<string, string | undefined>\n\ntype DisplayModel = IAnyStateTreeNode & { setError: (arg: unknown) => void }\n\nexport function createAutorun(\n  self: DisplayModel,\n  cb: () => Promise<void>,\n  opts?: IAutorunOptions,\n) {\n  addDisposer(\n    self,\n    autorun(async () => {\n      try {\n        await cb()\n      } catch (e) {\n        if (isAlive(self)) {\n          self.setError(e)\n        }\n      }\n    }, opts),\n  )\n}\nexport function randomColor() {\n  return `hsl(${Math.random() * 200}, 50%, 50%)`\n}\n","import { useState, useEffect } from 'react'\nimport { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\nimport { clamp } from '@jbrowse/core/util'\n\n// locals\nimport { LayoutRecord } from './model'\n\ntype LGV = LinearGenomeViewModel\n\ninterface Display {\n  height: number\n  scrollTop: number\n  SNPCoverageDisplay?: { height: number }\n}\n\ninterface Track {\n  displays: Display[]\n}\n\nconst [, TOP, , BOTTOM] = [0, 1, 2, 3]\n\nfunction cheight(chunk: LayoutRecord) {\n  return chunk[BOTTOM] - chunk[TOP]\n}\n\nfunction heightFromSpecificLevel(\n  views: LGV[],\n  trackId: string,\n  level: number,\n  getYPosOverride?: (trackId: string, level: number) => number,\n) {\n  return getYPosOverride\n    ? getYPosOverride(trackId, level)\n    : views[level].trackRefs[trackId]?.getBoundingClientRect().top || 0\n}\n\nexport function getPxFromCoordinate(view: LGV, refName: string, coord: number) {\n  return ((view.bpToPx({ refName, coord }) || {}).offsetPx || 0) - view.offsetPx\n}\n\n// get's the yposition of a layout record in a track\nexport function yPos(\n  trackId: string,\n  level: number,\n  views: LGV[],\n  tracks: Track[],\n  c: LayoutRecord,\n  getYPosOverride?: (trackId: string, level: number) => number,\n) {\n  const display = tracks[level].displays[0]\n  const min = 0\n  const max = display.height\n  let offset = 0\n  const { SNPCoverageDisplay } = display\n  if (SNPCoverageDisplay) {\n    offset = SNPCoverageDisplay.height\n  }\n  const yPos = getYPosOverride ? 0 : display.scrollTop\n  return (\n    clamp(c[TOP] - yPos + cheight(c) / 2 + offset, min, max) +\n    heightFromSpecificLevel(views, trackId, level, getYPosOverride) +\n    display.scrollTop\n  )\n}\n\n// we combo a useEffect and useState combo to force rerender on snap changing.\n// the setup of this being a useEffect+useState makes it re-render once the\n// useEffect is called, which is generally the \"next frame\". If we removed the\n// below use\nexport const useNextFrame = (variable: unknown) => {\n  const [, setNextFrameState] = useState<unknown>()\n  useEffect(() => {\n    setNextFrameState(variable)\n  }, [variable])\n}\n\n// https://stackoverflow.com/a/49186706/2129219 the array-intersection package\n// on npm has a large kb size, and we are just intersecting open track ids so\n// simple is better\nexport function intersect<T>(\n  cb: (l: T) => string,\n  a1: T[] = [],\n  a2: T[] = [],\n  ...rest: T[][]\n): T[] {\n  const ids = new Set(a2.map(elt => cb(elt)))\n  const a12 = a1.filter(value => ids.has(cb(value)))\n  return rest.length === 0 ? a12 : intersect(cb, a12, ...rest)\n}\n","function findCircleIntersectionX(\n  y: number,\n  cx: number,\n  cy: number,\n  r: number,\n  resultArray: [number, number][],\n) {\n  const d = Math.abs(y - cy)\n  if (d > r) {\n    return\n  }\n  if (d === r) {\n    resultArray.push([cx, y])\n  }\n  const solution = Math.sqrt(r * r - d * d)\n  resultArray.push([cx - solution, y], [cx + solution, y])\n}\n\nfunction findCircleIntersectionY(\n  x: number,\n  cx: number,\n  cy: number,\n  r: number,\n  resultArray: [number, number][],\n) {\n  const d = Math.abs(x - cx)\n  if (d > r) {\n    return\n  }\n  if (d === r) {\n    resultArray.push([x, cy])\n  }\n  const solution = Math.sqrt(r * r - d * d)\n  resultArray.push([x, cy - solution], [x, cy + solution])\n}\n\nfunction cartesianToTheta(x: number, y: number) {\n  let theta = (Math.atan(y / x) + 2 * Math.PI) % (2 * Math.PI)\n  if (x < 0) {\n    if (y <= 0) {\n      theta += Math.PI\n    } else {\n      theta -= Math.PI\n    }\n  }\n  return theta\n}\n\nexport function cartesianToPolar(x: number, y: number) {\n  const rho = Math.sqrt(x * x + y * y)\n  if (rho === 0) {\n    return [0, 0]\n  }\n  const theta = cartesianToTheta(x, y)\n  return [rho, theta]\n}\n\nconst twoPi = 2 * Math.PI\nexport function thetaRangesOverlap(\n  r1start: number,\n  r1length: number,\n  r2start: number,\n  r2length: number,\n) {\n  if (r1length <= 0 || r2length <= 0) {\n    return false\n  }\n  if (r1length + 0.0001 >= twoPi || r2length + 0.0001 >= twoPi) {\n    return true\n  }\n\n  // put both range starts between 2π and 4π\n  r1start = (((r1start % twoPi) + twoPi) % twoPi) + twoPi\n  r2start = (((r2start % twoPi) + twoPi) % twoPi) + twoPi\n\n  if (r1start < r2start + r2length && r1start + r1length > r2start) {\n    return true\n  }\n\n  // move r2 2π to the left and check\n  r2start -= twoPi\n  if (r1start < r2start + r2length && r1start + r1length > r2start) {\n    return true\n  }\n\n  // move it 2π to the right and check\n  r2start += twoPi + twoPi\n  return r1start < r2start + r2length && r1start + r1length > r2start\n}\n\n// return which arc range has any part of the circle visible in the viewport\nexport function viewportVisibleSection(\n  viewSides: [number, number, number, number],\n  circleCenter: [number, number],\n  circleRadius: number,\n) {\n  let [viewL, viewR, viewT, viewB] = viewSides\n  const [cx, cy] = circleCenter\n\n  // transform coordinate system to center of circle\n  viewL -= cx\n  viewR -= cx\n  viewT -= cy\n  viewB -= cy\n\n  const centerIsInsideViewport =\n    viewL < 0 && viewR > 0 && viewT < 0 && viewB > 0\n\n  if (centerIsInsideViewport) {\n    const vertices = [\n      [viewL, viewT],\n      [viewR, viewT],\n      [viewL, viewB],\n      [viewR, viewB],\n    ]\n    let maxRho = -Infinity\n    for (let i = 0; i < vertices.length; i += 1) {\n      const [x, y] = vertices[i]\n      const rho = Math.sqrt(x * x + y * y)\n      if (rho > maxRho) {\n        maxRho = rho\n      }\n    }\n    return {\n      rho: [0, Math.min(circleRadius, maxRho)] as [number, number],\n      theta: [0, 2 * Math.PI] as [number, number],\n    }\n  }\n  // const viewportCompletelyContainsCircle =\n  //   circleCenter[0] - viewL >= circleRadius &&\n  //   viewR - circleCenter[0] >= circleRadius &&\n  //   circleCenter[1] - viewT >= circleRadius &&\n  //   viewB - circleCenter[1] >= circleRadius\n\n  // if (viewportCompletelyContainsCircle) {\n  //   return [0, 2 * Math.PI]\n  // }\n\n  // const distToCenterSquared = ([x, y]) => {\n  //   const [cx, cy] = circleCenter\n  //   const sq = n => n * n\n  //   return sq(x - cx) + sq(y - cy)\n  // }\n  // const circleRadiusSquared = circleRadius * circleRadius\n\n  // const tlInside = distToCenterSquared([viewL, viewT]) <= circleRadiusSquared\n  // const trInside = distToCenterSquared([viewR, viewT]) <= circleRadiusSquared\n  // const blInside = distToCenterSquared([viewL, viewB]) <= circleRadiusSquared\n  // const brInside = distToCenterSquared([viewR, viewB]) <= circleRadiusSquared\n\n  // const noIntersection = !tlInside && !trInside && !blInside && !brInside\n  // if (noIntersection) return undefined\n\n  // const circleCompletelyContainsViewport =\n  //   tlInside && trInside && blInside && brInside\n  // if (circleCompletelyContainsViewport) {\n  //   // viewport is in the circle, but the center is not in it, so take max\n  //   // and min of thetas to the center\n  //   const thetas = [\n  //     Math.atan(viewT / viewL),\n  //     Math.atan(viewT / viewR),\n  //     Math.atan(viewB / viewL),\n  //     Math.atan(viewB / viewR),\n  //   ]\n\n  //   return [Math.min(...thetas), Math.max(...thetas)]\n  // }\n\n  // if we get here, the viewport is partly in, partly out of the circle\n\n  // const viewLIntersects = Math.abs(viewL - circleCenter[0]) <= circleRadius\n  // const viewRIntersects = Math.abs(viewR - circleCenter[0]) <= circleRadius\n  // const viewTIntersects = Math.abs(viewT - circleCenter[1]) <= circleRadius\n  // const viewBIntersects = Math.abs(viewB - circleCenter[1]) <= circleRadius\n\n  // const numIntersectingSides =\n  //   Number(viewLIntersects) +\n  //   Number(viewRIntersects) +\n  //   Number(viewTIntersects) +\n  //   Number(viewBIntersects)\n\n  // if (numIntersectingSides === 4) return [0, 2 * Math.PI]\n  // if (numIntersectingSides === 3) {\n  //   // TODO calculate the thetas of the\n  // } else if (numIntersectingSides === 2) {\n  //   // TODO calculate the thetas of the 2 intersection points\n  // } else if (numIntersectingSides === 1) {\n  //   // TODO calculate the thetas of the 1-2 intersection points of the line, and the angle between\n  // }\n\n  // make a list of vertices-of-interest that lie inside both shapes to examine\n  // to determine the range covered by their intersection\n\n  // transform coordinates to have the circle as the origin and find the intersections\n  // of the circle and the view rectangle\n  const vertices: [number, number][] = [\n    [viewL, viewT],\n    [viewR, viewT],\n    [viewL, viewB],\n    [viewR, viewB],\n  ]\n  findCircleIntersectionY(viewL, 0, 0, circleRadius, vertices)\n  findCircleIntersectionY(viewR, 0, 0, circleRadius, vertices)\n  findCircleIntersectionX(viewT, 0, 0, circleRadius, vertices)\n  findCircleIntersectionX(viewB, 0, 0, circleRadius, vertices)\n\n  // for each edge, also look at the closest point to center if it is inside the circle\n  if (-viewL < circleRadius) {\n    vertices.push([viewL, 0])\n  }\n  if (viewR < circleRadius) {\n    vertices.push([viewR, 0])\n  }\n  if (-viewT < circleRadius) {\n    vertices.push([0, viewT])\n  }\n  if (viewB < circleRadius) {\n    vertices.push([0, viewB])\n  }\n\n  // const verticesOriginal = vertices.map(([x, y]) => [x + cx, y + cy])\n\n  // now convert them all to polar and take the max and min of rho and theta\n\n  // const viewportCenterTheta = cartesianToTheta(viewR + viewL, viewT + viewB)\n  const reflect = viewL >= 0 ? -1 : 1\n  // viewportCenterTheta < Math.PI / 2 || viewportCenterTheta > 1.5 * Math.PI\n  //   ? -1\n  //   : 1\n  let rhoMin = Infinity\n  let rhoMax = -Infinity\n  let thetaMin = Infinity\n  let thetaMax = -Infinity\n  for (let i = 0; i < vertices.length; i += 1) {\n    // ignore vertex if outside the viewport\n    const [vx, vy] = vertices[i]\n    if (vx >= viewL && vx <= viewR && vy >= viewT && vy <= viewB) {\n      const [rho, theta] = cartesianToPolar(vx * reflect, vy * reflect)\n      // ignore vertex if outside the circle\n      if (rho <= circleRadius + 0.001) {\n        // ignore theta if rho is 0\n        if (theta < thetaMin && rho > 0.0001) {\n          thetaMin = theta\n        }\n        if (theta > thetaMax && rho > 0.0001) {\n          thetaMax = theta\n        }\n        if (rho < rhoMin) {\n          rhoMin = rho\n        }\n        if (rho > rhoMax) {\n          rhoMax = rho\n        }\n      }\n    }\n  }\n\n  if (reflect === -1) {\n    thetaMin += Math.PI\n    thetaMax += Math.PI\n  }\n\n  if (thetaMin > 2 * Math.PI && thetaMax > 2 * Math.PI) {\n    thetaMin -= 2 * Math.PI\n    thetaMax -= 2 * Math.PI\n  }\n\n  return {\n    rho: [rhoMin, Math.min(circleRadius, rhoMax)] as [number, number],\n    theta: [thetaMin, thetaMax] as [number, number],\n  }\n}\n","import { polarToCartesian, assembleLocString, Region } from '@jbrowse/core/util'\nimport { thetaRangesOverlap } from './viewportVisibleRegion'\n\nexport type SliceElidedRegion = {\n  elided: true\n  widthBp: number\n  regions: Region[]\n}\n\nexport type SliceNonElidedRegion = {\n  elided: false\n  widthBp: number\n  start: number\n  end: number\n  refName: string\n  assemblyName: string\n}\nexport type SliceRegion = SliceNonElidedRegion | SliceElidedRegion\n\nexport class Slice {\n  key: string\n\n  startRadians: number\n\n  endRadians: number\n\n  bpPerRadian: number\n\n  flipped: boolean\n\n  constructor(\n    view: { bpPerRadian: number },\n    public region: SliceRegion,\n    public offsetRadians: number,\n    public radianWidth: number,\n  ) {\n    const { bpPerRadian } = view\n    this.key =\n      'regions' in region\n        ? JSON.stringify(region.regions)\n        : assembleLocString(region)\n    this.bpPerRadian = bpPerRadian\n    this.flipped = false\n\n    this.startRadians = offsetRadians\n    this.endRadians = region.widthBp / this.bpPerRadian + offsetRadians\n    Object.freeze(this)\n  }\n\n  bpToXY(bp: number, radiusPx: number) {\n    let offsetBp\n    if (this.region.elided) {\n      offsetBp = this.region.widthBp / 2\n    } else if (this.flipped) {\n      offsetBp = this.region.end - bp\n    } else {\n      offsetBp = bp - this.region.start\n    }\n    const totalRadians = offsetBp / this.bpPerRadian + this.offsetRadians\n    return polarToCartesian(radiusPx, totalRadians)\n  }\n\n  toJSON() {\n    return Object.fromEntries(Object.entries(this))\n  }\n}\n\nfunction calculateStaticSlices(self: {\n  elidedRegions: SliceRegion[]\n  bpPerRadian: number\n  spacingPx: number\n  pxPerRadian: number\n}) {\n  const slices = []\n  let currentRadianOffset = 0\n  const { bpPerRadian, spacingPx, pxPerRadian } = self\n  for (const region of self.elidedRegions) {\n    const radianWidth = region.widthBp / bpPerRadian + spacingPx / pxPerRadian\n    slices.push(new Slice(self, region, currentRadianOffset, radianWidth))\n    currentRadianOffset += radianWidth\n  }\n  return slices\n}\n\nfunction sliceIsVisible(\n  self: { offsetRadians: number; visibleSection: { theta: [number, number] } },\n  slice: Slice,\n) {\n  const {\n    theta: [visibleThetaMin, visibleThetaMax],\n  } = self.visibleSection\n\n  return thetaRangesOverlap(\n    slice.offsetRadians + self.offsetRadians,\n    slice.radianWidth,\n    visibleThetaMin,\n    visibleThetaMax - visibleThetaMin,\n  )\n}\n\nexport { calculateStaticSlices, sliceIsVisible }\n","import React, { lazy } from 'react'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport {\n  cast,\n  getParent,\n  getRoot,\n  resolveIdentifier,\n  types,\n  SnapshotOrInstance,\n  Instance,\n} from 'mobx-state-tree'\nimport { Region } from '@jbrowse/core/util/types/mst'\nimport { transaction } from 'mobx'\nimport { saveAs } from 'file-saver'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { MenuItem } from '@jbrowse/core/ui'\nimport {\n  getSession,\n  clamp,\n  isSessionModelWithWidgets,\n} from '@jbrowse/core/util'\nimport { BaseViewModel } from '@jbrowse/core/pluggableElementTypes/models'\n\n// icons\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\nimport FolderOpenIcon from '@mui/icons-material/FolderOpen'\nimport PhotoCameraIcon from '@mui/icons-material/PhotoCamera'\n\n// locals\nimport { calculateStaticSlices, sliceIsVisible, SliceRegion } from './slices'\nimport { viewportVisibleSection } from './viewportVisibleRegion'\n\n// lazies\nconst ExportSvgDialog = lazy(() => import('../components/ExportSvgDialog'))\n\nexport interface ExportSvgOptions {\n  rasterizeLayers?: boolean\n  filename?: string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Wrapper?: React.FC<any>\n  themeName?: string\n}\n\n/**\n * #stateModel CircularView\n * extends `BaseViewModel`\n */\nfunction stateModelFactory(pluginManager: PluginManager) {\n  const minHeight = 40\n  const minWidth = 100\n  const defaultHeight = 400\n  return types\n    .compose(\n      BaseViewModel,\n      types.model('CircularView', {\n        /**\n         * #property\n         */\n        type: types.literal('CircularView'),\n        /**\n         * #property\n         * similar to offsetPx in linear genome view\n         */\n        offsetRadians: -Math.PI / 2,\n        /**\n         * #property\n         */\n        bpPerPx: 200,\n        /**\n         * #property\n         */\n        tracks: types.array(\n          pluginManager.pluggableMstType('track', 'stateModel'),\n        ),\n\n        /**\n         * #property\n         */\n        hideVerticalResizeHandle: false,\n        /**\n         * #property\n         */\n        hideTrackSelectorButton: false,\n        /**\n         * #property\n         */\n        lockedFitToWindow: true,\n        /**\n         * #property\n         */\n        disableImportForm: false,\n\n        /**\n         * #property\n         */\n        height: types.optional(\n          types.refinement('trackHeight', types.number, n => n >= minHeight),\n          defaultHeight,\n        ),\n        /**\n         * #property\n         */\n        displayedRegions: types.array(Region),\n        /**\n         * #property\n         */\n        scrollX: 0,\n        /**\n         * #property\n         */\n        scrollY: 0,\n\n        minimumRadiusPx: 25,\n        spacingPx: 10,\n        paddingPx: 80,\n        lockedPaddingPx: 100,\n        minVisibleWidth: 6,\n        minimumBlockWidth: 20,\n\n        trackSelectorType: 'hierarchical',\n      }),\n    )\n    .volatile(() => ({\n      volatileWidth: undefined as number | undefined,\n      error: undefined as unknown,\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get width() {\n        if (self.volatileWidth === undefined) {\n          throw new Error(\n            'wait for view to be initialized first before accessing width',\n          )\n        }\n        return self.volatileWidth\n      },\n\n      /**\n       * #getter\n       */\n      get visibleSection() {\n        return viewportVisibleSection(\n          [\n            self.scrollX,\n            self.scrollX + self.width,\n            self.scrollY,\n            self.scrollY + self.height,\n          ],\n          this.centerXY,\n          this.radiusPx,\n        )\n      },\n      /**\n       * #getter\n       */\n      get circumferencePx() {\n        let elidedBp = 0\n\n        for (const r of this.elidedRegions) {\n          elidedBp += r.widthBp\n        }\n        return (\n          elidedBp / self.bpPerPx + self.spacingPx * this.elidedRegions.length\n        )\n      },\n      /**\n       * #getter\n       */\n      get radiusPx() {\n        return this.circumferencePx / (2 * Math.PI)\n      },\n      /**\n       * #getter\n       */\n      get bpPerRadian() {\n        return self.bpPerPx * this.radiusPx\n      },\n      /**\n       * #getter\n       */\n      get pxPerRadian() {\n        return this.radiusPx\n      },\n      /**\n       * #getter\n       */\n      get centerXY(): [number, number] {\n        return [this.radiusPx + self.paddingPx, this.radiusPx + self.paddingPx]\n      },\n      /**\n       * #getter\n       */\n      get totalBp() {\n        let total = 0\n        for (const region of self.displayedRegions) {\n          total += region.end - region.start\n        }\n        return total\n      },\n      /**\n       * #getter\n       */\n      get maximumRadiusPx() {\n        return self.lockedFitToWindow\n          ? Math.min(self.width, self.height) / 2 - self.lockedPaddingPx\n          : 1000000\n      },\n      /**\n       * #getter\n       */\n      get maxBpPerPx() {\n        const minCircumferencePx = 2 * Math.PI * self.minimumRadiusPx\n        return this.totalBp / minCircumferencePx\n      },\n      /**\n       * #getter\n       */\n      get minBpPerPx() {\n        // min depends on window dimensions, clamp between old min(0.01) and max\n        const maxCircumferencePx = 2 * Math.PI * this.maximumRadiusPx\n        return clamp(\n          this.totalBp / maxCircumferencePx,\n          0.0000000001,\n          this.maxBpPerPx,\n        )\n      },\n      /**\n       * #getter\n       */\n      get atMaxBpPerPx() {\n        return self.bpPerPx >= this.maxBpPerPx\n      },\n      /**\n       * #getter\n       */\n      get atMinBpPerPx() {\n        return self.bpPerPx <= this.minBpPerPx\n      },\n      /**\n       * #getter\n       */\n      get tooSmallToLock() {\n        return this.minBpPerPx <= 0.0000000001\n      },\n      /**\n       * #getter\n       */\n      get figureDimensions(): [number, number] {\n        return [\n          this.radiusPx * 2 + 2 * self.paddingPx,\n          this.radiusPx * 2 + 2 * self.paddingPx,\n        ]\n      },\n      /**\n       * #getter\n       */\n      get figureWidth() {\n        return this.figureDimensions[0]\n      },\n      /**\n       * #getter\n       */\n      get figureHeight() {\n        return this.figureDimensions[1]\n      },\n      /**\n       * #getter\n       * this is displayedRegions, post-processed to\n       * elide regions that are too small to see reasonably\n       */\n      get elidedRegions() {\n        const visible: SliceRegion[] = []\n        self.displayedRegions.forEach(region => {\n          const widthBp = region.end - region.start\n          const widthPx = widthBp / self.bpPerPx\n          if (widthPx < self.minVisibleWidth) {\n            // too small to see, collapse into a single elision region\n            const lastVisible = visible.at(-1)\n            if (lastVisible?.elided) {\n              lastVisible.regions.push({ ...region })\n              lastVisible.widthBp += widthBp\n            } else {\n              visible.push({\n                elided: true,\n                widthBp,\n                regions: [{ ...region }],\n              })\n            }\n          } else {\n            // big enough to see, display it\n            visible.push({ ...region, widthBp, elided: false })\n          }\n        })\n\n        // remove any single-region elisions\n        for (let i = 0; i < visible.length; i += 1) {\n          const v = visible[i]\n          if (v.elided && v.regions.length === 1) {\n            visible[i] = { ...v, ...v.regions[0], elided: false }\n          }\n        }\n        return visible\n      },\n      /**\n       * #getter\n       */\n      get assemblyNames() {\n        const assemblyNames: string[] = []\n        self.displayedRegions.forEach(displayedRegion => {\n          if (!assemblyNames.includes(displayedRegion.assemblyName)) {\n            assemblyNames.push(displayedRegion.assemblyName)\n          }\n        })\n        return assemblyNames\n      },\n      /**\n       * #getter\n       */\n      get initialized() {\n        const { assemblyManager } = getSession(self)\n        return (\n          self.volatileWidth !== undefined &&\n          this.assemblyNames.every(a => assemblyManager.get(a)?.initialized)\n        )\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get staticSlices() {\n        return calculateStaticSlices(self)\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get visibleStaticSlices() {\n        return self.staticSlices.filter(s => sliceIsVisible(self, s))\n      },\n    }))\n\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setWidth(newWidth: number) {\n        self.volatileWidth = Math.max(newWidth, minWidth)\n        return self.volatileWidth\n      },\n      /**\n       * #action\n       */\n      setHeight(newHeight: number) {\n        self.height = Math.max(newHeight, minHeight)\n        return self.height\n      },\n      /**\n       * #action\n       */\n      resizeHeight(distance: number) {\n        const oldHeight = self.height\n        const newHeight = this.setHeight(self.height + distance)\n        this.setModelViewWhenAdjust(!self.tooSmallToLock)\n        return newHeight - oldHeight\n      },\n      /**\n       * #action\n       */\n      resizeWidth(distance: number) {\n        const oldWidth = self.width\n        const newWidth = this.setWidth(self.width + distance)\n        this.setModelViewWhenAdjust(!self.tooSmallToLock)\n        return newWidth - oldWidth\n      },\n      /**\n       * #action\n       */\n      rotateClockwiseButton() {\n        this.rotateClockwise(Math.PI / 6)\n      },\n\n      /**\n       * #action\n       */\n      rotateCounterClockwiseButton() {\n        this.rotateCounterClockwise(Math.PI / 6)\n      },\n\n      /**\n       * #action\n       */\n      rotateClockwise(distance = 0.17) {\n        self.offsetRadians += distance\n      },\n\n      /**\n       * #action\n       */\n      rotateCounterClockwise(distance = 0.17) {\n        self.offsetRadians -= distance\n      },\n\n      /**\n       * #action\n       */\n      zoomInButton() {\n        this.setBpPerPx(self.bpPerPx / 1.4)\n      },\n\n      /**\n       * #action\n       */\n      zoomOutButton() {\n        this.setBpPerPx(self.bpPerPx * 1.4)\n      },\n\n      /**\n       * #action\n       */\n      setBpPerPx(newVal: number) {\n        self.bpPerPx = clamp(newVal, self.minBpPerPx, self.maxBpPerPx)\n      },\n\n      /**\n       * #action\n       */\n      setModelViewWhenAdjust(secondCondition: boolean) {\n        if (self.lockedFitToWindow && secondCondition) {\n          this.setBpPerPx(self.minBpPerPx)\n        }\n      },\n\n      /**\n       * #action\n       */\n      closeView() {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        getParent<any>(self, 2).removeView(self)\n      },\n\n      /**\n       * #action\n       */\n      setDisplayedRegions(regions: SnapshotOrInstance<typeof Region>[]) {\n        const previouslyEmpty = self.displayedRegions.length === 0\n        self.displayedRegions = cast(regions)\n\n        if (previouslyEmpty) {\n          this.setBpPerPx(self.minBpPerPx)\n        } else {\n          this.setBpPerPx(self.bpPerPx)\n        }\n      },\n\n      /**\n       * #action\n       */\n      activateTrackSelector() {\n        if (self.trackSelectorType === 'hierarchical') {\n          const session = getSession(self)\n          if (isSessionModelWithWidgets(session)) {\n            const selector = session.addWidget(\n              'HierarchicalTrackSelectorWidget',\n              'hierarchicalTrackSelector',\n              { view: self },\n            )\n            session.showWidget(selector)\n            return selector\n          }\n        }\n        throw new Error(`invalid track selector type ${self.trackSelectorType}`)\n      },\n\n      /**\n       * #action\n       */\n      toggleTrack(trackId: string) {\n        // if we have any tracks with that configuration, turn them off\n        const hiddenCount = this.hideTrack(trackId)\n        // if none had that configuration, turn one on\n        if (!hiddenCount) {\n          this.showTrack(trackId)\n        }\n      },\n\n      /**\n       * #action\n       */\n      setError(error: unknown) {\n        self.error = error\n      },\n\n      /**\n       * #action\n       */\n      showTrack(trackId: string, initialSnapshot = {}) {\n        const schema = pluginManager.pluggableConfigSchemaType('track')\n        const conf = resolveIdentifier(schema, getRoot(self), trackId)\n        const trackType = pluginManager.getTrackType(conf.type)\n        if (!trackType) {\n          throw new Error(`unknown track type ${conf.type}`)\n        }\n        const viewType = pluginManager.getViewType(self.type)\n        const supportedDisplays = new Set(\n          viewType.displayTypes.map(d => d.name),\n        )\n        const displayConf = conf.displays.find((d: AnyConfigurationModel) =>\n          supportedDisplays.has(d.type),\n        )\n        const track = trackType.stateModel.create({\n          ...initialSnapshot,\n          type: conf.type,\n          configuration: conf,\n          displays: [{ type: displayConf.type, configuration: displayConf }],\n        })\n        self.tracks.push(track)\n      },\n\n      /**\n       * #action\n       */\n      addTrackConf(configuration: AnyConfigurationModel, initialSnapshot = {}) {\n        const { type } = configuration\n        const name = readConfObject(configuration, 'name')\n        const trackType = pluginManager.getTrackType(type)\n        if (!trackType) {\n          throw new Error(`unknown track type ${type}`)\n        }\n        const viewType = pluginManager.getViewType(self.type)\n        const supportedDisplays = new Set(\n          viewType.displayTypes.map(d => d.name),\n        )\n        const displayConf = configuration.displays.find(\n          (d: AnyConfigurationModel) => supportedDisplays.has(d.type),\n        )\n        self.tracks.push(\n          trackType.stateModel.create({\n            ...initialSnapshot,\n            name,\n            type,\n            configuration,\n            displays: [{ type: displayConf.type, configuration: displayConf }],\n          }),\n        )\n      },\n\n      /**\n       * #action\n       */\n      hideTrack(trackId: string) {\n        const schema = pluginManager.pluggableConfigSchemaType('track')\n        const conf = resolveIdentifier(schema, getRoot(self), trackId)\n        const t = self.tracks.filter(t => t.configuration === conf)\n        transaction(() => t.forEach(t => self.tracks.remove(t)))\n        return t.length\n      },\n\n      /**\n       * #action\n       */\n      toggleFitToWindowLock() {\n        // when going unlocked -> locked and circle is cut off, set to the\n        // locked minBpPerPx\n        self.lockedFitToWindow = !self.lockedFitToWindow\n        this.setModelViewWhenAdjust(self.atMinBpPerPx)\n        return self.lockedFitToWindow\n      },\n      /**\n       * #action\n       * creates an svg export and save using FileSaver\n       */\n      async exportSvg(opts: ExportSvgOptions = {}) {\n        const { renderToSvg } = await import('../svgcomponents/SVGCircularView')\n        const html = await renderToSvg(self as CircularViewModel, opts)\n        const blob = new Blob([html], { type: 'image/svg+xml' })\n        saveAs(blob, opts.filename || 'image.svg')\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       * return the view menu items\n       */\n      menuItems(): MenuItem[] {\n        return [\n          {\n            label: 'Return to import form',\n            onClick: () => self.setDisplayedRegions([]),\n            icon: FolderOpenIcon,\n          },\n          {\n            label: 'Export SVG',\n            icon: PhotoCameraIcon,\n            onClick: () => {\n              getSession(self).queueDialog(handleClose => [\n                ExportSvgDialog,\n                { model: self, handleClose },\n              ])\n            },\n          },\n          {\n            label: 'Open track selector',\n            onClick: self.activateTrackSelector,\n            icon: TrackSelectorIcon,\n          },\n        ]\n      },\n    }))\n}\n\nexport type CircularViewStateModel = ReturnType<typeof stateModelFactory>\nexport type CircularViewModel = Instance<CircularViewStateModel>\n\nexport default stateModelFactory\n","import React, { useState, useEffect } from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\n\nconst useStyles = makeStyles()(theme => {\n  const offset = 2\n  const duration = 1.4\n\n  const { primary, secondary, tertiary, quaternary } = theme.palette\n  return {\n    path: {\n      strokeDasharray: 187,\n      strokeDashoffset: 50,\n      animation: `$dash ${duration}s ease-in-out infinite, $colors ${\n        duration * 4\n      }s ease-in-out infinite`,\n    },\n    '@keyframes colors': {\n      '0%': {\n        stroke: primary.light,\n      },\n      '25%': {\n        stroke: secondary.light,\n      },\n      '50%': {\n        stroke: tertiary.light,\n      },\n      '75%': {\n        stroke: quaternary.light,\n      },\n      '100%': {\n        stroke: primary.light,\n      },\n    },\n\n    '@keyframes dash': {\n      '0%': {\n        strokeDashoffset: offset,\n      },\n      '50%': {\n        strokeDashoffset: offset / 4,\n        transform: 'rotate(135deg)',\n      },\n      '100%': {\n        strokeDashoffset: offset,\n        transform: 'rotate(720deg)',\n      },\n    },\n  }\n})\n\nconst Loading = observer(function ({\n  model: {\n    renderProps: { radius },\n  },\n}: {\n  model: { renderProps: { radius: number } }\n}) {\n  const { classes } = useStyles()\n\n  // only show the loading message after 400ms to prevent excessive flickering\n  const [shown, setShown] = useState(false)\n  useEffect(() => {\n    const timeout = setTimeout(() => setShown(true), 400)\n    return () => clearTimeout(timeout)\n  })\n\n  return !shown ? null : (\n    <g>\n      <defs>\n        <pattern\n          id=\"diagonalHatch\"\n          width=\"10\"\n          height=\"10\"\n          patternTransform=\"rotate(45 0 0)\"\n          patternUnits=\"userSpaceOnUse\"\n        >\n          <line\n            x1=\"0\"\n            y1=\"0\"\n            x2=\"0\"\n            y2=\"10\"\n            style={{ stroke: 'rgba(255,255,255,0.5)', strokeWidth: 10 }}\n          />\n        </pattern>\n      </defs>\n      <circle cx=\"0\" cy=\"0\" r={radius} fill=\"#f1f1f1\" />\n      <circle cx=\"0\" cy=\"0\" r={radius} fill=\"url(#diagonalHatch)\" />\n      <text\n        x=\"0\"\n        y=\"0\"\n        transform=\"rotate(90 0 0)\"\n        dominantBaseline=\"middle\"\n        textAnchor=\"middle\"\n      >\n        Loading&hellip;\n      </text>\n      <circle\n        className={classes.path}\n        fill=\"none\"\n        strokeWidth=\"4\"\n        strokeLinecap=\"round\"\n        cx=\"0\"\n        cy=\"0\"\n        r=\"60\"\n      />\n    </g>\n  )\n})\n\nexport default Loading\n","import React from 'react'\nimport { observer } from 'mobx-react'\n\nconst DisplayError = observer(function ({\n  model,\n}: {\n  model: { renderProps: { radius: number }; error: unknown }\n}) {\n  const {\n    renderProps: { radius },\n    error,\n  } = model\n  return (\n    <g>\n      <defs>\n        <pattern\n          id=\"diagonalHatch\"\n          width=\"10\"\n          height=\"10\"\n          patternTransform=\"rotate(45 0 0)\"\n          patternUnits=\"userSpaceOnUse\"\n        >\n          <line\n            x1=\"0\"\n            y1=\"0\"\n            x2=\"0\"\n            y2=\"10\"\n            style={{ stroke: 'rgba(255,0,0,0.5)', strokeWidth: 10 }}\n          />\n        </pattern>\n      </defs>\n      <circle cx=\"0\" cy=\"0\" r={radius} fill=\"#ffb4b4\" />\n      <circle cx=\"0\" cy=\"0\" r={radius} fill=\"url(#diagonalHatch)\" />\n      <text\n        x=\"0\"\n        y=\"0\"\n        transform=\"rotate(90 0 0)\"\n        dominantBaseline=\"middle\"\n        textAnchor=\"middle\"\n      >\n        {String(error)}\n      </text>\n    </g>\n  )\n})\n\nexport default DisplayError\n","import React from 'react'\nimport { observer } from 'mobx-react'\n\n// locals\nimport Loading from './Loading'\nimport DisplayError from './DisplayError'\n\nexport default observer(function BaseChordDisplay({\n  display,\n}: {\n  display: {\n    filled: boolean\n    error: unknown\n    reactElement: React.ReactElement\n    renderProps: { radius: number }\n  }\n}) {\n  if (display.error) {\n    return <DisplayError model={display} />\n  }\n  if (!display.filled) {\n    return <Loading model={display} />\n  }\n\n  return display.reactElement\n})\n","import clone from 'clone'\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks'\nimport { getSession, getContainingView } from '@jbrowse/core/util'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function renderReactionData(self: any) {\n  const view = getContainingView(self)\n  const { rendererType } = self\n  const { rpcManager } = getSession(view)\n\n  return {\n    rendererType,\n    rpcManager,\n    renderProps: self.renderProps(),\n    renderArgs: {\n      assemblyName: view.displayedRegions[0]?.assemblyName,\n      adapterConfig: clone(self.adapterConfig),\n      rendererType: rendererType.name,\n      regions: clone(view.displayedRegions),\n      blockDefinitions: self.blockDefinitions,\n      sessionId: getRpcSessionId(self),\n      timeout: 1000000,\n    },\n  }\n}\n\nexport async function renderReactionEffect(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props: any,\n  signal: AbortSignal | undefined,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  self: any,\n) {\n  if (!props) {\n    throw new Error('cannot render with no props')\n  }\n\n  const {\n    rendererType,\n    rpcManager,\n    cannotBeRenderedReason,\n    renderArgs,\n    renderProps,\n    exportSVG,\n  } = props\n\n  if (cannotBeRenderedReason) {\n    return { message: cannotBeRenderedReason }\n  }\n\n  // don't try to render 0 or NaN radius or no regions\n  if (!renderProps.radius || !renderArgs.regions?.length) {\n    return { message: 'Skipping render' }\n  }\n\n  // check renderertype compatibility\n  if (!self.isCompatibleWithRenderer(rendererType)) {\n    throw new Error(\n      `renderer ${rendererType.name} is not compatible with this display type`,\n    )\n  }\n\n  const { html, ...data } = await rendererType.renderInClient(rpcManager, {\n    ...renderArgs,\n    ...renderProps,\n    exportSVG,\n  })\n\n  return {\n    html,\n    data,\n    reactElement: data.reactElement,\n    renderingComponent: rendererType.ReactComponent,\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config BaseChordDisplay\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst baseChordDisplayConfig = ConfigurationSchema(\n  'BaseChordDisplay',\n  {\n    /**\n     * #slot\n     */\n    onChordClick: {\n      type: 'boolean',\n      description:\n        'callback that should be run when a chord in the track is clicked',\n      defaultValue: false,\n      contextVariable: ['feature', 'track', 'pluginManager'],\n    },\n  },\n  {\n    /**\n     * #identifier\n     */\n    explicitIdentifier: 'displayId',\n  },\n)\n\nexport { baseChordDisplayConfig }\n","import React from 'react'\nimport clone from 'clone'\nimport { getParent, isAlive, types } from 'mobx-state-tree'\n\n// jbrowse\nimport { ConfigurationReference, getConf } from '@jbrowse/core/configuration'\nimport { BaseDisplay } from '@jbrowse/core/pluggableElementTypes/models'\nimport CircularChordRendererType from '@jbrowse/core/pluggableElementTypes/renderers/CircularChordRendererType'\nimport RendererType from '@jbrowse/core/pluggableElementTypes/renderers/RendererType'\nimport {\n  getContainingView,\n  getSession,\n  getEnv,\n  isFeature,\n  makeAbortableReaction,\n  AnyReactComponentType,\n  Feature,\n  ReactRendering,\n} from '@jbrowse/core/util'\nimport {\n  getParentRenderProps,\n  getRpcSessionId,\n  getTrackAssemblyNames,\n} from '@jbrowse/core/util/tracks'\n\n// locals\nimport { renderReactionData, renderReactionEffect } from './renderReaction'\nimport {\n  CircularViewModel,\n  ExportSvgOptions,\n} from '../../CircularView/models/CircularView'\nimport { ThemeOptions } from '@mui/material'\nimport { baseChordDisplayConfig } from './configSchema'\n\n/**\n * #stateModel BaseChordDisplay\n * extends `BaseDisplay`\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport const BaseChordDisplayModel = types\n  .compose(\n    'BaseChordDisplay',\n    BaseDisplay,\n    types.model({\n      /**\n       * #property\n       */\n      bezierRadiusRatio: 0.1,\n      /**\n       * #property\n       */\n      assemblyName: types.maybe(types.string),\n      /**\n       * #property\n       */\n      configuration: ConfigurationReference(baseChordDisplayConfig),\n    }),\n  )\n  .volatile(() => ({\n    // NOTE: all this volatile stuff has to be filled in at once\n    // so that it stays consistent\n    filled: false,\n    reactElement: undefined as React.ReactElement | undefined,\n    data: undefined,\n    html: undefined as string | undefined,\n    message: '',\n    renderingComponent: undefined as undefined | AnyReactComponentType,\n    refNameMap: undefined as Record<string, string> | undefined,\n  }))\n  .actions(self => {\n    const { pluginManager } = getEnv(self)\n    const track = self\n    return {\n      /**\n       * #action\n       */\n      onChordClick(feature: Feature) {\n        getConf(self, 'onChordClick', { feature, track, pluginManager })\n      },\n    }\n  })\n  .views(self => ({\n    /**\n     * #getter\n     */\n    get blockDefinitions() {\n      const view = getContainingView(self) as CircularViewModel\n      const origSlices = view.staticSlices\n      if (!self.refNameMap) {\n        return origSlices\n      }\n\n      const slices = clone(origSlices)\n\n      slices.forEach(slice => {\n        const regions = slice.region.elided\n          ? slice.region.regions\n          : [slice.region]\n        regions.forEach(region => {\n          const renamed = self.refNameMap?.[region.refName]\n          if (renamed && region.refName !== renamed) {\n            region.refName = renamed\n          }\n        })\n      })\n      return slices\n    },\n\n    /**\n     * #method\n     */\n    renderProps() {\n      const view = getContainingView(self) as CircularViewModel\n      return {\n        ...getParentRenderProps(self),\n        rpcDriverName: self.rpcDriverName,\n        displayModel: self,\n        bezierRadius: view.radiusPx * self.bezierRadiusRatio,\n        radius: view.radiusPx,\n        blockDefinitions: this.blockDefinitions,\n        onChordClick: self.onChordClick,\n      }\n    },\n\n    /**\n     * #getter\n     * the pluggable element type object for this display's\n     * renderer\n     */\n    get rendererType() {\n      const display = self\n      const { pluginManager } = getEnv(self)\n      const ThisRendererType = pluginManager.getRendererType(\n        self.rendererTypeName,\n      )\n      if (!ThisRendererType) {\n        throw new Error(`renderer \"${display.rendererTypeName}\" not found`)\n      }\n      if (!ThisRendererType.ReactComponent) {\n        throw new Error(\n          `renderer ${display.rendererTypeName} has no ReactComponent, it may not be completely implemented yet`,\n        )\n      }\n      return ThisRendererType\n    },\n\n    /**\n     * #method\n     */\n    isCompatibleWithRenderer(renderer: RendererType) {\n      return !!(renderer instanceof CircularChordRendererType)\n    },\n\n    /**\n     * #getter\n     * returns a string feature ID if the globally-selected object\n     * is probably a feature\n     */\n    get selectedFeatureId() {\n      if (!isAlive(self)) {\n        return undefined\n      }\n      const session = getSession(self)\n      if (!session) {\n        return undefined\n      }\n      const { selection } = session\n      // does it quack like a feature?\n      if (isFeature(selection)) {\n        return selection.id()\n      }\n      return undefined\n    },\n  }))\n  .actions(self => ({\n    /**\n     * #action\n     */\n    renderStarted() {\n      self.filled = false\n      self.message = ''\n      self.reactElement = undefined\n      self.data = undefined\n      self.html = undefined\n      self.error = undefined\n      self.renderingComponent = undefined\n    },\n    /**\n     * #action\n     */\n    renderSuccess({\n      message,\n      data,\n      reactElement,\n      html,\n      renderingComponent,\n    }: {\n      message: string\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      data: any\n      html: string\n      reactElement: React.ReactElement\n      renderingComponent: AnyReactComponentType\n    }) {\n      if (message) {\n        self.filled = false\n        self.message = message\n        self.reactElement = undefined\n        self.data = undefined\n        self.html = undefined\n        self.error = undefined\n        self.renderingComponent = undefined\n      } else {\n        self.filled = true\n        self.message = ''\n        self.reactElement = reactElement\n        self.data = data\n        self.html = html\n        self.error = undefined\n        self.renderingComponent = renderingComponent\n      }\n    },\n    /**\n     * #action\n     */\n    renderError(error: unknown) {\n      console.error(error)\n      // the rendering failed for some reason\n      self.filled = false\n      self.message = ''\n      self.reactElement = undefined\n      self.html = undefined\n      self.data = undefined\n      self.error = error\n      self.renderingComponent = undefined\n    },\n\n    /**\n     * #action\n     */\n    setRefNameMap(refNameMap: Record<string, string>) {\n      self.refNameMap = refNameMap\n    },\n  }))\n  .actions(self => ({\n    afterAttach() {\n      makeAbortableReaction(\n        self,\n        renderReactionData,\n\n        // @ts-expect-error\n        renderReactionEffect,\n        {\n          name: `${self.type} ${self.id} rendering`,\n          // delay: self.renderDelay || 300,\n          fireImmediately: true,\n        },\n        self.renderStarted,\n        self.renderSuccess,\n        self.renderError,\n      )\n\n      makeAbortableReaction(\n        self,\n        () => ({\n          assemblyNames: getTrackAssemblyNames(self.parentTrack),\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          adapter: getConf(getParent<any>(self, 2), 'adapter'),\n          assemblyManager: getSession(self).assemblyManager,\n        }),\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        async ({ assemblyNames, adapter, assemblyManager }: any, signal) => {\n          return assemblyManager.getRefNameMapForAdapter(\n            adapter,\n            assemblyNames[0],\n            { signal, sessionId: getRpcSessionId(self) },\n          )\n        },\n        {\n          name: `${self.type} ${self.id} getting refNames`,\n          fireImmediately: true,\n        },\n        () => {},\n        refNameMap => self.setRefNameMap(refNameMap),\n        error => {\n          console.error(error)\n          self.setError(error)\n        },\n      )\n    },\n  }))\n  .views(self => ({\n    /**\n     * #method\n     */\n    async renderSvg(\n      opts: ExportSvgOptions & {\n        theme: ThemeOptions\n      },\n    ) {\n      const data = renderReactionData(self)\n      const rendering = await renderReactionEffect(\n        {\n          ...data,\n          exportSVG: opts,\n          theme: opts.theme || data.renderProps.theme,\n        },\n        undefined,\n        self,\n      )\n      return <ReactRendering rendering={rendering} />\n    },\n  }))\n","import { AbstractSessionModel, isAbstractMenuManager } from '@jbrowse/core/util'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport Plugin from '@jbrowse/core/Plugin'\n\n// locals\n\nimport CircularViewF from './CircularView'\nimport LaunchCircularViewF from './LaunchCircularView'\n\n// icons\nimport DataUsageIcon from '@mui/icons-material/DataUsage'\n\nexport default class CircularViewPlugin extends Plugin {\n  name = 'CircularViewPlugin'\n\n  install(pluginManager: PluginManager) {\n    CircularViewF(pluginManager)\n    LaunchCircularViewF(pluginManager)\n  }\n\n  configure(pluginManager: PluginManager) {\n    if (isAbstractMenuManager(pluginManager.rootModel)) {\n      pluginManager.rootModel.appendToSubMenu(['Add'], {\n        label: 'Circular view',\n        icon: DataUsageIcon,\n        onClick: (session: AbstractSessionModel) => {\n          session.addView('CircularView', {})\n        },\n      })\n    }\n  }\n}\n\nexport {\n  baseChordDisplayConfig,\n  BaseChordDisplayModel,\n  BaseChordDisplayComponent,\n} from './BaseChordDisplay'\n\nexport {\n  type CircularViewModel,\n  type CircularViewStateModel,\n} from './CircularView/models/CircularView'\n","import { lazy } from 'react'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport ViewType from '@jbrowse/core/pluggableElementTypes/ViewType'\nimport stateModelFactory from './models/CircularView'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addViewType(\n    () =>\n      new ViewType({\n        ReactComponent: lazy(() => import('./components/CircularView')),\n        stateModel: stateModelFactory(pluginManager),\n        name: 'CircularView',\n        displayName: 'Circular view',\n      }),\n  )\n}\n","import { when } from 'mobx'\nimport { AbstractSessionModel } from '@jbrowse/core/util'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\n// locals\nimport { CircularViewModel } from '../CircularView/models/CircularView'\n\ntype CGV = CircularViewModel\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addToExtensionPoint(\n    'LaunchView-CircularView',\n    // @ts-expect-error\n    async ({\n      session,\n      assembly,\n      loc,\n      tracks = [],\n    }: {\n      session: AbstractSessionModel\n      assembly?: string\n      loc: string\n      tracks?: string[]\n    }) => {\n      const { assemblyManager } = session\n      const view = session.addView('CircularView', {}) as CGV\n\n      await when(() => view.initialized)\n\n      if (!assembly) {\n        throw new Error(\n          'No assembly provided when launching circular genome view',\n        )\n      }\n\n      const asm = await assemblyManager.waitForAssembly(assembly)\n      if (!asm) {\n        throw new Error(\n          `Assembly \"${assembly}\" not found when launching circular genome view`,\n        )\n      }\n\n      view.setDisplayedRegions(asm.regions || [])\n\n      tracks.forEach(track => view.showTrack(track))\n    },\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { InputLabel, TextField } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\n\n// fontSize and fontFamily have to match between Editor and SyntaxHighlighter\nconst fontSize = '12px'\n// Optimize by using system default fonts: https://css-tricks.com/snippets/css/font-stacks/\nconst fontFamily =\n  'Consolas, \"Andale Mono WT\", \"Andale Mono\", \"Lucida Console\", \"Lucida Sans Typewriter\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Liberation Mono\", \"Nimbus Mono L\", Monaco, \"Courier New\", Courier, monospace'\n\nconst useStyles = makeStyles()(theme => ({\n  error: {\n    color: 'red',\n    fontSize: '0.8em',\n  },\n  callbackEditor: {\n    fontFamily,\n    fontSize,\n    background: theme.palette.background.default,\n    width: 800,\n    marginTop: '16px',\n    border: '1px solid rgba(0,0,0,0.42)',\n  },\n  callbackContainer: {\n    width: '100%',\n    overflowX: 'auto',\n  },\n  textAreaFont: {\n    fontFamily,\n  },\n}))\n\nfunction JsonEditor({\n  slot,\n}: {\n  slot: {\n    name: string\n    description: string\n    value: unknown\n    set: (arg: unknown) => void\n  }\n}) {\n  const { classes } = useStyles()\n  const [contents, setContents] = useState(JSON.stringify(slot.value, null, 2))\n  const [error, setError] = useState<unknown>()\n\n  useEffect(() => {\n    try {\n      setError(undefined)\n      slot.set(JSON.parse(contents))\n    } catch (e) {\n      console.error({ e })\n      setError(e)\n    }\n  }, [contents, slot])\n\n  return (\n    <>\n      {error ? <p className={classes.error}>{`${error}`}</p> : null}\n      <div className={classes.callbackContainer}>\n        <InputLabel shrink htmlFor=\"json-editor\">\n          {slot.name}\n        </InputLabel>\n        <TextField\n          id=\"json-editor\"\n          className={classes.callbackEditor}\n          value={contents}\n          helperText={slot.description}\n          multiline\n          onChange={event => setContents(event.target.value)}\n          style={{ background: error ? '#fdd' : undefined }}\n          InputProps={{\n            classes: {\n              input: classes.textAreaFont,\n            },\n          }}\n        />\n      </div>\n    </>\n  )\n}\n\nexport default observer(JsonEditor)\n","import { types } from 'mobx-state-tree'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\nexport default (pluginManager: PluginManager) =>\n  types\n    .model('ConfigurationEditorWidget', {\n      id: ElementId,\n      type: types.literal('ConfigurationEditorWidget'),\n      // If you add different types of targets, don't forget to account for that\n      // in the key of ./components/ConfigurationEditor.js\n      target: types.safeReference(\n        pluginManager.pluggableConfigSchemaType('track'),\n      ),\n    })\n    .actions(self => ({\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      setTarget(newTarget: any) {\n        self.target = newTarget\n      },\n    }))\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { isStateTreeNode, getType } from 'mobx-state-tree'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport { default as stateModelFactory } from './model'\nexport const configSchema = ConfigurationSchema('ConfigurationEditorWidget', {})\nexport const HeadingComponent = observer(\n  ({ model }: { model?: { target: { type: string } } }) => {\n    if (model?.target) {\n      if (model.target.type) {\n        return <>{`${model.target.type} settings`}</>\n      }\n      if (isStateTreeNode(model.target)) {\n        const type = getType(model.target)\n        if (type?.name) {\n          return (\n            <>{`${type.name.replace('ConfigurationSchema', '')} settings`}</>\n          )\n        }\n      }\n    }\n    return <>Settings</>\n  },\n)\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config FromConfigAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = ConfigurationSchema(\n  'FromConfigAdapter',\n  {\n    /**\n     * #slot\n     */\n    features: {\n      type: 'frozen',\n      defaultValue: [],\n    },\n  },\n  { explicitlyTyped: true, implicitIdentifier: 'adapterId' },\n)\n\nexport default configSchema\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n/**\n * #config FromConfigRegionsAdapter\n * used for specifying refNames+sizes of an assembly\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst regionsConfigSchema = ConfigurationSchema(\n  'FromConfigRegionsAdapter',\n  {\n    /**\n     * #slot\n     */\n    features: {\n      type: 'frozen',\n      defaultValue: [],\n    },\n  },\n  {\n    explicitlyTyped: true,\n    implicitIdentifier: 'adapterId',\n  },\n)\nexport default regionsConfigSchema\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n/**\n * #config FromConfigSequenceAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst sequenceConfigSchema = ConfigurationSchema(\n  'FromConfigSequenceAdapter',\n  {\n    /**\n     * #slot\n     */\n    features: {\n      type: 'frozen',\n      defaultValue: [],\n    },\n  },\n  { explicitlyTyped: true, implicitIdentifier: 'adapterId' },\n)\n\nexport default sequenceConfigSchema\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config RefNameAliasAdapter\n * can read \"chromAliases\" type files from UCSC or any tab separated file of\n * refName aliases\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst RefNameAliasAdapter = ConfigurationSchema(\n  'RefNameAliasAdapter',\n  {\n    /**\n     * #slot\n     */\n    location: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/my/aliases.txt',\n        locationType: 'UriLocation',\n      },\n    },\n    /**\n     * #slot\n     * by default, the \"ref names that match the fasta\" are assumed to be in the\n     * first column (0), change this variable if needed\n     */\n    refNameColumn: {\n      type: 'number',\n      defaultValue: 0,\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default RefNameAliasAdapter\n","import { lazy } from 'react'\nimport WidgetType from '@jbrowse/core/pluggableElementTypes/WidgetType'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport {\n  configSchema as ConfigurationEditorConfigSchema,\n  HeadingComponent as ConfigurationEditorHeadingComponent,\n  stateModelFactory as ConfigurationEditorStateModelFactory,\n} from './ConfigurationEditorWidget'\nimport FromConfigAdapterF from './FromConfigAdapter'\nimport FromConfigRegionsAdapterF from './FromConfigRegionsAdapter'\nimport FromConfigSequenceAdapterF from './FromConfigSequenceAdapter'\nimport RefNameAliasAdapterF from './RefNameAliasAdapter'\n\nconst LazyConfigurationEditorComponent = lazy(\n  () => import('./ConfigurationEditorWidget/components/ConfigurationEditor'),\n)\n\nexport default class extends Plugin {\n  name = 'ConfigurationPlugin'\n\n  install(pluginManager: PluginManager) {\n    FromConfigAdapterF(pluginManager)\n    FromConfigRegionsAdapterF(pluginManager)\n    FromConfigSequenceAdapterF(pluginManager)\n    RefNameAliasAdapterF(pluginManager)\n\n    pluginManager.addWidgetType(() => {\n      return new WidgetType({\n        name: 'ConfigurationEditorWidget',\n        HeadingComponent: ConfigurationEditorHeadingComponent,\n        configSchema: ConfigurationEditorConfigSchema,\n        stateModel: ConfigurationEditorStateModelFactory(pluginManager),\n        ReactComponent: LazyConfigurationEditorComponent,\n      })\n    })\n  }\n}\n\nexport { default as JsonEditor } from './ConfigurationEditorWidget/components/JsonEditor'\n\nexport { LazyConfigurationEditorComponent as ConfigurationEditor }\n","import { AdapterType } from '@jbrowse/core/pluggableElementTypes'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'FromConfigAdapter',\n        configSchema,\n        getAdapterClass: () =>\n          import('./FromConfigAdapter').then(r => r.default),\n        adapterMetadata: {\n          hiddenFromGUI: true,\n        },\n      }),\n  )\n}\n","import { AdapterType } from '@jbrowse/core/pluggableElementTypes'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'FromConfigRegionsAdapter',\n        configSchema,\n        getAdapterClass: () =>\n          import('./FromConfigRegionsAdapter').then(r => r.default),\n        adapterMetadata: {\n          hiddenFromGUI: true,\n        },\n      }),\n  )\n}\n","import { AdapterType } from '@jbrowse/core/pluggableElementTypes'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'FromConfigSequenceAdapter',\n        configSchema,\n        getAdapterClass: () =>\n          import('./FromConfigSequenceAdapter').then(r => r.default),\n        adapterMetadata: {\n          hiddenFromGUI: true,\n        },\n      }),\n  )\n}\n","import { AdapterType } from '@jbrowse/core/pluggableElementTypes'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'RefNameAliasAdapter',\n        configSchema,\n        getAdapterClass: () =>\n          import('./RefNameAliasAdapter').then(r => r.default),\n        adapterMetadata: {\n          hiddenFromGUI: true,\n        },\n      }),\n  )\n}\n","import { types } from 'mobx-state-tree'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\n\nexport default types.model('AddConnectionModel', {\n  id: ElementId,\n  type: types.literal('AddConnectionWidget'),\n})\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { WidgetType } from '@jbrowse/core/pluggableElementTypes'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { lazy } from 'react'\n\nimport stateModel from './model'\nconst configSchema = ConfigurationSchema('AddConnectionWidget', {})\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addWidgetType(() => {\n    return new WidgetType({\n      name: 'AddConnectionWidget',\n      heading: 'Add a connection',\n      configSchema,\n      stateModel,\n      ReactComponent: lazy(() => import('./components/AddConnectionWidget')),\n    })\n  })\n}\n","import { types, Instance } from 'mobx-state-tree'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport {\n  guessAdapter,\n  guessTrackType,\n  getFileName,\n  UNSUPPORTED,\n} from '@jbrowse/core/util/tracks'\n\nfunction isAbsoluteUrl(url = '') {\n  try {\n    new URL(url)\n    return true\n  } catch (error) {\n    return url.startsWith('/')\n  }\n}\ninterface IndexingAttr {\n  attributes: string[]\n  exclude: string[]\n}\nexport default function f(pluginManager: PluginManager) {\n  return types\n    .model('AddTrackModel', {\n      id: ElementId,\n      type: types.literal('AddTrackWidget'),\n      view: types.safeReference(\n        pluginManager.pluggableMstType('view', 'stateModel'),\n      ),\n    })\n    .volatile(() => ({\n      trackSource: 'fromFile',\n      trackData: undefined as FileLocation | undefined,\n      indexTrackData: undefined as FileLocation | undefined,\n\n      // alts\n      altAssemblyName: '',\n      altTrackName: '',\n      altTrackType: '',\n\n      adapterHint: '',\n      textIndexTrack: true,\n      textIndexingConf: undefined as IndexingAttr | undefined,\n    }))\n    .actions(self => ({\n      setAdapterHint(obj: string) {\n        self.adapterHint = obj\n      },\n      setTrackSource(str: string) {\n        self.trackSource = str\n      },\n      setTextIndexingConf(conf: IndexingAttr) {\n        self.textIndexingConf = conf\n      },\n      setTextIndexTrack(flag: boolean) {\n        self.textIndexTrack = flag\n      },\n      setTrackData(obj: FileLocation) {\n        self.trackData = obj\n      },\n      setIndexTrackData(obj: FileLocation) {\n        self.indexTrackData = obj\n      },\n      setAssembly(str: string) {\n        self.altAssemblyName = str\n      },\n      setTrackName(str: string) {\n        self.altTrackName = str\n      },\n      setTrackType(str: string) {\n        self.altTrackType = str\n      },\n\n      clearData() {\n        self.trackSource = ''\n        self.altTrackName = ''\n        self.altTrackType = ''\n        self.altAssemblyName = ''\n        self.adapterHint = ''\n        self.indexTrackData = undefined\n        self.trackData = undefined\n        self.textIndexingConf = undefined\n        self.textIndexTrack = true\n      },\n    }))\n    .views(self => ({\n      get trackAdapter() {\n        const { trackData, indexTrackData, adapterHint } = self\n\n        return trackData\n          ? guessAdapter(trackData, indexTrackData, adapterHint, self)\n          : undefined\n      },\n\n      get trackName() {\n        return (\n          self.altTrackName ||\n          (self.trackData ? getFileName(self.trackData) : '')\n        )\n      },\n\n      get isFtp() {\n        const { trackData: track, indexTrackData: index } = self\n        return !!(\n          // @ts-expect-error\n          (index?.uri?.startsWith('ftp://') || track?.uri?.startsWith('ftp://'))\n        )\n      },\n\n      get isRelativeTrackUrl() {\n        // @ts-expect-error\n        const uri = self.trackData?.uri\n        return uri ? !isAbsoluteUrl(uri) : false\n      },\n      get isRelativeIndexUrl() {\n        // @ts-expect-error\n        const uri = self.indexTrackData?.uri\n        return uri ? !isAbsoluteUrl(uri) : false\n      },\n      get isRelativeUrl() {\n        return this.isRelativeIndexUrl || this.isRelativeTrackUrl\n      },\n\n      get trackHttp() {\n        // @ts-expect-error\n        return self.trackData?.uri?.startsWith('http://')\n      },\n      get indexHttp() {\n        // @ts-expect-error\n        return self.indexTrackData?.uri?.startsWith('http://')\n      },\n\n      get wrongProtocol() {\n        return (\n          window.location.protocol === 'https:' &&\n          (this.trackHttp || this.indexHttp)\n        )\n      },\n\n      get unsupported() {\n        return this.trackAdapter?.type === UNSUPPORTED\n      },\n\n      get assembly() {\n        return self.altAssemblyName || self.view.assemblyNames?.[0]\n      },\n\n      get trackType() {\n        return (\n          self.altTrackType ||\n          (this.trackAdapter\n            ? guessTrackType(this.trackAdapter.type, self)\n            : '')\n        )\n      },\n    }))\n    .views(self => ({\n      get warningMessage() {\n        if (self.isFtp) {\n          return `Warning: JBrowse cannot access files using the ftp protocol`\n        } else if (self.isRelativeUrl) {\n          return `Warning: one or more of your files do not provide the protocol e.g.\n          https://, please provide an absolute URL unless you are sure a\n          relative URL is intended.`\n        } else if (self.wrongProtocol) {\n          return `Warning: You entered a http:// resources but we cannot access HTTP\n          resources from JBrowse when it is running on https. Please use an\n          https URL for your track, or access the JBrowse app from the http\n          protocol`\n        }\n        return ''\n      },\n    }))\n}\n\nexport type AddTrackStateModel = ReturnType<typeof f>\nexport type AddTrackModel = Instance<AddTrackStateModel>\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { WidgetType } from '@jbrowse/core/pluggableElementTypes'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { lazy } from 'react'\n\nimport stateModelFactory from './model'\nconst configSchema = ConfigurationSchema('AddTrackWidget', {})\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addWidgetType(() => {\n    return new WidgetType({\n      name: 'AddTrackWidget',\n      heading: 'Add a track',\n      configSchema,\n      stateModel: stateModelFactory(pluginManager),\n      ReactComponent: lazy(() => import('./components/AddTrackWidget')),\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nconst configSchema = ConfigurationSchema('HierarchicalTrackSelectorWidget', {})\nexport default configSchema\n","import stateModelFactory from './model'\nimport configSchema from './configSchema'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { WidgetType } from '@jbrowse/core/pluggableElementTypes'\nimport { lazy } from 'react'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addWidgetType(() => {\n    return new WidgetType({\n      name: 'HierarchicalTrackSelectorWidget',\n      heading: 'Available tracks',\n      configSchema,\n      stateModel: stateModelFactory(pluginManager),\n      ReactComponent: lazy(\n        () => import('./components/HierarchicalTrackSelector'),\n      ),\n    })\n  })\n}\n\nexport {\n  type HierarchicalTrackSelectorModel,\n  default as stateModelFactory,\n} from './model'\nexport { default as configSchema } from './configSchema'\n","import { types, getSnapshot, Instance } from 'mobx-state-tree'\nimport {\n  getConf,\n  readConfObject,\n  AnyConfigurationModel,\n} from '@jbrowse/core/configuration'\nimport {\n  AbstractSessionModel,\n  dedupe,\n  getSession,\n  getEnv,\n  notEmpty,\n} from '@jbrowse/core/util'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\nfunction hasAnyOverlap<T>(a1: T[] = [], a2: T[] = []) {\n  // shortcut case is that arrays are single entries, and are equal\n  // long case is that we use a set\n  if (a1[0] === a2[0]) {\n    return true\n  } else {\n    const s1 = new Set(a1)\n    return a2.some(a => s1.has(a))\n  }\n}\n\nexport function matches(\n  query: string,\n  conf: AnyConfigurationModel,\n  session: AbstractSessionModel,\n) {\n  const categories = readConfObject(conf, 'category') as string[] | undefined\n  const queryLower = query.toLowerCase()\n  return (\n    getTrackName(conf, session).toLowerCase().includes(queryLower) ||\n    !!categories?.filter(c => c.toLowerCase().includes(queryLower)).length\n  )\n}\n\nexport type TreeNode = {\n  name: string\n  id: string\n  conf?: AnyConfigurationModel\n  checked?: boolean\n  isOpenByDefault?: boolean\n  children: TreeNode[]\n}\n\nfunction filterTracks(\n  tracks: AnyConfigurationModel[],\n  self: {\n    view: { type: string; trackSelectorAnyOverlap?: boolean }\n    assemblyNames: string[]\n  },\n) {\n  const { assemblyManager } = getSession(self)\n  const { pluginManager } = getEnv(self)\n  const { view } = self\n  const { trackSelectorAnyOverlap } = view\n  const trackListAssemblies = self.assemblyNames\n    .map(a => assemblyManager.get(a))\n    .filter(notEmpty)\n\n  return tracks\n    .filter(c => {\n      const trackAssemblyNames = readConfObject(c, 'assemblyNames') as string[]\n      const trackAssemblies = new Set(\n        trackAssemblyNames\n          ?.map(name => assemblyManager.get(name))\n          .filter(notEmpty) || [],\n      )\n      return trackSelectorAnyOverlap\n        ? trackListAssemblies.some(a => trackAssemblies.has(a))\n        : trackListAssemblies.every(a => trackAssemblies.has(a))\n    })\n    .filter(c => {\n      const { displayTypes } = pluginManager.getViewType(view.type)\n      const compatDisplays = displayTypes.map(d => d.name)\n      const trackDisplays = c.displays.map((d: { type: string }) => d.type)\n      return hasAnyOverlap(compatDisplays, trackDisplays)\n    })\n}\n\nexport function generateHierarchy(\n  model: HierarchicalTrackSelectorModel,\n  trackConfigurations: AnyConfigurationModel[],\n  collapsed: { get: (arg: string) => boolean | undefined },\n  extra?: string,\n) {\n  const hierarchy = { children: [] as TreeNode[] } as TreeNode\n  const { filterText, view } = model\n  const session = getSession(model)\n\n  trackConfigurations\n    .filter(conf => matches(filterText, conf, session))\n    .forEach(conf => {\n      // copy the categories since this array can be mutated downstream\n      const categories = [...(readConfObject(conf, 'category') || [])]\n\n      // silly thing where if trackId ends with sessionTrack, then push it to\n      // a category that starts with a space to force sort to the top...\n      // double whammy hackyness\n      if (conf.trackId.endsWith('sessionTrack')) {\n        categories.unshift(' Session tracks')\n      }\n\n      let currLevel = hierarchy\n\n      // find existing category to put track into or create it\n      for (let i = 0; i < categories.length; i++) {\n        const category = categories[i]\n        const ret = currLevel.children.find(c => c.name === category)\n        const id = extra + '-' + categories.slice(0, i + 1).join(',')\n        if (!ret) {\n          const n = {\n            children: [],\n            name: category,\n            id,\n            isOpenByDefault: !collapsed.get(id),\n          }\n          currLevel.children.push(n)\n          currLevel = n\n        } else {\n          currLevel = ret\n        }\n      }\n      const tracks = view.tracks as { configuration: AnyConfigurationModel }[]\n\n      // using splice here tries to group leaf nodes above hierarchical nodes\n      currLevel.children.splice(\n        currLevel.children.findIndex(elt => elt.children.length),\n        0,\n        {\n          id: conf.trackId,\n          name: getTrackName(conf, session),\n          conf,\n          checked: tracks.some(f => f.configuration === conf),\n          children: [],\n        },\n      )\n    })\n\n  return hierarchy.children\n}\n\n/**\n * #stateModel HierarchicalTrackSelectorWidget\n */\nexport default function stateTreeFactory(pluginManager: PluginManager) {\n  return types\n    .model('HierarchicalTrackSelectorWidget', {\n      /**\n       * #property\n       */\n      id: ElementId,\n      /**\n       * #property\n       */\n      type: types.literal('HierarchicalTrackSelectorWidget'),\n      /**\n       * #property\n       */\n      collapsed: types.map(types.boolean),\n      /**\n       * #property\n       */\n      view: types.safeReference(\n        pluginManager.pluggableMstType('view', 'stateModel'),\n      ),\n    })\n    .volatile(() => ({\n      selection: [] as AnyConfigurationModel[],\n      filterText: '',\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setSelection(elt: AnyConfigurationModel[]) {\n        self.selection = elt\n      },\n      /**\n       * #action\n       */\n      addToSelection(elt: AnyConfigurationModel[]) {\n        self.selection = dedupe([...self.selection, ...elt], e => e.trackId)\n      },\n      /**\n       * #action\n       */\n      removeFromSelection(elt: AnyConfigurationModel[]) {\n        self.selection = self.selection.filter(f => !elt.includes(f))\n      },\n      /**\n       * #action\n       */\n      clearSelection() {\n        self.selection = []\n      },\n      /**\n       * #action\n       */\n      setView(view: unknown) {\n        self.view = view\n      },\n      /**\n       * #action\n       */\n      toggleCategory(pathName: string) {\n        self.collapsed.set(pathName, !self.collapsed.get(pathName))\n      },\n      /**\n       * #action\n       */\n      clearFilterText() {\n        self.filterText = ''\n      },\n      /**\n       * #action\n       */\n      setFilterText(newText: string) {\n        self.filterText = newText\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       */\n      getRefSeqTrackConf(\n        assemblyName: string,\n      ): AnyConfigurationModel | undefined {\n        const { assemblyManager } = getSession(self)\n        const assembly = assemblyManager.get(assemblyName)\n        const trackConf = assembly?.configuration.sequence\n        const viewType = pluginManager.getViewType(self.view.type)\n        if (!trackConf) {\n          return undefined\n        }\n        for (const display of trackConf.displays) {\n          if (viewType.displayTypes.some(d => d.name === display.type)) {\n            return trackConf\n          }\n        }\n        return undefined\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get assemblyNames(): string[] {\n        return self.view?.assemblyNames || []\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       * filter out tracks that don't match the current display types\n       */\n      connectionTrackConfigurations(connection: {\n        tracks: AnyConfigurationModel[]\n      }) {\n        return !self.view ? [] : filterTracks(connection.tracks, self)\n      },\n\n      /**\n       * #getter\n       * filter out tracks that don't match the current assembly/display types\n       */\n      get trackConfigurations(): AnyConfigurationModel[] {\n        return !self.view\n          ? ([] as AnyConfigurationModel[])\n          : [\n              ...self.assemblyNames.map(a => self.getRefSeqTrackConf(a)),\n              ...filterTracks(getSession(self).tracks, self),\n            ].filter(notEmpty)\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get hierarchy() {\n        const hier = generateHierarchy(\n          self as HierarchicalTrackSelectorModel,\n          self.trackConfigurations,\n          self.collapsed,\n        )\n\n        const session = getSession(self)\n        const { connectionInstances } = session\n\n        const conns =\n          connectionInstances\n            ?.map(c => ({\n              // @ts-expect-error\n              id: getSnapshot(c).configuration,\n              name: getConf(c, 'name'),\n              children: this.connectionHierarchy(c),\n              state: {\n                expanded: true,\n              },\n            }))\n            .filter(f => f.children.length) || []\n\n        return {\n          name: 'Root',\n          id: 'Root',\n          children: [\n            { name: 'Tracks', id: 'Tracks', children: hier },\n            ...conns,\n          ],\n        }\n      },\n\n      /**\n       * #method\n       */\n      connectionHierarchy(connection: {\n        name: string\n        tracks: AnyConfigurationModel[]\n      }) {\n        return generateHierarchy(\n          self as HierarchicalTrackSelectorModel,\n          self.connectionTrackConfigurations(connection),\n          self.collapsed,\n          connection.name,\n        )\n      },\n    }))\n}\n\nexport type HierarchicalTrackSelectorStateModel = ReturnType<\n  typeof stateTreeFactory\n>\nexport type HierarchicalTrackSelectorModel =\n  Instance<HierarchicalTrackSelectorStateModel>\n","import { types, Instance } from 'mobx-state-tree'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\n\nexport default function f(pluginManager: PluginManager) {\n  return types\n    .model('PluginStoreModel', {\n      id: ElementId,\n      type: types.literal('PluginStoreWidget'),\n      filterText: '',\n      view: types.safeReference(\n        pluginManager.pluggableMstType('view', 'stateModel'),\n      ),\n    })\n    .actions(self => ({\n      clearFilterText() {\n        self.filterText = ''\n      },\n      setFilterText(newText: string) {\n        self.filterText = newText\n      },\n    }))\n}\n\nexport type PluginStoreStateModel = ReturnType<typeof f>\nexport type PluginStoreModel = Instance<PluginStoreStateModel>\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { WidgetType } from '@jbrowse/core/pluggableElementTypes'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { lazy } from 'react'\n\nimport stateModelFactory from './model'\nconst configSchema = ConfigurationSchema('PluginStoreWidget', {})\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addWidgetType(() => {\n    return new WidgetType({\n      name: 'PluginStoreWidget',\n      heading: 'Plugin store',\n      configSchema,\n      stateModel: stateModelFactory(pluginManager),\n      ReactComponent: lazy(() => import('./components/PluginStoreWidget')),\n    })\n  })\n}\n","import { baseConnectionConfig } from '@jbrowse/core/pluggableElementTypes/models'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config UCSCTrackHubConnection\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst UCSCTrackHubConnection = ConfigurationSchema(\n  'UCSCTrackHubConnection',\n  {\n    /**\n     * #slot\n     */\n    hubTxtLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: 'http://mysite.com/path/to/hub.txt',\n        locationType: 'UriLocation',\n      },\n      description: 'location of the hub file (usually called hub.txt)',\n    },\n    /**\n     * #slot\n     */\n    assemblyNames: {\n      type: 'stringArray',\n      defaultValue: [],\n      description:\n        'optional list of genomes to import from this track hub, if empty all genomes will be imported',\n    },\n  },\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: baseConnectionConfig,\n  },\n)\n\nexport default UCSCTrackHubConnection\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { BaseConnectionModelFactory } from '@jbrowse/core/pluggableElementTypes/models'\nimport {\n  ConfigurationReference,\n  readConfObject,\n  getConf,\n} from '@jbrowse/core/configuration'\nimport { getSession } from '@jbrowse/core/util'\nimport { types } from 'mobx-state-tree'\n\n// locals\nimport configSchema from './configSchema'\n\nexport default function UCSCTrackHubConnection(pluginManager: PluginManager) {\n  return types\n    .compose(\n      'UCSCTrackHubConnection',\n      BaseConnectionModelFactory(pluginManager),\n      types.model({\n        configuration: ConfigurationReference(configSchema),\n        type: types.literal('UCSCTrackHubConnection'),\n      }),\n    )\n    .actions(self => ({\n      async connect() {\n        const session = getSession(self)\n        const notLoadedAssemblies = [] as string[]\n        try {\n          const hubFileLocation = getConf(self, 'hubTxtLocation')\n          const {\n            generateTracks,\n            fetchGenomesFile,\n            fetchTrackDbFile,\n            fetchHubFile,\n          } = await import('./ucscTrackHub')\n          const hubFile = await fetchHubFile(hubFileLocation)\n          const genomeFile = hubFile.get('genomesFile')\n          if (!genomeFile) {\n            throw new Error('genomesFile not found on hub')\n          }\n\n          const hubUri = new URL(hubFileLocation.uri, hubFileLocation.baseUri)\n          const genomesFileLocation = hubUri\n            ? {\n                uri: new URL(genomeFile, hubUri).href,\n                locationType: 'UriLocation' as const,\n              }\n            : {\n                localPath: genomeFile,\n                locationType: 'LocalPathLocation' as const,\n              }\n          const genomesFile = await fetchGenomesFile(genomesFileLocation)\n          const map = {} as { [key: string]: number }\n          for (const [genomeName, genome] of genomesFile) {\n            const assemblyNames = getConf(self, 'assemblyNames')\n            if (\n              assemblyNames.length > 0 &&\n              !assemblyNames.includes(genomeName)\n            ) {\n              continue\n            }\n\n            const conf = session.assemblyManager.get(genomeName)?.configuration\n            if (!conf) {\n              notLoadedAssemblies.push(genomeName)\n              continue\n            }\n            const db = genome.get('trackDb')\n            if (!db) {\n              throw new Error('genomesFile not found on hub')\n            }\n            const base = new URL(genomeFile, hubUri)\n            const loc = hubUri\n              ? {\n                  uri: new URL(db, base).href,\n                  locationType: 'UriLocation' as const,\n                }\n              : {\n                  localPath: db,\n                  locationType: 'LocalPathLocation' as const,\n                }\n            const trackDb = await fetchTrackDbFile(loc)\n            const seqAdapter = readConfObject(conf, ['sequence', 'adapter'])\n            const tracks = generateTracks(trackDb, loc, genomeName, seqAdapter)\n            self.addTrackConfs(tracks)\n            map[genomeName] = tracks.length\n          }\n\n          const loadedAssemblies = Object.entries(map)\n          const str1 = loadedAssemblies.length\n            ? `Loaded data from these assemblies: ${loadedAssemblies\n                .map(([key, val]) => `${key} (${val} tracks)`)\n                .join(', ')}`\n            : ''\n          const str2 = notLoadedAssemblies.length\n            ? `Skipped data from these assemblies: ${notLoadedAssemblies.join(\n                ', ',\n              )}`\n            : ''\n          session.notify([str1, str2].filter(f => !!f).join('. '), 'success')\n        } catch (e) {\n          console.error(e)\n          session.notify(\n            `There was a problem connecting to the UCSC Track Hub \"${self.configuration.name}\". Please make sure you have entered a valid hub.txt file. The error that was thrown is: \"${e}\"`,\n            'error',\n          )\n          session.breakConnection(self.configuration)\n        }\n      },\n    }))\n}\n","import { ConnectionType } from '@jbrowse/core/pluggableElementTypes'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\nimport stateModelFactory from './model'\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addConnectionType(\n    () =>\n      new ConnectionType({\n        name: 'UCSCTrackHubConnection',\n        configSchema,\n        stateModel: stateModelFactory(pluginManager),\n        displayName: 'UCSC Track Hub',\n        description: 'A track or assembly hub in the Track Hub format',\n        url: '//genome.ucsc.edu/goldenPath/help/hgTrackHubHelp.html#Intro',\n      }),\n  )\n}\n","import { BaseBlock } from '@jbrowse/core/util/blockTypes'\nimport { Dotplot1DViewModel } from '../model'\n\nexport function locstr(\n  px: number,\n  view: Dotplot1DViewModel,\n  includeAsm = true,\n) {\n  const { assemblyName, refName, start, offset, oob } = view.pxToBp(px)\n  const coord = Math.floor(start + offset)\n  return oob\n    ? 'out of bounds'\n    : `${\n        includeAsm ? '{' + assemblyName + '}' : ''\n      }${refName}:${coord.toLocaleString('en-US')}`\n}\n\nexport function getBlockLabelKeysToHide(\n  blocks: BaseBlock[],\n  length: number,\n  viewOffsetPx: number,\n) {\n  const blockLabelKeysToHide = new Set<string>()\n  const sortedBlocks = [...blocks].sort((a, b) => {\n    const alen = a.end - a.start\n    const blen = b.end - b.start\n    return blen - alen\n  })\n  const positions = Array.from({ length: Math.round(length) })\n  for (const { key, offsetPx } of sortedBlocks) {\n    const y = Math.round(length - offsetPx + viewOffsetPx)\n    const labelBounds = [Math.max(y - 12, 0), y]\n    if (y === 0 || positions.slice(...labelBounds).some(Boolean)) {\n      blockLabelKeysToHide.add(key)\n    } else {\n      positions.fill(true, ...labelBounds)\n    }\n  }\n  return blockLabelKeysToHide\n}\n/**\n * Given a scale ( bp/px ) and minimum distances (px) between major and minor\n * gridlines, return an object like `{ majorPitch: bp, minorPitch: bp }` giving\n * the gridline pitches to use.\n */\nexport function chooseGridPitch(\n  scale: number,\n  minMajorPitchPx: number,\n  minMinorPitchPx: number,\n) {\n  scale = Math.abs(scale)\n  const minMajorPitchBp = minMajorPitchPx * scale\n  const majorMagnitude = Number.parseInt(\n    Number(minMajorPitchBp).toExponential().split(/e/i)[1],\n    10,\n  )\n\n  let majorPitch = 10 ** majorMagnitude\n  while (majorPitch < minMajorPitchBp) {\n    majorPitch *= 2\n    if (majorPitch >= minMajorPitchBp) {\n      break\n    }\n    majorPitch *= 2.5\n  }\n\n  majorPitch = Math.max(majorPitch, 5)\n\n  const majorPitchPx = majorPitch / scale\n\n  let minorPitch = 0\n  if (!(majorPitch % 10) && majorPitchPx / 10 >= minMinorPitchPx) {\n    minorPitch = majorPitch / 10\n  } else if (!(majorPitch % 5) && majorPitchPx / 5 >= minMinorPitchPx) {\n    minorPitch = majorPitch / 5\n  } else if (!(majorPitch % 2) && majorPitchPx / 2 >= minMinorPitchPx) {\n    minorPitch = majorPitch / 2\n  }\n\n  return { majorPitch, minorPitch }\n}\n\nexport function makeTicks(\n  regions: BaseBlock[],\n  bpPerPx: number,\n  emitMajor = true,\n  emitMinor = true,\n) {\n  const ticks = []\n  const gridPitch = chooseGridPitch(bpPerPx, 60, 15)\n  const iterPitch = gridPitch.minorPitch || gridPitch.majorPitch\n  for (let i = 0; i < regions.length; i++) {\n    const region = regions[i]\n    const { start, end, refName } = region\n    let index = 0\n\n    const minBase = start\n    const maxBase = end\n\n    for (\n      let base = Math.floor(minBase / iterPitch) * iterPitch;\n      base < Math.ceil(maxBase / iterPitch) * iterPitch + 1;\n      base += iterPitch\n    ) {\n      if (emitMinor && base % gridPitch.majorPitch) {\n        ticks.push({ type: 'minor', base: base - 1, index, refName })\n        index += 1\n      } else if (\n        emitMajor &&\n        Math.abs(base - region.start) > gridPitch.minorPitch\n      ) {\n        ticks.push({ type: 'major', base: base - 1, index, refName })\n        index += 1\n      }\n    }\n  }\n  return ticks\n}\n","import React from 'react'\nimport { BaseBlock } from '@jbrowse/core/util/blockTypes'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\n\nconst useStyles = makeStyles()(theme => ({\n  contentBlock: {\n    position: 'relative',\n    minHeight: '100%',\n    boxSizing: 'border-box',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n  },\n  elidedBlock: {\n    minHeight: '100%',\n    boxSizing: 'border-box',\n    backgroundColor: '#999',\n    backgroundImage:\n      'repeating-linear-gradient(90deg, transparent, transparent 1px, rgba(255,255,255,.5) 1px, rgba(255,255,255,.5) 3px)',\n  },\n  interRegionPaddingBlock: {\n    minHeight: '100%',\n    backgroundColor: theme.palette.text.disabled,\n  },\n  boundaryPaddingBlock: {\n    minHeight: '100%',\n    backgroundColor: theme.palette.action.disabledBackground,\n  },\n}))\n\nconst ContentBlock = observer(function ({\n  block,\n  children,\n}: {\n  block: BaseBlock\n  children: React.ReactNode\n}) {\n  const { classes } = useStyles()\n  const { widthPx } = block\n  return (\n    <div style={{ width: widthPx }} className={classes.contentBlock}>\n      {children}\n    </div>\n  )\n})\n\nfunction ElidedBlock({ width }: { width: number }) {\n  const { classes } = useStyles()\n  return <div className={classes.elidedBlock} style={{ width }} />\n}\n\nfunction InterRegionPaddingBlock({\n  boundary,\n  width,\n  style = {},\n}: {\n  boundary: boolean\n  width: number\n  style?: React.CSSProperties\n}) {\n  const { classes } = useStyles()\n  return (\n    <div\n      style={{\n        ...style,\n        width,\n      }}\n      className={\n        boundary\n          ? classes.boundaryPaddingBlock\n          : classes.interRegionPaddingBlock\n      }\n    />\n  )\n}\n\nexport { ContentBlock, ElidedBlock, InterRegionPaddingBlock }\n","import React from 'react'\nimport { observer } from 'mobx-react'\n\n// core\nimport { Base1DViewModel } from '@jbrowse/core/util/Base1DViewModel'\nimport { ContentBlock } from '@jbrowse/core/util/blockTypes'\nimport { Assembly } from '@jbrowse/core/assemblyManager/assembly'\n\n// locals\nimport { HEADER_OVERVIEW_HEIGHT } from '..'\nimport { getCytobands } from './util'\n\n// rounded rect from https://stackoverflow.com/a/45889603/2129219\n// prettier-ignore\nfunction rightRoundedRect(x: number, y: number, width: number, height: number, radius: number) {\n  return \"M\" + x + \",\" + y\n       + \"h\" + (width - radius)\n       + \"a\" + radius + \",\" + radius + \" 0 0 1 \" + radius + \",\" + radius\n       + \"v\" + (height - 2 * radius)\n       + \"a\" + radius + \",\" + radius + \" 0 0 1 \" + -radius + \",\" + radius\n       + \"h\" + (radius - width)\n       + \"z\";\n}\n\n// prettier-ignore\nfunction leftRoundedRect(x: number, y: number, width: number, height: number, radius: number ) {\n  return \"M\" + (x + radius) + \",\" + y\n       + \"h\" + (width - radius)\n       + \"v\" + height\n       + \"h\" + (radius - width)\n       + \"a\" + radius + \",\" + radius + \" 0 0 1 \" + (-radius) + \",\" + (-radius)\n       + \"v\" + (2 * radius - height)\n       + \"a\" + radius + \",\" + radius + \" 0 0 1 \" + radius + \",\" + (-radius)\n       + \"z\";\n}\n\nconst colorMap: { [key: string]: string | undefined } = {\n  gneg: 'rgb(227,227,227)',\n  gpos25: 'rgb(142,142,142)',\n  gpos50: 'rgb(85,85,85)',\n  gpos100: 'rgb(0,0,0)',\n  gpos75: 'rgb(57,57,57)',\n  gvar: 'rgb(0,0,0)',\n  stalk: 'rgb(127,127,127)',\n  acen: '#800',\n}\n\nexport default observer(function Cytobands({\n  overview,\n  block,\n  assembly,\n}: {\n  overview: Base1DViewModel\n  assembly?: Assembly\n  block: ContentBlock\n}) {\n  const { offsetPx, reversed } = block\n  const cytobands = getCytobands(assembly, block.refName)\n  const coords = cytobands.map(f => {\n    const { refName, start, end, type } = f\n    return [\n      overview.bpToPx({\n        refName,\n        coord: start,\n      }),\n      overview.bpToPx({\n        refName,\n        coord: end,\n      }),\n      type,\n    ]\n  })\n\n  const arr = cytobands || []\n  const lcap = reversed ? arr.length - 1 : 0\n  const rcap = reversed ? 0 : arr.length - 1\n\n  let firstCent = true\n  return (\n    <g transform={`translate(-${offsetPx})`}>\n      {coords.map(([start, end, type], index) => {\n        const key = `${start}-${end}-${type}`\n        if (type === 'acen' && firstCent) {\n          firstCent = false\n          return (\n            <polygon\n              key={key}\n              points={[\n                [start, 0],\n                [end, HEADER_OVERVIEW_HEIGHT / 2],\n                [start, HEADER_OVERVIEW_HEIGHT],\n              ].toString()}\n              fill={colorMap[type]}\n            />\n          )\n        }\n        if (type === 'acen' && !firstCent) {\n          return (\n            <polygon\n              key={key}\n              points={[\n                [start, HEADER_OVERVIEW_HEIGHT / 2],\n                [end, 0],\n                [end, HEADER_OVERVIEW_HEIGHT],\n              ].toString()}\n              fill={colorMap[type]}\n            />\n          )\n        }\n\n        if (lcap === index) {\n          return (\n            <path\n              key={key}\n              d={leftRoundedRect(\n                Math.min(start, end),\n                0,\n                Math.abs(end - start),\n                HEADER_OVERVIEW_HEIGHT,\n                8,\n              )}\n              fill={colorMap[type]}\n            />\n          )\n        } else if (rcap === index) {\n          return (\n            <path\n              key={key}\n              d={rightRoundedRect(\n                Math.min(start, end),\n                0,\n                Math.abs(end - start) - 2,\n                HEADER_OVERVIEW_HEIGHT,\n                8,\n              )}\n              fill={colorMap[type]}\n            />\n          )\n        } else {\n          return (\n            <rect\n              key={key}\n              x={Math.min(start, end)}\n              y={0}\n              width={Math.abs(end - start)}\n              height={HEADER_OVERVIEW_HEIGHT}\n              fill={colorMap[type]}\n            />\n          )\n        }\n      })}\n    </g>\n  )\n})\n","import React from 'react'\nimport { IconButton, Paper, Typography, alpha } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { getConf } from '@jbrowse/core/configuration'\nimport { getSession, getContainingView } from '@jbrowse/core/util'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport { BaseTrackModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport { SanitizedHTML } from '@jbrowse/core/ui'\nimport CascadingMenuButton from '@jbrowse/core/ui/CascadingMenuButton'\n\n// icons\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\nimport DragIcon from '@mui/icons-material/DragIndicator'\nimport CloseIcon from '@mui/icons-material/Close'\nimport MinimizeIcon from '@mui/icons-material/Minimize'\nimport AddIcon from '@mui/icons-material/Add'\n\nimport { LinearGenomeViewModel } from '..'\n\nconst useStyles = makeStyles()(theme => ({\n  root: {\n    background: alpha(theme.palette.background.paper, 0.8),\n    '&:hover': {\n      background: theme.palette.background.paper,\n    },\n    transition: theme.transitions.create(['background'], {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  trackName: {\n    margin: '0 auto',\n    width: '90%',\n    fontSize: '0.8rem',\n    pointerEvents: 'none',\n  },\n  dragHandle: {\n    cursor: 'grab',\n  },\n  dragHandleIcon: {\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    pointerEvents: 'none',\n  },\n  iconButton: {\n    padding: theme.spacing(1),\n  },\n}))\n\ntype LGV = LinearGenomeViewModel\n\ninterface Props {\n  track: BaseTrackModel\n  className?: string\n}\n\nconst TrackLabel = React.forwardRef<HTMLDivElement, Props>(function (\n  { track, className },\n  ref,\n) {\n  const { classes, cx } = useStyles()\n  const view = getContainingView(track) as LGV\n  const session = getSession(track)\n  const trackConf = track.configuration\n  const minimized = track.minimized\n  const trackId = getConf(track, 'trackId')\n  const trackName = getTrackName(trackConf, session)\n  const items = [\n    {\n      label: minimized ? 'Restore track' : 'Minimize track',\n      icon: minimized ? AddIcon : MinimizeIcon,\n      onClick: () => track.setMinimized(!minimized),\n    },\n    ...(session.getTrackActionMenuItems?.(trackConf) || []),\n    ...track.trackMenuItems(),\n  ].sort((a, b) => (b.priority || 0) - (a.priority || 0))\n\n  return (\n    <Paper ref={ref} className={cx(className, classes.root)}>\n      <span\n        draggable\n        className={classes.dragHandle}\n        onDragStart={event => {\n          const target = event.currentTarget\n          if (target.parentNode) {\n            const parent = target.parentNode as HTMLElement\n            event.dataTransfer.setDragImage(parent, 20, 20)\n            view.setDraggingTrackId(track.id)\n          }\n        }}\n        onDragEnd={() => view.setDraggingTrackId(undefined)}\n        data-testid={`dragHandle-${view.id}-${trackId}`}\n      >\n        <DragIcon className={classes.dragHandleIcon} fontSize=\"small\" />\n      </span>\n      <IconButton\n        onClick={() => view.hideTrack(trackId)}\n        className={classes.iconButton}\n        title=\"close this track\"\n      >\n        <CloseIcon fontSize=\"small\" />\n      </IconButton>\n\n      <Typography\n        variant=\"body1\"\n        component=\"span\"\n        className={classes.trackName}\n      >\n        <SanitizedHTML\n          html={[trackName, minimized ? '(minimized)' : '']\n            .filter(f => !!f)\n            .join(' ')}\n        />\n      </Typography>\n\n      <CascadingMenuButton menuItems={items} data-testid=\"track_menu_icon\">\n        <MoreVertIcon fontSize=\"small\" />\n      </CascadingMenuButton>\n    </Paper>\n  )\n})\n\nexport default observer(TrackLabel)\n","import React from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\n\n// jbrowse core\nimport { BaseTrackModel } from '@jbrowse/core/pluggableElementTypes/models'\n\n// locals\nimport { LinearGenomeViewModel } from '..'\nimport TrackLabel from './TrackLabel'\n\nconst useStyles = makeStyles()({\n  trackLabel: {\n    zIndex: 3,\n  },\n\n  trackLabelOffset: {\n    position: 'relative',\n    display: 'inline-block',\n  },\n  trackLabelOverlap: {\n    position: 'absolute',\n  },\n})\n\ntype LGV = LinearGenomeViewModel\n\nconst TrackLabelContainer = observer(function ({\n  track,\n  view,\n}: {\n  track: BaseTrackModel\n  view: LGV\n}) {\n  const { classes, cx } = useStyles()\n  const display = track.displays[0]\n  const { trackLabel, trackLabelOverlap, trackLabelOffset } = classes\n  const labelStyle =\n    view.trackLabels !== 'overlapping' || display.prefersOffset\n      ? trackLabelOffset\n      : trackLabelOverlap\n\n  return view.trackLabels !== 'hidden' ? (\n    <TrackLabel track={track} className={cx(trackLabel, labelStyle)} />\n  ) : null\n})\n\nexport default TrackLabelContainer\n","import React, { useEffect, useRef } from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\n\n// jbrowse core\nimport { BaseTrackModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport { getConf } from '@jbrowse/core/configuration'\n\n// locals\nimport { LinearGenomeViewModel } from '..'\n\nconst useStyles = makeStyles()({\n  // aligns with block boundaries. check for example the breakpoint split view\n  // demo to see if features align if wanting to change things\n  renderingComponentContainer: {\n    position: 'absolute',\n    // -1 offset because of the 1px border of the Paper\n    left: -1,\n    height: '100%',\n    width: '100%',\n  },\n\n  trackRenderingContainer: {\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    whiteSpace: 'nowrap',\n    position: 'relative',\n    background: 'none',\n    zIndex: 2,\n  },\n})\n\ntype LGV = LinearGenomeViewModel\n\nexport default observer(function TrackRenderingContainer({\n  model,\n  track,\n  onDragEnter,\n}: {\n  model: LGV\n  track: BaseTrackModel\n  onDragEnter: () => void\n}) {\n  const { classes } = useStyles()\n  const display = track.displays[0]\n  const { height, RenderingComponent, DisplayBlurb } = display\n  const trackId = getConf(track, 'trackId')\n  const ref = useRef<HTMLDivElement>(null)\n  const minimized = track.minimized\n\n  useEffect(() => {\n    if (ref.current) {\n      model.trackRefs[trackId] = ref.current\n    }\n    return () => {\n      delete model.trackRefs[trackId]\n    }\n  }, [model.trackRefs, trackId])\n\n  return (\n    <div\n      className={classes.trackRenderingContainer}\n      style={{ height: minimized ? 20 : height }}\n      onScroll={evt => display.setScrollTop(evt.currentTarget.scrollTop)}\n      onDragEnter={onDragEnter}\n      data-testid={`trackRenderingContainer-${model.id}-${trackId}`}\n    >\n      {!minimized ? (\n        <>\n          <div\n            ref={ref}\n            className={classes.renderingComponentContainer}\n            style={{ transform: `scaleX(${model.scaleFactor})` }}\n          >\n            <RenderingComponent\n              model={display}\n              onHorizontalScroll={model.horizontalScroll}\n            />\n          </div>\n\n          {DisplayBlurb ? (\n            <div\n              style={{\n                position: 'absolute',\n                left: 0,\n                top: display.height - 20,\n              }}\n            >\n              <DisplayBlurb model={display} />\n            </div>\n          ) : null}\n        </>\n      ) : null}\n    </div>\n  )\n})\n","import React, { useRef } from 'react'\nimport { Paper } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { isAlive } from 'mobx-state-tree'\nimport { ErrorBoundary } from 'react-error-boundary'\n\n// jbrowse core\nimport { BaseTrackModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport { ResizeHandle, ErrorMessage } from '@jbrowse/core/ui'\nimport { useDebouncedCallback } from '@jbrowse/core/util'\n\n// locals\nimport { LinearGenomeViewModel } from '..'\nimport TrackLabelContainer from './TrackLabelContainer'\nimport TrackRenderingContainer from './TrackRenderingContainer'\n\nconst useStyles = makeStyles()({\n  root: {\n    marginTop: 2,\n  },\n  resizeHandle: {\n    height: 3,\n    boxSizing: 'border-box',\n    position: 'relative',\n    zIndex: 2,\n  },\n  overlay: {\n    pointerEvents: 'none',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    zIndex: 3,\n  },\n})\n\ntype LGV = LinearGenomeViewModel\n\nexport default observer(function TrackContainer({\n  model,\n  track,\n}: {\n  model: LGV\n  track: BaseTrackModel\n}) {\n  const { classes } = useStyles()\n  const display = track.displays[0]\n  const { draggingTrackId } = model\n  const ref2 = useRef<HTMLDivElement>(null)\n  const dimmed = draggingTrackId !== undefined && draggingTrackId !== display.id\n  const debouncedOnDragEnter = useDebouncedCallback(() => {\n    if (isAlive(display) && dimmed) {\n      model.moveTrack(draggingTrackId, track.id)\n    }\n  }, 100)\n\n  return (\n    <Paper\n      ref={ref2}\n      className={classes.root}\n      variant=\"outlined\"\n      onClick={event => {\n        if (event.detail === 2 && !track.displays[0].featureIdUnderMouse) {\n          const left = ref2.current?.getBoundingClientRect().left || 0\n          model.zoomTo(model.bpPerPx / 2, event.clientX - left, true)\n        }\n      }}\n    >\n      <TrackLabelContainer track={track} view={model} />\n      <ErrorBoundary FallbackComponent={e => <ErrorMessage error={e.error} />}>\n        <TrackRenderingContainer\n          model={model}\n          track={track}\n          onDragEnter={debouncedOnDragEnter}\n        />\n      </ErrorBoundary>\n      <div\n        className={classes.overlay}\n        style={{\n          height: display.height,\n          background: dimmed ? 'rgba(0, 0, 0, 0.4)' : undefined,\n        }}\n        onDragEnter={debouncedOnDragEnter}\n      />\n      <ResizeHandle\n        onDrag={display.resizeHeight}\n        className={classes.resizeHandle}\n      />\n    </Paper>\n  )\n})\n","import React, { useRef, useEffect, useState } from 'react'\nimport normalizeWheel from 'normalize-wheel'\n\n// locals\nimport { LinearGenomeViewModel } from '..'\nimport { getRelativeX } from './util'\n\ntype LGV = LinearGenomeViewModel\ntype Timer = ReturnType<typeof setTimeout>\n\nexport function useSideScroll(model: LGV) {\n  const [mouseDragging, setMouseDragging] = useState(false)\n  // refs are to store these variables to avoid repeated rerenders associated\n  // with useState/setState\n  const scheduled = useRef(false)\n\n  const prevX = useRef<number>(0)\n\n  useEffect(() => {\n    let cleanup = () => {}\n\n    function globalMouseMove(event: MouseEvent) {\n      event.preventDefault()\n      const currX = event.clientX\n      const distance = currX - prevX.current\n      if (distance) {\n        // use rAF to make it so multiple event handlers aren't fired per-frame\n        // see https://calendar.perfplanet.com/2013/the-runtime-performance-checklist/\n        if (!scheduled.current) {\n          scheduled.current = true\n          window.requestAnimationFrame(() => {\n            model.horizontalScroll(-distance)\n            scheduled.current = false\n            prevX.current = event.clientX\n          })\n        }\n      }\n    }\n\n    function globalMouseUp() {\n      prevX.current = 0\n      if (mouseDragging) {\n        setMouseDragging(false)\n      }\n    }\n\n    if (mouseDragging) {\n      window.addEventListener('mousemove', globalMouseMove, true)\n      window.addEventListener('mouseup', globalMouseUp, true)\n      cleanup = () => {\n        window.removeEventListener('mousemove', globalMouseMove, true)\n        window.removeEventListener('mouseup', globalMouseUp, true)\n      }\n    }\n    return cleanup\n  }, [model, mouseDragging, prevX])\n\n  function mouseDown(event: React.MouseEvent) {\n    if (event.shiftKey) {\n      return\n    }\n    // check if clicking a draggable element or a resize handle\n    const target = event.target as HTMLElement\n    if (target.draggable || target.dataset.resizer) {\n      return\n    }\n\n    // otherwise do click and drag scroll\n    if (event.button === 0) {\n      prevX.current = event.clientX\n      setMouseDragging(true)\n    }\n  }\n\n  // this local mouseup is used in addition to the global because sometimes\n  // the global add/remove are not called in time, resulting in issue #533\n  function mouseUp(event: React.MouseEvent) {\n    event.preventDefault()\n    setMouseDragging(false)\n  }\n  return { mouseDown, mouseUp }\n}\n\ninterface AnchorPosition {\n  offsetX: number\n  clientX: number\n  clientY: number\n}\n\nexport function useRangeSelect(\n  ref: React.RefObject<HTMLDivElement>,\n  model: LGV,\n  shiftOnly?: boolean,\n) {\n  const [startX, setStartX] = useState<number>()\n  const [currentX, setCurrentX] = useState<number>()\n\n  // clientX and clientY used for anchorPosition for menu\n  // offsetX used for calculations about width of selection\n  const [anchorPosition, setAnchorPosition] = useState<AnchorPosition>()\n  const [guideX, setGuideX] = useState<number>()\n  const mouseDragging = startX !== undefined && anchorPosition === undefined\n\n  useEffect(() => {\n    function computeOffsets(offsetX: number) {\n      if (startX === undefined) {\n        return\n      }\n      const leftPx = Math.min(startX, offsetX)\n      const rightPx = Math.max(startX, offsetX)\n      return {\n        leftOffset: model.pxToBp(leftPx),\n        rightOffset: model.pxToBp(rightPx),\n      }\n    }\n\n    function globalMouseMove(event: MouseEvent) {\n      if (ref.current && mouseDragging) {\n        const relativeX = getRelativeX(event, ref.current)\n        setCurrentX(relativeX)\n      }\n    }\n\n    function globalMouseUp(event: MouseEvent) {\n      if (startX !== undefined && ref.current) {\n        const { clientX, clientY } = event\n        const offsetX = getRelativeX(event, ref.current)\n        // as stated above, store both clientX/Y and offsetX for different\n        // purposes\n        setAnchorPosition({\n          offsetX,\n          clientX,\n          clientY,\n        })\n        const args = computeOffsets(offsetX)\n        if (args) {\n          model.setOffsets(args.leftOffset, args.rightOffset)\n        }\n        setGuideX(undefined)\n      }\n    }\n    if (mouseDragging) {\n      window.addEventListener('mousemove', globalMouseMove)\n      window.addEventListener('mouseup', globalMouseUp)\n      return () => {\n        window.removeEventListener('mousemove', globalMouseMove)\n        window.removeEventListener('mouseup', globalMouseUp)\n      }\n    }\n    return () => {}\n  }, [startX, mouseDragging, anchorPosition, model, ref])\n\n  useEffect(() => {\n    if (\n      !mouseDragging &&\n      currentX !== undefined &&\n      startX !== undefined &&\n      Math.abs(currentX - startX) <= 3\n    ) {\n      handleClose()\n    }\n  }, [mouseDragging, currentX, startX])\n\n  function mouseDown(event: React.MouseEvent<HTMLDivElement>) {\n    if (shiftOnly && !event.shiftKey) {\n      return\n    }\n\n    event.preventDefault()\n    event.stopPropagation()\n    const relativeX = getRelativeX(event, ref.current)\n    setStartX(relativeX)\n    setCurrentX(relativeX)\n  }\n\n  function mouseMove(event: React.MouseEvent<HTMLDivElement>) {\n    if (shiftOnly) {\n      if (event.shiftKey) {\n        setGuideX(getRelativeX(event, ref.current))\n      } else {\n        setGuideX(undefined)\n      }\n    } else {\n      setGuideX(getRelativeX(event, ref.current))\n    }\n  }\n\n  function mouseOut() {\n    setGuideX(undefined)\n    model.setOffsets(undefined, undefined)\n  }\n\n  function handleClose() {\n    setAnchorPosition(undefined)\n    setStartX(undefined)\n    setCurrentX(undefined)\n  }\n\n  function handleMenuItemClick(_: unknown, callback: Function) {\n    callback()\n    handleClose()\n  }\n\n  const open = Boolean(anchorPosition)\n  if (startX === undefined) {\n    return {\n      open,\n      guideX,\n      mouseDown,\n      mouseMove,\n      mouseOut,\n      handleMenuItemClick,\n    }\n  } else {\n    const right = anchorPosition ? anchorPosition.offsetX : currentX || 0\n    const left = right < startX ? right : startX\n    const width = Math.abs(right - startX)\n    const leftBpOffset = model.pxToBp(left)\n    const rightBpOffset = model.pxToBp(left + width)\n    const numOfBpSelected = Math.ceil(width * model.bpPerPx)\n\n    return {\n      open,\n      rubberbandOn: true,\n      mouseDown,\n      mouseMove,\n      mouseOut,\n      handleClose,\n      handleMenuItemClick,\n      leftBpOffset,\n      rightBpOffset,\n      anchorPosition,\n      numOfBpSelected,\n      width,\n      left,\n    }\n  }\n}\n\nexport function useWheelScroll(\n  ref: React.RefObject<HTMLDivElement>,\n  model: {\n    bpPerPx: number\n    zoomTo: (arg: number, arg2?: number) => void\n    setScaleFactor: (arg: number) => void\n    horizontalScroll: (arg: number) => void\n  },\n) {\n  const delta = useRef(0)\n  const timeout = useRef<Timer>()\n  const scheduled = useRef(false)\n  useEffect(() => {\n    const curr = ref.current\n\n    // if ctrl is held down, zoom in with y-scroll\n    // else scroll horizontally with x-scroll\n    function onWheel(origEvent: WheelEvent) {\n      const event = normalizeWheel(origEvent)\n      if (origEvent.ctrlKey === true) {\n        origEvent.preventDefault()\n        delta.current += event.pixelY / 500\n        model.setScaleFactor(\n          delta.current < 0 ? 1 - delta.current : 1 / (1 + delta.current),\n        )\n        if (timeout.current) {\n          clearTimeout(timeout.current)\n        }\n        timeout.current = setTimeout(() => {\n          model.setScaleFactor(1)\n          model.zoomTo(\n            delta.current > 0\n              ? model.bpPerPx * (1 + delta.current)\n              : model.bpPerPx / (1 - delta.current),\n            origEvent.clientX - (curr?.getBoundingClientRect().left || 0),\n          )\n          delta.current = 0\n        }, 300)\n      } else {\n        // this is needed to stop the event from triggering \"back button\n        // action\" on MacOSX etc.  but is a heuristic to avoid preventing the\n        // inner-track scroll behavior\n        if (Math.abs(event.pixelX) > Math.abs(2 * event.pixelY)) {\n          origEvent.preventDefault()\n        }\n        delta.current += event.pixelX\n        if (!scheduled.current) {\n          // use rAF to make it so multiple event handlers aren't fired per-frame\n          // see https://calendar.perfplanet.com/2013/the-runtime-performance-checklist/\n          scheduled.current = true\n          window.requestAnimationFrame(() => {\n            model.horizontalScroll(delta.current)\n            delta.current = 0\n            scheduled.current = false\n          })\n        }\n      }\n    }\n    if (curr) {\n      curr.addEventListener('wheel', onWheel)\n      return () => {\n        curr.removeEventListener('wheel', onWheel)\n      }\n    }\n    return () => {}\n  }, [model, ref])\n}\n","import React from 'react'\nimport { Tooltip } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { stringify } from '@jbrowse/core/util'\n\n// locals\nimport { LinearGenomeViewModel } from '..'\n\ntype LGV = LinearGenomeViewModel\n\nconst useStyles = makeStyles()({\n  guide: {\n    pointerEvents: 'none',\n    height: '100%',\n    width: 1,\n    position: 'absolute',\n    zIndex: 10,\n  },\n})\n\nfunction VerticalGuide({ model, coordX }: { model: LGV; coordX: number }) {\n  const { classes } = useStyles()\n  return (\n    <Tooltip open placement=\"top\" title={stringify(model.pxToBp(coordX))} arrow>\n      <div\n        className={classes.guide}\n        style={{\n          left: coordX,\n          background: 'red',\n        }}\n      />\n    </Tooltip>\n  )\n}\n\nexport default observer(VerticalGuide)\n","import React, { useRef } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\nimport { Menu } from '@jbrowse/core/ui'\n\n// locals\nimport VerticalGuide from './VerticalGuide'\nimport RubberbandSpan from './RubberbandSpan'\nimport { useRangeSelect } from './hooks'\nimport { LinearGenomeViewModel } from '..'\n\ntype LGV = LinearGenomeViewModel\n\nconst useStyles = makeStyles()({\n  rubberbandControl: {\n    cursor: 'crosshair',\n    width: '100%',\n    minHeight: 8,\n  },\n})\n\nfunction Rubberband({\n  model,\n  ControlComponent = <div />,\n}: {\n  model: LGV\n  ControlComponent?: React.ReactElement\n}) {\n  const ref = useRef<HTMLDivElement>(null)\n  const { classes } = useStyles()\n\n  const {\n    guideX,\n    rubberbandOn,\n    leftBpOffset,\n    rightBpOffset,\n    numOfBpSelected,\n    width,\n    left,\n    anchorPosition,\n    handleMenuItemClick,\n    open,\n    handleClose,\n    mouseMove,\n    mouseDown,\n    mouseOut,\n  } = useRangeSelect(ref, model)\n\n  return (\n    <>\n      {guideX !== undefined ? (\n        <VerticalGuide model={model} coordX={guideX} />\n      ) : rubberbandOn ? (\n        <RubberbandSpan\n          leftBpOffset={leftBpOffset}\n          rightBpOffset={rightBpOffset}\n          numOfBpSelected={numOfBpSelected}\n          width={width}\n          left={left}\n        />\n      ) : null}\n      {anchorPosition ? (\n        <Menu\n          anchorReference=\"anchorPosition\"\n          anchorPosition={{\n            left: anchorPosition.clientX,\n            top: anchorPosition.clientY,\n          }}\n          onMenuItemClick={handleMenuItemClick}\n          open={open}\n          onClose={handleClose}\n          menuItems={model.rubberBandMenuItems()}\n        />\n      ) : null}\n      <div\n        data-testid=\"rubberband_controls\"\n        className={classes.rubberbandControl}\n        ref={ref}\n        onMouseDown={mouseDown}\n        onMouseMove={mouseMove}\n        onMouseOut={mouseOut}\n      >\n        {ControlComponent}\n      </div>\n    </>\n  )\n}\n\nexport default observer(Rubberband)\n","import { Paper, Typography } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport {\n  ContentBlock,\n  ElidedBlock,\n  InterRegionPaddingBlock,\n} from '@jbrowse/core/util/blockTypes'\nimport { observer } from 'mobx-react'\nimport React from 'react'\nimport { LinearGenomeViewModel } from '..'\nimport {\n  ContentBlock as ContentBlockComponent,\n  ElidedBlock as ElidedBlockComponent,\n  InterRegionPaddingBlock as InterRegionPaddingBlockComponent,\n} from '../../BaseLinearDisplay/components/Block'\nimport { makeTicks } from '../util'\nimport { getTickDisplayStr } from '@jbrowse/core/util'\n\ntype LGV = LinearGenomeViewModel\n\nconst useStyles = makeStyles()(theme => ({\n  scalebarContainer: {\n    overflow: 'hidden',\n    position: 'relative',\n  },\n  scalebarZoomContainer: {\n    position: 'relative',\n    zIndex: 1,\n  },\n  scalebar: {\n    position: 'absolute',\n    display: 'flex',\n    pointerEvents: 'none',\n  },\n  majorTickLabel: {\n    fontSize: '11px',\n    zIndex: 1,\n    background: theme.palette.background.paper,\n    lineHeight: 'normal',\n    pointerEvents: 'none',\n  },\n  tick: {\n    position: 'absolute',\n    width: 0,\n    display: 'flex',\n    justifyContent: 'center',\n    pointerEvents: 'none',\n  },\n  refLabel: {\n    fontSize: '11px',\n    position: 'absolute',\n    left: '2px',\n    top: '-1px',\n    fontWeight: 'bold',\n    lineHeight: 'normal',\n    zIndex: 1,\n    pointerEvents: 'none',\n    background: theme.palette.background.paper,\n  },\n}))\n\nconst RenderedRefNameLabels = observer(({ model }: { model: LGV }) => {\n  const { classes } = useStyles()\n\n  // find the block that needs pinning to the left side for context\n  let lastLeftBlock = 0\n  model.staticBlocks.forEach((block, i) => {\n    if (block.offsetPx - model.offsetPx < 0) {\n      lastLeftBlock = i\n    }\n  })\n  return (\n    <>\n      {model.staticBlocks.map((block, index) => {\n        return block instanceof ContentBlock &&\n          (block.isLeftEndOfDisplayedRegion || index === lastLeftBlock) ? (\n          <Typography\n            key={`refLabel-${block.key}-${index}`}\n            style={{\n              left:\n                index === lastLeftBlock\n                  ? Math.max(0, -model.offsetPx)\n                  : block.offsetPx - model.offsetPx - 1,\n              paddingLeft: index === lastLeftBlock ? 0 : 1,\n            }}\n            className={classes.refLabel}\n            data-testid={`refLabel-${block.refName}`}\n          >\n            {block.refName}\n          </Typography>\n        ) : null\n      })}\n    </>\n  )\n})\n\nconst RenderedScalebarLabels = observer(({ model }: { model: LGV }) => {\n  const { classes } = useStyles()\n  const { bpPerPx, staticBlocks } = model\n\n  return (\n    <>\n      {staticBlocks.map((block, index) => {\n        const { reversed, start, end, key, widthPx } = block\n        if (block instanceof ContentBlock) {\n          const ticks = makeTicks(start, end, bpPerPx, true, false)\n\n          return (\n            <ContentBlockComponent key={`${key}-${index}`} block={block}>\n              {ticks.map(tick => {\n                if (tick.type === 'major') {\n                  const x =\n                    (reversed ? end - tick.base : tick.base - start) / bpPerPx\n                  const baseNumber = tick.base + 1\n                  return (\n                    <div\n                      key={tick.base}\n                      className={classes.tick}\n                      style={{ left: x }}\n                    >\n                      {baseNumber ? (\n                        <Typography className={classes.majorTickLabel}>\n                          {getTickDisplayStr(baseNumber, bpPerPx)}\n                        </Typography>\n                      ) : null}\n                    </div>\n                  )\n                }\n                return null\n              })}\n            </ContentBlockComponent>\n          )\n        }\n        if (block instanceof ElidedBlock) {\n          return <ElidedBlockComponent key={key} width={widthPx} />\n        }\n        if (block instanceof InterRegionPaddingBlock) {\n          return (\n            <InterRegionPaddingBlockComponent\n              key={key}\n              width={widthPx}\n              style={{ background: 'none' }}\n              boundary={block.variant === 'boundary'}\n            />\n          )\n        }\n        return null\n      })}\n    </>\n  )\n})\n\ninterface ScalebarProps {\n  model: LGV\n  style?: React.CSSProperties\n  className?: string\n}\n\nconst Scalebar = React.forwardRef<HTMLDivElement, ScalebarProps>(\n  ({ model, style, className, ...other }, ref) => {\n    const { classes, cx } = useStyles()\n\n    const offsetLeft = model.staticBlocks.offsetPx - model.offsetPx\n    return (\n      <Paper\n        data-resizer=\"true\" // used to avoid click-and-drag scrolls on trackscontainer\n        className={cx(classes.scalebarContainer, className)}\n        variant=\"outlined\"\n        ref={ref}\n        style={style}\n        {...other}\n      >\n        <div\n          className={classes.scalebarZoomContainer}\n          style={{\n            transform:\n              model.scaleFactor !== 1\n                ? `scaleX(${model.scaleFactor})`\n                : undefined,\n          }}\n        >\n          <div\n            className={classes.scalebar}\n            style={{\n              left: offsetLeft - 1,\n              width: model.staticBlocks.totalWidthPx,\n              ...style,\n            }}\n          >\n            <RenderedScalebarLabels model={model} />\n          </div>\n        </div>\n        <RenderedRefNameLabels model={model} />\n      </Paper>\n    )\n  },\n)\n\nexport default observer(Scalebar)\n","import React from 'react'\nimport {\n  ContentBlock,\n  ElidedBlock,\n  InterRegionPaddingBlock,\n} from '@jbrowse/core/util/blockTypes'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { LinearGenomeViewModel } from '..'\nimport {\n  ContentBlock as ContentBlockComponent,\n  ElidedBlock as ElidedBlockComponent,\n  InterRegionPaddingBlock as InterRegionPaddingBlockComponent,\n} from '../../BaseLinearDisplay/components/Block'\n\nimport { makeTicks } from '../util'\n\ntype LGV = LinearGenomeViewModel\n\nconst useStyles = makeStyles()(theme => ({\n  verticalGuidesZoomContainer: {\n    position: 'absolute',\n    height: '100%',\n    width: '100%',\n    zIndex: 1,\n    pointerEvents: 'none',\n  },\n  verticalGuidesContainer: {\n    position: 'absolute',\n    height: '100%',\n    zIndex: 1,\n    pointerEvents: 'none',\n    display: 'flex',\n  },\n  tick: {\n    position: 'absolute',\n    height: '100%',\n    width: 1,\n  },\n  majorTick: {\n    background: theme.palette.action.disabled,\n  },\n  minorTick: {\n    background: theme.palette.divider,\n  },\n}))\nconst RenderedVerticalGuides = observer(({ model }: { model: LGV }) => {\n  const { classes, cx } = useStyles()\n  return (\n    <>\n      {model.staticBlocks.map((block, index) => {\n        if (block instanceof ContentBlock) {\n          const ticks = makeTicks(block.start, block.end, model.bpPerPx)\n          return (\n            <ContentBlockComponent key={`${block.key}-${index}`} block={block}>\n              {ticks.map(tick => {\n                const x =\n                  (block.reversed\n                    ? block.end - tick.base\n                    : tick.base - block.start) / model.bpPerPx\n                return (\n                  <div\n                    key={tick.base}\n                    className={cx(\n                      classes.tick,\n                      tick.type === 'major' || tick.type === 'labeledMajor'\n                        ? classes.majorTick\n                        : classes.minorTick,\n                    )}\n                    style={{ left: x }}\n                  />\n                )\n              })}\n            </ContentBlockComponent>\n          )\n        }\n        if (block instanceof ElidedBlock) {\n          return <ElidedBlockComponent key={block.key} width={block.widthPx} />\n        }\n        if (block instanceof InterRegionPaddingBlock) {\n          return (\n            <InterRegionPaddingBlockComponent\n              key={block.key}\n              width={block.widthPx}\n              boundary={block.variant === 'boundary'}\n            />\n          )\n        }\n        return null\n      })}\n    </>\n  )\n})\nfunction VerticalGuides({ model }: { model: LGV }) {\n  const { classes } = useStyles()\n  // find the block that needs pinning to the left side for context\n  const offsetLeft = model.staticBlocks.offsetPx - model.offsetPx\n  return (\n    <div\n      className={classes.verticalGuidesZoomContainer}\n      style={{\n        transform:\n          model.scaleFactor !== 1 ? `scaleX(${model.scaleFactor})` : undefined,\n      }}\n    >\n      <div\n        className={classes.verticalGuidesContainer}\n        style={{\n          left: offsetLeft,\n          width: model.staticBlocks.totalWidthPx,\n        }}\n      >\n        <RenderedVerticalGuides model={model} />\n      </div>\n    </div>\n  )\n}\n\nexport default observer(VerticalGuides)\n","import React, { useRef } from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { LinearGenomeViewModel } from '..'\n\ntype LGV = LinearGenomeViewModel\n\nconst useStyles = makeStyles()(theme => ({\n  centerLineContainer: {\n    background: 'transparent',\n    height: '100%',\n    zIndex: 5, // above the track but under menu\n    position: 'absolute',\n    border: `1px ${theme.palette.action.active} dashed`,\n    borderTop: 'none',\n    borderBottom: 'none',\n    pointerEvents: 'none',\n  },\n  centerLineText: {\n    position: 'absolute',\n    pointerEvents: 'none',\n    whiteSpace: 'nowrap',\n    fontWeight: 'bold',\n  },\n}))\n\nfunction CenterLine({ model }: { model: LGV }) {\n  const { bpPerPx, centerLineInfo, trackHeights, tracks, width } = model\n  const ref = useRef<HTMLDivElement>(null)\n  const { classes } = useStyles()\n  const startingPosition = width / 2\n\n  return tracks.length ? (\n    <div\n      data-testid=\"centerline_container\"\n      className={classes.centerLineContainer}\n      role=\"presentation\"\n      ref={ref}\n      style={{\n        left: `${startingPosition}px`,\n        width: Math.max(1 / bpPerPx, 1),\n      }}\n    >\n      {centerLineInfo && (\n        <div\n          // text that indicates what bp is center, positioned\n          // at the bottom right of the center line\n          data-testid=\"centerline_text\"\n          className={classes.centerLineText}\n          role=\"presentation\"\n          style={{\n            left: Math.max(1 / bpPerPx, 1) + 5,\n            top: trackHeights,\n          }}\n        >\n          {/* change bp to refName */}\n          {centerLineInfo.refName}:{' '}\n          {Math.max(Math.round(centerLineInfo.offset) + 1, 0)}\n        </div>\n      )}\n    </div>\n  ) : null\n}\n\nexport default observer(CenterLine)\n","import React, { useRef } from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { Menu } from '@jbrowse/core/ui'\n\n// local utils\nimport { LinearGenomeViewModel, SCALE_BAR_HEIGHT } from '..'\nimport { useSideScroll, useRangeSelect, useWheelScroll } from './hooks'\n\n// local components\nimport Rubberband from './Rubberband'\nimport Scalebar from './Scalebar'\nimport Gridlines from './Gridlines'\nimport CenterLine from './CenterLine'\nimport VerticalGuide from './VerticalGuide'\nimport RubberbandSpan from './RubberbandSpan'\nimport { getEnv } from '@jbrowse/core/util'\n\nconst useStyles = makeStyles()({\n  tracksContainer: {\n    position: 'relative',\n    overflow: 'hidden',\n  },\n})\n\ntype LGV = LinearGenomeViewModel\n\nexport default observer(function TracksContainer({\n  children,\n  model,\n}: {\n  children: React.ReactNode\n  model: LGV\n}) {\n  const { classes } = useStyles()\n  const { pluginManager } = getEnv(model)\n  const { mouseDown: mouseDown1, mouseUp } = useSideScroll(model)\n  const ref = useRef<HTMLDivElement>(null)\n  const {\n    guideX,\n    rubberbandOn,\n    leftBpOffset,\n    rightBpOffset,\n    numOfBpSelected,\n    width,\n    left,\n    anchorPosition,\n    handleMenuItemClick,\n    open,\n    handleClose,\n    mouseMove,\n    mouseDown: mouseDown2,\n  } = useRangeSelect(ref, model, true)\n  useWheelScroll(ref, model)\n\n  const additional = pluginManager.evaluateExtensionPoint(\n    'LinearGenomeView-TracksContainerComponent',\n    undefined,\n    { model },\n  ) as React.ReactNode\n\n  return (\n    <div\n      ref={ref}\n      data-testid=\"trackContainer\"\n      className={classes.tracksContainer}\n      onMouseDown={event => {\n        mouseDown1(event)\n        mouseDown2(event)\n      }}\n      onMouseMove={mouseMove}\n      onMouseUp={mouseUp}\n    >\n      {model.showGridlines ? <Gridlines model={model} /> : null}\n      {model.showCenterLine ? <CenterLine model={model} /> : null}\n      {guideX !== undefined ? (\n        <VerticalGuide model={model} coordX={guideX} />\n      ) : rubberbandOn ? (\n        <RubberbandSpan\n          leftBpOffset={leftBpOffset}\n          rightBpOffset={rightBpOffset}\n          numOfBpSelected={numOfBpSelected}\n          width={width}\n          left={left}\n        />\n      ) : null}\n      {anchorPosition ? (\n        <Menu\n          anchorReference=\"anchorPosition\"\n          anchorPosition={{\n            left: anchorPosition.clientX,\n            top: anchorPosition.clientY,\n          }}\n          onMenuItemClick={handleMenuItemClick}\n          open={open}\n          onClose={handleClose}\n          menuItems={model.rubberBandMenuItems()}\n        />\n      ) : null}\n\n      <Rubberband\n        model={model}\n        ControlComponent={\n          <Scalebar\n            model={model}\n            style={{ height: SCALE_BAR_HEIGHT, boxSizing: 'border-box' }}\n          />\n        }\n      />\n      {additional}\n      {children}\n    </div>\n  )\n})\n","import React, { lazy } from 'react'\nimport { Button, Paper, Typography } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { LoadingEllipses } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\n\n// icons\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\n\n// locals\nimport { LinearGenomeViewModel } from '..'\nimport TrackContainer from './TrackContainer'\nimport TracksContainer from './TracksContainer'\n\nconst ImportForm = lazy(() => import('./ImportForm'))\n\ntype LGV = LinearGenomeViewModel\n\nconst useStyles = makeStyles()(theme => ({\n  note: {\n    textAlign: 'center',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n}))\n\nconst LinearGenomeView = observer(({ model }: { model: LGV }) => {\n  const { tracks, error, initialized, hasDisplayedRegions } = model\n  const { classes } = useStyles()\n\n  if (!initialized && !error) {\n    return <LoadingEllipses variant=\"h6\" />\n  }\n  if (!hasDisplayedRegions || error) {\n    return <ImportForm model={model} />\n  }\n\n  const MiniControlsComponent = model.MiniControlsComponent()\n  const HeaderComponent = model.HeaderComponent()\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <HeaderComponent model={model} />\n      <MiniControlsComponent model={model} />\n      <TracksContainer model={model}>\n        {!tracks.length ? (\n          <Paper variant=\"outlined\" className={classes.note}>\n            {!model.hideNoTracksActive ? (\n              <>\n                <Typography>No tracks active.</Typography>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={model.activateTrackSelector}\n                  style={{ zIndex: 1000 }}\n                  startIcon={<TrackSelectorIcon />}\n                >\n                  Open track selector\n                </Button>\n              </>\n            ) : (\n              <div style={{ height: '48px' }}></div>\n            )}\n          </Paper>\n        ) : (\n          tracks.map(track => (\n            <TrackContainer key={track.id} model={model} track={track} />\n          ))\n        )}\n      </TracksContainer>\n    </div>\n  )\n})\n\nexport default LinearGenomeView\n","import React, { useRef, useEffect, useState } from 'react'\nimport { Tooltip } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { getSession, stringify } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\nimport { Base1DViewModel } from '@jbrowse/core/util/Base1DViewModel'\n\n// locals\nimport { LinearGenomeViewModel } from '..'\nimport RubberbandSpan from './RubberbandSpan'\nimport { getRelativeX } from './util'\n\ntype LGV = LinearGenomeViewModel\n\nconst useStyles = makeStyles()({\n  rubberbandControl: {\n    cursor: 'crosshair',\n    width: '100%',\n    minHeight: 8,\n  },\n  guide: {\n    pointerEvents: 'none',\n    height: '100%',\n    width: 1,\n    position: 'absolute',\n    zIndex: 10,\n  },\n})\n\nconst HoverTooltip = observer(function ({\n  model,\n  open,\n  guideX,\n  overview,\n}: {\n  model: LGV\n  open: boolean\n  guideX: number\n  overview: Base1DViewModel\n}) {\n  const { classes } = useStyles()\n  const { cytobandOffset } = model\n  const { assemblyManager } = getSession(model)\n\n  const px = overview.pxToBp(guideX - cytobandOffset)\n  const assembly = assemblyManager.get(px.assemblyName)\n  const cytoband = assembly?.cytobands?.find(\n    f =>\n      px.coord > f.get('start') &&\n      px.coord < f.get('end') &&\n      px.refName === assembly.getCanonicalRefName(f.get('refName')),\n  )\n\n  return (\n    <Tooltip\n      open={open}\n      placement=\"top\"\n      title={[stringify(px), cytoband?.get('name')].join(' ')}\n      arrow\n    >\n      <div className={classes.guide} style={{ left: guideX }} />\n    </Tooltip>\n  )\n})\n\nexport default observer(function OverviewRubberband({\n  model,\n  overview,\n  ControlComponent = <div />,\n}: {\n  model: LGV\n  overview: Base1DViewModel\n  ControlComponent?: React.ReactElement\n}) {\n  const { cytobandOffset } = model\n  const [startX, setStartX] = useState<number>()\n  const [currentX, setCurrentX] = useState<number>()\n  const [guideX, setGuideX] = useState<number>()\n  const controlsRef = useRef<HTMLDivElement>(null)\n  const { classes } = useStyles()\n  const mouseDragging = startX !== undefined\n\n  useEffect(() => {\n    function globalMouseMove(event: MouseEvent) {\n      const ref = controlsRef.current\n      if (ref && mouseDragging) {\n        setCurrentX(getRelativeX(event, ref))\n      }\n    }\n\n    function globalMouseUp() {\n      // click and drag\n      if (startX !== undefined && currentX !== undefined) {\n        if (Math.abs(currentX - startX) > 3) {\n          const left = Math.min(startX, currentX)\n          const right = Math.max(startX, currentX)\n          model.moveTo(\n            overview.pxToBp(left - cytobandOffset),\n            overview.pxToBp(right - cytobandOffset),\n          )\n        }\n      }\n\n      // just a click\n      if (startX !== undefined && currentX === undefined) {\n        const click = overview.pxToBp(startX - cytobandOffset)\n        if (!click.refName) {\n          getSession(model).notify('unknown position clicked')\n          console.error('unknown position clicked', click)\n        } else {\n          model.centerAt(Math.round(click.coord), click.refName, click.index)\n        }\n      }\n      setStartX(undefined)\n      setCurrentX(undefined)\n\n      if (startX !== undefined) {\n        setGuideX(undefined)\n      }\n    }\n\n    function globalKeyDown(event: KeyboardEvent) {\n      if (event.key === 'Escape') {\n        setStartX(undefined)\n        setCurrentX(undefined)\n      }\n    }\n\n    if (mouseDragging) {\n      window.addEventListener('mousemove', globalMouseMove, true)\n      window.addEventListener('mouseup', globalMouseUp, true)\n      window.addEventListener('keydown', globalKeyDown, true)\n      return () => {\n        window.removeEventListener('mousemove', globalMouseMove, true)\n        window.removeEventListener('mouseup', globalMouseUp, true)\n        window.removeEventListener('keydown', globalKeyDown, true)\n      }\n    }\n    return () => {}\n  }, [mouseDragging, currentX, startX, model, overview, cytobandOffset])\n\n  function mouseDown(event: React.MouseEvent<HTMLDivElement>) {\n    event.preventDefault()\n    event.stopPropagation()\n    setStartX(getRelativeX(event, controlsRef.current))\n  }\n\n  function mouseMove(event: React.MouseEvent<HTMLDivElement>) {\n    setGuideX(getRelativeX(event, controlsRef.current))\n  }\n\n  function mouseOut() {\n    setGuideX(undefined)\n  }\n\n  if (startX === undefined) {\n    return (\n      <div style={{ position: 'relative' }}>\n        {guideX !== undefined ? (\n          <HoverTooltip\n            model={model}\n            open={!mouseDragging}\n            overview={overview}\n            guideX={guideX}\n          />\n        ) : null}\n        <div\n          className={classes.rubberbandControl}\n          ref={controlsRef}\n          onMouseDown={mouseDown}\n          onMouseOut={mouseOut}\n          onMouseMove={mouseMove}\n        >\n          {ControlComponent}\n        </div>\n      </div>\n    )\n  }\n\n  let left = startX || 0\n  let width = 0\n  if (startX !== undefined && currentX !== undefined) {\n    left = currentX < startX ? currentX : startX\n    width = currentX - startX\n  }\n  // calculate the start and end bp of drag\n  let leftBpOffset\n  let rightBpOffset\n  if (startX) {\n    leftBpOffset = overview.pxToBp(startX - cytobandOffset)\n    rightBpOffset = overview.pxToBp(startX + width - cytobandOffset)\n    if (currentX !== undefined && currentX < startX) {\n      ;[leftBpOffset, rightBpOffset] = [rightBpOffset, leftBpOffset]\n    }\n  }\n\n  return (\n    <div style={{ position: 'relative' }}>\n      {leftBpOffset && rightBpOffset ? (\n        <RubberbandSpan\n          leftBpOffset={leftBpOffset}\n          rightBpOffset={rightBpOffset}\n          width={Math.abs(width)}\n          left={left}\n        />\n      ) : null}\n      <div\n        data-testid=\"rubberband_controls\"\n        className={classes.rubberbandControl}\n        ref={controlsRef}\n        onMouseDown={mouseDown}\n        onMouseOut={mouseOut}\n        onMouseMove={mouseMove}\n      >\n        {ControlComponent}\n      </div>\n    </div>\n  )\n})\n","import React from 'react'\nimport { Typography, useTheme, alpha } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\n\n// core\nimport Base1DView, { Base1DViewModel } from '@jbrowse/core/util/Base1DViewModel'\nimport { getSession, getTickDisplayStr } from '@jbrowse/core/util'\nimport { ContentBlock } from '@jbrowse/core/util/blockTypes'\n\n// locals\nimport {\n  LinearGenomeViewModel,\n  HEADER_BAR_HEIGHT,\n  HEADER_OVERVIEW_HEIGHT,\n} from '..'\nimport { chooseGridPitch } from '../util'\nimport OverviewRubberband from './OverviewRubberband'\nimport Cytobands from './Cytobands'\nimport { getCytobands } from './util'\n\nconst wholeSeqSpacer = 2\n\nconst useStyles = makeStyles()(theme => ({\n  scalebar: {\n    height: HEADER_OVERVIEW_HEIGHT,\n  },\n  scalebarBorder: {\n    border: '1px solid',\n  },\n  scalebarContig: {\n    backgroundColor: theme.palette.background.default,\n    position: 'absolute',\n    top: 0,\n    height: HEADER_OVERVIEW_HEIGHT,\n    overflow: 'hidden',\n  },\n  scalebarContigForward: {\n    backgroundImage: `url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 15 9'%3E%3Cpath d='M-.1 0L6 4.5L-.1 9' fill='none' stroke='${theme.palette.divider}'/%3E%3C/svg%3E\")`,\n    backgroundRepeat: 'repeat',\n  },\n  scalebarContigReverse: {\n    backgroundImage: `url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 15 9'%3E%3Cpath d='M6 0L0 4.5L6 9' fill='none' stroke='${theme.palette.divider}'/%3E%3C/svg%3E\")`,\n    backgroundRepeat: 'repeat',\n  },\n\n  scalebarRefName: {\n    position: 'absolute',\n    fontWeight: 'bold',\n    pointerEvents: 'none',\n    zIndex: 100,\n  },\n  scalebarLabel: {\n    height: HEADER_OVERVIEW_HEIGHT,\n    position: 'absolute',\n    display: 'flex',\n    justifyContent: 'center',\n    pointerEvents: 'none',\n  },\n  scalebarVisibleRegion: {\n    position: 'absolute',\n    height: HEADER_OVERVIEW_HEIGHT,\n    pointerEvents: 'none',\n    zIndex: 100,\n    border: '1px solid',\n  },\n  overview: {\n    height: HEADER_BAR_HEIGHT,\n    position: 'relative',\n  },\n  overviewSvg: {\n    pointerEvents: 'none',\n    width: '100%',\n    position: 'absolute',\n  },\n}))\n\nconst Polygon = observer(function ({\n  model,\n  overview,\n  useOffset = true,\n}: {\n  model: LGV\n  overview: Base1DViewModel\n  useOffset?: boolean\n}) {\n  const theme = useTheme()\n  const multiplier = Number(useOffset)\n  const { interRegionPaddingWidth, offsetPx, dynamicBlocks, cytobandOffset } =\n    model\n  const { contentBlocks, totalWidthPxWithoutBorders } = dynamicBlocks\n\n  const { tertiary, primary } = theme.palette\n  const polygonColor = tertiary ? tertiary.light : primary.light\n\n  // catches possible null from at's below\n  if (!contentBlocks.length) {\n    return null\n  }\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const first = contentBlocks.at(0)!\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const last = contentBlocks.at(-1)!\n  const topLeft =\n    (overview.bpToPx({\n      ...first,\n      coord: first.reversed ? first.end : first.start,\n    }) || 0) +\n    cytobandOffset * multiplier\n  const topRight =\n    (overview.bpToPx({\n      ...last,\n      coord: last.reversed ? last.start : last.end,\n    }) || 0) +\n    cytobandOffset * multiplier\n\n  const startPx = Math.max(0, -offsetPx)\n  const endPx =\n    startPx +\n    totalWidthPxWithoutBorders +\n    (contentBlocks.length * interRegionPaddingWidth) / 2\n\n  const points = [\n    [startPx, HEADER_BAR_HEIGHT],\n    [endPx, HEADER_BAR_HEIGHT],\n    [topRight, 0],\n    [topLeft, 0],\n  ]\n\n  return (\n    <polygon\n      points={points.toString()}\n      fill={alpha(polygonColor, 0.3)}\n      stroke={alpha(polygonColor, 0.8)}\n    />\n  )\n})\n\ntype LGV = LinearGenomeViewModel\n\nconst OverviewBox = observer(function ({\n  scale,\n  model,\n  block,\n  overview,\n}: {\n  scale: number\n  model: LGV\n  block: ContentBlock\n  overview: Base1DViewModel\n}) {\n  const { classes, cx } = useStyles()\n  const theme = useTheme()\n  const { cytobandOffset, showCytobands } = model\n  const { start, end, reversed, refName, assemblyName } = block\n  const { majorPitch } = chooseGridPitch(scale, 120, 15)\n  const { assemblyManager } = getSession(model)\n  const assembly = assemblyManager.get(assemblyName)\n  const refNameColor = assembly?.getRefNameColor(refName)\n\n  const tickLabels = []\n  for (let i = 0; i < Math.floor((end - start) / majorPitch); i++) {\n    const offsetLabel = (i + 1) * majorPitch\n    tickLabels.push(reversed ? end - offsetLabel : start + offsetLabel)\n  }\n\n  const canDisplayCytobands =\n    showCytobands && getCytobands(assembly, block.refName).length\n\n  return (\n    <div>\n      {/* name of sequence */}\n      <Typography\n        style={{\n          left: block.offsetPx + 3,\n          color: canDisplayCytobands\n            ? theme.palette.text.primary\n            : refNameColor,\n        }}\n        className={classes.scalebarRefName}\n      >\n        {refName}\n      </Typography>\n      <div\n        className={cx(\n          classes.scalebarContig,\n          canDisplayCytobands\n            ? undefined\n            : reversed\n            ? classes.scalebarContigReverse\n            : classes.scalebarContigForward,\n          !canDisplayCytobands ? classes.scalebarBorder : undefined,\n        )}\n        style={{\n          left: block.offsetPx + cytobandOffset,\n          width: block.widthPx,\n          borderColor: refNameColor,\n        }}\n      >\n        {!canDisplayCytobands\n          ? tickLabels.map((tickLabel, labelIdx) => (\n              <Typography\n                key={`${JSON.stringify(block)}-${tickLabel}-${labelIdx}`}\n                className={classes.scalebarLabel}\n                variant=\"body2\"\n                style={{\n                  left: ((labelIdx + 1) * majorPitch) / scale,\n                  pointerEvents: 'none',\n                  color: refNameColor,\n                }}\n              >\n                {getTickDisplayStr(tickLabel, overview.bpPerPx)}\n              </Typography>\n            ))\n          : null}\n\n        {canDisplayCytobands ? (\n          <svg style={{ width: '100%' }}>\n            <Cytobands overview={overview} assembly={assembly} block={block} />\n          </svg>\n        ) : null}\n      </div>\n    </div>\n  )\n})\n\nconst Scalebar = observer(function ({\n  model,\n  scale,\n  overview,\n}: {\n  model: LGV\n  overview: Base1DViewModel\n  scale: number\n}) {\n  const { classes } = useStyles()\n  const theme = useTheme()\n  const { dynamicBlocks, showCytobands, cytobandOffset } = model\n  const visibleRegions = dynamicBlocks.contentBlocks\n  const overviewVisibleRegions = overview.dynamicBlocks\n\n  const { tertiary, primary } = theme.palette\n  const scalebarColor = tertiary ? tertiary.light : primary.light\n  // catches possible null from at's below\n  if (!visibleRegions.length) {\n    return null\n  }\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const first = visibleRegions.at(0)!\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const last = visibleRegions.at(-1)!\n\n  const firstOverviewPx =\n    overview.bpToPx({\n      ...first,\n      coord: first.reversed ? first.end : first.start,\n    }) || 0\n\n  const lastOverviewPx =\n    overview.bpToPx({\n      ...last,\n      coord: last.reversed ? last.start : last.end,\n    }) || 0\n\n  const color = showCytobands ? '#f00' : scalebarColor\n  const transparency = showCytobands ? 0.1 : 0.3\n\n  return (\n    <div className={classes.scalebar}>\n      <div\n        className={classes.scalebarVisibleRegion}\n        style={{\n          width: lastOverviewPx - firstOverviewPx,\n          left: firstOverviewPx + cytobandOffset,\n          background: alpha(color, transparency),\n          borderColor: color,\n        }}\n      />\n      {/* this is the entire scale bar */}\n      {overviewVisibleRegions.map((block, idx) => {\n        return !(block instanceof ContentBlock) ? (\n          <div\n            key={`${JSON.stringify(block)}-${idx}`}\n            className={classes.scalebarContig}\n            style={{\n              width: block.widthPx,\n              left: block.offsetPx,\n              backgroundColor: '#999',\n              backgroundImage:\n                'repeating-linear-gradient(90deg, transparent, transparent 1px, rgba(255,255,255,.5) 1px, rgba(255,255,255,.5) 3px)',\n            }}\n          />\n        ) : (\n          <OverviewBox\n            scale={scale}\n            block={block}\n            model={model}\n            overview={overview}\n            key={`${JSON.stringify(block)}-${idx}`}\n          />\n        )\n      })}\n    </div>\n  )\n})\n\nexport default observer(function OverviewScalebar({\n  model,\n  children,\n}: {\n  model: LGV\n  children: React.ReactNode\n}) {\n  const { classes } = useStyles()\n  const { totalBp, width, cytobandOffset, displayedRegions } = model\n\n  const overview = Base1DView.create({\n    displayedRegions: JSON.parse(JSON.stringify(displayedRegions)),\n    interRegionPaddingWidth: 0,\n    minimumBlockWidth: model.minimumBlockWidth,\n  })\n\n  const modWidth = width - cytobandOffset\n  overview.setVolatileWidth(modWidth)\n  overview.showAllRegions()\n\n  const scale =\n    totalBp / (modWidth - (displayedRegions.length - 1) * wholeSeqSpacer)\n\n  return (\n    <div>\n      <OverviewRubberband\n        model={model}\n        overview={overview}\n        ControlComponent={\n          <Scalebar model={model} overview={overview} scale={scale} />\n        }\n      />\n      <div className={classes.overview}>\n        <svg height={HEADER_BAR_HEIGHT} className={classes.overviewSvg}>\n          <Polygon model={model} overview={overview} />\n        </svg>\n        {children}\n      </div>\n    </div>\n  )\n})\n\nexport { Polygon }\n\nexport { default as Cytobands } from './Cytobands'\n","import BaseResult from '@jbrowse/core/TextSearch/BaseResults'\n\nexport interface Option {\n  group?: string\n  result: BaseResult\n}\n\n// filter so don't need re-filtering\nfunction filterOptions(options: Option[], searchQuery: string) {\n  return options.filter(\n    ({ result }) =>\n      result.getLabel().toLowerCase().includes(searchQuery) ||\n      result.matchedObject,\n  )\n}\n\n// the logic of this method is to only apply a filter to RefSequenceResults\n// because they do not have a matchedObject. the trix search results already\nexport function getFiltered(opts: Option[], inputValue: string) {\n  const filtered = filterOptions(opts, inputValue.toLocaleLowerCase())\n  return [\n    ...filtered.slice(0, 100),\n    ...(filtered.length > 100\n      ? [\n          {\n            group: 'limitOption',\n            result: new BaseResult({\n              label: 'keep typing for more results',\n            }),\n          },\n        ]\n      : []),\n  ]\n}\n\nexport function aggregateResults(results: BaseResult[]) {\n  const m: { [key: string]: BaseResult[] } = {}\n\n  for (const result of results) {\n    const displayString = result.getDisplayString()\n    if (!m[displayString]) {\n      m[displayString] = []\n    }\n    m[displayString].push(result)\n  }\n  return m\n}\n\nexport function getDeduplicatedResult(results: BaseResult[]) {\n  return Object.entries(aggregateResults(results)).map(\n    ([displayString, results]) =>\n      results.length === 1\n        ? {\n            result: results[0],\n          }\n        : {\n            // deduplicate a \"multi-result\"\n            result: new BaseResult({\n              displayString,\n              results,\n              label: displayString,\n            }),\n          },\n  )\n}\n","import React, { Suspense, lazy, useState } from 'react'\n\nimport { IconButton, InputAdornment } from '@mui/material'\n\n// icons\nimport SearchIcon from '@mui/icons-material/Search'\nimport HelpIcon from '@mui/icons-material/Help'\n\n// lazy\nconst HelpDialog = lazy(() => import('./HelpDialog'))\n\nfunction HelpAdornment() {\n  const [isHelpDialogDisplayed, setHelpDialogDisplayed] = useState(false)\n  return (\n    <>\n      <IconButton onClick={() => setHelpDialogDisplayed(true)} size=\"small\">\n        <HelpIcon fontSize=\"small\" />\n      </IconButton>\n      {isHelpDialogDisplayed ? (\n        <Suspense fallback={<div />}>\n          <HelpDialog handleClose={() => setHelpDialogDisplayed(false)} />\n        </Suspense>\n      ) : null}\n    </>\n  )\n}\n\nexport default function EndAdornment({\n  showHelp,\n  endAdornment,\n}: {\n  showHelp?: boolean\n  endAdornment: React.ReactNode\n}) {\n  return (\n    <>\n      <InputAdornment position=\"end\" style={{ marginRight: 7 }}>\n        <SearchIcon fontSize=\"small\" />\n        {showHelp ? <HelpAdornment /> : null}\n      </InputAdornment>\n      {endAdornment}\n    </>\n  )\n}\n","import React from 'react'\nimport {\n  AutocompleteRenderInputParams,\n  TextField,\n  TextFieldProps as TFP,\n} from '@mui/material'\n\n// locals\nimport EndAdornment from './EndAdornment'\n\nexport default function AutocompleteTextField({\n  TextFieldProps,\n  inputBoxVal,\n  params,\n  showHelp,\n  setInputValue,\n  setCurrentSearch,\n}: {\n  TextFieldProps: TFP\n  inputBoxVal: string\n  showHelp?: boolean\n  params: AutocompleteRenderInputParams\n  setInputValue: (arg: string) => void\n  setCurrentSearch: (arg: string) => void\n}) {\n  const { helperText, InputProps = {} } = TextFieldProps\n  return (\n    <TextField\n      onBlur={() =>\n        // this is used to restore a refName or the non-user-typed input\n        // to the box on blurring\n        setInputValue(inputBoxVal)\n      }\n      {...params}\n      {...TextFieldProps}\n      size=\"small\"\n      helperText={helperText}\n      InputProps={{\n        ...params.InputProps,\n        ...InputProps,\n\n        endAdornment: (\n          <EndAdornment\n            showHelp={showHelp}\n            endAdornment={params.InputProps.endAdornment}\n          />\n        ),\n      }}\n      placeholder=\"Search for location\"\n      onChange={e => setCurrentSearch(e.target.value)}\n    />\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { getSession, useDebounce, measureText } from '@jbrowse/core/util'\nimport BaseResult, {\n  RefSequenceResult,\n} from '@jbrowse/core/TextSearch/BaseResults'\nimport { Autocomplete, TextFieldProps as TFP } from '@mui/material'\n\n// locals\nimport { LinearGenomeViewModel } from '../../model'\nimport { getDeduplicatedResult, getFiltered, Option } from './util'\nimport AutocompleteTextField from './AutocompleteTextField'\n\nexport default observer(function RefNameAutocomplete({\n  model,\n  onSelect,\n  assemblyName,\n  style,\n  fetchResults,\n  onChange,\n  value,\n  showHelp = true,\n  minWidth = 200,\n  maxWidth = 550,\n  TextFieldProps = {},\n}: {\n  model: LinearGenomeViewModel\n  onSelect?: (region: BaseResult) => void\n  onChange?: (val: string) => void\n  assemblyName?: string\n  value?: string\n  fetchResults: (query: string) => Promise<BaseResult[]>\n  style?: React.CSSProperties\n  minWidth?: number\n  maxWidth?: number\n  showHelp?: boolean\n  TextFieldProps?: TFP\n}) {\n  const session = getSession(model)\n  const { assemblyManager } = session\n  const [open, setOpen] = useState(false)\n  const [loaded, setLoaded] = useState(true)\n  const [currentSearch, setCurrentSearch] = useState('')\n  const [inputValue, setInputValue] = useState('')\n  const [searchOptions, setSearchOptions] = useState<Option[]>()\n  const debouncedSearch = useDebounce(currentSearch, 300)\n  const assembly = assemblyName ? assemblyManager.get(assemblyName) : undefined\n  const { coarseVisibleLocStrings, hasDisplayedRegions } = model\n\n  useEffect(() => {\n    let active = true\n\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      try {\n        if (debouncedSearch === '' || !assemblyName) {\n          return\n        }\n\n        setLoaded(false)\n        const results = await fetchResults(debouncedSearch)\n        if (active) {\n          setLoaded(true)\n          setSearchOptions(getDeduplicatedResult(results))\n        }\n      } catch (e) {\n        console.error(e)\n        if (active) {\n          session.notify(`${e}`, 'error')\n        }\n      }\n    })()\n\n    return () => {\n      active = false\n    }\n  }, [assemblyName, fetchResults, debouncedSearch, session, model])\n\n  const inputBoxVal = coarseVisibleLocStrings || value || ''\n\n  // heuristic, text width + 60 accommodates help icon and search icon\n  const width = Math.min(\n    Math.max(measureText(inputBoxVal, 14) + 100, minWidth),\n    maxWidth,\n  )\n\n  // notes on implementation:\n  // The selectOnFocus setting helps highlight the field when clicked\n  return (\n    <>\n      <Autocomplete\n        data-testid=\"autocomplete\"\n        disableListWrap\n        disableClearable\n        disabled={!assemblyName}\n        freeSolo\n        includeInputInList\n        selectOnFocus\n        style={{ ...style, width }}\n        value={inputBoxVal}\n        loading={!loaded}\n        inputValue={inputValue}\n        onInputChange={(_event, newInputValue) => {\n          setInputValue(newInputValue)\n          onChange?.(newInputValue)\n        }}\n        loadingText=\"loading results\"\n        open={open}\n        onOpen={() => setOpen(true)}\n        onClose={() => {\n          setOpen(false)\n          setLoaded(true)\n          if (hasDisplayedRegions) {\n            setCurrentSearch('')\n            setSearchOptions(undefined)\n          }\n        }}\n        onChange={(_event, selectedOption) => {\n          if (!selectedOption || !assemblyName) {\n            return\n          }\n\n          if (typeof selectedOption === 'string') {\n            // handles string inputs on keyPress enter\n            onSelect?.(new BaseResult({ label: selectedOption }))\n          } else {\n            onSelect?.(selectedOption.result)\n          }\n          setInputValue(inputBoxVal)\n        }}\n        options={\n          !searchOptions?.length\n            ? assembly?.regions?.map(option => ({\n                result: new RefSequenceResult({\n                  refName: option.refName,\n                  label: option.refName,\n                  matchedAttribute: 'refName',\n                }),\n              })) || []\n            : searchOptions\n        }\n        getOptionDisabled={option => option.group === 'limitOption'}\n        filterOptions={(opts, { inputValue }) => getFiltered(opts, inputValue)}\n        renderInput={params => (\n          <AutocompleteTextField\n            showHelp={showHelp}\n            params={params}\n            inputBoxVal={inputBoxVal}\n            TextFieldProps={TextFieldProps}\n            setCurrentSearch={setCurrentSearch}\n            setInputValue={setInputValue}\n          />\n        )}\n        getOptionLabel={opt =>\n          typeof opt === 'string' ? opt : opt.result.getDisplayString()\n        }\n      />\n    </>\n  )\n})\n","import React, { useRef } from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { Popover, Typography, alpha } from '@mui/material'\nimport { stringify, toLocale } from '@jbrowse/core/util'\n\nconst useStyles = makeStyles()(theme => {\n  const { primary, tertiary } = theme.palette\n  const background = tertiary\n    ? alpha(tertiary.light, 0.7)\n    : alpha(primary.light, 0.7)\n  return {\n    rubberband: {\n      height: '100%',\n      background,\n      position: 'absolute',\n      zIndex: 10,\n      textAlign: 'center',\n      overflow: 'hidden',\n    },\n    rubberbandControl: {\n      cursor: 'crosshair',\n      width: '100%',\n      minHeight: 8,\n    },\n    rubberbandText: {\n      color: tertiary ? tertiary.contrastText : primary.contrastText,\n    },\n    popover: {\n      mouseEvents: 'none',\n      cursor: 'crosshair',\n    },\n    paper: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n    },\n  }\n})\n\ninterface Offset {\n  coord: number\n  refName?: string\n  oob?: boolean\n}\n\nexport default function RubberbandSpan({\n  leftBpOffset,\n  rightBpOffset,\n  numOfBpSelected,\n  left,\n  width,\n}: {\n  leftBpOffset: Offset\n  rightBpOffset: Offset\n  numOfBpSelected?: number\n  left: number\n  width: number\n}) {\n  const ref = useRef(null)\n  const { classes } = useStyles()\n  return (\n    <>\n      {ref.current ? (\n        <>\n          <Popover\n            className={classes.popover}\n            classes={{ paper: classes.paper }}\n            open\n            anchorEl={ref.current}\n            anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\n            transformOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n            keepMounted\n            disableRestoreFocus\n          >\n            <Typography>{stringify(leftBpOffset)}</Typography>\n          </Popover>\n          <Popover\n            className={classes.popover}\n            classes={{ paper: classes.paper }}\n            open\n            anchorEl={ref.current}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            transformOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n            keepMounted\n            disableRestoreFocus\n          >\n            <Typography>{stringify(rightBpOffset)}</Typography>\n          </Popover>\n        </>\n      ) : null}\n      <div ref={ref} className={classes.rubberband} style={{ left, width }}>\n        {numOfBpSelected ? (\n          <Typography variant=\"h6\" className={classes.rubberbandText}>\n            {toLocale(numOfBpSelected)} bp\n          </Typography>\n        ) : null}\n      </div>\n    </>\n  )\n}\n","import { Assembly } from '@jbrowse/core/assemblyManager/assembly'\nimport { SearchType } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { SearchScope } from '@jbrowse/core/TextSearch/TextSearchManager'\nimport { dedupe, TextSearchManager } from '@jbrowse/core/util'\nimport BaseResult from '@jbrowse/core/TextSearch/BaseResults'\n\nexport async function fetchResults({\n  queryString,\n  searchType,\n  searchScope,\n  rankSearchResults,\n  textSearchManager,\n  assembly,\n}: {\n  queryString: string\n  searchScope: SearchScope\n  rankSearchResults: (results: BaseResult[]) => BaseResult[]\n  searchType?: SearchType\n  textSearchManager?: TextSearchManager\n  assembly?: Assembly\n}) {\n  if (!textSearchManager) {\n    console.warn('No text search manager')\n  }\n\n  const textSearchResults = await textSearchManager?.search(\n    {\n      queryString,\n      searchType,\n    },\n    searchScope,\n    rankSearchResults,\n  )\n\n  const refNameResults = assembly?.allRefNames\n    ?.filter(ref => ref.toLowerCase().startsWith(queryString.toLowerCase()))\n    .slice(0, 10)\n    .map(r => new BaseResult({ label: r }))\n\n  return dedupe(\n    [...(refNameResults || []), ...(textSearchResults || [])],\n    elt => elt.getId(),\n  )\n}\n\n// splits on the last instance of a character\nexport function splitLast(str: string, split: string): [string, string] {\n  const lastIndex = str.lastIndexOf(split)\n  if (lastIndex === -1) {\n    return [str, '']\n  } else {\n    const before = str.slice(0, lastIndex)\n    const after = str.slice(lastIndex + 1)\n    return [before, after]\n  }\n}\n\nexport function getRelativeX<\n  T extends { clientX: number; target: EventTarget | null },\n>(event: T, element: HTMLElement | null) {\n  return event.clientX - (element?.getBoundingClientRect().left || 0)\n}\n\nexport function getCytobands(assembly: Assembly | undefined, refName: string) {\n  return (\n    assembly?.cytobands\n      ?.map(f => ({\n        refName:\n          assembly.getCanonicalRefName(f.get('refName')) || f.get('refName'),\n        start: f.get('start'),\n        end: f.get('end'),\n        type: f.get('type'),\n      }))\n      .filter(f => f.refName === refName) || []\n  )\n}\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { IconButton, Paper } from '@mui/material'\n\n// icons\nimport ZoomIn from '@mui/icons-material/ZoomIn'\nimport ZoomOut from '@mui/icons-material/ZoomOut'\nimport ArrowDown from '@mui/icons-material/KeyboardArrowDown'\n\n// locals\nimport { LinearGenomeViewModel } from '..'\nimport CascadingMenuButton from '@jbrowse/core/ui/CascadingMenuButton'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()(theme => ({\n  bg: {\n    position: 'absolute',\n    right: 0,\n    zIndex: 1001,\n    background: theme.palette.background.paper,\n  },\n}))\n\nconst MiniControls = observer(function ({\n  model,\n}: {\n  model: LinearGenomeViewModel\n}) {\n  const { classes } = useStyles()\n  const { bpPerPx, maxBpPerPx, minBpPerPx, scaleFactor, hideHeader } = model\n  return hideHeader ? (\n    <Paper className={classes.bg}>\n      <CascadingMenuButton menuItems={model.menuItems()}>\n        <ArrowDown fontSize=\"small\" />\n      </CascadingMenuButton>\n      <IconButton\n        data-testid=\"zoom_out\"\n        onClick={() => model.zoom(bpPerPx * 2)}\n        disabled={bpPerPx >= maxBpPerPx - 0.0001 || scaleFactor !== 1}\n      >\n        <ZoomOut fontSize=\"small\" />\n      </IconButton>\n      <IconButton\n        data-testid=\"zoom_in\"\n        onClick={() => model.zoom(model.bpPerPx / 2)}\n        disabled={bpPerPx <= minBpPerPx + 0.0001 || scaleFactor !== 1}\n      >\n        <ZoomIn fontSize=\"small\" />\n      </IconButton>\n    </Paper>\n  ) : null\n})\n\nexport default MiniControls\n","import React, { useState, useEffect } from 'react'\nimport { observer } from 'mobx-react'\nimport { Slider, IconButton } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport ZoomIn from '@mui/icons-material/ZoomIn'\nimport ZoomOut from '@mui/icons-material/ZoomOut'\nimport { LinearGenomeViewModel } from '..'\n\nconst useStyles = makeStyles()(theme => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  slider: {\n    width: 70,\n    color: theme.palette.text.secondary,\n  },\n}))\n\nfunction ZoomControls({ model }: { model: LinearGenomeViewModel }) {\n  const { classes } = useStyles()\n  const { maxBpPerPx, minBpPerPx, bpPerPx, scaleFactor } = model\n  const [value, setValue] = useState(-Math.log2(bpPerPx) * 100)\n  useEffect(() => {\n    setValue(-Math.log2(bpPerPx) * 100)\n  }, [setValue, bpPerPx])\n\n  return (\n    <div className={classes.container}>\n      <IconButton\n        data-testid=\"zoom_out\"\n        onClick={() => model.zoom(bpPerPx * 2)}\n        disabled={bpPerPx >= maxBpPerPx - 0.0001 || scaleFactor !== 1}\n        size=\"large\"\n      >\n        <ZoomOut />\n      </IconButton>\n\n      <Slider\n        size=\"small\"\n        className={classes.slider}\n        value={value}\n        min={-Math.log2(maxBpPerPx) * 100}\n        max={-Math.log2(minBpPerPx) * 100}\n        onChange={(_, val) => setValue(val as number)}\n        onChangeCommitted={() => model.zoomTo(2 ** (-value / 100))}\n        disabled={scaleFactor !== 1}\n      />\n      <IconButton\n        data-testid=\"zoom_in\"\n        onClick={() => model.zoom(model.bpPerPx / 2)}\n        disabled={bpPerPx <= minBpPerPx + 0.0001 || scaleFactor !== 1}\n        size=\"large\"\n      >\n        <ZoomIn />\n      </IconButton>\n    </div>\n  )\n}\n\nexport default observer(ZoomControls)\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { useTheme, alpha } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { getSession } from '@jbrowse/core/util'\nimport BaseResult from '@jbrowse/core/TextSearch/BaseResults'\n\n// locals\nimport RefNameAutocomplete from './RefNameAutocomplete'\nimport { fetchResults, splitLast } from './util'\nimport { LinearGenomeViewModel, SPACING, WIDGET_HEIGHT } from '..'\n\nconst useStyles = makeStyles()(() => ({\n  headerRefName: {\n    minWidth: 100,\n  },\n}))\n\nfunction SearchBox({\n  model,\n  showHelp,\n}: {\n  showHelp?: boolean\n  model: LinearGenomeViewModel\n}) {\n  const { classes } = useStyles()\n  const theme = useTheme()\n  const session = getSession(model)\n\n  const { textSearchManager, assemblyManager } = session\n  const { assemblyNames, rankSearchResults } = model\n  const assemblyName = assemblyNames[0]\n  const assembly = assemblyManager.get(assemblyName)\n  const searchScope = model.searchScope(assemblyName)\n\n  async function navToOption(option: BaseResult) {\n    const location = option.getLocation()\n    const trackId = option.getTrackId()\n    if (location) {\n      await model.navToLocString(location, assemblyName)\n      if (trackId) {\n        model.showTrack(trackId)\n      }\n    }\n  }\n\n  // gets a string as input, or use stored option results from previous query,\n  // then re-query and\n  // 1) if it has multiple results: pop a dialog\n  // 2) if it's a single result navigate to it\n  // 3) else assume it's a locstring and navigate to it\n  async function handleSelectedRegion(option: BaseResult) {\n    try {\n      if (option.hasLocation()) {\n        await navToOption(option)\n      } else if (option.results?.length) {\n        model.setSearchResults(option.results, option.getLabel())\n      } else {\n        const input = option.getLabel()\n        const [ref, rest] = splitLast(input, ':')\n        const allRefs = assembly?.allRefNamesWithLowerCase || []\n        if (\n          allRefs.includes(input) ||\n          (allRefs.includes(ref) && !Number.isNaN(Number.parseInt(rest, 10)))\n        ) {\n          await model.navToLocString(input, assemblyName)\n        } else {\n          const results = await fetchResults({\n            queryString: input,\n            searchType: 'exact',\n            searchScope,\n            rankSearchResults,\n            textSearchManager,\n            assembly,\n          })\n\n          if (results.length > 1) {\n            model.setSearchResults(results, input.toLowerCase())\n          } else if (results.length === 1) {\n            await navToOption(results[0])\n          } else {\n            await model.navToLocString(input, assemblyName)\n          }\n        }\n      }\n    } catch (e) {\n      console.error(e)\n      session.notify(`${e}`, 'warning')\n    }\n  }\n  return (\n    <RefNameAutocomplete\n      showHelp={showHelp}\n      onSelect={handleSelectedRegion}\n      assemblyName={assemblyName}\n      fetchResults={queryString =>\n        fetchResults({\n          queryString,\n          searchScope,\n          rankSearchResults,\n          textSearchManager,\n          assembly,\n        })\n      }\n      model={model}\n      minWidth={175}\n      TextFieldProps={{\n        variant: 'outlined',\n        className: classes.headerRefName,\n        style: { margin: SPACING },\n        InputProps: {\n          style: {\n            padding: 0,\n            height: WIDGET_HEIGHT,\n            background: alpha(theme.palette.background.paper, 0.8),\n          },\n        },\n      }}\n    />\n  )\n}\n\nexport default observer(SearchBox)\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { Button, IconButton, FormGroup, Typography, alpha } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { getBpDisplayStr } from '@jbrowse/core/util'\n\n// icons\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward'\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack'\n\n// locals\nimport { LinearGenomeViewModel, SPACING } from '..'\nimport OverviewScalebar from './OverviewScalebar'\nimport ZoomControls from './ZoomControls'\nimport SearchBox from './SearchBox'\n\ntype LGV = LinearGenomeViewModel\nconst useStyles = makeStyles()(theme => ({\n  headerBar: {\n    display: 'flex',\n  },\n  headerForm: {\n    flexWrap: 'nowrap',\n    marginRight: 7,\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n\n  panButton: {\n    background: alpha(theme.palette.background.paper, 0.8),\n    color: theme.palette.text.primary,\n    margin: SPACING,\n  },\n  bp: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 5,\n  },\n  toggleButton: {\n    height: 44,\n    border: 'none',\n    marginLeft: theme.spacing(4),\n  },\n  buttonSpacer: {\n    marginRight: theme.spacing(2),\n  },\n}))\n\nconst HeaderButtons = observer(({ model }: { model: LGV }) => {\n  const { classes } = useStyles()\n  return (\n    <IconButton\n      onClick={model.activateTrackSelector}\n      className={classes.toggleButton}\n      title=\"Open track selector\"\n      value=\"track_select\"\n    >\n      <TrackSelectorIcon className={classes.buttonSpacer} />\n    </IconButton>\n  )\n})\n\nfunction PanControls({ model }: { model: LGV }) {\n  const { classes } = useStyles()\n  return (\n    <>\n      <Button\n        variant=\"outlined\"\n        className={classes.panButton}\n        onClick={() => model.slide(-0.9)}\n      >\n        <ArrowBackIcon />\n      </Button>\n      <Button\n        variant=\"outlined\"\n        className={classes.panButton}\n        onClick={() => model.slide(0.9)}\n      >\n        <ArrowForwardIcon />\n      </Button>\n    </>\n  )\n}\n\nconst RegionWidth = observer(({ model }: { model: LGV }) => {\n  const { classes } = useStyles()\n  const { coarseTotalBp } = model\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" className={classes.bp}>\n      {getBpDisplayStr(coarseTotalBp)}\n    </Typography>\n  )\n})\n\nconst Controls = ({ model }: { model: LGV }) => {\n  const { classes } = useStyles()\n  return (\n    <div className={classes.headerBar}>\n      <HeaderButtons model={model} />\n      <div className={classes.spacer} />\n      <FormGroup row className={classes.headerForm}>\n        <PanControls model={model} />\n        <SearchBox model={model} />\n      </FormGroup>\n      <RegionWidth model={model} />\n      <ZoomControls model={model} />\n      <div className={classes.spacer} />\n    </div>\n  )\n}\n\nconst LinearGenomeViewHeader = observer(({ model }: { model: LGV }) => {\n  return !model.hideHeader ? (\n    model.hideHeaderOverview ? (\n      <Controls model={model} />\n    ) : (\n      <OverviewScalebar model={model}>\n        <Controls model={model} />\n      </OverviewScalebar>\n    )\n  ) : null\n})\n\nexport default LinearGenomeViewHeader\n","import React, { lazy } from 'react'\nimport { getConf, AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { BaseViewModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport { Region } from '@jbrowse/core/util/types'\nimport { ElementId, Region as MUIRegion } from '@jbrowse/core/util/types/mst'\nimport { MenuItem } from '@jbrowse/core/ui'\nimport {\n  assembleLocString,\n  clamp,\n  findLast,\n  getContainingView,\n  getSession,\n  isViewContainer,\n  isSessionModelWithWidgets,\n  isSessionWithAddTracks,\n  localStorageGetItem,\n  measureText,\n  springAnimate,\n  sum,\n  ParsedLocString,\n} from '@jbrowse/core/util'\nimport BaseResult from '@jbrowse/core/TextSearch/BaseResults'\nimport { BlockSet, BaseBlock } from '@jbrowse/core/util/blockTypes'\nimport calculateDynamicBlocks from '@jbrowse/core/util/calculateDynamicBlocks'\nimport calculateStaticBlocks from '@jbrowse/core/util/calculateStaticBlocks'\nimport { getParentRenderProps } from '@jbrowse/core/util/tracks'\nimport { when, transaction, autorun } from 'mobx'\nimport {\n  addDisposer,\n  cast,\n  getSnapshot,\n  getRoot,\n  resolveIdentifier,\n  types,\n  Instance,\n} from 'mobx-state-tree'\n\nimport Base1DView from '@jbrowse/core/util/Base1DViewModel'\nimport { moveTo, pxToBp, bpToPx } from '@jbrowse/core/util/Base1DUtils'\nimport { saveAs } from 'file-saver'\nimport clone from 'clone'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\n// icons\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\nimport SyncAltIcon from '@mui/icons-material/SyncAlt'\nimport VisibilityIcon from '@mui/icons-material/Visibility'\nimport LabelIcon from '@mui/icons-material/Label'\nimport FolderOpenIcon from '@mui/icons-material/FolderOpen'\nimport PhotoCameraIcon from '@mui/icons-material/PhotoCamera'\nimport ZoomInIcon from '@mui/icons-material/ZoomIn'\nimport MenuOpenIcon from '@mui/icons-material/MenuOpen'\n\nimport MiniControls from './components/MiniControls'\nimport Header from './components/Header'\nimport { generateLocations, parseLocStrings } from './util'\n\n// lazies\nconst ReturnToImportFormDialog = lazy(\n  () => import('@jbrowse/core/ui/ReturnToImportFormDialog'),\n)\nconst SequenceSearchDialog = lazy(\n  () => import('./components/SequenceSearchDialog'),\n)\nconst ExportSvgDialog = lazy(() => import('./components/ExportSvgDialog'))\nconst GetSequenceDialog = lazy(() => import('./components/GetSequenceDialog'))\nconst SearchResultsDialog = lazy(\n  () => import('./components/SearchResultsDialog'),\n)\n\nexport interface BpOffset {\n  refName?: string\n  index: number\n  offset: number\n  start?: number\n  end?: number\n  coord?: number\n  reversed?: boolean\n  assemblyName?: string\n  oob?: boolean\n}\nexport interface ExportSvgOptions {\n  rasterizeLayers?: boolean\n  filename?: string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Wrapper?: React.FC<any>\n  fontSize?: number\n  rulerHeight?: number\n  textHeight?: number\n  paddingHeight?: number\n  headerHeight?: number\n  cytobandHeight?: number\n  trackLabels?: string\n  themeName?: string\n}\n\nfunction calculateVisibleLocStrings(contentBlocks: BaseBlock[]) {\n  if (!contentBlocks.length) {\n    return ''\n  }\n  const isSingleAssemblyName = contentBlocks.every(\n    b => b.assemblyName === contentBlocks[0].assemblyName,\n  )\n  const locs = contentBlocks.map(block =>\n    assembleLocString({\n      ...block,\n      start: Math.round(block.start),\n      end: Math.round(block.end),\n      assemblyName: isSingleAssemblyName ? undefined : block.assemblyName,\n    }),\n  )\n  return locs.join(' ')\n}\n\nexport interface NavLocation {\n  refName: string\n  start?: number\n  end?: number\n  assemblyName?: string\n}\n\nexport const HEADER_BAR_HEIGHT = 48\nexport const HEADER_OVERVIEW_HEIGHT = 20\nexport const SCALE_BAR_HEIGHT = 17\nexport const RESIZE_HANDLE_HEIGHT = 3\nexport const INTER_REGION_PADDING_WIDTH = 2\nexport const SPACING = 7\nexport const WIDGET_HEIGHT = 32\n\n/**\n * #stateModel LinearGenomeView\n * #category view\n */\nexport function stateModelFactory(pluginManager: PluginManager) {\n  return types\n    .compose(\n      BaseViewModel,\n      types.model('LinearGenomeView', {\n        /**\n         * #property\n         */\n        id: ElementId,\n\n        /**\n         * #property\n         * this is a string instead of the const literal 'LinearGenomeView' to\n         * reduce some typescripting strictness, but you should pass the string\n         * 'LinearGenomeView' to the model explicitly\n         */\n        type: types.literal('LinearGenomeView') as unknown as string,\n\n        /**\n         * #property\n         * corresponds roughly to the horizontal scroll of the LGV\n         */\n        offsetPx: 0,\n\n        /**\n         * #property\n         * corresponds roughly to the zoom level, base-pairs per pixel\n         */\n        bpPerPx: 1,\n\n        /**\n         * #property\n         * currently displayed regions, can be a single chromosome, arbitrary\n         * subsections, or the entire  set of chromosomes in the genome, but it not\n         * advised to use the entire set of chromosomes if your assembly is very\n         * fragmented\n         */\n        displayedRegions: types.array(MUIRegion),\n\n        /**\n         * #property\n         * array of currently displayed tracks state models instances\n         */\n        tracks: types.array(\n          pluginManager.pluggableMstType('track', 'stateModel'),\n        ),\n\n        /**\n         * #property\n         * array of currently displayed tracks state model's\n         */\n        hideHeader: false,\n\n        /**\n         * #property\n         */\n        hideHeaderOverview: false,\n\n        /**\n         * #property\n         */\n        hideNoTracksActive: false,\n\n        /**\n         * #property\n         */\n        trackSelectorType: types.optional(\n          types.enumeration(['hierarchical']),\n          'hierarchical',\n        ),\n\n        /**\n         * #property\n         * how to display the track labels, can be \"overlapping\", \"offset\", or\n         * \"hidden\"\n         */\n        trackLabels: types.optional(\n          types.string,\n          () => localStorageGetItem('lgv-trackLabels') || 'overlapping',\n        ),\n\n        /**\n         * #property\n         * show the \"center line\"\n         */\n        showCenterLine: types.optional(types.boolean, () =>\n          Boolean(\n            JSON.parse(localStorageGetItem('lgv-showCenterLine') || 'false'),\n          ),\n        ),\n\n        /**\n         * #property\n         * show the \"cytobands\" in the overview scale bar\n         */\n        showCytobandsSetting: types.optional(types.boolean, () =>\n          Boolean(\n            JSON.parse(localStorageGetItem('lgv-showCytobands') || 'true'),\n          ),\n        ),\n\n        /**\n         * #property\n         * show the \"gridlines\" in the track area\n         */\n        showGridlines: true,\n      }),\n    )\n    .volatile(() => ({\n      volatileWidth: undefined as number | undefined,\n      minimumBlockWidth: 3,\n      draggingTrackId: undefined as undefined | string,\n      volatileError: undefined as undefined | Error,\n\n      // array of callbacks to run after the next set of the displayedRegions,\n      // which is basically like an onLoad\n      afterDisplayedRegionsSetCallbacks: [] as Function[],\n      scaleFactor: 1,\n      trackRefs: {} as { [key: string]: HTMLDivElement },\n      coarseDynamicBlocks: [] as BaseBlock[],\n      coarseTotalBp: 0,\n      leftOffset: undefined as undefined | BpOffset,\n      rightOffset: undefined as undefined | BpOffset,\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get width(): number {\n        if (self.volatileWidth === undefined) {\n          throw new Error(\n            'width undefined, make sure to check for model.initialized',\n          )\n        }\n        return self.volatileWidth\n      },\n      /**\n       * #getter\n       */\n      get interRegionPaddingWidth() {\n        return INTER_REGION_PADDING_WIDTH\n      },\n\n      /**\n       * #getter\n       */\n      get assemblyNames() {\n        return [\n          ...new Set(self.displayedRegions.map(region => region.assemblyName)),\n        ]\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       */\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      MiniControlsComponent(): React.FC<any> {\n        return MiniControls\n      },\n\n      /**\n       * #method\n       */\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      HeaderComponent(): React.FC<any> {\n        return Header\n      },\n\n      /**\n       * #getter\n       */\n      get assemblyErrors() {\n        const { assemblyManager } = getSession(self)\n        const { assemblyNames } = self\n        return assemblyNames\n          .map(a => assemblyManager.get(a)?.error)\n          .filter(f => !!f)\n          .join(', ')\n      },\n\n      /**\n       * #getter\n       */\n      get assembliesInitialized() {\n        const { assemblyManager } = getSession(self)\n        const { assemblyNames } = self\n        return assemblyNames.every(a => assemblyManager.get(a)?.initialized)\n      },\n\n      /**\n       * #getter\n       */\n      get initialized() {\n        return self.volatileWidth !== undefined && this.assembliesInitialized\n      },\n\n      /**\n       * #getter\n       */\n      get hasDisplayedRegions() {\n        return self.displayedRegions.length > 0\n      },\n\n      /**\n       * #getter\n       */\n      get scaleBarHeight() {\n        return SCALE_BAR_HEIGHT + RESIZE_HANDLE_HEIGHT\n      },\n\n      /**\n       * #getter\n       */\n      get headerHeight() {\n        if (self.hideHeader) {\n          return 0\n        }\n        if (self.hideHeaderOverview) {\n          return HEADER_BAR_HEIGHT\n        }\n        return HEADER_BAR_HEIGHT + HEADER_OVERVIEW_HEIGHT\n      },\n\n      /**\n       * #getter\n       */\n      get trackHeights() {\n        return sum(self.tracks.map(t => t.displays[0].height))\n      },\n\n      /**\n       * #getter\n       */\n      get trackHeightsWithResizeHandles() {\n        return this.trackHeights + self.tracks.length * RESIZE_HANDLE_HEIGHT\n      },\n\n      /**\n       * #getter\n       */\n      get height() {\n        return (\n          this.trackHeightsWithResizeHandles +\n          this.headerHeight +\n          this.scaleBarHeight\n        )\n      },\n\n      /**\n       * #getter\n       */\n      get totalBp() {\n        return self.displayedRegions.reduce((a, b) => a + b.end - b.start, 0)\n      },\n\n      /**\n       * #getter\n       */\n      get maxBpPerPx() {\n        return this.totalBp / (self.width * 0.9)\n      },\n\n      /**\n       * #getter\n       */\n      get minBpPerPx() {\n        return 1 / 50\n      },\n\n      /**\n       * #getter\n       */\n      get error() {\n        return self.volatileError || this.assemblyErrors\n      },\n\n      /**\n       * #getter\n       */\n      get maxOffset() {\n        // objectively determined to keep the linear genome on the main screen\n        const leftPadding = 10\n        return this.displayedRegionsTotalPx - leftPadding\n      },\n\n      /**\n       * #getter\n       */\n      get minOffset() {\n        // objectively determined to keep the linear genome on the main screen\n        const rightPadding = 30\n        return -self.width + rightPadding\n      },\n\n      /**\n       * #getter\n       */\n      get displayedRegionsTotalPx() {\n        return this.totalBp / self.bpPerPx\n      },\n\n      /**\n       * #method\n       */\n      renderProps() {\n        return {\n          ...getParentRenderProps(self),\n          bpPerPx: self.bpPerPx,\n          highResolutionScaling: getConf(\n            getSession(self),\n            'highResolutionScaling',\n          ),\n        }\n      },\n\n      /**\n       * #method\n       */\n      searchScope(assemblyName: string) {\n        return {\n          assemblyName,\n          includeAggregateIndexes: true,\n          tracks: self.tracks,\n        }\n      },\n\n      /**\n       * #method\n       */\n      getTrack(id: string) {\n        return self.tracks.find(t => t.configuration.trackId === id)\n      },\n\n      /**\n       * #method\n       */\n      rankSearchResults(results: BaseResult[]) {\n        // order of rank\n        const openTrackIds = new Set(\n          self.tracks.map(track => track.configuration.trackId),\n        )\n        for (const result of results) {\n          if (openTrackIds.has(result.trackId)) {\n            result.updateScore(result.getScore() + 1)\n          }\n        }\n        return results\n      },\n\n      /**\n       * #method\n       * modifies view menu action onClick to apply to all tracks of same type\n       */\n      rewriteOnClicks(trackType: string, viewMenuActions: MenuItem[]) {\n        viewMenuActions.forEach(action => {\n          // go to lowest level menu\n          if ('subMenu' in action) {\n            this.rewriteOnClicks(trackType, action.subMenu)\n          }\n          if ('onClick' in action) {\n            const holdOnClick = action.onClick\n            action.onClick = (...args: unknown[]) => {\n              self.tracks.forEach(track => {\n                if (track.type === trackType) {\n                  holdOnClick.apply(track, [track, ...args])\n                }\n              })\n            }\n          }\n        })\n      },\n      /**\n       * #getter\n       */\n      get trackTypeActions() {\n        const allActions: Map<string, MenuItem[]> = new Map()\n        self.tracks.forEach(track => {\n          const trackInMap = allActions.get(track.type)\n          if (!trackInMap) {\n            const viewMenuActions = clone(track.viewMenuActions)\n            this.rewriteOnClicks(track.type, viewMenuActions)\n            allActions.set(track.type, viewMenuActions)\n          }\n        })\n\n        return allActions\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setShowCytobands(flag: boolean) {\n        self.showCytobandsSetting = flag\n      },\n      /**\n       * #action\n       */\n      setWidth(newWidth: number) {\n        self.volatileWidth = newWidth\n      },\n      /**\n       * #action\n       */\n      setError(error: Error | undefined) {\n        self.volatileError = error\n      },\n      /**\n       * #action\n       */\n      toggleHeader() {\n        self.hideHeader = !self.hideHeader\n      },\n      /**\n       * #action\n       */\n      toggleHeaderOverview() {\n        self.hideHeaderOverview = !self.hideHeaderOverview\n      },\n      /**\n       * #action\n       */\n      toggleNoTracksActive() {\n        self.hideNoTracksActive = !self.hideNoTracksActive\n      },\n      /**\n       * #action\n       */\n      toggleShowGridlines() {\n        self.showGridlines = !self.showGridlines\n      },\n      /**\n       * #action\n       */\n      scrollTo(offsetPx: number) {\n        const newOffsetPx = clamp(offsetPx, self.minOffset, self.maxOffset)\n        self.offsetPx = newOffsetPx\n        return newOffsetPx\n      },\n\n      /**\n       * #action\n       */\n      zoomTo(bpPerPx: number, offset = self.width / 2, centerAtOffset = false) {\n        const newBpPerPx = clamp(bpPerPx, self.minBpPerPx, self.maxBpPerPx)\n        if (newBpPerPx === self.bpPerPx) {\n          return newBpPerPx\n        }\n        const oldBpPerPx = self.bpPerPx\n\n        if (Math.abs(oldBpPerPx - newBpPerPx) < 0.000001) {\n          console.warn('zoomTo bpPerPx rounding error')\n          return oldBpPerPx\n        }\n        self.bpPerPx = newBpPerPx\n\n        // tweak the offset so that the center of the view remains at the same\n        // coordinate\n        this.scrollTo(\n          Math.round(\n            ((self.offsetPx + offset) * oldBpPerPx) / newBpPerPx -\n              (centerAtOffset ? self.width / 2 : offset),\n          ),\n        )\n        return newBpPerPx\n      },\n\n      /**\n       * #action\n       * sets offsets of rubberband, used in the get sequence dialog can call\n       * view.getSelectedRegions(view.leftOffset,view.rightOffset) to compute\n       * the selected regions from the offsets\n       */\n      setOffsets(left?: BpOffset, right?: BpOffset) {\n        self.leftOffset = left\n        self.rightOffset = right\n      },\n\n      /**\n       * #action\n       */\n      setSearchResults(\n        searchResults: BaseResult[],\n        searchQuery: string,\n        assemblyName?: string,\n      ) {\n        getSession(self).queueDialog(handleClose => [\n          SearchResultsDialog,\n          {\n            model: self as LinearGenomeViewModel,\n            searchResults,\n            searchQuery,\n            handleClose,\n            assemblyName,\n          },\n        ])\n      },\n\n      /**\n       * #action\n       */\n      setNewView(bpPerPx: number, offsetPx: number) {\n        this.zoomTo(bpPerPx)\n        this.scrollTo(offsetPx)\n      },\n\n      /**\n       * #action\n       */\n      horizontallyFlip() {\n        self.displayedRegions = cast(\n          [...self.displayedRegions]\n            .reverse()\n            .map(region => ({ ...region, reversed: !region.reversed })),\n        )\n        this.scrollTo(self.totalBp / self.bpPerPx - self.offsetPx - self.width)\n      },\n\n      /**\n       * #action\n       */\n      showTrack(\n        trackId: string,\n        initialSnapshot = {},\n        displayInitialSnapshot = {},\n      ) {\n        const schema = pluginManager.pluggableConfigSchemaType('track')\n        const conf = resolveIdentifier(schema, getRoot(self), trackId)\n        if (!conf) {\n          throw new Error(`Could not resolve identifier \"${trackId}\"`)\n        }\n        const trackType = pluginManager.getTrackType(conf?.type)\n        if (!trackType) {\n          throw new Error(`Unknown track type ${conf.type}`)\n        }\n        const viewType = pluginManager.getViewType(self.type)\n        const supportedDisplays = new Set(\n          viewType.displayTypes.map(d => d.name),\n        )\n        const displayConf = conf.displays.find((d: AnyConfigurationModel) =>\n          supportedDisplays.has(d.type),\n        )\n        if (!displayConf) {\n          throw new Error(\n            `Could not find a compatible display for view type ${self.type}`,\n          )\n        }\n\n        const t = self.tracks.filter(t => t.configuration === conf)\n        if (t.length === 0) {\n          const track = trackType.stateModel.create({\n            ...initialSnapshot,\n            type: conf.type,\n            configuration: conf,\n            displays: [\n              {\n                type: displayConf.type,\n                configuration: displayConf,\n                ...displayInitialSnapshot,\n              },\n            ],\n          })\n          self.tracks.push(track)\n          return track\n        }\n        return t[0]\n      },\n      /**\n       * #action\n       */\n      hideTrack(trackId: string) {\n        const schema = pluginManager.pluggableConfigSchemaType('track')\n        const conf = resolveIdentifier(schema, getRoot(self), trackId)\n        const t = self.tracks.filter(t => t.configuration === conf)\n        transaction(() => t.forEach(t => self.tracks.remove(t)))\n        return t.length\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      moveTrack(movingId: string, targetId: string) {\n        const oldIndex = self.tracks.findIndex(track => track.id === movingId)\n        if (oldIndex === -1) {\n          throw new Error(`Track ID ${movingId} not found`)\n        }\n        const newIndex = self.tracks.findIndex(track => track.id === targetId)\n        if (newIndex === -1) {\n          throw new Error(`Track ID ${targetId} not found`)\n        }\n        const track = getSnapshot(self.tracks[oldIndex])\n        self.tracks.splice(oldIndex, 1)\n        self.tracks.splice(newIndex, 0, track)\n      },\n\n      /**\n       * #action\n       */\n      closeView() {\n        const parent = getContainingView(self)\n        if (parent) {\n          // I am embedded in a some other view\n          if (isViewContainer(parent)) {\n            parent.removeView(self)\n          }\n        } else {\n          // I am part of a session\n          getSession(self).removeView(self)\n        }\n      },\n\n      /**\n       * #action\n       */\n      toggleTrack(trackId: string) {\n        // if we have any tracks with that configuration, turn them off\n        const hiddenCount = self.hideTrack(trackId)\n        // if none had that configuration, turn one on\n        if (!hiddenCount) {\n          self.showTrack(trackId)\n        }\n      },\n\n      /**\n       * #action\n       */\n      setTrackLabels(setting: 'overlapping' | 'offset' | 'hidden') {\n        self.trackLabels = setting\n      },\n\n      /**\n       * #action\n       */\n      toggleCenterLine() {\n        self.showCenterLine = !self.showCenterLine\n      },\n\n      /**\n       * #action\n       */\n      setDisplayedRegions(regions: Region[]) {\n        self.displayedRegions = cast(regions)\n        self.zoomTo(self.bpPerPx)\n      },\n\n      /**\n       * #action\n       */\n      activateTrackSelector() {\n        if (self.trackSelectorType === 'hierarchical') {\n          const session = getSession(self)\n          if (isSessionModelWithWidgets(session)) {\n            const selector = session.addWidget(\n              'HierarchicalTrackSelectorWidget',\n              'hierarchicalTrackSelector',\n              { view: self },\n            )\n            session.showWidget(selector)\n            return selector\n          }\n        }\n        throw new Error(`invalid track selector type ${self.trackSelectorType}`)\n      },\n\n      /**\n       * #method\n       * Helper method for the fetchSequence.\n       * Retrieves the corresponding regions that were selected by the\n       * rubberband\n       *\n       * @param leftOffset - `object as {start, end, index, offset}`, offset = start\n       * of user drag\n       * @param rightOffset - `object as {start, end, index, offset}`,\n       * offset = end of user drag\n       * @returns array of Region[]\n       */\n      getSelectedRegions(leftOffset?: BpOffset, rightOffset?: BpOffset) {\n        const snap = getSnapshot(self)\n        const simView = Base1DView.create({\n          ...snap,\n          interRegionPaddingWidth: self.interRegionPaddingWidth,\n        })\n\n        simView.setVolatileWidth(self.width)\n        simView.moveTo(leftOffset, rightOffset)\n\n        return simView.dynamicBlocks.contentBlocks.map(region => ({\n          ...region,\n          start: Math.floor(region.start),\n          end: Math.ceil(region.end),\n        }))\n      },\n\n      /**\n       * #action\n       * schedule something to be run after the next time displayedRegions is\n       * set\n       */\n      afterDisplayedRegionsSet(cb: Function) {\n        self.afterDisplayedRegionsSetCallbacks.push(cb)\n      },\n\n      /**\n       * #action\n       */\n      horizontalScroll(distance: number) {\n        const oldOffsetPx = self.offsetPx\n        // newOffsetPx is the actual offset after the scroll is clamped\n        const newOffsetPx = self.scrollTo(self.offsetPx + distance)\n        return newOffsetPx - oldOffsetPx\n      },\n\n      /**\n       * #action\n       */\n      center() {\n        const centerBp = self.totalBp / 2\n        const centerPx = centerBp / self.bpPerPx\n        self.scrollTo(Math.round(centerPx - self.width / 2))\n      },\n\n      /**\n       * #action\n       */\n      showAllRegions() {\n        self.zoomTo(self.maxBpPerPx)\n        this.center()\n      },\n\n      /**\n       * #action\n       */\n      showAllRegionsInAssembly(assemblyName?: string) {\n        const session = getSession(self)\n        const { assemblyManager } = session\n        if (!assemblyName) {\n          const names = new Set(self.displayedRegions.map(r => r.assemblyName))\n          if (names.size > 1) {\n            session.notify(\n              `Can't perform operation with multiple assemblies currently`,\n            )\n            return\n          }\n          ;[assemblyName] = [...names]\n        }\n        const assembly = assemblyManager.get(assemblyName)\n        if (assembly) {\n          const { regions } = assembly\n          if (regions) {\n            this.setDisplayedRegions(regions)\n            self.zoomTo(self.maxBpPerPx)\n            this.center()\n          }\n        }\n      },\n\n      /**\n       * #action\n       */\n      setDraggingTrackId(idx?: string) {\n        self.draggingTrackId = idx\n      },\n\n      /**\n       * #action\n       */\n      setScaleFactor(factor: number) {\n        self.scaleFactor = factor\n      },\n\n      /**\n       * #action\n       * this \"clears the view\" and makes the view return to the import form\n       */\n      clearView() {\n        this.setDisplayedRegions([])\n        self.tracks.clear()\n        // it is necessary to run these after setting displayed regions empty\n        // or else model.offsetPx gets set to Infinity and breaks\n        // mobx-state-tree snapshot\n        self.scrollTo(0)\n        self.zoomTo(10)\n      },\n\n      /**\n       * #method\n       * creates an svg export and save using FileSaver\n       */\n      async exportSvg(opts: ExportSvgOptions = {}) {\n        const { renderToSvg } = await import(\n          './svgcomponents/SVGLinearGenomeView'\n        )\n        const html = await renderToSvg(self as LinearGenomeViewModel, opts)\n        const blob = new Blob([html], { type: 'image/svg+xml' })\n        saveAs(blob, opts.filename || 'image.svg')\n      },\n    }))\n    .actions(self => {\n      let cancelLastAnimation = () => {}\n\n      /**\n       * #action\n       * perform animated slide\n       */\n      function slide(viewWidths: number) {\n        const [animate, cancelAnimation] = springAnimate(\n          self.offsetPx,\n          self.offsetPx + self.width * viewWidths,\n          self.scrollTo,\n        )\n        cancelLastAnimation()\n        cancelLastAnimation = cancelAnimation\n        animate()\n      }\n\n      return { slide }\n    })\n    .actions(self => {\n      let cancelLastAnimation = () => {}\n\n      /**\n       * #action\n       * perform animated zoom\n       */\n      function zoom(targetBpPerPx: number) {\n        self.zoomTo(self.bpPerPx)\n        if (\n          // already zoomed all the way in\n          (targetBpPerPx < self.bpPerPx && self.bpPerPx === self.minBpPerPx) ||\n          // already zoomed all the way out\n          (targetBpPerPx > self.bpPerPx && self.bpPerPx === self.maxBpPerPx)\n        ) {\n          return\n        }\n        const factor = self.bpPerPx / targetBpPerPx\n        const [animate, cancelAnimation] = springAnimate(\n          1,\n          factor,\n          self.setScaleFactor,\n          () => {\n            self.zoomTo(targetBpPerPx)\n            self.setScaleFactor(1)\n          },\n        )\n        cancelLastAnimation()\n        cancelLastAnimation = cancelAnimation\n        animate()\n      }\n\n      return { zoom }\n    })\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get canShowCytobands() {\n        return self.displayedRegions.length === 1 && this.anyCytobandsExist\n      },\n      /**\n       * #getter\n       */\n      get showCytobands() {\n        return this.canShowCytobands && self.showCytobandsSetting\n      },\n      /**\n       * #getter\n       */\n      get anyCytobandsExist() {\n        const { assemblyManager } = getSession(self)\n        return self.assemblyNames.some(\n          a => assemblyManager.get(a)?.cytobands?.length,\n        )\n      },\n      /**\n       * #getter\n       * the cytoband is displayed to the right of the chromosome name, and\n       * that offset is calculated manually with this method\n       */\n      get cytobandOffset() {\n        return this.showCytobands\n          ? measureText(self.displayedRegions[0].refName, 12) + 15\n          : 0\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       * return the view menu items\n       */\n      menuItems(): MenuItem[] {\n        const { canShowCytobands, showCytobands } = self\n        const session = getSession(self)\n        const menuItems: MenuItem[] = [\n          {\n            label: 'Return to import form',\n            onClick: () => {\n              getSession(self).queueDialog(handleClose => [\n                ReturnToImportFormDialog,\n                { model: self, handleClose },\n              ])\n            },\n            icon: FolderOpenIcon,\n          },\n          ...(isSessionWithAddTracks(session)\n            ? [\n                {\n                  label: 'Sequence search',\n                  onClick: () => {\n                    getSession(self).queueDialog(handleClose => [\n                      SequenceSearchDialog,\n                      { model: self, handleClose },\n                    ])\n                  },\n                },\n              ]\n            : []),\n          {\n            label: 'Export SVG',\n            icon: PhotoCameraIcon,\n            onClick: () => {\n              getSession(self).queueDialog(handleClose => [\n                ExportSvgDialog,\n                { model: self, handleClose },\n              ])\n            },\n          },\n          {\n            label: 'Open track selector',\n            onClick: self.activateTrackSelector,\n            icon: TrackSelectorIcon,\n          },\n          {\n            label: 'Horizontally flip',\n            icon: SyncAltIcon,\n            onClick: self.horizontallyFlip,\n          },\n          {\n            label: 'Show...',\n            icon: VisibilityIcon,\n            subMenu: [\n              {\n                label: 'Show all regions in assembly',\n                onClick: self.showAllRegionsInAssembly,\n              },\n              {\n                label: 'Show center line',\n                type: 'checkbox',\n                checked: self.showCenterLine,\n                onClick: self.toggleCenterLine,\n              },\n              {\n                label: 'Show header',\n                type: 'checkbox',\n                checked: !self.hideHeader,\n                onClick: self.toggleHeader,\n              },\n              {\n                label: 'Show header overview',\n                type: 'checkbox',\n                checked: !self.hideHeaderOverview,\n                onClick: self.toggleHeaderOverview,\n                disabled: self.hideHeader,\n              },\n              {\n                label: 'Show no tracks active button',\n                type: 'checkbox',\n                checked: !self.hideNoTracksActive,\n                onClick: self.toggleNoTracksActive,\n              },\n              {\n                label: 'Show guidelines',\n                type: 'checkbox',\n                checked: self.showGridlines,\n                onClick: self.toggleShowGridlines,\n              },\n              ...(canShowCytobands\n                ? [\n                    {\n                      label: 'Show ideogram',\n                      type: 'checkbox' as const,\n                      checked: self.showCytobands,\n                      onClick: () => self.setShowCytobands(!showCytobands),\n                    },\n                  ]\n                : []),\n            ],\n          },\n          {\n            label: 'Track labels',\n            icon: LabelIcon,\n            subMenu: [\n              {\n                label: 'Overlapping',\n                icon: VisibilityIcon,\n                type: 'radio',\n                checked: self.trackLabels === 'overlapping',\n                onClick: () => self.setTrackLabels('overlapping'),\n              },\n              {\n                label: 'Offset',\n                icon: VisibilityIcon,\n                type: 'radio',\n                checked: self.trackLabels === 'offset',\n                onClick: () => self.setTrackLabels('offset'),\n              },\n              {\n                label: 'Hidden',\n                icon: VisibilityIcon,\n                type: 'radio',\n                checked: self.trackLabels === 'hidden',\n                onClick: () => self.setTrackLabels('hidden'),\n              },\n            ],\n          },\n        ]\n\n        // add track's view level menu options\n        for (const [key, value] of self.trackTypeActions.entries()) {\n          if (value.length) {\n            menuItems.push(\n              { type: 'divider' },\n              { type: 'subHeader', label: key },\n            )\n            value.forEach(action => menuItems.push(action))\n          }\n        }\n\n        return menuItems\n      },\n    }))\n    .views(self => {\n      let currentlyCalculatedStaticBlocks: BlockSet | undefined\n      let stringifiedCurrentlyCalculatedStaticBlocks = ''\n      return {\n        /**\n         * #getter\n         * static blocks are an important concept jbrowse uses to avoid\n         * re-rendering when you scroll to the side. when you horizontally\n         * scroll to the right, old blocks to the left may be removed, and new\n         * blocks may be instantiated on the right. tracks may use the static\n         * blocks to render their data for the region represented by the block\n         */\n        get staticBlocks() {\n          const ret = calculateStaticBlocks(self)\n          const sret = JSON.stringify(ret)\n          if (stringifiedCurrentlyCalculatedStaticBlocks !== sret) {\n            currentlyCalculatedStaticBlocks = ret\n            stringifiedCurrentlyCalculatedStaticBlocks = sret\n          }\n          return currentlyCalculatedStaticBlocks as BlockSet\n        },\n        /**\n         * #getter\n         * dynamic blocks represent the exact coordinates of the currently\n         * visible genome regions on the screen. they are similar to static\n         * blocks, but static blocks can go offscreen while dynamic blocks\n         * represent exactly what is on screen\n         */\n        get dynamicBlocks() {\n          return calculateDynamicBlocks(self)\n        },\n        /**\n         * #getter\n         * rounded dynamic blocks are dynamic blocks without fractions of bp\n         */\n        get roundedDynamicBlocks() {\n          return this.dynamicBlocks.contentBlocks.map(\n            block =>\n              ({\n                ...block,\n                start: Math.floor(block.start),\n                end: Math.ceil(block.end),\n              } as BaseBlock),\n          )\n        },\n\n        /**\n         * #getter\n         * a single \"combo-locstring\" representing all the regions visible on\n         * the screen\n         */\n        get visibleLocStrings() {\n          return calculateVisibleLocStrings(this.dynamicBlocks.contentBlocks)\n        },\n\n        /**\n         * #getter\n         * same as visibleLocStrings, but only updated every 300ms\n         */\n        get coarseVisibleLocStrings() {\n          return calculateVisibleLocStrings(self.coarseDynamicBlocks)\n        },\n      }\n    })\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setCoarseDynamicBlocks(blocks: BlockSet) {\n        self.coarseDynamicBlocks = blocks.contentBlocks\n        self.coarseTotalBp = blocks.totalBp\n      },\n\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(\n            () => {\n              if (self.initialized) {\n                this.setCoarseDynamicBlocks(self.dynamicBlocks)\n              }\n            },\n            { delay: 150 },\n          ),\n        )\n\n        addDisposer(\n          self,\n          autorun(() => {\n            const s = (s: unknown) => JSON.stringify(s)\n            const { trackLabels, showCytobandsSetting, showCenterLine } = self\n            if (typeof localStorage !== 'undefined') {\n              localStorage.setItem('lgv-trackLabels', trackLabels)\n              localStorage.setItem('lgv-showCytobands', s(showCytobandsSetting))\n              localStorage.setItem('lgv-showCenterLine', s(showCenterLine))\n            }\n          }),\n        )\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       * offset is the base-pair-offset in the displayed region, index is the\n       * index of the displayed region in the linear genome view\n       *\n       * @param start - object as `{start, end, offset, index}`\n       * @param end - object as `{start, end, offset, index}`\n       */\n      moveTo(start?: BpOffset, end?: BpOffset) {\n        moveTo(self, start, end)\n      },\n\n      /**\n       * #action\n       * Navigate to the given locstring, will change displayed regions if\n       * needed, and wait for assemblies to be initialized\n       *\n       * @param input - e.g. \"chr1:1-100\", \"chr1:1-100 chr2:1-100\", \"chr 1 100\"\n       * @param optAssemblyName - (optional) the assembly name to use when\n       * navigating to the locstring\n       */\n      async navToLocString(input: string, optAssemblyName?: string) {\n        const { assemblyNames } = self\n        const { assemblyManager } = getSession(self)\n        const { isValidRefName } = assemblyManager\n        const assemblyName = optAssemblyName || assemblyNames[0]\n        if (assemblyName) {\n          // wait before isValidRefName can be called\n          await assemblyManager.waitForAssembly(assemblyName)\n        }\n\n        return this.navToLocations(\n          parseLocStrings(input, assemblyName, isValidRefName),\n          assemblyName,\n        )\n      },\n\n      /**\n       * #action\n       * Similar to `navToLocString`, but accepts parsed location objects\n       * instead of strings. Will try to perform `setDisplayedRegions` if\n       * changing regions\n       */\n      async navToLocations(\n        parsedLocStrings: ParsedLocString[],\n        assemblyName?: string,\n      ) {\n        const { assemblyManager } = getSession(self)\n        await when(() => self.volatileWidth !== undefined)\n\n        const locations = await generateLocations(\n          parsedLocStrings,\n          assemblyManager,\n          assemblyName,\n        )\n\n        if (locations.length === 1) {\n          const loc = locations[0]\n          const { reversed, parentRegion, start, end } = loc\n          self.setDisplayedRegions([{ reversed, ...parentRegion }])\n\n          this.navTo({\n            ...loc,\n            start: clamp(start ?? 0, 0, parentRegion.end),\n            end: clamp(end ?? parentRegion.end, 0, parentRegion.end),\n          })\n        } else {\n          self.setDisplayedRegions(\n            // @ts-expect-error\n            locations.map(r => (r.start === undefined ? r.parentRegion : r)),\n          )\n          self.showAllRegions()\n        }\n      },\n\n      /**\n       * #action\n       * Navigate to a location based on its refName and optionally start, end,\n       * and assemblyName. Will not try to change displayed regions, use\n       * `navToLocations` instead. Only navigates to a location if it is\n       * entirely within a displayedRegion. Navigates to the first matching\n       * location encountered.\n       *\n       * Throws an error if navigation was unsuccessful\n       *\n       * @param query - a proposed location to navigate to\n       */\n      navTo(query: NavLocation) {\n        this.navToMultiple([query])\n      },\n\n      /**\n       * #action\n       * Navigate to a location based on its refName and optionally start, end,\n       * and assemblyName. Will not try to change displayed regions, use\n       * navToLocations instead. Only navigates to a location if it is entirely\n       * within a displayedRegion. Navigates to the first matching location\n       * encountered.\n       *\n       * Throws an error if navigation was unsuccessful\n       *\n       * @param locations - proposed location to navigate to\n       */\n      navToMultiple(locations: NavLocation[]) {\n        if (\n          locations.some(\n            l =>\n              l.start !== undefined && l.end !== undefined && l.start > l.end,\n          )\n        ) {\n          throw new Error('found start greater than end')\n        }\n        const f1 = locations.at(0)\n        const f2 = locations.at(-1)\n        if (!f1 || !f2) {\n          return\n        }\n        const a = self.assemblyNames[0]\n        const { assemblyManager } = getSession(self)\n        const assembly1 = assemblyManager.get(f1.assemblyName || a)\n        const assembly2 = assemblyManager.get(f2.assemblyName || a)\n        const ref1 = assembly1?.getCanonicalRefName(f1.refName) || f1.refName\n        const ref2 = assembly2?.getCanonicalRefName(f2.refName) || f2.refName\n        const r1 = self.displayedRegions.find(r => r.refName === ref1)\n        const r2 = findLast(self.displayedRegions, r => r.refName === ref2)\n        if (!r1) {\n          throw new Error(`could not find a region with refName \"${ref1}\"`)\n        }\n        if (!r2) {\n          throw new Error(`could not find a region with refName \"${ref2}\"`)\n        }\n\n        const s1 = f1.start === undefined ? r1.start : f1.start\n        const e1 = f1.end === undefined ? r1.end : f1.end\n        const s2 = f2.start === undefined ? r2.start : f2.start\n        const e2 = f2.end === undefined ? r2.end : f2.end\n\n        const index = self.displayedRegions.findIndex(\n          r =>\n            ref1 === r.refName &&\n            s1 >= r.start &&\n            s1 <= r.end &&\n            e1 <= r.end &&\n            e1 >= r.start,\n        )\n\n        const index2 = self.displayedRegions.findIndex(\n          r =>\n            ref2 === r.refName &&\n            s2 >= r.start &&\n            s2 <= r.end &&\n            e2 <= r.end &&\n            e2 >= r.start,\n        )\n\n        if (index === -1 || index2 === -1) {\n          throw new Error(\n            `could not find a region that contained \"${locations.map(l =>\n              assembleLocString(l),\n            )}\"`,\n          )\n        }\n\n        const sd = self.displayedRegions[index]\n        const ed = self.displayedRegions[index2]\n\n        this.moveTo(\n          {\n            index,\n            offset: sd.reversed ? sd.end - e1 : s1 - sd.start,\n          },\n          {\n            index: index2,\n            offset: ed.reversed ? ed.end - s2 : e2 - ed.start,\n          },\n        )\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       */\n      rubberBandMenuItems(): MenuItem[] {\n        return [\n          {\n            label: 'Zoom to region',\n            icon: ZoomInIcon,\n            onClick: () => self.moveTo(self.leftOffset, self.rightOffset),\n          },\n          {\n            label: 'Get sequence',\n            icon: MenuOpenIcon,\n            onClick: () =>\n              getSession(self).queueDialog(handleClose => [\n                GetSequenceDialog,\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                { model: self as any, handleClose },\n              ]),\n          },\n        ]\n      },\n\n      /**\n       * #method\n       */\n      bpToPx({\n        refName,\n        coord,\n        regionNumber,\n      }: {\n        refName: string\n        coord: number\n        regionNumber?: number\n      }) {\n        return bpToPx({ refName, coord, regionNumber, self })\n      },\n\n      /**\n       * #method\n       * scrolls the view to center on the given bp. if that is not in any\n       * of the displayed regions, does nothing\n       * @param coord - basepair at which you want to center the view\n       * @param refName - refName of the displayedRegion you are centering at\n       * @param regionNumber - index of the displayedRegion\n       */\n      centerAt(coord: number, refName: string, regionNumber: number) {\n        const centerPx = this.bpToPx({\n          refName,\n          coord,\n          regionNumber,\n        })\n        if (centerPx !== undefined) {\n          self.scrollTo(Math.round(centerPx.offsetPx - self.width / 2))\n        }\n      },\n\n      /**\n       * #method\n       */\n      pxToBp(px: number) {\n        return pxToBp(self, px)\n      },\n\n      /**\n       * #getter\n       */\n      get centerLineInfo() {\n        return self.displayedRegions.length > 0\n          ? this.pxToBp(self.width / 2)\n          : undefined\n      },\n    }))\n}\n\nexport type LinearGenomeViewStateModel = ReturnType<typeof stateModelFactory>\nexport type LinearGenomeViewModel = Instance<LinearGenomeViewStateModel>\n\nexport {\n  default as ReactComponent,\n  default as LinearGenomeView,\n} from './components/LinearGenomeView'\n\nexport { default as RefNameAutocomplete } from './components/RefNameAutocomplete'\nexport { default as SearchBox } from './components/SearchBox'\nexport { default as ZoomControls } from './components/ZoomControls'\n\nexport { renderToSvg } from './svgcomponents/SVGLinearGenomeView'\n","import { lazy } from 'react'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { ViewType } from '@jbrowse/core/pluggableElementTypes'\nimport { stateModelFactory } from './model'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addViewType(() => {\n    return new ViewType({\n      name: 'LinearGenomeView',\n      displayName: 'Linear genome view',\n      stateModel: stateModelFactory(pluginManager),\n      ReactComponent: lazy(() => import('./components/LinearGenomeView')),\n    })\n  })\n}\n\nexport * from './model'\n","import React from 'react'\nimport { useTheme } from '@mui/material'\n\nexport default function SVGBackground({\n  width,\n  height,\n  shift,\n}: {\n  width: number\n  height: number\n  shift: number\n}) {\n  const theme = useTheme()\n  return (\n    <rect\n      width={width + shift * 2}\n      height={height}\n      fill={theme.palette.background.default}\n    />\n  )\n}\n","import React from 'react'\n\n// locals\nimport { LinearGenomeViewModel } from '..'\n\ntype LGV = LinearGenomeViewModel\n\n// SVG component, region separator\nexport default function SVGRegionSeparators({\n  model,\n  height,\n}: {\n  height: number\n  model: LGV\n}) {\n  const { dynamicBlocks, offsetPx, interRegionPaddingWidth } = model\n  return (\n    <>\n      {dynamicBlocks.contentBlocks.slice(1).map(block => (\n        <rect\n          key={block.key}\n          x={block.offsetPx - offsetPx - interRegionPaddingWidth}\n          width={interRegionPaddingWidth}\n          y={0}\n          height={height}\n          fill=\"grey\"\n        />\n      ))}\n    </>\n  )\n}\n","import React from 'react'\nimport { useTheme } from '@mui/material'\n\nexport default function SVGTrackLabel({\n  trackLabels,\n  trackName,\n  fontSize,\n  trackLabelOffset,\n  x,\n}: {\n  trackName: string\n  trackLabels: string\n  fontSize: number\n  trackLabelOffset: number\n  x: number\n}) {\n  const theme = useTheme()\n  const fill = theme.palette.text.primary\n  const xoff = trackLabels === 'overlay' ? 5 : 0\n  const yoff = trackLabels === 'offset' ? 5 : 0\n  return trackLabels !== 'none' ? (\n    <g>\n      {trackLabels === 'left' ? (\n        <text\n          x={trackLabelOffset - 40}\n          y={20}\n          fill={fill}\n          fontSize={fontSize}\n          dominantBaseline=\"hanging\"\n          textAnchor=\"end\"\n        >\n          {trackName}\n        </text>\n      ) : (\n        <text\n          x={x + xoff}\n          y={yoff}\n          fill={fill}\n          fontSize={fontSize}\n          dominantBaseline=\"hanging\"\n        >\n          {trackName}\n        </text>\n      )}\n    </g>\n  ) : null\n}\n","import React from 'react'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport { getSession } from '@jbrowse/core/util'\n// locals\nimport { LinearGenomeViewModel } from '..'\nimport SVGRegionSeparators from './SVGRegionSeparators'\nimport SVGTrackLabel from './SVGTrackLabel'\n\ntype LGV = LinearGenomeViewModel\n\ninterface DisplayResult {\n  track: {\n    configuration: AnyConfigurationModel\n    displays: { height: number }[]\n  }\n  result: string\n}\n\n// SVG component, tracks\nexport default function SVGTracks({\n  displayResults,\n  model,\n  offset,\n  textHeight,\n  fontSize,\n  trackLabels = 'offset',\n  trackLabelOffset = 0,\n}: {\n  displayResults: DisplayResult[]\n  model: LGV\n  offset: number\n  textHeight: number\n  fontSize: number\n  trackLabels?: string\n  trackLabelOffset?: number\n}) {\n  const session = getSession(model)\n  const textOffset = trackLabels === 'offset' ? textHeight : 0\n  return (\n    <>\n      {displayResults.map(({ track, result }) => {\n        const current = offset\n        const conf = track.configuration\n        const trackName = getTrackName(conf, session)\n        const display = track.displays[0]\n        const x = Math.max(-model.offsetPx, 0)\n        offset += display.height + textOffset\n        return (\n          <g key={conf.trackId} transform={`translate(0 ${current})`}>\n            <g transform={`translate(${trackLabelOffset} ${textOffset})`}>\n              <SVGRegionSeparators model={model} height={display.height} />\n              {result}\n            </g>\n            <SVGTrackLabel\n              trackName={trackName}\n              fontSize={fontSize}\n              trackLabels={trackLabels}\n              trackLabelOffset={trackLabelOffset}\n              x={x}\n            />\n          </g>\n        )\n      })}\n    </>\n  )\n}\n","import React from 'react'\nimport { getTickDisplayStr } from '@jbrowse/core/util'\nimport { useTheme } from '@mui/material'\n\n// locals\nimport { makeTicks } from '../util'\n\nimport { LinearGenomeViewModel } from '..'\nimport SVGRegionSeparators from './SVGRegionSeparators'\n\ntype LGV = LinearGenomeViewModel\n\nfunction Ruler({\n  start,\n  end,\n  bpPerPx,\n  reversed = false,\n  major = true,\n  minor = true,\n  hideText = false,\n}: {\n  start: number\n  end: number\n  bpPerPx: number\n  reversed?: boolean\n  major?: boolean\n  minor?: boolean\n  hideText?: boolean\n}) {\n  const ticks = makeTicks(start, end, bpPerPx, major, minor)\n  const theme = useTheme()\n  return (\n    <>\n      {ticks.map(tick => {\n        const x = (reversed ? end - tick.base : tick.base - start) / bpPerPx\n        return (\n          <line\n            key={tick.base}\n            x1={x}\n            x2={x}\n            y1={0}\n            y2={tick.type === 'major' ? 6 : 4}\n            strokeWidth={1}\n            stroke={theme.palette.text.secondary}\n          />\n        )\n      })}\n      {!hideText\n        ? ticks\n            .filter(tick => tick.type === 'major')\n            .map(tick => {\n              const x =\n                (reversed ? end - tick.base : tick.base - start) / bpPerPx\n              return (\n                <text\n                  x={x - 3}\n                  y={7 + 11}\n                  key={`label-${tick.base}`}\n                  fontSize={11}\n                  fill={theme.palette.text.primary}\n                >\n                  {getTickDisplayStr(tick.base + 1, bpPerPx)}\n                </text>\n              )\n            })\n        : null}\n    </>\n  )\n}\n\nexport default function SVGRuler({\n  model,\n  fontSize,\n}: {\n  model: LGV\n  fontSize: number\n}) {\n  const {\n    dynamicBlocks: { contentBlocks },\n    offsetPx: viewOffsetPx,\n    bpPerPx,\n  } = model\n  const renderRuler = contentBlocks.length < 5\n  const theme = useTheme()\n  return (\n    <>\n      <SVGRegionSeparators model={model} height={30} />\n      {contentBlocks.map(block => {\n        const { start, end, key, reversed, offsetPx, refName, widthPx } = block\n        const offset = offsetPx - viewOffsetPx\n        const clipid = `clip-${key}`\n        return (\n          <g key={key}>\n            <defs>\n              <clipPath id={clipid}>\n                <rect x={0} y={0} width={widthPx} height={100} />\n              </clipPath>\n            </defs>\n            <g transform={`translate(${offset} 0)`}>\n              <g clipPath={`url(#${clipid})`}>\n                <text\n                  x={4}\n                  y={fontSize}\n                  fontSize={fontSize}\n                  fill={theme.palette.text.primary}\n                >\n                  {refName}\n                </text>\n                <g transform=\"translate(0 20)\">\n                  <Ruler\n                    hideText={!renderRuler}\n                    start={start}\n                    end={end}\n                    bpPerPx={bpPerPx}\n                    reversed={reversed}\n                  />\n                </g>\n              </g>\n            </g>\n          </g>\n        )\n      })}\n    </>\n  )\n}\n","import React from 'react'\nimport { getBpDisplayStr } from '@jbrowse/core/util'\nimport { useTheme } from '@mui/material'\nimport { LinearGenomeViewModel } from '..'\n\ntype LGV = LinearGenomeViewModel\n\nexport default function SVGScalebar({\n  model,\n  fontSize,\n}: {\n  model: LGV\n  fontSize: number\n}) {\n  const {\n    offsetPx,\n    dynamicBlocks: { totalWidthPxWithoutBorders: totalWidthPx, totalBp },\n  } = model\n  const theme = useTheme()\n  const displayBp = getBpDisplayStr(totalBp)\n  const x0 = Math.max(-offsetPx, 0)\n  const x1 = x0 + totalWidthPx\n  return (\n    <>\n      <line\n        x1={x0}\n        x2={x1}\n        y1={10}\n        y2={10}\n        stroke={theme.palette.text.secondary}\n      />\n      <line\n        x1={x0}\n        x2={x0}\n        y1={5}\n        y2={15}\n        stroke={theme.palette.text.secondary}\n      />\n      <line\n        x1={x1}\n        x2={x1}\n        y1={5}\n        y2={15}\n        stroke={theme.palette.text.secondary}\n      />\n      <text\n        x={x0 + (x1 - x0) / 2}\n        y={fontSize * 2}\n        textAnchor=\"middle\"\n        fontSize={fontSize}\n        fill={theme.palette.text.primary}\n      >\n        {displayBp}\n      </text>\n    </>\n  )\n}\n","import React from 'react'\nimport { getSession } from '@jbrowse/core/util'\nimport Base1DView from '@jbrowse/core/util/Base1DViewModel'\nimport { useTheme } from '@mui/material'\n\n// locals\nimport { LinearGenomeViewModel, HEADER_OVERVIEW_HEIGHT } from '..'\nimport Cytobands from '../components/Cytobands'\nimport { Polygon } from '../components/OverviewScalebar'\nimport SVGRuler from './SVGRuler'\nimport SVGScalebar from './SVGScalebar'\n\nexport default function SVGHeader({\n  model,\n  fontSize,\n  cytobandHeight,\n  rulerHeight,\n}: {\n  model: LinearGenomeViewModel\n  rulerHeight: number\n  fontSize: number\n  cytobandHeight: number\n}) {\n  const { width, assemblyNames, showCytobands, displayedRegions } = model\n  const { assemblyManager } = getSession(model)\n  const assemblyName = assemblyNames.length > 1 ? '' : assemblyNames[0]\n  const assembly = assemblyManager.get(assemblyName)\n  const theme = useTheme()\n\n  const overview = Base1DView.create({\n    displayedRegions: JSON.parse(JSON.stringify(displayedRegions)),\n    interRegionPaddingWidth: 0,\n    minimumBlockWidth: model.minimumBlockWidth,\n  })\n  const visibleRegions = model.dynamicBlocks.contentBlocks\n  if (!visibleRegions.length) {\n    return null\n  }\n\n  overview.setVolatileWidth(width)\n  overview.showAllRegions()\n  const block = overview.dynamicBlocks.contentBlocks[0]\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const first = visibleRegions.at(0)!\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const last = visibleRegions.at(-1)!\n  const firstOverviewPx =\n    overview.bpToPx({\n      ...first,\n      coord: first.reversed ? first.end : first.start,\n    }) || 0\n\n  const lastOverviewPx =\n    overview.bpToPx({\n      ...last,\n      coord: last.reversed ? last.start : last.end,\n    }) || 0\n  const c = +showCytobands * cytobandHeight\n  return (\n    <g id=\"header\">\n      <text\n        x={0}\n        y={fontSize}\n        fontSize={fontSize}\n        fill={theme.palette.text.primary}\n      >\n        {assemblyName}\n      </text>\n\n      {showCytobands ? (\n        <g transform={`translate(0 ${rulerHeight})`}>\n          <Cytobands overview={overview} assembly={assembly} block={block} />\n          <rect\n            stroke=\"red\"\n            fill=\"rgb(255,0,0,0.1)\"\n            width={Math.max(lastOverviewPx - firstOverviewPx, 0.5)}\n            height={HEADER_OVERVIEW_HEIGHT - 1}\n            x={firstOverviewPx}\n            y={0.5}\n          />\n          <g transform={`translate(0,${HEADER_OVERVIEW_HEIGHT})`}>\n            <Polygon overview={overview} model={model} useOffset={false} />\n          </g>\n        </g>\n      ) : null}\n\n      <g transform={`translate(0 ${fontSize + c})`}>\n        <SVGScalebar model={model} fontSize={fontSize} />\n      </g>\n      <g transform={`translate(0 ${rulerHeight + c})`}>\n        <SVGRuler model={model} fontSize={fontSize} />\n      </g>\n    </g>\n  )\n}\n","import React from 'react'\nimport { renderToStaticMarkup } from 'react-dom/server'\nimport { when } from 'mobx'\nimport { getSession, max, measureText, sum } from '@jbrowse/core/util'\nimport { ThemeProvider } from '@mui/material'\nimport { createJBrowseTheme } from '@jbrowse/core/ui'\n\n// locals\nimport { LinearGenomeViewModel, ExportSvgOptions } from '..'\nimport SVGBackground from './SVGBackground'\nimport SVGTracks from './SVGTracks'\nimport SVGHeader from './SVGHeader'\n\nimport { getTrackName } from '@jbrowse/core/util/tracks'\n\ntype LGV = LinearGenomeViewModel\n\ninterface Display {\n  height: number\n}\ninterface Track {\n  displays: Display[]\n}\n\nexport function totalHeight(\n  tracks: Track[],\n  textHeight: number,\n  trackLabels: string,\n) {\n  return sum(\n    tracks.map(\n      t =>\n        t.displays[0].height +\n        (['none', 'left'].includes(trackLabels) ? 0 : textHeight),\n    ),\n  )\n}\n\n// render LGV to SVG\nexport async function renderToSvg(model: LGV, opts: ExportSvgOptions) {\n  await when(() => model.initialized)\n  const {\n    textHeight = 18,\n    headerHeight = 40,\n    rulerHeight = 50,\n    fontSize = 13,\n    cytobandHeight = 100,\n    trackLabels = 'offset',\n    themeName = 'default',\n    Wrapper = ({ children }) => <>{children}</>,\n  } = opts\n  const session = getSession(model)\n  const theme = session.allThemes?.()[themeName]\n  const { width, tracks, showCytobands } = model\n  const shift = 50\n  const c = +showCytobands * cytobandHeight\n  const offset = headerHeight + rulerHeight + c + 10\n  const height = totalHeight(tracks, textHeight, trackLabels) + offset + 100\n  const displayResults = await Promise.all(\n    tracks.map(async track => {\n      const display = track.displays[0]\n      await when(() => !display.renderProps().notReady)\n      return { track, result: await display.renderSvg({ ...opts, theme }) }\n    }),\n  )\n  const trackLabelMaxLen =\n    max(\n      tracks.map(t =>\n        measureText(getTrackName(t.configuration, session), fontSize),\n      ),\n      0,\n    ) + 40\n  const trackLabelOffset = trackLabels === 'left' ? trackLabelMaxLen : 0\n  const w = width + trackLabelOffset\n\n  // the xlink namespace is used for rendering <image> tag\n  return renderToStaticMarkup(\n    <ThemeProvider theme={createJBrowseTheme(theme)}>\n      <Wrapper>\n        <svg\n          width={w}\n          height={height}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n          viewBox={[0, 0, w + shift * 2, height].toString()}\n        >\n          <SVGBackground width={w} height={height} shift={shift} />\n          <g transform={`translate(${shift} 0)`}>\n            <g transform={`translate(${trackLabelOffset})`}>\n              <SVGHeader\n                model={model}\n                fontSize={fontSize}\n                rulerHeight={rulerHeight}\n                cytobandHeight={cytobandHeight}\n              />\n            </g>\n            <SVGTracks\n              textHeight={textHeight}\n              fontSize={fontSize}\n              model={model}\n              displayResults={displayResults}\n              offset={offset}\n              trackLabels={trackLabels}\n              trackLabelOffset={trackLabelOffset}\n            />\n          </g>\n        </svg>\n      </Wrapper>\n    </ThemeProvider>,\n  )\n}\n\nexport { default as SVGRuler } from './SVGRuler'\nexport { default as SVGTracks } from './SVGTracks'\n","import {\n  AssemblyManager,\n  ParsedLocString,\n  parseLocString,\n} from '@jbrowse/core/util'\n\n/**\n * Given a scale ( bp/px ) and minimum distances (px) between major and minor\n * gridlines, return an object like `{ majorPitch: bp, minorPitch: bp }` giving\n * the gridline pitches to use.\n */\nexport function chooseGridPitch(\n  scale: number,\n  minMajorPitchPx: number,\n  minMinorPitchPx: number,\n) {\n  scale = Math.abs(scale)\n  const minMajorPitchBp = minMajorPitchPx * scale\n  const majorMagnitude = Number.parseInt(\n    Number(minMajorPitchBp).toExponential().split(/e/i)[1],\n    10,\n  )\n\n  let majorPitch = 10 ** majorMagnitude\n  while (majorPitch < minMajorPitchBp) {\n    majorPitch *= 2\n    if (majorPitch >= minMajorPitchBp) {\n      break\n    }\n    majorPitch *= 2.5\n  }\n\n  majorPitch = Math.max(majorPitch, 5)\n\n  const majorPitchPx = majorPitch / scale\n\n  let minorPitch = 0\n  if (!(majorPitch % 10) && majorPitchPx / 10 >= minMinorPitchPx) {\n    minorPitch = majorPitch / 10\n  } else if (!(majorPitch % 5) && majorPitchPx / 5 >= minMinorPitchPx) {\n    minorPitch = majorPitch / 5\n  } else if (!(majorPitch % 2) && majorPitchPx / 2 >= minMinorPitchPx) {\n    minorPitch = majorPitch / 2\n  }\n\n  return { majorPitch, minorPitch }\n}\n\nexport function makeTicks(\n  start: number,\n  end: number,\n  bpPerPx: number,\n  emitMajor = true,\n  emitMinor = true,\n) {\n  const gridPitch = chooseGridPitch(bpPerPx, 60, 15)\n\n  let minBase = start\n  let maxBase = end\n  if (minBase === null || maxBase === null) {\n    return []\n  }\n\n  if (bpPerPx < 0) {\n    ;[minBase, maxBase] = [maxBase, minBase]\n  }\n\n  // add 20px additional on the right and left to allow us to draw the ends\n  // of labels that lie a little outside our region\n  minBase -= Math.abs(20 * bpPerPx) - 1\n  maxBase += Math.abs(20 * bpPerPx) + 1\n\n  const iterPitch = gridPitch.minorPitch || gridPitch.majorPitch\n  let index = 0\n  const ticks = []\n  for (\n    let base = Math.floor(minBase / iterPitch) * iterPitch;\n    base < Math.ceil(maxBase / iterPitch) * iterPitch + 1;\n    base += iterPitch\n  ) {\n    if (emitMinor && base % (gridPitch.majorPitch * 2)) {\n      ticks.push({ type: 'minor', base: base - 1, index })\n      index += 1\n    } else if (emitMajor && !(base % (gridPitch.majorPitch * 2))) {\n      ticks.push({ type: 'major', base: base - 1, index })\n      index += 1\n    }\n  }\n  return ticks\n}\n\n/**\n * Generate location objects for a set of parsed locstrings, which includes\n * translating the refNames to assembly-canonical refNames and adding the\n * 'parentRegion'\n *\n * Used by navToLocations and navToLocString\n */\nexport async function generateLocations(\n  regions: ParsedLocString[] = [],\n  assemblyManager: AssemblyManager,\n  assemblyName?: string,\n) {\n  return Promise.all(\n    regions.map(async region => {\n      const asmName = region.assemblyName || assemblyName\n      if (!asmName) {\n        throw new Error('no assembly provided')\n      }\n      const asm = await assemblyManager.waitForAssembly(asmName)\n      const { refName } = region\n      if (!asm) {\n        throw new Error(`assembly ${asmName} not found`)\n      }\n      const { regions } = asm\n      if (!regions) {\n        throw new Error(`regions not loaded yet for ${asmName}`)\n      }\n      const canonicalRefName = asm.getCanonicalRefName(region.refName)\n      if (!canonicalRefName) {\n        throw new Error(`Could not find refName ${refName} in ${asm.name}`)\n      }\n      const parentRegion = regions.find(r => r.refName === canonicalRefName)\n      if (!parentRegion) {\n        throw new Error(`Could not find refName ${refName} in ${asmName}`)\n      }\n\n      return {\n        ...(region as Omit<typeof region, symbol>),\n        assemblyName: asmName,\n        parentRegion,\n      }\n    }),\n  )\n}\n\n/**\n * Parses locString or space separated set of locStrings into location objects\n * Example inputs:\n * \"chr1\"\n * \"chr1:1-100\"\n * \"chr1:1..100\"\n * \"chr1 chr2\"\n * \"chr1:1-100 chr2:1-100\"\n * \"chr1 100 200\" equivalent to \"chr1:1-100\"\n *\n * Used by navToLocString\n */\nexport function parseLocStrings(\n  input: string,\n  assemblyName: string,\n  isValidRefName: (str: string, assemblyName: string) => boolean,\n) {\n  const inputs = input\n    .split(/(\\s+)/)\n    .map(f => f.trim())\n    .filter(f => !!f)\n  // first try interpreting as a whitespace-separated sequence of\n  // multiple locstrings\n  try {\n    return inputs.map(loc =>\n      parseLocString(loc, ref => isValidRefName(ref, assemblyName)),\n    )\n  } catch (e) {\n    // if this fails, try interpreting as a whitespace-separated refname,\n    // start, end if start and end are integer inputs\n    const [refName, start, end] = inputs\n    if (\n      `${e}`.match(/Unknown reference sequence/) &&\n      Number.isInteger(+start) &&\n      Number.isInteger(+end)\n    ) {\n      return [\n        parseLocString(refName + ':' + start + '..' + end, ref =>\n          isValidRefName(ref, assemblyName),\n        ),\n      ]\n    } else {\n      throw e\n    }\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config BaseLinearDisplay\n * #category display\n * `BaseLinearDisplay` is a \"base\" config that is extended by classes like\n * `LinearBasicDisplay` (used for feature tracks, etc) and `LinearBareDisplay`\n * (more stripped down than even the basic display, not commonly used)\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst baseLinearDisplayConfigSchema = ConfigurationSchema(\n  'BaseLinearDisplay',\n  {\n    /**\n     * #slot\n     */\n    maxFeatureScreenDensity: {\n      type: 'number',\n      description:\n        'maximum features per pixel that is displayed in the view, used if byte size estimates not available',\n      defaultValue: 0.3,\n    },\n    /**\n     * #slot\n     */\n    fetchSizeLimit: {\n      type: 'number',\n      defaultValue: 1_000_000,\n      description:\n        \"maximum data to attempt to download for a given track, used if adapter doesn't specify one\",\n    },\n    /**\n     * #slot\n     */\n    height: {\n      type: 'number',\n      defaultValue: 100,\n      description: 'default height for the track',\n    },\n    /**\n     * #slot\n     */\n    mouseover: {\n      type: 'string',\n      description: 'text to display when the cursor hovers over a feature',\n      defaultValue: `jexl:get(feature,'name')`,\n\n      contextVariable: ['feature'],\n    },\n  },\n  {\n    /**\n     * #identifier\n     */\n    explicitIdentifier: 'displayId',\n  },\n)\n\nexport default baseLinearDisplayConfigSchema\n","// takes an array or Map or Set (anything iterable with values()) of Maps\n// and lets you query them as one Map\nexport default class CompositeMap<T, U> {\n  constructor(private submaps: Map<T, U>[]) {}\n\n  has(id: T) {\n    for (const submap of this.submaps.values()) {\n      if (submap.has(id)) {\n        return true\n      }\n    }\n    return false\n  }\n\n  get(id: T) {\n    for (const submap of this.submaps.values()) {\n      if (submap.has(id)) {\n        return submap.get(id)\n      }\n    }\n    return undefined\n  }\n\n  *values() {\n    for (const key of this.keys()) {\n      yield this.get(key) as U\n    }\n  }\n\n  *keys() {\n    const keys = new Set<T>()\n    for (const submap of this.submaps.values()) {\n      for (const key of submap.keys()) {\n        keys.add(key)\n      }\n    }\n    for (const key of keys) {\n      yield key\n    }\n  }\n\n  find<V>(f: (arg0: U) => V) {\n    for (const submap of this.submaps.values()) {\n      for (const value of submap.values()) {\n        const found = f(value)\n        if (found) {\n          return value\n        }\n      }\n    }\n    return undefined\n  }\n\n  *[Symbol.iterator]() {\n    for (const key of this.keys()) {\n      yield [key, this.get(key)]\n    }\n  }\n\n  *entries() {\n    for (const k of this.keys()) {\n      yield [k, this.get(k)]\n    }\n  }\n}\n","import React from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { getContainingView } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\nimport {\n  ContentBlock,\n  ElidedBlock,\n  InterRegionPaddingBlock,\n} from '@jbrowse/core/util/blockTypes'\nimport { BaseLinearDisplayModel } from '../models/BaseLinearDisplayModel'\n\nimport {\n  ContentBlock as ContentBlockComponent,\n  ElidedBlock as ElidedBlockComponent,\n  InterRegionPaddingBlock as InterRegionPaddingBlockComponent,\n} from './Block'\nimport { LinearGenomeViewModel } from '../../LinearGenomeView'\n\ntype LGV = LinearGenomeViewModel\n\nconst useStyles = makeStyles()({\n  linearBlocks: {\n    whiteSpace: 'nowrap',\n    textAlign: 'left',\n    position: 'absolute',\n    minHeight: '100%',\n    display: 'flex',\n  },\n  heightOverflowed: {\n    position: 'absolute',\n    color: 'rgb(77,77,77)',\n    borderBottom: '2px solid rgb(77,77,77)',\n    textShadow: 'white 0px 0px 1px',\n    whiteSpace: 'nowrap',\n    width: '100%',\n    fontWeight: 'bold',\n    textAlign: 'center',\n    zIndex: 2000,\n    boxSizing: 'border-box',\n  },\n})\n\nconst RenderedBlocks = observer(function ({\n  model,\n}: {\n  model: BaseLinearDisplayModel\n}) {\n  const { classes } = useStyles()\n  const { blockDefinitions, blockState } = model\n  return (\n    <>\n      {blockDefinitions.map(block => {\n        if (block instanceof ContentBlock) {\n          const state = blockState.get(block.key)\n\n          return (\n            <ContentBlockComponent\n              block={block}\n              key={`${model.id}-${block.key}`}\n            >\n              {state && state.ReactComponent ? (\n                <state.ReactComponent model={state} />\n              ) : null}\n              {state && state.maxHeightReached ? (\n                <div\n                  className={classes.heightOverflowed}\n                  style={{\n                    top: state.layout.getTotalHeight() - 16,\n                    pointerEvents: 'none',\n                    height: 16,\n                  }}\n                >\n                  Max height reached\n                </div>\n              ) : null}\n            </ContentBlockComponent>\n          )\n        }\n        if (block instanceof ElidedBlock) {\n          return (\n            <ElidedBlockComponent\n              key={`${model.id}-${block.key}`}\n              width={block.widthPx}\n            />\n          )\n        }\n        if (block instanceof InterRegionPaddingBlock) {\n          return (\n            <InterRegionPaddingBlockComponent\n              key={block.key}\n              width={block.widthPx}\n              style={{ background: 'none' }}\n              boundary={block.variant === 'boundary'}\n            />\n          )\n        }\n        throw new Error(`invalid block type ${typeof block}`)\n      })}\n    </>\n  )\n})\nfunction LinearBlocks({ model }: { model: BaseLinearDisplayModel }) {\n  const { classes } = useStyles()\n  const { blockDefinitions } = model\n  const viewModel = getContainingView(model) as LGV\n  return (\n    <div\n      className={classes.linearBlocks}\n      style={{\n        left: blockDefinitions.offsetPx - viewModel.offsetPx,\n      }}\n    >\n      <RenderedBlocks model={model} />\n    </div>\n  )\n}\n\nexport { RenderedBlocks, useStyles }\nexport default observer(LinearBlocks)\n","import React, { useState, useMemo } from 'react'\nimport { getConf } from '@jbrowse/core/configuration'\nimport { SanitizedHTML } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\nimport { Portal, alpha } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { usePopper } from 'react-popper'\n\n// locals\nimport { BaseLinearDisplayModel } from '../models/BaseLinearDisplayModel'\n\nfunction round(value: number) {\n  return Math.round(value * 1e5) / 1e5\n}\nconst useStyles = makeStyles()(theme => ({\n  // these styles come from\n  // https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/Tooltip/Tooltip.js\n  tooltip: {\n    pointerEvents: 'none',\n    backgroundColor: alpha(theme.palette.grey[700], 0.9),\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.common.white,\n    fontFamily: theme.typography.fontFamily,\n    padding: '4px 8px',\n    fontSize: theme.typography.pxToRem(12),\n    lineHeight: `${round(14 / 10)}em`,\n    maxWidth: 300,\n    wordWrap: 'break-word',\n  },\n}))\n\nconst TooltipContents = React.forwardRef<\n  HTMLDivElement,\n  { message: React.ReactNode | string }\n>(({ message }: { message: React.ReactNode | string }, ref) => {\n  return (\n    <div ref={ref}>\n      {React.isValidElement(message) ? (\n        message\n      ) : message ? (\n        <SanitizedHTML html={String(message)} />\n      ) : null}\n    </div>\n  )\n})\n\ntype Coord = [number, number]\nconst Tooltip = observer(\n  ({\n    model,\n    clientMouseCoord,\n  }: {\n    model: BaseLinearDisplayModel\n    clientMouseCoord: Coord\n  }) => {\n    const { classes } = useStyles()\n    const { featureUnderMouse } = model\n    const [width, setWidth] = useState(0)\n    const [popperElt, setPopperElt] = useState<HTMLDivElement | null>(null)\n\n    // must be memoized a la https://github.com/popperjs/react-popper/issues/391\n    const virtElement = useMemo(\n      () => ({\n        getBoundingClientRect: () => {\n          const x = clientMouseCoord[0] + width / 2 + 20\n          const y = clientMouseCoord[1]\n          return {\n            top: y,\n            left: x,\n            bottom: y,\n            right: x,\n            width: 0,\n            height: 0,\n            x,\n            y,\n            toJSON() {},\n          }\n        },\n      }),\n      [clientMouseCoord, width],\n    )\n    const { styles, attributes } = usePopper(virtElement, popperElt)\n\n    const contents = featureUnderMouse\n      ? getConf(model, 'mouseover', { feature: featureUnderMouse })\n      : undefined\n\n    return featureUnderMouse && contents ? (\n      <Portal>\n        <div\n          ref={setPopperElt}\n          className={classes.tooltip}\n          // zIndex needed to go over widget drawer\n          style={{ ...styles.popper, zIndex: 100000 }}\n          {...attributes.popper}\n        >\n          <TooltipContents\n            ref={elt => setWidth(elt?.getBoundingClientRect().width || 0)}\n            message={contents}\n          />\n        </div>\n      </Portal>\n    ) : null\n  },\n)\n\nexport default Tooltip\n","import React from 'react'\nimport { Tooltip, Button, Alert, AlertColor } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()({\n  ellipses: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n  },\n})\n\nexport default function BlockMsg({\n  message,\n  severity,\n  buttonText,\n  icon,\n  action,\n}: {\n  message: string\n  severity?: AlertColor\n  buttonText?: string\n  icon?: React.ReactNode\n  action?: () => void\n}) {\n  const { classes } = useStyles()\n  const button = action ? (\n    <Button data-testid=\"reload_button\" onClick={action} startIcon={icon}>\n      {buttonText}\n    </Button>\n  ) : null\n  return (\n    <Alert\n      severity={severity}\n      action={button}\n      classes={{ message: classes.ellipses }}\n    >\n      <Tooltip title={message}>\n        <div>{message}</div>\n      </Tooltip>\n    </Alert>\n  )\n}\n","import React, { useState, useRef } from 'react'\nimport { observer } from 'mobx-react'\nimport { useTheme } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { getConf } from '@jbrowse/core/configuration'\nimport { Menu } from '@jbrowse/core/ui'\n\n// locals\n\nimport LinearBlocks from './LinearBlocks'\nimport { BaseLinearDisplayModel } from '../models/BaseLinearDisplayModel'\n\nconst useStyles = makeStyles()({\n  display: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    textAlign: 'left',\n    width: '100%',\n    minHeight: '100%',\n  },\n})\n\ntype Coord = [number, number]\nconst BaseLinearDisplay = observer(function (props: {\n  model: BaseLinearDisplayModel\n  children?: React.ReactNode\n}) {\n  const { classes } = useStyles()\n  const theme = useTheme()\n  const ref = useRef<HTMLDivElement>(null)\n  const [clientRect, setClientRect] = useState<DOMRect>()\n  const [offsetMouseCoord, setOffsetMouseCoord] = useState<Coord>([0, 0])\n  const [clientMouseCoord, setClientMouseCoord] = useState<Coord>([0, 0])\n  const [contextCoord, setContextCoord] = useState<Coord>()\n  const { model, children } = props\n  const {\n    TooltipComponent,\n    DisplayMessageComponent,\n    contextMenuItems,\n    height,\n    setContextMenuFeature,\n  } = model\n\n  return (\n    <div\n      ref={ref}\n      data-testid={`display-${getConf(model, 'displayId')}`}\n      className={classes.display}\n      onContextMenu={event => {\n        event.preventDefault()\n        if (contextCoord) {\n          // There's already a context menu open, so close it\n          setContextCoord(undefined)\n        } else if (ref.current) {\n          setContextCoord([event.clientX, event.clientY])\n        }\n      }}\n      onMouseMove={event => {\n        if (!ref.current) {\n          return\n        }\n        const rect = ref.current.getBoundingClientRect()\n        const { left, top } = rect\n        setOffsetMouseCoord([event.clientX - left, event.clientY - top])\n        setClientMouseCoord([event.clientX, event.clientY])\n        setClientRect(rect)\n      }}\n    >\n      {DisplayMessageComponent ? (\n        <DisplayMessageComponent model={model} />\n      ) : (\n        <LinearBlocks {...props} />\n      )}\n      {children}\n\n      <TooltipComponent\n        model={model}\n        height={height}\n        offsetMouseCoord={offsetMouseCoord}\n        clientMouseCoord={clientMouseCoord}\n        clientRect={clientRect}\n        mouseCoord={offsetMouseCoord}\n      />\n\n      <Menu\n        open={Boolean(contextCoord) && Boolean(contextMenuItems().length)}\n        onMenuItemClick={(_, callback) => {\n          callback()\n          setContextCoord(undefined)\n        }}\n        onClose={() => {\n          setContextCoord(undefined)\n          setContextMenuFeature(undefined)\n        }}\n        TransitionProps={{\n          onExit: () => {\n            setContextCoord(undefined)\n            setContextMenuFeature(undefined)\n          },\n        }}\n        anchorReference=\"anchorPosition\"\n        anchorPosition={\n          contextCoord\n            ? { top: contextCoord[1], left: contextCoord[0] }\n            : undefined\n        }\n        style={{ zIndex: theme.zIndex.tooltip }}\n        menuItems={contextMenuItems()}\n      />\n    </div>\n  )\n})\n\nexport default BaseLinearDisplay\n\nexport { default as Tooltip } from './Tooltip'\nexport { default as BlockMsg } from './BlockMsg'\n","import React from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { getParent } from 'mobx-state-tree'\nimport { LoadingEllipses } from '@jbrowse/core/ui'\n\n// icons\nimport RefreshIcon from '@mui/icons-material/Refresh'\n\n// locals\nimport BlockMsg from './BlockMsg'\n\nconst useStyles = makeStyles()(theme => {\n  const bg = theme.palette.action.disabledBackground\n  return {\n    loading: {\n      paddingLeft: '0.6em',\n      backgroundColor: theme.palette.background.default,\n      backgroundImage: `repeating-linear-gradient(45deg, transparent, transparent 5px, ${bg} 5px, ${bg} 10px)`,\n      textAlign: 'center',\n    },\n  }\n})\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst LoadingMessage = observer(({ model }: { model: any }) => {\n  const { classes } = useStyles()\n  const { status: blockStatus } = model\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const { message: displayStatus } = getParent<any>(model, 2)\n  const status = displayStatus || blockStatus\n  return (\n    <div className={classes.loading}>\n      <LoadingEllipses message={status} />\n    </div>\n  )\n})\n\nconst ServerSideRenderedBlockContent = observer(function ({\n  model,\n}: {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  model: any\n}) {\n  if (model.error) {\n    return (\n      <BlockMsg\n        message={`${model.error}`}\n        severity=\"error\"\n        buttonText=\"reload\"\n        icon={<RefreshIcon />}\n        action={model.reload}\n      />\n    )\n  } else if (model.message) {\n    // the message can be a fully rendered react component, e.g. the region too large message\n    return React.isValidElement(model.message) ? (\n      model.message\n    ) : (\n      <BlockMsg message={`${model.message}`} severity=\"info\" />\n    )\n  } else if (!model.filled) {\n    return <LoadingMessage model={model} />\n  } else {\n    return model.reactElement\n  }\n})\n\nexport default ServerSideRenderedBlockContent\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react'\nimport {\n  types,\n  getParent,\n  isAlive,\n  cast,\n  Instance,\n  getSnapshot,\n} from 'mobx-state-tree'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport {\n  assembleLocString,\n  getSession,\n  getContainingDisplay,\n  getContainingView,\n  getViewParams,\n  makeAbortableReaction,\n  Feature,\n} from '@jbrowse/core/util'\nimport { Region } from '@jbrowse/core/util/types/mst'\nimport {\n  AbstractDisplayModel,\n  isRetryException,\n} from '@jbrowse/core/util/types'\n\nimport {\n  getTrackAssemblyNames,\n  getRpcSessionId,\n} from '@jbrowse/core/util/tracks'\n\n// locals\nimport ServerSideRenderedBlockContent from '../components/ServerSideRenderedBlockContent'\n\n// the MST state of a single server-side-rendered block in a display\nconst blockState = types\n  .model('BlockState', {\n    key: types.string,\n    region: Region,\n    reloadFlag: 0,\n    isLeftEndOfDisplayedRegion: false,\n    isRightEndOfDisplayedRegion: false,\n  })\n  // NOTE: all this volatile stuff has to be filled in at once, so that it stays consistent\n  .volatile(() => ({\n    renderInProgress: undefined as AbortController | undefined,\n    filled: false,\n    reactElement: undefined as React.ReactElement | undefined,\n    features: undefined as Map<string, Feature> | undefined,\n    layout: undefined as any,\n    status: '',\n    error: undefined as unknown,\n    message: undefined as string | undefined,\n    maxHeightReached: false,\n    ReactComponent: ServerSideRenderedBlockContent,\n    renderProps: undefined as any,\n  }))\n  .actions(self => {\n    let renderInProgress: undefined | AbortController\n    return {\n      doReload() {\n        self.reloadFlag = self.reloadFlag + 1\n      },\n      afterAttach() {\n        const display = getContainingDisplay(self)\n        setTimeout(() => {\n          if (isAlive(self)) {\n            makeAbortableReaction(\n              self as any,\n              renderBlockData,\n              renderBlockEffect, // reaction doesn't expect async here\n              {\n                name: `${display.id}/${assembleLocString(\n                  self.region,\n                )} rendering`,\n                delay: display.renderDelay,\n                fireImmediately: true,\n              },\n              this.setLoading,\n              this.setRendered,\n              this.setError,\n            )\n          }\n        }, display.renderDelay)\n      },\n      setStatus(message: string) {\n        self.status = message\n      },\n      setLoading(abortController: AbortController) {\n        if (\n          renderInProgress !== undefined &&\n          !renderInProgress.signal.aborted\n        ) {\n          renderInProgress.abort()\n        }\n        self.filled = false\n        self.message = undefined\n        self.reactElement = undefined\n        self.features = undefined\n        self.layout = undefined\n        self.error = undefined\n        self.maxHeightReached = false\n        self.renderProps = undefined\n        renderInProgress = abortController\n      },\n      setMessage(messageText: string) {\n        if (renderInProgress && !renderInProgress.signal.aborted) {\n          renderInProgress.abort()\n        }\n        self.filled = false\n        self.message = messageText\n        self.reactElement = undefined\n        self.features = undefined\n        self.layout = undefined\n        self.error = undefined\n        self.maxHeightReached = false\n        self.renderProps = undefined\n        renderInProgress = undefined\n      },\n      setRendered(\n        props:\n          | {\n              reactElement: React.ReactElement\n              features: Map<string, Feature>\n              layout: any\n              maxHeightReached: boolean\n              renderProps: any\n            }\n          | undefined,\n      ) {\n        if (!props) {\n          return\n        }\n        const {\n          reactElement,\n          features,\n          layout,\n          maxHeightReached,\n          renderProps,\n        } = props\n        self.filled = true\n        self.message = undefined\n        self.reactElement = reactElement\n        self.features = features\n        self.layout = layout\n        self.error = undefined\n        self.maxHeightReached = maxHeightReached\n        self.renderProps = renderProps\n        renderInProgress = undefined\n      },\n      setError(error: unknown) {\n        console.error(error)\n        if (renderInProgress && !renderInProgress.signal.aborted) {\n          renderInProgress.abort()\n        }\n        // the rendering failed for some reason\n        self.filled = false\n        self.message = undefined\n        self.reactElement = undefined\n        self.features = undefined\n        self.layout = undefined\n        self.maxHeightReached = false\n        self.error = error\n        self.renderProps = undefined\n        renderInProgress = undefined\n        if (isRetryException(error as Error)) {\n          this.reload()\n        }\n      },\n      reload() {\n        self.renderInProgress = undefined\n        self.filled = false\n        self.reactElement = undefined\n        self.features = undefined\n        self.layout = undefined\n        self.error = undefined\n        self.message = undefined\n        self.maxHeightReached = false\n        self.ReactComponent = ServerSideRenderedBlockContent\n        self.renderProps = undefined\n        getParent<any>(self, 2).reload()\n      },\n      beforeDestroy() {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        ;(async () => {\n          try {\n            if (renderInProgress && !renderInProgress.signal.aborted) {\n              renderInProgress.abort()\n            }\n            const display = getContainingDisplay(self)\n            const { rpcManager } = getSession(self)\n            const { rendererType } = display\n            const { renderArgs } = renderBlockData(cast(self))\n            // renderArgs can be undefined if an error occurred in this block\n            if (renderArgs) {\n              await rendererType.freeResourcesInClient(\n                rpcManager,\n                JSON.parse(JSON.stringify(renderArgs)),\n              )\n            }\n          } catch (e) {\n            console.error('Error while destroying block', e)\n          }\n        })()\n      },\n    }\n  })\n\nexport default blockState\nexport type BlockStateModel = typeof blockState\nexport type BlockModel = Instance<BlockStateModel>\n\n// calls the render worker to render the block content not using a flow for\n// this, because the flow doesn't work with autorun\nexport function renderBlockData(\n  self: BlockModel,\n  optDisplay?: AbstractDisplayModel,\n) {\n  try {\n    const display = optDisplay || (getContainingDisplay(self) as any)\n    const { assemblyManager, rpcManager } = getSession(display)\n    const { adapterConfig, rendererType, error, parentTrack } = display\n    const assemblyNames = getTrackAssemblyNames(parentTrack)\n    const regionAsm = self.region.assemblyName\n    if (\n      !assemblyNames.includes(regionAsm) &&\n      !assemblyNames.some(name => assemblyManager.get(name)?.hasName(regionAsm))\n    ) {\n      throw new Error(\n        `region assembly (${regionAsm}) does not match track assemblies (${assemblyNames})`,\n      )\n    }\n\n    const renderProps = display.renderProps()\n    const { config } = renderProps\n\n    // This line is to trigger the mobx reaction when the config changes\n    // It won't trigger the reaction if it doesn't think we're accessing it\n    readConfObject(config)\n\n    const sessionId = getRpcSessionId(display)\n    const layoutId = getContainingView(display).id\n    const cannotBeRenderedReason = display.regionCannotBeRendered(self.region)\n\n    return {\n      rendererType,\n      rpcManager,\n      renderProps,\n      cannotBeRenderedReason,\n      displayError: error,\n      renderArgs: {\n        statusCallback: (message: string) => {\n          if (isAlive(self)) {\n            self.setStatus(message)\n          }\n        },\n        assemblyName: self.region.assemblyName,\n        regions: [getSnapshot(self.region)],\n        adapterConfig,\n        rendererType: rendererType.name,\n        sessionId,\n        layoutId,\n        blockKey: self.key,\n        reloadFlag: self.reloadFlag,\n        timeout: 1000000, // 10000,\n      },\n    }\n  } catch (e) {\n    return { displayError: e }\n  }\n}\n\nasync function renderBlockEffect(\n  props: ReturnType<typeof renderBlockData> | undefined,\n  signal: AbortSignal,\n  self: BlockModel,\n) {\n  if (!props) {\n    return\n  }\n  const {\n    rendererType,\n    renderProps,\n    rpcManager,\n    renderArgs,\n    cannotBeRenderedReason,\n    displayError,\n  } = props\n  if (!isAlive(self)) {\n    return undefined\n  }\n\n  if (displayError) {\n    self.setError(displayError)\n    return undefined\n  }\n  if (cannotBeRenderedReason) {\n    self.setMessage(cannotBeRenderedReason)\n    return undefined\n  }\n\n  if (renderProps.notReady) {\n    return undefined\n  }\n\n  const { reactElement, features, layout, maxHeightReached } =\n    await rendererType.renderInClient(rpcManager, {\n      ...renderArgs,\n      ...renderProps,\n      viewParams: getViewParams(self),\n      signal,\n    })\n  return {\n    reactElement,\n    features,\n    layout,\n    maxHeightReached,\n    renderProps,\n  }\n}\n","import { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { FeatureDensityStats } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { getContainingView, getSession } from '@jbrowse/core/util'\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks'\nimport { IAnyStateTreeNode, isAlive } from 'mobx-state-tree'\nimport { LinearGenomeViewModel } from '../../LinearGenomeView'\n\nexport interface RenderProps {\n  rendererType: any // eslint-disable-line @typescript-eslint/no-explicit-any\n  renderArgs: { [key: string]: any } // eslint-disable-line @typescript-eslint/no-explicit-any\n  renderProps: { [key: string]: any } // eslint-disable-line @typescript-eslint/no-explicit-any\n  displayError: unknown\n  rpcManager: { call: Function }\n  cannotBeRenderedReason: string\n}\n\nexport interface ErrorProps {\n  displayError: string\n}\n\nexport function getDisplayStr(totalBytes: number) {\n  let displayBp\n  if (Math.floor(totalBytes / 1000000) > 0) {\n    displayBp = `${Number.parseFloat((totalBytes / 1000000).toPrecision(3))} Mb`\n  } else if (Math.floor(totalBytes / 1000) > 0) {\n    displayBp = `${Number.parseFloat((totalBytes / 1000).toPrecision(3))} Kb`\n  } else {\n    displayBp = `${Math.floor(totalBytes)} bytes`\n  }\n  return displayBp\n}\n\n// stabilize clipid under test for snapshot\nexport function getId(id: string, index: number) {\n  const isJest = typeof jest === 'undefined'\n  return `clip-${isJest ? id : 'jest'}-${index}`\n}\n\nexport async function getFeatureDensityStatsPre(\n  self: IAnyStateTreeNode & {\n    adapterConfig?: AnyConfigurationModel\n    setMessage: (arg: string) => void\n  },\n) {\n  const view = getContainingView(self) as LinearGenomeViewModel\n  const regions = view.staticBlocks.contentBlocks\n\n  const { rpcManager } = getSession(self)\n  const { adapterConfig } = self\n  if (!adapterConfig) {\n    // A track extending the base track might not have an adapter config\n    // e.g. Apollo tracks don't use adapters\n    return {}\n  }\n  const sessionId = getRpcSessionId(self)\n\n  return rpcManager.call(sessionId, 'CoreGetFeatureDensityStats', {\n    sessionId,\n    regions,\n    adapterConfig,\n    statusCallback: (message: string) => {\n      if (isAlive(self)) {\n        self.setMessage(message)\n      }\n    },\n  }) as Promise<FeatureDensityStats>\n}\n","import React from 'react'\nimport { ThemeOptions } from '@mui/material'\nimport {\n  getContainingView,\n  getViewParams,\n  ReactRendering,\n} from '@jbrowse/core/util'\n\n// locals\nimport { ExportSvgOptions, LinearGenomeViewModel } from '../../LinearGenomeView'\nimport BlockState, { renderBlockData } from './serverSideRenderedBlock'\nimport { getId } from './util'\n\nimport { BaseLinearDisplayModel } from './BaseLinearDisplayModel'\n\nexport default async function renderBaseLinearDisplaySvg(\n  self: BaseLinearDisplayModel,\n  opts: ExportSvgOptions & {\n    overrideHeight: number\n    theme: ThemeOptions\n  },\n) {\n  const { height, id } = self\n  const { overrideHeight } = opts\n  const view = getContainingView(self) as LinearGenomeViewModel\n  const { offsetPx: viewOffsetPx, roundedDynamicBlocks, width } = view\n  const renderings = await Promise.all(\n    roundedDynamicBlocks.map(async block => {\n      const blockState = BlockState.create({\n        key: block.key,\n        region: block,\n      })\n\n      // regionCannotBeRendered can return jsx so look for plaintext\n      // version, or just get the default if none available\n      const cannotBeRenderedReason =\n        self.regionCannotBeRenderedText(block) ||\n        self.regionCannotBeRendered(block)\n\n      if (cannotBeRenderedReason) {\n        return [\n          block,\n          {\n            reactElement: (\n              <>\n                <rect x={0} y={0} width={width} height={20} fill=\"#aaa\" />\n                <text x={0} y={15}>\n                  {cannotBeRenderedReason}\n                </text>\n              </>\n            ),\n          },\n        ] as const\n      }\n\n      const { rpcManager, renderArgs, renderProps, rendererType } =\n        renderBlockData(blockState, self)\n\n      return [\n        block,\n        await rendererType.renderInClient(rpcManager, {\n          ...renderArgs,\n          ...renderProps,\n          viewParams: getViewParams(self, true),\n          exportSVG: opts,\n          theme: opts.theme || renderProps.theme,\n        }),\n      ] as const\n    }),\n  )\n\n  return (\n    <>\n      {renderings.map(([block, rendering], index) => {\n        const { offsetPx, widthPx } = block\n        const offset = offsetPx - viewOffsetPx\n        const clipid = getId(id, index)\n\n        return (\n          <React.Fragment key={`frag-${index}`}>\n            <defs>\n              <clipPath id={clipid}>\n                <rect\n                  x={0}\n                  y={0}\n                  width={widthPx}\n                  height={overrideHeight || height}\n                />\n              </clipPath>\n            </defs>\n            <g transform={`translate(${offset} 0)`}>\n              <g clipPath={`url(#${clipid})`}>\n                <ReactRendering rendering={rendering} />\n              </g>\n            </g>\n          </React.Fragment>\n        )\n      })}\n    </>\n  )\n}\n","import { getConf } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\nconst minDisplayHeight = 20\n\n/**\n * #stateModel TrackHeightMixin\n * #category display\n */\nexport default function TrackHeightMixin() {\n  return types\n    .model({\n      /**\n       * #property\n       */\n      heightPreConfig: types.maybe(\n        types.refinement(\n          'displayHeight',\n          types.number,\n          n => n >= minDisplayHeight,\n        ),\n      ),\n    })\n    .volatile(() => ({\n      /**\n       * #property\n       */\n      scrollTop: 0,\n    }))\n    .views(self => ({\n      get height() {\n        // @ts-expect-error\n        return self.heightPreConfig ?? (getConf(self, 'height') as number)\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setScrollTop(scrollTop: number) {\n        self.scrollTop = scrollTop\n      },\n      /**\n       * #action\n       */\n      setHeight(displayHeight: number) {\n        self.heightPreConfig = Math.max(displayHeight, minDisplayHeight)\n        return self.height\n      },\n      /**\n       * #action\n       */\n      resizeHeight(distance: number) {\n        const oldHeight = self.height\n        const newHeight = this.setHeight(self.height + distance)\n        return newHeight - oldHeight\n      },\n    }))\n}\n","import React from 'react'\nimport { FeatureDensityStats } from '@jbrowse/core/data_adapters/BaseAdapter'\n\n// locals\nimport BlockMsg from '../components/BlockMsg'\n\nfunction TooLargeMessage({\n  model,\n}: {\n  model: {\n    regionTooLargeReason: string\n    featureDensityStats?: FeatureDensityStats\n    setFeatureDensityStatsLimit: (s?: FeatureDensityStats) => void\n    reload: () => void\n  }\n}) {\n  const { regionTooLargeReason } = model\n  return (\n    <BlockMsg\n      severity=\"warning\"\n      action={() => {\n        model.setFeatureDensityStatsLimit(model.featureDensityStats)\n        model.reload()\n      }}\n      buttonText=\"Force load\"\n      message={[\n        regionTooLargeReason,\n        'Zoom in to see features or force load (may be slow)',\n      ]\n        .filter(f => !!f)\n        .join('. ')}\n    />\n  )\n}\n\nexport default TooLargeMessage\n","import { getContainingView, isAbortException } from '@jbrowse/core/util'\nimport { LinearGenomeViewModel } from '../../LinearGenomeView'\nimport { isAlive } from 'mobx-state-tree'\nimport { BaseLinearDisplayModel } from './BaseLinearDisplayModel'\n\n// stats estimation autorun calls getFeatureDensityStats against the data\n// adapter which by default uses featureDensity, but can also respond with a\n// byte size estimate and fetch size limit (data adapter can define what is too\n// much data)\nexport default async function autorunFeatureDensityStats(\n  self: BaseLinearDisplayModel,\n) {\n  try {\n    const view = getContainingView(self) as LinearGenomeViewModel\n\n    // extra check for contentBlocks.length\n    // https://github.com/GMOD/jbrowse-components/issues/2694\n    if (\n      !view.initialized ||\n      !view.staticBlocks.contentBlocks.length ||\n      view.bpPerPx === self.currStatsBpPerPx ||\n      self.error\n    ) {\n      return\n    }\n\n    // don't re-estimate featureDensity even if zoom level changes,\n    // jbrowse1-style assume it's sort of representative\n    if (self.featureDensityStats?.featureDensity !== undefined) {\n      self.setCurrStatsBpPerPx(view.bpPerPx)\n      return\n    }\n\n    self.clearFeatureDensityStats()\n    self.setCurrStatsBpPerPx(view.bpPerPx)\n    const stats = await self.getFeatureDensityStats()\n    if (isAlive(self)) {\n      self.setFeatureDensityStats(stats)\n    }\n  } catch (e) {\n    if (!isAbortException(e) && isAlive(self)) {\n      console.error(e)\n      self.setError(e)\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react'\nimport { getConf } from '@jbrowse/core/configuration'\nimport { getContainingView } from '@jbrowse/core/util'\nimport { FeatureDensityStats } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { Region } from '@jbrowse/core/util/types'\nimport { autorun } from 'mobx'\nimport { addDisposer, isAlive, types } from 'mobx-state-tree'\n\n// locals\nimport { LinearGenomeViewModel } from '../../LinearGenomeView'\nimport TooLargeMessage from '../components/TooLargeMessage'\nimport { getDisplayStr, getFeatureDensityStatsPre } from './util'\nimport autorunFeatureDensityStats from './autorunFeatureDensityStats'\n\ntype LGV = LinearGenomeViewModel\n\n/**\n * #stateModel FeatureDensityMixin\n * #category display\n */\nexport default function FeatureDensityMixin() {\n  return types\n    .model({\n      /**\n       * #property\n       */\n      userBpPerPxLimit: types.maybe(types.number),\n      /**\n       * #property\n       */\n\n      userByteSizeLimit: types.maybe(types.number),\n    })\n    .volatile(() => ({\n      featureDensityStatsP: undefined as\n        | undefined\n        | Promise<FeatureDensityStats>,\n      featureDensityStats: undefined as undefined | FeatureDensityStats,\n      currStatsBpPerPx: 0,\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get currentBytesRequested() {\n        return self.featureDensityStats?.bytes || 0\n      },\n\n      /**\n       * #getter\n       */\n      get currentFeatureScreenDensity() {\n        const view = getContainingView(self) as LGV\n        return (self.featureDensityStats?.featureDensity || 0) * view.bpPerPx\n      },\n\n      /**\n       * #getter\n       */\n      get maxFeatureScreenDensity() {\n        // @ts-expect-error\n        return getConf(self, 'maxFeatureScreenDensity')\n      },\n      /**\n       * #getter\n       */\n      get featureDensityStatsReady() {\n        const view = getContainingView(self)\n        return (\n          self.currStatsBpPerPx === view.bpPerPx &&\n          (!!self.featureDensityStats || !!self.userBpPerPxLimit)\n        )\n      },\n\n      /**\n       * #getter\n       */\n      get maxAllowableBytes() {\n        return (\n          self.userByteSizeLimit ||\n          self.featureDensityStats?.fetchSizeLimit ||\n          // @ts-expect-error\n          (getConf(self, 'fetchSizeLimit') as number)\n        )\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(() => autorunFeatureDensityStats(self as any)),\n        )\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setCurrStatsBpPerPx(n: number) {\n        self.currStatsBpPerPx = n\n      },\n      /**\n       * #action\n       */\n      setFeatureDensityStatsLimit(stats?: FeatureDensityStats) {\n        const view = getContainingView(self) as LGV\n        if (stats?.bytes) {\n          self.userByteSizeLimit = stats.bytes\n        } else {\n          self.userBpPerPxLimit = view.bpPerPx\n        }\n      },\n      /**\n       * #action\n       */\n      async getFeatureDensityStats() {\n        if (!self.featureDensityStatsP) {\n          self.featureDensityStatsP = getFeatureDensityStatsPre(\n            self as any,\n          ).catch(e => {\n            if (isAlive(self)) {\n              this.setFeatureDensityStatsP(undefined)\n            }\n            throw e\n          })\n        }\n        return self.featureDensityStatsP\n      },\n\n      /**\n       * #action\n       */\n      setFeatureDensityStatsP(arg: any) {\n        self.featureDensityStatsP = arg\n      },\n\n      /**\n       * #action\n       */\n      setFeatureDensityStats(featureDensityStats?: FeatureDensityStats) {\n        self.featureDensityStats = featureDensityStats\n      },\n      /**\n       * #action\n       */\n      clearFeatureDensityStats() {\n        self.featureDensityStatsP = undefined\n        self.featureDensityStats = undefined\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       * region is too large if:\n       * - stats are ready\n       * - region is greater than 20kb (don't warn when zoomed in less than that)\n       * - and bytes is greater than max allowed bytes or density greater than max\n       *   density\n       */\n      get regionTooLarge() {\n        const view = getContainingView(self) as LGV\n        if (\n          !self.featureDensityStatsReady ||\n          view.dynamicBlocks.totalBp < 20_000\n        ) {\n          return false\n        }\n        return (\n          self.currentBytesRequested > self.maxAllowableBytes ||\n          (self.userBpPerPxLimit\n            ? view.bpPerPx > self.userBpPerPxLimit\n            : self.currentFeatureScreenDensity > self.maxFeatureScreenDensity)\n        )\n      },\n\n      /**\n       * #getter\n       * only shows a message of bytes requested is defined, the feature density\n       * based stats don't produce any helpful message besides to zoom in\n       */\n      get regionTooLargeReason() {\n        const req = self.currentBytesRequested\n        const max = self.maxAllowableBytes\n\n        return req && req > max\n          ? `Requested too much data (${getDisplayStr(req)})`\n          : ''\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       */\n      regionCannotBeRenderedText(_region: Region) {\n        return self.regionTooLarge ? 'Force load to see features' : ''\n      },\n\n      /**\n       * #method\n       * @param region -\n       * @returns falsy if the region is fine to try rendering. Otherwise,\n       *  return a react node + string of text.\n       *  string of text describes why it cannot be rendered\n       *  react node allows user to force load at current setting\n       */\n      regionCannotBeRendered(_region: Region) {\n        return self.regionTooLarge ? (\n          <TooLargeMessage model={self as any} />\n        ) : null\n      },\n    }))\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react'\nimport { ThemeOptions } from '@mui/material'\nimport { BaseDisplay } from '@jbrowse/core/pluggableElementTypes/models'\nimport { ConfigurationReference } from '@jbrowse/core/configuration'\nimport { MenuItem } from '@jbrowse/core/ui'\nimport {\n  getContainingView,\n  getContainingTrack,\n  getSession,\n  isSelectionContainer,\n  isSessionModelWithWidgets,\n  isFeature,\n  Feature,\n} from '@jbrowse/core/util'\nimport { BaseBlock } from '@jbrowse/core/util/blockTypes'\nimport CompositeMap from '@jbrowse/core/util/compositeMap'\nimport { getParentRenderProps } from '@jbrowse/core/util/tracks'\nimport { autorun } from 'mobx'\nimport { addDisposer, isAlive, types, Instance } from 'mobx-state-tree'\n\n// icons\nimport MenuOpenIcon from '@mui/icons-material/MenuOpen'\n\n// locals\nimport { LinearGenomeViewModel, ExportSvgOptions } from '../../LinearGenomeView'\nimport { Tooltip } from '../components/BaseLinearDisplay'\nimport BlockState from './serverSideRenderedBlock'\nimport configSchema from './configSchema'\nimport renderBaseLinearDisplaySvg from './renderSvg'\nimport TrackHeightMixin from './TrackHeightMixin'\nimport FeatureDensityMixin from './FeatureDensityMixin'\n\ntype LGV = LinearGenomeViewModel\n\nexport interface Layout {\n  minX: number\n  minY: number\n  maxX: number\n  maxY: number\n  name: string\n}\n\ntype LayoutRecord = [number, number, number, number]\n\nexport interface ExportSvgDisplayOptions extends ExportSvgOptions {\n  overrideHeight: number\n  theme: ThemeOptions\n}\n\n/**\n * #stateModel BaseLinearDisplay\n * #category display\n * extends `BaseDisplay`\n */\nfunction stateModelFactory() {\n  return types\n    .compose(\n      'BaseLinearDisplay',\n      BaseDisplay,\n      TrackHeightMixin(),\n      FeatureDensityMixin(),\n      types.model({\n        /**\n         * #property\n         * updated via autorun\n         */\n        blockState: types.map(BlockState),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n      }),\n    )\n    .volatile(() => ({\n      featureIdUnderMouse: undefined as undefined | string,\n      contextMenuFeature: undefined as undefined | Feature,\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get blockType(): 'staticBlocks' | 'dynamicBlocks' {\n        return 'staticBlocks'\n      },\n      /**\n       * #getter\n       */\n      get blockDefinitions() {\n        const view = getContainingView(self) as LGV\n        if (!view.initialized) {\n          throw new Error('view not initialized yet')\n        }\n        return view[this.blockType]\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       * how many milliseconds to wait for the display to\n       * \"settle\" before re-rendering a block\n       */\n      get renderDelay() {\n        return 50\n      },\n\n      /**\n       * #getter\n       */\n      get TooltipComponent(): React.FC<any> {\n        return Tooltip as unknown as React.FC\n      },\n\n      /**\n       * #getter\n       * returns a string feature ID if the globally-selected object\n       * is probably a feature\n       */\n      get selectedFeatureId() {\n        if (isAlive(self)) {\n          const { selection } = getSession(self)\n          // does it quack like a feature?\n          if (isFeature(selection)) {\n            return selection.id()\n          }\n        }\n        return undefined\n      },\n      /**\n       * #getter\n       * if a display-level message should be displayed instead of the blocks,\n       * make this return a react component\n       */\n      get DisplayMessageComponent() {\n        return undefined as undefined | React.FC<any>\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       * a CompositeMap of `featureId -> feature obj` that\n       * just looks in all the block data for that feature\n       */\n      get features() {\n        const featureMaps = []\n        for (const block of self.blockState.values()) {\n          if (block?.features) {\n            featureMaps.push(block.features)\n          }\n        }\n        return new CompositeMap(featureMaps)\n      },\n\n      /**\n       * #getter\n       */\n      get featureUnderMouse() {\n        const feat = self.featureIdUnderMouse\n        return feat ? this.features.get(feat) : undefined\n      },\n\n      /**\n       * #getter\n       */\n      getFeatureOverlapping(\n        blockKey: string,\n        x: number,\n        y: number,\n      ): string | undefined {\n        return self.blockState.get(blockKey)?.layout?.getByCoord(x, y)\n      },\n\n      /**\n       * #getter\n       */\n      getFeatureByID(blockKey: string, id: string): LayoutRecord | undefined {\n        return self.blockState.get(blockKey)?.layout?.getByID(id)\n      },\n\n      /**\n       * #getter\n       */\n      searchFeatureByID(id: string): LayoutRecord | undefined {\n        let ret\n        self.blockState.forEach(block => {\n          const val = block?.layout?.getByID(id)\n          if (val) {\n            ret = val\n          }\n        })\n        return ret\n      },\n    }))\n\n    .actions(self => ({\n      /**\n       * #action\n       */\n      addBlock(key: string, block: BaseBlock) {\n        self.blockState.set(\n          key,\n          BlockState.create({\n            key,\n            region: block.toRegion(),\n          }),\n        )\n      },\n\n      /**\n       * #action\n       */\n      deleteBlock(key: string) {\n        self.blockState.delete(key)\n      },\n      /**\n       * #action\n       */\n      selectFeature(feature: Feature) {\n        const session = getSession(self)\n        if (isSessionModelWithWidgets(session)) {\n          const featureWidget = session.addWidget(\n            'BaseFeatureWidget',\n            'baseFeature',\n            {\n              view: getContainingView(self),\n              track: getContainingTrack(self),\n              featureData: feature.toJSON(),\n            },\n          )\n\n          session.showWidget(featureWidget)\n        }\n        if (isSelectionContainer(session)) {\n          session.setSelection(feature)\n        }\n      },\n      /**\n       * #action\n       */\n      clearFeatureSelection() {\n        getSession(self).clearSelection()\n      },\n      /**\n       * #action\n       */\n      setFeatureIdUnderMouse(feature?: string) {\n        self.featureIdUnderMouse = feature\n      },\n\n      /**\n       * #action\n       */\n      setContextMenuFeature(feature?: Feature) {\n        self.contextMenuFeature = feature\n      },\n    }))\n\n    .actions(self => {\n      const { reload: superReload } = self\n\n      return {\n        /**\n         * #action\n         */\n        async reload() {\n          self.setError()\n          self.setCurrStatsBpPerPx(0)\n          self.clearFeatureDensityStats()\n          ;[...self.blockState.values()].map(val => val.doReload())\n          superReload()\n        },\n      }\n    })\n\n    .views(self => ({\n      /**\n       * #method\n       */\n      trackMenuItems(): MenuItem[] {\n        return []\n      },\n\n      /**\n       * #method\n       */\n      contextMenuItems(): MenuItem[] {\n        return [\n          ...(self.contextMenuFeature\n            ? [\n                {\n                  label: 'Open feature details',\n                  icon: MenuOpenIcon,\n                  onClick: () => {\n                    if (self.contextMenuFeature) {\n                      self.selectFeature(self.contextMenuFeature)\n                    }\n                  },\n                },\n              ]\n            : []),\n        ]\n      },\n      /**\n       * #method\n       */\n      renderProps() {\n        return {\n          ...getParentRenderProps(self),\n          notReady: !self.featureDensityStatsReady,\n          rpcDriverName: self.rpcDriverName,\n          displayModel: self,\n          onFeatureClick(_: unknown, featureId?: string) {\n            const f = featureId || self.featureIdUnderMouse\n            if (!f) {\n              self.clearFeatureSelection()\n            } else {\n              const feature = self.features.get(f)\n              if (feature) {\n                self.selectFeature(feature)\n              }\n            }\n          },\n          onClick() {\n            self.clearFeatureSelection()\n          },\n          // similar to click but opens a menu with further options\n          onFeatureContextMenu(_: unknown, featureId?: string) {\n            const f = featureId || self.featureIdUnderMouse\n            if (!f) {\n              self.clearFeatureSelection()\n            } else {\n              // feature id under mouse passed to context menu\n              self.setContextMenuFeature(self.features.get(f))\n            }\n          },\n\n          onMouseMove(_: unknown, featureId?: string) {\n            self.setFeatureIdUnderMouse(featureId)\n          },\n\n          onMouseLeave(_: unknown) {\n            self.setFeatureIdUnderMouse(undefined)\n          },\n\n          onContextMenu() {\n            self.setContextMenuFeature(undefined)\n            self.clearFeatureSelection()\n          },\n        }\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #method\n       */\n      async renderSvg(opts: ExportSvgDisplayOptions) {\n        return renderBaseLinearDisplaySvg(self as BaseLinearDisplayModel, opts)\n      },\n      afterAttach() {\n        // watch the parent's blocks to update our block state when they change,\n        // then we recreate the blocks on our own model (creating and deleting to\n        // match the parent blocks)\n        addDisposer(\n          self,\n          autorun(() => {\n            const blocksPresent: { [key: string]: boolean } = {}\n            const view = getContainingView(self) as LGV\n            if (!view.initialized) {\n              return\n            }\n            self.blockDefinitions.contentBlocks.forEach(block => {\n              blocksPresent[block.key] = true\n              if (!self.blockState.has(block.key)) {\n                self.addBlock(block.key, block)\n              }\n            })\n            self.blockState.forEach((_, key) => {\n              if (!blocksPresent[key]) {\n                self.deleteBlock(key)\n              }\n            })\n          }),\n        )\n      },\n    }))\n    .preProcessSnapshot(snap => {\n      if (!snap) {\n        return snap\n      }\n      // rewrite \"height\" from older snapshots to \"heightPreConfig\", this allows\n      // us to maintain a height \"getter\" going forward\n      // @ts-expect-error\n      const { height, ...rest } = snap\n      return { heightPreConfig: height, ...rest }\n    })\n    .postProcessSnapshot(self => {\n      // xref https://github.com/mobxjs/mobx-state-tree/issues/1524 for Omit\n      const r = self as Omit<typeof self, symbol>\n      const { blockState, ...rest } = r\n      return rest\n    })\n}\n\nexport const BaseLinearDisplay = stateModelFactory()\n\nexport type BaseLinearDisplayStateModel = typeof BaseLinearDisplay\nexport type BaseLinearDisplayModel = Instance<BaseLinearDisplayStateModel>\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { baseLinearDisplayConfigSchema } from '../BaseLinearDisplay'\n\n/**\n * #config LinearBareDisplay\n * #category display\n */\nfunction configSchemaFactory(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'LinearBareDisplay',\n    {\n      /**\n       * #slot\n       */\n      renderer: pluginManager.pluggableConfigSchemaType('renderer'),\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: baseLinearDisplayConfigSchema,\n      explicitlyTyped: true,\n    },\n  )\n}\n\nexport { configSchemaFactory }\n","import {\n  AnyConfigurationSchemaType,\n  ConfigurationReference,\n} from '@jbrowse/core/configuration'\nimport { getParentRenderProps } from '@jbrowse/core/util/tracks'\nimport { types } from 'mobx-state-tree'\nimport { BaseLinearDisplay } from '../BaseLinearDisplay'\n\n/**\n * #stateModel LinearBareDisplay\n * #category display\n * extends `BaseLinearDisplay`\n */\nexport function stateModelFactory(configSchema: AnyConfigurationSchemaType) {\n  return types\n    .compose(\n      'LinearBareDisplay',\n      BaseLinearDisplay,\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LinearBareDisplay'),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n      }),\n    )\n\n    .views(self => {\n      const { renderProps: superRenderProps } = self\n      return {\n        /**\n         * #method\n         */\n        renderProps() {\n          return {\n            ...superRenderProps(),\n            ...getParentRenderProps(self),\n            rpcDriverName: self.rpcDriverName,\n            config: self.configuration.renderer,\n          }\n        },\n\n        /**\n         * #getter\n         */\n        get rendererTypeName() {\n          return self.configuration.renderer.type\n        },\n      }\n    })\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { DisplayType } from '@jbrowse/core/pluggableElementTypes'\n\n// locals\nimport { configSchemaFactory } from './configSchema'\nimport { stateModelFactory } from './model'\nimport { BaseLinearDisplayComponent } from '../BaseLinearDisplay/'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaFactory(pluginManager)\n    return new DisplayType({\n      name: 'LinearBareDisplay',\n      configSchema,\n      displayName: 'Bare feature display',\n      stateModel: stateModelFactory(configSchema),\n      trackType: 'BasicTrack',\n      viewType: 'LinearGenomeView',\n      ReactComponent: BaseLinearDisplayComponent,\n    })\n  })\n}\n\nexport { configSchemaFactory } from './configSchema'\nexport { stateModelFactory } from './model'\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { baseLinearDisplayConfigSchema } from '../BaseLinearDisplay'\n\n/**\n * #config LinearBasicDisplay\n * #category display\n */\nfunction configSchemaFactory(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'LinearBasicDisplay',\n    {\n      /**\n       * #slot\n       */\n      renderer: pluginManager.pluggableConfigSchemaType('renderer'),\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: baseLinearDisplayConfigSchema,\n      explicitlyTyped: true,\n    },\n  )\n}\n\nexport default configSchemaFactory\n","import { lazy } from 'react'\nimport {\n  getConf,\n  ConfigurationReference,\n  AnyConfigurationSchemaType,\n} from '@jbrowse/core/configuration'\nimport { getSession } from '@jbrowse/core/util'\nimport { MenuItem } from '@jbrowse/core/ui'\nimport { types, getEnv, Instance } from 'mobx-state-tree'\n\n// icons\nimport VisibilityIcon from '@mui/icons-material/Visibility'\n\n// locals\nimport { BaseLinearDisplay } from '../BaseLinearDisplay'\n\nconst SetMaxHeightDlg = lazy(() => import('./components/SetMaxHeight'))\n\n/**\n * #stateModel LinearBasicDisplay\n * #category display\n * used by `FeatureTrack`, has simple settings like \"show/hide feature labels\",\n * etc.\n */\nfunction stateModelFactory(configSchema: AnyConfigurationSchemaType) {\n  return types\n    .compose(\n      'LinearBasicDisplay',\n      BaseLinearDisplay,\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LinearBasicDisplay'),\n        /**\n         * #property\n         */\n        trackShowLabels: types.maybe(types.boolean),\n        /**\n         * #property\n         */\n        trackShowDescriptions: types.maybe(types.boolean),\n        /**\n         * #property\n         */\n        trackDisplayMode: types.maybe(types.string),\n        /**\n         * #property\n         */\n        trackMaxHeight: types.maybe(types.number),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n      }),\n    )\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get rendererTypeName() {\n        return getConf(self, ['renderer', 'type'])\n      },\n\n      /**\n       * #getter\n       */\n      get showLabels() {\n        return self.trackShowLabels ?? getConf(self, ['renderer', 'showLabels'])\n      },\n\n      /**\n       * #getter\n       */\n      get showDescriptions() {\n        return (\n          self.trackShowDescriptions ??\n          getConf(self, ['renderer', 'showDescriptions'])\n        )\n      },\n\n      /**\n       * #getter\n       */\n      get maxHeight() {\n        return self.trackMaxHeight ?? getConf(self, ['renderer', 'maxHeight'])\n      },\n\n      /**\n       * #getter\n       */\n      get displayMode() {\n        return (\n          self.trackDisplayMode ?? getConf(self, ['renderer', 'displayMode'])\n        )\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get rendererConfig() {\n        const configBlob = getConf(self, ['renderer']) || {}\n        const config = configBlob as Omit<typeof configBlob, symbol>\n\n        return self.rendererType.configSchema.create(\n          {\n            ...config,\n            showLabels: self.showLabels,\n            showDescriptions: self.showDescriptions,\n            displayMode: self.displayMode,\n            maxHeight: self.maxHeight,\n          },\n          getEnv(self),\n        )\n      },\n    }))\n\n    .actions(self => ({\n      /**\n       * #action\n       */\n      toggleShowLabels() {\n        self.trackShowLabels = !self.showLabels\n      },\n      /**\n       * #action\n       */\n      toggleShowDescriptions() {\n        self.trackShowDescriptions = !self.showDescriptions\n      },\n      /**\n       * #action\n       */\n      setDisplayMode(val: string) {\n        self.trackDisplayMode = val\n      },\n      /**\n       * #action\n       */\n      setMaxHeight(val?: number) {\n        self.trackMaxHeight = val\n      },\n    }))\n    .views(self => {\n      const {\n        trackMenuItems: superTrackMenuItems,\n        renderProps: superRenderProps,\n      } = self\n      return {\n        /**\n         * #method\n         */\n        renderProps() {\n          const config = self.rendererConfig\n          const superProps = superRenderProps()\n          const superPropsOmit = superProps as Omit<typeof superProps, symbol>\n          return {\n            ...superPropsOmit,\n            config,\n          }\n        },\n\n        /**\n         * #method\n         */\n        trackMenuItems(): MenuItem[] {\n          return [\n            ...superTrackMenuItems(),\n            {\n              label: 'Show labels',\n              icon: VisibilityIcon,\n              type: 'checkbox',\n              checked: self.showLabels,\n              onClick: () => self.toggleShowLabels(),\n            },\n            {\n              label: 'Show descriptions',\n              icon: VisibilityIcon,\n              type: 'checkbox',\n              checked: self.showDescriptions,\n              onClick: () => self.toggleShowDescriptions(),\n            },\n            {\n              label: 'Display mode',\n              icon: VisibilityIcon,\n              subMenu: [\n                'compact',\n                'reducedRepresentation',\n                'normal',\n                'collapse',\n              ].map(val => ({\n                label: val,\n                onClick: () => self.setDisplayMode(val),\n              })),\n            },\n            {\n              label: 'Set max height',\n              onClick: () => {\n                getSession(self).queueDialog(handleClose => [\n                  SetMaxHeightDlg,\n                  { model: self, handleClose },\n                ])\n              },\n            },\n          ]\n        },\n      }\n    })\n}\n\nexport type FeatureTrackStateModel = ReturnType<typeof stateModelFactory>\nexport type FeatureTrackModel = Instance<FeatureTrackStateModel>\n\nexport default stateModelFactory\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { createBaseTrackConfig } from '@jbrowse/core/pluggableElementTypes'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config FeatureTrack\n * #category track\n * used for basic gene and feature tracks, generally used with LinearBasicDisplay\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = (pluginManager: PluginManager) =>\n  ConfigurationSchema(\n    'FeatureTrack',\n    {},\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: createBaseTrackConfig(pluginManager),\n      /**\n       * #identifier\n       */\n      explicitIdentifier: 'trackId',\n    },\n  )\n\nexport default configSchema\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { createBaseTrackConfig } from '@jbrowse/core/pluggableElementTypes'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config BasicTrack\n * #category track\n * synonym for FeatureTrack\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = (pluginManager: PluginManager) =>\n  ConfigurationSchema(\n    'BasicTrack',\n    {},\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: createBaseTrackConfig(pluginManager),\n      explicitIdentifier: 'trackId',\n    },\n  )\nexport default configSchema\n","import Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { AbstractSessionModel, isAbstractMenuManager } from '@jbrowse/core/util'\n\n// icons\nimport LineStyleIcon from '@mui/icons-material/LineStyle'\n\n// locals\nimport {\n  BaseLinearDisplay,\n  BaseLinearDisplayComponent,\n  baseLinearDisplayConfigSchema,\n} from './BaseLinearDisplay'\nimport LinearBareDisplayF from './LinearBareDisplay'\nimport LinearGenomeViewF, {\n  SearchBox,\n  ZoomControls,\n  LinearGenomeView,\n} from './LinearGenomeView'\n\nimport LinearBasicDisplayF from './LinearBasicDisplay'\nimport FeatureTrackF from './FeatureTrack'\nimport BasicTrackF from './BasicTrack'\nimport LaunchLinearGenomeViewF from './LaunchLinearGenomeView'\n\nexport default class LinearGenomeViewPlugin extends Plugin {\n  name = 'LinearGenomeViewPlugin'\n\n  exports = {\n    BaseLinearDisplayComponent,\n    BaseLinearDisplay,\n    baseLinearDisplayConfigSchema,\n    SearchBox,\n    ZoomControls,\n    LinearGenomeView,\n  }\n\n  install(pluginManager: PluginManager) {\n    FeatureTrackF(pluginManager)\n    BasicTrackF(pluginManager)\n    LinearBasicDisplayF(pluginManager)\n    LinearGenomeViewF(pluginManager)\n    LinearBareDisplayF(pluginManager)\n    LaunchLinearGenomeViewF(pluginManager)\n  }\n\n  configure(pluginManager: PluginManager) {\n    if (isAbstractMenuManager(pluginManager.rootModel)) {\n      pluginManager.rootModel.appendToSubMenu(['Add'], {\n        label: 'Linear genome view',\n        icon: LineStyleIcon,\n        onClick: (session: AbstractSessionModel) => {\n          session.addView('LinearGenomeView', {})\n        },\n      })\n    }\n  }\n}\n\nexport type {\n  ExportSvgDisplayOptions,\n  BaseLinearDisplayModel,\n  BlockModel,\n} from './BaseLinearDisplay'\n\nexport { configSchemaFactory as linearBareDisplayConfigSchemaFactory } from './LinearBareDisplay'\nexport {\n  baseLinearDisplayConfigSchema,\n  BaseLinearDisplay,\n  BlockMsg,\n  BaseLinearDisplayComponent,\n  TrackHeightMixin,\n  FeatureDensityMixin,\n  TooLargeMessage,\n} from './BaseLinearDisplay'\nexport {\n  type LinearGenomeViewModel,\n  type LinearGenomeViewStateModel,\n  RefNameAutocomplete,\n  SearchBox,\n} from './LinearGenomeView'\nexport {\n  renderToSvg,\n  SVGTracks,\n  totalHeight,\n  SVGRuler,\n} from './LinearGenomeView/svgcomponents/SVGLinearGenomeView'\nexport {\n  configSchema as linearBasicDisplayConfigSchemaFactory,\n  modelFactory as linearBasicDisplayModelFactory,\n} from './LinearBasicDisplay'\n","import {\n  createBaseTrackModel,\n  TrackType,\n} from '@jbrowse/core/pluggableElementTypes'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport configSchemaF from './configSchema'\n\nexport default (pm: PluginManager) => {\n  pm.addTrackType(() => {\n    const configSchema = configSchemaF(pm)\n    return new TrackType({\n      name: 'FeatureTrack',\n      displayName: 'Feature track',\n      configSchema,\n      stateModel: createBaseTrackModel(pm, 'FeatureTrack', configSchema),\n    })\n  })\n}\n","import {\n  createBaseTrackModel,\n  TrackType,\n} from '@jbrowse/core/pluggableElementTypes'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport configSchemaF from './configSchema'\n\nexport default (pm: PluginManager) => {\n  pm.addTrackType(() => {\n    const configSchema = configSchemaF(pm)\n\n    return new TrackType({\n      name: 'BasicTrack',\n      configSchema,\n      stateModel: createBaseTrackModel(pm, 'BasicTrack', configSchema),\n    })\n  })\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { DisplayType } from '@jbrowse/core/pluggableElementTypes'\nimport { BaseLinearDisplayComponent } from '../BaseLinearDisplay'\n\n// locals\nimport configSchema from './configSchema'\nimport modelFactory from './model'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addDisplayType(() => {\n    const config = configSchema(pluginManager)\n    return new DisplayType({\n      name: 'LinearBasicDisplay',\n      displayName: 'Basic feature display',\n      configSchema: config,\n      stateModel: modelFactory(config),\n      trackType: 'FeatureTrack',\n      viewType: 'LinearGenomeView',\n      ReactComponent: BaseLinearDisplayComponent,\n    })\n  })\n}\n\nexport { default as modelFactory } from './model'\nexport { default as configSchema } from './configSchema'\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { AbstractSessionModel, when } from '@jbrowse/core/util'\nimport { LinearGenomeViewModel } from '../LinearGenomeView'\n\ntype LGV = LinearGenomeViewModel\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addToExtensionPoint(\n    'LaunchView-LinearGenomeView',\n    // @ts-expect-error\n    async ({\n      session,\n      assembly,\n      loc,\n      tracks = [],\n    }: {\n      session: AbstractSessionModel\n      assembly?: string\n      loc: string\n      tracks?: string[]\n    }) => {\n      try {\n        const { assemblyManager } = session\n        const view = session.addView('LinearGenomeView', {}) as LGV\n\n        await when(() => !!view.volatileWidth)\n\n        if (!assembly) {\n          throw new Error(\n            'No assembly provided when launching linear genome view',\n          )\n        }\n\n        const asm = await assemblyManager.waitForAssembly(assembly)\n        if (!asm) {\n          throw new Error(\n            `Assembly \"${assembly}\" not found when launching linear genome view`,\n          )\n        }\n\n        await view.navToLocString(loc, assembly)\n\n        const idsNotFound = [] as string[]\n        tracks.forEach(track => {\n          try {\n            view.showTrack(track)\n          } catch (e) {\n            if (`${e}`.match('Could not resolve identifier')) {\n              idsNotFound.push(track)\n            } else {\n              throw e\n            }\n          }\n        })\n        if (idsNotFound.length) {\n          throw new Error(\n            `Could not resolve identifiers: ${idsNotFound.join(',')}`,\n          )\n        }\n      } catch (e) {\n        session.notify(`${e}`, 'error')\n        throw e\n      }\n    },\n  )\n}\n","import VCF, { parseBreakend } from '@gmod/vcf'\n\nconst altTypeToSO: { [key: string]: string | undefined } = {\n  DEL: 'deletion',\n  INS: 'insertion',\n  DUP: 'duplication',\n  INV: 'inversion',\n  INVDUP: 'inverted duplication',\n  CNV: 'copy_number_variation',\n  TRA: 'translocation',\n  'DUP:TANDEM': 'tandem_duplication',\n  NON_REF: 'sequence_variant',\n  '*': 'sequence_variant',\n}\n\n/**\n * Get a sequence ontology (SO) term that describes the variant type\n */\nexport function getSOTermAndDescription(\n  ref: string,\n  alt: string[],\n  parser: VCF,\n): string[] {\n  // it's just a remark if there are no alternate alleles\n  if (!alt || alt.length === 0) {\n    return ['remark', 'no alternative alleles']\n  }\n\n  const soTerms = new Set<string>()\n  let descriptions = new Set<string>()\n  alt.forEach(a => {\n    let [soTerm, description] = getSOAndDescFromAltDefs(ref, a, parser)\n    if (!soTerm) {\n      ;[soTerm, description] = getSOAndDescByExamination(ref, a)\n    }\n    if (soTerm && description) {\n      soTerms.add(soTerm)\n      descriptions.add(description)\n    }\n  })\n\n  // Combine descriptions like [\"SNV G -> A\", \"SNV G -> T\"] to [\"SNV G -> A,T\"]\n  if (descriptions.size > 1) {\n    const descs = [...descriptions]\n    const prefixes = new Set(\n      descs.map(desc => {\n        const prefix = desc.split('->')\n        return prefix[1] ? prefix[0] : desc\n      }),\n    )\n\n    descriptions = new Set(\n      [...prefixes].map(prefix => {\n        const suffixes = descs\n          .map(desc => {\n            const pref = desc.split('-> ')\n            return pref[1] && pref[0] === prefix ? pref[1] : ''\n          })\n          .filter(f => !!f)\n\n        return suffixes.length ? prefix + '-> ' + suffixes.join(',') : prefix\n      }),\n    )\n  }\n  if (soTerms.size) {\n    return [[...soTerms].join(','), [...descriptions].join(',')]\n  }\n  return []\n}\n\nexport function getSOAndDescFromAltDefs(\n  ref: string,\n  alt: string,\n  parser: VCF,\n): string[] {\n  if (typeof alt === 'string' && !alt.startsWith('<')) {\n    return []\n  }\n\n  // look for a definition with an SO type for this\n  let soTerm = altTypeToSO[alt]\n  // if no SO term but ALT is in metadata, assume sequence_variant\n  if (!soTerm && parser.getMetadata('ALT', alt)) {\n    soTerm = 'sequence_variant'\n  }\n  if (soTerm) {\n    return [soTerm, alt]\n  }\n\n  // try to look for a definition for a parent term if we can\n  const modAlt = alt.split(':')\n  if (modAlt.length > 1) {\n    return getSOAndDescFromAltDefs(\n      ref,\n      `<${modAlt.slice(0, -1).join(':')}>`,\n      parser,\n    )\n  }\n\n  // no parent\n  return []\n}\n\n// note: term SNV is used instead of SNP because SO definition of SNP says\n// abundance must be at least 1% in population, and can't be sure we meet\n// that\nexport function getSOAndDescByExamination(ref: string, alt: string) {\n  const bnd = parseBreakend(alt)\n  if (bnd) {\n    return ['breakend', alt]\n  } else if (ref.length === 1 && alt.length === 1) {\n    return ['SNV', makeDescriptionString('SNV', ref, alt)]\n  } else if (alt === '<INS>') {\n    return ['insertion', alt]\n  } else if (alt === '<DEL>') {\n    return ['deletion', alt]\n  } else if (alt === '<INV>') {\n    return ['deletion', alt]\n  } else if (alt === '<TRA>') {\n    return ['translocation', alt]\n  } else if (alt.includes('<')) {\n    return ['sv', alt]\n  } else if (ref.length === alt.length) {\n    return ref.split('').reverse().join('') === alt\n      ? ['inversion', makeDescriptionString('inversion', ref, alt)]\n      : ['substitution', makeDescriptionString('substitution', ref, alt)]\n  } else if (ref.length <= alt.length) {\n    return ['insertion', makeDescriptionString('insertion', ref, alt)]\n  } else if (ref.length > alt.length) {\n    return ['deletion', makeDescriptionString('deletion', ref, alt)]\n  }\n\n  return ['indel', makeDescriptionString('indel', ref, alt)]\n}\n\nfunction makeDescriptionString(soTerm: string, ref: string, alt: string) {\n  return `${soTerm} ${ref} -> ${alt}`\n}\n","import { Feature } from '@jbrowse/core/util'\nimport VCF from '@gmod/vcf'\n\n// locals\nimport { getSOTermAndDescription } from './util'\n\n/* eslint-disable no-underscore-dangle */\n\ninterface Samples {\n  [key: string]: {\n    [key: string]: { values: string[] | number[] | null }\n  }\n}\n\ninterface FeatureData {\n  [key: string]: unknown\n  refName: string\n  start: number\n  end: number\n  description?: string\n  type?: string\n  name?: string\n  aliases?: string[]\n  samples?: Samples\n}\n\nexport default class VCFFeature implements Feature {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private variant: any\n\n  private parser: VCF\n\n  private data: FeatureData\n\n  private _id: string\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(args: { variant: any; parser: VCF; id: string }) {\n    this.variant = args.variant\n    this.parser = args.parser\n    this.data = this.dataFromVariant(this.variant)\n    this._id = args.id\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  get(field: string): any {\n    return field === 'samples'\n      ? this.variant.SAMPLES\n      : this.data[field] || this.variant[field]\n  }\n\n  set() {}\n\n  parent() {\n    return undefined\n  }\n\n  children() {\n    return undefined\n  }\n\n  tags() {\n    return [...Object.keys(this.data), ...Object.keys(this.variant), 'samples']\n  }\n\n  id() {\n    return this._id\n  }\n\n  dataFromVariant(variant: {\n    REF: string\n    POS: number\n    ALT: string[]\n    CHROM: string\n    INFO: any // eslint-disable-line @typescript-eslint/no-explicit-any\n    ID: string[]\n  }): FeatureData {\n    const { REF, ALT, POS, CHROM, INFO, ID } = variant\n    const start = POS - 1\n    const [type, description] = getSOTermAndDescription(REF, ALT, this.parser)\n    const isTRA = ALT?.some(f => f === '<TRA>')\n    const isSymbolic = ALT?.some(f => f.includes('<'))\n\n    return {\n      refName: CHROM,\n      start,\n      end: isSymbolic && INFO.END && !isTRA ? +INFO.END[0] : start + REF.length,\n      description,\n      type,\n      name: ID?.join(','),\n      aliases: ID && ID.length > 1 ? variant.ID.slice(1) : undefined,\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  toJSON(): any {\n    return {\n      uniqueId: this._id,\n      ...this.variant,\n      ...this.data,\n      samples: this.variant.SAMPLES,\n    }\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config VcfAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst VcfAdapter = ConfigurationSchema(\n  'VcfAdapter',\n  {\n    /**\n     * #slot\n     */\n    vcfLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/my.vcf', locationType: 'UriLocation' },\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default VcfAdapter\n","import { types } from 'mobx-state-tree'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config VcfTabixAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst VcfTabixAdapter = ConfigurationSchema(\n  'VcfTabixAdapter',\n  {\n    /**\n     * #slot\n     */\n    vcfGzLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/my.vcf.gz', locationType: 'UriLocation' },\n    },\n    index: ConfigurationSchema('VcfIndex', {\n      /**\n       * #slot index.indexType\n       */\n      indexType: {\n        model: types.enumeration('IndexType', ['TBI', 'CSI']),\n        type: 'stringEnum',\n        defaultValue: 'TBI',\n      },\n      /**\n       * #slot index.location\n       */\n      location: {\n        type: 'fileLocation',\n        defaultValue: {\n          uri: '/path/to/my.vcf.gz.tbi',\n          locationType: 'UriLocation',\n        },\n      },\n    }),\n  },\n  { explicitlyTyped: true },\n)\n\nexport default VcfTabixAdapter\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { createBaseTrackConfig } from '@jbrowse/core/pluggableElementTypes'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config VariantTrack\n * Mostly similar to feature track, but has `ChordDisplayType` registered to it,\n * and custom feature details in `LinearVariantDisplay`\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = (pluginManager: PluginManager) =>\n  ConfigurationSchema(\n    'VariantTrack',\n    {},\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: createBaseTrackConfig(pluginManager),\n    },\n  )\n\nexport default configSchema\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { baseChordDisplayConfig } from '@jbrowse/plugin-circular-view'\nimport { types } from 'mobx-state-tree'\n\n/**\n * #config ChordVariantDisplay\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nfunction stateModelFactory(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'ChordVariantDisplay',\n    {\n      /**\n       * #slot\n       */\n      renderer: types.optional(\n        pluginManager.pluggableConfigSchemaType('renderer'),\n        { type: 'StructuralVariantChordRenderer' },\n      ),\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: baseChordDisplayConfig,\n      explicitlyTyped: true,\n    },\n  )\n}\n\nexport default stateModelFactory\n","import { BaseChordDisplayModel } from '@jbrowse/plugin-circular-view'\nimport {\n  AnyConfigurationSchemaType,\n  ConfigurationReference,\n} from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\nimport { Feature, getContainingView } from '@jbrowse/core/util'\nimport { getParentRenderProps } from '@jbrowse/core/util/tracks'\n\n/**\n * #stateModel ChordVariantDisplay\n * extends `BaseChordDisplay`\n */\nconst stateModelFactory = (configSchema: AnyConfigurationSchemaType) => {\n  return types\n    .compose(\n      'ChordVariantDisplay',\n      BaseChordDisplayModel,\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('ChordVariantDisplay'),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n      }),\n    )\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get rendererTypeName() {\n        return self.configuration.renderer.type\n      },\n\n      /**\n       * #method\n       */\n      renderProps(): Record<string, unknown> {\n        const view = getContainingView(self)\n        return {\n          ...getParentRenderProps(self),\n          rpcDriverName: self.rpcDriverName,\n          displayModel: self,\n          bezierRadius: view.radiusPx * self.bezierRadiusRatio,\n          radius: view.radiusPx,\n          blockDefinitions: self.blockDefinitions,\n          config: self.configuration.renderer,\n          onChordClick: (arg: Feature) => self.onChordClick(arg),\n        }\n      },\n    }))\n}\n\n// http://localhost:3000/test_data/hs37d5.HG002-SequelII-CCS.sv.vcf.gz.tbi\n\n// render request is for 1.5x the current viewing window\n\n// tracks all have a height\n//\nexport default stateModelFactory\n","import { getConf, ConfigurationReference } from '@jbrowse/core/configuration'\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks'\nimport {\n  getContainingTrack,\n  getSession,\n  getContainingView,\n  isSessionModelWithWidgets,\n  Feature,\n} from '@jbrowse/core/util'\n\nimport { linearBasicDisplayModelFactory } from '@jbrowse/plugin-linear-genome-view'\nimport { Instance, types } from 'mobx-state-tree'\nimport { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\n\n/**\n * #stateModel LinearVariantDisplay\n * extends `LinearBasicDisplay`\n * very similar to basic display, but provides custom widget on feature click\n */\nexport default function stateModelFactory(\n  configSchema: AnyConfigurationSchemaType,\n) {\n  return types\n    .compose(\n      'LinearVariantDisplay',\n      linearBasicDisplayModelFactory(configSchema),\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LinearVariantDisplay'),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n      }),\n    )\n\n    .actions(self => ({\n      /**\n       * #action\n       */\n      async selectFeature(feature: Feature) {\n        const session = getSession(self)\n        if (isSessionModelWithWidgets(session)) {\n          const { rpcManager } = session\n          const sessionId = getRpcSessionId(self)\n          const track = getContainingTrack(self)\n          const view = getContainingView(self)\n          const adapterConfig = getConf(track, 'adapter')\n          const descriptions = await rpcManager.call(\n            sessionId,\n            'CoreGetMetadata',\n            {\n              adapterConfig,\n            },\n          )\n          session.showWidget(\n            session.addWidget('VariantFeatureWidget', 'variantFeature', {\n              featureData: feature.toJSON(),\n              view,\n              track,\n              descriptions,\n            }),\n          )\n        }\n\n        session.setSelection(feature)\n      },\n    }))\n}\n\nexport type LinearVariantDisplayStateModel = ReturnType<\n  typeof stateModelFactory\n>\nexport type LinearVariantDisplayModel = Instance<LinearVariantDisplayStateModel>\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { BaseLinearDisplayComponent } from '@jbrowse/plugin-linear-genome-view'\nimport DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\nimport stateModelFactory from './model'\nimport configSchemaF from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaF(pluginManager)\n    return new DisplayType({\n      name: 'LinearVariantDisplay',\n      displayName: 'Variant display',\n      configSchema,\n      stateModel: stateModelFactory(configSchema),\n      trackType: 'VariantTrack',\n      viewType: 'LinearGenomeView',\n      ReactComponent: BaseLinearDisplayComponent,\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { Instance } from 'mobx-state-tree'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { linearBasicDisplayConfigSchemaFactory } from '@jbrowse/plugin-linear-genome-view'\n\n/**\n * #config LinearVariantDisplay\n * mostly empty, this display type is very much\n * like a `FeatureTrack` with a `LinearBasicDisplay` except it has a custom\n * feature details widget\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport default function configSchemaF(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'LinearVariantDisplay',\n    {},\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: linearBasicDisplayConfigSchemaFactory(pluginManager),\n      explicitlyTyped: true,\n    },\n  )\n}\n\nexport type LinearVariantDisplayConfigModel = ReturnType<typeof configSchemaF>\nexport type LinearVariantDisplayConfig =\n  Instance<LinearVariantDisplayConfigModel>\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n/**\n * #config StructuralVariantChordRenderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = ConfigurationSchema(\n  'StructuralVariantChordRenderer',\n  {\n    /**\n     * #slot\n     */\n    strokeColor: {\n      type: 'color',\n      description: 'the line color of each arc',\n      defaultValue: 'rgba(255,133,0,0.32)',\n      contextVariable: ['feature'],\n    },\n    /**\n     * #slot\n     */\n    strokeColorSelected: {\n      type: 'color',\n      description: 'the line color of an arc that has been selected',\n      defaultValue: 'black',\n      contextVariable: ['feature'],\n    },\n    /**\n     * #slot\n     */\n    strokeColorHover: {\n      type: 'color',\n      description:\n        'the line color of an arc that is being hovered over with the mouse',\n      defaultValue: '#555',\n      contextVariable: ['feature'],\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default configSchema\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { polarToCartesian, Feature } from '@jbrowse/core/util'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { parseBreakend } from '@gmod/vcf'\n\nexport interface Region {\n  end: number\n  start: number\n  refName: string\n  elided?: false\n}\n\nexport interface ElidedRegion {\n  elided: true\n  regions: Region[]\n}\n\nexport type AnyRegion = Region | ElidedRegion\n\nexport interface Block {\n  flipped: boolean\n  bpPerRadian: number\n  startRadians: number\n  region: AnyRegion\n}\n\nfunction bpToRadians(block: Block, pos: number) {\n  const blockStart = block.region.elided ? 0 : block.region.start\n  const blockEnd = block.region.elided ? 0 : block.region.end\n  const bpOffset = block.flipped ? blockEnd - pos : pos - blockStart\n  return bpOffset / block.bpPerRadian + block.startRadians\n}\n\nconst Chord = observer(function Chord({\n  feature,\n  blocksForRefs,\n  radius,\n  config,\n  bezierRadius,\n  selected,\n  onClick,\n}: {\n  feature: Feature\n  blocksForRefs: { [key: string]: Block }\n  radius: number\n  config: AnyConfigurationModel\n  bezierRadius: number\n  selected: boolean\n  onClick: (\n    feature: Feature,\n    reg: AnyRegion,\n    endBlock: AnyRegion,\n    evt: unknown,\n  ) => void\n}) {\n  // find the blocks that our start and end points belong to\n  const startBlock = blocksForRefs[feature.get('refName')]\n  if (!startBlock) {\n    return null\n  }\n  let svType\n  if (feature.get('INFO')) {\n    ;[svType] = feature.get('INFO').SVTYPE || []\n  } else if (feature.get('mate')) {\n    svType = 'mate'\n  }\n  let endPosition\n  let endBlock: Block | undefined\n  const alt = feature.get('ALT')?.[0]\n  const bnd = alt && parseBreakend(alt)\n  if (bnd) {\n    // VCF BND\n    const matePosition = bnd.MatePosition.split(':')\n    endPosition = +matePosition[1]\n    endBlock = blocksForRefs[matePosition[0]]\n  } else if (alt === '<TRA>') {\n    // VCF TRA\n    const chr2 = feature.get('INFO')?.CHR2?.[0]\n    const end = feature.get('INFO')?.END?.[0]\n    endPosition = parseInt(end, 10)\n    endBlock = blocksForRefs[chr2]\n  } else if (svType === 'mate') {\n    // generic simplefeatures arcs\n    const mate = feature.get('mate')\n    const chr2 = mate.refName\n    endPosition = mate.start\n    endBlock = blocksForRefs[chr2]\n  }\n\n  if (endBlock) {\n    const startPos = feature.get('start')\n    const startRadians = bpToRadians(startBlock, startPos)\n    const endRadians = bpToRadians(endBlock, endPosition)\n    const startXY = polarToCartesian(radius, startRadians)\n    const endXY = polarToCartesian(radius, endRadians)\n    const controlXY = polarToCartesian(\n      bezierRadius,\n      (endRadians + startRadians) / 2,\n    )\n\n    const strokeColor = selected\n      ? readConfObject(config, 'strokeColorSelected', { feature })\n      : readConfObject(config, 'strokeColor', { feature })\n\n    const hoverStrokeColor = readConfObject(config, 'strokeColorHover', {\n      feature,\n    })\n    return (\n      <path\n        data-testid={`chord-${feature.id()}`}\n        d={['M', ...startXY, 'Q', ...controlXY, ...endXY].join(' ')}\n        style={{ stroke: strokeColor }}\n        onClick={evt => {\n          if (endBlock && startBlock) {\n            onClick(feature, startBlock.region, endBlock.region, evt)\n          }\n        }}\n        onMouseOver={evt => {\n          if (!selected) {\n            evt.currentTarget.style.stroke = hoverStrokeColor\n            evt.currentTarget.style.strokeWidth = '3px'\n          }\n        }}\n        onMouseOut={evt => {\n          if (!selected) {\n            evt.currentTarget.style.stroke = strokeColor\n            evt.currentTarget.style.strokeWidth = '1px'\n          }\n        }}\n      />\n    )\n  }\n\n  return null\n})\n\nexport default Chord\n","import React, { useMemo } from 'react'\nimport { observer } from 'mobx-react'\nimport { Feature } from '@jbrowse/core/util'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\n// locals\nimport Chord, { Block, AnyRegion } from './Chord'\n\nexport default observer(function StructuralVariantChords({\n  features,\n  config,\n  displayModel,\n  blockDefinitions,\n  radius,\n  bezierRadius,\n  displayModel: { selectedFeatureId },\n  onChordClick,\n}: {\n  features: Map<string, Feature>\n  radius: number\n  config: AnyConfigurationModel\n  displayModel: { id: string; selectedFeatureId: string }\n  blockDefinitions: Block[]\n  bezierRadius: number\n  onChordClick: (\n    feature: Feature,\n    reg: AnyRegion,\n    endBlock: AnyRegion,\n    evt: unknown,\n  ) => void\n}) {\n  // make a map of refName -> blockDefinition\n  const blocksForRefsMemo = useMemo(() => {\n    const blocksForRefs = {} as { [key: string]: Block }\n    blockDefinitions.forEach(block => {\n      ;(block.region.elided ? block.region.regions : [block.region]).forEach(\n        r => (blocksForRefs[r.refName] = block),\n      )\n    })\n    return blocksForRefs\n  }, [blockDefinitions])\n  const chords = []\n  for (const feature of features.values()) {\n    const id = feature.id()\n    const selected = String(selectedFeatureId) === String(id)\n    chords.push(\n      <Chord\n        key={id}\n        feature={feature}\n        config={config}\n        radius={radius}\n        bezierRadius={bezierRadius}\n        blocksForRefs={blocksForRefsMemo}\n        selected={selected}\n        onClick={onChordClick}\n      />,\n    )\n  }\n  const trackStyleId = `chords-${\n    typeof jest !== 'undefined' ? 'test' : displayModel.id\n  }`\n  return (\n    <g id={trackStyleId} data-testid=\"structuralVariantChordRenderer\">\n      <style\n        // eslint-disable-next-line react/no-danger\n        dangerouslySetInnerHTML={{\n          __html: `\n          #${trackStyleId} > path {\n            cursor: crosshair;\n            fill: none;\n          }\n`,\n        }}\n      />\n      {chords}\n    </g>\n  )\n})\n","import { lazy } from 'react'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport WidgetType from '@jbrowse/core/pluggableElementTypes/WidgetType'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { types } from 'mobx-state-tree'\nimport { stateModelFactory as baseModelFactory } from '@jbrowse/core/BaseFeatureWidget'\n\nexport const configSchema = ConfigurationSchema('VariantFeatureWidget', {})\n\nexport function stateModelFactory(pluginManager: PluginManager) {\n  const baseModel = baseModelFactory(pluginManager)\n  return types.compose(\n    baseModel,\n    types.model('VariantFeatureWidget', {\n      type: types.literal('VariantFeatureWidget'),\n      descriptions: types.frozen(),\n    }),\n  )\n}\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addWidgetType(\n    () =>\n      new WidgetType({\n        name: 'VariantFeatureWidget',\n        heading: 'Feature details',\n        configSchema,\n        stateModel: stateModelFactory(pluginManager),\n        ReactComponent: lazy(() => import('./VariantFeatureWidget')),\n      }),\n  )\n}\n","import VcfAdapterF from './VcfAdapter'\nimport VcfTabixAdapterF from './VcfTabixAdapter'\nimport ExtensionPointsF from './extensionPoints'\nimport VariantTrackF from './VariantTrack'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport ChordVariantDisplayF from './ChordVariantDisplay'\nimport LinearVariantDisplayF from './LinearVariantDisplay'\nimport StructuralVariantChordRendererF from './StructuralVariantChordRenderer'\nimport VariantFeatureWidgetF from './VariantFeatureWidget'\n\nexport default class VariantsPlugin extends Plugin {\n  name = 'VariantsPlugin'\n\n  install(pluginManager: PluginManager) {\n    VcfAdapterF(pluginManager)\n    VcfTabixAdapterF(pluginManager)\n    VariantFeatureWidgetF(pluginManager)\n    VariantTrackF(pluginManager)\n    ExtensionPointsF(pluginManager)\n    LinearVariantDisplayF(pluginManager)\n    StructuralVariantChordRendererF(pluginManager)\n    ChordVariantDisplayF(pluginManager)\n  }\n}\n\nexport { default as VcfFeature } from './VcfFeature'\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport TrackType from '@jbrowse/core/pluggableElementTypes/TrackType'\nimport { createBaseTrackModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport configSchemaF from './configSchema'\n\nexport default (pm: PluginManager) => {\n  pm.addTrackType(() => {\n    const configSchema = configSchemaF(pm)\n    return new TrackType({\n      name: 'VariantTrack',\n      displayName: 'Variant track',\n      configSchema,\n      stateModel: createBaseTrackModel(pm, 'VariantTrack', configSchema),\n    })\n  })\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'VcfAdapter',\n        displayName: 'VCF adapter',\n        configSchema,\n        getAdapterClass: () => import('./VcfAdapter').then(r => r.default),\n      }),\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\nimport configSchema from './configSchema'\n\nexport { default as configSchema } from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'VcfTabixAdapter',\n        displayName: 'VCF tabix adapter',\n        configSchema,\n        getAdapterClass: () => import('./VcfTabixAdapter').then(r => r.default),\n      }),\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport {\n  makeIndex,\n  makeIndexType,\n  getFileName,\n  AdapterGuesser,\n  TrackTypeGuesser,\n} from '@jbrowse/core/util/tracks'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addToExtensionPoint(\n    'Core-guessAdapterForLocation',\n    (adapterGuesser: AdapterGuesser) => {\n      return (\n        file: FileLocation,\n        index?: FileLocation,\n        adapterHint?: string,\n      ) => {\n        const regexGuess = /\\.vcf\\.b?gz$/i\n        const adapterName = 'VcfTabixAdapter'\n        const fileName = getFileName(file)\n        const indexName = index && getFileName(index)\n        const obj = {\n          type: adapterName,\n          vcfGzLocation: file,\n          index: {\n            location: index || makeIndex(file, '.tbi'),\n            indexType: makeIndexType(indexName, 'CSI', 'TBI'),\n          },\n        }\n        if (regexGuess.test(fileName) && !adapterHint) {\n          return obj\n        } else if (adapterHint === adapterName) {\n          return obj\n        }\n        return adapterGuesser(file, index, adapterHint)\n      }\n    },\n  )\n  pluginManager.addToExtensionPoint(\n    'Core-guessTrackTypeForLocation',\n    (trackTypeGuesser: TrackTypeGuesser) => {\n      return (adapterName: string) => {\n        if (adapterName === 'VcfTabixAdapter' || adapterName === 'VcfAdapter') {\n          return 'VariantTrack'\n        }\n        return trackTypeGuesser(adapterName)\n      }\n    },\n  )\n\n  pluginManager.addToExtensionPoint(\n    'Core-guessAdapterForLocation',\n    (adapterGuesser: AdapterGuesser) => {\n      return (\n        file: FileLocation,\n        index?: FileLocation,\n        adapterHint?: string,\n      ) => {\n        const regexGuess = /\\.vcf$/i\n        const adapterName = 'VcfAdapter'\n        const fileName = getFileName(file)\n        if (regexGuess.test(fileName) || adapterHint === adapterName) {\n          return {\n            type: adapterName,\n            vcfLocation: file,\n          }\n        }\n        return adapterGuesser(file, index, adapterHint)\n      }\n    },\n  )\n}\n","import ChordRendererType from '@jbrowse/core/pluggableElementTypes/renderers/CircularChordRendererType'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport configSchema from './configSchema'\nimport ReactComponent from './ReactComponent'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addRendererType(\n    () =>\n      new ChordRendererType({\n        name: 'StructuralVariantChordRenderer',\n        displayName: 'SV chord renderer',\n        ReactComponent,\n        configSchema,\n        pluginManager,\n      }),\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { BaseChordDisplayComponent } from '@jbrowse/plugin-circular-view'\nimport DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\n\n// locals\nimport configSchemaF from './models/configSchema'\nimport stateModelF from './models/stateModelFactory'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaF(pluginManager)\n    const stateModel = stateModelF(configSchema)\n    return new DisplayType({\n      name: 'ChordVariantDisplay',\n      displayName: 'Chord variant display',\n      configSchema,\n      stateModel,\n      trackType: 'VariantTrack',\n      viewType: 'CircularView',\n      ReactComponent: BaseChordDisplayComponent,\n    })\n  })\n}\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  measureText,\n  getContainingView,\n  getContainingTrack,\n} from '@jbrowse/core/util'\nimport { getConf } from '@jbrowse/core/configuration'\nimport {\n  BaseLinearDisplayComponent,\n  LinearGenomeViewModel,\n} from '@jbrowse/plugin-linear-genome-view'\n\n// locals\nimport { WiggleDisplayModel } from '../models/model'\nimport YScaleBar from '../../shared/YScaleBar'\n\ntype LGV = LinearGenomeViewModel\n\nconst LinearWiggleDisplay = observer((props: { model: WiggleDisplayModel }) => {\n  const { model } = props\n  const { stats, height, needsScalebar } = model\n\n  const { trackLabels } = getContainingView(model) as LGV\n  const track = getContainingTrack(model)\n  const left =\n    trackLabels === 'overlapping'\n      ? measureText(getConf(track, 'name'), 12.8) + 100\n      : 50\n  return (\n    <div>\n      <BaseLinearDisplayComponent {...props} />\n      {stats && needsScalebar ? (\n        <svg\n          style={{\n            position: 'absolute',\n            top: 0,\n            left,\n            pointerEvents: 'none',\n            height,\n            width: 50,\n          }}\n        >\n          <YScaleBar model={model} />\n        </svg>\n      ) : null}\n    </div>\n  )\n})\n\nexport default LinearWiggleDisplay\n\nexport { default as YScaleBar } from '../../shared/YScaleBar'\n","import FeatureRendererType, {\n  RenderArgs as FeatureRenderArgs,\n  RenderArgsDeserialized as FeatureRenderArgsDeserialized,\n} from '@jbrowse/core/pluggableElementTypes/renderers/FeatureRendererType'\nimport { renderToAbstractCanvas, Feature } from '@jbrowse/core/util'\nimport { ThemeOptions } from '@mui/material'\nimport { ScaleOpts, Source } from './util'\n\nexport interface RenderArgs extends FeatureRenderArgs {\n  scaleOpts: ScaleOpts\n}\n\nexport interface RenderArgsDeserialized extends FeatureRenderArgsDeserialized {\n  bpPerPx: number\n  height: number\n  highResolutionScaling: number\n  scaleOpts: ScaleOpts\n  displayCrossHatches: boolean\n  ticks: { values: number[] }\n  themeOptions: ThemeOptions\n}\n\nexport interface RenderArgsDeserializedWithFeatures\n  extends RenderArgsDeserialized {\n  features: Map<string, Feature>\n}\n\nexport interface MultiRenderArgsDeserialized\n  extends RenderArgsDeserializedWithFeatures {\n  sources: Source[]\n}\n\nexport default abstract class WiggleBaseRenderer extends FeatureRendererType {\n  supportsSVG = true\n\n  async render(renderProps: RenderArgsDeserialized) {\n    const features = await this.getFeatures(renderProps)\n    const { height, regions, bpPerPx } = renderProps\n    const [region] = regions\n    const width = (region.end - region.start) / bpPerPx\n\n    // @ts-expect-error\n    const { reducedFeatures, ...rest } = await renderToAbstractCanvas(\n      width,\n      height,\n      renderProps,\n      ctx =>\n        this.draw(ctx, {\n          ...renderProps,\n          features,\n        }),\n    )\n\n    const results = await super.render({\n      ...renderProps,\n      ...rest,\n      features,\n      height,\n      width,\n    })\n\n    return {\n      ...results,\n      ...rest,\n      features: reducedFeatures\n        ? new Map<string, Feature>(\n            reducedFeatures.map((r: Feature) => [r.id(), r]),\n          )\n        : results.features,\n      height,\n      width,\n      containsNoTransferables: true,\n    }\n  }\n\n  /**\n   * draw features to context given props, to be used by derived renderer\n   * classes\n   */\n  abstract draw<T extends RenderArgsDeserializedWithFeatures>(\n    ctx: CanvasRenderingContext2D,\n    props: T,\n  ): Promise<Record<string, unknown> | void>\n}\n\nexport {\n  type RenderArgsSerialized,\n  type RenderResults,\n  type ResultsDeserialized,\n  type ResultsSerialized,\n} from '@jbrowse/core/pluggableElementTypes/renderers/FeatureRendererType'\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config BigWigAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst BigWigAdapter = ConfigurationSchema(\n  'BigWigAdapter',\n  {\n    /**\n     * #slot\n     */\n    bigWigLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/my.bw',\n        locationType: 'UriLocation',\n      },\n    },\n\n    /**\n     * #slot\n     */\n    source: {\n      type: 'string',\n      defaultValue: '',\n      description: 'Used for multiwiggle',\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default BigWigAdapter\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { createBaseTrackConfig } from '@jbrowse/core/pluggableElementTypes/models'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config QuantitativeTrack\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nfunction configSchemaFactory(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'QuantitativeTrack',\n    {},\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: createBaseTrackConfig(pluginManager),\n    },\n  )\n}\n\nexport default configSchemaFactory\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { createBaseTrackConfig } from '@jbrowse/core/pluggableElementTypes/models'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config MultiQuantitativeTrack\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = (pluginManager: PluginManager) => {\n  return ConfigurationSchema(\n    'MultiQuantitativeTrack',\n    {},\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: createBaseTrackConfig(pluginManager),\n    },\n  )\n}\n\nexport default configSchema\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config MultiWiggleAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst MultiWiggleAdapter = ConfigurationSchema(\n  'MultiWiggleAdapter',\n  {\n    /**\n     * #slot\n     */\n    subadapters: {\n      type: 'frozen',\n      defaultValue: [],\n      description: 'array of subadapter JSON objects',\n    },\n    /**\n     * #slot\n     */\n    bigWigs: {\n      type: 'frozen',\n      description:\n        'array of bigwig filenames, alternative to the subadapters slot',\n      defaultValue: [],\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default MultiWiggleAdapter\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\n/**\n * #config WiggleRenderer\n * this is the \"base wiggle renderer config schema\"\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst WiggleRenderer = ConfigurationSchema(\n  'WiggleRenderer',\n  {\n    /**\n     * #slot\n     */\n    color: {\n      type: 'color',\n      description: 'the color of track, overrides posColor and negColor',\n      defaultValue: '#f0f',\n    },\n    /**\n     * #slot\n     */\n    posColor: {\n      type: 'color',\n      description: 'the color to use when the score is positive',\n      defaultValue: 'blue',\n    },\n    /**\n     * #slot\n     */\n    negColor: {\n      type: 'color',\n      description: 'the color to use when the score is negative',\n      defaultValue: 'red',\n    },\n    /**\n     * #slot\n     */\n    clipColor: {\n      type: 'color',\n      description: 'the color of the clipping marker',\n      defaultValue: 'red',\n    },\n    /**\n     * #slot\n     */\n    bicolorPivot: {\n      type: 'stringEnum',\n      model: types.enumeration('Scale type', [\n        'numeric',\n        'mean',\n        'z_score',\n        'none',\n      ]),\n      description: 'type of bicolor pivot',\n      defaultValue: 'numeric',\n    },\n    /**\n     * #slot\n     */\n    bicolorPivotValue: {\n      type: 'number',\n      defaultValue: 0,\n      description: 'value to use for bicolor pivot',\n    },\n  },\n  { explicitlyTyped: true },\n)\nexport default WiggleRenderer\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nimport baseWiggleRendererConfigSchema from '../configSchema'\n\n/**\n * #config DensityRenderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = ConfigurationSchema(\n  'DensityRenderer',\n  {},\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: baseWiggleRendererConfigSchema,\n    explicitlyTyped: true,\n  },\n)\n\nexport default configSchema\n","import { scaleLinear, scaleLog, scaleQuantize } from 'd3-scale'\nimport { autorun } from 'mobx'\nimport {\n  isAbortException,\n  getSession,\n  getContainingView,\n} from '@jbrowse/core/util'\nimport { QuantitativeStats } from '@jbrowse/core/util/stats'\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks'\nimport { addDisposer, isAlive } from 'mobx-state-tree'\n\nimport { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\nimport { AnyConfigurationModel, getConf } from '@jbrowse/core/configuration'\n\ntype LGV = LinearGenomeViewModel\n\nexport const YSCALEBAR_LABEL_OFFSET = 5\n\nexport interface ScaleOpts {\n  domain: number[]\n  range: number[]\n  scaleType: string\n  pivotValue?: number\n  inverted?: boolean\n}\n\nexport interface Source {\n  name: string\n  color?: string\n  group?: string\n}\n\n/**\n * produces a d3-scale from arguments. applies a \"nice domain\" adjustment\n *\n * @param object - containing attributes\n *   - domain [min,max]\n *   - range [min,max]\n *   - bounds [min,max]\n *   - scaleType (linear or log)\n *   - pivotValue (number)\n *   - inverted (boolean)\n */\nexport function getScale({\n  domain = [],\n  range = [],\n  scaleType,\n  pivotValue,\n  inverted,\n}: ScaleOpts) {\n  let scale\n  const [min, max] = domain\n  if (min === undefined || max === undefined) {\n    throw new Error('invalid domain')\n  }\n  if (scaleType === 'linear') {\n    scale = scaleLinear()\n  } else if (scaleType === 'log') {\n    scale = scaleLog()\n    scale.base(2)\n  } else if (scaleType === 'quantize') {\n    scale = scaleQuantize()\n  } else {\n    throw new Error('undefined scaleType')\n  }\n  scale.domain(pivotValue !== undefined ? [min, pivotValue, max] : [min, max])\n  scale.nice()\n\n  const [rangeMin, rangeMax] = range\n  if (rangeMin === undefined || rangeMax === undefined) {\n    throw new Error('invalid range')\n  }\n  scale.range(inverted ? range.slice().reverse() : range)\n  return scale\n}\n/**\n * gets the origin for drawing the graph. for linear this is 0, for log this is arbitrarily set to log(1)==0\n *\n * @param scaleType -\n */\nexport function getOrigin(scaleType: string /* , pivot, stats */) {\n  // if (pivot) {\n  //   if (pivot === 'mean') {\n  //     return stats.scoreMean || 0\n  //   }\n  //   if (pivot === 'zero') {\n  //     return 0\n  //   }\n  //   return parseFloat()\n  // }\n  // if (scaleType === 'z_score') {\n  //   return stats.scoreMean || 0\n  // }\n  if (scaleType === 'log') {\n    return 1\n  }\n  return 0\n}\n\n/**\n * produces a \"nice\" domain that actually rounds down to 0 for the min\n * or 0 to the max depending on if all values are positive or negative\n *\n * @param object - containing attributes\n *   - domain [min,max]\n *   - bounds [min,max]\n *   - mean\n *   - stddev\n *   - scaleType (linear or log)\n */\nexport function getNiceDomain({\n  scaleType,\n  domain,\n  bounds,\n}: {\n  scaleType: string\n  domain: readonly [number, number]\n  bounds: readonly [number | undefined, number | undefined]\n}) {\n  const [minScore, maxScore] = bounds\n  let [min, max] = domain\n\n  if (scaleType === 'linear') {\n    if (max < 0) {\n      max = 0\n    }\n    if (min > 0) {\n      min = 0\n    }\n  }\n  if (scaleType === 'log') {\n    // if the min is 0, assume that it's just something\n    // with no read coverage and that we should ignore it in calculations\n    // if it's greater than 1 pin to 1 for the full range also\n    // otherwise, we may see bigwigs with fractional values\n    if (min === 0 || min > 1) {\n      min = 1\n    }\n  }\n  if (min === undefined || max === undefined) {\n    throw new Error('invalid domain supplied to stats function')\n  }\n  if (minScore !== undefined && minScore !== Number.MIN_VALUE) {\n    min = minScore\n  }\n  if (maxScore !== undefined && maxScore !== Number.MAX_VALUE) {\n    max = maxScore\n  }\n  const getScaleType = (type: string) => {\n    if (type === 'linear') {\n      return scaleLinear()\n    }\n    if (type === 'log') {\n      const scale = scaleLog()\n      scale.base(2)\n      return scale\n    }\n    if (type === 'quantize') {\n      return scaleQuantize()\n    }\n    throw new Error(`undefined scaleType ${type}`)\n  }\n  const scale = getScaleType(scaleType)\n\n  scale.domain([min, max])\n  scale.nice()\n  return scale.domain() as [number, number]\n}\n\nexport async function getQuantitativeStats(\n  self: {\n    adapterConfig: AnyConfigurationModel\n    configuration: AnyConfigurationModel\n    autoscaleType: string\n    setMessage: (str: string) => void\n  },\n  opts: {\n    headers?: Record<string, string>\n    signal?: AbortSignal\n    filters?: string[]\n  },\n): Promise<QuantitativeStats> {\n  const { rpcManager } = getSession(self)\n  const nd = getConf(self, 'numStdDev') || 3\n  const { adapterConfig, autoscaleType } = self\n  const sessionId = getRpcSessionId(self)\n  const params = {\n    sessionId,\n    adapterConfig,\n    statusCallback: (message: string) => {\n      if (isAlive(self)) {\n        self.setMessage(message)\n      }\n    },\n    ...opts,\n  }\n\n  if (autoscaleType === 'global' || autoscaleType === 'globalsd') {\n    const results = (await rpcManager.call(\n      sessionId,\n      'WiggleGetGlobalQuantitativeStats',\n      params,\n    )) as QuantitativeStats\n    const { scoreMin, scoreMean, scoreStdDev } = results\n    // globalsd uses heuristic to avoid unnecessary scoreMin<0\n    // if the scoreMin is never less than 0\n    // helps with most coverage bigwigs just being >0\n    return autoscaleType === 'globalsd'\n      ? {\n          ...results,\n          scoreMin: scoreMin >= 0 ? 0 : scoreMean - nd * scoreStdDev,\n          scoreMax: scoreMean + nd * scoreStdDev,\n        }\n      : results\n  }\n  if (autoscaleType === 'local' || autoscaleType === 'localsd') {\n    const { dynamicBlocks, bpPerPx } = getContainingView(self) as LGV\n    const results = (await rpcManager.call(\n      sessionId,\n      'WiggleGetMultiRegionQuantitativeStats',\n      {\n        ...params,\n        regions: dynamicBlocks.contentBlocks.map(region => {\n          const { start, end } = region\n          return {\n            ...JSON.parse(JSON.stringify(region)),\n            start: Math.floor(start),\n            end: Math.ceil(end),\n          }\n        }),\n        bpPerPx,\n      },\n    )) as QuantitativeStats\n    const { scoreMin, scoreMean, scoreStdDev } = results\n\n    // localsd uses heuristic to avoid unnecessary scoreMin<0 if the\n    // scoreMin is never less than 0 helps with most coverage bigwigs\n    // just being >0\n    return autoscaleType === 'localsd'\n      ? {\n          ...results,\n          scoreMin: scoreMin >= 0 ? 0 : scoreMean - nd * scoreStdDev,\n          scoreMax: scoreMean + nd * scoreStdDev,\n        }\n      : results\n  }\n  if (autoscaleType === 'zscale') {\n    return rpcManager.call(\n      sessionId,\n      'WiggleGetGlobalQuantitativeStats',\n      params,\n    ) as Promise<QuantitativeStats>\n  }\n  throw new Error(`invalid autoscaleType '${autoscaleType}'`)\n}\n\nexport function quantitativeStatsAutorun(self: {\n  featureDensityStatsReady: boolean\n  regionTooLarge: boolean\n  error: unknown\n  setLoading: (aborter: AbortController) => void\n  setError: (error: unknown) => void\n  updateQuantitativeStats: (\n    stats: QuantitativeStats,\n    statsRegion: string,\n  ) => void\n  renderProps: () => Record<string, unknown>\n  configuration: AnyConfigurationModel\n  adapterConfig: AnyConfigurationModel\n  autoscaleType: string\n  setMessage: (str: string) => void\n}) {\n  addDisposer(\n    self,\n    autorun(\n      async () => {\n        try {\n          const aborter = new AbortController()\n          const view = getContainingView(self) as LGV\n          self.setLoading(aborter)\n\n          if (\n            !view.initialized ||\n            !self.featureDensityStatsReady ||\n            self.regionTooLarge ||\n            self.error\n          ) {\n            return\n          }\n          const statsRegion = JSON.stringify(view.dynamicBlocks)\n\n          const wiggleStats = await getQuantitativeStats(self, {\n            signal: aborter.signal,\n            ...self.renderProps(),\n          })\n\n          if (isAlive(self)) {\n            self.updateQuantitativeStats(wiggleStats, statsRegion)\n          }\n        } catch (e) {\n          if (!isAbortException(e) && isAlive(self)) {\n            console.error(e)\n            self.setError(e)\n          }\n        }\n      },\n      { delay: 1000 },\n    ),\n  )\n}\n\nexport function toP(s = 0) {\n  return +(+s).toPrecision(6)\n}\n\nexport function round(value: number) {\n  return Math.round(value * 1e5) / 1e5\n}\n","import {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { clamp, featureSpanPx, Feature, Region } from '@jbrowse/core/util'\n\n// locals\nimport { getOrigin, getScale, ScaleOpts } from './util'\n\n// avoid drawing negative width features for SVG exports\nfunction fillRectCtx(\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  ctx: CanvasRenderingContext2D,\n  color?: string,\n) {\n  if (width < 0) {\n    x += width\n    width = -width\n  }\n  if (height < 0) {\n    y += height\n    height = -height\n  }\n\n  if (color) {\n    ctx.fillStyle = color\n  }\n  ctx.fillRect(x, y, width, height)\n}\n\nconst fudgeFactor = 0.4\nconst clipHeight = 2\n\nexport function drawXY(\n  ctx: CanvasRenderingContext2D,\n  props: {\n    features: Map<string, Feature> | Feature[]\n    bpPerPx: number\n    regions: Region[]\n    scaleOpts: ScaleOpts\n    height: number\n    ticks: { values: number[] }\n    config: AnyConfigurationModel\n    displayCrossHatches: boolean\n    offset?: number\n    colorCallback: (f: Feature, score: number) => string\n    Color: typeof import('color')\n  },\n) {\n  const {\n    features,\n    bpPerPx,\n    regions,\n    scaleOpts,\n    height: unadjustedHeight,\n    config,\n    ticks,\n    displayCrossHatches,\n    offset = 0,\n    colorCallback,\n    Color,\n  } = props\n  const [region] = regions\n  const width = (region.end - region.start) / bpPerPx\n\n  // the adjusted height takes into account YSCALEBAR_LABEL_OFFSET from the\n  // wiggle display, and makes the height of the actual drawn area add\n  // \"padding\" to the top and bottom of the display\n  const height = unadjustedHeight - offset * 2\n\n  const filled = readConfObject(config, 'filled')\n  const clipColor = readConfObject(config, 'clipColor')\n  const summaryScoreMode = readConfObject(config, 'summaryScoreMode')\n  const pivotValue = readConfObject(config, 'bicolorPivotValue')\n  const minSize = readConfObject(config, 'minSize')\n\n  const scale = getScale({ ...scaleOpts, range: [0, height] })\n  const originY = getOrigin(scaleOpts.scaleType)\n  const [niceMin, niceMax] = scale.domain()\n\n  const toY = (n: number) => clamp(height - (scale(n) || 0), 0, height) + offset\n  const toOrigin = (n: number) => toY(originY) - toY(n)\n  const getHeight = (n: number) => (filled ? toOrigin(n) : Math.max(minSize, 1))\n  let hasClipping = false\n\n  let prevLeftPx = -Infinity\n  const reducedFeatures = []\n  const crossingOrigin = niceMin < pivotValue && niceMax > pivotValue\n\n  // we handle whiskers separately to render max row, min row, and avg in three\n  // passes. this reduces subpixel rendering issues. note: for stylistic\n  // reasons, clipping indicator is only drawn for score, not min/max score\n  if (summaryScoreMode === 'whiskers') {\n    let lastCol\n    let lastMix\n    for (const feature of features.values()) {\n      const [leftPx, rightPx] = featureSpanPx(feature, region, bpPerPx)\n      if (feature.get('summary')) {\n        const w = Math.max(rightPx - leftPx + fudgeFactor, minSize)\n        const max = feature.get('maxScore')\n        const c = colorCallback(feature, max)\n        const effectiveC = crossingOrigin\n          ? c\n          : c === lastCol\n          ? lastMix\n          : (lastMix = Color(c).lighten(0.4).toString())\n        fillRectCtx(leftPx, toY(max), w, getHeight(max), ctx, effectiveC)\n        lastCol = c\n      }\n    }\n    lastMix = undefined\n    lastCol = undefined\n    for (const feature of features.values()) {\n      const [leftPx, rightPx] = featureSpanPx(feature, region, bpPerPx)\n      const score = feature.get('score')\n      const max = feature.get('maxScore')\n      const min = feature.get('minScore')\n      const summary = feature.get('summary')\n      const c = colorCallback(feature, score)\n      const effectiveC =\n        crossingOrigin && summary\n          ? c === lastCol\n            ? lastMix\n            : (lastMix = Color(colorCallback(feature, max))\n                .mix(Color(colorCallback(feature, min)))\n                .toString())\n          : c\n      const w = Math.max(rightPx - leftPx + fudgeFactor, minSize)\n      // create reduced features, avoiding multiple features per px\n      if (Math.floor(leftPx) !== Math.floor(prevLeftPx)) {\n        reducedFeatures.push(feature)\n        prevLeftPx = leftPx\n      }\n      hasClipping = hasClipping || score < niceMin || score > niceMax\n      fillRectCtx(leftPx, toY(score), w, getHeight(score), ctx, effectiveC)\n      lastCol = c\n    }\n    lastMix = undefined\n    lastCol = undefined\n    for (const feature of features.values()) {\n      const [leftPx, rightPx] = featureSpanPx(feature, region, bpPerPx)\n\n      if (feature.get('summary')) {\n        const min = feature.get('minScore')\n        const c = colorCallback(feature, min)\n        const w = Math.max(rightPx - leftPx + fudgeFactor, minSize)\n        const effectiveC = crossingOrigin\n          ? c\n          : c === lastCol\n          ? lastMix\n          : (lastMix = Color(c).darken(0.4).toString())\n\n        fillRectCtx(leftPx, toY(min), w, getHeight(min), ctx, effectiveC)\n        lastCol = c\n      }\n    }\n  } else {\n    for (const feature of features.values()) {\n      const [leftPx, rightPx] = featureSpanPx(feature, region, bpPerPx)\n\n      // create reduced features, avoiding multiple features per px\n      if (Math.floor(leftPx) !== Math.floor(prevLeftPx)) {\n        reducedFeatures.push(feature)\n        prevLeftPx = leftPx\n      }\n\n      const score = feature.get('score')\n      const c = colorCallback(feature, score)\n\n      hasClipping = hasClipping || score < niceMin || score > niceMax\n      const w = Math.max(rightPx - leftPx + fudgeFactor, minSize)\n\n      if (summaryScoreMode === 'max') {\n        const s = feature.get('summary') ? feature.get('maxScore') : score\n        fillRectCtx(leftPx, toY(s), w, getHeight(s), ctx, c)\n      } else if (summaryScoreMode === 'min') {\n        const s = feature.get('summary') ? feature.get('minScore') : score\n        fillRectCtx(leftPx, toY(s), w, getHeight(s), ctx, c)\n      } else {\n        fillRectCtx(leftPx, toY(score), w, getHeight(score), ctx, c)\n      }\n    }\n  }\n\n  // second pass: draw clipping\n  // avoid persisting the red fillstyle with save/restore\n  ctx.save()\n  if (hasClipping) {\n    ctx.fillStyle = clipColor\n    for (const feature of features.values()) {\n      const [leftPx, rightPx] = featureSpanPx(feature, region, bpPerPx)\n      const w = rightPx - leftPx + fudgeFactor\n      const score = feature.get('score')\n      if (score > niceMax) {\n        fillRectCtx(leftPx, offset, w, clipHeight, ctx)\n      } else if (score < niceMin && scaleOpts.scaleType !== 'log') {\n        fillRectCtx(leftPx, unadjustedHeight, w, clipHeight, ctx)\n      }\n    }\n  }\n  ctx.restore()\n\n  if (displayCrossHatches) {\n    ctx.lineWidth = 1\n    ctx.strokeStyle = 'rgba(200,200,200,0.5)'\n    ticks.values.forEach(tick => {\n      ctx.beginPath()\n      ctx.moveTo(0, Math.round(toY(tick)))\n      ctx.lineTo(width, Math.round(toY(tick)))\n      ctx.stroke()\n    })\n  }\n\n  return { reducedFeatures }\n}\n\nexport function drawLine(\n  ctx: CanvasRenderingContext2D,\n  props: {\n    features: Map<string, Feature> | Feature[]\n    regions: Region[]\n    bpPerPx: number\n    scaleOpts: ScaleOpts\n    height: number\n    ticks: { values: number[] }\n    displayCrossHatches: boolean\n    colorCallback: (f: Feature, score: number) => string\n    config: AnyConfigurationModel\n    offset?: number\n  },\n) {\n  const {\n    features,\n    regions,\n    bpPerPx,\n    scaleOpts,\n    height: unadjustedHeight,\n    ticks: { values },\n    displayCrossHatches,\n    colorCallback,\n    config,\n    offset = 0,\n  } = props\n  const [region] = regions\n  const width = (region.end - region.start) / bpPerPx\n\n  // the adjusted height takes into account YSCALEBAR_LABEL_OFFSET from the\n  // wiggle display, and makes the height of the actual drawn area add\n  // \"padding\" to the top and bottom of the display\n  const height = unadjustedHeight - offset * 2\n  const clipColor = readConfObject(config, 'clipColor')\n  const scale = getScale({ ...scaleOpts, range: [0, height] })\n  const [niceMin, niceMax] = scale.domain()\n  const toY = (n: number) => clamp(height - (scale(n) || 0), 0, height) + offset\n\n  let lastVal\n\n  let prevLeftPx = -Infinity\n  const reducedFeatures = []\n  for (const feature of features.values()) {\n    const [leftPx, rightPx] = featureSpanPx(feature, region, bpPerPx)\n\n    // create reduced features, avoiding multiple features per px\n    if (Math.floor(leftPx) !== Math.floor(prevLeftPx)) {\n      reducedFeatures.push(feature)\n      prevLeftPx = leftPx\n    }\n    const score = feature.get('score')\n    const lowClipping = score < niceMin\n    const highClipping = score > niceMax\n    const w = rightPx - leftPx + fudgeFactor\n\n    const c = colorCallback(feature, score)\n\n    ctx.beginPath()\n    ctx.strokeStyle = c\n    const startPos = lastVal !== undefined ? lastVal : score\n    if (!region.reversed) {\n      ctx.moveTo(leftPx, toY(startPos))\n      ctx.lineTo(leftPx, toY(score))\n      ctx.lineTo(rightPx, toY(score))\n    } else {\n      ctx.moveTo(rightPx, toY(startPos))\n      ctx.lineTo(rightPx, toY(score))\n      ctx.lineTo(leftPx, toY(score))\n    }\n    ctx.stroke()\n    lastVal = score\n\n    if (highClipping) {\n      ctx.fillStyle = clipColor\n      ctx.fillRect(leftPx, offset, w, clipHeight)\n    } else if (lowClipping && scaleOpts.scaleType !== 'log') {\n      ctx.fillStyle = clipColor\n      ctx.fillRect(leftPx, height - clipHeight, w, height)\n    }\n  }\n\n  if (displayCrossHatches) {\n    ctx.lineWidth = 1\n    ctx.strokeStyle = 'rgba(200,200,200,0.5)'\n    values.forEach(tick => {\n      ctx.beginPath()\n      ctx.moveTo(0, Math.round(toY(tick)))\n      ctx.lineTo(width, Math.round(toY(tick)))\n      ctx.stroke()\n    })\n  }\n  return { reducedFeatures }\n}\n\nexport function drawDensity(\n  ctx: CanvasRenderingContext2D,\n  props: {\n    features: Map<string, Feature> | Feature[]\n    regions: Region[]\n    bpPerPx: number\n    scaleOpts: ScaleOpts\n    height: number\n    ticks: { values: number[] }\n    displayCrossHatches: boolean\n    config: AnyConfigurationModel\n  },\n) {\n  const { features, regions, bpPerPx, scaleOpts, height, config } = props\n  const [region] = regions\n  const pivot = readConfObject(config, 'bicolorPivot')\n  const pivotValue = readConfObject(config, 'bicolorPivotValue')\n  const negColor = readConfObject(config, 'negColor')\n  const posColor = readConfObject(config, 'posColor')\n  const color = readConfObject(config, 'color')\n  const clipColor = readConfObject(config, 'clipColor')\n  const crossing = pivot !== 'none' && scaleOpts.scaleType !== 'log'\n  const scale = getScale({\n    ...scaleOpts,\n    pivotValue: crossing ? pivotValue : undefined,\n    range: crossing ? [negColor, 'white', posColor] : ['white', posColor],\n  })\n\n  const scale2 = getScale({ ...scaleOpts, range: [0, height] })\n  const cb =\n    color === '#f0f'\n      ? (_: Feature, score: number) => scale(score)\n      : (feature: Feature, score: number) =>\n          readConfObject(config, 'color', { feature, score })\n  const [niceMin, niceMax] = scale2.domain()\n\n  let prevLeftPx = -Infinity\n  let hasClipping = false\n  const reducedFeatures = []\n  for (const feature of features.values()) {\n    const [leftPx, rightPx] = featureSpanPx(feature, region, bpPerPx)\n\n    // create reduced features, avoiding multiple features per px\n    if (Math.floor(leftPx) !== Math.floor(prevLeftPx)) {\n      reducedFeatures.push(feature)\n      prevLeftPx = leftPx\n    }\n    const score = feature.get('score')\n    hasClipping = hasClipping || score > niceMax || score < niceMin\n    const w = rightPx - leftPx + fudgeFactor\n    ctx.fillStyle = cb(feature, score)\n    ctx.fillRect(leftPx, 0, w, height)\n  }\n\n  // second pass: draw clipping\n  // avoid persisting the red fillstyle with save/restore\n  ctx.save()\n  if (hasClipping) {\n    ctx.fillStyle = clipColor\n    for (const feature of features.values()) {\n      const [leftPx, rightPx] = featureSpanPx(feature, region, bpPerPx)\n      const w = rightPx - leftPx + fudgeFactor\n      const score = feature.get('score')\n      if (score > niceMax) {\n        fillRectCtx(leftPx, 0, w, clipHeight, ctx)\n      } else if (score < niceMin && scaleOpts.scaleType !== 'log') {\n        fillRectCtx(leftPx, 0, w, clipHeight, ctx)\n      }\n    }\n  }\n  ctx.restore()\n\n  return { reducedFeatures }\n}\n","import { drawDensity } from '../drawxy'\n\nimport WiggleBaseRenderer, {\n  RenderArgsDeserializedWithFeatures,\n} from '../WiggleBaseRenderer'\n\nexport default class DensityRenderer extends WiggleBaseRenderer {\n  async draw(\n    ctx: CanvasRenderingContext2D,\n    props: RenderArgsDeserializedWithFeatures,\n  ) {\n    return drawDensity(ctx, props)\n  }\n}\n","import { observer } from 'mobx-react'\nimport React, { useRef } from 'react'\n\nimport { Region } from '@jbrowse/core/util/types'\nimport { Feature } from '@jbrowse/core/util'\nimport { PrerenderedCanvas } from '@jbrowse/core/ui'\n\nfunction WiggleRendering(props: {\n  regions: Region[]\n  features: Map<string, Feature>\n  bpPerPx: number\n  width: number\n  height: number\n  onMouseLeave: Function\n  onMouseMove: Function\n  onFeatureClick: Function\n  blockKey: string\n}) {\n  const {\n    regions,\n    features,\n    bpPerPx,\n    width,\n    height,\n    onMouseLeave = () => {},\n    onMouseMove = () => {},\n    onFeatureClick = () => {},\n  } = props\n  const [region] = regions\n  const ref = useRef<HTMLDivElement>(null)\n\n  function getFeatureUnderMouse(eventClientX: number) {\n    // calculates feature under mouse\n    let offset = 0\n    if (ref.current) {\n      offset = ref.current.getBoundingClientRect().left\n    }\n    const offsetX = eventClientX - offset\n    const px = region.reversed ? width - offsetX : offsetX\n    const clientBp = region.start + bpPerPx * px\n    let featureUnderMouse\n    for (const feature of features.values()) {\n      // bpPerPx added to the end to accommodate \"reduced features\" (one feature per px)\n      if (\n        clientBp <= feature.get('end') + bpPerPx &&\n        clientBp >= feature.get('start')\n      ) {\n        featureUnderMouse = feature\n        break\n      }\n    }\n    return featureUnderMouse\n  }\n  return (\n    <div\n      ref={ref}\n      data-testid=\"wiggle-rendering-test\"\n      onMouseMove={event =>\n        onMouseMove(event, getFeatureUnderMouse(event.clientX)?.id())\n      }\n      onClick={event =>\n        onFeatureClick(event, getFeatureUnderMouse(event.clientX)?.id())\n      }\n      onMouseLeave={event => onMouseLeave(event)}\n      style={{\n        overflow: 'visible',\n        position: 'relative',\n        height,\n      }}\n    >\n      <PrerenderedCanvas {...props} />\n    </div>\n  )\n}\n\nexport default observer(WiggleRendering)\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { Feature } from '@jbrowse/core/util'\nimport { drawXY } from '../drawxy'\nimport WiggleBaseRenderer, {\n  RenderArgsDeserializedWithFeatures,\n} from '../WiggleBaseRenderer'\nimport { YSCALEBAR_LABEL_OFFSET } from '../util'\n\nexport default class XYPlotRenderer extends WiggleBaseRenderer {\n  async draw(\n    ctx: CanvasRenderingContext2D,\n    props: RenderArgsDeserializedWithFeatures,\n  ) {\n    const { features, config } = props\n\n    // the adjusted height takes into account YSCALEBAR_LABEL_OFFSET from the\n    // wiggle display, and makes the height of the actual drawn area add\n    // \"padding\" to the top and bottom of the display\n    const pivotValue = readConfObject(config, 'bicolorPivotValue')\n    const negColor = readConfObject(config, 'negColor')\n    const posColor = readConfObject(config, 'posColor')\n    const Color = await import('color').then(f => f.default)\n\n    return drawXY(ctx, {\n      ...props,\n      colorCallback:\n        readConfObject(config, 'color') === '#f0f'\n          ? (_: Feature, score: number) =>\n              score < pivotValue ? negColor : posColor\n          : (feature: Feature, _score: number) =>\n              readConfObject(config, 'color', { feature }),\n      offset: YSCALEBAR_LABEL_OFFSET,\n      features: [...features.values()],\n      Color,\n    })\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport baseWiggleRendererConfigSchema from '../configSchema'\nimport { types } from 'mobx-state-tree'\n\n/**\n * #config XYPlotRenderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = ConfigurationSchema(\n  'XYPlotRenderer',\n  {\n    /**\n     * #slot\n     */\n    filled: {\n      type: 'boolean',\n      defaultValue: true,\n    },\n    /**\n     * #slot\n     */\n    displayCrossHatches: {\n      type: 'boolean',\n      description: 'choose to draw cross hatches (sideways lines)',\n      defaultValue: false,\n    },\n    /**\n     * #slot\n     */\n    summaryScoreMode: {\n      type: 'stringEnum',\n      model: types.enumeration('Score type', ['max', 'min', 'avg', 'whiskers']),\n      description:\n        'choose whether to use max/min/average or whiskers which combines all three into the same rendering',\n      defaultValue: 'whiskers',\n    },\n    /**\n     * #slot\n     */\n    minSize: {\n      type: 'number',\n      defaultValue: 0,\n    },\n  },\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: baseWiggleRendererConfigSchema,\n    explicitlyTyped: true,\n  },\n)\n\nexport default configSchema\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport baseWiggleRendererConfigSchema from '../configSchema'\n\n/**\n * #config LinePlotRenderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = ConfigurationSchema(\n  'LinePlotRenderer',\n  {\n    /**\n     * #slot\n     */\n    displayCrossHatches: {\n      type: 'boolean',\n      description: 'choose to draw cross hatches (sideways lines)',\n      defaultValue: false,\n    },\n  },\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: baseWiggleRendererConfigSchema,\n    explicitlyTyped: true,\n  },\n)\n\nexport default configSchema\n","import WiggleBaseRenderer, {\n  RenderArgsDeserializedWithFeatures,\n} from '../WiggleBaseRenderer'\n\nimport { YSCALEBAR_LABEL_OFFSET } from '../util'\nimport { drawLine } from '../drawxy'\n\nexport default class LinePlotRenderer extends WiggleBaseRenderer {\n  async draw(\n    ctx: CanvasRenderingContext2D,\n    props: RenderArgsDeserializedWithFeatures,\n  ) {\n    return drawLine(ctx, {\n      ...props,\n      offset: YSCALEBAR_LABEL_OFFSET,\n      colorCallback: () => 'grey',\n    })\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { baseLinearDisplayConfigSchema } from '@jbrowse/plugin-linear-genome-view'\nimport { types } from 'mobx-state-tree'\n\n/**\n * #config SharedWiggleDisplay\n */\nexport default function sharedWiggleConfigFactory() {\n  return ConfigurationSchema(\n    'MultiLinearWiggleDisplay',\n    {\n      /**\n       * #slot\n       */\n      autoscale: {\n        type: 'stringEnum',\n        defaultValue: 'local',\n        model: types.enumeration('Autoscale type', [\n          'global',\n          'local',\n          'globalsd',\n          'localsd',\n          'zscore',\n        ]),\n        description:\n          'global/local using their min/max values or w/ standard deviations (globalsd/localsd)',\n      },\n\n      /**\n       * #slot\n       */\n      minimalTicks: {\n        type: 'boolean',\n        defaultValue: false,\n        description: 'use the minimal amount of ticks',\n      },\n\n      /**\n       * #slot\n       */\n      minScore: {\n        type: 'number',\n        defaultValue: Number.MIN_VALUE,\n        description: 'minimum value for the y-scale',\n      },\n      /**\n       * #slot\n       */\n      maxScore: {\n        type: 'number',\n        description: 'maximum value for the y-scale',\n        defaultValue: Number.MAX_VALUE,\n      },\n      /**\n       * #slot\n       */\n      numStdDev: {\n        type: 'number',\n        description:\n          'number of standard deviations to use for autoscale types globalsd or localsd',\n        defaultValue: 3,\n      },\n      /**\n       * #slot\n       */\n      scaleType: {\n        type: 'stringEnum',\n        model: types.enumeration('Scale type', ['linear', 'log']), // todo zscale\n        description: 'The type of scale to use',\n        defaultValue: 'linear',\n      },\n\n      /**\n       * #slot\n       */\n      inverted: {\n        type: 'boolean',\n        description: 'draw upside down',\n        defaultValue: false,\n      },\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: baseLinearDisplayConfigSchema,\n      explicitlyTyped: true,\n    },\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { alpha, Portal } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { Feature } from '@jbrowse/core/util'\n\n// locals\nimport { YSCALEBAR_LABEL_OFFSET, round } from './util'\nimport { usePopper } from 'react-popper'\n\nconst useStyles = makeStyles()(theme => ({\n  // these styles come from\n  // https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/Tooltip/Tooltip.js\n  tooltip: {\n    position: 'absolute',\n    pointerEvents: 'none',\n    backgroundColor: alpha(theme.palette.grey[700], 0.9),\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.common.white,\n    fontFamily: theme.typography.fontFamily,\n    padding: '4px 8px',\n    fontSize: theme.typography.pxToRem(12),\n    lineHeight: `${round(14 / 10)}em`,\n    maxWidth: 300,\n    wordWrap: 'break-word',\n  },\n\n  hoverVertical: {\n    background: '#333',\n    border: 'none',\n    width: 1,\n    height: '100%',\n    top: YSCALEBAR_LABEL_OFFSET,\n    cursor: 'default',\n    position: 'absolute',\n    pointerEvents: 'none',\n  },\n}))\n\ntype Coord = [number, number]\n\n// React.forwardRef component for the tooltip, the ref is used for measuring\n// the size of the tooltip\nexport type TooltipContentsComponent = React.ForwardRefExoticComponent<\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  { feature: Feature; model: any } & React.RefAttributes<HTMLDivElement>\n>\n\nfunction Tooltip({\n  model,\n  height,\n  clientMouseCoord,\n  offsetMouseCoord,\n  clientRect,\n  TooltipContents,\n  useClientY,\n}: {\n  model: { featureUnderMouse: Feature }\n  useClientY?: boolean\n  height: number\n  clientMouseCoord: Coord\n  offsetMouseCoord: Coord\n  clientRect?: DOMRect\n  TooltipContents: TooltipContentsComponent\n}) {\n  const { featureUnderMouse } = model\n  const [width, setWidth] = useState(0)\n  const [anchorEl, setAnchorEl] = useState<HTMLDivElement | null>(null)\n  const { classes } = useStyles()\n\n  // must be memoized a la https://github.com/popperjs/react-popper/issues/391\n  const virtElement = useMemo(\n    () => ({\n      getBoundingClientRect: () => {\n        const x = clientMouseCoord[0] + width / 2 + 20\n        const y = useClientY ? clientMouseCoord[1] : clientRect?.top || 0\n        return {\n          top: y,\n          left: x,\n          bottom: y,\n          right: x,\n          width: 0,\n          height: 0,\n          x,\n          y,\n          toJSON() {},\n        }\n      },\n    }),\n    [clientRect?.top, clientMouseCoord, width, useClientY],\n  )\n  const { styles, attributes } = usePopper(virtElement, anchorEl)\n\n  return featureUnderMouse ? (\n    <>\n      <Portal>\n        <div\n          ref={setAnchorEl}\n          className={classes.tooltip}\n          // zIndex needed to go over widget drawer\n          style={{ ...styles.popper, zIndex: 100000 }}\n          {...attributes.popper}\n        >\n          <TooltipContents\n            ref={elt => setWidth(elt?.getBoundingClientRect().width || 0)}\n            model={model}\n            feature={featureUnderMouse}\n          />\n        </div>\n      </Portal>\n\n      <div\n        className={classes.hoverVertical}\n        style={{\n          left: offsetMouseCoord[0],\n          height: height - YSCALEBAR_LABEL_OFFSET * 2,\n        }}\n      />\n    </>\n  ) : null\n}\n\nexport default observer(Tooltip)\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { Feature } from '@jbrowse/core/util'\n\n// locals\nimport Tooltip, { TooltipContentsComponent } from '../../Tooltip'\nimport { toP } from '../../util'\n\nconst en = (n: number) => n.toLocaleString('en-US')\n\ninterface Props {\n  feature: Feature\n}\n\nconst TooltipContents = React.forwardRef<HTMLDivElement, Props>(function (\n  { feature },\n  ref,\n) {\n  const start = feature.get('start')\n  const end = feature.get('end')\n  const name = feature.get('refName')\n  const loc = [name, start === end ? en(start) : `${en(start)}..${en(end)}`]\n    .filter(f => !!f)\n    .join(':')\n\n  return feature.get('summary') !== undefined ? (\n    <div ref={ref}>\n      {loc}\n      <br />\n      Max: {toP(feature.get('maxScore'))}\n      <br />\n      Avg: {toP(feature.get('score'))}\n      <br />\n      Min: {toP(feature.get('minScore'))}\n    </div>\n  ) : (\n    <div ref={ref}>\n      {loc}\n      <br />\n      {`${toP(feature.get('score'))}`}\n    </div>\n  )\n})\n\ntype Coord = [number, number]\n\nconst WiggleTooltip = observer(function (props: {\n  model: { featureUnderMouse: Feature }\n  height: number\n  offsetMouseCoord: Coord\n  clientMouseCoord: Coord\n  clientRect?: DOMRect\n  TooltipContents?: TooltipContentsComponent\n}) {\n  return <Tooltip TooltipContents={TooltipContents} {...props} />\n})\nexport default WiggleTooltip\n\nexport { default as Tooltip } from '../../Tooltip'\n","import {\n  AnyConfigurationSchemaType,\n  ConfigurationReference,\n  getConf,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport {\n  Feature,\n  getEnv,\n  getSession,\n  isSelectionContainer,\n} from '@jbrowse/core/util'\nimport { BaseLinearDisplay } from '@jbrowse/plugin-linear-genome-view'\nimport { types } from 'mobx-state-tree'\n\n// locals\nimport { getNiceDomain } from '../util'\nimport { lazy } from 'react'\n\n// lazies\nconst SetMinMaxDlg = lazy(() => import('./SetMinMaxDialog'))\n\n/**\n * #stateModel SharedWiggleMixin\n */\nexport default function SharedWiggleMixin(\n  configSchema: AnyConfigurationSchemaType,\n) {\n  return types\n    .compose(\n      BaseLinearDisplay,\n      types.model({\n        /**\n         * #property\n         */\n        selectedRendering: types.optional(types.string, ''),\n        /**\n         * #property\n         */\n        resolution: types.optional(types.number, 1),\n        /**\n         * #property\n         */\n        fill: types.maybe(types.boolean),\n        /**\n         * #property\n         */\n        minSize: types.maybe(types.number),\n        /**\n         * #property\n         */\n        color: types.maybe(types.string),\n        /**\n         * #property\n         */\n        posColor: types.maybe(types.string),\n        /**\n         * #property\n         */\n        negColor: types.maybe(types.string),\n        /**\n         * #property\n         */\n        summaryScoreMode: types.maybe(types.string),\n        /**\n         * #property\n         */\n        rendererTypeNameState: types.maybe(types.string),\n        /**\n         * #property\n         */\n        scale: types.maybe(types.string),\n        /**\n         * #property\n         */\n        autoscale: types.maybe(types.string),\n        /**\n         * #property\n         */\n        displayCrossHatches: types.maybe(types.boolean),\n        /**\n         * #property\n         */\n        constraints: types.optional(\n          types.model({\n            max: types.maybe(types.number),\n            min: types.maybe(types.number),\n          }),\n          {},\n        ),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n      }),\n    )\n    .volatile(() => ({\n      message: undefined as undefined | string,\n      stats: undefined as { scoreMin: number; scoreMax: number } | undefined,\n      statsFetchInProgress: undefined as undefined | AbortController,\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      updateQuantitativeStats(stats: { scoreMin: number; scoreMax: number }) {\n        const { scoreMin, scoreMax } = stats\n        const EPSILON = 0.000001\n        if (!self.stats) {\n          self.stats = { scoreMin, scoreMax }\n        } else if (\n          Math.abs(self.stats.scoreMax - scoreMax) > EPSILON ||\n          Math.abs(self.stats.scoreMin - scoreMin) > EPSILON\n        ) {\n          self.stats = { scoreMin, scoreMax }\n        }\n      },\n      /**\n       * #action\n       */\n      setColor(color?: string) {\n        self.color = color\n      },\n      /**\n       * #action\n       */\n      setPosColor(color?: string) {\n        self.posColor = color\n      },\n      /**\n       * #action\n       */\n      setNegColor(color?: string) {\n        self.negColor = color\n      },\n\n      /**\n       * #action\n       */\n      setLoading(aborter: AbortController) {\n        const { statsFetchInProgress: statsFetch } = self\n        if (statsFetch !== undefined && !statsFetch.signal.aborted) {\n          statsFetch.abort()\n        }\n        self.statsFetchInProgress = aborter\n      },\n\n      /**\n       * #action\n       * this overrides the BaseLinearDisplayModel to avoid popping up a\n       * feature detail display, but still sets the feature selection on the\n       * model so listeners can detect a click\n       */\n      selectFeature(feature: Feature) {\n        const session = getSession(self)\n        if (isSelectionContainer(session)) {\n          session.setSelection(feature)\n        }\n      },\n\n      /**\n       * #action\n       */\n      setResolution(res: number) {\n        self.resolution = res\n      },\n\n      /**\n       * #action\n       */\n      setFill(fill: number) {\n        if (fill === 0) {\n          self.fill = true\n          self.minSize = 0\n        } else if (fill === 1) {\n          self.fill = false\n          self.minSize = 1\n        } else if (fill === 2) {\n          self.fill = false\n          self.minSize = 2\n        }\n      },\n\n      /**\n       * #action\n       */\n      toggleLogScale() {\n        self.scale = self.scale === 'log' ? 'linear' : 'log'\n      },\n\n      /**\n       * #action\n       */\n      setScaleType(scale?: string) {\n        self.scale = scale\n      },\n\n      /**\n       * #action\n       */\n      setSummaryScoreMode(val: string) {\n        self.summaryScoreMode = val\n      },\n\n      /**\n       * #action\n       */\n      setAutoscale(val: string) {\n        self.autoscale = val\n      },\n\n      /**\n       * #action\n       */\n      setMaxScore(val?: number) {\n        self.constraints.max = val\n      },\n\n      /**\n       * #action\n       */\n      setRendererType(val: string) {\n        self.rendererTypeNameState = val\n      },\n\n      /**\n       * #action\n       */\n      setMinScore(val?: number) {\n        self.constraints.min = val\n      },\n\n      /**\n       * #action\n       */\n      toggleCrossHatches() {\n        self.displayCrossHatches = !self.displayCrossHatches\n      },\n\n      /**\n       * #action\n       */\n      setCrossHatches(cross: boolean) {\n        self.displayCrossHatches = cross\n      },\n    }))\n\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get adapterTypeName() {\n        return self.adapterConfig.type\n      },\n\n      /**\n       * #getter\n       */\n      get rendererTypeNameSimple() {\n        return self.rendererTypeNameState ?? getConf(self, 'defaultRendering')\n      },\n\n      /**\n       * #getter\n       * subclasses can define these, as snpcoverage track does\n       */\n      get filters() {\n        return undefined\n      },\n\n      /**\n       * #getter\n       */\n      get scaleType() {\n        return self.scale ?? getConf(self, 'scaleType')\n      },\n\n      /**\n       * #getter\n       */\n      get maxScore() {\n        return self.constraints.max ?? getConf(self, 'maxScore')\n      },\n\n      /**\n       * #getter\n       */\n      get minScore() {\n        return self.constraints.min ?? getConf(self, 'minScore')\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get adapterCapabilities() {\n        const type = self.adapterTypeName\n        const { pluginManager } = getEnv(self)\n        return pluginManager.getAdapterType(type).adapterCapabilities\n      },\n      /**\n       * #getter\n       */\n      get rendererConfig() {\n        const {\n          color,\n          displayCrossHatches,\n          fill,\n          minSize,\n          negColor,\n          posColor,\n          summaryScoreMode,\n          scaleType,\n          rendererTypeName,\n        } = self\n        const configBlob = getConf(self, ['renderers', rendererTypeName]) || {}\n        return self.rendererType.configSchema.create(\n          {\n            ...configBlob,\n            ...(scaleType ? { scaleType } : {}),\n            ...(fill !== undefined ? { filled: fill } : {}),\n            ...(displayCrossHatches !== undefined\n              ? { displayCrossHatches }\n              : {}),\n            ...(summaryScoreMode !== undefined ? { summaryScoreMode } : {}),\n            ...(color !== undefined ? { color } : {}),\n            ...(negColor !== undefined ? { negColor } : {}),\n            ...(posColor !== undefined ? { posColor } : {}),\n            ...(minSize !== undefined ? { minSize } : {}),\n          },\n          getEnv(self),\n        )\n      },\n\n      /**\n       * #getter\n       */\n      get autoscaleType() {\n        return self.autoscale ?? getConf(self, 'autoscale')\n      },\n    }))\n    .views(self => {\n      let oldDomain: [number, number] = [0, 0]\n      return {\n        /**\n         * #getter\n         */\n        get domain() {\n          const { stats, scaleType, minScore, maxScore } = self\n          if (!stats) {\n            return undefined\n          }\n\n          const ret = getNiceDomain({\n            domain: [stats.scoreMin, stats.scoreMax],\n            bounds: [minScore, maxScore],\n            scaleType,\n          })\n\n          // avoid weird scalebar if log value and empty region displayed\n          if (scaleType === 'log' && ret[1] === Number.MIN_VALUE) {\n            return [0, Number.MIN_VALUE]\n          }\n\n          // avoid returning a new object if it matches the old value\n          if (JSON.stringify(oldDomain) !== JSON.stringify(ret)) {\n            oldDomain = ret\n          }\n\n          return oldDomain\n        },\n      }\n    })\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get filled(): boolean {\n        const { fill, rendererConfig } = self\n        return fill ?? readConfObject(rendererConfig, 'filled')\n      },\n      /**\n       * #getter\n       */\n      get summaryScoreModeSetting(): string {\n        const { summaryScoreMode: mode, rendererConfig } = self\n        return mode ?? readConfObject(rendererConfig, 'summaryScoreMode')\n      },\n\n      /**\n       * #getter\n       */\n      get scaleOpts() {\n        return {\n          domain: self.domain,\n          stats: self.stats,\n          autoscaleType: self.autoscaleType,\n          scaleType: self.scaleType,\n          inverted: getConf(self, 'inverted'),\n        }\n      },\n\n      /**\n       * #getter\n       */\n      get canHaveFill() {\n        return self.rendererTypeName === 'XYPlotRenderer'\n      },\n\n      /**\n       * #getter\n       */\n      get displayCrossHatchesSetting(): boolean {\n        const { displayCrossHatches: hatches, rendererConfig } = self\n        return hatches ?? readConfObject(rendererConfig, 'displayCrossHatches')\n      },\n      /**\n       * #getter\n       */\n      get hasResolution() {\n        return self.adapterCapabilities.includes('hasResolution')\n      },\n\n      /**\n       * #getter\n       */\n      get hasGlobalStats() {\n        return self.adapterCapabilities.includes('hasGlobalStats')\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       */\n      scoreTrackMenuItems() {\n        return [\n          ...(self.hasResolution\n            ? [\n                {\n                  label: 'Resolution',\n                  subMenu: [\n                    {\n                      label: 'Finer resolution',\n                      onClick: () => self.setResolution(self.resolution * 5),\n                    },\n                    {\n                      label: 'Coarser resolution',\n                      onClick: () => self.setResolution(self.resolution / 5),\n                    },\n                  ],\n                },\n                {\n                  label: 'Summary score mode',\n                  subMenu: ['min', 'max', 'avg', 'whiskers'].map(elt => ({\n                    label: elt,\n                    type: 'radio',\n                    checked: self.summaryScoreModeSetting === elt,\n                    onClick: () => self.setSummaryScoreMode(elt),\n                  })),\n                },\n              ]\n            : []),\n          {\n            label:\n              self.scaleType === 'log' ? 'Set linear scale' : 'Set log scale',\n            onClick: () => self.toggleLogScale(),\n          },\n          {\n            label: 'Autoscale type',\n            subMenu: [\n              ['local', 'Local'],\n              ...(self.hasGlobalStats\n                ? [\n                    ['global', 'Global'],\n                    ['globalsd', 'Global ± 3σ'],\n                  ]\n                : []),\n              ['localsd', 'Local ± 3σ'],\n            ].map(([val, label]) => ({\n              label,\n              type: 'radio',\n              checked: self.autoscaleType === val,\n              onClick: () => self.setAutoscale(val),\n            })),\n          },\n          {\n            label: 'Set min/max score',\n            onClick: () => {\n              getSession(self).queueDialog(handleClose => [\n                SetMinMaxDlg,\n                { model: self, handleClose },\n              ])\n            },\n          },\n        ]\n      },\n    }))\n    .actions(self => {\n      const { reload: superReload } = self\n      return {\n        /**\n         * #action\n         */\n        async reload() {\n          self.setError()\n          superReload()\n        },\n      }\n    })\n}\n","import React, { lazy } from 'react'\nimport {\n  AnyConfigurationSchemaType,\n  getConf,\n} from '@jbrowse/core/configuration'\nimport { getSession } from '@jbrowse/core/util'\nimport { types, Instance } from 'mobx-state-tree'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { axisPropsFromTickScale } from 'react-d3-axis-mod'\nimport { ExportSvgDisplayOptions } from '@jbrowse/plugin-linear-genome-view'\n\n// locals\nimport {\n  getScale,\n  quantitativeStatsAutorun,\n  YSCALEBAR_LABEL_OFFSET,\n} from '../../util'\n\nimport Tooltip from '../components/Tooltip'\nimport SharedWiggleMixin from '../../shared/modelShared'\n\n// lazies\nconst SetColorDlg = lazy(() => import('../components/SetColorDialog'))\n\n// using a map because it preserves order\nconst rendererTypes = new Map([\n  ['xyplot', 'XYPlotRenderer'],\n  ['density', 'DensityRenderer'],\n  ['line', 'LinePlotRenderer'],\n])\n\n/**\n * #stateModel LinearWiggleDisplay\n * extends `SharedWiggleMixin`\n */\nfunction stateModelFactory(\n  pluginManager: PluginManager,\n  configSchema: AnyConfigurationSchemaType,\n) {\n  return types\n    .compose(\n      'LinearWiggleDisplay',\n      SharedWiggleMixin(configSchema),\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LinearWiggleDisplay'),\n      }),\n    )\n\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get TooltipComponent() {\n        return Tooltip as React.FC\n      },\n\n      /**\n       * #getter\n       */\n      get rendererTypeName() {\n        const name = self.rendererTypeNameSimple\n        const rendererType = rendererTypes.get(name)\n        if (!rendererType) {\n          throw new Error(`unknown renderer ${name}`)\n        }\n        return rendererType\n      },\n    }))\n\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get ticks() {\n        const { scaleType, domain, height } = self\n        const minimalTicks = getConf(self, 'minimalTicks')\n        const inverted = getConf(self, 'inverted')\n        const range = [height - YSCALEBAR_LABEL_OFFSET, YSCALEBAR_LABEL_OFFSET]\n        if (!domain) {\n          return undefined\n        }\n        const scale = getScale({\n          scaleType,\n          domain,\n          range,\n          inverted,\n        })\n        const ticks = axisPropsFromTickScale(scale, 4)\n        return height < 100 || minimalTicks\n          ? { ...ticks, values: domain }\n          : ticks\n      },\n    }))\n    .views(self => {\n      const { renderProps: superRenderProps } = self\n      return {\n        /**\n         * #method\n         */\n        renderProps() {\n          const superProps = superRenderProps()\n          const { filters, ticks, height, resolution, scaleOpts } = self\n          return {\n            ...superProps,\n            notReady: superProps.notReady || !self.stats,\n            rpcDriverName: self.rpcDriverName,\n            displayModel: self,\n            config: self.rendererConfig,\n            displayCrossHatches: self.displayCrossHatchesSetting,\n            scaleOpts,\n            resolution,\n            height,\n            ticks,\n            filters,\n          }\n        },\n\n        /**\n         * #getter\n         */\n        get needsScalebar() {\n          const { rendererTypeName: type } = self\n          return type === 'XYPlotRenderer' || type === 'LinePlotRenderer'\n        },\n        /**\n         * #getter\n         */\n        get fillSetting() {\n          if (self.filled) {\n            return 0\n          } else if (!self.filled && self.minSize === 1) {\n            return 1\n          } else {\n            return 2\n          }\n        },\n      }\n    })\n    .views(self => {\n      const { trackMenuItems: superTrackMenuItems } = self\n      const hasRenderings = getConf(self, 'defaultRendering')\n      return {\n        /**\n         * #method\n         */\n        trackMenuItems() {\n          return [\n            ...superTrackMenuItems(),\n            {\n              label: 'Score',\n              subMenu: self.scoreTrackMenuItems(),\n            },\n\n            ...(self.canHaveFill\n              ? [\n                  {\n                    label: 'Fill mode',\n                    subMenu: ['filled', 'no fill', 'no fill w/ emphasis'].map(\n                      (elt, idx) => ({\n                        label: elt,\n                        type: 'radio',\n                        checked: self.fillSetting === idx,\n                        onClick: () => self.setFill(idx),\n                      }),\n                    ),\n                  },\n                ]\n              : []),\n\n            ...(self.needsScalebar\n              ? [\n                  {\n                    type: 'checkbox',\n                    label: 'Draw cross hatches',\n                    checked: self.displayCrossHatchesSetting,\n                    onClick: () => self.toggleCrossHatches(),\n                  },\n                ]\n              : []),\n\n            ...(hasRenderings\n              ? [\n                  {\n                    label: 'Renderer type',\n                    subMenu: ['xyplot', 'density', 'line'].map(key => ({\n                      label: key,\n                      type: 'radio',\n                      checked: self.rendererTypeNameSimple === key,\n                      onClick: () => self.setRendererType(key),\n                    })),\n                  },\n                ]\n              : []),\n\n            {\n              label: 'Set color',\n              onClick: () => {\n                getSession(self).queueDialog(handleClose => [\n                  SetColorDlg,\n                  { model: self, handleClose },\n                ])\n              },\n            },\n          ]\n        },\n      }\n    })\n    .actions(self => {\n      const { renderSvg: superRenderSvg } = self\n\n      return {\n        afterAttach() {\n          quantitativeStatsAutorun(self)\n        },\n        /**\n         * #action\n         */\n        async renderSvg(opts: ExportSvgDisplayOptions) {\n          const { renderSvg } = await import('./renderSvg')\n          return renderSvg(self, opts, superRenderSvg)\n        },\n      }\n    })\n}\n\nexport type WiggleDisplayStateModel = ReturnType<typeof stateModelFactory>\nexport type WiggleDisplayModel = Instance<WiggleDisplayStateModel>\n\nexport default stateModelFactory\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\n\nimport configSchemaFactory from './models/configSchema'\nimport modelFactory from './models/model'\nimport { lazy } from 'react'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaFactory(pluginManager)\n    const stateModel = modelFactory(pluginManager, configSchema)\n    return new DisplayType({\n      name: 'LinearWiggleDisplay',\n      displayName: 'Wiggle display',\n      configSchema,\n      stateModel,\n      trackType: 'QuantitativeTrack',\n      viewType: 'LinearGenomeView',\n      ReactComponent: lazy(() => import('./components/WiggleDisplayComponent')),\n    })\n  })\n}\n\nexport { default as Tooltip } from './components/Tooltip'\nexport { default as ReactComponent } from './components/WiggleDisplayComponent'\nexport { default as modelFactory } from './models/model'\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\n// locals\nimport sharedWiggleConfigFactory from '../../shared/configShared'\n\n/**\n * #config LinearWiggleDisplay\n */\nexport default function WiggleConfigFactory(pluginManager: PluginManager) {\n  const XYPlotRendererConfigSchema =\n    pluginManager.getRendererType('XYPlotRenderer').configSchema\n  const DensityRendererConfigSchema =\n    pluginManager.getRendererType('DensityRenderer').configSchema\n  const LinePlotRendererConfigSchema =\n    pluginManager.getRendererType('LinePlotRenderer').configSchema\n\n  return ConfigurationSchema(\n    'LinearWiggleDisplay',\n    {\n      /**\n       * #slot\n       */\n      defaultRendering: {\n        type: 'stringEnum',\n        model: types.enumeration('Rendering', ['density', 'xyplot', 'line']),\n        defaultValue: 'xyplot',\n      },\n      /**\n       * #slot\n       */\n      renderers: ConfigurationSchema('RenderersConfiguration', {\n        DensityRenderer: DensityRendererConfigSchema,\n        XYPlotRenderer: XYPlotRendererConfigSchema,\n        LinePlotRenderer: LinePlotRendererConfigSchema,\n      }),\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: sharedWiggleConfigFactory(),\n      explicitlyTyped: true,\n    },\n  )\n}\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { Feature } from '@jbrowse/core/util'\n\n// locals\nimport { Source, toP } from '../../util'\nimport Tooltip, { TooltipContentsComponent } from '../../Tooltip'\n\nconst en = (n: number) => n.toLocaleString('en-US')\n\nconst TooltipContents = React.forwardRef<\n  HTMLDivElement,\n  { model: { sources: Source[] }; feature: Feature }\n>(({ model, feature }, ref) => {\n  const start = feature.get('start')\n  const end = feature.get('end')\n  const refName = feature.get('refName')\n  const coord = start === end ? en(start) : `${en(start)}..${en(end)}`\n  const sources = feature.get('sources') as Record<string, { score: number }>\n  const source = feature.get('source')\n  const summary = feature.get('summary')\n  const obj = Object.fromEntries(model.sources.map(ent => [ent.name, ent]))\n\n  return (\n    <div ref={ref}>\n      {[refName, coord].filter(f => !!f).join(':')}\n      <br />\n      {sources ? (\n        <table>\n          <thead>\n            <tr>\n              <th>color</th>\n              <th>source</th>\n              <th>score</th>\n            </tr>\n          </thead>\n          <tbody>\n            {Object.entries(sources).map(([source, data]) => (\n              <tr key={source}>\n                <td style={{ background: obj[source]?.color }}> </td>\n                <td>{source}</td>\n                <td>{toP(data.score)}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <span>\n          {source}{' '}\n          {summary\n            ? `min:${toP(feature.get('minScore'))} avg:${toP(\n                feature.get('score'),\n              )} max:${toP(feature.get('maxScore'))}`\n            : toP(feature.get('score'))}\n        </span>\n      )}\n    </div>\n  )\n})\n\ntype Coord = [number, number]\n\nconst WiggleTooltip = observer(\n  (props: {\n    model: { featureUnderMouse: Feature; sources: Source[]; rowHeight: number }\n    height: number\n    offsetMouseCoord: Coord\n    clientMouseCoord: Coord\n    clientRect?: DOMRect\n    TooltipContents?: TooltipContentsComponent\n  }) => {\n    return <Tooltip useClientY TooltipContents={TooltipContents} {...props} />\n  },\n)\nexport default WiggleTooltip\n\nexport { default as Tooltip } from '../../Tooltip'\n","import React, { lazy } from 'react'\nimport { addDisposer, isAlive, types, Instance } from 'mobx-state-tree'\nimport { autorun } from 'mobx'\nimport { axisPropsFromTickScale } from 'react-d3-axis-mod'\nimport deepEqual from 'fast-deep-equal'\n\n// jbrowse imports\nimport {\n  AnyConfigurationSchemaType,\n  getConf,\n} from '@jbrowse/core/configuration'\nimport { getSession, Feature } from '@jbrowse/core/util'\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks'\nimport { set1 as colors } from '@jbrowse/core/ui/colors'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { ExportSvgDisplayOptions } from '@jbrowse/plugin-linear-genome-view'\n\n// locals\nimport {\n  getScale,\n  quantitativeStatsAutorun,\n  YSCALEBAR_LABEL_OFFSET,\n} from '../../util'\n\nimport Tooltip from '../components/Tooltip'\nimport SharedWiggleMixin from '../../shared/modelShared'\n\nconst randomColor = () =>\n  '#000000'.replaceAll('0', () => (~~(Math.random() * 16)).toString(16))\n\n// lazies\nconst SetColorDlg = lazy(() => import('../components/SetColorDialog'))\n\n// using a map because it preserves order\nconst rendererTypes = new Map([\n  ['xyplot', 'MultiXYPlotRenderer'],\n  ['multirowxy', 'MultiRowXYPlotRenderer'],\n  ['multirowdensity', 'MultiDensityRenderer'],\n  ['multiline', 'MultiLineRenderer'],\n  ['multirowline', 'MultiRowLineRenderer'],\n])\n\ninterface Source {\n  name: string\n  color?: string\n  group?: string\n}\n\n/**\n * #stateModel MultiLinearWiggleDisplay\n * extends `SharedWiggleMixin`\n */\nexport function stateModelFactory(\n  pluginManager: PluginManager,\n  configSchema: AnyConfigurationSchemaType,\n) {\n  return types\n    .compose(\n      'MultiLinearWiggleDisplay',\n      SharedWiggleMixin(configSchema),\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('MultiLinearWiggleDisplay'),\n\n        /**\n         * #property\n         */\n        layout: types.optional(types.frozen<Source[]>(), []),\n      }),\n    )\n    .volatile(() => ({\n      featureUnderMouseVolatile: undefined as Feature | undefined,\n      sourcesVolatile: undefined as Source[] | undefined,\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setLayout(layout: Source[]) {\n        self.layout = layout\n      },\n      /**\n       * #action\n       */\n      clearLayout() {\n        self.layout = []\n      },\n\n      /**\n       * #action\n       */\n      setSources(sources: Source[]) {\n        if (!deepEqual(sources, self.sourcesVolatile)) {\n          self.sourcesVolatile = sources\n        }\n      },\n\n      /**\n       * #action\n       */\n      setFeatureUnderMouse(f?: Feature) {\n        self.featureUnderMouseVolatile = f\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get featureUnderMouse() {\n        return self.featureUnderMouseVolatile\n      },\n      /**\n       * #getter\n       */\n      get TooltipComponent() {\n        return Tooltip as unknown as React.FC\n      },\n\n      /**\n       * #getter\n       */\n      get rendererTypeName() {\n        const name = self.rendererTypeNameSimple\n        const rendererType = rendererTypes.get(name)\n        if (!rendererType) {\n          throw new Error(`unknown renderer ${name}`)\n        }\n        return rendererType\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get needsScalebar() {\n        return (\n          self.rendererTypeName === 'MultiXYPlotRenderer' ||\n          self.rendererTypeName === 'MultiRowXYPlotRenderer' ||\n          self.rendererTypeName === 'MultiLineRenderer' ||\n          self.rendererTypeName === 'MultiRowLineRenderer'\n        )\n      },\n      /**\n       * #getter\n       */\n      get needsFullHeightScalebar() {\n        return (\n          self.rendererTypeName === 'MultiXYPlotRenderer' ||\n          self.rendererTypeName === 'MultiLineRenderer'\n        )\n      },\n      /**\n       * #getter\n       */\n      get isMultiRow() {\n        return (\n          self.rendererTypeName === 'MultiRowXYPlotRenderer' ||\n          self.rendererTypeName === 'MultiRowLineRenderer' ||\n          self.rendererTypeName === 'MultiDensityRenderer'\n        )\n      },\n      /**\n       * #getter\n       * can be used to give it a \"color scale\" like a R heatmap, not\n       * implemented like this yet but flag can be used for this\n       */\n      get needsCustomLegend() {\n        return self.rendererTypeName === 'MultiDensityRenderer'\n      },\n\n      get canHaveFill() {\n        return (\n          self.rendererTypeName === 'MultiXYPlotRenderer' ||\n          self.rendererTypeName === 'MultiRowXYPlotRenderer'\n        )\n      },\n      /**\n       * #getter\n       * the multirowxy and multiline don't need to use colors on the legend\n       * boxes since their track is drawn with the color. sort of a stylistic\n       * choice\n       */\n      get renderColorBoxes() {\n        return !(\n          self.rendererTypeName === 'MultiRowLineRenderer' ||\n          self.rendererTypeName === 'MultiRowXYPlotRenderer'\n        )\n      },\n      /**\n       * #getter\n       * positions multi-row below the tracklabel even if using overlap\n       * tracklabels for everything else\n       */\n      get prefersOffset() {\n        return this.isMultiRow\n      },\n      /**\n       * #getter\n       */\n      get sources() {\n        const sources = Object.fromEntries(\n          self.sourcesVolatile?.map(s => [s.name, s]) || [],\n        )\n        const iter = self.layout.length ? self.layout : self.sourcesVolatile\n        return iter\n          ?.map(s => ({\n            ...sources[s.name],\n            ...s,\n          }))\n          .map((s, i) => ({\n            ...s,\n            color:\n              s.color ||\n              (!this.isMultiRow ? colors[i] || randomColor() : 'blue'),\n          }))\n      },\n    }))\n\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get rowHeight() {\n        const { sources, height, isMultiRow } = self\n        return isMultiRow ? height / (sources?.length || 1) : height\n      },\n      /**\n       * #getter\n       */\n      get rowHeightTooSmallForScalebar() {\n        return this.rowHeight < 70\n      },\n\n      /**\n       * #getter\n       */\n      get useMinimalTicks() {\n        return (\n          getConf(self, 'minimalTicks') || this.rowHeightTooSmallForScalebar\n        )\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get ticks() {\n        const { scaleType, domain, isMultiRow, rowHeight, useMinimalTicks } =\n          self\n\n        if (!domain) {\n          return undefined\n        }\n\n        const offset = isMultiRow ? 0 : YSCALEBAR_LABEL_OFFSET\n        const ticks = axisPropsFromTickScale(\n          getScale({\n            scaleType,\n            domain,\n            range: [rowHeight - offset, offset],\n            inverted: getConf(self, 'inverted') as boolean,\n          }),\n          4,\n        )\n        return useMinimalTicks ? { ...ticks, values: domain } : ticks\n      },\n\n      /**\n       * #getter\n       */\n      get colors() {\n        return [\n          'red',\n          'blue',\n          'green',\n          'orange',\n          'purple',\n          'cyan',\n          'pink',\n          'darkblue',\n          'darkred',\n          'pink',\n        ]\n      },\n    }))\n    .views(self => {\n      const { renderProps: superRenderProps } = self\n      return {\n        /**\n         * #method\n         */\n        renderProps() {\n          const superProps = superRenderProps()\n          const {\n            displayCrossHatches,\n            filters,\n            height,\n            resolution,\n            rpcDriverName,\n            scaleOpts,\n            stats,\n            sources,\n            ticks,\n            rendererConfig: config,\n          } = self\n          return {\n            ...superProps,\n            notReady: superProps.notReady || !sources || !stats,\n            displayModel: self,\n            config,\n            displayCrossHatches,\n            filters,\n            height,\n            resolution,\n            rpcDriverName,\n            scaleOpts,\n            sources,\n            ticks,\n            onMouseMove: (_: unknown, f: Feature) =>\n              self.setFeatureUnderMouse(f),\n            onMouseLeave: () => self.setFeatureUnderMouse(undefined),\n          }\n        },\n\n        /**\n         * #getter\n         */\n        get hasResolution() {\n          return self.adapterCapabilities.includes('hasResolution')\n        },\n\n        /**\n         * #getter\n         */\n        get hasGlobalStats() {\n          return self.adapterCapabilities.includes('hasGlobalStats')\n        },\n\n        /**\n         * #getter\n         */\n        get fillSetting() {\n          if (self.filled) {\n            return 0\n          } else if (!self.filled && self.minSize === 1) {\n            return 1\n          } else {\n            return 2\n          }\n        },\n      }\n    })\n    .views(self => {\n      const { trackMenuItems: superTrackMenuItems } = self\n      const hasRenderings = getConf(self, 'defaultRendering')\n      return {\n        /**\n         * #method\n         */\n        trackMenuItems() {\n          return [\n            ...superTrackMenuItems(),\n            {\n              label: 'Score',\n              subMenu: self.scoreTrackMenuItems(),\n            },\n\n            ...(self.canHaveFill\n              ? [\n                  {\n                    label: 'Fill mode',\n                    subMenu: ['filled', 'no fill', 'no fill w/ emphasis'].map(\n                      (elt, idx) => ({\n                        label: elt,\n                        type: 'radio',\n                        checked: self.fillSetting === idx,\n                        onClick: () => self.setFill(idx),\n                      }),\n                    ),\n                  },\n                ]\n              : []),\n\n            ...(self.needsScalebar\n              ? [\n                  {\n                    type: 'checkbox',\n                    label: 'Draw cross hatches',\n                    checked: self.displayCrossHatchesSetting,\n                    onClick: () => self.toggleCrossHatches(),\n                  },\n                ]\n              : []),\n            ...(hasRenderings\n              ? [\n                  {\n                    label: 'Renderer type',\n                    subMenu: [\n                      'xyplot',\n                      'multirowxy',\n                      'multirowdensity',\n                      'multiline',\n                      'multirowline',\n                    ].map(key => ({\n                      label: key,\n                      type: 'radio',\n                      checked: self.rendererTypeNameSimple === key,\n                      onClick: () => self.setRendererType(key),\n                    })),\n                  },\n                ]\n              : []),\n\n            {\n              label: 'Edit colors/arrangement...',\n              onClick: () => {\n                getSession(self).queueDialog(handleClose => [\n                  SetColorDlg,\n                  { model: self, handleClose },\n                ])\n              },\n            },\n          ]\n        },\n      }\n    })\n    .actions(self => {\n      const { renderSvg: superRenderSvg } = self\n      return {\n        afterAttach() {\n          quantitativeStatsAutorun(self)\n          addDisposer(\n            self,\n            autorun(async () => {\n              const { rpcManager } = getSession(self)\n              const { adapterConfig } = self\n              const sessionId = getRpcSessionId(self)\n              const sources = (await rpcManager.call(\n                sessionId,\n                'MultiWiggleGetSources',\n                {\n                  sessionId,\n                  adapterConfig,\n                },\n              )) as Source[]\n              if (isAlive(self)) {\n                self.setSources(sources)\n              }\n            }),\n          )\n        },\n\n        /**\n         * #action\n         */\n        async renderSvg(opts: ExportSvgDisplayOptions) {\n          const { renderSvg } = await import('./renderSvg')\n          return renderSvg(self, opts, superRenderSvg)\n        },\n      }\n    })\n}\n\nexport type WiggleDisplayStateModel = ReturnType<typeof stateModelFactory>\nexport type WiggleDisplayModel = Instance<WiggleDisplayStateModel>\n\nexport default stateModelFactory\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\n\nimport configSchemaFactory from './models/configSchema'\nimport modelFactory from './models/model'\nimport { lazy } from 'react'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaFactory(pluginManager)\n    return new DisplayType({\n      name: 'MultiLinearWiggleDisplay',\n      displayName: 'Multi-wiggle display',\n      configSchema,\n      stateModel: modelFactory(pluginManager, configSchema),\n      trackType: 'MultiQuantitativeTrack',\n      viewType: 'LinearGenomeView',\n      ReactComponent: lazy(() => import('./components/WiggleDisplayComponent')),\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\n// locals\nimport sharedWiggleConfigFactory from '../../shared/configShared'\n\n/**\n * #config MultiLinearWiggleDisplay\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport default function WiggleConfigFactory(pluginManager: PluginManager) {\n  const MultiXYPlotRendererConfigSchema = pluginManager.getRendererType(\n    'MultiXYPlotRenderer',\n  ).configSchema\n  const MultiDensityRendererConfigSchema = pluginManager.getRendererType(\n    'MultiDensityRenderer',\n  ).configSchema\n  const MultiRowXYPlotRendererConfigSchema = pluginManager.getRendererType(\n    'MultiRowXYPlotRenderer',\n  ).configSchema\n  const MultiLineRendererConfigSchema =\n    pluginManager.getRendererType('MultiLineRenderer').configSchema\n  const MultiRowLineRendererConfigSchema = pluginManager.getRendererType(\n    'MultiRowLineRenderer',\n  ).configSchema\n\n  return ConfigurationSchema(\n    'MultiLinearWiggleDisplay',\n    {\n      /**\n       * #slot\n       */\n      defaultRendering: {\n        type: 'stringEnum',\n        model: types.enumeration('Rendering', [\n          'multirowxy',\n          'xyplot',\n          'multirowdensity',\n          'multiline',\n          'multirowline',\n        ]),\n        defaultValue: 'multirowxy',\n      },\n\n      /**\n       * #slot\n       */\n      renderers: ConfigurationSchema('RenderersConfiguration', {\n        MultiXYPlotRenderer: MultiXYPlotRendererConfigSchema,\n        MultiDensityRenderer: MultiDensityRendererConfigSchema,\n        MultiRowXYPlotRenderer: MultiRowXYPlotRendererConfigSchema,\n        MultiLineRenderer: MultiLineRendererConfigSchema,\n        MultiRowLineRenderer: MultiRowLineRendererConfigSchema,\n      }),\n\n      /**\n       * #slot\n       */\n      height: {\n        type: 'number',\n        defaultValue: 200,\n      },\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: sharedWiggleConfigFactory(),\n      explicitlyTyped: true,\n    },\n  )\n}\n","import { observer } from 'mobx-react'\nimport React, { useRef } from 'react'\n\nimport { Region } from '@jbrowse/core/util/types'\nimport { SimpleFeature, Feature } from '@jbrowse/core/util'\nimport { PrerenderedCanvas } from '@jbrowse/core/ui'\nimport { Source } from './util'\n\nfunction WiggleRendering(props: {\n  regions: Region[]\n  features: Map<string, Feature>\n  bpPerPx: number\n  width: number\n  height: number\n  onMouseLeave: Function\n  onMouseMove: Function\n  onFeatureClick: Function\n  blockKey: string\n  sources: Source[]\n  displayModel: { isMultiRow: boolean }\n}) {\n  const {\n    regions,\n    features,\n    bpPerPx,\n    width,\n    height,\n    sources,\n    onMouseLeave = () => {},\n    onMouseMove = () => {},\n    onFeatureClick = () => {},\n    displayModel,\n  } = props\n  const [region] = regions\n  const ref = useRef<HTMLDivElement>(null)\n\n  function getFeatureUnderMouse(eventClientX: number, eventClientY: number) {\n    if (!ref.current) {\n      return\n    }\n    const rect = ref.current.getBoundingClientRect()\n    const offsetX = eventClientX - rect.left\n    const offsetY = eventClientY - rect.top\n    const source = sources[Math.floor((offsetY / height) * sources.length)]\n    if (!source) {\n      return\n    }\n    const px = region.reversed ? width - offsetX : offsetX\n    const mouseoverBp = region.start + bpPerPx * px\n    let featureUnderMouse\n    if (displayModel.isMultiRow) {\n      for (const feature of features.values()) {\n        if (feature.get('source') !== source.name) {\n          continue\n        }\n        if (\n          mouseoverBp <= feature.get('end') + bpPerPx &&\n          mouseoverBp >= feature.get('start')\n        ) {\n          featureUnderMouse = feature\n          break\n        }\n      }\n    } else {\n      const featuresUnderMouse = []\n      for (const feature of features.values()) {\n        if (\n          mouseoverBp <= feature.get('end') + bpPerPx &&\n          mouseoverBp >= feature.get('start')\n        ) {\n          featuresUnderMouse.push(feature)\n        }\n      }\n\n      if (featuresUnderMouse.length) {\n        const pos = Math.floor(mouseoverBp)\n        featureUnderMouse = new SimpleFeature({\n          uniqueId: 'mouseoverfeat',\n          sources: Object.fromEntries(\n            featuresUnderMouse\n              .map(f => f.toJSON())\n              .map(f => {\n                const { refName, start, end, source, ...rest } = f\n                return [source, rest]\n              }),\n          ),\n          ...region,\n          start: pos,\n          end: pos + 1,\n        })\n      }\n    }\n    return featureUnderMouse\n  }\n\n  return (\n    <div\n      ref={ref}\n      onMouseMove={event => {\n        const featureUnderMouse = getFeatureUnderMouse(\n          event.clientX,\n          event.clientY,\n        )\n        onMouseMove(event, featureUnderMouse)\n      }}\n      onClick={event => {\n        const featureUnderMouse = getFeatureUnderMouse(\n          event.clientX,\n          event.clientY,\n        )\n        onFeatureClick(event, featureUnderMouse)\n      }}\n      onMouseLeave={event => onMouseLeave(event)}\n      style={{\n        overflow: 'visible',\n        position: 'relative',\n        height,\n      }}\n    >\n      <PrerenderedCanvas {...props} />\n    </div>\n  )\n}\n\nexport default observer(WiggleRendering)\n","import { groupBy, Feature } from '@jbrowse/core/util'\nimport { drawXY } from '../drawxy'\nimport { YSCALEBAR_LABEL_OFFSET } from '../util'\n\nimport WiggleBaseRenderer, {\n  MultiRenderArgsDeserialized as MultiArgs,\n} from '../WiggleBaseRenderer'\n\nexport default class MultiXYPlotRenderer extends WiggleBaseRenderer {\n  // @ts-expect-error\n  async draw(ctx: CanvasRenderingContext2D, props: MultiArgs) {\n    const { sources, features } = props\n    const groups = groupBy([...features.values()], f => f.get('source'))\n    const Color = await import('color').then(f => f.default)\n    let feats = [] as Feature[]\n    for (const source of sources) {\n      const features = groups[source.name]\n      if (!features) {\n        continue\n      }\n      const { reducedFeatures } = drawXY(ctx, {\n        ...props,\n        features,\n        offset: YSCALEBAR_LABEL_OFFSET,\n        colorCallback: () => source.color || 'blue',\n        Color,\n      })\n      feats = [...feats, ...reducedFeatures]\n    }\n    return { reducedFeatures: feats }\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\nimport baseWiggleRendererConfigSchema from '../configSchema'\n\n/**\n * #config MultiXYPlotRenderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = ConfigurationSchema(\n  'MultiXYPlotRenderer',\n  {\n    /**\n     * #slot\n     */\n    filled: {\n      type: 'boolean',\n      defaultValue: true,\n    },\n    /**\n     * #slot\n     */\n    displayCrossHatches: {\n      type: 'boolean',\n      description: 'choose to draw cross hatches (sideways lines)',\n      defaultValue: false,\n    },\n    /**\n     * #slot\n     */\n    summaryScoreMode: {\n      type: 'stringEnum',\n      model: types.enumeration('Score type', ['max', 'min', 'avg', 'whiskers']),\n      description:\n        'choose whether to use max/min/average or whiskers which combines all three into the same rendering',\n      defaultValue: 'avg',\n    },\n    /**\n     * #slot\n     */\n    minSize: {\n      type: 'number',\n      defaultValue: 0,\n    },\n  },\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: baseWiggleRendererConfigSchema,\n    explicitlyTyped: true,\n  },\n)\nexport default configSchema\n","import { groupBy, Feature } from '@jbrowse/core/util'\nimport { drawXY } from '../drawxy'\n\nimport WiggleBaseRenderer, {\n  MultiRenderArgsDeserialized as MultiArgs,\n} from '../WiggleBaseRenderer'\n\nexport default class MultiXYPlotRenderer extends WiggleBaseRenderer {\n  // @ts-expect-error\n  async draw(ctx: CanvasRenderingContext2D, props: MultiArgs) {\n    const { bpPerPx, sources, regions, features } = props\n    const [region] = regions\n    const groups = groupBy([...features.values()], f => f.get('source'))\n    const height = props.height / Object.keys(groups).length\n    const width = (region.end - region.start) / bpPerPx\n    const Color = await import('color').then(f => f.default)\n    let feats = [] as Feature[]\n    ctx.save()\n    sources.forEach(source => {\n      const features = groups[source.name]\n      if (!features) {\n        return\n      }\n      const { reducedFeatures } = drawXY(ctx, {\n        ...props,\n        features,\n        height,\n        colorCallback: () => source.color || 'blue',\n        Color,\n      })\n      ctx.strokeStyle = 'rgba(200,200,200,0.8)'\n      ctx.beginPath()\n      ctx.moveTo(0, height)\n      ctx.lineTo(width, height)\n      ctx.stroke()\n      ctx.translate(0, height)\n      feats = [...feats, ...reducedFeatures]\n    })\n    ctx.restore()\n    return { reducedFeatures: feats }\n  }\n}\n","import { types } from 'mobx-state-tree'\n\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport baseWiggleRendererConfigSchema from '../configSchema'\n\n/**\n * #config MultiRowXYPlotRenderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = ConfigurationSchema(\n  'MultiRowXYPlotRenderer',\n  {\n    /**\n     * #slot\n     */\n    filled: {\n      type: 'boolean',\n      defaultValue: true,\n    },\n    /**\n     * #slot\n     */\n    displayCrossHatches: {\n      type: 'boolean',\n      description: 'choose to draw cross hatches (sideways lines)',\n      defaultValue: false,\n    },\n    /**\n     * #slot\n     */\n    summaryScoreMode: {\n      type: 'stringEnum',\n      model: types.enumeration('Score type', ['max', 'min', 'avg', 'whiskers']),\n      description:\n        'choose whether to use max/min/average or whiskers which combines all three into the same rendering',\n      defaultValue: 'whiskers',\n    },\n    /**\n     * #slot\n     */\n    minSize: {\n      type: 'number',\n      defaultValue: 0,\n    },\n  },\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: baseWiggleRendererConfigSchema,\n    explicitlyTyped: true,\n  },\n)\n\nexport default configSchema\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport baseWiggleRendererConfigSchema from '../configSchema'\n\n/**\n * #config MultiDensityRenderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = ConfigurationSchema(\n  'MultiDensityRenderer',\n  {},\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: baseWiggleRendererConfigSchema,\n    explicitlyTyped: true,\n  },\n)\n\nexport default configSchema\n","import { groupBy, Feature } from '@jbrowse/core/util'\nimport WiggleBaseRenderer, {\n  MultiRenderArgsDeserialized as MultiArgs,\n} from '../WiggleBaseRenderer'\nimport { drawDensity } from '../drawxy'\n\nexport default class MultiXYPlotRenderer extends WiggleBaseRenderer {\n  // @ts-expect-error\n  async draw(ctx: CanvasRenderingContext2D, props: MultiArgs) {\n    const { bpPerPx, sources, regions, features } = props\n    const [region] = regions\n    const groups = groupBy([...features.values()], f => f.get('source'))\n    const height = props.height / Object.keys(groups).length\n    const width = (region.end - region.start) / bpPerPx\n    let feats = [] as Feature[]\n    ctx.save()\n    sources.forEach(source => {\n      const features = groups[source.name]\n      if (!features) {\n        return\n      }\n      const { reducedFeatures } = drawDensity(ctx, {\n        ...props,\n        features,\n        height,\n      })\n      ctx.strokeStyle = 'rgba(200,200,200,0.8)'\n      ctx.beginPath()\n      ctx.moveTo(0, height)\n      ctx.lineTo(width, height)\n      ctx.stroke()\n      ctx.translate(0, height)\n      feats = [...feats, ...reducedFeatures]\n    })\n    ctx.restore()\n    return { reducedFeatures: feats }\n  }\n}\n","import { groupBy, Feature } from '@jbrowse/core/util'\nimport { drawLine } from '../drawxy'\n\nimport WiggleBaseRenderer, {\n  MultiRenderArgsDeserialized as MultiArgs,\n} from '../WiggleBaseRenderer'\n\nexport default class MultiLineRenderer extends WiggleBaseRenderer {\n  // @ts-expect-error\n  async draw(ctx: CanvasRenderingContext2D, props: MultiArgs) {\n    const { sources, features } = props\n    const groups = groupBy([...features.values()], f => f.get('source'))\n    let feats = [] as Feature[]\n    sources.forEach(source => {\n      const features = groups[source.name]\n      if (!features) {\n        return\n      }\n      const { reducedFeatures } = drawLine(ctx, {\n        ...props,\n        features,\n        colorCallback: () => source.color || 'blue',\n      })\n      feats = [...feats, ...reducedFeatures]\n    })\n    return { reducedFeatures: feats }\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\nimport baseWiggleRendererConfigSchema from '../configSchema'\n/**\n * #config MultiLineRenderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = ConfigurationSchema(\n  'MultiLineRenderer',\n  {\n    /**\n     * #slot\n     */\n    displayCrossHatches: {\n      type: 'boolean',\n      description: 'choose to draw cross hatches (sideways lines)',\n      defaultValue: false,\n    },\n    /**\n     * #slot\n     */\n    summaryScoreMode: {\n      type: 'stringEnum',\n      model: types.enumeration('Score type', ['max', 'min', 'avg', 'whiskers']),\n      description:\n        'choose whether to use max/min/average or whiskers which combines all three into the same rendering',\n      defaultValue: 'avg',\n    },\n  },\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: baseWiggleRendererConfigSchema,\n    explicitlyTyped: true,\n  },\n)\nexport default configSchema\n","import { groupBy, Feature } from '@jbrowse/core/util'\nimport { drawLine } from '../drawxy'\nimport WiggleBaseRenderer, {\n  MultiRenderArgsDeserialized as MultiArgs,\n} from '../WiggleBaseRenderer'\n\nexport default class MultiRowLineRenderer extends WiggleBaseRenderer {\n  // @ts-expect-error\n  async draw(ctx: CanvasRenderingContext2D, props: MultiArgs) {\n    const { bpPerPx, sources, regions, features } = props\n    const [region] = regions\n    const groups = groupBy([...features.values()], f => f.get('source'))\n    const height = props.height / Object.keys(groups).length\n    const width = (region.end - region.start) / bpPerPx\n    let feats = [] as Feature[]\n    ctx.save()\n    sources.forEach(source => {\n      const { reducedFeatures } = drawLine(ctx, {\n        ...props,\n        features: groups[source.name],\n        height,\n        colorCallback: () => source.color || 'blue',\n      })\n      ctx.strokeStyle = 'rgba(200,200,200,0.8)'\n      ctx.beginPath()\n      ctx.moveTo(0, height)\n      ctx.lineTo(width, height)\n      ctx.stroke()\n      ctx.translate(0, height)\n      feats = [...feats, ...reducedFeatures]\n    })\n    ctx.restore()\n    return { reducedFeatures: feats }\n  }\n}\n","import { types } from 'mobx-state-tree'\n\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport baseWiggleRendererConfigSchema from '../configSchema'\n\n/**\n * #config MultiRowLineRenderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = ConfigurationSchema(\n  'MultiRowLineRenderer',\n  {\n    /**\n     * #slot\n     */\n    displayCrossHatches: {\n      type: 'boolean',\n      description: 'choose to draw cross hatches (sideways lines)',\n      defaultValue: false,\n    },\n    /**\n     * #slot\n     */\n    summaryScoreMode: {\n      type: 'stringEnum',\n      model: types.enumeration('Score type', ['max', 'min', 'avg', 'whiskers']),\n      description:\n        'choose whether to use max/min/average or whiskers which combines all three into the same rendering',\n      defaultValue: 'avg',\n    },\n  },\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: baseWiggleRendererConfigSchema,\n    explicitlyTyped: true,\n  },\n)\n\nexport default configSchema\n","import { lazy } from 'react'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { getSession, isSessionWithAddTracks } from '@jbrowse/core/util'\nimport { HierarchicalTrackSelectorModel } from '@jbrowse/plugin-data-management'\n\nconst ConfirmDialog = lazy(() => import('./ConfirmDialog'))\n\nexport default function (pm: PluginManager) {\n  pm.addToExtensionPoint(\n    'TrackSelector-multiTrackMenuItems',\n    (items: unknown[], props: Record<string, unknown>) => {\n      const { session } = props\n      return [\n        ...items,\n        ...(isSessionWithAddTracks(session)\n          ? [\n              {\n                label: 'Create multi-wiggle track',\n                onClick: (model: HierarchicalTrackSelectorModel) => {\n                  const tracks = model.selection\n                  const trackIds = tracks.map(c => readConfObject(c, 'name'))\n                  function makeTrack(arg: { name: string }) {\n                    const subadapters = tracks\n                      .map(c => readConfObject(c, 'adapter'))\n                      .map((c, idx) => ({ ...c, source: trackIds[idx] }))\n                    const assemblyNames = [\n                      ...new Set(\n                        tracks.flatMap(c => readConfObject(c, 'assemblyNames')),\n                      ),\n                    ]\n                    const now = +Date.now()\n                    const trackId = `multitrack-${now}-sessionTrack`\n\n                    getSession(model).addTrackConf({\n                      type: 'MultiQuantitativeTrack',\n                      trackId,\n                      name: arg.name,\n                      assemblyNames,\n                      adapter: {\n                        type: 'MultiWiggleAdapter',\n                        subadapters,\n                      },\n                    })\n                    model.view.showTrack(trackId)\n                  }\n                  getSession(model).queueDialog(handleClose => [\n                    ConfirmDialog,\n                    {\n                      tracks,\n                      onClose: (arg: boolean, arg1?: { name: string }) => {\n                        if (arg && arg1) {\n                          makeTrack(arg1)\n                        }\n                        handleClose()\n                      },\n                    },\n                  ])\n                },\n              },\n            ]\n          : []),\n      ]\n    },\n  )\n}\n","import React, { useState } from 'react'\nimport { Button, Paper, TextField } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { getSession, isElectron } from '@jbrowse/core/util'\nimport { storeBlobLocation } from '@jbrowse/core/util/tracks'\nimport { AddTrackModel } from '@jbrowse/plugin-data-management'\n\nconst useStyles = makeStyles()(theme => ({\n  textbox: {\n    width: '100%',\n  },\n  paper: {\n    margin: theme.spacing(),\n    padding: theme.spacing(),\n  },\n  submit: {\n    marginTop: 25,\n    marginBottom: 100,\n    display: 'block',\n  },\n}))\n\nexport default function MultiWiggleWidget({ model }: { model: AddTrackModel }) {\n  const { classes } = useStyles()\n  const [val, setVal] = useState('')\n  const [trackName, setTrackName] = useState(`MultiWiggle${+Date.now()}`)\n  return (\n    <Paper className={classes.paper}>\n      <ul>\n        <li>Enter list of URLs for bigwig files in the textbox</li>\n        <li>\n          Or, use the button below the text box to select files from your\n          computer\n        </li>\n      </ul>\n\n      <TextField\n        multiline\n        rows={10}\n        value={val}\n        onChange={event => setVal(event.target.value)}\n        placeholder={'Paste list of URLs here, or use file selector below'}\n        variant=\"outlined\"\n        className={classes.textbox}\n      />\n\n      <Button variant=\"outlined\" component=\"label\">\n        Choose Files from your computer\n        <input\n          type=\"file\"\n          hidden\n          multiple\n          onChange={({ target }) => {\n            const res = [...(target?.files || [])].map(file => ({\n              type: 'BigWigAdapter',\n              bigWigLocation: isElectron\n                ? {\n                    localPath: (file as File & { path: string }).path,\n                    locationType: 'LocalPathLocation',\n                  }\n                : storeBlobLocation({ blob: file }),\n              source: file.name,\n            }))\n            setVal(JSON.stringify(res, null, 2))\n          }}\n        />\n      </Button>\n      <TextField\n        value={trackName}\n        onChange={event => setTrackName(event.target.value)}\n        helperText=\"Track name\"\n      />\n      <Button\n        variant=\"contained\"\n        className={classes.submit}\n        onClick={() => {\n          const session = getSession(model)\n\n          const trackId = [\n            `${trackName.toLowerCase().replaceAll(' ', '_')}-${Date.now()}`,\n            `${session.adminMode ? '' : '-sessionTrack'}`,\n          ].join('')\n\n          // allow list of bigwigs in JSON format or line-by-line\n          let bigWigs\n          try {\n            bigWigs = JSON.parse(val)\n          } catch (e) {\n            bigWigs = val.split(/\\n|\\r\\n|\\r/)\n          }\n          const obj =\n            typeof bigWigs[0] === 'string'\n              ? { bigWigs }\n              : { subadapters: bigWigs }\n\n          session.addTrackConf({\n            trackId,\n            type: 'MultiQuantitativeTrack',\n            name: trackName,\n            assemblyNames: [model.assembly],\n            adapter: {\n              type: 'MultiWiggleAdapter',\n              ...obj,\n            },\n          })\n          model.view?.showTrack(trackId)\n\n          model.clearData()\n          session.hideWidget(model)\n        }}\n      >\n        Submit\n      </Button>\n\n      <p>Additional notes: </p>\n      <ul>\n        <li>\n          The list of bigwig files in the text box can be a list of URLs, or a\n          list of elements like{' '}\n          <code>{`[{\"type\":\"BigWigAdapter\",\"bigWigLocation\":{\"uri\":\"http://host/file.bw\"}, \"color\":\"green\",\"source\":\"name for subtrack\"}]`}</code>{' '}\n          to apply e.g. the color attribute to the view\n        </li>\n        <li>\n          Adding local files will update the textbox with JSON contents that are\n          ready to submit with the \"Submit\" button\n        </li>\n      </ul>\n    </Paper>\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { AddTrackWorkflowType } from '@jbrowse/core/pluggableElementTypes'\nimport { types } from 'mobx-state-tree'\n\n// locals\nimport MultiWiggleWidget from './AddTrackWorkflow'\n\nexport default (pm: PluginManager) => {\n  pm.addAddTrackWorkflowType(\n    () =>\n      new AddTrackWorkflowType({\n        name: 'Multi-wiggle track',\n        ReactComponent: MultiWiggleWidget,\n        stateModel: types.model({}),\n      }),\n  )\n}\n","import RpcMethodType from '@jbrowse/core/pluggableElementTypes/RpcMethodType'\nimport SerializableFilterChain from '@jbrowse/core/pluggableElementTypes/renderers/util/serializableFilterChain'\nimport { getAdapter } from '@jbrowse/core/data_adapters/dataAdapterCache'\nimport { RenderArgs } from '@jbrowse/core/rpc/coreRpcMethods'\nimport { renameRegionsIfNeeded, Region } from '@jbrowse/core/util'\nimport { RemoteAbortSignal } from '@jbrowse/core/rpc/remoteAbortSignals'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\nexport class MultiWiggleGetSources extends RpcMethodType {\n  name = 'MultiWiggleGetSources'\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async deserializeArguments(args: any, rpcDriverClassName: string) {\n    const l = await super.deserializeArguments(args, rpcDriverClassName)\n    return {\n      ...l,\n      filters: args.filters\n        ? new SerializableFilterChain({\n            filters: args.filters,\n          })\n        : undefined,\n    }\n  }\n\n  async serializeArguments(\n    args: RenderArgs & {\n      signal?: AbortSignal\n      statusCallback?: (arg: string) => void\n    },\n    rpcDriverClassName: string,\n  ) {\n    const pm = this.pluginManager\n    const assemblyManager = pm.rootModel?.session?.assemblyManager\n    if (!assemblyManager) {\n      return args\n    }\n\n    const renamedArgs = await renameRegionsIfNeeded(assemblyManager, {\n      ...args,\n      filters: args.filters?.toJSON().filters,\n    })\n\n    return super.serializeArguments(renamedArgs, rpcDriverClassName)\n  }\n\n  async execute(\n    args: {\n      adapterConfig: AnyConfigurationModel\n      signal?: RemoteAbortSignal\n      sessionId: string\n      headers?: Record<string, string>\n      regions: Region[]\n      bpPerPx: number\n    },\n    rpcDriverClassName: string,\n  ) {\n    const pm = this.pluginManager\n    const deserializedArgs = await this.deserializeArguments(\n      args,\n      rpcDriverClassName,\n    )\n    const { regions, adapterConfig, sessionId } = deserializedArgs\n    const { dataAdapter } = await getAdapter(pm, sessionId, adapterConfig)\n\n    // @ts-expect-error\n    return dataAdapter.getSources(regions, deserializedArgs)\n  }\n}\n","import RpcMethodType from '@jbrowse/core/pluggableElementTypes/RpcMethodType'\nimport SerializableFilterChain from '@jbrowse/core/pluggableElementTypes/renderers/util/serializableFilterChain'\nimport { RenderArgs } from '@jbrowse/core/rpc/coreRpcMethods'\nimport { getAdapter } from '@jbrowse/core/data_adapters/dataAdapterCache'\nimport { RemoteAbortSignal } from '@jbrowse/core/rpc/remoteAbortSignals'\nimport { Region, renameRegionsIfNeeded } from '@jbrowse/core/util'\nimport { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\n\nexport class WiggleGetMultiRegionQuantitativeStats extends RpcMethodType {\n  name = 'WiggleGetMultiRegionQuantitativeStats'\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async deserializeArguments(args: any, rpcDriverClassName: string) {\n    const l = await super.deserializeArguments(args, rpcDriverClassName)\n    return {\n      ...l,\n      filters: args.filters\n        ? new SerializableFilterChain({\n            filters: args.filters,\n          })\n        : undefined,\n    }\n  }\n\n  async serializeArguments(\n    args: RenderArgs & {\n      signal?: AbortSignal\n      statusCallback?: (arg: string) => void\n    },\n    rpcDriverClassName: string,\n  ) {\n    const pm = this.pluginManager\n    const assemblyManager = pm.rootModel?.session?.assemblyManager\n    if (!assemblyManager) {\n      return args\n    }\n\n    const renamedArgs = await renameRegionsIfNeeded(assemblyManager, {\n      ...args,\n      filters: args.filters?.toJSON().filters,\n    })\n\n    return super.serializeArguments(renamedArgs, rpcDriverClassName)\n  }\n\n  async execute(\n    args: {\n      adapterConfig: {}\n      signal?: RemoteAbortSignal\n      sessionId: string\n      headers?: Record<string, string>\n      regions: Region[]\n      bpPerPx: number\n    },\n    rpcDriverClassName: string,\n  ) {\n    const pm = this.pluginManager\n    const deserializedArgs = await this.deserializeArguments(\n      args,\n      rpcDriverClassName,\n    )\n    const { regions, adapterConfig, sessionId } = deserializedArgs\n    const { dataAdapter } = await getAdapter(pm, sessionId, adapterConfig)\n\n    if (dataAdapter instanceof BaseFeatureDataAdapter) {\n      return dataAdapter.getMultiRegionQuantitativeStats(\n        regions,\n        deserializedArgs,\n      )\n    }\n    throw new Error('Data adapter not found')\n  }\n}\n","import RpcMethodType from '@jbrowse/core/pluggableElementTypes/RpcMethodType'\nimport SerializableFilterChain from '@jbrowse/core/pluggableElementTypes/renderers/util/serializableFilterChain'\nimport { getAdapter } from '@jbrowse/core/data_adapters/dataAdapterCache'\nimport { RemoteAbortSignal } from '@jbrowse/core/rpc/remoteAbortSignals'\nimport { QuantitativeStats } from '@jbrowse/core/util/stats'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\nexport class WiggleGetGlobalQuantitativeStats extends RpcMethodType {\n  name = 'WiggleGetGlobalQuantitativeStats'\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async deserializeArguments(args: any, rpcDriverClassName: string) {\n    const l = await super.deserializeArguments(args, rpcDriverClassName)\n    return {\n      ...l,\n      filters: args.filters\n        ? new SerializableFilterChain({\n            filters: args.filters,\n          })\n        : undefined,\n    }\n  }\n\n  async execute(\n    args: {\n      adapterConfig: AnyConfigurationModel\n      signal?: RemoteAbortSignal\n      headers?: Record<string, string>\n      sessionId: string\n    },\n    rpcDriverClassName: string,\n  ): Promise<QuantitativeStats> {\n    const pm = this.pluginManager\n    const deserializedArgs = await this.deserializeArguments(\n      args,\n      rpcDriverClassName,\n    )\n    const { adapterConfig, sessionId } = deserializedArgs\n    const { dataAdapter } = await getAdapter(pm, sessionId, adapterConfig)\n\n    // @ts-expect-error\n    return dataAdapter.getGlobalStats(deserializedArgs)\n  }\n}\n","import Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport {\n  AdapterGuesser,\n  TrackTypeGuesser,\n  getFileName,\n} from '@jbrowse/core/util/tracks'\n\n// locals\nimport WiggleBaseRenderer from './WiggleBaseRenderer'\n\nimport BigWigAdapterF from './BigWigAdapter'\nimport QuantitativeTrackF from './QuantitativeTrack'\nimport MultiQuantitativeTrackF from './MultiQuantitativeTrack'\nimport MultiWiggleAdapterF from './MultiWiggleAdapter'\nimport DensityRendererF from './DensityRenderer'\nimport XYPlotRendererF from './XYPlotRenderer'\nimport LinePlotRendererF from './LinePlotRenderer'\nimport LinearWiggleDisplayF from './LinearWiggleDisplay'\nimport MultiLinearWiggleDisplayF from './MultiLinearWiggleDisplay'\nimport MultiXYPlotRendererF from './MultiXYPlotRenderer'\nimport MultiRowXYPlotRendererF from './MultiRowXYPlotRenderer'\nimport MultiDensityRendererF from './MultiDensityRenderer'\nimport MultiLineRendererF from './MultiLineRenderer'\nimport MultiRowLineRendererF from './MultiRowLineRenderer'\nimport CreateMultiWiggleExtensionF from './CreateMultiWiggleExtension'\nimport MultiWiggleAddTrackWidgetF from './MultiWiggleAddTrackWidget'\n\nimport * as utils from './util'\n\nimport {\n  WiggleGetGlobalQuantitativeStats,\n  WiggleGetMultiRegionQuantitativeStats,\n  MultiWiggleGetSources,\n} from './WiggleRPC/rpcMethods'\n\nimport {\n  ReactComponent as LinearWiggleDisplayReactComponent,\n  modelFactory as linearWiggleDisplayModelFactory,\n} from './LinearWiggleDisplay'\n\nimport {\n  ReactComponent as XYPlotRendererReactComponent,\n  configSchema as xyPlotRendererConfigSchema,\n  XYPlotRenderer,\n} from './XYPlotRenderer'\n\nexport default class WigglePlugin extends Plugin {\n  name = 'WigglePlugin'\n\n  install(pm: PluginManager) {\n    MultiWiggleAdapterF(pm)\n    BigWigAdapterF(pm)\n    QuantitativeTrackF(pm)\n    MultiQuantitativeTrackF(pm)\n    LinearWiggleDisplayF(pm)\n    MultiLinearWiggleDisplayF(pm)\n    LinePlotRendererF(pm)\n    XYPlotRendererF(pm)\n    DensityRendererF(pm)\n    MultiXYPlotRendererF(pm)\n    MultiRowXYPlotRendererF(pm)\n    MultiDensityRendererF(pm)\n    MultiLineRendererF(pm)\n    MultiRowLineRendererF(pm)\n    MultiWiggleAddTrackWidgetF(pm)\n    CreateMultiWiggleExtensionF(pm)\n\n    pm.addToExtensionPoint(\n      'Core-guessAdapterForLocation',\n      (cb: AdapterGuesser) => {\n        return (file: FileLocation, index?: FileLocation, hint?: string) => {\n          const regexGuess = /\\.(bw|bigwig)$/i\n          const adapterName = 'BigWigAdapter'\n          const fileName = getFileName(file)\n          const obj = {\n            type: adapterName,\n            bigWigLocation: file,\n          }\n\n          if (regexGuess.test(fileName) && !hint) {\n            return obj\n          } else if (hint === adapterName) {\n            return obj\n          }\n\n          return cb(file, index, hint)\n        }\n      },\n    )\n    pm.addToExtensionPoint(\n      'Core-guessTrackTypeForLocation',\n      (trackTypeGuesser: TrackTypeGuesser) => {\n        return (adapterName: string) => {\n          if (adapterName === 'BigWigAdapter') {\n            return 'QuantitativeTrack'\n          }\n          return trackTypeGuesser(adapterName)\n        }\n      },\n    )\n\n    pm.addRpcMethod(() => new WiggleGetGlobalQuantitativeStats(pm))\n    pm.addRpcMethod(() => new WiggleGetMultiRegionQuantitativeStats(pm))\n    pm.addRpcMethod(() => new MultiWiggleGetSources(pm))\n  }\n\n  exports = {\n    LinearWiggleDisplayReactComponent,\n    XYPlotRendererReactComponent,\n    XYPlotRenderer,\n    WiggleBaseRenderer,\n    linearWiggleDisplayModelFactory,\n    xyPlotRendererConfigSchema,\n    utils,\n  }\n}\n\nexport * from './util'\n\nexport { default as WiggleRendering } from './WiggleRendering'\nexport {\n  Tooltip,\n  ReactComponent as LinearWiggleDisplayReactComponent,\n  modelFactory as linearWiggleDisplayModelFactory,\n} from './LinearWiggleDisplay'\nexport { type TooltipContentsComponent } from './Tooltip'\n\nexport { default as WiggleBaseRenderer } from './WiggleBaseRenderer'\n","import configSchema from './configSchema'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'MultiWiggleAdapter',\n        displayName: 'Multi-wiggle adapter',\n        configSchema,\n        adapterCapabilities: [\n          'hasResolution',\n          'hasLocalStats',\n          'hasGlobalStats',\n        ],\n        adapterMetadata: {\n          hiddenFromGUI: true,\n        },\n        getAdapterClass: () =>\n          import('./MultiWiggleAdapter').then(r => r.default),\n      }),\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'BigWigAdapter',\n        displayName: 'BigWig adapter',\n        configSchema,\n        adapterCapabilities: [\n          'hasResolution',\n          'hasLocalStats',\n          'hasGlobalStats',\n        ],\n        getAdapterClass: () => import('./BigWigAdapter').then(r => r.default),\n      }),\n  )\n}\n","import { createBaseTrackModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport TrackType from '@jbrowse/core/pluggableElementTypes/TrackType'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport configSchemaF from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addTrackType(() => {\n    const configSchema = configSchemaF(pluginManager)\n    return new TrackType({\n      name: 'QuantitativeTrack',\n      displayName: 'Quantitative track',\n      configSchema,\n      stateModel: createBaseTrackModel(\n        pluginManager,\n        'QuantitativeTrack',\n        configSchema,\n      ),\n    })\n  })\n}\n","import { createBaseTrackModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport TrackType from '@jbrowse/core/pluggableElementTypes/TrackType'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport configSchemaF from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addTrackType(() => {\n    const configSchema = configSchemaF(pluginManager)\n    return new TrackType({\n      name: 'MultiQuantitativeTrack',\n      displayName: 'Multi-quantitative track',\n      configSchema,\n      stateModel: createBaseTrackModel(\n        pluginManager,\n        'MultiQuantitativeTrack',\n        configSchema,\n      ),\n    })\n  })\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport configSchema from './configSchema'\nimport ReactComponent from '../WiggleRendering'\nimport LinePlotRenderer from './LinePlotRenderer'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addRendererType(\n    () =>\n      new LinePlotRenderer({\n        name: 'LinePlotRenderer',\n        ReactComponent,\n        configSchema,\n        pluginManager,\n      }),\n  )\n}\n","import ReactComponent from '../WiggleRendering'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport XYPlotRenderer from './XYPlotRenderer'\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addRendererType(\n    () =>\n      new XYPlotRenderer({\n        name: 'XYPlotRenderer',\n        ReactComponent,\n        configSchema,\n        pluginManager,\n      }),\n  )\n}\n\nexport { default as XYPlotRenderer } from './XYPlotRenderer'\nexport { default as ReactComponent } from '../WiggleRendering'\nexport { default as configSchema } from './configSchema'\n","import configSchema from './configSchema'\n\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport DensityRenderer from './DensityRenderer'\nimport ReactComponent from '../WiggleRendering'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addRendererType(\n    () =>\n      new DensityRenderer({\n        name: 'DensityRenderer',\n        ReactComponent,\n        configSchema,\n        pluginManager,\n      }),\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\n\nimport ReactComponent from '../MultiWiggleRendering'\nimport MultiXYPlotRenderer from './MultiXYPlotRenderer'\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addRendererType(\n    () =>\n      new MultiXYPlotRenderer({\n        name: 'MultiXYPlotRenderer',\n        ReactComponent,\n        configSchema,\n        pluginManager,\n      }),\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport ReactComponent from '../MultiWiggleRendering'\nimport MultiRowXYPlotRenderer from './MultiRowXYPlotRenderer'\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addRendererType(\n    () =>\n      new MultiRowXYPlotRenderer({\n        name: 'MultiRowXYPlotRenderer',\n        ReactComponent,\n        configSchema,\n        pluginManager,\n      }),\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport configSchema from './configSchema'\nimport ReactComponent from '../MultiWiggleRendering'\nimport MultiDensityRenderer from './MultiDensityRenderer'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addRendererType(\n    () =>\n      new MultiDensityRenderer({\n        name: 'MultiDensityRenderer',\n        ReactComponent,\n        configSchema,\n        pluginManager,\n      }),\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\n\nimport ReactComponent from '../MultiWiggleRendering'\nimport MultiLineRenderer from './MultiLineRenderer'\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addRendererType(\n    () =>\n      new MultiLineRenderer({\n        name: 'MultiLineRenderer',\n        ReactComponent,\n        configSchema,\n        pluginManager,\n      }),\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport ReactComponent from '../MultiWiggleRendering'\nimport MultiRowLineRenderer from './MultiRowLineRenderer'\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addRendererType(\n    () =>\n      new MultiRowLineRenderer({\n        name: 'MultiRowLineRenderer',\n        ReactComponent,\n        configSchema,\n        pluginManager,\n      }),\n  )\n}\n","import React from 'react'\nimport { useTheme } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { axisPropsFromTickScale, Axis, LEFT, RIGHT } from 'react-d3-axis-mod'\n\ntype Ticks = ReturnType<typeof axisPropsFromTickScale>\n\nexport default observer(function YScaleBar({\n  model,\n  orientation,\n}: {\n  model: { ticks?: Ticks }\n  orientation?: string\n}) {\n  const { ticks } = model\n  const theme = useTheme()\n  return ticks ? (\n    <Axis\n      {...ticks}\n      shadow={2}\n      format={(n: number) => n}\n      style={{ orient: orientation === 'left' ? LEFT : RIGHT }}\n      bg={theme.palette.background.default}\n      fg={theme.palette.text.primary}\n    />\n  ) : null\n})\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { Instance } from 'mobx-state-tree'\nimport { BaseInternetAccountConfig } from '@jbrowse/core/pluggableElementTypes/models'\n\n/**\n * #config OAuthInternetAccount\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst OAuthConfigSchema = ConfigurationSchema(\n  'OAuthInternetAccount',\n  {\n    /**\n     * #slot\n     */\n    tokenType: {\n      description: 'a custom name for a token to include in the header',\n      type: 'string',\n      defaultValue: 'Bearer',\n    },\n    /**\n     * #slot\n     */\n    authEndpoint: {\n      description: 'the authorization code endpoint of the internet account',\n      type: 'string',\n      defaultValue: '',\n    },\n    /**\n     * #slot\n     */\n    tokenEndpoint: {\n      description: 'the token endpoint of the internet account',\n      type: 'string',\n      defaultValue: '',\n    },\n    /**\n     * #slot\n     */\n    needsPKCE: {\n      description: 'boolean to indicate if the endpoint needs a PKCE code',\n      type: 'boolean',\n      defaultValue: false,\n    },\n    /**\n     * #slot\n     */\n    clientId: {\n      description: 'id for the OAuth application',\n      type: 'string',\n      defaultValue: '',\n    },\n    /**\n     * #slot\n     */\n    scopes: {\n      description: 'optional scopes for the authorization call',\n      type: 'string',\n      defaultValue: '',\n    },\n    /**\n     * #slot\n     */\n    state: {\n      description: 'optional state for the authorization call',\n      type: 'string',\n      defaultValue: '',\n    },\n    /**\n     * #slot\n     */\n    responseType: {\n      description:\n        \"the type of response from the authorization endpoint. can be 'token' or 'code'\",\n      type: 'string',\n      defaultValue: 'code',\n    },\n  },\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: BaseInternetAccountConfig,\n    explicitlyTyped: true,\n  },\n)\n\nexport type OAuthInternetAccountConfigModel = typeof OAuthConfigSchema\nexport type OAuthInternetAccountConfig =\n  Instance<OAuthInternetAccountConfigModel>\nexport default OAuthConfigSchema\n","export function fixup(buf: string) {\n  return buf.replaceAll('+', '-').replaceAll('/', '_').replaceAll('=', '')\n}\n\nexport async function generateChallenge(val: string) {\n  const sha256 = await import('crypto-js/sha256').then(f => f.default)\n  const Base64 = await import('crypto-js/enc-base64')\n  return fixup(Base64.stringify(sha256(val)))\n}\n\n// if response is JSON, checks if it needs to remove tokens in error, or just plain throw\nexport function processError(text: string, invalidErrorCb: () => void) {\n  try {\n    const obj = JSON.parse(text)\n    if (obj.error === 'invalid_grant') {\n      invalidErrorCb()\n    }\n    return obj?.error_description ?? text\n  } catch (e) {\n    /* response text is not json, just use original text as error */\n  }\n  return text\n}\n\nexport function processTokenResponse(\n  data: { refresh_token?: string; access_token: string },\n  storeRefreshTokenCb: (str: string) => void,\n) {\n  if (data.refresh_token) {\n    storeRefreshTokenCb(data.refresh_token)\n  }\n  return data.access_token\n}\n","export async function getResponseError({\n  response,\n  reason,\n  statusText,\n}: {\n  response: Response\n  reason?: string\n  statusText?: string\n}) {\n  return [\n    `HTTP ${response.status}`,\n    reason,\n    statusText ?? (await getError(response)),\n  ]\n    .filter(f => !!f)\n    .join(' - ')\n}\n\nexport async function getError(response: Response) {\n  try {\n    return response.text()\n  } catch (e) {\n    return response.statusText\n  }\n}\n","import { ConfigurationReference, getConf } from '@jbrowse/core/configuration'\nimport { InternetAccount } from '@jbrowse/core/pluggableElementTypes/models'\nimport { isElectron, UriLocation } from '@jbrowse/core/util'\nimport { Instance, types } from 'mobx-state-tree'\n\n// locals\nimport { OAuthInternetAccountConfigModel } from './configSchema'\nimport {\n  fixup,\n  generateChallenge,\n  processError,\n  processTokenResponse,\n} from './util'\nimport { getResponseError } from '../util'\n\ninterface OAuthData {\n  client_id: string\n  redirect_uri: string\n  response_type: 'token' | 'code'\n  scope?: string\n  code_challenge?: string\n  code_challenge_method?: string\n  token_access_type?: string\n  state?: string\n}\n\n/**\n * #stateModel OAuthInternetAccount\n */\nconst stateModelFactory = (configSchema: OAuthInternetAccountConfigModel) => {\n  return InternetAccount.named('OAuthInternetAccount')\n    .props({\n      /**\n       * #property\n       */\n      type: types.literal('OAuthInternetAccount'),\n      /**\n       * #property\n       */\n      configuration: ConfigurationReference(configSchema),\n    })\n    .views(() => {\n      let codeVerifier: string | undefined = undefined\n      return {\n        /**\n         * #getter\n         */\n        get codeVerifierPKCE() {\n          if (codeVerifier) {\n            return codeVerifier\n          }\n          const array = new Uint8Array(32)\n          globalThis.crypto.getRandomValues(array)\n          codeVerifier = fixup(Buffer.from(array).toString('base64'))\n          return codeVerifier\n        },\n      }\n    })\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get authEndpoint(): string {\n        return getConf(self, 'authEndpoint')\n      },\n      /**\n       * #getter\n       */\n      get tokenEndpoint(): string {\n        return getConf(self, 'tokenEndpoint')\n      },\n      /**\n       * #getter\n       */\n      get needsPKCE(): boolean {\n        return getConf(self, 'needsPKCE')\n      },\n      /**\n       * #getter\n       */\n      get clientId(): string {\n        return getConf(self, 'clientId')\n      },\n      /**\n       * #getter\n       */\n      get scopes(): string {\n        return getConf(self, 'scopes')\n      },\n      /**\n       * #method\n       * OAuth state parameter:\n       * https://www.rfc-editor.org/rfc/rfc6749#section-4.1.1\n       *\n       * Can override or extend if dynamic state is needed.\n       */\n      state(): string | undefined {\n        return getConf(self, 'state')\n      },\n      /**\n       * #getter\n       */\n      get responseType(): 'token' | 'code' {\n        return getConf(self, 'responseType')\n      },\n      /**\n       * #getter\n       */\n      get refreshTokenKey() {\n        return `${self.internetAccountId}-refreshToken`\n      },\n    }))\n\n    .actions(self => ({\n      /**\n       * #action\n       */\n      storeRefreshToken(refreshToken: string) {\n        localStorage.setItem(self.refreshTokenKey, refreshToken)\n      },\n      /**\n       * #action\n       */\n      removeRefreshToken() {\n        localStorage.removeItem(self.refreshTokenKey)\n      },\n      /**\n       * #method\n       */\n      retrieveRefreshToken() {\n        return localStorage.getItem(self.refreshTokenKey)\n      },\n      /**\n       * #action\n       */\n      async exchangeAuthorizationForAccessToken(\n        token: string,\n        redirectUri: string,\n      ): Promise<string> {\n        const params = new URLSearchParams(\n          Object.entries({\n            code: token,\n            grant_type: 'authorization_code',\n            client_id: self.clientId,\n            redirect_uri: redirectUri,\n            ...(self.needsPKCE ? { code_verifier: self.codeVerifierPKCE } : {}),\n          }),\n        )\n\n        const response = await fetch(self.tokenEndpoint, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n          body: params.toString(),\n        })\n\n        if (!response.ok) {\n          throw new Error(\n            await getResponseError({\n              response,\n              reason: 'Failed to obtain token',\n            }),\n          )\n        }\n\n        const data = await response.json()\n        return processTokenResponse(data, token =>\n          this.storeRefreshToken(token),\n        )\n      },\n      /**\n       * #action\n       */\n      async exchangeRefreshForAccessToken(\n        refreshToken: string,\n      ): Promise<string> {\n        const response = await fetch(self.tokenEndpoint, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n          body: new URLSearchParams(\n            Object.entries({\n              grant_type: 'refresh_token',\n              refresh_token: refreshToken,\n              client_id: self.clientId,\n            }),\n          ).toString(),\n        })\n\n        if (!response.ok) {\n          self.removeToken()\n          const text = await response.text()\n          throw new Error(\n            await getResponseError({\n              response,\n              statusText: processError(text, () => this.removeRefreshToken()),\n            }),\n          )\n        }\n        const data = await response.json()\n        return processTokenResponse(data, token =>\n          this.storeRefreshToken(token),\n        )\n      },\n    }))\n    .actions(self => {\n      let listener: (event: MessageEvent) => void | undefined\n      let exchangedTokenPromise: Promise<string> | undefined = undefined\n      return {\n        /**\n         * #action\n         * used to listen to child window for auth code/token\n         */\n        addMessageChannel(\n          resolve: (token: string) => void,\n          reject: (error: Error) => void,\n        ) {\n          listener = event => {\n            // this should probably get better handling, but ignored for now\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            this.finishOAuthWindow(event, resolve, reject)\n          }\n          window.addEventListener('message', listener)\n        },\n        /**\n         * #action\n         */\n        deleteMessageChannel() {\n          window.removeEventListener('message', listener)\n        },\n        /**\n         * #action\n         */\n        async finishOAuthWindow(\n          event: MessageEvent,\n          resolve: (token: string) => void,\n          reject: (error: Error) => void,\n        ) {\n          if (\n            event.data.name !== `JBrowseAuthWindow-${self.internetAccountId}`\n          ) {\n            return this.deleteMessageChannel()\n          }\n          const redirectUriWithInfo = event.data.redirectUri\n          const fixedQueryString = redirectUriWithInfo.replace('#', '?')\n          const redirectUrl = new URL(fixedQueryString)\n          const queryStringSearch = redirectUrl.search\n          const urlParams = new URLSearchParams(queryStringSearch)\n          if (urlParams.has('access_token')) {\n            const token = urlParams.get('access_token')\n            if (!token) {\n              return reject(new Error('Error with token endpoint'))\n            }\n            self.storeToken(token)\n            return resolve(token)\n          }\n          if (urlParams.has('code')) {\n            const code = urlParams.get('code')\n            if (!code) {\n              return reject(new Error('Error with authorization endpoint'))\n            }\n            try {\n              const token = await self.exchangeAuthorizationForAccessToken(\n                code,\n                redirectUrl.origin + redirectUrl.pathname,\n              )\n              self.storeToken(token)\n              return resolve(token)\n            } catch (e) {\n              return e instanceof Error\n                ? reject(e)\n                : reject(new Error(String(e)))\n            }\n          }\n          if (redirectUriWithInfo.includes('access_denied')) {\n            return reject(new Error('OAuth flow was cancelled'))\n          }\n          if (redirectUriWithInfo.includes('error')) {\n            return reject(new Error('OAuth flow error: ' + queryStringSearch))\n          }\n          this.deleteMessageChannel()\n        },\n        /**\n         * #action\n         * opens external OAuth flow, popup for web and new browser window for\n         * desktop\n         */\n        async useEndpointForAuthorization(\n          resolve: (token: string) => void,\n          reject: (error: Error) => void,\n        ) {\n          const redirectUri = isElectron\n            ? 'http://localhost/auth'\n            : window.location.origin + window.location.pathname\n          const data: OAuthData = {\n            client_id: self.clientId,\n            redirect_uri: redirectUri,\n            response_type: self.responseType || 'code',\n            token_access_type: 'offline',\n          }\n\n          if (self.state()) {\n            data.state = self.state()\n          }\n\n          if (self.scopes) {\n            data.scope = self.scopes\n          }\n\n          if (self.needsPKCE) {\n            data.code_challenge = await generateChallenge(self.codeVerifierPKCE)\n            data.code_challenge_method = 'S256'\n          }\n\n          const params = new URLSearchParams(Object.entries(data))\n\n          const url = new URL(self.authEndpoint)\n          url.search = params.toString()\n\n          const eventName = `JBrowseAuthWindow-${self.internetAccountId}`\n          if (isElectron) {\n            const { ipcRenderer } = window.require('electron')\n            const redirectUri = await ipcRenderer.invoke('openAuthWindow', {\n              internetAccountId: self.internetAccountId,\n              data,\n              url: url.toString(),\n            })\n\n            const eventFromDesktop = new MessageEvent('message', {\n              data: { name: eventName, redirectUri: redirectUri },\n            })\n            // may want to improve handling\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            this.finishOAuthWindow(eventFromDesktop, resolve, reject)\n          } else {\n            window.open(url, eventName, `width=500,height=600,left=0,top=0`)\n          }\n        },\n        /**\n         * #action\n         */\n        async getTokenFromUser(\n          resolve: (token: string) => void,\n          reject: (error: Error) => void,\n        ) {\n          const refreshToken = self.retrieveRefreshToken()\n          let doUserFlow = true\n\n          // if there is a refresh token, then try it out, and only if that\n          // refresh token succeeds, set doUserFlow to false\n          if (refreshToken) {\n            try {\n              const token = await self.exchangeRefreshForAccessToken(\n                refreshToken,\n              )\n              resolve(token)\n              doUserFlow = false\n            } catch (e) {\n              console.error(e)\n              self.removeRefreshToken()\n            }\n          }\n          if (doUserFlow) {\n            this.addMessageChannel(resolve, reject)\n            // may want to improve handling\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            this.useEndpointForAuthorization(resolve, reject)\n          }\n        },\n        /**\n         * #action\n         */\n        async validateToken(token: string, location: UriLocation) {\n          const newInit = self.addAuthHeaderToInit({ method: 'HEAD' }, token)\n          const response = await fetch(location.uri, newInit)\n          if (!response.ok) {\n            self.removeToken()\n            const refreshToken = self.retrieveRefreshToken()\n            if (refreshToken) {\n              try {\n                if (!exchangedTokenPromise) {\n                  exchangedTokenPromise =\n                    self.exchangeRefreshForAccessToken(refreshToken)\n                }\n                const newToken = await exchangedTokenPromise\n                exchangedTokenPromise = undefined\n                return newToken\n              } catch (err) {\n                console.error('Token could not be refreshed', err)\n                // let original error be thrown\n              }\n            }\n\n            throw new Error(\n              await getResponseError({\n                response,\n                reason: 'Error validating token',\n              }),\n            )\n          }\n          return token\n        },\n      }\n    })\n    .actions(self => {\n      const superGetFetcher = self.getFetcher\n      return {\n        /**\n         * #action\n         * Get a fetch method that will add any needed authentication headers to\n         * the request before sending it. If location is provided, it will be\n         * checked to see if it includes a token in it's pre-auth information.\n         *\n         * @param loc - UriLocation of the resource\n         * @returns A function that can be used to fetch\n         */\n        getFetcher(loc?: UriLocation) {\n          const fetcher = superGetFetcher(loc)\n          return async (input: RequestInfo, init?: RequestInit) => {\n            if (loc) {\n              await self.validateToken(await self.getToken(loc), loc)\n            }\n            return fetcher(input, init)\n          }\n        },\n      }\n    })\n}\n\nexport default stateModelFactory\nexport type OAuthStateModel = ReturnType<typeof stateModelFactory>\nexport type OAuthModel = Instance<OAuthStateModel>\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { Instance } from 'mobx-state-tree'\nimport { BaseInternetAccountConfig } from '@jbrowse/core/pluggableElementTypes/models'\n\n/**\n * #config ExternalTokenInternetAccount\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst ExternalTokenConfigSchema = ConfigurationSchema(\n  'ExternalTokenInternetAccount',\n  {\n    /**\n     * #slot\n     */\n    validateWithHEAD: {\n      description: 'validate the token with a HEAD request before using it',\n      type: 'boolean',\n      defaultValue: true,\n    },\n  },\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: BaseInternetAccountConfig,\n    explicitlyTyped: true,\n  },\n)\n\nexport type ExternalTokenInternetAccountConfigModel =\n  typeof ExternalTokenConfigSchema\n\nexport type ExternalTokenInternetAccountConfig =\n  Instance<ExternalTokenInternetAccountConfigModel>\nexport default ExternalTokenConfigSchema\n","import React, { useState } from 'react'\nimport { Button, DialogContent, DialogActions, TextField } from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\n\nexport const ExternalTokenEntryForm = ({\n  internetAccountId,\n  handleClose,\n}: {\n  internetAccountId: string\n  handleClose: (token?: string) => void\n}) => {\n  const [token, setToken] = useState('')\n\n  return (\n    <Dialog\n      open\n      maxWidth=\"xl\"\n      data-testid=\"externalToken-form\"\n      title={`Enter token for ${internetAccountId}`}\n    >\n      <DialogContent style={{ display: 'flex', flexDirection: 'column' }}>\n        <TextField\n          required\n          label=\"Enter Token\"\n          variant=\"outlined\"\n          inputProps={{ 'data-testid': 'entry-externalToken' }}\n          onChange={event => setToken(event.target.value)}\n          margin=\"dense\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          disabled={!token}\n          onClick={() => {\n            if (token) {\n              handleClose(token)\n            }\n          }}\n        >\n          Add\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => handleClose()}\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import { ConfigurationReference, getConf } from '@jbrowse/core/configuration'\nimport { InternetAccount } from '@jbrowse/core/pluggableElementTypes/models'\nimport { UriLocation } from '@jbrowse/core/util/types'\nimport { ExternalTokenInternetAccountConfigModel } from './configSchema'\nimport { Instance, types, getRoot } from 'mobx-state-tree'\n\nimport { ExternalTokenEntryForm } from './ExternalTokenEntryForm'\n\nconst stateModelFactory = (\n  configSchema: ExternalTokenInternetAccountConfigModel,\n) => {\n  return InternetAccount.named('ExternalTokenInternetAccount')\n    .props({\n      type: types.literal('ExternalTokenInternetAccount'),\n      configuration: ConfigurationReference(configSchema),\n    })\n    .views(self => ({\n      get validateWithHEAD(): boolean {\n        return getConf(self, 'validateWithHEAD')\n      },\n    }))\n    .actions(self => ({\n      getTokenFromUser(\n        resolve: (token: string) => void,\n        reject: (error: Error) => void,\n      ) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const { session } = getRoot<any>(self)\n        session.queueDialog((doneCallback: () => void) => [\n          ExternalTokenEntryForm,\n          {\n            internetAccountId: self.internetAccountId,\n            handleClose: (token: string) => {\n              if (token) {\n                resolve(token)\n              } else {\n                reject(new Error('user cancelled entry'))\n              }\n              doneCallback()\n            },\n          },\n        ])\n      },\n      async validateToken(token: string, location: UriLocation) {\n        if (!self.validateWithHEAD) {\n          return token\n        }\n        const newInit = self.addAuthHeaderToInit({ method: 'HEAD' }, token)\n        const response = await fetch(location.uri, newInit)\n        if (!response.ok) {\n          let errorMessage\n          try {\n            errorMessage = await response.text()\n          } catch (error) {\n            errorMessage = ''\n          }\n          throw new Error(\n            `Token could not be validated — ${response.status} (${\n              response.statusText\n            })${errorMessage ? ` (${errorMessage})` : ''}`,\n          )\n        }\n        return token\n      },\n    }))\n}\n\nexport default stateModelFactory\nexport type ExternalTokenStateModel = ReturnType<typeof stateModelFactory>\nexport type ExternalTokenModel = Instance<ExternalTokenStateModel>\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { Instance } from 'mobx-state-tree'\nimport { BaseInternetAccountConfig } from '@jbrowse/core/pluggableElementTypes/models'\n\n/**\n * #config HTTPBasicInternetAccount\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst HTTPBasicConfigSchema = ConfigurationSchema(\n  'HTTPBasicInternetAccount',\n  {\n    /**\n     * #slot\n     */\n    tokenType: {\n      description: 'a custom name for a token to include in the header',\n      type: 'string',\n      defaultValue: 'Basic',\n    },\n    /**\n     * #slot\n     */\n    validateWithHEAD: {\n      description: 'validate the token with a HEAD request before using it',\n      type: 'boolean',\n      defaultValue: true,\n    },\n  },\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: BaseInternetAccountConfig,\n    explicitlyTyped: true,\n  },\n)\n\nexport type HTTPBasicInternetAccountConfigModel = typeof HTTPBasicConfigSchema\n\nexport type HTTPBasicInternetAccountConfig =\n  Instance<HTTPBasicInternetAccountConfigModel>\nexport default HTTPBasicConfigSchema\n","import React, { useState } from 'react'\nimport { Button, DialogContent, DialogActions, TextField } from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\n\nexport const HTTPBasicLoginForm = ({\n  internetAccountId,\n  handleClose,\n}: {\n  internetAccountId: string\n  handleClose: (arg?: string) => void\n}) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  return (\n    <Dialog\n      open\n      maxWidth=\"xl\"\n      data-testid=\"login-httpbasic\"\n      title={`Log In for ${internetAccountId}`}\n    >\n      <form\n        onSubmit={event => {\n          if (username && password) {\n            handleClose(btoa(`${username}:${password}`))\n          } else {\n            handleClose()\n          }\n          event.preventDefault()\n        }}\n      >\n        <DialogContent style={{ display: 'flex', flexDirection: 'column' }}>\n          <TextField\n            required\n            label=\"Username\"\n            variant=\"outlined\"\n            inputProps={{ 'data-testid': 'login-httpbasic-username' }}\n            onChange={event => setUsername(event.target.value)}\n            margin=\"dense\"\n          />\n          <TextField\n            required\n            label=\"Password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            variant=\"outlined\"\n            inputProps={{ 'data-testid': 'login-httpbasic-password' }}\n            onChange={event => setPassword(event.target.value)}\n            margin=\"dense\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            type=\"submit\"\n            onClick={() => handleClose()}\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  )\n}\n","import { ConfigurationReference, getConf } from '@jbrowse/core/configuration'\nimport { InternetAccount } from '@jbrowse/core/pluggableElementTypes/models'\nimport { UriLocation } from '@jbrowse/core/util/types'\nimport { Instance, types, getRoot } from 'mobx-state-tree'\n\n// locals\nimport { HTTPBasicInternetAccountConfigModel } from './configSchema'\nimport { HTTPBasicLoginForm } from './HTTPBasicLoginForm'\nimport { getResponseError } from '../util'\n\n/**\n * #stateModel HTTPBasicInternetAccount\n */\nconst stateModelFactory = (\n  configSchema: HTTPBasicInternetAccountConfigModel,\n) => {\n  return InternetAccount.named('HTTPBasicInternetAccount')\n    .props({\n      /**\n       * #property\n       */\n      type: types.literal('HTTPBasicInternetAccount'),\n      /**\n       * #property\n       */\n      configuration: ConfigurationReference(configSchema),\n    })\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get validateWithHEAD(): boolean {\n        return getConf(self, 'validateWithHEAD')\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      getTokenFromUser(\n        resolve: (token: string) => void,\n        reject: (error: Error) => void,\n      ) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const { session } = getRoot<any>(self)\n        session.queueDialog((doneCallback: () => void) => [\n          HTTPBasicLoginForm,\n          {\n            internetAccountId: self.internetAccountId,\n            handleClose: (token: string) => {\n              if (token) {\n                resolve(token)\n              } else {\n                reject(new Error('User cancelled entry'))\n              }\n              doneCallback()\n            },\n          },\n        ])\n      },\n      /**\n       * #action\n       */\n      async validateToken(token: string, location: UriLocation) {\n        if (!self.validateWithHEAD) {\n          return token\n        }\n        const newInit = self.addAuthHeaderToInit({ method: 'HEAD' }, token)\n        const response = await fetch(location.uri, newInit)\n        if (!response.ok) {\n          throw new Error(\n            await getResponseError({\n              response,\n              reason: 'Error validating token',\n            }),\n          )\n        }\n        return token\n      },\n    }))\n}\n\nexport default stateModelFactory\nexport type HTTPBasicStateModel = ReturnType<typeof stateModelFactory>\nexport type HTTPBasicModel = Instance<HTTPBasicStateModel>\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { Instance } from 'mobx-state-tree'\nimport OAuthConfigSchema from '../OAuthModel/configSchema'\n\n/**\n * #config DropboxOAuthInternetAccount\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst DropboxOAuthConfigSchema = ConfigurationSchema(\n  'DropboxOAuthInternetAccount',\n  {\n    /**\n     * #slot\n     */\n    authEndpoint: {\n      description: 'the authorization code endpoint of the internet account',\n      type: 'string',\n      defaultValue: 'https://www.dropbox.com/oauth2/authorize',\n    },\n    /**\n     * #slot\n     */\n    tokenEndpoint: {\n      description: 'the token endpoint of the internet account',\n      type: 'string',\n      defaultValue: 'https://api.dropbox.com/oauth2/token',\n    },\n    /**\n     * #slot\n     */\n    needsPKCE: {\n      description: 'boolean to indicate if the endpoint needs a PKCE code',\n      type: 'boolean',\n      defaultValue: true,\n    },\n    /**\n     * #slot\n     */\n    domains: {\n      description:\n        'array of valid domains the url can contain to use this account',\n      type: 'stringArray',\n      defaultValue: [\n        'addtodropbox.com',\n        'db.tt',\n        'dropbox.com',\n        'dropboxapi.com',\n        'dropboxbusiness.com',\n        'dropbox.tech',\n        'getdropbox.com',\n      ],\n    },\n  },\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: OAuthConfigSchema,\n    explicitlyTyped: true,\n  },\n)\n\nexport type DropboxOAuthInternetAccountConfigModel =\n  typeof DropboxOAuthConfigSchema\n\nexport type DropboxOAuthInternetAccountConfig =\n  Instance<DropboxOAuthInternetAccountConfigModel>\nexport default DropboxOAuthConfigSchema\n","import { getResponseError } from '../util'\n\ninterface DropboxError {\n  error_summary: string\n  error: {\n    '.tag': string\n  }\n}\n\n/**\n * Error messages from\n * https://www.dropbox.com/developers/documentation/http/documentation#sharing-get_shared_link_file\n * */\nconst dropboxErrorMessages: Record<string, string | undefined> = {\n  shared_link_not_found: \"The shared link wasn't found.\",\n  shared_link_access_denied:\n    'The caller is not allowed to access this shared link.',\n  unsupported_link_type:\n    'This type of link is not supported; use files/export instead.',\n  shared_link_is_directory: 'Directories cannot be retrieved by this endpoint.',\n}\n\nexport async function getDescriptiveErrorMessage(\n  response: Response,\n  reason?: string,\n) {\n  let errorMessage = ''\n  try {\n    const err = JSON.parse(await response.text()) as DropboxError\n    const tag = err.error['.tag']\n    errorMessage = dropboxErrorMessages[tag] || tag\n  } catch (error) {\n    /* do nothing */\n  }\n  return getResponseError({ response, reason, statusText: errorMessage })\n}\n","import React from 'react'\nimport { ConfigurationReference } from '@jbrowse/core/configuration'\nimport { UriLocation } from '@jbrowse/core/util/types'\nimport { SvgIconProps, SvgIcon } from '@mui/material'\nimport { Instance, types } from 'mobx-state-tree'\n\n// locals\nimport { DropboxOAuthInternetAccountConfigModel } from './configSchema'\nimport baseModel from '../OAuthModel/model'\nimport { configSchema as OAuthConfigSchema } from '../OAuthModel'\nimport { getDescriptiveErrorMessage } from './util'\n\nexport function DropboxIcon(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M3 6.2L8 9.39L13 6.2L8 3L3 6.2M13 6.2L18 9.39L23 6.2L18 3L13 6.2M3 12.55L8 15.74L13 12.55L8 9.35L3 12.55M18 9.35L13 12.55L18 15.74L23 12.55L18 9.35M8.03 16.8L13.04 20L18.04 16.8L13.04 13.61L8.03 16.8Z\" />\n    </SvgIcon>\n  )\n}\n\n/**\n * #stateModel DropboxOAuthInternetAccount\n */\nconst stateModelFactory = (\n  configSchema: DropboxOAuthInternetAccountConfigModel,\n) => {\n  return baseModel(OAuthConfigSchema)\n    .named('DropboxOAuthInternetAccount')\n    .props({\n      /**\n       * #property\n       */\n      type: types.literal('DropboxOAuthInternetAccount'),\n      /**\n       * #property\n       */\n      configuration: ConfigurationReference(configSchema),\n    })\n    .views(() => ({\n      /**\n       * #getter\n       * The FileSelector icon for Dropbox\n       */\n      get toggleContents() {\n        return <DropboxIcon />\n      },\n      /**\n       * #getter\n       */\n      get selectorLabel() {\n        return 'Enter Dropbox share link'\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #method\n       */\n      getFetcher(location?: UriLocation) {\n        return async (input: RequestInfo, init?: RequestInit) => {\n          const authToken = await self.getToken(location)\n          const newInit = self.addAuthHeaderToInit(\n            { ...init, method: 'POST' },\n            authToken,\n          )\n          newInit.headers.append(\n            'Dropbox-API-Arg',\n            JSON.stringify({ url: input }),\n          )\n          const response = await fetch(\n            'https://content.dropboxapi.com/2/sharing/get_shared_link_file',\n            newInit,\n          )\n          if (!response.ok) {\n            throw new Error(await getDescriptiveErrorMessage(response))\n          }\n          return response\n        }\n      },\n      /**\n       * #action\n       */\n      async validateToken(\n        token: string,\n        location: UriLocation,\n      ): Promise<string> {\n        const response = await fetch(\n          'https://api.dropboxapi.com/2/sharing/get_shared_link_metadata',\n          {\n            method: 'POST',\n            headers: {\n              Authorization: `Bearer ${token}`,\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              url: location.uri,\n            }),\n          },\n        )\n        if (!response.ok) {\n          const refreshToken = self.retrieveRefreshToken()\n          if (refreshToken) {\n            self.removeRefreshToken()\n            const newToken = await self.exchangeRefreshForAccessToken(\n              refreshToken,\n            )\n            return this.validateToken(newToken, location)\n          }\n          throw new Error(\n            await getDescriptiveErrorMessage(\n              response,\n              'Token could not be validated',\n            ),\n          )\n        }\n        return token\n      },\n    }))\n}\n\nexport default stateModelFactory\nexport type DropboxOAuthStateModel = ReturnType<typeof stateModelFactory>\nexport type DropboxOAuthModel = Instance<DropboxOAuthStateModel>\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { Instance } from 'mobx-state-tree'\nimport OAuthConfigSchema from '../OAuthModel/configSchema'\n\n/**\n * #config GoogleDriveOAuthInternetAccount\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst GoogleDriveOAuthConfigSchema = ConfigurationSchema(\n  'GoogleDriveOAuthInternetAccount',\n  {\n    /**\n     * #slot\n     */\n    authEndpoint: {\n      description: 'the authorization code endpoint of the internet account',\n      type: 'string',\n      defaultValue: 'https://accounts.google.com/o/oauth2/v2/auth',\n    },\n    /**\n     * #slot\n     */\n    scopes: {\n      description: 'optional scopes for the authorization call',\n      type: 'string',\n      defaultValue: 'https://www.googleapis.com/auth/drive.readonly',\n    },\n    /**\n     * #slot\n     */\n    domains: {\n      description:\n        'array of valid domains the url can contain to use this account',\n      type: 'stringArray',\n      defaultValue: ['drive.google.com\"'],\n    },\n    /**\n     * #slot\n     */\n    responseType: {\n      description: 'the type of response from the authorization endpoint',\n      type: 'string',\n      defaultValue: 'token',\n    },\n  },\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: OAuthConfigSchema,\n    explicitlyTyped: true,\n  },\n)\n\nexport type GoogleDriveOAuthInternetAccountConfigModel =\n  typeof GoogleDriveOAuthConfigSchema\n\nexport type GoogleDriveOAuthInternetAccountConfig =\n  Instance<GoogleDriveOAuthInternetAccountConfigModel>\nexport default GoogleDriveOAuthConfigSchema\n","import { getResponseError } from '../util'\n\ninterface GoogleDriveError {\n  error: {\n    errors: {\n      domain: string\n      reason: string\n      message: string\n      locationType?: string\n      location?: string\n    }[]\n    code: number\n    message: string\n  }\n}\n\nexport async function getDescriptiveErrorMessage(\n  response: Response,\n  reason?: string,\n) {\n  let errorMessage = ''\n  try {\n    const err = JSON.parse(await response.text()) as GoogleDriveError\n    errorMessage = err.error.message\n  } catch (error) {\n    /* do nothing */\n  }\n  return getResponseError({ response, reason, statusText: errorMessage })\n}\n","import { RemoteFileWithRangeCache } from '@jbrowse/core/util/io'\nimport {\n  FilehandleOptions,\n  Stats,\n  PolyfilledResponse,\n} from 'generic-filehandle'\n\nexport interface RequestInitWithMetadata extends RequestInit {\n  metadataOnly?: boolean\n}\n\ninterface GoogleDriveFilehandleOptions extends FilehandleOptions {\n  fetch(\n    input: RequestInfo,\n    opts?: RequestInitWithMetadata,\n  ): Promise<PolyfilledResponse>\n}\n\nexport class GoogleDriveFile extends RemoteFileWithRangeCache {\n  private statsPromise: Promise<{ size: number }>\n  constructor(source: string, opts: GoogleDriveFilehandleOptions) {\n    super(source, opts)\n    this.statsPromise = this.fetch(source, {\n      metadataOnly: true,\n    }).then((response: Response) => response.json())\n  }\n\n  async fetch(\n    input: RequestInfo,\n    opts?: RequestInitWithMetadata,\n  ): Promise<PolyfilledResponse> {\n    return super.fetch(input, opts)\n  }\n\n  async stat(): Promise<Stats> {\n    return this.statsPromise\n  }\n}\n","import React from 'react'\nimport { ConfigurationReference } from '@jbrowse/core/configuration'\nimport { Instance, types } from 'mobx-state-tree'\nimport { UriLocation } from '@jbrowse/core/util/types'\nimport { SvgIconProps, SvgIcon } from '@mui/material'\n\n// locals\nimport { GoogleDriveOAuthInternetAccountConfigModel } from './configSchema'\nimport baseModel from '../OAuthModel/model'\nimport { configSchema as OAuthConfigSchema } from '../OAuthModel'\nimport { getDescriptiveErrorMessage } from './util'\nimport { GoogleDriveFile } from './GoogleDriveFilehandle'\n\nexport interface RequestInitWithMetadata extends RequestInit {\n  metadataOnly?: boolean\n}\n\nfunction GoogleDriveIcon(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M7.71,3.5L1.15,15L4.58,21L11.13,9.5M9.73,15L6.3,21H19.42L22.85,15M22.28,14L15.42,2H8.58L8.57,2L15.43,14H22.28Z\" />\n    </SvgIcon>\n  )\n}\n\nfunction getUri(str: string) {\n  const urlId = str.match(/[-\\w]{25,}/)\n  return `https://www.googleapis.com/drive/v3/files/${urlId}`\n}\n\n/**\n * #stateModel GoogleDriveOAuthInternetAccount\n */\nexport default function stateModelFactory(\n  configSchema: GoogleDriveOAuthInternetAccountConfigModel,\n) {\n  return baseModel(OAuthConfigSchema)\n    .named('GoogleDriveOAuthInternetAccount')\n    .props({\n      /**\n       * #property\n       */\n      type: types.literal('GoogleDriveOAuthInternetAccount'),\n      /**\n       * #property\n       */\n      configuration: ConfigurationReference(configSchema),\n    })\n    .views(() => ({\n      /**\n       * #getter\n       * The FileSelector icon for Google drive\n       */\n      get toggleContents() {\n        return <GoogleDriveIcon />\n      },\n      /**\n       * #getter\n       */\n      get selectorLabel() {\n        return 'Enter Google Drive share link'\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #method\n       */\n      getFetcher(location?: UriLocation) {\n        return async (input: RequestInfo, init?: RequestInitWithMetadata) => {\n          const driveUrl = new URL(getUri(String(input)))\n          const searchParams = new URLSearchParams()\n          if (init?.metadataOnly) {\n            searchParams.append('fields', 'size')\n          } else {\n            searchParams.append('alt', 'media')\n          }\n          driveUrl.search = searchParams.toString()\n          const authToken = await self.getToken(location)\n          const response = await fetch(\n            driveUrl,\n            self.addAuthHeaderToInit(\n              { ...init, method: 'GET', credentials: 'same-origin' },\n              authToken,\n            ),\n          )\n          if (!response.ok) {\n            throw new Error(await getDescriptiveErrorMessage(response))\n          }\n          return response\n        }\n      },\n      /**\n       * #method\n       */\n      openLocation(location: UriLocation) {\n        return new GoogleDriveFile(location.uri, {\n          fetch: this.getFetcher(location),\n        })\n      },\n      /**\n       * #action\n       */\n      async validateToken(token: string, location: UriLocation) {\n        const response = await fetch(getUri(location.uri), {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n        })\n        if (!response.ok) {\n          throw new Error(\n            await getDescriptiveErrorMessage(\n              response,\n              'Token could not be validated',\n            ),\n          )\n        }\n        return token\n      },\n    }))\n}\n\nexport type GoogleDriveOAuthStateModel = ReturnType<typeof stateModelFactory>\nexport type GoogleDriveOAuthModel = Instance<GoogleDriveOAuthStateModel>\n","import Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport InternetAccountType from '@jbrowse/core/pluggableElementTypes/InternetAccountType'\nimport {\n  configSchema as OAuthConfigSchema,\n  modelFactory as OAuthInternetAccountModelFactory,\n} from './OAuthModel'\nimport {\n  configSchema as ExternalTokenConfigSchema,\n  modelFactory as ExternalTokenInternetAccountModelFactory,\n} from './ExternalTokenModel'\nimport {\n  configSchema as HTTPBasicConfigSchema,\n  modelFactory as HTTPBasicInternetAccountModelFactory,\n} from './HTTPBasicModel'\nimport {\n  configSchema as DropboxOAuthConfigSchema,\n  modelFactory as DropboxOAuthInternetAccountModelFactory,\n} from './DropboxOAuthModel'\nimport {\n  configSchema as GoogleDriveOAuthConfigSchema,\n  modelFactory as GoogleDriveOAuthInternetAccountModelFactory,\n} from './GoogleDriveOAuthModel'\n\nexport default class AuthenticationPlugin extends Plugin {\n  name = 'AuthenticationPlugin'\n\n  exports = {\n    OAuthConfigSchema,\n    OAuthInternetAccountModelFactory,\n    ExternalTokenConfigSchema,\n    ExternalTokenInternetAccountModelFactory,\n    HTTPBasicConfigSchema,\n    HTTPBasicInternetAccountModelFactory,\n    DropboxOAuthConfigSchema,\n    DropboxOAuthInternetAccountModelFactory,\n    GoogleDriveOAuthConfigSchema,\n    GoogleDriveOAuthInternetAccountModelFactory,\n  }\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addInternetAccountType(() => {\n      return new InternetAccountType({\n        name: 'OAuthInternetAccount',\n        configSchema: OAuthConfigSchema,\n        stateModel: OAuthInternetAccountModelFactory(OAuthConfigSchema),\n      })\n    })\n    pluginManager.addInternetAccountType(() => {\n      return new InternetAccountType({\n        name: 'ExternalTokenInternetAccount',\n        configSchema: ExternalTokenConfigSchema,\n        stateModel: ExternalTokenInternetAccountModelFactory(\n          ExternalTokenConfigSchema,\n        ),\n      })\n    })\n    pluginManager.addInternetAccountType(() => {\n      return new InternetAccountType({\n        name: 'HTTPBasicInternetAccount',\n        configSchema: HTTPBasicConfigSchema,\n        stateModel: HTTPBasicInternetAccountModelFactory(HTTPBasicConfigSchema),\n      })\n    })\n    pluginManager.addInternetAccountType(() => {\n      return new InternetAccountType({\n        name: 'DropboxOAuthInternetAccount',\n        configSchema: DropboxOAuthConfigSchema,\n        stateModel: DropboxOAuthInternetAccountModelFactory(\n          DropboxOAuthConfigSchema,\n        ),\n      })\n    })\n    pluginManager.addInternetAccountType(() => {\n      return new InternetAccountType({\n        name: 'GoogleDriveOAuthInternetAccount',\n        configSchema: GoogleDriveOAuthConfigSchema,\n        stateModel: GoogleDriveOAuthInternetAccountModelFactory(\n          GoogleDriveOAuthConfigSchema,\n        ),\n      })\n    })\n  }\n}\n\nexport {\n  configSchema as OAuthConfigSchema,\n  modelFactory as OAuthInternetAccountModelFactory,\n} from './OAuthModel'\nexport {\n  configSchema as ExternalTokenConfigSchema,\n  modelFactory as ExternalTokenInternetAccountModelFactory,\n} from './ExternalTokenModel'\n\nexport {\n  configSchema as HTTPBasicConfigSchema,\n  modelFactory as HTTPBasicInternetAccountModelFactory,\n} from './HTTPBasicModel'\n\nexport {\n  configSchema as DropboxOAuthConfigSchema,\n  modelFactory as DropboxOAuthInternetAccountModelFactory,\n} from './DropboxOAuthModel'\n\nexport {\n  configSchema as GoogleDriveOAuthConfigSchema,\n  modelFactory as GoogleDriveOAuthInternetAccountModelFactory,\n} from './GoogleDriveOAuthModel'\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config BigBedAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst BigBedAdapter = ConfigurationSchema(\n  'BigBedAdapter',\n  {\n    /**\n     * #slot\n     */\n    bigBedLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/my.bb', locationType: 'UriLocation' },\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default BigBedAdapter\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config BedpeAdapter\n * intended for SVs in a single assembly\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst BedpeAdapter = ConfigurationSchema(\n  'BedpeAdapter',\n  {\n    /**\n     * #slot\n     * can be plaintext or gzipped, not indexed so loaded into memory on startup\n     */\n    bedpeLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/my.bedpe.gz',\n        locationType: 'UriLocation',\n      },\n    },\n    /**\n     * #slot\n     */\n    columnNames: {\n      type: 'stringArray',\n      description: 'List of column names',\n      defaultValue: [],\n    },\n  },\n  { explicitlyTyped: true },\n)\nexport default BedpeAdapter\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\n/**\n * #config BedTabixAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst BedTabixAdapter = ConfigurationSchema(\n  'BedTabixAdapter',\n  {\n    /**\n     * #slot\n     */\n    bedGzLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/my.bed.gz', locationType: 'UriLocation' },\n    },\n\n    index: ConfigurationSchema('TabixIndex', {\n      /**\n       * #slot index.indexType\n       */\n      indexType: {\n        model: types.enumeration('IndexType', ['TBI', 'CSI']),\n        type: 'stringEnum',\n        defaultValue: 'TBI',\n      },\n      /**\n       * #slot index.location\n       */\n      location: {\n        type: 'fileLocation',\n        defaultValue: {\n          uri: '/path/to/my.bed.gz.tbi',\n          locationType: 'UriLocation',\n        },\n      },\n    }),\n\n    /**\n     * #slot\n     */\n    columnNames: {\n      type: 'stringArray',\n      description: 'List of column names',\n      defaultValue: [],\n    },\n\n    /**\n     * #slot\n     */\n    scoreColumn: {\n      type: 'string',\n      description: 'The column to use as a \"score\" attribute',\n      defaultValue: '',\n    },\n\n    /**\n     * #slot\n     */\n    autoSql: {\n      type: 'string',\n      description: 'The autoSql definition for the data fields in the file',\n      defaultValue: '',\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default BedTabixAdapter\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config BedAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst BedAdapter = ConfigurationSchema(\n  'BedAdapter',\n  {\n    /**\n     * #slot\n     */\n    bedLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/my.bed.gz', locationType: 'UriLocation' },\n    },\n    /**\n     * #slot\n     */\n    columnNames: {\n      type: 'stringArray',\n      description: 'List of column names',\n      defaultValue: [],\n    },\n    /**\n     * #slot\n     */\n    scoreColumn: {\n      type: 'string',\n      description: 'The column to use as a \"score\" attribute',\n      defaultValue: '',\n    },\n    /**\n     * #slot\n     */\n    autoSql: {\n      type: 'string',\n      description: 'The autoSql definition for the data fields in the file',\n      defaultValue: '',\n    },\n    /**\n     * #slot\n     */\n    colRef: {\n      type: 'number',\n      description: 'The column to use as a \"refName\" attribute',\n      defaultValue: 0,\n    },\n    /**\n     * #slot\n     */\n    colStart: {\n      type: 'number',\n      description: 'The column to use as a \"start\" attribute',\n      defaultValue: 1,\n    },\n    /**\n     * #slot\n     */\n    colEnd: {\n      type: 'number',\n      description: 'The column to use as a \"end\" attribute',\n      defaultValue: 2,\n    },\n  },\n  { explicitlyTyped: true },\n)\nexport default BedAdapter\n","import Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport BigBedAdapterF from './BigBedAdapter'\nimport BedpeAdapterF from './BedpeAdapter'\nimport BedTabixAdapterF from './BedTabixAdapter'\nimport BedAdapterF from './BedAdapter'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport {\n  getFileName,\n  makeIndex,\n  makeIndexType,\n  AdapterGuesser,\n  TrackTypeGuesser,\n} from '@jbrowse/core/util/tracks'\n\nexport default class BedPlugin extends Plugin {\n  name = 'BedPlugin'\n\n  install(pluginManager: PluginManager) {\n    BigBedAdapterF(pluginManager)\n    BedAdapterF(pluginManager)\n    BedpeAdapterF(pluginManager)\n    BedTabixAdapterF(pluginManager)\n    pluginManager.addToExtensionPoint(\n      'Core-guessAdapterForLocation',\n      (adapterGuesser: AdapterGuesser) => {\n        return (\n          file: FileLocation,\n          index?: FileLocation,\n          adapterHint?: string,\n        ) => {\n          const regexGuess = /\\.(bb|bigbed)$/i\n          const adapterName = 'BigBedAdapter'\n          const fileName = getFileName(file)\n          const obj = {\n            type: adapterName,\n            bigBedLocation: file,\n          }\n\n          if (regexGuess.test(fileName) && !adapterHint) {\n            return obj\n          } else if (adapterHint === adapterName) {\n            return obj\n          }\n          return adapterGuesser(file, index, adapterHint)\n        }\n      },\n    )\n\n    pluginManager.addToExtensionPoint(\n      'Core-guessAdapterForLocation',\n      (adapterGuesser: AdapterGuesser) => {\n        return (\n          file: FileLocation,\n          index?: FileLocation,\n          adapterHint?: string,\n        ) => {\n          const regexGuess = /\\.bedpe\\.gz$/i\n          const adapterName = 'BedpeAdapter'\n          const fileName = getFileName(file)\n          if (regexGuess.test(fileName) || adapterHint === adapterName) {\n            return {\n              type: adapterName,\n              bedpeLocation: file,\n            }\n          }\n          return adapterGuesser(file, index, adapterHint)\n        }\n      },\n    )\n\n    pluginManager.addToExtensionPoint(\n      'Core-guessAdapterForLocation',\n      (adapterGuesser: AdapterGuesser) => {\n        return (\n          file: FileLocation,\n          index?: FileLocation,\n          adapterHint?: string,\n        ) => {\n          const regexGuess = /\\.bed\\.b?gz$/i\n          const adapterName = 'BedTabixAdapter'\n          const fileName = getFileName(file)\n          const indexName = index && getFileName(index)\n          if (regexGuess.test(fileName) || adapterHint === adapterName) {\n            return {\n              type: adapterName,\n              bedGzLocation: file,\n              index: {\n                location: index || makeIndex(file, '.tbi'),\n                indexType: makeIndexType(indexName, 'CSI', 'TBI'),\n              },\n            }\n          }\n          return adapterGuesser(file, index, adapterHint)\n        }\n      },\n    )\n\n    pluginManager.addToExtensionPoint(\n      'Core-guessAdapterForLocation',\n      (adapterGuesser: AdapterGuesser) => {\n        return (\n          file: FileLocation,\n          index?: FileLocation,\n          adapterHint?: string,\n        ) => {\n          const regexGuess = /\\.bed$/i\n          const adapterName = 'BedAdapter'\n          const fileName = getFileName(file)\n          if (regexGuess.test(fileName) || adapterHint === adapterName) {\n            return {\n              type: adapterName,\n              bedLocation: file,\n            }\n          }\n          return adapterGuesser(file, index, adapterHint)\n        }\n      },\n    )\n\n    pluginManager.addToExtensionPoint(\n      'Core-guessTrackTypeForLocation',\n      (trackTypeGuesser: TrackTypeGuesser) => {\n        return (adapterName: string) => {\n          if (adapterName === 'BedpeAdapter') {\n            return 'VariantTrack'\n          }\n          return trackTypeGuesser(adapterName)\n        }\n      },\n    )\n  }\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'BigBedAdapter',\n        displayName: 'BigBed adapter',\n        configSchema,\n        getAdapterClass: () => import('./BigBedAdapter').then(r => r.default),\n      }),\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'BedAdapter',\n        displayName: 'BED adapter',\n        configSchema,\n        getAdapterClass: () => import('./BedAdapter').then(r => r.default),\n      }),\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'BedpeAdapter',\n        displayName: 'BEDPE adapter',\n        configSchema,\n        getAdapterClass: () => import('./BedpeAdapter').then(r => r.default),\n      }),\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'BedTabixAdapter',\n        displayName: 'BED tabix adapter',\n        configSchema,\n        getAdapterClass: () => import('./BedTabixAdapter').then(r => r.default),\n      }),\n  )\n}\n","import { lazy } from 'react'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport { types } from 'mobx-state-tree'\nimport { WidgetType } from '@jbrowse/core/pluggableElementTypes'\n\nconst configSchema = ConfigurationSchema('BreakpointAlignmentsWidget', {})\n\nconst stateModel = types\n  .model('BreakpointAlignmentsWidget', {\n    id: ElementId,\n    type: types.literal('BreakpointAlignmentsWidget'),\n    featureData: types.frozen(),\n  })\n  .actions(self => ({\n    setFeatureData(data: unknown) {\n      self.featureData = data\n    },\n    clearFeatureData() {\n      self.featureData = undefined\n    },\n  }))\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addWidgetType(() => {\n    return new WidgetType({\n      name: 'BreakpointAlignmentsWidget',\n      heading: 'Breakpoint feature details',\n      configSchema,\n      stateModel,\n      ReactComponent: lazy(() => import('./BreakpointAlignmentsFeatureDetail')),\n    })\n  })\n}\n","import { getSession, Feature } from '@jbrowse/core/util'\nimport ViewType from '@jbrowse/core/pluggableElementTypes/ViewType'\nimport { parseBreakend } from '@gmod/vcf'\nimport { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\n\ntype LGV = LinearGenomeViewModel\n\nexport default class BreakpointSplitViewType extends ViewType {\n  snapshotFromBreakendFeature(feature: Feature, view: LGV) {\n    const alt = feature.get('ALT')?.[0]\n    const bnd = alt ? parseBreakend(alt) : undefined\n    const startPos = feature.get('start')\n    let endPos\n    const bpPerPx = 10\n\n    // TODO: Figure this out for multiple assembly names\n    const { assemblyName } = view.displayedRegions[0]\n    const { assemblyManager } = getSession(view)\n    const assembly = assemblyManager.get(assemblyName)\n\n    if (!assembly) {\n      throw new Error(`assembly ${assemblyName} not found`)\n    }\n    if (!assembly.regions) {\n      throw new Error(`assembly ${assemblyName} regions not loaded`)\n    }\n    const { getCanonicalRefName } = assembly\n    const featureRefName = getCanonicalRefName(feature.get('refName'))\n    const topRegion = assembly.regions.find(f => f.refName === featureRefName)\n\n    let mateRefName: string | undefined\n    let startMod = 0\n    let endMod = 0\n\n    // a VCF breakend feature\n    if (alt === '<TRA>') {\n      const INFO = feature.get('INFO')\n      endPos = INFO.END[0] - 1\n      mateRefName = getCanonicalRefName(INFO.CHR2[0])\n    } else if (bnd?.MatePosition) {\n      const matePosition = bnd.MatePosition.split(':')\n      endPos = +matePosition[1] - 1\n      mateRefName = getCanonicalRefName(matePosition[0])\n      if (bnd.Join === 'left') {\n        startMod = -1\n      }\n      if (bnd.MateDirection === 'left') {\n        endMod = -1\n      }\n    } else if (feature.get('mate')) {\n      // a generic 'mate' feature\n      const mate = feature.get('mate')\n      mateRefName = getCanonicalRefName(mate.refName)\n      endPos = mate.start\n    }\n\n    if (!mateRefName) {\n      throw new Error(\n        `unable to resolve mate refName ${mateRefName} in reference genome`,\n      )\n    }\n\n    const bottomRegion = assembly.regions.find(f => f.refName === mateRefName)\n\n    if (!topRegion || !bottomRegion) {\n      throw new Error(\n        `unable to find the refName for the top or bottom of the breakpoint view`,\n      )\n    }\n\n    const topMarkedRegion = [{ ...topRegion }, { ...topRegion }]\n    const bottomMarkedRegion = [{ ...bottomRegion }, { ...bottomRegion }]\n    topMarkedRegion[0].end = startPos + startMod\n    topMarkedRegion[1].start = startPos + startMod\n    bottomMarkedRegion[0].end = endPos + endMod\n    bottomMarkedRegion[1].start = endPos + endMod\n    return {\n      type: 'BreakpointSplitView',\n      views: [\n        {\n          type: 'LinearGenomeView',\n          displayedRegions: topMarkedRegion,\n          hideHeader: true,\n          bpPerPx,\n          offsetPx: (topRegion.start + feature.get('start')) / bpPerPx,\n        },\n        {\n          type: 'LinearGenomeView',\n          displayedRegions: bottomMarkedRegion,\n          hideHeader: true,\n          bpPerPx,\n          offsetPx: (bottomRegion.start + endPos) / bpPerPx,\n        },\n      ],\n      displayName: `${\n        feature.get('name') || feature.get('id') || 'breakend'\n      } split detail`,\n    }\n  }\n}\n","import React, { lazy } from 'react'\nimport {\n  types,\n  getParent,\n  onAction,\n  addDisposer,\n  getPath,\n  Instance,\n} from 'mobx-state-tree'\nimport { autorun } from 'mobx'\nimport { saveAs } from 'file-saver'\n\n// jbrowse\nimport {\n  LinearGenomeViewModel,\n  LinearGenomeViewStateModel,\n} from '@jbrowse/plugin-linear-genome-view'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { BaseViewModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport { getSession, Feature, notEmpty } from '@jbrowse/core/util'\nimport { AnyConfigurationModel, getConf } from '@jbrowse/core/configuration'\n\n// icons\nimport PhotoCamera from '@mui/icons-material/PhotoCamera'\nimport LinkIcon from '@mui/icons-material/Link'\n\n// locals\nimport { intersect } from './util'\n\n// lazies\nconst ExportSvgDialog = lazy(() => import('./components/ExportSvgDialog'))\n\nfunction calc(\n  track: { displays: { searchFeatureByID: (str: string) => LayoutRecord }[] },\n  feat: Feature,\n) {\n  return track.displays[0].searchFeatureByID(feat.id())\n}\n\nexport interface ExportSvgOptions {\n  rasterizeLayers?: boolean\n  filename?: string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Wrapper?: React.FC<any>\n  fontSize?: number\n  rulerHeight?: number\n  textHeight?: number\n  paddingHeight?: number\n  headerHeight?: number\n  cytobandHeight?: number\n  trackLabels?: string\n  themeName?: string\n}\n\ntype LGV = LinearGenomeViewModel\n\nexport interface Breakend {\n  MateDirection: string\n  Join: string\n  Replacement: string\n  MatePosition: string\n}\n\nexport type LayoutRecord = [number, number, number, number]\n\nasync function getBlockFeatures(\n  model: BreakpointViewModel,\n  track: { configuration: AnyConfigurationModel },\n) {\n  const { views } = model\n  const { rpcManager, assemblyManager } = getSession(model)\n  const assemblyName = model.views[0].assemblyNames[0]\n  const assembly = await assemblyManager.waitForAssembly(assemblyName)\n  if (!assembly) {\n    return undefined // throw new Error(`assembly not found: \"${assemblyName}\"`)\n  }\n  const sessionId = track.configuration.trackId\n  return Promise.all(\n    views.map(async view =>\n      (\n        (await rpcManager.call(sessionId, 'CoreGetFeatures', {\n          adapterConfig: getConf(track, ['adapter']),\n          sessionId,\n          regions: view.staticBlocks.contentBlocks,\n        })) as Feature[][]\n      ).flat(),\n    ),\n  )\n}\n\nexport default function stateModelFactory(pluginManager: PluginManager) {\n  const minHeight = 40\n  const defaultHeight = 400\n  const model = types\n    .model('BreakpointSplitView', {\n      type: types.literal('BreakpointSplitView'),\n      height: types.optional(\n        types.refinement(\n          'viewHeight',\n          types.number,\n          (n: number) => n >= minHeight,\n        ),\n        defaultHeight,\n      ),\n      trackSelectorType: 'hierarchical',\n      showIntraviewLinks: true,\n      linkViews: false,\n      interactToggled: false,\n      views: types.array(\n        pluginManager.getViewType('LinearGenomeView')\n          .stateModel as LinearGenomeViewStateModel,\n      ),\n    })\n    .volatile(() => ({\n      width: 800,\n      matchedTrackFeatures: {} as { [key: string]: Feature[][] },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       * creates an svg export and save using FileSaver\n       */\n      async exportSvg(opts: ExportSvgOptions = {}) {\n        const { renderToSvg } = await import(\n          './svgcomponents/SVGBreakpointSplitView'\n        )\n        const html = await renderToSvg(self as BreakpointViewModel, opts)\n        const blob = new Blob([html], { type: 'image/svg+xml' })\n        saveAs(blob, opts.filename || 'image.svg')\n      },\n    }))\n    .views(self => ({\n      // Find all track ids that match across multiple views\n      get matchedTracks() {\n        return intersect(\n          elt => elt.configuration.trackId as string,\n          ...self.views.map(view => view.tracks),\n        )\n      },\n\n      // Get tracks with a given trackId across multiple views\n      getMatchedTracks(trackConfigId: string) {\n        return self.views\n          .map(view => view.getTrack(trackConfigId))\n          .filter(f => !!f)\n      },\n\n      // Translocation features are handled differently\n      // since they do not have a mate e.g. they are one sided\n      hasTranslocations(trackConfigId: string) {\n        return [...this.getTrackFeatures(trackConfigId).values()].find(\n          f => f.get('type') === 'translocation',\n        )\n      },\n\n      // Get a composite map of featureId->feature map for a track across\n      // multiple views\n      getTrackFeatures(trackConfigId: string) {\n        return new Map(\n          self.matchedTrackFeatures[trackConfigId]\n            ?.flat()\n            .map(f => [f.id(), f]),\n        )\n      },\n\n      getMatchedFeaturesInLayout(trackConfigId: string, features: Feature[][]) {\n        // use reverse to search the second track first\n        const tracks = this.getMatchedTracks(trackConfigId)\n\n        return features.map(c =>\n          c\n            .map(feature => {\n              const level = tracks.findIndex(track => calc(track, feature))\n              return level !== -1\n                ? {\n                    feature,\n                    layout: calc(tracks[level], feature),\n                    level,\n                  }\n                : undefined\n            })\n            .filter(notEmpty),\n        )\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        addDisposer(\n          self,\n          onAction(\n            self,\n            ({\n              name,\n              path,\n              args,\n            }: {\n              name: string\n              path?: string\n              args?: unknown[]\n            }) => {\n              if (self.linkViews) {\n                const actions = [\n                  'horizontalScroll',\n                  'zoomTo',\n                  'setScaleFactor',\n                  'showTrack',\n                  'toggleTrack',\n                  'hideTrack',\n                  'setTrackLabels',\n                  'toggleCenterLine',\n                ]\n                if (actions.includes(name) && path) {\n                  this.onSubviewAction(name, path, args)\n                }\n              }\n            },\n          ),\n        )\n      },\n\n      onSubviewAction(actionName: string, path: string, args?: unknown[]) {\n        self.views.forEach(view => {\n          const ret = getPath(view)\n          if (ret.lastIndexOf(path) !== ret.length - path.length) {\n            // @ts-ignore\n            view[actionName](args?.[0])\n          }\n        })\n      },\n\n      setWidth(newWidth: number) {\n        self.width = newWidth\n        self.views.forEach(v => v.setWidth(newWidth))\n      },\n\n      removeView(view: LGV) {\n        self.views.remove(view)\n      },\n\n      closeView() {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        getParent<any>(self, 2).removeView(self)\n      },\n\n      toggleInteract() {\n        self.interactToggled = !self.interactToggled\n      },\n      toggleIntraviewLinks() {\n        self.showIntraviewLinks = !self.showIntraviewLinks\n      },\n      toggleLinkViews() {\n        self.linkViews = !self.linkViews\n      },\n      setMatchedTrackFeatures(obj: { [key: string]: Feature[][] }) {\n        self.matchedTrackFeatures = obj\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(async () => {\n            try {\n              if (!self.views.every(view => view.initialized)) {\n                return\n              }\n              self.setMatchedTrackFeatures(\n                Object.fromEntries(\n                  await Promise.all(\n                    self.matchedTracks.map(async track => [\n                      track.configuration.trackId,\n                      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                      await getBlockFeatures(self as any, track),\n                    ]),\n                  ),\n                ),\n              )\n            } catch (e) {\n              console.error(e)\n              getSession(self).notify(`${e}`, 'error')\n            }\n          }),\n        )\n      },\n\n      menuItems() {\n        return [\n          ...self.views\n            .map((view, idx) => [idx, view.menuItems?.()] as const)\n            .filter(f => !!f[1])\n            .map(f => ({ label: `View ${f[0] + 1} Menu`, subMenu: f[1] })),\n\n          {\n            label: 'Show intra-view links',\n            type: 'checkbox',\n            checked: self.showIntraviewLinks,\n            onClick: () => self.toggleIntraviewLinks(),\n          },\n          {\n            label: 'Allow clicking alignment squiggles?',\n            type: 'checkbox',\n            checked: self.interactToggled,\n            onClick: () => self.toggleInteract(),\n          },\n\n          {\n            label: 'Link views',\n            type: 'checkbox',\n            icon: LinkIcon,\n            checked: self.linkViews,\n            onClick: () => {\n              self.toggleLinkViews()\n            },\n          },\n          {\n            label: 'Export SVG',\n            icon: PhotoCamera,\n            onClick: (): void => {\n              getSession(self).queueDialog(handleClose => [\n                ExportSvgDialog,\n                { model: self, handleClose },\n              ])\n            },\n          },\n        ]\n      },\n    }))\n\n  return types.compose(BaseViewModel, model)\n}\n\nexport type BreakpointViewStateModel = ReturnType<typeof stateModelFactory>\nexport type BreakpointViewModel = Instance<BreakpointViewStateModel>\n","import { lazy } from 'react'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\n// locals\nimport BreakpointSplitView from './BreakpointSplitView'\nimport stateModelFactory from './model'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addViewType(() => {\n    return new BreakpointSplitView({\n      name: 'BreakpointSplitView',\n      displayName: 'Breakpoint split view',\n      stateModel: stateModelFactory(pluginManager),\n      ReactComponent: lazy(() => import('./components/BreakpointSplitView')),\n    })\n  })\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport Plugin from '@jbrowse/core/Plugin'\nimport BreakpointAlignmentsWidgetF from './BreakpointAlignmentsFeatureDetail'\nimport BreakpointSplitViewF from './BreakpointSplitView'\n\nexport default class BreakpointSplitViewPlugin extends Plugin {\n  name = 'BreakpointSplitViewPlugin'\n\n  install(pluginManager: PluginManager) {\n    BreakpointSplitViewF(pluginManager)\n    BreakpointAlignmentsWidgetF(pluginManager)\n  }\n\n  configure() {}\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config PAFAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst PAFAdapter = ConfigurationSchema(\n  'PAFAdapter',\n  {\n    /**\n     * #slot\n     */\n    assemblyNames: {\n      type: 'stringArray',\n      defaultValue: [],\n      description:\n        'Array of assembly names to use for this file. The target assembly name is the first value in the array, query assembly name is the second',\n    },\n    /**\n     * #slot\n     */\n    targetAssembly: {\n      type: 'string',\n      defaultValue: '',\n      description: 'Alternative to assemblyNames: the target assembly name',\n    },\n    /**\n     * #slot\n     */\n    queryAssembly: {\n      type: 'string',\n      defaultValue: '',\n      description: 'Alternative to assemblyNames: the query assembly name',\n    },\n    /**\n     * #slot\n     */\n    pafLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/file.paf',\n        locationType: 'UriLocation',\n      },\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default PAFAdapter\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config MCScanAnchorsAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst MCScanAnchorsAdapter = ConfigurationSchema(\n  'MCScanAnchorsAdapter',\n  {\n    /**\n     * #slot\n     */\n    mcscanAnchorsLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/mcscan.anchors',\n        locationType: 'UriLocation',\n      },\n    },\n    /**\n     * #slot\n     */\n    bed1Location: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/file.bed',\n        locationType: 'UriLocation',\n      },\n    },\n    /**\n     * #slot\n     */\n    bed2Location: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/file.bed',\n        locationType: 'UriLocation',\n      },\n    },\n    /**\n     * #slot\n     */\n    assemblyNames: {\n      type: 'stringArray',\n      defaultValue: [],\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default MCScanAnchorsAdapter\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config MCScanSimpleAnchorsAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst MCScanSimpleAnchorsAdapter = ConfigurationSchema(\n  'MCScanSimpleAnchorsAdapter',\n  {\n    /**\n     * #slot\n     */\n    mcscanSimpleAnchorsLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/mcscan.anchors.simple',\n        locationType: 'UriLocation',\n      },\n    },\n    /**\n     * #slot\n     */\n    bed1Location: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/file.bed',\n        locationType: 'UriLocation',\n      },\n    },\n    /**\n     * #slot\n     */\n    bed2Location: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/file.bed',\n        locationType: 'UriLocation',\n      },\n    },\n\n    /**\n     * #slot\n     */\n    assemblyNames: {\n      type: 'stringArray',\n      defaultValue: [],\n    },\n  },\n  { explicitlyTyped: true },\n)\nexport default MCScanSimpleAnchorsAdapter\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config MashMapAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst MashMapAdapter = ConfigurationSchema(\n  'MashMapAdapter',\n  {\n    /**\n     * #slot\n     */\n    assemblyNames: {\n      type: 'stringArray',\n      defaultValue: [],\n      description:\n        'Target is the first value in the array, query is the second',\n    },\n\n    /**\n     * #slot\n     */\n    targetAssembly: {\n      type: 'string',\n      defaultValue: '',\n      description: 'Alternative to assemblyNames array: the target assembly',\n    },\n    /**\n     * #slot\n     */\n    queryAssembly: {\n      type: 'string',\n      defaultValue: '',\n      description: 'Alternative to assemblyNames array: the query assembly',\n    },\n    /**\n     * #slot\n     */\n    outLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/mashmap.out',\n        locationType: 'UriLocation',\n      },\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default MashMapAdapter\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config DeltaAdapter\n * #category adapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst DeltaAdapter = ConfigurationSchema(\n  'DeltaAdapter',\n  {\n    /**\n     * #slot\n     */\n    assemblyNames: {\n      type: 'stringArray',\n      defaultValue: [],\n      description:\n        'Array of assembly names to use for this file. The target assembly name is the first value in the array, query assembly name is the second',\n    },\n    /**\n     * #slot\n     * alternative to assembly names\n     */\n    targetAssembly: {\n      type: 'string',\n      defaultValue: '',\n      description: 'Alternative to assemblyNames: the target assembly name',\n    },\n    /**\n     * #slot\n     * alternative to assembly names\n     */\n    queryAssembly: {\n      type: 'string',\n      defaultValue: '',\n      description: 'Alternative to assemblyNames: the query assembly name',\n    },\n    /**\n     * #slot\n     */\n    deltaLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/file.delta', locationType: 'UriLocation' },\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default DeltaAdapter\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config ChainAdapter\n * #category adapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst ChainAdapter = ConfigurationSchema(\n  'ChainAdapter',\n  {\n    /**\n     * #slot\n     */\n    assemblyNames: {\n      type: 'stringArray',\n      defaultValue: [],\n      description:\n        'Target is the first value in the array, query is the second',\n    },\n    /**\n     * #slot\n     * can be specified as alternative to assemblyNames\n     */\n    targetAssembly: {\n      type: 'string',\n      defaultValue: '',\n      description: 'Alternative to assemblyNames array: the target assembly',\n    },\n    /**\n     * #slot\n     * can be specified as alternative to assemblyNames\n     */\n    queryAssembly: {\n      type: 'string',\n      defaultValue: '',\n      description: 'Alternative to assemblyNames array: the query assembly',\n    },\n    /**\n     * #slot\n     */\n    chainLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/file.chain', locationType: 'UriLocation' },\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default ChainAdapter\n","import Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { FileLocation } from '@jbrowse/core/util/types'\n\nimport PAFAdapterF from './PAFAdapter'\nimport MCScanAnchorsAdapterF from './MCScanAnchorsAdapter'\nimport MCScanSimpleAnchorsAdapterF from './MCScanSimpleAnchorsAdapter'\nimport MashMapAdapterF from './MashMapAdapter'\nimport DeltaAdapterF from './DeltaAdapter'\nimport ChainAdapterF from './ChainAdapter'\n\nimport {\n  getFileName,\n  AdapterGuesser,\n  TrackTypeGuesser,\n} from '@jbrowse/core/util/tracks'\n\nexport default class ComparativeAdaptersPlugin extends Plugin {\n  name = 'ComparativeAdaptersPlugin'\n\n  install(pluginManager: PluginManager) {\n    PAFAdapterF(pluginManager)\n    DeltaAdapterF(pluginManager)\n    ChainAdapterF(pluginManager)\n    MCScanAnchorsAdapterF(pluginManager)\n    MCScanSimpleAnchorsAdapterF(pluginManager)\n    MashMapAdapterF(pluginManager)\n\n    pluginManager.addToExtensionPoint(\n      'Core-guessAdapterForLocation',\n      (adapterGuesser: AdapterGuesser) => {\n        return (\n          file: FileLocation,\n          index?: FileLocation,\n          adapterHint?: string,\n        ) => {\n          const regexGuess = /\\.paf/i\n          const adapterName = 'PAFAdapter'\n          const fileName = getFileName(file)\n          if (regexGuess.test(fileName) || adapterHint === adapterName) {\n            return {\n              type: adapterName,\n              pafLocation: file,\n            }\n          }\n          return adapterGuesser(file, index, adapterHint)\n        }\n      },\n    )\n    pluginManager.addToExtensionPoint(\n      'Core-guessTrackTypeForLocation',\n      (trackTypeGuesser: TrackTypeGuesser) => {\n        return (adapterName: string) => {\n          if (adapterName === 'PAFAdapter') {\n            return 'SyntenyTrack'\n          }\n          return trackTypeGuesser(adapterName)\n        }\n      },\n    )\n  }\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'PAFAdapter',\n        displayName: 'PAF adapter',\n        configSchema,\n        adapterMetadata: {\n          hiddenFromGUI: true,\n        },\n        getAdapterClass: () => import('./PAFAdapter').then(r => r.default),\n      }),\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'DeltaAdapter',\n        displayName: 'MUMmer delta adapter',\n        configSchema,\n        adapterMetadata: {\n          hiddenFromGUI: true,\n        },\n        getAdapterClass: () => import('./DeltaAdapter').then(r => r.default),\n      }),\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'ChainAdapter',\n        displayName: 'Liftover chain adapter',\n        configSchema,\n        adapterMetadata: {\n          hiddenFromGUI: true,\n        },\n        getAdapterClass: () => import('./ChainAdapter').then(r => r.default),\n      }),\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'MCScanAnchorsAdapter',\n        displayName: 'MCScan anchors adapter',\n        configSchema,\n        adapterMetadata: {\n          hiddenFromGUI: true,\n        },\n\n        getAdapterClass: () =>\n          import('./MCScanAnchorsAdapter').then(r => r.default),\n      }),\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'MCScanSimpleAnchorsAdapter',\n        displayName: 'MCScan anchors.simple adapter',\n        configSchema,\n        adapterMetadata: {\n          hiddenFromGUI: true,\n        },\n        getAdapterClass: () =>\n          import('./MCScanSimpleAnchorsAdapter').then(r => r.default),\n      }),\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'MashMapAdapter',\n        displayName: 'MashMap adapter',\n        configSchema,\n        adapterMetadata: {\n          hiddenFromGUI: true,\n        },\n        getAdapterClass: () => import('./MashMapAdapter').then(r => r.default),\n      }),\n  )\n}\n","import { getParent, Instance } from 'mobx-state-tree'\nimport { observable } from 'mobx'\nimport Base1DView from '@jbrowse/core/util/Base1DViewModel'\nimport calculateDynamicBlocks from '@jbrowse/core/util/calculateDynamicBlocks'\n\n/**\n * #stateModel Dotplot1DView\n * ref https://mobx-state-tree.js.org/concepts/volatiles on volatile state used here\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst Dotplot1DView = Base1DView.extend(self => {\n  const scaleFactor = observable.box(1)\n  return {\n    views: {\n      /**\n       * #getter\n       * this uses padding=false and elision=false\n       */\n      get dynamicBlocks() {\n        return calculateDynamicBlocks(self, false, false)\n      },\n      /**\n       * #getter\n       */\n\n      get scaleFactor() {\n        return scaleFactor.get()\n      },\n\n      /**\n       * #getter\n       */\n      get maxBpPerPx() {\n        return self.totalBp / (self.width - 50)\n      },\n\n      /**\n       * #getter\n       */\n      get minBpPerPx() {\n        return 1 / 50\n      },\n\n      /**\n       * #getter\n       */\n      get maxOffset() {\n        return self.displayedRegionsTotalPx - self.width * 0.2\n      },\n\n      /**\n       * #getter\n       */\n      get minOffset() {\n        return -self.width * 0.8\n      },\n    },\n    actions: {\n      /**\n       * #action\n       */\n      setScaleFactor(n: number) {\n        scaleFactor.set(n)\n      },\n\n      /**\n       * #action\n       */\n      center() {\n        const centerBp = self.totalBp / 2\n        const centerPx = centerBp / self.bpPerPx\n        self.scrollTo(centerPx - self.width / 2)\n      },\n    },\n  }\n})\n\nconst DotplotHView = Dotplot1DView.extend(self => ({\n  views: {\n    get width() {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return getParent<any>(self).viewWidth\n    },\n  },\n}))\n\nconst DotplotVView = Dotplot1DView.extend(self => ({\n  views: {\n    get width() {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return getParent<any>(self).viewHeight\n    },\n  },\n}))\n\nexport { DotplotVView, DotplotHView, Dotplot1DView }\nexport type Dotplot1DViewModel = Instance<typeof Dotplot1DView>\n","import React, { lazy } from 'react'\nimport {\n  addDisposer,\n  cast,\n  getParent,\n  getRoot,\n  getSnapshot,\n  resolveIdentifier,\n  types,\n  Instance,\n  SnapshotIn,\n} from 'mobx-state-tree'\nimport { saveAs } from 'file-saver'\nimport { autorun, transaction } from 'mobx'\n\nimport { getParentRenderProps } from '@jbrowse/core/util/tracks'\nimport { BaseTrackStateModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport BaseViewModel from '@jbrowse/core/pluggableElementTypes/models/BaseViewModel'\nimport { Base1DViewModel } from '@jbrowse/core/util/Base1DViewModel'\nimport {\n  getSession,\n  isSessionModelWithWidgets,\n  minmax,\n  measureText,\n  max,\n  localStorageGetItem,\n} from '@jbrowse/core/util'\nimport { getConf, AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\n\n// icons\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\nimport FolderOpenIcon from '@mui/icons-material/FolderOpen'\nimport PhotoCameraIcon from '@mui/icons-material/PhotoCamera'\n\n// locals\nimport { Dotplot1DView, DotplotHView, DotplotVView } from './1dview'\nimport { getBlockLabelKeysToHide, makeTicks } from './components/util'\n\n// lazies\nconst ExportSvgDialog = lazy(() => import('./components/ExportSvgDialog'))\nconst ReturnToImportFormDialog = lazy(\n  () => import('@jbrowse/core/ui/ReturnToImportFormDialog'),\n)\ntype Coord = [number, number]\n\nexport interface ExportSvgOptions {\n  rasterizeLayers?: boolean\n  filename?: string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Wrapper?: React.FC<any>\n  themeName?: string\n}\n\n/**\n * #stateModel DotplotView\n * #category view\n * extends  `BaseViewModel`\n */\nexport default function stateModelFactory(pm: PluginManager) {\n  return types\n    .compose(\n      BaseViewModel,\n      types.model('DotplotView', {\n        /**\n         * #property\n         */\n        id: ElementId,\n        /**\n         * #property\n         */\n        type: types.literal('DotplotView'),\n        /**\n         * #property\n         */\n        height: 600,\n        /**\n         * #property\n         */\n        borderSize: 20,\n        /**\n         * #property\n         */\n        tickSize: 5,\n        /**\n         * #property\n         */\n        vtextRotation: 0,\n        /**\n         * #property\n         */\n        htextRotation: -90,\n        /**\n         * #property\n         */\n        fontSize: 15,\n        /**\n         * #property\n         */\n        trackSelectorType: 'hierarchical',\n        /**\n         * #property\n         */\n        assemblyNames: types.array(types.string),\n        /**\n         * #property\n         */\n        drawCigar: true,\n        /**\n         * #property\n         */\n        hview: types.optional(DotplotHView, {}),\n        /**\n         * #property\n         */\n        vview: types.optional(DotplotVView, {}),\n\n        /**\n         * #property\n         */\n        tracks: types.array(\n          pm.pluggableMstType('track', 'stateModel') as BaseTrackStateModel,\n        ),\n\n        /**\n         * #property\n         * this represents tracks specific to this view specifically used\n         * for read vs ref dotplots where this track would not really apply\n         * elsewhere\n         */\n        viewTrackConfigs: types.array(pm.pluggableConfigSchemaType('track')),\n      }),\n    )\n    .volatile(() => ({\n      volatileWidth: undefined as number | undefined,\n      volatileError: undefined as unknown,\n\n      // these are 'personal preferences', stored in volatile and\n      // loaded/written to localStorage\n      cursorMode: localStorageGetItem('dotplot-cursorMode') || 'crosshair',\n      showPanButtons: Boolean(\n        JSON.parse(localStorageGetItem('dotplot-showPanbuttons') || 'true'),\n      ),\n      wheelMode: localStorageGetItem('dotplot-wheelMode') || 'zoom',\n      borderX: 100,\n      borderY: 100,\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get width(): number {\n        if (!self.volatileWidth) {\n          throw new Error('width not initialized')\n        }\n        return self.volatileWidth\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get assemblyErrors() {\n        const { assemblyManager } = getSession(self)\n        return self.assemblyNames\n          .map(a => assemblyManager.get(a)?.error)\n          .filter(f => !!f)\n          .join(', ')\n      },\n      /**\n       * #getter\n       */\n      get assembliesInitialized() {\n        const { assemblyManager } = getSession(self)\n        return self.assemblyNames.every(\n          n => assemblyManager.get(n)?.initialized ?? true,\n        )\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get initialized() {\n        return (\n          self.volatileWidth !== undefined &&\n          self.hview.displayedRegions.length > 0 &&\n          self.vview.displayedRegions.length > 0 &&\n          self.assembliesInitialized\n        )\n      },\n      /**\n       * #getter\n       */\n      get hticks() {\n        const { hview } = self\n        const { dynamicBlocks, staticBlocks, bpPerPx } = hview\n        return dynamicBlocks.contentBlocks.length > 5\n          ? []\n          : makeTicks(staticBlocks.contentBlocks, bpPerPx)\n      },\n      /**\n       * #getter\n       */\n      get vticks() {\n        const { vview } = self\n        const { dynamicBlocks, staticBlocks, bpPerPx } = vview\n        return dynamicBlocks.contentBlocks.length > 5\n          ? []\n          : makeTicks(staticBlocks.contentBlocks, bpPerPx)\n      },\n      /**\n       * #getter\n       */\n      get loading() {\n        return self.assemblyNames.length > 0 && !this.initialized\n      },\n      /**\n       * #getter\n       */\n      get viewWidth() {\n        return self.width - self.borderX\n      },\n      /**\n       * #getter\n       */\n      get viewHeight() {\n        return self.height - self.borderY\n      },\n      /**\n       * #getter\n       */\n      get views() {\n        return [self.hview, self.vview]\n      },\n\n      /**\n       * #method\n       */\n      renderProps() {\n        const session = getSession(self)\n        return {\n          ...getParentRenderProps(self),\n          drawCigar: self.drawCigar,\n          highResolutionScaling: getConf(session, 'highResolutionScaling'),\n        }\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setShowPanButtons(flag: boolean) {\n        self.showPanButtons = flag\n      },\n      /**\n       * #action\n       */\n      setWheelMode(str: string) {\n        self.wheelMode = str\n      },\n      /**\n       * #action\n       */\n      setCursorMode(str: string) {\n        self.cursorMode = str\n      },\n      /**\n       * #action\n       */\n      setDrawCigar(flag: boolean) {\n        self.drawCigar = flag\n      },\n      /**\n       * #action\n       * returns to the import form\n       */\n      clearView() {\n        self.hview.setDisplayedRegions([])\n        self.vview.setDisplayedRegions([])\n        self.assemblyNames = cast([])\n        self.tracks.clear()\n      },\n      /**\n       * #action\n       */\n      setBorderX(n: number) {\n        self.borderX = n\n      },\n      /**\n       * #action\n       */\n      setBorderY(n: number) {\n        self.borderY = n\n      },\n      /**\n       * #action\n       */\n      setWidth(newWidth: number) {\n        self.volatileWidth = newWidth\n        return self.volatileWidth\n      },\n      /**\n       * #action\n       */\n      setHeight(newHeight: number) {\n        self.height = newHeight\n        return self.height\n      },\n\n      /**\n       * #action\n       */\n      setError(e: unknown) {\n        self.volatileError = e\n      },\n\n      /**\n       * #action\n       * removes the view itself from the state tree entirely by calling the\n       * parent removeView\n       */\n      closeView() {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        getParent<any>(self, 2).removeView(self)\n      },\n\n      /**\n       * #action\n       */\n      zoomOutButton() {\n        self.hview.zoomOut()\n        self.vview.zoomOut()\n      },\n      /**\n       * #action\n       */\n      zoomInButton() {\n        self.hview.zoomIn()\n        self.vview.zoomIn()\n      },\n      /**\n       * #action\n       */\n      activateTrackSelector() {\n        if (self.trackSelectorType === 'hierarchical') {\n          const session = getSession(self)\n          if (isSessionModelWithWidgets(session)) {\n            const selector = session.addWidget(\n              'HierarchicalTrackSelectorWidget',\n              'hierarchicalTrackSelector',\n              { view: self },\n            )\n            session.showWidget(selector)\n            return selector\n          }\n        }\n        throw new Error(`invalid track selector type ${self.trackSelectorType}`)\n      },\n\n      /**\n       * #action\n       */\n      showTrack(trackId: string, initialSnapshot = {}) {\n        const schema = pm.pluggableConfigSchemaType('track')\n        const conf = resolveIdentifier(schema, getRoot(self), trackId)\n        const trackType = pm.getTrackType(conf.type)\n        if (!trackType) {\n          throw new Error(`unknown track type ${conf.type}`)\n        }\n        const viewType = pm.getViewType(self.type)\n        const displayConf = conf.displays.find((d: AnyConfigurationModel) =>\n          viewType.displayTypes.find(type => type.name === d.type),\n        )\n        if (!displayConf) {\n          throw new Error(\n            `could not find a compatible display for view type ${self.type}`,\n          )\n        }\n        const track = trackType.stateModel.create({\n          ...initialSnapshot,\n          type: conf.type,\n          configuration: conf,\n          displays: [{ type: displayConf.type, configuration: displayConf }],\n        })\n        self.tracks.push(track)\n      },\n\n      /**\n       * #action\n       */\n      hideTrack(trackId: string) {\n        const schema = pm.pluggableConfigSchemaType('track')\n        const conf = resolveIdentifier(schema, getRoot(self), trackId)\n        const t = self.tracks.filter(t => t.configuration === conf)\n        transaction(() => t.forEach(t => self.tracks.remove(t)))\n        return t.length\n      },\n      /**\n       * #action\n       */\n      toggleTrack(trackId: string) {\n        const hiddenCount = this.hideTrack(trackId)\n        if (!hiddenCount) {\n          this.showTrack(trackId)\n        }\n      },\n      /**\n       * #action\n       */\n      setAssemblyNames(target: string, query: string) {\n        self.assemblyNames = cast([target, query])\n      },\n      /**\n       * #action\n       */\n      setViews(arr: SnapshotIn<Base1DViewModel>[]) {\n        self.hview = cast(arr[0])\n        self.vview = cast(arr[1])\n      },\n\n      /**\n       * #action\n       */\n      getCoords(mousedown: Coord, mouseup: Coord) {\n        const [xmin, xmax] = minmax(mouseup[0], mousedown[0])\n        const [ymin, ymax] = minmax(mouseup[1], mousedown[1])\n        return Math.abs(xmax - xmin) > 3 && Math.abs(ymax - ymin) > 3\n          ? [\n              self.hview.pxToBp(xmin),\n              self.hview.pxToBp(xmax),\n              self.vview.pxToBp(self.viewHeight - ymin),\n              self.vview.pxToBp(self.viewHeight - ymax),\n            ]\n          : undefined\n      },\n\n      /**\n       * #action\n       * zooms into clicked and dragged region\n       */\n      zoomIn(mousedown: Coord, mouseup: Coord) {\n        const result = this.getCoords(mousedown, mouseup)\n        if (result) {\n          const [x1, x2, y1, y2] = result\n          self.hview.moveTo(x1, x2)\n          self.vview.moveTo(y2, y1)\n        }\n      },\n      /**\n       * #action\n       */\n      showAllRegions() {\n        self.hview.zoomTo(self.hview.maxBpPerPx)\n        self.vview.zoomTo(self.vview.maxBpPerPx)\n        self.vview.center()\n        self.hview.center()\n      },\n      /**\n       * #action\n       * creates a linear synteny view from the clicked and dragged region\n       */\n      onDotplotView(mousedown: Coord, mouseup: Coord) {\n        const result = this.getCoords(mousedown, mouseup)\n        if (result) {\n          const [x1, x2, y1, y2] = result\n          const session = getSession(self)\n\n          const d1 = Dotplot1DView.create({\n            ...getSnapshot(self.hview),\n            minimumBlockWidth: 0,\n            interRegionPaddingWidth: 0,\n          })\n          const d2 = Dotplot1DView.create({\n            ...getSnapshot(self.vview),\n            minimumBlockWidth: 0,\n            interRegionPaddingWidth: 0,\n          })\n          d1.setVolatileWidth(self.hview.width)\n          d2.setVolatileWidth(self.vview.width)\n          d1.moveTo(x1, x2)\n          d2.moveTo(y2, y1)\n          d1.zoomTo(d1.bpPerPx / (self.width / self.hview.width), 0)\n          d2.zoomTo(d2.bpPerPx / (self.width / self.vview.width), 0)\n\n          // add the specific evidence tracks to the LGVs in the split view\n          // note: scales the bpPerPx by scaling proportional of the dotplot\n          // width to the eventual lgv width\n          const tracks = self.tracks\n            .map(track =>\n              track.configuration.displays.find(\n                (display: { type: string }) =>\n                  display.type === 'LinearSyntenyDisplay',\n              ),\n            )\n            .filter(f => !!f)\n            .map(displayConf => {\n              const trackConf = getParent<AnyConfigurationModel>(displayConf, 2)\n              return {\n                type: trackConf.type,\n                configuration: trackConf,\n                displays: [\n                  { type: displayConf.type, configuration: displayConf },\n                ],\n              }\n            })\n\n          const { id: _unused1, ...rest1 } = getSnapshot(d1)\n          const { id: _unused2, ...rest2 } = getSnapshot(d2)\n          const viewSnapshot = {\n            type: 'LinearSyntenyView',\n            views: [\n              {\n                type: 'LinearGenomeView',\n                tracks: [],\n                hideHeader: true,\n                ...rest1,\n              },\n              {\n                type: 'LinearGenomeView',\n                tracks: [],\n                hideHeader: true,\n                ...rest2,\n              },\n            ],\n            tracks,\n          }\n\n          session.addView('LinearSyntenyView', viewSnapshot)\n        }\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       * creates an svg export and save using FileSaver\n       */\n      async exportSvg(opts: ExportSvgOptions = {}) {\n        const { renderToSvg } = await import('./svgcomponents/SVGDotplotView')\n        const html = await renderToSvg(self as DotplotViewModel, opts)\n        const blob = new Blob([html], { type: 'image/svg+xml' })\n        saveAs(blob, opts.filename || 'image.svg')\n      },\n      // if any of our assemblies are temporary assemblies\n      beforeDestroy() {\n        const session = getSession(self)\n        self.assemblyNames.forEach(asm => session.removeTemporaryAssembly(asm))\n      },\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(() => {\n            const s = (s: unknown) => JSON.stringify(s)\n            const { showPanButtons, wheelMode, cursorMode } = self\n            if (typeof localStorage !== 'undefined') {\n              localStorage.setItem('dotplot-showPanbuttons', s(showPanButtons))\n              localStorage.setItem('dotplot-cursorMode', cursorMode)\n              localStorage.setItem('dotplot-wheelMode', wheelMode)\n            }\n          }),\n        )\n        addDisposer(\n          self,\n          autorun(\n            () => {\n              const session = getSession(self)\n\n              // don't operate if width not set yet\n              if (\n                self.volatileWidth === undefined ||\n                !self.assembliesInitialized\n              ) {\n                return\n              }\n\n              // also don't operate if displayedRegions already set, this is a\n              // helper autorun to load regions from assembly\n              if (\n                self.hview.displayedRegions.length > 0 &&\n                self.vview.displayedRegions.length > 0\n              ) {\n                return\n              }\n\n              const views = [self.hview, self.vview]\n              transaction(() => {\n                self.assemblyNames.forEach((name, index) => {\n                  const assembly = session.assemblyManager.get(name)\n                  const view = views[index]\n                  view.setDisplayedRegions(assembly?.regions || [])\n                })\n                self.showAllRegions()\n              })\n            },\n            { delay: 1000 },\n          ),\n        )\n        addDisposer(\n          self,\n          autorun(function borderSetter() {\n            // make sure we have a width on the view before trying to load\n            if (self.volatileWidth === undefined) {\n              return\n            }\n            const { vview, hview, viewHeight, viewWidth } = self\n            const padding = 40\n            const vblocks = vview.dynamicBlocks.contentBlocks\n            const hblocks = hview.dynamicBlocks.contentBlocks\n            const hoffset = hview.offsetPx\n            const voffset = vview.offsetPx\n\n            const vhide = getBlockLabelKeysToHide(vblocks, viewHeight, voffset)\n            const hhide = getBlockLabelKeysToHide(hblocks, viewWidth, hoffset)\n\n            const len = (a: string) => measureText(a.slice(0, 30))\n            const by = max(\n              hblocks.filter(b => !hhide.has(b.key)).map(b => len(b.refName)),\n            )\n            const bx = max(\n              vblocks.filter(b => !vhide.has(b.key)).map(b => len(b.refName)),\n            )\n            // these are set via autorun to avoid dependency cycle\n            self.setBorderY(Math.max(by + padding, 50))\n            self.setBorderX(Math.max(bx + padding, 50))\n          }),\n        )\n      },\n      /**\n       * #action\n       */\n      squareView() {\n        const { hview, vview } = self\n        const avg = (hview.bpPerPx + vview.bpPerPx) / 2\n        const hpx = hview.pxToBp(hview.width / 2)\n        const vpx = vview.pxToBp(vview.width / 2)\n        hview.setBpPerPx(avg)\n        hview.centerAt(hpx.coord, hpx.refName, hpx.index)\n        vview.setBpPerPx(avg)\n        vview.centerAt(vpx.coord, vpx.refName, vpx.index)\n      },\n      /**\n       * #action\n       */\n      squareViewProportional() {\n        const { hview, vview } = self\n        const ratio = hview.width / vview.width\n        const avg = (hview.bpPerPx + vview.bpPerPx) / 2\n        const hpx = hview.pxToBp(hview.width / 2)\n        const vpx = vview.pxToBp(vview.width / 2)\n        hview.setBpPerPx(avg / ratio)\n        hview.centerAt(hpx.coord, hpx.refName, hpx.index)\n        vview.setBpPerPx(avg)\n        vview.centerAt(vpx.coord, vpx.refName, vpx.index)\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       */\n      menuItems() {\n        const session = getSession(self)\n        return [\n          {\n            label: 'Return to import form',\n            onClick: () => {\n              getSession(self).queueDialog(handleClose => [\n                ReturnToImportFormDialog,\n                { model: self, handleClose },\n              ])\n            },\n            icon: FolderOpenIcon,\n          },\n          {\n            label: 'Square view - same bp per pixel',\n            onClick: () => self.squareView(),\n          },\n          {\n            label: 'Rectangular view - same total bp',\n            onClick: () => self.squareView(),\n          },\n          {\n            label: 'Show all regions',\n            onClick: () => self.showAllRegions(),\n          },\n          {\n            label: 'Export SVG',\n            icon: PhotoCameraIcon,\n            onClick: () => {\n              getSession(self).queueDialog(handleClose => [\n                ExportSvgDialog,\n                { model: self, handleClose },\n              ])\n            },\n          },\n          ...(isSessionModelWithWidgets(session)\n            ? [\n                {\n                  label: 'Open track selector',\n                  onClick: self.activateTrackSelector,\n                  icon: TrackSelectorIcon,\n                },\n              ]\n            : []),\n        ]\n      },\n      /**\n       * #getter\n       */\n      get error() {\n        return self.volatileError || self.assemblyErrors\n      },\n    }))\n}\n\nexport type DotplotViewStateModel = ReturnType<typeof stateModelFactory>\nexport type DotplotViewModel = Instance<DotplotViewStateModel>\n\nexport { type Dotplot1DViewModel, Dotplot1DView } from './1dview'\n","import React, { useEffect, useState, CSSProperties } from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { Typography } from '@mui/material'\nimport { LoadingEllipses } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\n\nconst useStyles = makeStyles()(theme => {\n  const bg = theme.palette.action.disabledBackground\n  return {\n    loading: {\n      paddingLeft: '0.6em',\n      backgroundColor: theme.palette.background.default,\n      backgroundImage: `repeating-linear-gradient(45deg, transparent, transparent 5px, ${bg} 5px, ${bg} 10px)`,\n      textAlign: 'center',\n    },\n\n    blockMessage: {\n      backgroundColor: bg,\n      padding: '10px',\n    },\n    blockError: {\n      backgroundColor: bg,\n      padding: '10px',\n      color: 'red',\n    },\n  }\n})\n\nfunction LoadingMessage() {\n  // only show the loading message after 300ms to prevent excessive flickering\n  const [shown, setShown] = useState(false)\n  const { classes } = useStyles()\n  useEffect(() => {\n    const timeout = setTimeout(() => setShown(true), 300)\n    return () => clearTimeout(timeout)\n  }, [])\n\n  return shown ? (\n    <div className={classes.loading}>\n      <LoadingEllipses />\n    </div>\n  ) : null\n}\n\nfunction BlockMessage({ messageText }: { messageText: string }) {\n  const { classes } = useStyles()\n  return (\n    <div className={classes.blockMessage}>\n      <Typography>{`${messageText}`}</Typography>\n    </div>\n  )\n}\n\nfunction BlockError({ error }: { error: unknown }) {\n  const { classes } = useStyles()\n  return (\n    <div className={classes.blockError}>\n      <Typography>{`${error}`}</Typography>\n    </div>\n  )\n}\n\nexport default observer(function ({\n  model,\n  style,\n}: {\n  model: {\n    error?: unknown\n    message?: string\n    filled?: boolean\n    shouldDisplay?: boolean\n    reactElement?: React.ReactElement\n  }\n  style: CSSProperties\n}) {\n  if (model.error) {\n    return <BlockError error={model.error} data-testid=\"reload_button\" />\n  } else if (model.message) {\n    return <BlockMessage messageText={model.message} />\n  } else if (!model.filled) {\n    return <LoadingMessage />\n  } else if (model.shouldDisplay) {\n    return <div style={style}>{model.reactElement}</div>\n  }\n  return null\n})\n","import clone from 'clone'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks'\nimport { getSnapshot, IAnyStateTreeNode } from 'mobx-state-tree'\nimport { getContainingView, getSession } from '@jbrowse/core/util'\n\nimport { DotplotViewModel } from '../DotplotView/model'\n\nexport function renderBlockData(self: IAnyStateTreeNode) {\n  const { rpcManager } = getSession(self)\n  const { rendererType } = self\n  const { adapterConfig } = self\n  const parent = getContainingView(self) as DotplotViewModel\n\n  // Alternative to readConfObject(config) is below used because renderProps is\n  // something under our control.  Compare to serverSideRenderedBlock\n  readConfObject(self.configuration)\n  getSnapshot(parent)\n\n  if (parent.initialized) {\n    const { viewWidth, viewHeight, borderSize, borderX, borderY } = parent\n    return {\n      rendererType,\n      rpcManager,\n      renderProps: {\n        ...self.renderProps(),\n        view: clone(getSnapshot(parent)),\n        width: viewWidth,\n        height: viewHeight,\n        borderSize,\n        borderX,\n        borderY,\n        adapterConfig,\n        rendererType: rendererType.name,\n        sessionId: getRpcSessionId(self),\n        timeout: 1000000, // 10000,\n      },\n    }\n  }\n  return undefined\n}\n\nexport async function renderBlockEffect(\n  props?: ReturnType<typeof renderBlockData>,\n) {\n  if (!props) {\n    return\n  }\n\n  const { rendererType, rpcManager, renderProps } = props\n  const { reactElement, ...data } = await rendererType.renderInClient(\n    rpcManager,\n    renderProps,\n  )\n  return {\n    reactElement,\n    data,\n    renderingComponent: rendererType.ReactComponent,\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react'\nimport { ThemeOptions } from '@mui/material'\nimport { types, Instance } from 'mobx-state-tree'\nimport {\n  getConf,\n  ConfigurationReference,\n  AnyConfigurationSchemaType,\n} from '@jbrowse/core/configuration'\nimport { getParentRenderProps } from '@jbrowse/core/util/tracks'\nimport {\n  getContainingView,\n  makeAbortableReaction,\n  ReactRendering,\n} from '@jbrowse/core/util'\nimport { BaseDisplay } from '@jbrowse/core/pluggableElementTypes/models'\n\n// locals\nimport ServerSideRenderedBlockContent from '../ServerSideRenderedBlockContent'\nimport { renderBlockData, renderBlockEffect } from './renderDotplotBlock'\nimport { DotplotViewModel, ExportSvgOptions } from '../DotplotView/model'\n\n/**\n * #stateModel DotplotDisplay\n * #category display\n */\nexport function stateModelFactory(configSchema: AnyConfigurationSchemaType) {\n  return types\n    .compose(\n      'DotplotDisplay',\n      BaseDisplay,\n      types\n        .model({\n          /**\n           * #property\n           */\n          type: types.literal('DotplotDisplay'),\n          /**\n           * #property\n           */\n          configuration: ConfigurationReference(configSchema),\n        })\n        .volatile(() => ({\n          warnings: [] as { message: string; effect: string }[],\n          renderInProgress: undefined as AbortController | undefined,\n          filled: false,\n          data: undefined as any,\n          reactElement: undefined as React.ReactElement | undefined,\n          message: undefined as string | undefined,\n          renderingComponent: undefined as any,\n          ReactComponent2:\n            ServerSideRenderedBlockContent as unknown as React.FC<any>,\n        })),\n    )\n    .views(self => ({\n      get shouldDisplay() {\n        const view = getContainingView(self)\n        return (\n          view.vview.bpPerPx === self.data.bpPerPxY &&\n          view.hview.bpPerPx === self.data.bpPerPxX\n        )\n      },\n      /**\n       * #getter\n       */\n      get rendererTypeName() {\n        return getConf(self, ['renderer', 'type'])\n      },\n      /**\n       * #method\n       */\n      renderProps() {\n        return {\n          ...getParentRenderProps(self),\n          rpcDriverName: self.rpcDriverName,\n          displayModel: self,\n          config: self.configuration.renderer,\n        }\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       */\n      async renderSvg(opts: ExportSvgOptions & { theme: ThemeOptions }) {\n        const props = renderBlockData(self)\n        if (!props) {\n          return null\n        }\n\n        const { rendererType, rpcManager, renderProps } = props\n        const rendering = await rendererType.renderInClient(rpcManager, {\n          ...renderProps,\n          exportSVG: opts,\n          theme: opts.theme || renderProps.theme,\n        })\n        const { hview, vview } = getContainingView(self) as DotplotViewModel\n        const offX = -hview.offsetPx + rendering.offsetX\n        const offY = -vview.offsetPx + rendering.offsetY\n        return (\n          <g transform={`translate(${offX} ${-offY})`}>\n            <ReactRendering rendering={rendering} />\n          </g>\n        )\n      },\n    }))\n    .actions(self => {\n      let renderInProgress: undefined | AbortController\n\n      return {\n        afterAttach() {\n          makeAbortableReaction(\n            self,\n            () => renderBlockData(self),\n            blockData => renderBlockEffect(blockData),\n            {\n              name: `${self.type} ${self.id} rendering`,\n              delay: 500,\n              fireImmediately: true,\n            },\n            this.setLoading,\n            this.setRendered,\n            this.setError,\n          )\n        },\n        /**\n         * #action\n         */\n        setLoading(abortController: AbortController) {\n          self.filled = false\n          self.message = undefined\n          self.reactElement = undefined\n          self.data = undefined\n          self.error = undefined\n          self.renderingComponent = undefined\n          renderInProgress = abortController\n        },\n        /**\n         * #action\n         */\n        setMessage(messageText: string) {\n          if (renderInProgress && !renderInProgress.signal.aborted) {\n            renderInProgress.abort()\n          }\n          self.filled = false\n          self.message = messageText\n          self.reactElement = undefined\n          self.data = undefined\n          self.error = undefined\n          self.renderingComponent = undefined\n          renderInProgress = undefined\n        },\n        /**\n         * #action\n         */\n        setRendered(args?: {\n          data: any\n          reactElement: React.ReactElement\n          renderingComponent: React.Component\n        }) {\n          if (args === undefined) {\n            return\n          }\n          const { data, reactElement, renderingComponent } = args\n          self.warnings = data.warnings\n          self.filled = true\n          self.message = undefined\n          self.reactElement = reactElement\n          self.data = data\n          self.error = undefined\n          self.renderingComponent = renderingComponent\n          renderInProgress = undefined\n        },\n        /**\n         * #action\n         */\n        setError(error: unknown) {\n          console.error(error)\n          if (renderInProgress && !renderInProgress.signal.aborted) {\n            renderInProgress.abort()\n          }\n          // the rendering failed for some reason\n          self.filled = false\n          self.message = undefined\n          self.reactElement = undefined\n          self.data = undefined\n          self.error = error\n          self.renderingComponent = undefined\n          renderInProgress = undefined\n        },\n      }\n    })\n}\n\nexport type DotplotDisplayStateModel = ReturnType<typeof stateModelFactory>\nexport type DotplotDisplayModel = Instance<DotplotDisplayStateModel>\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { getContainingView } from '@jbrowse/core/util'\n\n// locals\nimport { DotplotDisplayModel } from '../stateModelFactory'\nimport { DotplotViewModel } from '../../DotplotView/model'\n\nfunction DotplotDisplay(props: {\n  model: DotplotDisplayModel\n  children?: React.ReactNode\n}) {\n  const { model, children } = props\n  const { offsetX = 0, offsetY = 0 } = model.data || {}\n  const view = getContainingView(model) as DotplotViewModel\n\n  const top = view.vview.offsetPx - offsetY\n  const left = -(view.hview.offsetPx - offsetX)\n  return (\n    <div style={{ position: 'relative' }}>\n      <model.ReactComponent2\n        {...props}\n        style={{\n          position: 'absolute',\n          top,\n          left,\n        }}\n      />\n      {children}\n    </div>\n  )\n}\n\nexport default observer(DotplotDisplay)\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\nimport DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\n// locals\nimport { stateModelFactory } from './stateModelFactory'\nimport ReactComponent from './components/DotplotDisplay'\n\nexport default (pm: PluginManager) => {\n  pm.addDisplayType(() => {\n    const configSchema = configSchemaFactory(pm)\n    return new DisplayType({\n      name: 'DotplotDisplay',\n      displayName: 'Dotplot display',\n      configSchema,\n      stateModel: stateModelFactory(configSchema),\n      trackType: 'SyntenyTrack',\n      viewType: 'DotplotView',\n      ReactComponent,\n    })\n  })\n}\n\n/**\n * #config DotplotDisplay\n */\nexport function configSchemaFactory(pm: any) {\n  return ConfigurationSchema(\n    'DotplotDisplay',\n    {\n      /**\n       * #slot\n       */\n      renderer: types.optional(pm.pluggableConfigSchemaType('renderer'), {\n        type: 'DotplotRenderer',\n      }),\n    },\n    {\n      /**\n       * #identifier\n       */\n      explicitIdentifier: 'displayId',\n      explicitlyTyped: true,\n    },\n  )\n}\n","import React from 'react'\nimport { PrerenderedCanvas } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\n\n// locals\nimport { DotplotRenderArgsDeserialized } from '../DotplotRenderer'\n\nfunction DotplotRendering(props: DotplotRenderArgsDeserialized) {\n  return <PrerenderedCanvas {...props} />\n}\n\nexport default observer(DotplotRendering)\n","import {\n  readConfObject,\n  AnyConfigurationModel,\n} from '@jbrowse/core/configuration'\nimport {\n  renameRegionsIfNeeded,\n  renderToAbstractCanvas,\n  Region,\n  Feature,\n} from '@jbrowse/core/util'\nimport { bpToPx } from '@jbrowse/core/util/Base1DUtils'\nimport { getSnapshot } from 'mobx-state-tree'\nimport ComparativeRenderer, {\n  RenderArgsDeserialized,\n  RenderArgs,\n} from '@jbrowse/core/pluggableElementTypes/renderers/ComparativeServerSideRendererType'\nimport { MismatchParser } from '@jbrowse/plugin-alignments'\n\n// locals\nimport { Dotplot1DView, Dotplot1DViewModel } from '../DotplotView/model'\nimport { createJBrowseTheme } from '@jbrowse/core/ui'\n\nconst { parseCigar } = MismatchParser\n\nexport interface DotplotRenderArgsDeserialized extends RenderArgsDeserialized {\n  height: number\n  width: number\n  highResolutionScaling: number\n  view: {\n    hview: Dotplot1DViewModel\n    vview: Dotplot1DViewModel\n  }\n}\n\ninterface DotplotRenderArgs extends RenderArgs {\n  adapterConfig: AnyConfigurationModel\n  sessionId: string\n  view: {\n    hview: { displayedRegions: Region[] }\n    vview: { displayedRegions: Region[] }\n  }\n}\n\nconst r = 'fell outside of range due to CIGAR string'\nconst lt = '(less than min coordinate of feature)'\nconst gt = '(greater than max coordinate of feature)'\nconst fudgeFactor = 1 // allow 1px fuzzyness before warn\n\nfunction drawCir(ctx: CanvasRenderingContext2D, x: number, y: number, r = 1) {\n  ctx.beginPath()\n  ctx.arc(x, y, r / 2, 0, 2 * Math.PI)\n  ctx.fill()\n}\n\nexport default class DotplotRenderer extends ComparativeRenderer {\n  supportsSVG = true\n\n  async renameRegionsIfNeeded(args: DotplotRenderArgs) {\n    const pm = this.pluginManager\n    const assemblyManager = pm.rootModel?.session?.assemblyManager\n\n    const { view, sessionId, adapterConfig } = args\n\n    async function process(regions?: Region[]) {\n      if (!assemblyManager) {\n        throw new Error('No assembly manager provided')\n      }\n      const result = await renameRegionsIfNeeded(assemblyManager, {\n        sessionId,\n        adapterConfig,\n        regions,\n      })\n      return result.regions\n    }\n\n    view.hview.displayedRegions = await process(view.hview.displayedRegions)\n    view.vview.displayedRegions = await process(view.vview.displayedRegions)\n\n    return args\n  }\n\n  async drawDotplot(\n    ctx: CanvasRenderingContext2D,\n    props: DotplotRenderArgsDeserialized & { views: Dotplot1DViewModel[] },\n  ) {\n    const { config, views, height, drawCigar, theme } = props\n    const color = readConfObject(config, 'color')\n    const posColor = readConfObject(config, 'posColor')\n    const negColor = readConfObject(config, 'negColor')\n    const colorBy = readConfObject(config, 'colorBy')\n    const lineWidth = readConfObject(config, 'lineWidth')\n    const thresholds = readConfObject(config, 'thresholds')\n    const palette = readConfObject(config, 'thresholdsPalette')\n    const isCallback = config.color.isCallback\n    const [hview, vview] = views\n    const db1 = hview.dynamicBlocks.contentBlocks[0]?.offsetPx\n    const db2 = vview.dynamicBlocks.contentBlocks[0]?.offsetPx\n    const warnings = [] as { message: string; effect: string }[]\n    ctx.lineWidth = lineWidth\n\n    // we operate on snapshots of these attributes of the hview/vview because\n    // it is significantly faster than accessing the mobx objects\n    const { bpPerPx: hBpPerPx } = hview\n    const { bpPerPx: vBpPerPx } = vview\n\n    function clampWithWarnX(\n      num: number,\n      min: number,\n      max: number,\n      feature: Feature,\n    ) {\n      const strand = feature.get('strand') || 1\n      if (strand === -1) {\n        ;[max, min] = [min, max]\n      }\n      if (num < min - fudgeFactor) {\n        let start = feature.get('start')\n        let end = feature.get('end')\n        const refName = feature.get('refName')\n        if (strand === -1) {\n          ;[end, start] = [start, end]\n        }\n\n        warnings.push({\n          message: `feature at (X ${refName}:${start}-${end}) ${r} ${lt}`,\n          effect: 'clipped the feature',\n        })\n        return min\n      }\n      if (num > max + fudgeFactor) {\n        const strand = feature.get('strand') || 1\n        const start = strand === 1 ? feature.get('start') : feature.get('end')\n        const end = strand === 1 ? feature.get('end') : feature.get('start')\n        const refName = feature.get('refName')\n\n        warnings.push({\n          message: `feature at (X ${refName}:${start}-${end}) ${r} ${gt}`,\n          effect: 'clipped the feature',\n        })\n        return max\n      }\n      return num\n    }\n\n    function clampWithWarnY(\n      num: number,\n      min: number,\n      max: number,\n      feature: Feature,\n    ) {\n      if (num < min - fudgeFactor) {\n        const mate = feature.get('mate')\n        const { refName, start, end } = mate\n        warnings.push({\n          message: `feature at (Y ${refName}:${start}-${end}) ${r} ${lt}`,\n          effect: 'clipped the feature',\n        })\n        return min\n      }\n      if (num > max + fudgeFactor) {\n        const mate = feature.get('mate')\n        const { refName, start, end } = mate\n\n        warnings.push({\n          message: `feature at (Y ${refName}:${start}-${end}) ${r} ${gt}`,\n          effect: 'clipped the feature',\n        })\n        return max\n      }\n      return num\n    }\n\n    const hsnap = {\n      ...getSnapshot(hview),\n      staticBlocks: hview.staticBlocks,\n      width: hview.width,\n    }\n    const vsnap = {\n      ...getSnapshot(vview),\n      staticBlocks: vview.staticBlocks,\n      width: vview.width,\n    }\n    const t = createJBrowseTheme(theme)\n    hview.features?.forEach(feature => {\n      const strand = feature.get('strand') || 1\n      const start = strand === 1 ? feature.get('start') : feature.get('end')\n      const end = strand === 1 ? feature.get('end') : feature.get('start')\n      const refName = feature.get('refName')\n      const mate = feature.get('mate')\n      const mateRef = mate.refName\n\n      let r\n      if (colorBy === 'identity') {\n        const identity = feature.get('identity')\n        for (let i = 0; i < thresholds.length; i++) {\n          if (identity > +thresholds[i]) {\n            r = palette[i]\n            break\n          }\n        }\n      } else if (colorBy === 'meanQueryIdentity') {\n        r = `hsl(${feature.get('meanScore') * 200},100%,40%)`\n      } else if (colorBy === 'mappingQuality') {\n        r = `hsl(${feature.get('mappingQual')},100%,40%)`\n      } else if (colorBy === 'strand') {\n        r = strand === -1 ? negColor : posColor\n      } else if (colorBy === 'default') {\n        r = isCallback\n          ? readConfObject(config, 'color', { feature })\n          : color === '#f0f'\n          ? t.palette.text.primary\n          : color\n      }\n      ctx.fillStyle = r\n      ctx.strokeStyle = r\n\n      const b10 = bpToPx({ self: hsnap, refName, coord: start })\n      const b20 = bpToPx({ self: hsnap, refName, coord: end })\n      const e10 = bpToPx({ self: vsnap, refName: mateRef, coord: mate.start })\n      const e20 = bpToPx({ self: vsnap, refName: mateRef, coord: mate.end })\n      if (\n        b10 !== undefined &&\n        b20 !== undefined &&\n        e10 !== undefined &&\n        e20 !== undefined\n      ) {\n        const b1 = b10.offsetPx - db1\n        const b2 = b20.offsetPx - db1\n        const e1 = e10.offsetPx - db2\n        const e2 = e20.offsetPx - db2\n        if (Math.abs(b1 - b2) <= 4 && Math.abs(e1 - e2) <= 4) {\n          drawCir(ctx, b1, height - e1, lineWidth)\n        } else {\n          let currX = b1\n          let currY = e1\n          const cigar = feature.get('CIGAR')\n          if (drawCigar && cigar) {\n            const cigarOps = parseCigar(cigar)\n\n            ctx.beginPath()\n            ctx.moveTo(currX, height - currY)\n\n            for (let i = 0; i < cigarOps.length; i += 2) {\n              const val = +cigarOps[i]\n              const op = cigarOps[i + 1]\n              if (op === 'M' || op === '=' || op === 'X') {\n                currX += (val / hBpPerPx) * strand\n                currY += val / vBpPerPx\n              } else if (op === 'D' || op === 'N') {\n                currX += (val / hBpPerPx) * strand\n              } else if (op === 'I') {\n                currY += val / vBpPerPx\n              }\n              currX = clampWithWarnX(currX, b1, b2, feature)\n              currY = clampWithWarnY(currY, e1, e2, feature)\n              ctx.lineTo(currX, height - currY)\n            }\n\n            ctx.stroke()\n          } else {\n            ctx.beginPath()\n            ctx.moveTo(b1, height - e1)\n            ctx.lineTo(b2, height - e2)\n            ctx.stroke()\n          }\n        }\n      } else {\n        if (warnings.length <= 5) {\n          if (b10 === undefined || b20 === undefined) {\n            warnings.push({\n              message: `feature at (X ${refName}:${start}-${end}) not plotted, fell outside of range`,\n              effect: 'feature not rendered',\n            })\n          } else {\n            warnings.push({\n              message: `feature at (Y ${mateRef}:${mate.start}-${mate.end}) not plotted, fell outside of range`,\n              effect: 'feature not rendered',\n            })\n          }\n        }\n      }\n    })\n\n    return { warnings }\n  }\n\n  async render(renderProps: DotplotRenderArgsDeserialized) {\n    const {\n      width,\n      height,\n      view: { hview, vview },\n    } = renderProps\n    const dimensions = [width, height]\n    const views = [hview, vview].map((snap, idx) => {\n      const view = Dotplot1DView.create(snap)\n      view.setVolatileWidth(dimensions[idx])\n      return view\n    })\n    const target = views[0]\n    const feats = await this.getFeatures({\n      ...renderProps,\n      regions: target.dynamicBlocks.contentBlocks,\n    })\n    target.setFeatures(feats)\n\n    const ret = await renderToAbstractCanvas(width, height, renderProps, ctx =>\n      this.drawDotplot(ctx, { ...renderProps, views }),\n    )\n\n    const results = await super.render({\n      ...renderProps,\n      ...ret,\n      height,\n      width,\n    })\n\n    return {\n      ...results,\n      ...ret,\n      height,\n      width,\n      offsetX: views[0].dynamicBlocks.blocks[0]?.offsetPx || 0,\n      offsetY: views[1].dynamicBlocks.blocks[0]?.offsetPx || 0,\n      bpPerPxX: views[0].bpPerPx,\n      bpPerPxY: views[1].bpPerPx,\n    }\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\n/**\n * #config DotplotRenderer\n * #category renderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport default ConfigurationSchema(\n  'DotplotRenderer',\n  {\n    /**\n     * #slot\n     */\n    color: {\n      type: 'color',\n      description:\n        'the color of each feature in a synteny, used with colorBy:default',\n      defaultValue: '#f0f',\n      contextVariable: ['feature'],\n    },\n\n    /**\n     * #slot\n     */\n    posColor: {\n      type: 'color',\n      description: 'the color for forward alignments, used with colorBy:strand',\n      defaultValue: 'blue',\n    },\n    /**\n     * #slot\n     */\n    negColor: {\n      type: 'color',\n      description: 'the color for reverse alignments, used with colorBy:strand',\n      defaultValue: 'red',\n    },\n\n    /**\n     * #slot\n     */\n    lineWidth: {\n      type: 'number',\n      description: 'width of the lines to be drawn',\n      defaultValue: 2.5, // 2.5 is similar to D-GENIES\n    },\n\n    /**\n     * #slot\n     */\n    colorBy: {\n      type: 'stringEnum',\n      model: types.enumeration('colorBy', [\n        'identity',\n        'meanQueryIdentity',\n        'mappingQuality',\n        'strand',\n        'default',\n      ]),\n      description: `Color by options:<br/>\n<ul>\n  <li>\"identity\" - the identity of the particular hit, similar to D-GENIES, use the other config slots 'thresholds' and 'thresholdsPalette' to define colors for this setting</li>\n  <li>\"meanQueryIdentity\" - calculates the weighted mean identity (weighted by alignment length) of all the hits that the query maps to (e.g. if the query is split aligned to many target, uses their weighted mean. can help show patterns of more related and distant synteny after WGD)</li>\n  <li>\"mappingQuality\" - uses mapping quality from PAF, some adapters don't have this setting</li>\n  <li>\"strand\" - colors negative alignments with negColor and positive alignments with posColor</li>\n  <li>\"default\" - uses the 'color' config slot</li>\n</ul>`,\n      defaultValue: 'default',\n    },\n\n    /**\n     * #slot\n     */\n    thresholdsPalette: {\n      type: 'stringArray',\n      defaultValue: ['#094b09', '#2ebd40', '#d5670b', '#ffd84b'],\n      description: 'threshold colors, used with colorBy:identity',\n    },\n\n    /**\n     * #slot\n     */\n    thresholds: {\n      type: 'stringArray',\n      defaultValue: ['0.75', '0.5', '0.25', '0'],\n      description: 'threshold breakpoints, used with colorBy:identity',\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { AbstractSessionModel } from '@jbrowse/core/util'\nimport { DotplotViewModel } from './DotplotView/model'\nimport { transaction } from 'mobx'\n\nexport default function LaunchDotplotView(pluginManager: PluginManager) {\n  pluginManager.addToExtensionPoint(\n    'LaunchView-DotplotView',\n    // @ts-expect-error\n    async ({\n      session,\n      views,\n      tracks = [],\n    }: {\n      session: AbstractSessionModel\n      views: { loc: string; assembly: string; tracks?: string[] }[]\n      tracks?: string[]\n    }) => {\n      try {\n        const model = session.addView('DotplotView', {}) as DotplotViewModel\n        const assemblyNames = views.map(view => view.assembly)\n\n        transaction(() => {\n          model.setViews([\n            { bpPerPx: 0.1, offsetPx: 0 },\n            { bpPerPx: 0.1, offsetPx: 0 },\n          ])\n          model.setAssemblyNames(assemblyNames[0], assemblyNames[1])\n        })\n\n        // http://localhost:3000/?config=test_data%2Fvolvox%2Fconfig.json&session=spec-{\"views\":[{\"type\":\"DotplotView\",\"views\":[{\"assembly\":\"volvox\"},{\"assembly\":\"volvox\"}],\"tracks\":[\"volvox_fake_synteny\"]}]}\n\n        const idsNotFound = [] as string[]\n        tracks.forEach(track => tryTrack(model, track, idsNotFound))\n\n        if (idsNotFound.length) {\n          throw new Error(\n            `Could not resolve identifiers: ${idsNotFound.join(',')}`,\n          )\n        }\n      } catch (e) {\n        session.notify(`${e}`, 'error')\n        throw e\n      }\n    },\n  )\n}\n\nfunction tryTrack(\n  model: { showTrack: (arg: string) => void },\n  trackId: string,\n  idsNotFound: string[],\n) {\n  try {\n    model.showTrack(trackId)\n  } catch (e) {\n    if (`${e}`.match('Could not resolve identifier')) {\n      idsNotFound.push(trackId)\n    } else {\n      throw e\n    }\n  }\n}\n","import { checkAbortSignal } from '@jbrowse/core/util'\nimport RpcMethodType from '@jbrowse/core/pluggableElementTypes/RpcMethodType'\nimport ComparativeRenderer, {\n  RenderArgs as ComparativeRenderArgs,\n  RenderArgsSerialized as ComparativeRenderArgsSerialized,\n  RenderResults,\n  ResultsSerialized,\n} from '@jbrowse/core/pluggableElementTypes/renderers/ComparativeServerSideRendererType'\nimport { RemoteAbortSignal } from '@jbrowse/core/rpc/remoteAbortSignals'\n\ninterface RenderArgs extends ComparativeRenderArgs {\n  adapterConfig: {}\n  rendererType: string\n}\n\ninterface RenderArgsSerialized extends ComparativeRenderArgsSerialized {\n  adapterConfig: {}\n  rendererType: string\n}\n\n/**\n * call a synteny renderer with the given args\n * param views: a set of views that each contain a set of regions\n * used instead of passing regions directly as in render()\n */\nexport default class ComparativeRender extends RpcMethodType {\n  name = 'ComparativeRender'\n\n  async renameRegionsIfNeeded(args: RenderArgs, rend: ComparativeRenderer) {\n    return rend.renameRegionsIfNeeded(args)\n  }\n\n  getRenderer(rendererType: string) {\n    const pm = this.pluginManager\n    return pm.getRendererType(rendererType) as ComparativeRenderer\n  }\n\n  async serializeArguments(args: RenderArgs, rpcDriver: string) {\n    const { rendererType } = args\n    const renderer = this.getRenderer(rendererType)\n    const n = (await super.serializeArguments(args, rpcDriver)) as RenderArgs\n    const result = await this.renameRegionsIfNeeded(n, renderer)\n\n    return rpcDriver === 'MainThreadRpcDriver'\n      ? result\n      : renderer.serializeArgsInClient(result)\n  }\n\n  async execute(\n    args: RenderArgsSerialized & { signal?: RemoteAbortSignal },\n    rpcDriver: string,\n  ) {\n    let deserializedArgs = args\n    if (rpcDriver !== 'MainThreadRpcDriver') {\n      deserializedArgs = await this.deserializeArguments(args, rpcDriver)\n    }\n    const { sessionId, rendererType, signal } = deserializedArgs\n    if (!sessionId) {\n      throw new Error('must pass a unique session id')\n    }\n\n    checkAbortSignal(signal)\n\n    const renderer = this.getRenderer(rendererType)\n    return rpcDriver === 'MainThreadRpcDriver'\n      ? renderer.render(deserializedArgs)\n      : renderer.renderInWorker(deserializedArgs)\n  }\n\n  async deserializeReturn(\n    val: RenderResults | ResultsSerialized,\n    args: RenderArgs,\n    rpcDriver: string,\n  ): Promise<unknown> {\n    const ret = (await super.deserializeReturn(\n      val,\n      args,\n      rpcDriver,\n    )) as ResultsSerialized\n    if (rpcDriver === 'MainThreadRpcDriver') {\n      return ret\n    }\n\n    const renderer = this.getRenderer(args.rendererType)\n    return renderer.deserializeResultsInClient(ret, args)\n  }\n}\n","import { getConf } from '@jbrowse/core/configuration'\nimport { getSession, Feature, gatherOverlaps } from '@jbrowse/core/util'\nimport {\n  LinearPileupDisplayModel,\n  MismatchParser,\n} from '@jbrowse/plugin-alignments'\n\n// locals\nimport { ReducedFeature } from '../util'\n\nconst { featurizeSA, getClip, getTag, getLength, getLengthSansClipping } =\n  MismatchParser\n\nexport function onClick(feature: Feature, self: LinearPileupDisplayModel) {\n  const session = getSession(self)\n  try {\n    const cigar = feature.get('CIGAR')\n    const clipPos = getClip(cigar, 1)\n    const flags = feature.get('flags')\n    const strand = feature.get('strand')\n    const readName = feature.get('name')\n    const readAssembly = `${readName}_assembly_${Date.now()}`\n    const { parentTrack } = self\n    const [trackAssembly] = getConf(parentTrack, 'assemblyNames')\n    const assemblyNames = [trackAssembly, readAssembly]\n    const trackId = `track-${Date.now()}`\n    const trackName = `${readName}_vs_${trackAssembly}`\n    const SA = (getTag(feature, 'SA') as string) || ''\n    const SA2 = featurizeSA(SA, feature.id(), strand, readName, true)\n\n    const feat = feature.toJSON()\n    feat.strand = 1\n    feat.mate = {\n      refName: readName,\n      start: clipPos,\n      end: clipPos + getLengthSansClipping(cigar),\n    }\n\n    // if secondary alignment or supplementary, calculate length from SA[0]'s\n    // CIGAR which is the primary alignments. otherwise it is the primary\n    // alignment just use seq.length if primary alignment\n    const totalLength = getLength(flags & 2048 ? SA2[0].CIGAR : cigar)\n\n    const features = [feat, ...SA2] as ReducedFeature[]\n\n    features.sort((a, b) => a.clipPos - b.clipPos)\n\n    const refLength = features.reduce((a, f) => a + f.end - f.start, 0)\n\n    session.addView('DotplotView', {\n      type: 'DotplotView',\n      hview: {\n        offsetPx: 0,\n        bpPerPx: refLength / 800,\n        displayedRegions: gatherOverlaps(\n          features.map((f, index) => {\n            const { start, end, refName } = f\n            return {\n              start,\n              end,\n              refName,\n              index,\n              assemblyName: trackAssembly,\n            }\n          }),\n        ),\n      },\n      vview: {\n        offsetPx: 0,\n        bpPerPx: totalLength / 400,\n        minimumBlockWidth: 0,\n        interRegionPaddingWidth: 0,\n        displayedRegions: [\n          {\n            assemblyName: readAssembly,\n            start: 0,\n            end: totalLength,\n            refName: readName,\n          },\n        ],\n      },\n\n      viewTrackConfigs: [\n        {\n          type: 'SyntenyTrack',\n          assemblyNames,\n          adapter: {\n            type: 'FromConfigAdapter',\n            features,\n          },\n          trackId,\n          name: trackName,\n        },\n      ],\n      assemblyNames,\n      tracks: [\n        {\n          configuration: trackId,\n          type: 'SyntenyTrack',\n          displays: [\n            {\n              type: 'DotplotDisplay',\n              configuration: `${trackId}-DotplotDisplay`,\n            },\n          ],\n        },\n      ],\n\n      displayName: `${readName} vs ${trackAssembly}`,\n    })\n  } catch (e) {\n    console.error(e)\n    session.notify(`${e}`, 'error')\n  }\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport {\n  PluggableElementType,\n  ViewType,\n} from '@jbrowse/core/pluggableElementTypes'\nimport { LinearPileupDisplayModel } from '@jbrowse/plugin-alignments'\n\n// icons\nimport AddIcon from '@mui/icons-material/Add'\n\n// local\nimport { onClick } from './DotplotReadVsRef'\n\nexport default function DotplotReadVsRefMenuItem(pluginManager: PluginManager) {\n  pluginManager.addToExtensionPoint(\n    'Core-extendPluggableElement',\n    (pluggableElement: PluggableElementType) => {\n      if (pluggableElement.name === 'LinearPileupDisplay') {\n        const { stateModel } = pluggableElement as ViewType\n        const newStateModel = stateModel.extend(\n          (self: LinearPileupDisplayModel) => {\n            const superContextMenuItems = self.contextMenuItems\n            return {\n              views: {\n                contextMenuItems() {\n                  const feature = self.contextMenuFeature\n                  return [\n                    ...superContextMenuItems(),\n                    ...(feature\n                      ? [\n                          {\n                            label: 'Dotplot of read vs ref',\n                            icon: AddIcon,\n                            onClick: () => onClick(feature, self),\n                          },\n                        ]\n                      : []),\n                  ]\n                },\n              },\n            }\n          },\n        )\n\n        ;(pluggableElement as ViewType).stateModel = newStateModel\n      }\n      return pluggableElement\n    },\n  )\n}\n","import Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { AbstractSessionModel, isAbstractMenuManager } from '@jbrowse/core/util'\n\n// icons\nimport TimelineIcon from '@mui/icons-material/Timeline'\n\n// locals\nimport DotplotViewF from './DotplotView'\nimport DotplotDisplayF from './DotplotDisplay'\nimport DotplotRendererF from './DotplotRenderer'\nimport LaunchDotplotViewF from './LaunchDotplotView'\nimport ComparativeRenderer from './ComparativeRenderer'\nimport DotplotReadVsRefMenuItem from './DotplotReadVsRef'\n\nexport default class DotplotPlugin extends Plugin {\n  name = 'DotplotPlugin'\n\n  install(pluginManager: PluginManager) {\n    DotplotViewF(pluginManager)\n    DotplotDisplayF(pluginManager)\n    DotplotRendererF(pluginManager)\n    LaunchDotplotViewF(pluginManager)\n    DotplotReadVsRefMenuItem(pluginManager)\n\n    // install our comparative rendering rpc callback\n    pluginManager.addRpcMethod(() => new ComparativeRenderer(pluginManager))\n  }\n\n  configure(pluginManager: PluginManager) {\n    if (isAbstractMenuManager(pluginManager.rootModel)) {\n      pluginManager.rootModel.appendToSubMenu(['Add'], {\n        label: 'Dotplot view',\n        icon: TimelineIcon,\n        onClick: (session: AbstractSessionModel) => {\n          session.addView('DotplotView', {})\n        },\n      })\n    }\n  }\n}\n","import { lazy } from 'react'\nimport ViewType from '@jbrowse/core/pluggableElementTypes/ViewType'\nimport PluginManager from '@jbrowse/core/PluginManager'\n// locals\nimport stateModelFactory from './model'\n\nexport default function (pluginManager: PluginManager) {\n  pluginManager.addViewType(() => {\n    return new ViewType({\n      name: 'DotplotView',\n      displayName: 'Dotplot view',\n      stateModel: stateModelFactory(pluginManager),\n      ReactComponent: lazy(() => import('./components/DotplotView')),\n    })\n  })\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport ReactComponent from './components/DotplotRendering'\nimport DotplotRenderer from './DotplotRenderer'\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addRendererType(\n    () =>\n      new DotplotRenderer({\n        name: 'DotplotRenderer',\n        configSchema: configSchema,\n        ReactComponent,\n        pluginManager,\n      }),\n  )\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config GtfAdapter\n * #category adapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst GtfAdapter = ConfigurationSchema(\n  'GtfAdapter',\n  {\n    /**\n     * #slot\n     */\n    gtfLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/my.gtf', locationType: 'UriLocation' },\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default GtfAdapter\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport Plugin from '@jbrowse/core/Plugin'\nimport { configSchema as gtfAdapterConfigSchema } from './GtfAdapter'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport { AdapterGuesser, getFileName } from '@jbrowse/core/util/tracks'\n\nexport default class GtfPlugin extends Plugin {\n  name = 'GTFPlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'GtfAdapter',\n          displayName: 'GTF adapter',\n          configSchema: gtfAdapterConfigSchema,\n          getAdapterClass: () =>\n            import('./GtfAdapter/GtfAdapter').then(r => r.default),\n        }),\n    )\n    pluginManager.addToExtensionPoint(\n      'Core-guessAdapterForLocation',\n      (adapterGuesser: AdapterGuesser) => {\n        return (\n          file: FileLocation,\n          index?: FileLocation,\n          adapterHint?: string,\n        ) => {\n          const regexGuess = /\\.gtf(\\.gz)?$/i\n          const adapterName = 'GtfAdapter'\n          const fileName = getFileName(file)\n\n          const obj = {\n            type: adapterName,\n            gtfLocation: file,\n          }\n          if (regexGuess.test(fileName) && !adapterHint) {\n            return obj\n          } else if (adapterHint === adapterName) {\n            return obj\n          }\n          return adapterGuesser(file, index, adapterHint)\n        }\n      },\n    )\n  }\n}\n","import { types } from 'mobx-state-tree'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config Gff3TabixAdapter\n * #category adapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst Gff3TabixAdapter = ConfigurationSchema(\n  'Gff3TabixAdapter',\n  {\n    /**\n     * #slot\n     */\n    gffGzLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/my.gff.gz', locationType: 'UriLocation' },\n    },\n\n    index: ConfigurationSchema('Gff3TabixIndex', {\n      /**\n       * #slot index.indexType\n       */\n      indexType: {\n        model: types.enumeration('IndexType', ['TBI', 'CSI']),\n        type: 'stringEnum',\n        defaultValue: 'TBI',\n      },\n      /**\n       * #slot index.indexType\n       */\n      location: {\n        type: 'fileLocation',\n        defaultValue: {\n          uri: '/path/to/my.gff.gz.tbi',\n          locationType: 'UriLocation',\n        },\n      },\n    }),\n    /**\n     * #slot\n     * the Gff3TabixAdapter has to \"redispatch\" if it fetches a region and\n     * features it finds inside that region extend outside the region we requested.\n     * you can disable this for certain feature types to avoid fetching e.g. the\n     * entire chromosome\n     */\n    dontRedispatch: {\n      type: 'stringArray',\n      defaultValue: ['chromosome', 'region'],\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default Gff3TabixAdapter\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config Gff3Adapter\n * #category adapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst Gff3Adapter = ConfigurationSchema(\n  'Gff3Adapter',\n  {\n    /**\n     * #slot\n     */\n    gffLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/my.gff', locationType: 'UriLocation' },\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default Gff3Adapter\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport Plugin from '@jbrowse/core/Plugin'\n\nimport Gff3TabixAdapterF from './Gff3TabixAdapter'\nimport Gff3AdapterF from './Gff3Adapter'\nimport GuessGff3F from './GuessGff3'\n\nexport default class extends Plugin {\n  name = 'GFF3Plugin'\n\n  install(pluginManager: PluginManager) {\n    Gff3TabixAdapterF(pluginManager)\n    Gff3AdapterF(pluginManager)\n    GuessGff3F(pluginManager)\n  }\n}\n","import { AdapterType } from '@jbrowse/core/pluggableElementTypes'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'Gff3TabixAdapter',\n        displayName: 'GFF3 tabix adapter',\n        configSchema,\n        getAdapterClass: () =>\n          import('./Gff3TabixAdapter').then(r => r.default),\n      }),\n  )\n}\n","import { AdapterType } from '@jbrowse/core/pluggableElementTypes'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'Gff3Adapter',\n        displayName: 'GFF3 adapter',\n        configSchema,\n        getAdapterClass: () => import('./Gff3Adapter').then(r => r.default),\n      }),\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport {\n  makeIndex,\n  makeIndexType,\n  getFileName,\n  AdapterGuesser,\n} from '@jbrowse/core/util/tracks'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addToExtensionPoint(\n    'Core-guessAdapterForLocation',\n    (adapterGuesser: AdapterGuesser) => {\n      return (\n        file: FileLocation,\n        index?: FileLocation,\n        adapterHint?: string,\n      ) => {\n        const regexGuess = /\\.gff3?\\.b?gz$/i\n        const adapterName = 'Gff3TabixAdapter'\n        const fileName = getFileName(file)\n        const indexName = index && getFileName(index)\n        if (regexGuess.test(fileName) || adapterHint === adapterName) {\n          return {\n            type: adapterName,\n            bamLocation: file,\n            gffGzLocation: file,\n            index: {\n              location: index || makeIndex(file, '.tbi'),\n              indexType: makeIndexType(indexName, 'CSI', 'TBI'),\n            },\n          }\n        }\n        return adapterGuesser(file, index, adapterHint)\n      }\n    },\n  )\n\n  pluginManager.addToExtensionPoint(\n    'Core-guessAdapterForLocation',\n    (adapterGuesser: AdapterGuesser) => {\n      return (\n        file: FileLocation,\n        index?: FileLocation,\n        adapterHint?: string,\n      ) => {\n        const regexGuess = /\\.gff3?$/i\n        const adapterName = 'Gff3Adapter'\n        const fileName = getFileName(file)\n        const obj = {\n          type: adapterName,\n          gffLocation: file,\n        }\n        if (regexGuess.test(fileName) && !adapterHint) {\n          return obj\n        } else if (adapterHint === adapterName) {\n          return obj\n        }\n        return adapterGuesser(file, index, adapterHint)\n      }\n    },\n  )\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config NCListAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst NCListAdapter = ConfigurationSchema(\n  'NCListAdapter',\n  {\n    /**\n     * #slot\n     */\n    rootUrlTemplate: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/my/{refseq}/trackData.json',\n        locationType: 'UriLocation',\n      },\n    },\n    /**\n     * #slot\n     */\n    refNames: {\n      type: 'stringArray',\n      defaultValue: [],\n      description: 'List of refNames used by the NCList used for aliasing',\n    },\n  },\n  { explicitlyTyped: true },\n)\nexport default NCListAdapter\n","/**\n * Helper class allows reading names index generated in JBrowse1\n * Adapted from https://github.com/GMOD/jbrowse/blob/master/src/JBrowse/Store/Hash.js\n */\nimport crc32 from 'buffer-crc32'\n\nexport default class HttpMap {\n  url: string\n\n  constructor(args: { url: string }) {\n    // make sure url has a trailing slash\n    this.url = /\\/$/.test(args.url) ? args.url : `${args.url}/`\n  }\n\n  /**\n   * loads meta.json file from names directory and reads number of hash_bits used\n   */\n  async readMeta() {\n    const meta = await this.loadFile('meta.json')\n    const { compress, track_names: tracks } = meta\n    const hashHexCharacters = Math.ceil(meta.hash_bits / 4)\n    return { hashHexCharacters, compress, tracks }\n  }\n\n  async getHashHexCharacters() {\n    const meta = await this.readMeta()\n    return meta.hashHexCharacters\n  }\n\n  async getCompress() {\n    const meta = await this.readMeta()\n    return meta.compress\n  }\n\n  async getTrackNames() {\n    const meta = await this.readMeta()\n    return meta.tracks\n  }\n\n  /**\n   * Returns contents of a bucket given a key\n   * @param key - string\n   */\n  async get(key: string) {\n    const bucket = await this.getBucket(key)\n    return bucket[key]\n  }\n\n  /**\n   * Returns a bucket given a key\n   * @param key - string\n   */\n  async getBucket(key: string) {\n    const bucketIdent = this.hash(key)\n    const hexToDirPath = await this.hexToDirPath(bucketIdent)\n    return this.loadFile(hexToDirPath)\n  }\n\n  /**\n   * Loads a file using the url and provided id.\n   * Returns response object with contents of the file\n   * @param id - string\n   */\n  async loadFile(id: string) {\n    const response = await fetch(`${this.url}${id}`)\n    if (!response.ok) {\n      throw new Error(`HTTP ${response.status} ${response.statusText}`)\n    }\n    return response.json()\n  }\n\n  /**\n   * Returns the corresponding path of the file given a hex string\n   * @param hex - hex string\n   */\n  async hexToDirPath(hex: string) {\n    // zero-pad the hex string to be 8 chars if necessary\n    const hashHexCharacters = await this.getHashHexCharacters()\n    if (hashHexCharacters) {\n      const compress = await this.getCompress()\n      while (hex.length < 8) {\n        hex = `0${hex}`\n      }\n      hex = hex.slice(8 - hashHexCharacters)\n      const dirpath = []\n      for (let i = 0; i < hex.length; i += 3) {\n        dirpath.push(hex.slice(i, i + 3))\n      }\n      return `${dirpath.join('/')}.json${compress ? 'z' : ''}`\n    }\n    return ''\n  }\n\n  hash(data: string) {\n    return crc32(Buffer.from(data))\n      .toString('hex')\n      .toLowerCase()\n      .replace('-', 'n')\n  }\n}\n","import {\n  BaseTextSearchAdapter,\n  BaseTextSearchArgs,\n  BaseAdapter,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport BaseResult from '@jbrowse/core/TextSearch/BaseResults'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport HttpMap from './HttpMap'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { getSubAdapterType } from '@jbrowse/core/data_adapters/dataAdapterCache'\n\nexport interface TooManyHits {\n  name: string\n  hitLimit: number\n}\n\ninterface SearchResults {\n  prefix: ({ name: string } | string)[]\n  exact: [string, number, string, string, number, number][]\n}\n\nexport type NamesIndexRecord = string | Array<string | number>\n\ntype IndexFile = Record<string, SearchResults>\n\n// Uses index built by generate-names.pl\nexport default class JBrowse1TextSearchAdapter\n  extends BaseAdapter\n  implements BaseTextSearchAdapter\n{\n  httpMap: HttpMap\n\n  tracksNames?: string[]\n\n  constructor(\n    config: AnyConfigurationModel,\n    getSubAdapter?: getSubAdapterType,\n    pluginManager?: PluginManager,\n  ) {\n    super(config, getSubAdapter, pluginManager)\n    const namesIndex = readConfObject(config, 'namesIndexLocation')\n    const { baseUri, uri } = namesIndex\n    this.httpMap = new HttpMap({\n      url: baseUri ? new URL(uri, baseUri).href : uri,\n    })\n  }\n\n  /**\n   * Returns the contents of the file containing the query if it exists\n   * else it returns empty\n   * @param query - string query\n   */\n  async loadIndexFile(query: string): Promise<IndexFile> {\n    return this.httpMap.getBucket(query)\n  }\n\n  async searchIndex(args: BaseTextSearchArgs) {\n    const { searchType, queryString } = args\n    const tracks = this.tracksNames || (await this.httpMap.getTrackNames())\n    const str = queryString.toLowerCase()\n    const entries = await this.loadIndexFile(str)\n    return entries[str]\n      ? this.formatResults(entries[str], tracks, searchType)\n      : []\n  }\n  formatResults(results: SearchResults, tracks: string[], searchType?: string) {\n    return [\n      ...(searchType === 'exact'\n        ? []\n        : results.prefix.map(\n            result =>\n              new BaseResult({\n                label: typeof result === 'object' ? result.name : result,\n                matchedAttribute: 'name',\n                matchedObject: { result: result },\n              }),\n          )),\n      ...results.exact.map(result => {\n        const name = result[0]\n        const trackIndex = result[1]\n        const refName = result[3]\n        const start = result[4]\n        const end = result[5]\n        const locstring = `${refName || name}:${start}-${end}`\n        return new BaseResult({\n          locString: locstring,\n          label: name,\n          matchedAttribute: 'name',\n          matchedObject: result,\n          trackId: tracks[trackIndex],\n        })\n      }),\n    ].filter(result => result.getLabel() !== 'too many matches')\n  }\n\n  freeResources() {}\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config JBrowse1TextSearchAdapter\n * note: metadata about tracks and assemblies covered by text search adapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport default ConfigurationSchema(\n  'JBrowse1TextSearchAdapter',\n  {\n    /**\n     * #slot\n     */\n    namesIndexLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/volvox/names', locationType: 'UriLocation' },\n      description: 'the location of the JBrowse1 names index data directory',\n    },\n    /**\n     * #slot\n     */\n    tracks: {\n      type: 'stringArray',\n      defaultValue: [],\n      description: 'List of tracks covered by text search adapter',\n    },\n    /**\n     * #slot\n     */\n    assemblyNames: {\n      type: 'stringArray',\n      defaultValue: [],\n      description: 'List of assemblies covered by text search adapter',\n    },\n  },\n  {\n    explicitlyTyped: true,\n    /**\n     * #identifier\n     */\n    explicitIdentifier: 'textSearchAdapterId',\n  },\n)\n","import { baseConnectionConfig } from '@jbrowse/core/pluggableElementTypes/models'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config JBrowse1Connection\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst JBrowse1Connection = ConfigurationSchema(\n  'JBrowse1Connection',\n  {\n    /**\n     * #slot\n     */\n    dataDirLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: 'http://mysite.com/jbrowse/data/',\n        locationType: 'UriLocation',\n      },\n      description:\n        'the location of the JBrowse 1 data directory, often something like http://mysite.com/jbrowse/data/',\n    },\n    /**\n     * #slot\n     */\n    assemblyNames: {\n      description:\n        'name of the assembly the connection belongs to, should be a single entry',\n      type: 'stringArray',\n      defaultValue: [],\n    },\n  },\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: baseConnectionConfig,\n  },\n)\n\nexport default JBrowse1Connection\n","import {\n  ConfigurationReference,\n  getConf,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { getSession } from '@jbrowse/core/util'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { BaseConnectionModelFactory } from '@jbrowse/core/pluggableElementTypes/models'\nimport { types } from 'mobx-state-tree'\n\n// locals\nimport configSchema from './configSchema'\n\nexport default function (pluginManager: PluginManager) {\n  return types\n    .compose(\n      'JBrowse1Connection',\n      BaseConnectionModelFactory(pluginManager),\n      types.model({\n        configuration: ConfigurationReference(configSchema),\n        type: types.literal('JBrowse1Connection'),\n      }),\n    )\n\n    .actions(self => ({\n      async connect() {\n        const session = getSession(self)\n        try {\n          const dataDirLocation = getConf(self, 'dataDirLocation')\n          const { fetchJb1 } = await import('./jb1ConfigLoad')\n          const { convertTrackConfig } = await import('./jb1ToJb2')\n          const config = await fetchJb1(dataDirLocation)\n          const assemblyName = getConf(self, 'assemblyNames')[0]\n          if (!assemblyName) {\n            throw new Error('assembly name required for JBrowse 1 connection')\n          }\n          const assemblyConf = session.assemblies.find(\n            a => readConfObject(a, 'name') === assemblyName,\n          )\n          if (!assemblyConf) {\n            throw new Error(`Assembly \"${assemblyName}\" not found`)\n          }\n          const sequenceAdapter = readConfObject(assemblyConf, [\n            'sequence',\n            'adapter',\n          ])\n\n          // @ts-expect-error\n          const jb2Tracks = config.tracks?.map(jb1Track => ({\n            ...convertTrackConfig(\n              jb1Track,\n              config.dataRoot || '',\n              sequenceAdapter,\n            ),\n            assemblyNames: [assemblyName],\n          }))\n\n          self.setTrackConfs(jb2Tracks)\n        } catch (error) {\n          console.error(error)\n          session.notify(\n            `There was a problem connecting to the JBrowse 1 data directory \"${self.name}\". Please make sure you have entered a valid location. The error that was thrown is: \"${error}\"`,\n            'error',\n          )\n          session.breakConnection(self.configuration)\n        }\n      },\n    }))\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport ConnectionType from '@jbrowse/core/pluggableElementTypes/ConnectionType'\n\n// locals\nimport modelFactory from './model'\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addConnectionType(\n    () =>\n      new ConnectionType({\n        name: 'JBrowse1Connection',\n        configSchema,\n        stateModel: modelFactory(pluginManager),\n        displayName: 'JBrowse 1 Data',\n        description: 'A JBrowse 1 data directory',\n        url: '//jbrowse.org/',\n      }),\n  )\n}\n","import Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport NCListAdapterF from './NCListAdapter'\nimport JBrowse1TextSearchAdapterF from './JBrowse1TextSearchAdapter'\nimport JBrowse1ConnectionF from './JBrowse1Connection'\nimport GuessNCListF from './GuessNCList'\n\nexport default class LegacyJBrowsePlugin extends Plugin {\n  name = 'LegacyJBrowsePlugin'\n\n  install(pluginManager: PluginManager) {\n    NCListAdapterF(pluginManager)\n    GuessNCListF(pluginManager)\n    JBrowse1TextSearchAdapterF(pluginManager)\n    JBrowse1ConnectionF(pluginManager)\n  }\n}\n","import { AdapterType } from '@jbrowse/core/pluggableElementTypes'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'NCListAdapter',\n        displayName: 'NCList adapter',\n        configSchema,\n        getAdapterClass: () => import('./NCListAdapter').then(r => r.default),\n      }),\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { AdapterGuesser, getFileName } from '@jbrowse/core/util/tracks'\nimport { FileLocation } from '@jbrowse/core/util/types'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addToExtensionPoint(\n    'Core-guessAdapterForLocation',\n    (adapterGuesser: AdapterGuesser) => {\n      return (\n        file: FileLocation,\n        index?: FileLocation,\n        adapterHint?: string,\n      ) => {\n        const regexGuess = /trackData.jsonz?$/i\n        const adapterName = 'NCListAdapter'\n        const fileName = getFileName(file)\n        if (regexGuess.test(fileName) || adapterHint === adapterName) {\n          return {\n            type: adapterName,\n            rootUrlTemplate: file,\n          }\n        }\n        return adapterGuesser(file, index, adapterHint)\n      }\n    },\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport TextSearchAdapterType from '@jbrowse/core/pluggableElementTypes/TextSearchAdapterType'\n\n// locals\nimport AdapterClass from './JBrowse1TextSearchAdapter'\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addTextSearchAdapterType(\n    () =>\n      new TextSearchAdapterType({\n        name: 'JBrowse1TextSearchAdapter',\n        configSchema,\n        AdapterClass,\n        description: 'A JBrowse 1 text search adapter',\n      }),\n  )\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config LinearComparativeDisplay\n */\nfunction configSchemaFactory(pluginManager: any) {\n  return ConfigurationSchema(\n    'LinearComparativeDisplay',\n    {},\n    {\n      explicitlyTyped: true,\n\n      /**\n       * #identifier\n       */\n      explicitIdentifier: 'displayId',\n    },\n  )\n}\n\nexport default configSchemaFactory\n","import {\n  readConfObject,\n  ConfigurationReference,\n  AnyConfigurationSchemaType,\n} from '@jbrowse/core/configuration'\nimport { types, getSnapshot, Instance } from 'mobx-state-tree'\nimport {\n  dedupe,\n  Feature,\n  getContainingView,\n  getSession,\n  makeAbortableReaction,\n} from '@jbrowse/core/util'\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks'\nimport { BaseDisplay } from '@jbrowse/core/pluggableElementTypes/models'\nimport { LinearComparativeViewModel } from '../LinearComparativeView/model'\n\n/**\n * #stateModel LinearComparativeDisplay\n */\nfunction stateModelFactory(configSchema: AnyConfigurationSchemaType) {\n  return types\n    .compose(\n      'LinearComparativeDisplay',\n      BaseDisplay,\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LinearComparativeDisplay'),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n        /**\n         * #property\n         */\n        height: 100,\n      }),\n    )\n    .volatile((/* self */) => ({\n      renderInProgress: undefined as AbortController | undefined,\n      features: undefined as Feature[] | undefined,\n      message: undefined as string | undefined,\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      renderProps() {\n        return {\n          rpcDriverName: self.rpcDriverName,\n          displayModel: self,\n          highResolutionScaling: 2,\n        }\n      },\n    }))\n    .actions(self => {\n      let renderInProgress: undefined | AbortController\n\n      return {\n        /**\n         * #action\n         * controlled by a reaction\n         */\n        setLoading(abortController: AbortController) {\n          self.message = undefined\n          self.error = undefined\n          renderInProgress = abortController\n        },\n\n        /**\n         * #action\n         * controlled by a reaction\n         */\n        setMessage(messageText: string) {\n          if (renderInProgress && !renderInProgress.signal.aborted) {\n            renderInProgress.abort()\n          }\n          self.message = messageText\n          self.error = undefined\n          renderInProgress = undefined\n        },\n\n        /**\n         * #action\n         * controlled by a reaction\n         */\n        setRendered(args?: { features: Feature[] }) {\n          if (!args) {\n            return\n          }\n          const { features } = args\n          const existingFeatures = self.features || []\n\n          const featIds = new Set(existingFeatures.map(f => f.id()) || [])\n          const newFeatIds = new Set(features?.map(f => f.id()) || [])\n\n          let foundNewFeatureNotInExistingMap = false\n          let foundExistingFeatureNotInNewMap = false\n          for (let i = 0; i < features.length; i++) {\n            if (!featIds.has(features[i].id())) {\n              foundNewFeatureNotInExistingMap = true\n              break\n            }\n          }\n          for (let i = 0; i < existingFeatures.length; i++) {\n            if (!newFeatIds.has(existingFeatures[i].id())) {\n              foundExistingFeatureNotInNewMap = true\n              break\n            }\n          }\n\n          self.message = undefined\n          self.error = undefined\n          renderInProgress = undefined\n\n          if (\n            foundNewFeatureNotInExistingMap ||\n            foundExistingFeatureNotInNewMap ||\n            !self.features\n          ) {\n            self.features = features\n          }\n        },\n\n        /**\n         * #action\n         * controlled by a reaction\n         */\n        setError(error: unknown) {\n          console.error(error)\n          if (renderInProgress && !renderInProgress.signal.aborted) {\n            renderInProgress.abort()\n          }\n          // the rendering failed for some reason\n          self.message = undefined\n          self.error = error\n          renderInProgress = undefined\n        },\n      }\n    })\n    .actions(self => ({\n      afterAttach() {\n        makeAbortableReaction(\n          // @ts-expect-error\n          self,\n          renderBlockData,\n          renderBlockEffect,\n          {\n            name: `${self.type} ${self.id} rendering`,\n            delay: 1000,\n            fireImmediately: true,\n          },\n          self.setLoading,\n          self.setRendered,\n          self.setError,\n        )\n      },\n    }))\n}\nfunction renderBlockData(self: LinearComparativeDisplay) {\n  const { rpcManager } = getSession(self)\n  const display = self\n\n  // Alternative to readConfObject(config) is below used because renderProps is\n  // something under our control.  Compare to serverSideRenderedBlock\n  readConfObject(self.configuration)\n\n  const { adapterConfig } = self\n  const parent = getContainingView(self) as LinearComparativeViewModel\n  const sessionId = getRpcSessionId(self)\n  getSnapshot(parent)\n\n  return parent.initialized\n    ? {\n        rpcManager,\n        renderProps: {\n          ...display.renderProps(),\n          view: parent,\n          adapterConfig,\n          sessionId,\n          timeout: 1000000,\n          self,\n        },\n      }\n    : undefined\n}\n\nasync function renderBlockEffect(props: ReturnType<typeof renderBlockData>) {\n  if (!props) {\n    return\n  }\n\n  const { rpcManager, renderProps } = props\n  const { adapterConfig } = renderProps\n  const view0 = renderProps.view.views[0]\n\n  const features = (await rpcManager.call('getFeats', 'CoreGetFeatures', {\n    regions: view0.staticBlocks.contentBlocks,\n    sessionId: 'getFeats',\n    adapterConfig,\n  })) as Feature[]\n\n  return {\n    features: dedupe(features, f => f.id()),\n  }\n}\n\nexport default stateModelFactory\nexport type LinearComparativeDisplayModel = ReturnType<typeof stateModelFactory>\nexport type LinearComparativeDisplay = Instance<LinearComparativeDisplayModel>\n","import { lazy } from 'react'\nimport {\n  addDisposer,\n  cast,\n  getParent,\n  getPath,\n  getRoot,\n  onAction,\n  resolveIdentifier,\n  types,\n  Instance,\n  SnapshotIn,\n} from 'mobx-state-tree'\nimport { autorun, transaction } from 'mobx'\n\n// jbrowse\nimport BaseViewModel from '@jbrowse/core/pluggableElementTypes/models/BaseViewModel'\nimport { MenuItem } from '@jbrowse/core/ui'\nimport { getSession, isSessionModelWithWidgets, avg } from '@jbrowse/core/util'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport {\n  LinearGenomeViewModel,\n  LinearGenomeViewStateModel,\n} from '@jbrowse/plugin-linear-genome-view'\n\n// icons\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\nimport FolderOpenIcon from '@mui/icons-material/FolderOpen'\n\n// lazies\nconst ReturnToImportFormDialog = lazy(\n  () => import('@jbrowse/core/ui/ReturnToImportFormDialog'),\n)\n\n/**\n * #stateModel LinearComparativeView\n */\nfunction stateModelFactory(pluginManager: PluginManager) {\n  return types\n    .compose(\n      'LinearComparativeView',\n      BaseViewModel,\n      types.model({\n        /**\n         * #property\n         */\n        id: ElementId,\n        /**\n         * #property\n         */\n        type: types.literal('LinearComparativeView'),\n        /**\n         * #property\n         */\n        trackSelectorType: 'hierarchical',\n        /**\n         * #property\n         */\n        showIntraviewLinks: true,\n        /**\n         * #property\n         */\n        linkViews: false,\n        /**\n         * #property\n         */\n        interactToggled: false,\n        /**\n         * #property\n         */\n        middleComparativeHeight: 100,\n        /**\n         * #property\n         */\n        tracks: types.array(\n          pluginManager.pluggableMstType('track', 'stateModel'),\n        ),\n        /**\n         * #property\n         * currently this is limited to an array of two\n         */\n        views: types.array(\n          pluginManager.getViewType('LinearGenomeView')\n            .stateModel as LinearGenomeViewStateModel,\n        ),\n\n        /**\n         * #property\n         * this represents tracks specific to this view specifically used\n         * for read vs ref dotplots where this track would not really apply\n         * elsewhere\n         */\n        viewTrackConfigs: types.array(\n          pluginManager.pluggableConfigSchemaType('track'),\n        ),\n      }),\n    )\n    .volatile(() => ({\n      width: undefined as number | undefined,\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get highResolutionScaling() {\n        return 2\n      },\n      /**\n       * #getter\n       */\n      get initialized() {\n        return (\n          self.width !== undefined &&\n          self.views.length > 0 &&\n          self.views.every(view => view.initialized)\n        )\n      },\n\n      /**\n       * #getter\n       */\n      get refNames() {\n        return self.views.map(v => [\n          ...new Set(v.staticBlocks.map(m => m.refName)),\n        ])\n      },\n\n      /**\n       * #getter\n       */\n      get assemblyNames() {\n        return [...new Set(self.views.flatMap(v => v.assemblyNames))]\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        addDisposer(\n          self,\n          onAction(self, param => {\n            if (self.linkViews) {\n              const { name, path, args } = param\n\n              // doesn't link showTrack/hideTrack, doesn't make sense in\n              // synteny views most time\n              const actions = ['horizontalScroll', 'zoomTo', 'setScaleFactor']\n              if (actions.includes(name) && path) {\n                this.onSubviewAction(name, path, args)\n              }\n            }\n          }),\n        )\n      },\n\n      // automatically removes session assemblies associated with this view\n      // e.g. read vs ref\n      beforeDestroy() {\n        const session = getSession(self)\n        self.assemblyNames.forEach(asm => session.removeTemporaryAssembly(asm))\n      },\n\n      onSubviewAction(actionName: string, path: string, args?: unknown[]) {\n        self.views.forEach(view => {\n          const ret = getPath(view)\n          if (ret.lastIndexOf(path) !== ret.length - path.length) {\n            // @ts-expect-error\n            view[actionName](args?.[0])\n          }\n        })\n      },\n\n      /**\n       * #action\n       */\n      setWidth(newWidth: number) {\n        self.width = newWidth\n      },\n\n      /**\n       * #action\n       */\n      setViews(views: SnapshotIn<LinearGenomeViewModel>[]) {\n        self.views = cast(views)\n      },\n\n      /**\n       * #action\n       */\n      removeView(view: LinearGenomeViewModel) {\n        self.views.remove(view)\n      },\n\n      /**\n       * #action\n       * removes the view itself from the state tree entirely by calling the\n       * parent removeView\n       */\n      closeView() {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        getParent<any>(self, 2).removeView(self)\n      },\n\n      /**\n       * #action\n       */\n      setMiddleComparativeHeight(n: number) {\n        self.middleComparativeHeight = n\n        return self.middleComparativeHeight\n      },\n\n      /**\n       * #action\n       */\n      toggleLinkViews() {\n        self.linkViews = !self.linkViews\n      },\n\n      /**\n       * #action\n       */\n      activateTrackSelector() {\n        if (self.trackSelectorType === 'hierarchical') {\n          const session = getSession(self)\n          if (isSessionModelWithWidgets(session)) {\n            const selector = session.addWidget(\n              'HierarchicalTrackSelectorWidget',\n              'hierarchicalTrackSelector',\n              { view: self },\n            )\n            session.showWidget(selector)\n            return selector\n          }\n          return undefined\n        }\n        throw new Error(`invalid track selector type ${self.trackSelectorType}`)\n      },\n\n      /**\n       * #action\n       */\n      toggleTrack(trackId: string) {\n        // if we have any tracks with that configuration, turn them off\n        const hiddenCount = this.hideTrack(trackId)\n\n        // if none had that configuration, turn one on\n        if (!hiddenCount) {\n          this.showTrack(trackId)\n        }\n      },\n\n      /**\n       * #action\n       */\n      showTrack(trackId: string, initialSnapshot = {}) {\n        const schema = pluginManager.pluggableConfigSchemaType('track')\n        const configuration = resolveIdentifier(schema, getRoot(self), trackId)\n        if (!configuration) {\n          throw new Error(`track not found ${trackId}`)\n        }\n        const trackType = pluginManager.getTrackType(configuration.type)\n        if (!trackType) {\n          throw new Error(`unknown track type ${configuration.type}`)\n        }\n        const viewType = pluginManager.getViewType(self.type)\n        const supportedDisplays = new Set(\n          viewType.displayTypes.map(d => d.name),\n        )\n        const displayConf = configuration.displays.find(\n          (d: AnyConfigurationModel) => supportedDisplays.has(d.type),\n        )\n        if (!displayConf) {\n          throw new Error(\n            `could not find a compatible display for view type ${self.type}`,\n          )\n        }\n        self.tracks.push(\n          trackType.stateModel.create({\n            ...initialSnapshot,\n            type: configuration.type,\n            configuration,\n            displays: [{ type: displayConf.type, configuration: displayConf }],\n          }),\n        )\n      },\n\n      /**\n       * #action\n       */\n      hideTrack(trackId: string) {\n        const schema = pluginManager.pluggableConfigSchemaType('track')\n        const config = resolveIdentifier(schema, getRoot(self), trackId)\n        const shownTracks = self.tracks.filter(t => t.configuration === config)\n        transaction(() => shownTracks.forEach(t => self.tracks.remove(t)))\n        return shownTracks.length\n      },\n      /**\n       * #action\n       */\n      squareView() {\n        const average = avg(self.views.map(v => v.bpPerPx))\n        self.views.forEach(view => {\n          const center = view.pxToBp(view.width / 2)\n          view.setNewView(average, view.offsetPx)\n          if (!center.refName) {\n            return\n          }\n          view.centerAt(center.coord, center.refName, center.index)\n        })\n      },\n      /**\n       * #action\n       */\n      clearView() {\n        self.views = cast([])\n        self.tracks = cast([])\n      },\n    }))\n    .views(() => ({\n      /**\n       * #method\n       * includes a subset of view menu options because the full list is a\n       * little overwhelming. overridden by subclasses\n       */\n      headerMenuItems(): MenuItem[] {\n        return []\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       */\n      menuItems(): MenuItem[] {\n        return [\n          ...self.views\n            .map((view, idx) => [idx, view.menuItems?.()] as const)\n            .filter(f => !!f[1])\n            .map(f => ({ label: `View ${f[0] + 1} Menu`, subMenu: f[1] })),\n          {\n            label: 'Return to import form',\n            onClick: () => {\n              getSession(self).queueDialog(handleClose => [\n                ReturnToImportFormDialog,\n                { model: self, handleClose },\n              ])\n            },\n            icon: FolderOpenIcon,\n          },\n          {\n            label: 'Open track selector',\n            onClick: self.activateTrackSelector,\n            icon: TrackSelectorIcon,\n          },\n        ]\n      },\n      /**\n       * #method\n       */\n      rubberBandMenuItems() {\n        return [\n          {\n            label: 'Zoom to region(s)',\n            onClick: () => {\n              self.views.forEach(view => {\n                const { leftOffset, rightOffset } = view\n                if (leftOffset && rightOffset) {\n                  view.moveTo(leftOffset, rightOffset)\n                }\n              })\n            },\n          },\n        ]\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(() => {\n            if (self.width) {\n              self.views.forEach(v => v.setWidth(self.width))\n            }\n          }),\n        )\n      },\n    }))\n}\n\nexport type LinearComparativeViewStateModel = ReturnType<\n  typeof stateModelFactory\n>\nexport type LinearComparativeViewModel =\n  Instance<LinearComparativeViewStateModel>\n\nexport default stateModelFactory\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport baseConfigFactory from '../LinearComparativeDisplay/configSchemaF'\n\n/**\n * #config LinearSyntenyDisplay\n */\nfunction configSchemaFactory(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'LinearSyntenyDisplay',\n    {\n      /**\n       * #slot\n       * currently unused\n       */\n      trackIds: {\n        type: 'stringArray',\n        defaultValue: [],\n      },\n\n      /**\n       * #slot\n       * currently unused\n       */\n      middle: { type: 'boolean', defaultValue: true },\n    },\n    {\n      /**\n       * #baseConfiguration\n       * this refers to the LinearComparativeDisplay\n       */\n      baseConfiguration: baseConfigFactory(pluginManager),\n      explicitlyTyped: true,\n    },\n  )\n}\n\nexport default configSchemaFactory\n","import { types, Instance } from 'mobx-state-tree'\nimport {\n  getConf,\n  ConfigurationReference,\n  AnyConfigurationSchemaType,\n} from '@jbrowse/core/configuration'\nimport { Feature } from '@jbrowse/core/util'\n\n// locals\nimport baseModelFactory from '../LinearComparativeDisplay/stateModelFactory'\n\ninterface Pos {\n  offsetPx: number\n}\n\ninterface FeatPos {\n  p11: Pos\n  p12: Pos\n  p21: Pos\n  p22: Pos\n  f: Feature\n  cigar: string[]\n}\n\n/**\n * #stateModel LinearSyntenyDisplay\n * extends `LinearComparativeDisplay` model\n */\nfunction stateModelFactory(configSchema: AnyConfigurationSchemaType) {\n  return types\n    .compose(\n      'LinearSyntenyDisplay',\n      baseModelFactory(configSchema),\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LinearSyntenyDisplay'),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n      }),\n    )\n    .volatile(() => ({\n      // canvas used for drawing visible screen\n      mainCanvas: null as HTMLCanvasElement | null,\n\n      // canvas used for drawing click map with feature ids\n      // this renders a unique color per alignment, so that it can be re-traced\n      // after a feature click with getImageData at that pixel\n      clickMapCanvas: null as HTMLCanvasElement | null,\n\n      // canvas used for drawing click map with cigar data\n      // this can show if you are mousing over a insertion/deletion. it is similar\n      // in purpose to the clickMapRef but was not feasible to pack this into the\n      // clickMapRef\n      cigarClickMapCanvas: null as HTMLCanvasElement | null,\n\n      // canvas for drawing mouseover shading\n      // this is separate from the other code for speed: don't have to redraw\n      // entire canvas to do a feature's mouseover shading\n      mouseoverCanvas: null as HTMLCanvasElement | null,\n\n      // assigned by reaction\n      featPositions: [] as FeatPos[],\n\n      // currently mouse'd over feature\n      mouseoverId: undefined as string | undefined,\n\n      // currently click'd over feature\n      clickId: undefined as string | undefined,\n\n      // currently mouseover'd CIGAR subfeature\n      cigarMouseoverId: -1,\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setFeatPositions(arg: FeatPos[]) {\n        self.featPositions = arg\n      },\n      /**\n       * #action\n       */\n      setMainCanvasRef(ref: HTMLCanvasElement | null) {\n        self.mainCanvas = ref\n      },\n      /**\n       * #action\n       */\n      setClickMapCanvasRef(ref: HTMLCanvasElement | null) {\n        self.clickMapCanvas = ref\n      },\n      /**\n       * #action\n       */\n      setCigarClickMapCanvasRef(ref: HTMLCanvasElement | null) {\n        self.cigarClickMapCanvas = ref\n      },\n      /**\n       * #action\n       */\n      setMouseoverCanvasRef(ref: HTMLCanvasElement | null) {\n        self.mouseoverCanvas = ref\n      },\n      /**\n       * #action\n       */\n      setMouseoverId(arg?: string) {\n        self.mouseoverId = arg\n      },\n      /**\n       * #action\n       */\n      setCigarMouseoverId(arg: number) {\n        self.cigarMouseoverId = arg\n      },\n      /**\n       * #action\n       */\n      setClickId(arg?: string) {\n        self.clickId = arg\n      },\n    }))\n\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get adapterConfig() {\n        return {\n          name: self.parentTrack.configuration.adapter.type,\n          assemblyNames: getConf(self, 'assemblyNames'),\n          ...getConf(self.parentTrack, 'adapter'),\n        }\n      },\n      /**\n       * #getter\n       */\n      get trackIds() {\n        return getConf(self, 'trackIds') as string[]\n      },\n      /**\n       * #getter\n       */\n      get numFeats() {\n        return self.featPositions.length\n      },\n      /**\n       * #getter\n       * used for synteny svg rendering\n       */\n      get ready() {\n        return this.numFeats > 0\n      },\n\n      /**\n       * #getter\n       */\n      get featMap() {\n        return Object.fromEntries(self.featPositions.map(f => [f.f.id(), f]))\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        ;(async () => {\n          try {\n            const { doAfterAttach } = await import('./afterAttach')\n            doAfterAttach(self)\n          } catch (e) {\n            console.error(e)\n            self.setError(e)\n          }\n        })()\n      },\n    }))\n}\n\nexport type LinearSyntenyDisplayStateModel = ReturnType<\n  typeof stateModelFactory\n>\nexport type LinearSyntenyDisplayModel = Instance<LinearSyntenyDisplayStateModel>\n\nexport default stateModelFactory\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { linearPileupDisplayConfigSchemaFactory } from '@jbrowse/plugin-alignments'\n\n/**\n * #config LGVSyntenyDisplay\n */\nfunction configSchemaF(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'LGVSyntenyDisplay',\n    {},\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: linearPileupDisplayConfigSchemaFactory(pluginManager),\n      explicitlyTyped: true,\n    },\n  )\n}\n\nexport default configSchemaF\n","import {\n  ConfigurationReference,\n  AnyConfigurationSchemaType,\n} from '@jbrowse/core/configuration'\nimport {\n  getSession,\n  getContainingTrack,\n  getContainingView,\n  Feature,\n} from '@jbrowse/core/util'\nimport {\n  MismatchParser,\n  linearPileupDisplayStateModelFactory,\n} from '@jbrowse/plugin-alignments'\nimport { IAnyStateTreeNode, types } from 'mobx-state-tree'\nimport { when } from 'mobx'\n\n// locals\nimport { LinearSyntenyViewModel } from '../LinearSyntenyView/model'\n\ntype LSV = LinearSyntenyViewModel\n\nconst { parseCigar } = MismatchParser\n\nfunction findPosInCigar(cigar: string[], startX: number) {\n  let featX = 0\n  let mateX = 0\n  for (let i = 0; i < cigar.length; i++) {\n    const len = +cigar[i]\n    const op = cigar[i + 1]\n    const min = Math.min(len, startX - featX)\n\n    if (featX >= startX) {\n      break\n    } else if (op === 'I') {\n      mateX += len\n    } else if (op === 'D') {\n      featX += min\n    } else if (op === 'M') {\n      mateX += min\n      featX += min\n    }\n  }\n  return [featX, mateX]\n}\n\nasync function navToSynteny(feature: Feature, self: IAnyStateTreeNode) {\n  const session = getSession(self)\n  const track = getContainingTrack(self)\n  const view = getContainingView(self)\n  const reg = view.dynamicBlocks.contentBlocks[0]\n  const cigar = feature.get('CIGAR')\n  const strand = feature.get('strand')\n  const regStart = reg.start\n  const regEnd = reg.end\n  const featStart = feature.get('start')\n  const featEnd = feature.get('end')\n  const mate = feature.get('mate')\n  const mateStart = mate.start\n  const mateEnd = mate.end\n  const mateAsm = mate.assemblyName\n  const mateRef = mate.refName\n  const featAsm = reg.assemblyName\n  const featRef = reg.refName\n\n  let rMateStart: number\n  let rMateEnd: number\n  let rFeatStart: number\n  let rFeatEnd: number\n\n  if (cigar) {\n    const p = parseCigar(cigar)\n    const [fStartX, mStartX] = findPosInCigar(p, regStart - featStart)\n    const [fEndX, mEndX] = findPosInCigar(p, regEnd - featStart)\n\n    // avoid multiply by 0 with strand undefined\n    const flipper = strand === -1 ? -1 : 1\n    rFeatStart = featStart + fStartX\n    rFeatEnd = featStart + fEndX\n    rMateStart = (strand === -1 ? mateEnd : mateStart) + mStartX * flipper\n    rMateEnd = (strand === -1 ? mateEnd : mateStart) + mEndX * flipper\n  } else {\n    rFeatStart = featStart\n    rFeatEnd = featEnd\n    rMateStart = mateStart\n    rMateEnd = mateEnd\n  }\n  const trackId = track.configuration.trackId\n\n  const view2 = session.addView('LinearSyntenyView', {\n    type: 'LinearSyntenyView',\n    views: [\n      {\n        id: `${Math.random()}`,\n        type: 'LinearGenomeView',\n        hideHeader: true,\n      },\n      {\n        id: `${Math.random()}`,\n        type: 'LinearGenomeView',\n        hideHeader: true,\n      },\n    ],\n    tracks: [\n      {\n        configuration: trackId,\n        type: 'SyntenyTrack',\n        displays: [\n          {\n            type: 'LinearSyntenyDisplay',\n            configuration: `${trackId}-LinearSyntenyDisplay`,\n          },\n        ],\n      },\n    ],\n  }) as LSV\n  const f = (n: number) => Math.floor(n)\n  const l1 = `${featRef}:${f(rFeatStart)}-${f(rFeatEnd)}`\n  const m1 = Math.min(rMateStart, rMateEnd)\n  const m2 = Math.max(rMateStart, rMateEnd)\n  const l2 = `${mateRef}:${f(m1)}-${f(m2)}${strand === -1 ? '[rev]' : ''}`\n  await when(() => view2.width !== undefined)\n  await Promise.all([\n    view2.views[0].navToLocString(l1, featAsm),\n    view2.views[1].navToLocString(l2, mateAsm),\n  ])\n}\n\n/**\n * #stateModel LGVSyntenyDisplay\n * extends `LinearPileupDisplay`, displays location of \"synteny\" feature in a\n * plain LGV, allowing linking out to external synteny views\n */\nfunction stateModelFactory(schema: AnyConfigurationSchemaType) {\n  return types\n    .compose(\n      'LGVSyntenyDisplay',\n      linearPileupDisplayStateModelFactory(schema),\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LGVSyntenyDisplay'),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(schema),\n      }),\n    )\n    .views(self => {\n      const superContextMenuItems = self.contextMenuItems\n      return {\n        contextMenuItems() {\n          const feature = self.contextMenuFeature\n          return [\n            ...superContextMenuItems(),\n            ...(feature\n              ? [\n                  {\n                    label: 'Open synteny view for this position',\n                    onClick: () => navToSynteny(feature, self),\n                  },\n                ]\n              : []),\n          ]\n        },\n      }\n    })\n    .actions(self => ({\n      afterCreate() {\n        // use color by strand to help indicate inversions better\n        self.setColorScheme({ type: 'strand' })\n      },\n    }))\n}\n\nexport default stateModelFactory\n","import React from 'react'\nimport { SvgIcon, SvgIconProps } from '@mui/material'\n\nexport function Curves(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M16.5,21C13.5,21 12.31,16.76 11.05,12.28C10.14,9.04 9,5 7.5,5C4.11,5 4,11.93 4,12H2C2,11.63 2.06,3 7.5,3C10.5,3 11.71,7.25 12.97,11.74C13.83,14.8 15,19 16.5,19C19.94,19 20.03,12.07 20.03,12H22.03C22.03,12.37 21.97,21 16.5,21Z\"\n      />\n    </SvgIcon>\n  )\n}\n\nexport function StraightLines(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M22 12L17 22L7.1 6.04L4.24 12H2L7 2L16.9 17.96L19.76 12H22Z\"\n      />\n    </SvgIcon>\n  )\n}\n","import React, { lazy } from 'react'\nimport { types, Instance } from 'mobx-state-tree'\nimport { transaction } from 'mobx'\nimport { getSession } from '@jbrowse/core/util'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { saveAs } from 'file-saver'\n\n// icons\nimport CropFreeIcon from '@mui/icons-material/CropFree'\nimport LinkIcon from '@mui/icons-material/Link'\nimport VisibilityIcon from '@mui/icons-material/Visibility'\nimport PhotoCameraIcon from '@mui/icons-material/PhotoCamera'\nimport { Curves } from './components/Icons'\n\n// locals\nimport baseModel from '../LinearComparativeView/model'\n\n// lazies\nconst ExportSvgDialog = lazy(() => import('./components/ExportSvgDialog'))\n\nexport interface ExportSvgOptions {\n  rasterizeLayers?: boolean\n  scale?: number\n  filename?: string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Wrapper?: React.FC<any>\n  fontSize?: number\n  rulerHeight?: number\n  textHeight?: number\n  paddingHeight?: number\n  headerHeight?: number\n  cytobandHeight?: number\n  themeName?: string\n  trackLabels?: string\n}\n\n/**\n * #stateModel LinearSyntenyView\n * extends the `LinearComparativeView` base model\n */\nexport default function stateModelFactory(pluginManager: PluginManager) {\n  return types\n    .compose(\n      baseModel(pluginManager),\n      types.model('LinearSyntenyView', {\n        /**\n         * #property\n         */\n        type: types.literal('LinearSyntenyView'),\n        /**\n         * #property/\n         */\n        drawCIGAR: true,\n        /**\n         * #property\n         */\n        drawCurves: false,\n      }),\n    )\n    .actions(self => ({\n      /**\n       * #action\n       */\n      toggleCurves() {\n        self.drawCurves = !self.drawCurves\n      },\n      /**\n       * #action\n       */\n      toggleCIGAR() {\n        self.drawCIGAR = !self.drawCIGAR\n      },\n      /**\n       * #action\n       */\n      showAllRegions() {\n        transaction(() => {\n          self.views.forEach(view => view.showAllRegionsInAssembly())\n        })\n      },\n    }))\n    .actions(self => ({\n      async exportSvg(opts: ExportSvgOptions) {\n        const { renderToSvg } = await import(\n          './svgcomponents/SVGLinearSyntenyView'\n        )\n        const html = await renderToSvg(self as LinearSyntenyViewModel, opts)\n        const blob = new Blob([html], { type: 'image/svg+xml' })\n        saveAs(blob, opts.filename || 'image.svg')\n      },\n    }))\n    .views(self => {\n      const superHeaderMenuItems = self.headerMenuItems\n      const superMenuItems = self.menuItems\n      return {\n        /**\n         * #method\n         * includes a subset of view menu options because the full list is a\n         * little overwhelming\n         */\n        headerMenuItems() {\n          return [\n            ...superHeaderMenuItems(),\n            {\n              label: 'Square view',\n              onClick: self.squareView,\n              description:\n                'Makes both views use the same zoom level, adjusting to the average of each',\n              icon: CropFreeIcon,\n            },\n            {\n              label: 'Show all regions',\n              onClick: self.showAllRegions,\n              description: 'Show entire genome assemblies',\n              icon: VisibilityIcon,\n            },\n            {\n              label: 'Draw CIGAR',\n              onClick: self.toggleCIGAR,\n              checked: self.drawCIGAR,\n              type: 'checkbox',\n              description: 'Draws per-base CIGAR level alignments',\n            },\n            {\n              label: 'Link views',\n              type: 'checkbox',\n              checked: self.linkViews,\n              onClick: self.toggleLinkViews,\n              icon: LinkIcon,\n            },\n            {\n              label: 'Use curved lines',\n              type: 'checkbox',\n              checked: self.drawCurves,\n              onClick: self.toggleCurves,\n              icon: Curves,\n            },\n            {\n              label: 'Export SVG',\n              icon: PhotoCameraIcon,\n              onClick: (): void => {\n                getSession(self).queueDialog(handleClose => [\n                  ExportSvgDialog,\n                  { model: self, handleClose },\n                ])\n              },\n            },\n          ]\n        },\n        menuItems() {\n          return [\n            ...superMenuItems(),\n            {\n              label: 'Export SVG',\n              icon: PhotoCameraIcon,\n              onClick: () => {\n                getSession(self).queueDialog(handleClose => [\n                  ExportSvgDialog,\n                  { model: self, handleClose },\n                ])\n              },\n            },\n          ]\n        },\n      }\n    })\n}\nexport type LinearSyntenyViewStateModel = ReturnType<typeof stateModelFactory>\nexport type LinearSyntenyViewModel = Instance<LinearSyntenyViewStateModel>\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { AbstractSessionModel } from '@jbrowse/core/util'\nimport { LinearSyntenyViewModel } from './LinearSyntenyView/model'\nimport { when } from 'mobx'\n\ntype LSV = LinearSyntenyViewModel\n\nexport default function LaunchLinearSyntenyView(pluginManager: PluginManager) {\n  pluginManager.addToExtensionPoint(\n    'LaunchView-LinearSyntenyView',\n    // @ts-expect-error\n    async ({\n      session,\n      views,\n      tracks = [],\n    }: {\n      session: AbstractSessionModel\n      views: { loc: string; assembly: string; tracks?: string[] }[]\n      tracks?: string[]\n    }) => {\n      try {\n        const { assemblyManager } = session\n        const model = session.addView('LinearSyntenyView', {}) as LSV\n\n        await when(() => !!model.width)\n\n        model.setViews(\n          await Promise.all(\n            views.map(async view => {\n              const asm = await assemblyManager.waitForAssembly(view.assembly)\n              if (!asm) {\n                throw new Error(`Assembly ${view.assembly} failed to load`)\n              }\n              return {\n                type: 'LinearGenomeView' as const,\n                bpPerPx: 1,\n                offsetPx: 0,\n                hideHeader: true,\n                displayedRegions: asm.regions,\n              }\n            }),\n          ),\n        )\n\n        await Promise.all(model.views.map(view => when(() => view.initialized)))\n\n        const idsNotFound = [] as string[]\n        await Promise.all(\n          views.map(async (data, idx) => {\n            const view = model.views[idx]\n            const { loc, tracks = [] } = data\n            await view.navToLocString(loc)\n            tracks.forEach(track => tryTrack(view, track, idsNotFound))\n          }),\n        )\n\n        tracks.forEach(track => tryTrack(model, track, idsNotFound))\n\n        if (idsNotFound.length) {\n          throw new Error(\n            `Could not resolve identifiers: ${idsNotFound.join(',')}`,\n          )\n        }\n      } catch (e) {\n        session.notify(`${e}`, 'error')\n        throw e\n      }\n    },\n  )\n}\n\nfunction tryTrack(\n  model: { showTrack: (arg: string) => void },\n  trackId: string,\n  idsNotFound: string[],\n) {\n  try {\n    model.showTrack(trackId)\n  } catch (e) {\n    if (`${e}`.match('Could not resolve identifier')) {\n      idsNotFound.push(trackId)\n    } else {\n      throw e\n    }\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nimport { createBaseTrackConfig } from '@jbrowse/core/pluggableElementTypes/models'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config SyntenyTrack\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = (pluginManager: PluginManager) =>\n  ConfigurationSchema(\n    'SyntenyTrack',\n    {},\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: createBaseTrackConfig(pluginManager),\n    },\n  )\n\nexport default configSchema\n","import { lazy } from 'react'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport WidgetType from '@jbrowse/core/pluggableElementTypes/WidgetType'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport { types } from 'mobx-state-tree'\n\nconst configSchema = ConfigurationSchema('SyntenyFeatureWidget', {})\n\nconst stateModel = types\n  .model('SyntenyFeatureWidget', {\n    id: ElementId,\n    type: types.literal('SyntenyFeatureWidget'),\n    featureData: types.frozen(),\n  })\n  .actions(self => ({\n    setFeatureData(data: unknown) {\n      self.featureData = data\n    },\n    clearFeatureData() {\n      self.featureData = undefined\n    },\n  }))\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addWidgetType(\n    () =>\n      new WidgetType({\n        name: 'SyntenyFeatureWidget',\n        heading: 'Synteny feature details',\n        configSchema,\n        stateModel,\n        ReactComponent: lazy(() => import('./SyntenyFeatureDetail')),\n      }),\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport {\n  Button,\n  CircularProgress,\n  DialogActions,\n  DialogContent,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { makeStyles } from 'tss-react/mui'\nimport { getConf } from '@jbrowse/core/configuration'\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks'\nimport {\n  getSession,\n  getContainingView,\n  gatherOverlaps,\n  Feature,\n} from '@jbrowse/core/util'\n\n// locals\nimport { MismatchParser } from '@jbrowse/plugin-alignments'\nconst { featurizeSA, getClip, getLength, getLengthSansClipping, getTag } =\n  MismatchParser\n\ninterface ReducedFeature {\n  refName: string\n  start: number\n  clipPos: number\n  end: number\n  strand: number\n  seqLength: number\n  syntenyId?: number\n  uniqueId: string\n  mate: {\n    refName: string\n    start: number\n    end: number\n    syntenyId?: number\n    uniqueId?: string\n  }\n}\n\nconst useStyles = makeStyles()({\n  root: {\n    width: 300,\n  },\n})\n\nexport default function ReadVsRefDialog({\n  track,\n  feature: preFeature,\n  handleClose,\n}: {\n  feature: Feature\n  handleClose: () => void\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  track: any\n}) {\n  const { classes } = useStyles()\n\n  // window size stored as string, because it corresponds to a textfield which\n  // is parsed as number on submit\n  const [windowSizeText, setWindowSize] = useState('0')\n  const [error, setError] = useState<unknown>()\n  const [primaryFeature, setPrimaryFeature] = useState<Feature>()\n  const windowSize = +windowSizeText\n\n  // we need to fetch the primary alignment if the selected feature is 2048.\n  // this should be the first in the list of the SA tag\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      setError(undefined)\n      try {\n        if (preFeature.get('flags') & 2048) {\n          const SA: string = getTag(preFeature, 'SA') || ''\n          const primaryAln = SA.split(';')[0]\n          const [saRef, saStart] = primaryAln.split(',')\n          const { rpcManager } = getSession(track)\n          const adapterConfig = getConf(track, 'adapter')\n          const sessionId = getRpcSessionId(track)\n\n          const feats = (await rpcManager.call(sessionId, 'CoreGetFeatures', {\n            adapterConfig,\n            sessionId,\n            regions: [\n              {\n                refName: saRef,\n                start: +saStart - 1,\n                end: +saStart,\n              },\n            ],\n          })) as Feature[]\n\n          const result = feats.find(\n            f =>\n              f.get('name') === preFeature.get('name') &&\n              !(f.get('flags') & 2048) &&\n              !(f.get('flags') & 256),\n          )\n          if (result) {\n            setPrimaryFeature(result)\n          } else {\n            throw new Error('primary feature not found')\n          }\n        } else {\n          setPrimaryFeature(preFeature)\n        }\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    })()\n  }, [preFeature, track])\n\n  function onSubmit() {\n    try {\n      if (!primaryFeature) {\n        return\n      }\n      const feature = primaryFeature\n      const session = getSession(track)\n      const view = getContainingView(track)\n      const cigar = feature.get('CIGAR') as string\n      const flags = feature.get('flags') as number\n      const origStrand = feature.get('strand') as number\n      const SA = (getTag(feature, 'SA') as string) || ''\n      const readName = feature.get('name') as string\n      const clipPos = getClip(cigar, 1)\n\n      const readAssembly = `${readName}_assembly_${Date.now()}`\n      const [trackAssembly] = getConf(track, 'assemblyNames')\n      const assemblyNames = [trackAssembly, readAssembly]\n      const trackId = `track-${Date.now()}`\n      const trackName = `${readName}_vs_${trackAssembly}`\n\n      // get the canonical refname for the read because if the\n      // read.get('refName') is chr1 and the actual fasta refName is 1 then no\n      // tracks can be opened on the top panel of the linear read vs ref\n      const { assemblyManager } = session\n      const assembly = assemblyManager.get(trackAssembly)\n      if (!assembly) {\n        throw new Error('assembly not found')\n      }\n\n      const suppAlns = featurizeSA(SA, feature.id(), origStrand, readName, true)\n\n      const feat = feature.toJSON()\n      feat.clipPos = clipPos\n      feat.strand = 1\n\n      feat.mate = {\n        refName: readName,\n        start: clipPos,\n        end: clipPos + getLengthSansClipping(cigar),\n      }\n\n      // if secondary alignment or supplementary, calculate length from SA[0]'s\n      // CIGAR which is the primary alignments. otherwise it is the primary\n      // alignment just use seq.length if primary alignment\n      const totalLength =\n        flags & 2048 ? getLength(suppAlns[0].CIGAR) : getLength(cigar)\n\n      const features = [feat, ...suppAlns] as ReducedFeature[]\n\n      features.forEach((f, idx) => {\n        f.refName = assembly?.getCanonicalRefName(f.refName) || f.refName\n        f.syntenyId = idx\n        f.mate.syntenyId = idx\n        f.mate.uniqueId = `${f.uniqueId}_mate`\n      })\n      features.sort((a, b) => a.clipPos - b.clipPos)\n\n      const featSeq = feature.get('seq') as string | undefined\n\n      // the config feature store includes synthetic mate features\n      // mapped to the read assembly\n      const configFeatureStore = [...features, ...features.map(f => f.mate)]\n      const expand = 2 * windowSize\n      const refLen = features.reduce((a, f) => a + f.end - f.start + expand, 0)\n\n      const seqTrackId = `${readName}_${Date.now()}`\n      const sequenceTrackConf = getConf(assembly, 'sequence')\n      const lgvRegions = gatherOverlaps(\n        features.map(f => ({\n          ...f,\n          start: Math.max(0, f.start - windowSize),\n          end: f.end + windowSize,\n          assemblyName: trackAssembly,\n        })),\n      )\n\n      session.addTemporaryAssembly({\n        name: `${readAssembly}`,\n        sequence: {\n          type: 'ReferenceSequenceTrack',\n          name: `Read sequence`,\n          trackId: seqTrackId,\n          assemblyNames: [readAssembly],\n          adapter: {\n            type: 'FromConfigSequenceAdapter',\n            noAssemblyManager: true,\n            features: [\n              {\n                start: 0,\n                end: totalLength,\n                seq: featSeq || '', // can be empty if user clicks secondary read\n                refName: readName,\n                uniqueId: `${Math.random()}`,\n              },\n            ],\n          },\n        },\n      })\n\n      session.addView('LinearSyntenyView', {\n        type: 'LinearSyntenyView',\n        views: [\n          {\n            type: 'LinearGenomeView',\n            hideHeader: true,\n            offsetPx: 0,\n            bpPerPx: refLen / view.width,\n            displayedRegions: lgvRegions,\n            tracks: [\n              {\n                id: `${Math.random()}`,\n                type: 'ReferenceSequenceTrack',\n                assemblyNames: [trackAssembly],\n                configuration: sequenceTrackConf.trackId,\n                displays: [\n                  {\n                    id: `${Math.random()}`,\n                    type: 'LinearReferenceSequenceDisplay',\n                    showReverse: true,\n                    showTranslation: false,\n                    height: 35,\n                    configuration: `${seqTrackId}-LinearReferenceSequenceDisplay`,\n                  },\n                ],\n              },\n            ],\n          },\n          {\n            type: 'LinearGenomeView',\n            hideHeader: true,\n            offsetPx: 0,\n            bpPerPx: totalLength / view.width,\n            displayedRegions: [\n              {\n                assemblyName: readAssembly,\n                start: 0,\n                end: totalLength,\n                refName: readName,\n              },\n            ],\n            tracks: [\n              {\n                id: `${Math.random()}`,\n                type: 'ReferenceSequenceTrack',\n                configuration: seqTrackId,\n                displays: [\n                  {\n                    id: `${Math.random()}`,\n                    type: 'LinearReferenceSequenceDisplay',\n                    showReverse: true,\n                    showTranslation: false,\n                    height: 35,\n                    configuration: `${seqTrackId}-LinearReferenceSequenceDisplay`,\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n        viewTrackConfigs: [\n          {\n            type: 'SyntenyTrack',\n            assemblyNames,\n            adapter: {\n              type: 'FromConfigAdapter',\n              features: configFeatureStore,\n            },\n            trackId,\n            name: trackName,\n          },\n        ],\n        tracks: [\n          {\n            configuration: trackId,\n            type: 'SyntenyTrack',\n            displays: [\n              {\n                type: 'LinearSyntenyDisplay',\n                configuration: `${trackId}-LinearSyntenyDisplay`,\n              },\n            ],\n          },\n        ],\n        displayName: `${readName} vs ${trackAssembly}`,\n      })\n      handleClose()\n    } catch (e) {\n      console.error(e)\n      setError(e)\n    }\n  }\n\n  return (\n    <Dialog open onClose={handleClose} title=\"Set window size\">\n      <DialogContent>\n        {error ? (\n          <Typography color=\"error\">{`${error}`}</Typography>\n        ) : !primaryFeature ? (\n          <div>\n            <Typography>\n              To accurately perform comparison we are fetching the primary\n              alignment. Loading primary feature...\n            </Typography>\n            <CircularProgress />\n          </div>\n        ) : (\n          <div className={classes.root}>\n            {primaryFeature.get('flags') & 256 ? (\n              <Typography style={{ color: 'orange' }}>\n                Note: You selected a secondary alignment (which generally does\n                not have SA tags or SEQ fields) so do a full reconstruction of\n                the alignment\n              </Typography>\n            ) : null}\n            <Typography>\n              Show an extra window size around each part of the split alignment.\n              Using a larger value can allow you to see more genomic context.\n            </Typography>\n\n            <TextField\n              value={windowSize}\n              onChange={event => setWindowSize(event.target.value)}\n              label=\"Set window size\"\n            />\n          </div>\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"contained\" color=\"secondary\" onClick={handleClose}>\n          Cancel\n        </Button>\n        <Button\n          disabled={!primaryFeature}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={onSubmit}\n        >\n          Submit\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { AbstractSessionModel, isAbstractMenuManager } from '@jbrowse/core/util'\n\nimport CalendarIcon from '@mui/icons-material/CalendarViewDay'\nimport LinearComparativeDisplayF from './LinearComparativeDisplay'\nimport LinearComparativeViewF from './LinearComparativeView'\nimport LinearSyntenyDisplayF from './LinearSyntenyDisplay'\nimport LGVSyntenyDisplayF from './LGVSyntenyDisplay'\nimport LinearSyntenyViewF from './LinearSyntenyView'\nimport LaunchLinearSyntenyViewF from './LaunchLinearSyntenyView'\nimport SyntenyTrackF from './SyntenyTrack'\nimport SyntenyFeatureWidgetF from './SyntenyFeatureDetail'\nimport LinearReadVsRefMenuItem from './LinearReadVsRef'\n\nexport default class extends Plugin {\n  name = 'LinearComparativeViewPlugin'\n\n  install(pluginManager: PluginManager) {\n    LinearComparativeViewF(pluginManager)\n    LinearSyntenyViewF(pluginManager)\n    LinearComparativeDisplayF(pluginManager)\n    LinearSyntenyDisplayF(pluginManager)\n    LGVSyntenyDisplayF(pluginManager)\n    LaunchLinearSyntenyViewF(pluginManager)\n    SyntenyTrackF(pluginManager)\n    SyntenyFeatureWidgetF(pluginManager)\n    LinearReadVsRefMenuItem(pluginManager)\n  }\n\n  configure(pluginManager: PluginManager) {\n    if (isAbstractMenuManager(pluginManager.rootModel)) {\n      pluginManager.rootModel.appendToSubMenu(['Add'], {\n        label: 'Linear synteny view',\n        icon: CalendarIcon,\n        onClick: (session: AbstractSessionModel) => {\n          session.addView('LinearSyntenyView', {})\n        },\n      })\n    }\n  }\n}\n","import { createBaseTrackModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport TrackType from '@jbrowse/core/pluggableElementTypes/TrackType'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport configSchemaF from './configSchema'\n\nexport default (pm: PluginManager) => {\n  pm.addTrackType(() => {\n    const configSchema = configSchemaF(pm)\n    return new TrackType({\n      name: 'SyntenyTrack',\n      configSchema,\n      stateModel: createBaseTrackModel(pm, 'SyntenyTrack', configSchema),\n    })\n  })\n}\n","import { lazy } from 'react'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport ViewType from '@jbrowse/core/pluggableElementTypes/ViewType'\nimport modelFactory from './model'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addViewType(() => {\n    return new ViewType({\n      name: 'LinearComparativeView',\n      displayName: 'Linear comparative view',\n      stateModel: modelFactory(pluginManager),\n      ReactComponent: lazy(() => import('./components/LinearComparativeView')),\n    })\n  })\n}\n","import { lazy } from 'react'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport modelFactory from './model'\nimport ViewType from '@jbrowse/core/pluggableElementTypes/ViewType'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addViewType(() => {\n    return new ViewType({\n      name: 'LinearSyntenyView',\n      displayName: 'Linear synteny view',\n      stateModel: modelFactory(pluginManager),\n      ReactComponent: lazy(() => import('./components/LinearSyntenyView')),\n    })\n  })\n}\n","import DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\nimport configSchemaFactory from './configSchemaF'\nimport stateModelFactory from './stateModelFactory'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaFactory(pluginManager)\n    return new DisplayType({\n      name: 'LinearComparativeDisplay',\n      configSchema,\n      stateModel: stateModelFactory(configSchema),\n      trackType: 'SyntenyTrack',\n      viewType: 'LinearComparativeView',\n      ReactComponent: () => {\n        return null\n      },\n    })\n  })\n}\n","import DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\n// locals\nimport configSchemaF from './configSchemaF'\nimport stateModelFactory from './model'\nimport { lazy } from 'react'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaF(pluginManager)\n    return new DisplayType({\n      name: 'LinearSyntenyDisplay',\n      configSchema,\n      stateModel: stateModelFactory(configSchema),\n      trackType: 'SyntenyTrack',\n      viewType: 'LinearSyntenyView',\n      ReactComponent: lazy(() => import('./components/Component')),\n    })\n  })\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\nimport configSchemaF from './configSchemaF'\nimport stateModelF from './model'\nimport { BaseLinearDisplayComponent } from '@jbrowse/plugin-linear-genome-view'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaF(pluginManager)\n    const stateModel = stateModelF(configSchema)\n    return new DisplayType({\n      name: 'LGVSyntenyDisplay',\n      configSchema,\n      stateModel,\n      trackType: 'SyntenyTrack',\n      viewType: 'LinearGenomeView',\n      ReactComponent: BaseLinearDisplayComponent,\n    })\n  })\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\nimport { PluggableElementType } from '@jbrowse/core/pluggableElementTypes'\nimport { getSession, getContainingTrack } from '@jbrowse/core/util'\n\n// icons\nimport AddIcon from '@mui/icons-material/Add'\n\n// locals\nimport ReadVsRefDialog from './LinearReadVsRef'\n\nfunction isDisplay(elt: { name: string }): elt is DisplayType {\n  return elt.name === 'LinearPileupDisplay'\n}\n\nexport default function (pm: PluginManager) {\n  pm.addToExtensionPoint(\n    'Core-extendPluggableElement',\n    (pluggableElement: PluggableElementType) => {\n      if (!isDisplay(pluggableElement)) {\n        return pluggableElement\n      }\n      pluggableElement.stateModel = pluggableElement.stateModel.extend(self => {\n        const superContextMenuItems = self.contextMenuItems\n        return {\n          views: {\n            contextMenuItems() {\n              const feature = self.contextMenuFeature\n              const track = getContainingTrack(self)\n              return [\n                ...superContextMenuItems(),\n                ...(feature\n                  ? [\n                      {\n                        label: 'Linear read vs ref',\n                        icon: AddIcon,\n                        onClick: () => {\n                          getSession(self).queueDialog(handleClose => [\n                            ReadVsRefDialog,\n                            {\n                              track,\n                              feature,\n                              handleClose,\n                            },\n                          ])\n                        },\n                      },\n                    ]\n                  : []),\n              ]\n            },\n          },\n        }\n      })\n      return pluggableElement\n    },\n  )\n}\n","import {\n  AnyConfigurationSchemaType,\n  ConfigurationReference,\n} from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\nimport { BaseLinearDisplay } from '@jbrowse/plugin-linear-genome-view'\n\nexport function stateModelFactory(configSchema: AnyConfigurationSchemaType) {\n  return types\n    .compose(\n      'LinearLollipopDisplay',\n      BaseLinearDisplay,\n      types.model({\n        type: types.literal('LinearLollipopDisplay'),\n        configuration: ConfigurationReference(configSchema),\n      }),\n    )\n\n    .views(self => {\n      const { renderProps: superRenderProps } = self\n      return {\n        get blockType() {\n          return 'dynamicBlocks'\n        },\n        get renderDelay() {\n          return 500\n        },\n        renderProps() {\n          return {\n            ...superRenderProps(),\n            rpcDriverName: self.rpcDriverName,\n            config: self.configuration.renderer,\n          }\n        },\n        get rendererTypeName() {\n          return self.configuration.renderer.type\n        },\n      }\n    })\n}\n","import React from 'react'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { contrastingTextColor } from '@jbrowse/core/util/color'\nimport { Feature } from '@jbrowse/core/util'\n\nexport default function ScoreText({\n  feature,\n  config,\n  layoutRecord: {\n    y,\n    data: { anchorX, radiusPx, score },\n  },\n}: {\n  feature: Feature\n  config: AnyConfigurationModel\n  layoutRecord: {\n    y: number\n    data: { anchorX: number; radiusPx: number; score: number }\n  }\n}) {\n  const innerColor = readConfObject(config, 'innerColor', { feature })\n\n  const scoreString = String(score)\n  const fontWidth = (radiusPx * 2) / scoreString.length\n  const fontHeight = fontWidth * 1.1\n  if (fontHeight < 12) {\n    return null\n  }\n  return (\n    <text\n      style={{ fontSize: fontHeight, fill: contrastingTextColor(innerColor) }}\n      x={anchorX}\n      y={y + radiusPx - fontHeight / 2.4}\n      textAnchor=\"middle\"\n      dominantBaseline=\"hanging\"\n    >\n      {scoreString}\n    </text>\n  )\n}\n","import React from 'react'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { observer } from 'mobx-react'\nimport ScoreText from './ScoreText'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport default observer(function Lollipop(props: Record<string, any>) {\n  const { feature, config, layoutRecord, selectedFeatureId } = props\n  const {\n    anchorLocation,\n    y,\n    data: { radiusPx },\n  } = layoutRecord\n\n  const onFeatureMouseDown = (event: React.MouseEvent) => {\n    const { onFeatureMouseDown: handler, feature } = props\n    return handler?.(event, feature.id())\n  }\n\n  const onFeatureMouseEnter = (event: React.MouseEvent) => {\n    const { onFeatureMouseEnter: handler, feature } = props\n    return handler?.(event, feature.id())\n  }\n\n  const onFeatureMouseOut = (event: React.MouseEvent | React.FocusEvent) => {\n    const { onFeatureMouseOut: handler, feature } = props\n    return handler?.(event, feature.id())\n  }\n\n  const onFeatureMouseOver = (event: React.MouseEvent | React.FocusEvent) => {\n    const { onFeatureMouseOver: handler, feature } = props\n    return handler?.(event, feature.id())\n  }\n\n  const onFeatureMouseUp = (event: React.MouseEvent) => {\n    const { onFeatureMouseUp: handler, feature } = props\n    return handler?.(event, feature.id())\n  }\n\n  const onFeatureMouseLeave = (event: React.MouseEvent) => {\n    const { onFeatureMouseLeave: handler, feature } = props\n    return handler?.(event, feature.id())\n  }\n\n  const onFeatureMouseMove = (event: React.MouseEvent) => {\n    const { onFeatureMouseMove: handler, feature } = props\n    return handler?.(event, feature.id())\n  }\n\n  const onFeatureClick = (event: React.MouseEvent) => {\n    const { onFeatureClick: handler, feature } = props\n    event.stopPropagation()\n    return handler?.(event, feature.id())\n  }\n\n  const styleOuter = {\n    fill: readConfObject(config, 'strokeColor', { feature }),\n  }\n  if (String(selectedFeatureId) === String(feature.id())) {\n    styleOuter.fill = 'red'\n  }\n\n  const styleInner = {\n    fill: readConfObject(config, 'innerColor', { feature }),\n  }\n\n  const strokeWidth = readConfObject(config, 'strokeWidth', { feature })\n\n  return (\n    <g data-testid={feature.id()}>\n      <title>{readConfObject(config, 'caption', { feature })}</title>\n      <circle\n        cx={anchorLocation}\n        cy={y + radiusPx}\n        r={radiusPx}\n        style={styleOuter}\n        onMouseDown={onFeatureMouseDown}\n        onMouseEnter={onFeatureMouseEnter}\n        onMouseOut={onFeatureMouseOut}\n        onMouseOver={onFeatureMouseOver}\n        onMouseUp={onFeatureMouseUp}\n        onMouseLeave={onFeatureMouseLeave}\n        onMouseMove={onFeatureMouseMove}\n        onClick={onFeatureClick}\n        onFocus={onFeatureMouseOver}\n        onBlur={onFeatureMouseOut}\n      />\n      {radiusPx - strokeWidth <= 2 ? null : (\n        <circle\n          cx={anchorLocation}\n          cy={y + radiusPx}\n          r={radiusPx - strokeWidth}\n          style={styleInner}\n          onMouseDown={onFeatureMouseDown}\n          onMouseEnter={onFeatureMouseEnter}\n          onMouseOut={onFeatureMouseOut}\n          onMouseOver={onFeatureMouseOver}\n          onMouseUp={onFeatureMouseUp}\n          onMouseLeave={onFeatureMouseLeave}\n          onMouseMove={onFeatureMouseMove}\n          onClick={onFeatureClick}\n          onFocus={onFeatureMouseOver}\n          onBlur={onFeatureMouseOut}\n        />\n      )}\n      <ScoreText\n        feature={feature}\n        config={config}\n        layoutRecord={layoutRecord}\n      />\n    </g>\n  )\n})\n","import React from 'react'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { observer } from 'mobx-react'\nimport { Feature } from '@jbrowse/core/util'\n\nexport default observer(function Stick({\n  feature,\n  config,\n  layoutRecord: {\n    anchorLocation,\n    y,\n    data: { radiusPx },\n  },\n}: {\n  feature: Feature\n  config: AnyConfigurationModel\n  layoutRecord: {\n    anchorLocation: number\n    y: number\n    data: { radiusPx: number }\n  }\n}) {\n  return (\n    <line\n      x1={anchorLocation}\n      y1={0}\n      x2={anchorLocation}\n      y2={y + 2 * radiusPx}\n      stroke={readConfObject(config, 'stickColor', { feature })}\n      strokeWidth={readConfObject(config, 'stickWidth', { feature })}\n    />\n  )\n})\n","import React from 'react'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { Feature, Region, bpToPx } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\n\n// locals\nimport Lollipop from './Lollipop'\nimport Stick from './Stick'\n\nfunction layoutFeat(args: {\n  feature: Feature\n  bpPerPx: number\n  region: Region\n  layout: { add: (...args: unknown[]) => void }\n  config: AnyConfigurationModel\n}) {\n  const { feature, bpPerPx, config, region, layout } = args\n\n  const centerBp = Math.abs(feature.get('end') + feature.get('start')) / 2\n  const centerPx = bpToPx(centerBp, region, bpPerPx)\n  const radiusPx = readConfObject(config, 'radius', { feature })\n\n  if (!radiusPx) {\n    console.error(\n      new Error(\n        `lollipop radius ${radiusPx} configured for feature ${feature.id()}`,\n      ),\n    )\n  }\n  layout.add(feature.id(), centerPx, radiusPx * 2, radiusPx * 2, {\n    featureId: feature.id(),\n    anchorX: centerPx,\n    radiusPx,\n    score: readConfObject(args.config, 'score', { feature }),\n  })\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport default observer(function LollipopRendering(props: Record<string, any>) {\n  const onMouseDown = (event: React.MouseEvent) => {\n    const { onMouseDown: handler } = props\n    return handler?.(event)\n  }\n\n  const onMouseUp = (event: React.MouseEvent) => {\n    const { onMouseUp: handler } = props\n    return handler?.(event)\n  }\n\n  const onMouseEnter = (event: React.MouseEvent | React.FocusEvent) => {\n    const { onMouseEnter: handler } = props\n    return handler?.(event)\n  }\n\n  const onMouseLeave = (event: React.MouseEvent | React.FocusEvent) => {\n    const { onMouseLeave: handler } = props\n    return handler?.(event)\n  }\n\n  const onMouseOver = (event: React.MouseEvent) => {\n    const { onMouseOver: handler } = props\n    return handler?.(event)\n  }\n\n  const onMouseOut = (event: React.MouseEvent) => {\n    const { onMouseOut: handler } = props\n    return handler?.(event)\n  }\n\n  const onClick = (event: React.MouseEvent) => {\n    const { onClick: handler } = props\n    return handler?.(event)\n  }\n\n  const {\n    regions,\n    bpPerPx,\n    layout,\n    config,\n    features = new Map(),\n    displayModel = {},\n  } = props\n  const { selectedFeatureId } = displayModel\n  const [region] = regions\n  for (const feature of features.values()) {\n    layoutFeat({\n      feature,\n      bpPerPx,\n      region,\n      config,\n      layout,\n    })\n  }\n\n  const width = (region.end - region.start) / bpPerPx\n  const records = [...layout.getLayout(config).values()]\n  const height = layout.getTotalHeight()\n\n  return (\n    <svg\n      width={width}\n      height={height}\n      style={{ position: 'relative' }}\n      onMouseDown={onMouseDown}\n      onMouseUp={onMouseUp}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      onMouseOver={onMouseOver}\n      onMouseOut={onMouseOut}\n      onFocus={onMouseEnter}\n      onBlur={onMouseLeave}\n      onClick={onClick}\n    >\n      {records.map(layoutRecord => {\n        const feature = features.get(layoutRecord.data.featureId)\n        return (\n          <React.Fragment key={feature.id()}>\n            <Stick\n              {...props}\n              config={config}\n              layoutRecord={layoutRecord}\n              feature={feature}\n              key={`stick-${feature.id()}`}\n            />\n            <Lollipop\n              {...props}\n              layoutRecord={layoutRecord}\n              feature={feature}\n              key={`body-${feature.id()}`}\n              selectedFeatureId={selectedFeatureId}\n            />\n          </React.Fragment>\n        )\n      })}\n    </svg>\n  )\n})\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default ConfigurationSchema(\n  'LollipopRenderer',\n  {\n    strokeColor: {\n      type: 'color',\n      description: 'the outer color of each lollipop',\n      defaultValue: 'green',\n      contextVariable: ['feature'],\n    },\n    innerColor: {\n      type: 'color',\n      description: 'the inner color of each lollipop',\n      defaultValue: '#7fc75f',\n      contextVariable: ['feature'],\n    },\n    strokeWidth: {\n      type: 'number',\n      description: 'width of the stroked border',\n      defaultValue: 4,\n      contextVariable: ['feature'],\n    },\n    radius: {\n      type: 'number',\n      description: 'radius in pixels of each lollipop body',\n      defaultValue: `jexl:sqrt(max(3, (get(feature,'score')*10)/3.14))`,\n      contextVariable: ['feature'],\n    },\n    caption: {\n      type: 'string',\n      description:\n        'the tooltip caption displayed when the mouse hovers over a lollipop',\n      defaultValue: `jexl:get(feature,'name')`,\n      contextVariable: ['feature'],\n    },\n    minStickLength: {\n      type: 'number',\n      description: 'minimum lollipop \"stick\" length, in pixels',\n      defaultValue: 5,\n    },\n    stickColor: {\n      type: 'color',\n      description: 'color of the lollipop stick',\n      defaultValue: 'black',\n      contextVariable: ['feature'],\n    },\n    stickWidth: {\n      type: 'number',\n      description: 'width in pixels of the lollipop stick',\n      defaultValue: 2,\n      contextVariable: ['feature'],\n    },\n    score: {\n      type: 'number',\n      description:\n        'the \"score\" of each lollipop, displayed as a number in the center of the circle',\n      defaultValue: `jexl:get(feature,'score')`,\n      contextVariable: ['feature'],\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { doesIntersect2 } from '@jbrowse/core/util/range'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\ninterface LayoutItem {\n  uniqueId: string\n  anchorLocation: number\n  width: number\n  height: number\n  data: { score: number }\n}\n\ntype LayoutEntry = LayoutItem & { x: number; y: number }\n\ntype LayoutMap = Map<string, LayoutEntry>\n\nexport class FloatingLayout {\n  width: number\n\n  totalHeight = 0\n\n  constructor({ width }: { width: number }) {\n    if (!width) {\n      throw new Error('width required to make a new FloatingLayout')\n    }\n    this.width = width\n  }\n\n  items: LayoutItem[] = []\n\n  layout: LayoutMap = new Map()\n\n  layoutDirty = false\n\n  add(\n    uniqueId: string,\n    anchorLocation: number,\n    width: number,\n    height: number,\n    data: { score: number },\n  ) {\n    this.items.push({ uniqueId, anchorLocation, width, height, data })\n    this.layoutDirty = true\n  }\n\n  /**\n   * @returns Map of `uniqueId => {x,y,anchorLocation,width,height,data}`\n   */\n  getLayout(configuration?: AnyConfigurationModel) {\n    if (!this.layoutDirty) {\n      return this.layout\n    }\n    if (!configuration) {\n      throw new Error('configuration object required')\n    }\n\n    const minY = readConfObject(configuration, 'minStickLength')\n\n    // sort them by score ascending, so higher scores will always end up\n    // stacked last (toward the bottom)\n    const sorted = this.items.sort((a, b) => a.data.score - b.data.score)\n\n    // bump them\n    let maxBottom = 0\n    const layoutEntries: [string, LayoutEntry][] = new Array(sorted.length)\n    for (let i = 0; i < sorted.length; i += 1) {\n      const currentItem = sorted[i]\n      const { anchorLocation, width, height } = currentItem\n      const start = anchorLocation - width / 2\n      const end = start + width\n      let top = minY\n      let bottom = top + height\n\n      // figure out how far down to put it\n      for (let j = 0; j < i; j += 1) {\n        const [, previouslyLaidOutItem] = layoutEntries[j]\n        const {\n          x: prevStart,\n          y: prevTop,\n          width: prevWidth,\n          height: prevHeight,\n        } = previouslyLaidOutItem\n        const prevEnd = prevStart + prevWidth\n        const prevBottom = prevTop + prevHeight\n        if (\n          doesIntersect2(prevStart, prevEnd, start, end) &&\n          doesIntersect2(prevTop, prevBottom, top, bottom)\n        ) {\n          // bump this one to the bottom of the previous one\n          top = prevBottom\n          bottom = top + height\n          j = -1 // we need to check all of them again after bumping\n        }\n      }\n\n      // record the entry and update the maxBottom\n      layoutEntries[i] = [\n        currentItem.uniqueId,\n        { ...currentItem, x: start, y: top },\n      ]\n      if (bottom > maxBottom) {\n        maxBottom = bottom\n      }\n    }\n\n    // try to tile them left to right all at the same level\n    // if they don't fit, try to alternate them on 2 levels, then 3\n    this.totalHeight = maxBottom\n    this.layout = new Map(layoutEntries)\n    this.layoutDirty = false\n    return this.layout\n  }\n\n  getTotalHeight() {\n    if (this.layoutDirty) {\n      throw new Error('getTotalHeight does not work when the layout is dirty.')\n    }\n    return this.totalHeight\n  }\n\n  serializeRegion() {\n    return this.toJSON()\n  }\n\n  toJSON() {\n    if (this.layoutDirty) {\n      throw new Error('toJSON does not work when the layout is dirty.')\n    }\n    return { pairs: [...this.getLayout()], totalHeight: this.getTotalHeight() }\n  }\n\n  static fromJSON() {\n    throw new Error('not supported')\n  }\n}\n\nexport class PrecomputedFloatingLayout {\n  layout: LayoutMap\n\n  totalHeight: number\n\n  constructor({\n    pairs,\n    totalHeight,\n  }: {\n    pairs: [string, LayoutEntry][]\n    totalHeight: number\n  }) {\n    this.layout = new Map(pairs)\n    this.totalHeight = totalHeight\n  }\n\n  add(uniqueId: string) {\n    if (!this.layout.has(uniqueId)) {\n      throw new Error(`layout error, precomputed layout is missing ${uniqueId}`)\n    }\n  }\n\n  getLayout() {\n    return this.layout\n  }\n\n  getTotalHeight() {\n    return this.totalHeight\n  }\n\n  static fromJSON(\n    json: ConstructorParameters<typeof PrecomputedFloatingLayout>[0],\n  ) {\n    return new PrecomputedFloatingLayout(json)\n  }\n}\n","import BoxRendererType, {\n  LayoutSession,\n} from '@jbrowse/core/pluggableElementTypes/renderers/BoxRendererType'\nimport MultiLayout from '@jbrowse/core/util/layouts/MultiLayout'\nimport { FloatingLayout, PrecomputedFloatingLayout } from './Layout'\n\nclass FloatingLayoutSession extends LayoutSession {\n  makeLayout() {\n    'sequenceAdapter'\n\n    const { end, start } = this.regions[0]\n    const widthPx = (end - start) / this.bpPerPx\n    return new MultiLayout(FloatingLayout, { width: widthPx })\n  }\n\n  layoutIsValid(/* layout */) {\n    return false // layout.left layout.width === this.width\n  }\n}\n\nexport default class extends BoxRendererType {\n  createSession(args) {\n    return new FloatingLayoutSession(args)\n  }\n\n  deserializeLayoutInClient(json) {\n    return new PrecomputedFloatingLayout(json)\n  }\n}\n","import DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { BaseLinearDisplayComponent } from '@jbrowse/plugin-linear-genome-view'\nimport {\n  configSchemaFactory as linearLollipopDisplayConfigSchemaFactory,\n  stateModelFactory as LinearLollipopDisplayStateModelFactory,\n} from './LinearLollipopDisplay'\nimport LollipopRenderer, {\n  configSchema as lollipopRendererConfigSchema,\n  ReactComponent as LollipopRendererReactComponent,\n} from './LollipopRenderer'\n\nexport default class extends Plugin {\n  name = 'LollipopPlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addRendererType(\n      () =>\n        new LollipopRenderer({\n          name: 'LollipopRenderer',\n          ReactComponent: LollipopRendererReactComponent,\n          configSchema: lollipopRendererConfigSchema,\n          pluginManager,\n        }),\n    )\n\n    pluginManager.addDisplayType(() => {\n      const configSchema =\n        linearLollipopDisplayConfigSchemaFactory(pluginManager)\n      return new DisplayType({\n        name: 'LinearLollipopDisplay',\n        configSchema,\n        stateModel: LinearLollipopDisplayStateModelFactory(configSchema),\n        trackType: 'LollipopTrack',\n        viewType: 'LinearGenomeView',\n        ReactComponent: BaseLinearDisplayComponent,\n      })\n    })\n  }\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { baseLinearDisplayConfigSchema } from '@jbrowse/plugin-linear-genome-view'\n\nexport function configSchemaFactory(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'LinearLollipopDisplay',\n    { renderer: pluginManager.pluggableConfigSchemaType('renderer') },\n    {\n      baseConfiguration: baseLinearDisplayConfigSchema,\n      explicitlyTyped: true,\n    },\n  )\n}\n","import {\n  AnyConfigurationSchemaType,\n  ConfigurationReference,\n} from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\nimport { BaseLinearDisplay } from '@jbrowse/plugin-linear-genome-view'\n\nexport function stateModelFactory(configSchema: AnyConfigurationSchemaType) {\n  return types\n    .compose(\n      'LinearArcDisplay',\n      BaseLinearDisplay,\n      types.model({\n        type: types.literal('LinearArcDisplay'),\n        configuration: ConfigurationReference(configSchema),\n      }),\n    )\n\n    .views(self => {\n      const { renderProps: superRenderProps } = self\n      return {\n        get blockType() {\n          return 'staticBlocks'\n        },\n        get renderDelay() {\n          return 500\n        },\n        renderProps() {\n          return {\n            ...superRenderProps(),\n            rpcDriverName: self.rpcDriverName,\n            config: self.configuration.renderer,\n          }\n        },\n        get rendererTypeName() {\n          return self.configuration.renderer.type\n        },\n      }\n    })\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { DisplayType } from '@jbrowse/core/pluggableElementTypes'\nimport { BaseLinearDisplayComponent } from '@jbrowse/plugin-linear-genome-view'\n\nimport { configSchemaFactory } from './configSchema'\nimport { stateModelFactory } from './model'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaFactory(pluginManager)\n    return new DisplayType({\n      name: 'LinearArcDisplay',\n      displayName: 'Arc display',\n      configSchema,\n      stateModel: stateModelFactory(configSchema),\n      trackType: 'FeatureTrack',\n      viewType: 'LinearGenomeView',\n      ReactComponent: BaseLinearDisplayComponent,\n    })\n  })\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { types } from 'mobx-state-tree'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { baseLinearDisplayConfigSchema } from '@jbrowse/plugin-linear-genome-view'\n\n/**\n * #config LinearArcDisplay\n */\nexport function configSchemaFactory(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'LinearArcDisplay',\n    {\n      /**\n       * #slot\n       */\n      renderer: types.optional(\n        pluginManager.pluggableConfigSchemaType('renderer'),\n        { type: 'ArcRenderer' },\n      ),\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: baseLinearDisplayConfigSchema,\n      explicitlyTyped: true,\n    },\n  )\n}\n","import React from 'react'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { bpSpanPx, measureText } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\nimport { Tooltip } from 'react-svg-tooltip'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction ArcRendering(props: any) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const onClick = (event: any, id: any) => {\n    const { onFeatureClick: handler } = props\n    if (!handler) {\n      return undefined\n    }\n    return handler(event, id)\n  }\n\n  const {\n    features,\n    config,\n    regions,\n    blockKey,\n    bpPerPx,\n    displayModel: { selectedFeatureId },\n  } = props\n  const [region] = regions\n  const arcsRendered = []\n\n  for (const feature of features.values()) {\n    const [left, right] = bpSpanPx(\n      feature.get('start'),\n      feature.get('end'),\n      region,\n      bpPerPx,\n    )\n\n    const featureId = feature.id()\n    const id = blockKey + '-' + featureId\n    let stroke = readConfObject(config, 'color', { feature })\n    let textStroke = 'black'\n    if (\n      selectedFeatureId &&\n      String(selectedFeatureId) === String(feature.id())\n    ) {\n      stroke = textStroke = 'red'\n    }\n    const label = readConfObject(config, 'label', { feature })\n    const caption = readConfObject(config, 'caption', { feature })\n    const strokeWidth = readConfObject(config, 'thickness', { feature }) || 1\n    const height = readConfObject(config, 'height', { feature }) || 100\n    const ref = React.createRef<SVGPathElement>()\n    const tooltipWidth = 20 + measureText(caption?.toString())\n\n    const t = 0.5\n    // formula: https://en.wikipedia.org/wiki/B%C3%A9zier_curve#Cubic_B%C3%A9zier_curves\n    const textYCoord =\n      (1 - t) * (1 - t) * (1 - t) * 0 +\n      3 * ((1 - t) * (1 - t)) * (t * height) +\n      3 * (1 - t) * (t * t) * height +\n      t * t * t * 0\n\n    arcsRendered.push(\n      <g key={id} onClick={e => onClick(e, featureId)}>\n        <path\n          id={id}\n          d={`M ${left} 0 C ${left} ${height}, ${right} ${height}, ${right} 0`}\n          stroke={stroke}\n          strokeWidth={strokeWidth}\n          fill=\"transparent\"\n          onClick={e => onClick(e, featureId)}\n          ref={ref}\n          pointerEvents=\"stroke\"\n        />\n        <Tooltip triggerRef={ref}>\n          <rect\n            x={12}\n            y={0}\n            width={tooltipWidth}\n            height={20}\n            rx={5}\n            ry={5}\n            fill=\"black\"\n            fillOpacity=\"50%\"\n          />\n          <text\n            x={22}\n            y={14}\n            fontSize={10}\n            fill=\"white\"\n            textLength={tooltipWidth - 20}\n          >\n            {caption}\n          </text>\n        </Tooltip>\n        <text\n          x={left + (right - left) / 2}\n          y={textYCoord + 3}\n          style={{ stroke: 'white', strokeWidth: '0.6em' }}\n        >\n          {label}\n        </text>\n        <text\n          x={left + (right - left) / 2}\n          y={textYCoord + 3}\n          style={{ stroke: textStroke }}\n        >\n          {label}\n        </text>\n      </g>,\n    )\n  }\n\n  const width = (region.end - region.start) / bpPerPx\n  const height = 500\n\n  return (\n    <svg\n      className=\"ArcRendering\"\n      width={width}\n      height={height}\n      style={{\n        outline: 'none',\n        position: 'relative',\n      }}\n    >\n      {arcsRendered}\n    </svg>\n  )\n}\n\nexport default observer(ArcRendering)\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config ArcRenderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst ArcRenderer = ConfigurationSchema(\n  'ArcRenderer',\n  {\n    /**\n     * #slot\n     */\n    color: {\n      type: 'color',\n      description: 'the color of the arcs',\n      defaultValue: 'darkblue',\n      contextVariable: ['feature'],\n    },\n    /**\n     * #slot\n     */\n    thickness: {\n      type: 'number',\n      description: 'the thickness of the arcs',\n      defaultValue: `jexl:logThickness(feature,'score')`,\n      contextVariable: ['feature'],\n    },\n    /**\n     * #slot\n     */\n    label: {\n      type: 'string',\n      description: 'the label to appear at the apex of the arcs',\n      defaultValue: `jexl:get(feature,'score')`,\n      contextVariable: ['feature'],\n    },\n    /**\n     * #slot\n     */\n    height: {\n      type: 'number',\n      description: 'the height of the arcs',\n      defaultValue: `jexl:log10(get(feature,'end')-get(feature,'start'))*50`,\n      contextVariable: ['feature'],\n    },\n    /**\n     * #slot\n     */\n    caption: {\n      type: 'string',\n      description:\n        'the caption to appear when hovering over any point on the arcs',\n      defaultValue: `jexl:get(feature,'name')`,\n      contextVariable: ['feature'],\n    },\n  },\n  { explicitlyTyped: true },\n)\nexport default ArcRenderer\n","import FeatureRendererType from '@jbrowse/core/pluggableElementTypes/renderers/FeatureRendererType'\n\nexport default class extends FeatureRendererType {}\n","import Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport LinearArcDisplayF from './LinearArcDisplay'\nimport ArcRendererF from './ArcRenderer'\nimport { Feature } from '@jbrowse/core/util'\n\nexport default class ArcPlugin extends Plugin {\n  name = 'ArcRenderer'\n  install(pluginManager: PluginManager) {\n    ArcRendererF(pluginManager)\n    LinearArcDisplayF(pluginManager)\n\n    pluginManager.jexl.addFunction(\n      'logThickness',\n      (feature: Feature, attributeName: string) => {\n        return Math.log(feature.get(attributeName) + 1)\n      },\n    )\n  }\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\n\nimport ReactComponent from './ArcRendering'\nimport configSchema from './configSchema'\nimport ArcRenderer from './ArcRenderer'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addRendererType(\n    () =>\n      new ArcRenderer({\n        name: 'ArcRenderer',\n        ReactComponent,\n        configSchema,\n        pluginManager,\n      }),\n  )\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport { types } from 'mobx-state-tree'\n\nexport const configSchema = ConfigurationSchema('AboutWidget', {})\n\nexport const stateModel = types.model('AboutWidget', {\n  id: ElementId,\n  type: types.literal('AboutWidget'),\n})\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport { types } from 'mobx-state-tree'\n\nexport const configSchema = ConfigurationSchema('HelpWidget', {})\n\nexport const stateModel = types.model('HelpWidget', {\n  id: ElementId,\n  type: types.literal('HelpWidget'),\n})\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport { types } from 'mobx-state-tree'\n\nexport const configSchema = ConfigurationSchema('ImportSessionWidget', {})\n\nexport const stateModel = types.model('ImportSessionWidget', {\n  id: ElementId,\n  type: types.literal('ImportSessionWidget'),\n})\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport { types } from 'mobx-state-tree'\n\nexport const configSchema = ConfigurationSchema('SessionManager', {})\n\nexport const stateModel = types.model('SessionManager', {\n  id: ElementId,\n  type: types.literal('SessionManager'),\n})\n","import { lazy } from 'react'\nimport WidgetType from '@jbrowse/core/pluggableElementTypes/WidgetType'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { SessionWithWidgets, isAbstractMenuManager } from '@jbrowse/core/util'\n\nimport HelpIcon from '@mui/icons-material/Help'\nimport InfoIcon from '@mui/icons-material/Info'\n\nimport {\n  configSchema as aboutConfigSchema,\n  stateModel as aboutStateModel,\n} from './AboutWidget'\nimport {\n  configSchema as helpConfigSchema,\n  stateModel as helpStateModel,\n} from './HelpWidget'\nimport {\n  configSchema as importSessionConfigSchema,\n  stateModel as importSessionStateModel,\n} from './ImportSessionWidget'\nimport {\n  configSchema as sessionManagerConfigSchema,\n  stateModel as sessionManagerStateModel,\n} from './SessionManager'\n\nexport default class extends Plugin {\n  name = 'MenusPlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addWidgetType(() => {\n      return new WidgetType({\n        name: 'AboutWidget',\n        heading: 'About',\n        configSchema: aboutConfigSchema,\n        stateModel: aboutStateModel,\n        ReactComponent: lazy(\n          () => import('./AboutWidget/components/AboutWidget'),\n        ),\n      })\n    })\n\n    pluginManager.addWidgetType(() => {\n      return new WidgetType({\n        name: 'HelpWidget',\n        heading: 'Help',\n        configSchema: helpConfigSchema,\n        stateModel: helpStateModel,\n        ReactComponent: lazy(\n          () => import('./HelpWidget/components/HelpWidget'),\n        ),\n      })\n    })\n\n    pluginManager.addWidgetType(() => {\n      return new WidgetType({\n        name: 'ImportSessionWidget',\n        heading: 'Import session',\n        configSchema: importSessionConfigSchema,\n        stateModel: importSessionStateModel,\n        ReactComponent: lazy(\n          () => import('./ImportSessionWidget/components/ImportSessionWidget'),\n        ),\n      })\n    })\n\n    pluginManager.addWidgetType(() => {\n      return new WidgetType({\n        name: 'SessionManager',\n        heading: 'Sessions',\n        configSchema: sessionManagerConfigSchema,\n        stateModel: sessionManagerStateModel,\n        ReactComponent: lazy(\n          () => import('./SessionManager/components/SessionManager'),\n        ),\n      })\n    })\n  }\n\n  configure(pluginManager: PluginManager) {\n    if (isAbstractMenuManager(pluginManager.rootModel)) {\n      pluginManager.rootModel.appendToMenu('Help', {\n        label: 'About',\n        icon: InfoIcon,\n        onClick: (session: SessionWithWidgets) => {\n          const widget = session.addWidget('AboutWidget', 'aboutWidget')\n          session.showWidget(widget)\n        },\n      })\n      pluginManager.rootModel.appendToMenu('Help', {\n        label: 'Help',\n        icon: HelpIcon,\n        onClick: (session: SessionWithWidgets) => {\n          const widget = session.addWidget('HelpWidget', 'helpWidget')\n          session.showWidget(widget)\n        },\n      })\n    }\n  }\n}\n","import {\n  BaseFeatureDataAdapter,\n  BaseOptions,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { NoAssemblyRegion } from '@jbrowse/core/util/types'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport SimpleFeature, { Feature } from '@jbrowse/core/util/simpleFeature'\nimport format from 'string-template'\n\nimport { Instance } from 'mobx-state-tree'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport MyConfigSchema from './configSchema'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { getSubAdapterType } from '@jbrowse/core/data_adapters/dataAdapterCache'\n\ninterface SPARQLEntry {\n  type: string\n  value: string\n  dataTypes?: string\n}\n\ninterface SPARQLBinding {\n  [key: string]: SPARQLEntry\n}\n\ninterface SPARQLResponseHead {\n  vars: string[]\n}\n\ninterface SPARQLResponseResults {\n  bindings: SPARQLBinding[]\n}\n\ninterface SPARQLResponse {\n  head: SPARQLResponseHead\n  results: SPARQLResponseResults\n}\n\ninterface SPARQLFeatureData {\n  start: number\n  end: number\n  strand: number\n  subfeatures?: SPARQLFeatureData[]\n  uniqueId: string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [propName: string]: any\n}\n\ninterface SPARQLFeature {\n  data: SPARQLFeatureData\n}\n\nexport default class SPARQLAdapter extends BaseFeatureDataAdapter {\n  private endpoint: string\n\n  private queryTemplate: string\n\n  private refNamesQueryTemplate: string\n\n  private additionalQueryParams: string[]\n\n  private configRefNames: string[]\n\n  private refNames: string[] | undefined\n\n  public constructor(\n    config: Instance<typeof MyConfigSchema>,\n    getSubAdapter?: getSubAdapterType,\n    pluginManager?: PluginManager,\n  ) {\n    super(config, getSubAdapter, pluginManager)\n    this.endpoint = readConfObject(config, 'endpoint').uri\n    this.queryTemplate = readConfObject(config, 'queryTemplate')\n    this.additionalQueryParams = readConfObject(config, 'additionalQueryParams')\n    this.refNamesQueryTemplate = readConfObject(config, 'refNamesQueryTemplate')\n    this.configRefNames = readConfObject(config, 'refNames')\n  }\n\n  public async getRefNames(opts: BaseOptions = {}): Promise<string[]> {\n    if (this.refNames) {\n      return this.refNames\n    }\n    let refNames = [] as string[]\n    if (this.refNamesQueryTemplate) {\n      const queryTemplate = encodeURIComponent(this.refNamesQueryTemplate)\n      const results = await this.querySparql(queryTemplate, opts)\n      refNames = this.resultsToRefNames(results)\n    } else if (this.configRefNames) {\n      refNames = this.configRefNames\n    }\n    this.refNames = refNames\n    return refNames\n  }\n\n  public getFeatures(query: NoAssemblyRegion, opts: BaseOptions = {}) {\n    return ObservableCreate<Feature>(async observer => {\n      const filledTemplate = encodeURIComponent(\n        format(this.queryTemplate, query),\n      )\n      const { refName } = query\n      const results = await this.querySparql(filledTemplate, opts)\n      this.resultsToFeatures(results, refName).forEach(feature => {\n        observer.next(feature)\n      })\n      observer.complete()\n    }, opts.signal)\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private async querySparql(query: string, opts?: BaseOptions): Promise<any> {\n    let additionalQueryParams = ''\n    if (this.additionalQueryParams.length) {\n      additionalQueryParams = `&${this.additionalQueryParams.join('&')}`\n    }\n    const signal = opts && opts.signal\n    const response = await fetch(\n      `${this.endpoint}?query=${query}${additionalQueryParams}`,\n      {\n        headers: { accept: 'application/json,application/sparql-results+json' },\n        signal,\n      },\n    )\n    return response.json()\n  }\n\n  private resultsToRefNames(response: SPARQLResponse): string[] {\n    const rows = ((response || {}).results || {}).bindings || []\n    if (!rows.length) {\n      return []\n    }\n    const fields = response.head.vars\n    if (!fields.includes('refName')) {\n      throw new Error('\"refName\" not found in refNamesQueryTemplate response')\n    }\n    return rows.map(row => row.refName.value)\n  }\n\n  private resultsToFeatures(\n    results: SPARQLResponse,\n    refName: string,\n  ): SimpleFeature[] {\n    const rows = ((results || {}).results || {}).bindings || []\n    if (!rows.length) {\n      return []\n    }\n    const fields = results.head.vars\n    const requiredFields = ['start', 'end', 'uniqueId']\n    requiredFields.forEach(requiredField => {\n      if (!fields.includes(requiredField)) {\n        console.error(\n          `Required field ${requiredField} missing from feature data`,\n        )\n      }\n    })\n    const seenFeatures: Record<string, SPARQLFeature> = {}\n    rows.forEach(row => {\n      const rawData: Record<string, string>[] = [{}]\n      fields.forEach(field => {\n        if (field in row) {\n          const { value } = row[field]\n          let idx = 0\n          while (field.startsWith('sub_')) {\n            field = field.slice(4)\n            idx += 1\n          }\n          while (idx > rawData.length - 1) {\n            rawData.push({})\n          }\n          rawData[idx][field] = value\n        }\n      })\n\n      rawData.forEach((rd, idx) => {\n        const { uniqueId } = rd\n        if (idx < rawData.length - 1) {\n          rawData[idx + 1].parentUniqueId = uniqueId\n        }\n        seenFeatures[uniqueId] = {\n          data: {\n            ...rd,\n            uniqueId,\n            refName,\n            start: parseInt(rd.start, 10),\n            end: parseInt(rd.end, 10),\n            strand: parseInt(rd.strand, 10) || 0,\n          },\n        }\n      })\n    })\n\n    // resolve subfeatures, keeping only top-level features in seenFeatures\n    for (const [uniqueId, f] of Object.entries(seenFeatures)) {\n      const pid = f.data.parentUniqueId\n      delete f.data.parentUniqueId\n      if (pid) {\n        const p = seenFeatures[pid]\n        if (p) {\n          if (!p.data.subfeatures) {\n            p.data.subfeatures = []\n          }\n          p.data.subfeatures.push({\n            ...f.data,\n            uniqueId,\n          })\n          delete seenFeatures[uniqueId]\n        } else {\n          const subfeatures = Object.values(seenFeatures)\n            .map(sf => sf.data.subfeatures)\n            .filter(sf => !!sf)\n            .flat()\n          let found = false\n          for (const subfeature of subfeatures) {\n            if (subfeature && subfeature.uniqueId === pid) {\n              if (!subfeature.subfeatures) {\n                subfeature.subfeatures = []\n              }\n              subfeature.subfeatures.push({\n                ...f.data,\n                uniqueId,\n              })\n              delete seenFeatures[uniqueId]\n              found = true\n              break\n            } else if (subfeature && subfeature.subfeatures) {\n              subfeatures.push(...subfeature.subfeatures)\n            }\n          }\n          if (!found) {\n            console.error(`Could not find parentID ${pid}`)\n          }\n        }\n      }\n    }\n\n    return Object.keys(seenFeatures).map(\n      seenFeature =>\n        new SimpleFeature({\n          ...seenFeatures[seenFeature].data,\n          uniqueId: seenFeature,\n          subfeatures: seenFeatures[seenFeature].data.subfeatures,\n        }),\n    )\n  }\n\n  public async hasDataForRefName(\n    refName: string,\n    opts: BaseOptions = {},\n  ): Promise<boolean> {\n    const refNames = await this.getRefNames(opts)\n    if (refNames.length && !refNames.includes(refName)) {\n      return false\n    }\n    return true\n  }\n\n  public freeResources(/* { region } */): void {}\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default ConfigurationSchema(\n  'SPARQLAdapter',\n  {\n    endpoint: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: 'https://somesite.com/sparql',\n        locationType: 'UriLocation',\n      },\n      description: 'URL of the SPARQL endpoint',\n    },\n    queryTemplate: {\n      type: 'text',\n      defaultValue: '',\n      description:\n        'SPARQL query where {start} {end} and {refName} will get replaced for each call',\n    },\n    refNamesQueryTemplate: {\n      type: 'text',\n      defaultValue: '',\n      description:\n        'SPARQL query that returns the possible refNames in a ?refName column',\n    },\n    refNames: {\n      type: 'stringArray',\n      defaultValue: [],\n      description:\n        'Possible refNames used by the SPARQL endpoint (ignored if \"refNamesQueryTemplate\" is provided)',\n    },\n    additionalQueryParams: {\n      type: 'stringArray',\n      defaultValue: [],\n      description:\n        'Additional parameters to add to the query, e.g. \"format=JSON\"',\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport {\n  AdapterClass as SPARQLAdapterClass,\n  configSchema as sparqlAdapterConfigSchema,\n} from './SPARQLAdapter'\nimport { AdapterGuesser, getFileName } from '@jbrowse/core/util/tracks'\n\nexport default class RdfPlugin extends Plugin {\n  name = 'RdfPlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addAdapterType(\n      () =>\n        new AdapterType({\n          name: 'SPARQLAdapter',\n          displayName: 'SPARQL adapter',\n          configSchema: sparqlAdapterConfigSchema,\n          AdapterClass: SPARQLAdapterClass,\n        }),\n    )\n    pluginManager.addToExtensionPoint(\n      'Core-guessAdapterForLocation',\n      (adapterGuesser: AdapterGuesser) => {\n        return (\n          file: FileLocation,\n          index?: FileLocation,\n          adapterHint?: string,\n        ) => {\n          const regexGuess = /\\/sparql$/i\n          const adapterName = 'SPARQLAdapter'\n          const fileName = getFileName(file)\n          if (regexGuess.test(fileName) || adapterHint === adapterName) {\n            return {\n              type: adapterName,\n              endpoint: file,\n            }\n          }\n          return adapterGuesser(file, index, adapterHint)\n        }\n      },\n    )\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config TwoBitAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst TwoBitAdapter = ConfigurationSchema(\n  'TwoBitAdapter',\n  {\n    /**\n     * #slot\n     */\n    twoBitLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/my.2bit', locationType: 'UriLocation' },\n    },\n    /**\n     * #slot\n     */\n    chromSizesLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/default.chrom.sizes',\n        locationType: 'UriLocation',\n      },\n      description:\n        'An optional chrom.sizes file can be supplied to speed up loading since parsing the twobit file can take time',\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default TwoBitAdapter\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { createJBrowseTheme } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\nimport {\n  Feature,\n  Region,\n  bpSpanPx,\n  revcom,\n  complement,\n  defaultStarts,\n  defaultStops,\n  defaultCodonTable,\n  generateCodonTable,\n} from '@jbrowse/core/util'\nimport { Theme } from '@mui/material'\n\nfunction Translation(props: {\n  codonTable: Record<string, string>\n  seq: string\n  frame: number\n  bpPerPx: number\n  region: Region\n  reverse?: boolean\n  height: number\n  y: number\n  theme?: Theme\n}) {\n  const {\n    codonTable,\n    seq,\n    frame,\n    bpPerPx,\n    region,\n    height,\n    y,\n    reverse = false,\n    theme,\n  } = props\n  const scale = bpPerPx\n\n  // the tilt variable normalizes the frame to where we are starting from,\n  // which increases consistency across blocks\n  const tilt = 3 - (region.start % 3)\n\n  // the effectiveFrame incorporates tilt and the frame to say what the\n  // effective frame that is plotted. The +3 is for when frame is -2 and this\n  // can otherwise result in effectiveFrame -1\n  const effectiveFrame = (frame + tilt + 3) % 3\n\n  const seqSliced = seq.slice(effectiveFrame)\n\n  const translated: { letter: string; codon: string }[] = []\n  for (let i = 0; i < seqSliced.length; i += 3) {\n    const codon = seqSliced.slice(i, i + 3)\n    const normalizedCodon = reverse ? revcom(codon) : codon\n    const aminoAcid = codonTable[normalizedCodon] || ''\n    translated.push({ letter: aminoAcid, codon: normalizedCodon.toUpperCase() })\n  }\n\n  const w = (1 / scale) * 3\n  const drop = region.start === 0 ? 0 : w\n  const render = 1 / bpPerPx >= 12\n  const width = (region.end - region.start) / bpPerPx\n\n  const map = ['#d8d8d8', '#adadad', '#8f8f8f'].reverse()\n  return (\n    <>\n      {translated.map((element, index) => {\n        const x = region.reversed\n          ? width - (w * (index + 1) + effectiveFrame / scale - drop)\n          : w * index + effectiveFrame / scale - drop\n        const { letter, codon } = element\n        return (\n          <React.Fragment key={`${index}-${letter}`}>\n            <rect\n              x={x}\n              y={y}\n              width={\n                render ? w : w + 0.7 /* small fudge factor when zoomed out*/\n              }\n              height={height}\n              stroke={render ? '#555' : 'none'}\n              fill={\n                defaultStarts.includes(codon)\n                  ? theme?.palette.startCodon\n                  : defaultStops.includes(codon)\n                  ? theme?.palette.stopCodon\n                  : map[Math.abs(frame)]\n              }\n            />\n            {render ? (\n              <text\n                x={x + w / 2}\n                y={y + height / 2}\n                dominantBaseline=\"middle\"\n                textAnchor=\"middle\"\n              >\n                {letter}\n              </text>\n            ) : null}\n          </React.Fragment>\n        )\n      })}\n    </>\n  )\n}\n\nfunction DNA(props: {\n  seq: string\n  theme: any\n  bpPerPx: number\n  height: number\n  region: Region\n  feature: Feature\n  y: number\n}) {\n  const { bpPerPx, region, feature, theme, height, seq, y } = props\n  const render = 1 / bpPerPx >= 12\n\n  const [leftPx, rightPx] = bpSpanPx(\n    feature.get('start'),\n    feature.get('end'),\n    region,\n    bpPerPx,\n  )\n  const reverse = region.reversed\n  const len = feature.get('end') - feature.get('start')\n  const w = Math.max((rightPx - leftPx) / len, 0.8)\n\n  return (\n    <>\n      {seq.split('').map((letter, index) => {\n        const color = theme.palette.bases[letter.toUpperCase()]\n        const x = reverse ? rightPx - (index + 1) * w : leftPx + index * w\n        return (\n          <React.Fragment key={index}>\n            <rect\n              x={x}\n              y={y}\n              width={w}\n              height={height}\n              fill={color ? color.main : '#aaa'}\n              stroke={render ? '#555' : 'none'}\n            />\n            {render ? (\n              <text\n                x={x + w / 2}\n                y={y + height / 2}\n                dominantBaseline=\"middle\"\n                textAnchor=\"middle\"\n                fill={\n                  color ? theme.palette.getContrastText(color.main) : 'black'\n                }\n              >\n                {letter}\n              </text>\n            ) : null}\n          </React.Fragment>\n        )\n      })}\n    </>\n  )\n}\n\nconst SequenceSVG = ({\n  regions,\n  theme: configTheme,\n  features = new Map(),\n  showReverse = true,\n  showForward = true,\n  showTranslation = true,\n  bpPerPx,\n}: any) => {\n  const [region] = regions\n  const theme = createJBrowseTheme(configTheme)\n  const codonTable = generateCodonTable(defaultCodonTable)\n  const height = 20\n  const [feature] = [...features.values()]\n  if (!feature) {\n    return null\n  }\n  const seq: string = feature.get('seq')\n  if (!seq) {\n    return null\n  }\n\n  // incrementer for the y-position of the current sequence being rendered\n  // (applies to both translation rows and dna rows)\n  let currY = -20\n\n  return (\n    <>\n      {/* the upper translation row. if the view is reversed, the reverse\n        translation is on the top */}\n      {showTranslation && (region.reversed ? showReverse : showForward)\n        ? [2, 1, 0].map(index => (\n            <Translation\n              key={`translation-${index}`}\n              seq={seq}\n              y={(currY += 20)}\n              codonTable={codonTable}\n              frame={index}\n              bpPerPx={bpPerPx}\n              region={region}\n              theme={theme}\n              height={height}\n              reverse={region.reversed}\n            />\n          ))\n        : null}\n\n      {showForward ? (\n        <DNA\n          height={height}\n          y={(currY += 20)}\n          feature={feature}\n          region={region}\n          seq={region.reversed ? complement(seq) : seq}\n          bpPerPx={bpPerPx}\n          theme={theme}\n        />\n      ) : null}\n\n      {showReverse ? (\n        <DNA\n          height={height}\n          y={(currY += 20)}\n          feature={feature}\n          region={region}\n          seq={region.reversed ? seq : complement(seq)}\n          bpPerPx={bpPerPx}\n          theme={theme}\n        />\n      ) : null}\n\n      {/* the lower translation row. if the view is reversed, the forward\n        translation is on the bottom */}\n      {showTranslation && (region.reversed ? showForward : showReverse)\n        ? [0, -1, -2].map(index => (\n            <Translation\n              key={`rev-translation-${index}`}\n              seq={seq}\n              y={(currY += 20)}\n              codonTable={codonTable}\n              frame={index}\n              bpPerPx={bpPerPx}\n              region={region}\n              theme={theme}\n              height={height}\n              reverse={!region.reversed}\n            />\n          ))\n        : null}\n    </>\n  )\n}\n\nconst Wrapper = ({\n  exportSVG,\n  width,\n  totalHeight,\n  children,\n}: {\n  exportSVG?: { rasterizeLayers: boolean }\n  width: number\n  totalHeight: number\n  children: React.ReactNode\n}) => {\n  return exportSVG ? (\n    <>{children}</>\n  ) : (\n    <svg\n      data-testid=\"sequence_track\"\n      width={width}\n      height={totalHeight}\n      style={{ width, height: totalHeight }}\n    >\n      {children}\n    </svg>\n  )\n}\n\nfunction Sequence(props: {\n  exportSVG?: { rasterizeLayers: boolean }\n  features: Map<string, Feature>\n  regions: Region[]\n  bpPerPx: number\n  config: AnyConfigurationModel\n  theme?: any\n  showForward?: boolean\n  showReverse?: boolean\n  showTranslation?: boolean\n}) {\n  const { regions, bpPerPx } = props\n  const [region] = regions\n  const width = (region.end - region.start) / bpPerPx\n  const totalHeight = 200\n\n  return (\n    <Wrapper {...props} totalHeight={totalHeight} width={width}>\n      <SequenceSVG {...props} />\n    </Wrapper>\n  )\n}\n\nexport default observer(Sequence)\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config DivSequenceRenderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst DivSequenceRenderer = ConfigurationSchema(\n  'DivSequenceRenderer',\n  {\n    /**\n     * #slot\n     */\n    height: {\n      type: 'number',\n      description: 'height in pixels of each line of sequence',\n      defaultValue: 16,\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default DivSequenceRenderer\n","import PluginManager from '@jbrowse/core/PluginManager'\n\nimport { Region } from '@jbrowse/core/util/types'\nimport FeatureRendererType from '@jbrowse/core/pluggableElementTypes/renderers/FeatureRendererType'\nimport ReactComponent from './components/DivSequenceRendering'\nimport configSchema from './configSchema'\n\n/* adjust in both directions */\nclass DivSequenceRenderer extends FeatureRendererType {\n  supportsSVG = true\n\n  getExpandedRegion(region: Region) {\n    return {\n      ...region,\n      start: Math.max(region.start - 3, 0),\n      end: region.end + 3,\n    }\n  }\n}\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addRendererType(\n    () =>\n      new DivSequenceRenderer({\n        name: 'DivSequenceRenderer',\n        ReactComponent,\n        configSchema,\n        pluginManager,\n      }),\n  )\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n/**\n * #config BgzipFastaAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst BgzipFastaAdapter = ConfigurationSchema(\n  'BgzipFastaAdapter',\n  {\n    /**\n     * #slot\n     */\n    fastaLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/seq.fa.gz', locationType: 'UriLocation' },\n    },\n    /**\n     * #slot\n     */\n    faiLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/seq.fa.gz.fai',\n        locationType: 'UriLocation',\n      },\n    },\n    /**\n     * #slot\n     */\n    metadataLocation: {\n      description: 'Optional metadata file',\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/fa.metadata.yaml',\n        locationType: 'UriLocation',\n      },\n    },\n    /**\n     * #slot\n     */\n    gziLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/seq.fa.gz.gzi',\n        locationType: 'UriLocation',\n      },\n    },\n  },\n  { explicitlyTyped: true },\n)\nexport default BgzipFastaAdapter\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config ChromSizesAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst ChromSizesAdapter = ConfigurationSchema(\n  'ChromSizesAdapter',\n  {\n    /**\n     * #slot\n     */\n    chromSizesLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/species.chrom.sizes',\n        locationType: 'UriLocation',\n      },\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default ChromSizesAdapter\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config IndexedFastaAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst IndexedFastaAdapter = ConfigurationSchema(\n  'IndexedFastaAdapter',\n  {\n    /**\n     * #slot\n     */\n    fastaLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/seq.fa', locationType: 'UriLocation' },\n    },\n    /**\n     * #slot\n     */\n    faiLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/seq.fa.fai', locationType: 'UriLocation' },\n    },\n    /**\n     * #slot\n     */\n    metadataLocation: {\n      description: 'Optional metadata file',\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/fa.metadata.yaml',\n        locationType: 'UriLocation',\n      },\n    },\n  },\n  { explicitlyTyped: true },\n)\nexport default IndexedFastaAdapter\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config SequenceSearchAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = ConfigurationSchema(\n  'SequenceSearchAdapter',\n  {\n    /**\n     * #slot\n     */\n    search: {\n      type: 'string',\n      defaultValue: '',\n      description: 'Search string or regex to search for',\n    },\n    /**\n     * #slot\n     */\n    sequenceAdapter: {\n      type: 'frozen',\n      defaultValue: null,\n    },\n    /**\n     * #slot\n     */\n    searchForward: {\n      type: 'boolean',\n      defaultValue: true,\n    },\n    /**\n     * #slot\n     */\n    searchReverse: {\n      type: 'boolean',\n      defaultValue: true,\n    },\n    /**\n     * #slot\n     */\n    caseInsensitive: {\n      type: 'boolean',\n      defaultValue: true,\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default configSchema\n","import PluginManager from '@jbrowse/core/PluginManager'\n\nimport TrackType from '@jbrowse/core/pluggableElementTypes/TrackType'\nimport { createBaseTrackModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport { createReferenceSeqTrackConfig } from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addTrackType(() => {\n    const configSchema = createReferenceSeqTrackConfig(pluginManager)\n\n    return new TrackType({\n      name: 'ReferenceSequenceTrack',\n      displayName: 'Reference sequence track',\n      configSchema,\n      stateModel: createBaseTrackModel(\n        pluginManager,\n        'ReferenceSequenceTrack',\n        configSchema,\n      ),\n    })\n  })\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { types } from 'mobx-state-tree'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\n// Note: this is primarily a copy of createBaseTrackConfig, except with a\n// subset of the config slots, to avoid including fields that don't make sense\n// for the ReferenceSequenceTrack\n\n/**\n * #config ReferenceSequenceTrack\n * used to display base level DNA sequence tracks\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport function createReferenceSeqTrackConfig(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'ReferenceSequenceTrack',\n    {\n      /**\n       * #slot\n       * configuration for track adapter\n       */\n      adapter: pluginManager.pluggableConfigSchemaType('adapter'),\n\n      /**\n       * #slot\n       * configuration for the displays e.g. LinearReferenceSequenceDisplay\n       */\n      displays: types.array(pluginManager.pluggableConfigSchemaType('display')),\n\n      /**\n       * #slot\n       */\n      name: {\n        type: 'string',\n        description:\n          'optional track name, otherwise uses the \"Reference sequence (assemblyName)\"',\n        defaultValue: '',\n      },\n\n      /**\n       * #slot\n       */\n      metadata: {\n        type: 'frozen',\n        description: 'anything to add about this track',\n        defaultValue: {},\n      },\n\n      formatAbout: ConfigurationSchema('FormatAbout', {\n        /**\n         * #slot formatAbout.config\n         */\n        config: {\n          type: 'frozen',\n          description: 'formats configuration in about dialog',\n          defaultValue: {},\n          contextVariable: ['config'],\n        },\n\n        /**\n         * #slot formatAbout.hideUris\n         */\n        hideUris: {\n          type: 'boolean',\n          defaultValue: false,\n        },\n      }),\n    },\n    {\n      preProcessSnapshot: s => {\n        const snap = JSON.parse(JSON.stringify(s))\n        const displayTypes = new Set()\n        const { displays = [] } = snap\n        if (snap.trackId !== 'placeholderId') {\n          // Gets the displays on the track snapshot and the possible displays\n          // from the track type and adds any missing possible displays to the\n          // snapshot\n          displays.forEach((d: any) => d && displayTypes.add(d.type))\n          const trackType = pluginManager.getTrackType(snap.type)\n          trackType.displayTypes.forEach(displayType => {\n            if (!displayTypes.has(displayType.name)) {\n              displays.push({\n                displayId: `${snap.trackId}-${displayType.name}`,\n                type: displayType.name,\n              })\n            }\n          })\n        }\n        return { ...snap, displays }\n      },\n      /**\n       * #identifier\n       * all tracks have a globally unique 'trackId'\n       */\n      explicitIdentifier: 'trackId',\n      explicitlyTyped: true,\n      actions: (self: any) => ({\n        addDisplayConf(displayConf: { type: string; displayId: string }) {\n          const { type } = displayConf\n          if (!type) {\n            throw new Error(`unknown display type ${type}`)\n          }\n          const display = self.displays.find(\n            (d: any) => d && d.displayId === displayConf.displayId,\n          )\n          if (display) {\n            return display\n          }\n          const length = self.displays.push(displayConf)\n          return self.displays[length - 1]\n        },\n      }),\n    },\n  )\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { default as divSequenceRendererConfigSchema } from '../DivSequenceRenderer/configSchema'\n\n/**\n * #config LinearReferenceSequenceDisplay\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport const configSchema = ConfigurationSchema(\n  'LinearReferenceSequenceDisplay',\n  {\n    /**\n     * #slot\n     */\n    renderer: divSequenceRendererConfigSchema,\n  },\n  { explicitIdentifier: 'displayId', explicitlyTyped: true },\n)\n","import { DisplayType } from '@jbrowse/core/pluggableElementTypes'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { BaseLinearDisplayComponent } from '@jbrowse/plugin-linear-genome-view'\n\nimport { configSchema } from './configSchema'\nimport { modelFactory } from './model'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addDisplayType(() => {\n    const stateModel = modelFactory(configSchema)\n    return new DisplayType({\n      name: 'LinearReferenceSequenceDisplay',\n      configSchema,\n      stateModel,\n      displayName: 'Reference sequence display',\n      trackType: 'ReferenceSequenceTrack',\n      viewType: 'LinearGenomeView',\n      ReactComponent: BaseLinearDisplayComponent,\n    })\n  })\n}\n","import { addDisposer, types } from 'mobx-state-tree'\nimport {\n  BaseLinearDisplay,\n  LinearGenomeViewModel,\n} from '@jbrowse/plugin-linear-genome-view'\nimport {\n  AnyConfigurationSchemaType,\n  ConfigurationReference,\n} from '@jbrowse/core/configuration'\nimport { getContainingView } from '@jbrowse/core/util'\nimport { autorun } from 'mobx'\n\ntype LGV = LinearGenomeViewModel\n\n/**\n * #stateModel LinearReferenceSequenceDisplay\n * base model `BaseLinearDisplay`\n */\nexport function modelFactory(configSchema: AnyConfigurationSchemaType) {\n  return types\n    .compose(\n      'LinearReferenceSequenceDisplay',\n      BaseLinearDisplay,\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LinearReferenceSequenceDisplay'),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n        /**\n         * #property\n         */\n        showForward: true,\n        /**\n         * #property\n         */\n        showReverse: true,\n        /**\n         * #property\n         */\n        showTranslation: true,\n      }),\n    )\n    .views(self => {\n      const { renderProps: superRenderProps } = self\n      return {\n        /**\n         * #method\n         */\n        renderProps() {\n          const { showForward, rpcDriverName, showReverse, showTranslation } =\n            self\n          return {\n            ...superRenderProps(),\n            config: self.configuration.renderer,\n            rpcDriverName,\n            showForward,\n            showReverse,\n            showTranslation,\n          }\n        },\n      }\n    })\n    .views(self => ({\n      /**\n       * #method\n       */\n      regionCannotBeRendered(/* region */) {\n        const view = getContainingView(self) as LGV\n        return view?.bpPerPx >= 1 ? 'Zoom in to see sequence' : undefined\n      },\n      /**\n       * #getter\n       */\n      get rendererTypeName() {\n        return self.configuration.renderer.type\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      toggleShowForward() {\n        self.showForward = !self.showForward\n      },\n      /**\n       * #action\n       */\n      toggleShowReverse() {\n        self.showReverse = !self.showReverse\n      },\n      /**\n       * #action\n       */\n      toggleShowTranslation() {\n        self.showTranslation = !self.showTranslation\n      },\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(() => {\n            const view = getContainingView(self) as LGV\n            if (view?.bpPerPx >= 1) {\n              self.setHeight(50)\n            } else {\n              const { showTranslation, showReverse, showForward } = self\n              const r1 = showReverse && showTranslation ? 60 : 0\n              const r2 = showForward && showTranslation ? 60 : 0\n              const t = r1 + r2\n              const r = showReverse ? 20 : 0\n              const s = showForward ? 20 : 0\n              self.setHeight(t + r + s)\n            }\n          }),\n        )\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       */\n      trackMenuItems() {\n        return [\n          {\n            label: 'Show forward',\n            type: 'checkbox',\n            checked: self.showForward,\n            onClick: () => self.toggleShowForward(),\n          },\n          {\n            label: 'Show reverse',\n            type: 'checkbox',\n            checked: self.showReverse,\n            onClick: () => self.toggleShowReverse(),\n          },\n          {\n            label: 'Show translation',\n            type: 'checkbox',\n            checked: self.showTranslation,\n            onClick: () => self.toggleShowTranslation(),\n          },\n        ]\n      },\n    }))\n}\n","import Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\nimport TwoBitAdapterF from './TwoBitAdapter'\nimport DivSequenceRendererF from './DivSequenceRenderer'\nimport BgzipFastaAdapterF from './BgzipFastaAdapter'\nimport ChromSizesAdapterF from './ChromSizesAdapter'\nimport IndexedFastaAdapterF from './IndexedFastaAdapter'\nimport SequenceSearchAdapterF from './SequenceSearchAdapter'\nimport ReferenceSequenceTrackF from './ReferenceSequenceTrack'\nimport LinearReferenceSequenceDisplayF from './LinearReferenceSequenceDisplay'\nimport createExtensionPoints from './createExtensionPoints'\n\nexport default class SequencePlugin extends Plugin {\n  name = 'SequencePlugin'\n\n  install(pluginManager: PluginManager) {\n    DivSequenceRendererF(pluginManager)\n    TwoBitAdapterF(pluginManager)\n    BgzipFastaAdapterF(pluginManager)\n    ChromSizesAdapterF(pluginManager)\n    IndexedFastaAdapterF(pluginManager)\n    SequenceSearchAdapterF(pluginManager)\n    ReferenceSequenceTrackF(pluginManager)\n    LinearReferenceSequenceDisplayF(pluginManager)\n    createExtensionPoints(pluginManager)\n  }\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'TwoBitAdapter',\n        displayName: 'TwoBit adapter',\n        configSchema,\n        adapterMetadata: {\n          hiddenFromGUI: true,\n        },\n        getAdapterClass: () => import('./TwoBitAdapter').then(r => r.default),\n      }),\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'BgzipFastaAdapter',\n        displayName: 'Bgzip-indexed FASTA adapter',\n        configSchema,\n        adapterMetadata: {\n          hiddenFromGUI: true,\n        },\n        getAdapterClass: () =>\n          import('./BgzipFastaAdapter').then(r => r.default),\n      }),\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'ChromSizesAdapter',\n        displayName: 'Chrom sizes adapter',\n        configSchema,\n        adapterMetadata: {\n          hiddenFromGUI: true,\n        },\n        getAdapterClass: () =>\n          import('./ChromSizesAdapter').then(r => r.default),\n      }),\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'IndexedFastaAdapter',\n        displayName: 'Indexed FASTA adapter',\n        configSchema,\n        adapterMetadata: {\n          hiddenFromGUI: true,\n        },\n        getAdapterClass: () =>\n          import('./IndexedFastaAdapter').then(r => r.default),\n      }),\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'SequenceSearchAdapter',\n        displayName: 'Sequence search adapter',\n        adapterMetadata: {\n          hiddenFromGUI: true,\n        },\n        configSchema,\n        getAdapterClass: () =>\n          import('./SequenceSearchAdapter').then(r => r.default),\n      }),\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport {\n  makeIndex,\n  getFileName,\n  AdapterGuesser,\n  TrackTypeGuesser,\n} from '@jbrowse/core/util/tracks'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addToExtensionPoint(\n    'Core-guessAdapterForLocation',\n    (adapterGuesser: AdapterGuesser) => {\n      return (\n        file: FileLocation,\n        index?: FileLocation,\n        adapterHint?: string,\n      ) => {\n        const regexGuess = /\\.2bit$/i\n        const adapterName = 'TwoBitAdapter'\n        const fileName = getFileName(file)\n        const obj = {\n          type: adapterName,\n          twoBitLocation: file,\n        }\n        if (regexGuess.test(fileName) && !adapterHint) {\n          return obj\n        } else if (adapterHint === adapterName) {\n          return obj\n        }\n        return adapterGuesser(file, index, adapterHint)\n      }\n    },\n  )\n  pluginManager.addToExtensionPoint(\n    'Core-guessTrackTypeForLocation',\n    (trackTypeGuesser: TrackTypeGuesser) => {\n      return (adapterName: string) => {\n        if (adapterName === 'TwoBitAdapter') {\n          return 'ReferenceSequenceTrack'\n        }\n        return trackTypeGuesser(adapterName)\n      }\n    },\n  )\n\n  pluginManager.addToExtensionPoint(\n    'Core-guessAdapterForLocation',\n    (adapterGuesser: AdapterGuesser) => {\n      return (\n        file: FileLocation,\n        index?: FileLocation,\n        adapterHint?: string,\n      ) => {\n        const regexGuess = /\\.(fa|fasta|fas|fna|mfa)$/i\n        const adapterName = 'IndexedFastaAdapter'\n        const fileName = getFileName(file)\n        const obj = {\n          type: adapterName,\n          fastaLocation: file,\n          faiLocation: index || makeIndex(file, '.fai'),\n        }\n\n        if (regexGuess.test(fileName) && !adapterHint) {\n          return obj\n        } else if (adapterHint === adapterName) {\n          return obj\n        }\n        return adapterGuesser(file, index, adapterHint)\n      }\n    },\n  )\n  pluginManager.addToExtensionPoint(\n    'Core-guessTrackTypeForLocation',\n    (trackTypeGuesser: TrackTypeGuesser) => {\n      return (adapterName: string) => {\n        if (adapterName === 'IndexedFastaAdapter') {\n          return 'ReferenceSequenceTrack'\n        }\n        return trackTypeGuesser(adapterName)\n      }\n    },\n  )\n\n  pluginManager.addToExtensionPoint(\n    'Core-guessAdapterForLocation',\n    (adapterGuesser: AdapterGuesser) => {\n      return (\n        file: FileLocation,\n        index?: FileLocation,\n        adapterHint?: string,\n      ) => {\n        const regexGuess = /\\.(fa|fasta|fas|fna|mfa)\\.b?gz$/i\n        const adapterName = 'BgzipFastaAdapter'\n        const fileName = getFileName(file)\n        const obj = {\n          type: adapterName,\n          faiLocation: makeIndex(file, '.fai'),\n          gziLocation: makeIndex(file, '.gzi'),\n        }\n\n        if (regexGuess.test(fileName) && !adapterHint) {\n          return obj\n        } else if (adapterHint === adapterName) {\n          return obj\n        }\n        return adapterGuesser(file, index, adapterHint)\n      }\n    },\n  )\n  pluginManager.addToExtensionPoint(\n    'Core-guessTrackTypeForLocation',\n    (trackTypeGuesser: TrackTypeGuesser) => {\n      return (adapterName: string) => {\n        if (adapterName === 'BgzipFastaAdapter') {\n          return 'ReferenceSequenceTrack'\n        }\n        return trackTypeGuesser(adapterName)\n      }\n    },\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useTheme } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { isAlive, isStateTreeNode } from 'mobx-state-tree'\nimport { measureText, getViewParams, Feature, Region } from '@jbrowse/core/util'\nimport { DisplayModel } from './util'\n\ninterface ViewParams {\n  start: number\n  end: number\n  offsetPx: number\n  offsetPx1: number\n}\n\nexport default observer(function ({\n  text,\n  x,\n  y,\n  region,\n  reversed,\n  bpPerPx,\n  exportSVG,\n  feature,\n  viewParams,\n  color = 'black',\n  fontHeight = 11,\n  featureWidth = 0,\n  allowedWidthExpansion = 0,\n  displayModel = {},\n}: {\n  text: string\n  x: number\n  y: number\n  color?: string\n  fontHeight?: number\n  featureWidth?: number\n  bpPerPx: number\n  allowedWidthExpansion?: number\n  feature: Feature\n  reversed?: boolean\n  displayModel?: DisplayModel\n  exportSVG?: unknown\n  region: Region\n  viewParams: ViewParams\n}) {\n  const totalWidth = featureWidth + allowedWidthExpansion\n  const measuredTextWidth = measureText(text, fontHeight)\n  const params =\n    isStateTreeNode(displayModel) && isAlive(displayModel)\n      ? getViewParams(displayModel)\n      : viewParams\n\n  const viewLeft = reversed ? params.end : params.start\n\n  const [labelVisible, setLabelVisible] = useState(exportSVG)\n  const theme = useTheme()\n\n  // we use an effect to set the label visible because there can be a\n  // mismatch between the server and the client after hydration due to the\n  // floating labels. if we are exporting an SVG we allow it as is though and\n  // do not use the effetct\n  useEffect(() => {\n    setLabelVisible(true)\n  }, [])\n\n  if (isStateTreeNode(region) && !isAlive(region)) {\n    return null\n  }\n\n  const rstart = region.start\n  const rend = region.end\n  const fstart = feature.get('start')\n  const fend = feature.get('end')\n\n  const featureWidthBp = measuredTextWidth * bpPerPx\n\n  // this tricky bit of code helps smooth over block boundaries\n  // not supported for reverse mode currently\n  // reason: reverse mode allocates space for the label in the \"normal\n  // forward orientation\" making it hard to slide. The reverse mode should\n  // allocate the label space in the reverse orientation to slide it\n  if (\n    viewLeft < rend &&\n    viewLeft > rstart &&\n    fstart < viewLeft &&\n    viewLeft + featureWidthBp < fend\n  ) {\n    x = params.offsetPx\n  } else if (\n    fstart < viewLeft &&\n    viewLeft + featureWidthBp < fend &&\n    viewLeft + featureWidthBp > rstart &&\n    viewLeft + featureWidthBp < rend\n  ) {\n    x = params.offsetPx1\n  }\n\n  return labelVisible ? (\n    <text\n      x={x}\n      y={y + fontHeight}\n      fill={color === '#f0f' ? theme.palette.text.primary : color}\n      fontSize={fontHeight}\n    >\n      {measuredTextWidth > totalWidth\n        ? `${text.slice(0, totalWidth / (fontHeight * 0.6))}...`\n        : text}\n    </text>\n  ) : null\n})\n","import React from 'react'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { Feature, Region } from '@jbrowse/core/util'\nimport { SceneGraph } from '@jbrowse/core/util/layouts'\nimport { observer } from 'mobx-react'\n\n// locals\nimport type { DisplayModel } from './util'\nimport FeatureLabel from './FeatureLabel'\n\nfunction FeatureGlyph(props: {\n  feature: Feature\n  rootLayout: SceneGraph\n  config: AnyConfigurationModel\n  name: string\n  description: string\n  shouldShowName: boolean\n  shouldShowDescription: boolean\n  fontHeight: number\n  allowedWidthExpansion: number\n  exportSVG?: unknown\n  displayModel?: DisplayModel\n  selected?: boolean\n  reversed?: boolean\n  topLevel?: boolean\n  region: Region\n  viewParams: {\n    end: number\n    start: number\n    offsetPx: number\n    offsetPx1: number\n  }\n  bpPerPx: number\n}) {\n  const {\n    feature,\n    rootLayout,\n    config,\n    name,\n    description,\n    shouldShowName,\n    shouldShowDescription,\n  } = props\n\n  const featureLayout = rootLayout.getSubRecord(String(feature.id()))\n  if (!featureLayout) {\n    return null\n  }\n  const { GlyphComponent } = featureLayout.data || {}\n\n  return (\n    <g>\n      <GlyphComponent featureLayout={featureLayout} {...props} />\n      {shouldShowName ? (\n        <FeatureLabel\n          text={name}\n          x={rootLayout.getSubRecord('nameLabel')?.absolute.left || 0}\n          y={rootLayout.getSubRecord('nameLabel')?.absolute.top || 0}\n          color={readConfObject(config, ['labels', 'nameColor'], { feature })}\n          featureWidth={featureLayout.width}\n          {...props}\n        />\n      ) : null}\n      {shouldShowDescription ? (\n        <FeatureLabel\n          text={description}\n          x={rootLayout.getSubRecord('descriptionLabel')?.absolute.left || 0}\n          y={rootLayout.getSubRecord('descriptionLabel')?.absolute.top || 0}\n          color={readConfObject(config, ['labels', 'descriptionColor'], {\n            feature,\n          })}\n          featureWidth={featureLayout.width}\n          {...props}\n        />\n      ) : null}\n    </g>\n  )\n}\n\nexport default observer(FeatureGlyph)\n","import React from 'react'\nimport { bpSpanPx, Feature, Region } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\n\ntype LayoutRecord = [number, number, number, number]\n\ninterface SvgOverlayProps {\n  region: Region\n  displayModel?: {\n    getFeatureByID?: (arg0: string, arg1: string) => LayoutRecord\n    selectedFeatureId?: string\n    featureIdUnderMouse?: string\n    contextMenuFeature?: Feature\n  }\n  bpPerPx: number\n  blockKey: string\n  movedDuringLastMouseDown?: boolean\n  onFeatureMouseDown?(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n    featureId: string,\n  ): {}\n  onFeatureMouseEnter?(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n    featureId: string,\n  ): {}\n  onFeatureMouseOut?(\n    event:\n      | React.MouseEvent<SVGRectElement, MouseEvent>\n      | React.FocusEvent<SVGRectElement>,\n    featureId: string,\n  ): {}\n  onFeatureMouseOver?(\n    event:\n      | React.MouseEvent<SVGRectElement, MouseEvent>\n      | React.FocusEvent<SVGRectElement>,\n    featureId: string,\n  ): {}\n  onFeatureMouseUp?(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n    featureId: string,\n  ): {}\n  onFeatureMouseLeave?(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n    featureId: string,\n  ): {}\n  onFeatureMouseMove?(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n    featureId: string,\n  ): {}\n  // synthesized from mouseup and mousedown\n  onFeatureClick?(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n    featureId: string,\n  ): {}\n  onFeatureContextMenu?(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n    featureId: string,\n  ): {}\n}\n\ninterface OverlayRectProps extends React.SVGProps<SVGRectElement> {\n  rect?: LayoutRecord\n  region: Region\n  bpPerPx: number\n}\n\nfunction OverlayRect({\n  rect,\n  region,\n  bpPerPx,\n  ...rectProps\n}: OverlayRectProps) {\n  if (!rect) {\n    return null\n  }\n  const [leftBp, topPx, rightBp, bottomPx] = rect\n  const [leftPx, rightPx] = bpSpanPx(leftBp, rightBp, region, bpPerPx)\n  const rectTop = Math.round(topPx)\n  const screenWidth = (region.end - region.start) / bpPerPx\n  const rectHeight = Math.round(bottomPx - topPx)\n  const width = rightPx - leftPx\n\n  if (leftPx + width < 0) {\n    return null\n  }\n  const leftWithinBlock = Math.max(leftPx, 0)\n  const diff = leftWithinBlock - leftPx\n  const widthWithinBlock = Math.max(1, Math.min(width - diff, screenWidth))\n\n  return (\n    <rect\n      x={leftWithinBlock - 2}\n      y={rectTop - 2}\n      width={widthWithinBlock + 4}\n      height={rectHeight + 4}\n      {...rectProps}\n    />\n  )\n}\n\nfunction SvgOverlay({\n  displayModel = {},\n  blockKey,\n  region,\n  bpPerPx,\n  movedDuringLastMouseDown,\n  ...handlers\n}: SvgOverlayProps) {\n  const { selectedFeatureId, featureIdUnderMouse, contextMenuFeature } =\n    displayModel\n\n  const mouseoverFeatureId = featureIdUnderMouse || contextMenuFeature?.id()\n\n  function onFeatureMouseDown(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n  ) {\n    const { onFeatureMouseDown: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    return handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureMouseEnter(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n  ) {\n    const { onFeatureMouseEnter: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    return handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureMouseOut(\n    event:\n      | React.MouseEvent<SVGRectElement, MouseEvent>\n      | React.FocusEvent<SVGRectElement>,\n  ) {\n    const { onFeatureMouseOut: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    return handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureMouseOver(\n    event:\n      | React.MouseEvent<SVGRectElement, MouseEvent>\n      | React.FocusEvent<SVGRectElement>,\n  ) {\n    const { onFeatureMouseOver: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    return handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureMouseUp(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n  ) {\n    const { onFeatureMouseUp: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    return handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureMouseLeave(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n  ) {\n    const { onFeatureMouseLeave: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    return handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureMouseMove(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n  ) {\n    const { onFeatureMouseMove: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    return handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureClick(event: React.MouseEvent<SVGRectElement, MouseEvent>) {\n    if (movedDuringLastMouseDown) {\n      return undefined\n    }\n    const { onFeatureClick: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    event.stopPropagation()\n    return handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureContextMenu(\n    event: React.MouseEvent<SVGRectElement, MouseEvent>,\n  ) {\n    const { onFeatureContextMenu: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    return handler(event, mouseoverFeatureId)\n  }\n\n  return (\n    <>\n      {mouseoverFeatureId ? (\n        <OverlayRect\n          rect={displayModel.getFeatureByID?.(blockKey, mouseoverFeatureId)}\n          region={region}\n          bpPerPx={bpPerPx}\n          fill=\"#000\"\n          fillOpacity=\"0.2\"\n          onMouseDown={onFeatureMouseDown}\n          onMouseEnter={onFeatureMouseEnter}\n          onMouseOut={onFeatureMouseOut}\n          onMouseOver={onFeatureMouseOver}\n          onMouseUp={onFeatureMouseUp}\n          onMouseLeave={onFeatureMouseLeave}\n          onMouseMove={onFeatureMouseMove}\n          onClick={onFeatureClick}\n          onContextMenu={onFeatureContextMenu}\n          onFocus={onFeatureMouseOver}\n          onBlur={onFeatureMouseOut}\n          data-testid={mouseoverFeatureId}\n        />\n      ) : null}\n      {selectedFeatureId ? (\n        <OverlayRect\n          rect={displayModel.getFeatureByID?.(blockKey, selectedFeatureId)}\n          region={region}\n          bpPerPx={bpPerPx}\n          stroke=\"#00b8ff\"\n          fill=\"none\"\n        />\n      ) : null}\n    </>\n  )\n}\n\nexport default observer(SvgOverlay)\n","import React from 'react'\nimport { observer } from 'mobx-react'\n\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { SceneGraph } from '@jbrowse/core/util/layouts'\nimport { Region, Feature } from '@jbrowse/core/util'\nimport { useTheme } from '@mui/material'\n\nconst Arrow = ({\n  feature,\n  featureLayout,\n  config,\n  region,\n}: {\n  region: Region\n  feature: Feature\n  featureLayout: SceneGraph\n  config: AnyConfigurationModel\n}) => {\n  const strand = feature.get('strand')\n  const size = 5\n  const reverseFlip = region.reversed ? -1 : 1\n  const offset = 7 * strand * reverseFlip\n  const { left = 0, top = 0, width = 0, height = 0 } = featureLayout.absolute\n\n  const c = readConfObject(config, 'color2', { feature })\n  const theme = useTheme()\n  const color2 = c === '#f0f' ? theme.palette.text.secondary : c\n  const p =\n    strand * reverseFlip === -1\n      ? left\n      : strand * reverseFlip === 1\n      ? left + width\n      : null\n  const y = top + height / 2\n\n  return p ? (\n    <>\n      <line x1={p} x2={p + offset} y1={y} y2={y} stroke={color2} />\n      <polygon\n        points={[\n          [p + offset / 2, y - size / 2],\n          [p + offset / 2, y + size / 2],\n          [p + offset, y],\n        ].toString()}\n        stroke={color2}\n        fill={color2}\n      />\n    </>\n  ) : null\n}\n\nexport default observer(Arrow)\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { Region, Feature } from '@jbrowse/core/util'\nimport { SceneGraph } from '@jbrowse/core/util/layouts'\n\n// locals\nimport { isUTR } from './util'\nimport Arrow from './Arrow'\n\nconst utrHeightFraction = 0.65\nfunction Box(props: {\n  feature: Feature\n  region: Region\n  config: AnyConfigurationModel\n  featureLayout: SceneGraph\n  bpPerPx: number\n  selected?: boolean\n  topLevel?: boolean\n  children?: React.ReactNode\n}) {\n  const { feature, region, config, featureLayout, bpPerPx, topLevel } = props\n  const { start, end } = region\n  const screenWidth = (end - start) / bpPerPx\n  const width = (feature.get('end') - feature.get('start')) / bpPerPx\n  const { left = 0 } = featureLayout.absolute\n  let { top = 0, height = 0 } = featureLayout.absolute\n\n  if (left + width < 0) {\n    return null\n  }\n\n  if (isUTR(feature)) {\n    top += ((1 - utrHeightFraction) / 2) * height\n    height *= utrHeightFraction\n  }\n  const leftWithinBlock = Math.max(left, 0)\n  const diff = leftWithinBlock - left\n  const widthWithinBlock = Math.max(2, Math.min(width - diff, screenWidth))\n\n  // if feature has parent and type is intron, then don't render the intron\n  // subfeature (if it doesn't have a parent, then maybe the introns are\n  // separately displayed features that should be displayed)\n  return feature.parent() && feature.get('type') === 'intron' ? null : (\n    <>\n      {topLevel ? <Arrow {...props} /> : null}\n      <rect\n        data-testid={`box-${feature.id()}`}\n        x={leftWithinBlock}\n        y={top}\n        width={widthWithinBlock}\n        height={height}\n        fill={\n          isUTR(feature)\n            ? readConfObject(config, 'color3', { feature })\n            : readConfObject(config, 'color1', { feature })\n        }\n        stroke={readConfObject(config, 'outline', { feature }) as string}\n      />\n    </>\n  )\n}\n\nexport default observer(Box)\n","import React from 'react'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { observer } from 'mobx-react'\nimport { SceneGraph } from '@jbrowse/core/util/layouts'\nimport { Region, Feature } from '@jbrowse/core/util'\nimport { useTheme } from '@mui/material'\n\n// locals\nimport Arrow from './Arrow'\n\nfunction Segments(props: {\n  region: Region\n  feature: Feature\n  featureLayout: SceneGraph\n  config: AnyConfigurationModel\n  selected?: boolean\n  reversed?: boolean\n  subfeatures?: Feature[]\n  children?: React.ReactNode\n}) {\n  const {\n    feature,\n    featureLayout,\n    selected,\n    config,\n    // some subfeatures may be computed e.g. makeUTRs,\n    // so these are passed as a prop, or feature.get('subfeatures') by default\n    subfeatures = feature.get('subfeatures'),\n  } = props\n\n  const theme = useTheme()\n  const c = readConfObject(config, 'color2', { feature })\n  const color2 = c === '#f0f' ? theme.palette.text.secondary : c\n\n  const { left = 0, top = 0, width = 0, height = 0 } = featureLayout.absolute\n\n  const y = top + height / 2\n  return (\n    <>\n      <line\n        data-testid={feature.id()}\n        x1={left}\n        y1={y}\n        y2={y}\n        x2={left + width}\n        stroke={color2}\n      />\n      {subfeatures?.map(subfeature => {\n        const subfeatureId = String(subfeature.id())\n        const subfeatureLayout = featureLayout.getSubRecord(subfeatureId)\n        // This subfeature got filtered out\n        if (!subfeatureLayout) {\n          return null\n        }\n        const { GlyphComponent } = subfeatureLayout.data || {}\n        return (\n          <GlyphComponent\n            key={`glyph-${subfeatureId}`}\n            {...props}\n            feature={subfeature}\n            topLevel={false}\n            featureLayout={subfeatureLayout}\n            selected={selected}\n          />\n        )\n      })}\n      <Arrow {...props} />\n    </>\n  )\n}\n\nexport default observer(Segments)\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\n\nimport Segments from './Segments'\nimport { ExtraGlyphValidator, layOutFeature, layOutSubfeatures } from './util'\nimport { SceneGraph } from '@jbrowse/core/util/layouts'\nimport { Region, Feature, SimpleFeature } from '@jbrowse/core/util'\n\nfunction ProcessedTranscript(props: {\n  feature: Feature\n  region: Region\n  config: AnyConfigurationModel\n  featureLayout: SceneGraph\n  selected?: boolean\n  reversed?: boolean\n  [key: string]: unknown\n}) {\n  const { feature, config } = props\n  const subfeatures = getSubparts(feature, config)\n\n  // we manually compute some subfeatures, so pass these separately\n  return <Segments {...props} subfeatures={subfeatures} />\n}\n\n// returns a callback that will filter features features according to the\n// subParts conf var\nfunction makeSubpartsFilter(\n  confKey = 'subParts',\n  config: AnyConfigurationModel,\n) {\n  let filter = readConfObject(config, confKey) as string[] | string\n\n  if (typeof filter == 'string') {\n    // convert to array\n    filter = filter.split(/\\s*,\\s*/)\n  }\n\n  return (feature: Feature) =>\n    (filter as string[])\n      .map(typeName => typeName.toLowerCase())\n      .includes(feature.get('type').toLowerCase())\n}\n\nfunction filterSubpart(feature: Feature, config: AnyConfigurationModel) {\n  return makeSubpartsFilter('subParts', config)(feature)\n}\n\nfunction isUTR(feature: Feature) {\n  return /(\\bUTR|_UTR|untranslated[_\\s]region)\\b/.test(\n    feature.get('type') || '',\n  )\n}\n\nfunction makeUTRs(parent: Feature, subs: Feature[]) {\n  // based on Lincoln's UTR-making code in Bio::Graphics::Glyph::processed_transcript\n  const subparts = [...subs]\n\n  let codeStart = Infinity\n  let codeEnd = -Infinity\n\n  let haveLeftUTR\n  let haveRightUTR\n\n  // gather exons, find coding start and end, and look for UTRs\n  const exons = []\n  for (let i = 0; i < subparts.length; i++) {\n    const type = subparts[i].get('type')\n    if (/^cds/i.test(type)) {\n      if (codeStart > subparts[i].get('start')) {\n        codeStart = subparts[i].get('start')\n      }\n      if (codeEnd < subparts[i].get('end')) {\n        codeEnd = subparts[i].get('end')\n      }\n    } else if (/exon/i.test(type)) {\n      exons.push(subparts[i])\n    } else if (isUTR(subparts[i])) {\n      haveLeftUTR = subparts[i].get('start') === parent.get('start')\n      haveRightUTR = subparts[i].get('end') === parent.get('end')\n    }\n  }\n\n  // bail if we don't have exons and CDS\n  if (!(exons.length && codeStart < Infinity && codeEnd > -Infinity)) {\n    return subparts\n  }\n\n  // make sure the exons are sorted by coord\n  exons.sort((a, b) => a.get('start') - b.get('start'))\n\n  const strand = parent.get('strand')\n\n  // make the left-hand UTRs\n  let start\n  let end\n  if (!haveLeftUTR) {\n    for (let i = 0; i < exons.length; i++) {\n      start = exons[i].get('start')\n      if (start >= codeStart) {\n        break\n      }\n      end = codeStart > exons[i].get('end') ? exons[i].get('end') : codeStart\n      const type = strand >= 0 ? 'five_prime_UTR' : 'three_prime_UTR'\n      subparts.unshift(\n        new SimpleFeature({\n          parent,\n          id: `${parent.id()}_${type}_${i}`,\n          data: { start, end, strand, type },\n        }),\n      )\n    }\n  }\n\n  // make the right-hand UTRs\n  if (!haveRightUTR) {\n    for (let i = exons.length - 1; i >= 0; i--) {\n      end = exons[i].get('end')\n      if (end <= codeEnd) {\n        break\n      }\n\n      start = codeEnd < exons[i].get('start') ? exons[i].get('start') : codeEnd\n      const type = strand >= 0 ? 'three_prime_UTR' : 'five_prime_UTR'\n      subparts.push(\n        new SimpleFeature({\n          parent,\n          id: `${parent.id()}_${type}_${i}`,\n          data: { start, end, strand, type },\n        }),\n      )\n    }\n  }\n\n  return subparts\n}\n\nfunction getSubparts(f: Feature, config: AnyConfigurationModel) {\n  let c = f.get('subfeatures')\n  if (!c || c.length === 0) {\n    return []\n  }\n  const hasUTRs = c.some(child => isUTR(child))\n  const isTranscript = ['mRNA', 'transcript'].includes(f.get('type'))\n  const impliedUTRs = !hasUTRs && isTranscript\n\n  // if we think we should use impliedUTRs, or it is specifically in the\n  // config, then makeUTRs\n  if (impliedUTRs || readConfObject(config, 'impliedUTRs')) {\n    c = makeUTRs(f, c)\n  }\n\n  return c.filter(element => filterSubpart(element, config))\n}\n\nProcessedTranscript.layOut = ({\n  layout,\n  feature,\n  bpPerPx,\n  reversed,\n  config,\n  extraGlyphs,\n}: {\n  layout: SceneGraph\n  feature: Feature\n  bpPerPx: number\n  reversed: boolean\n  config: AnyConfigurationModel\n  extraGlyphs: ExtraGlyphValidator[]\n}) => {\n  const subLayout = layOutFeature({\n    layout,\n    feature,\n    bpPerPx,\n    reversed,\n    config,\n    extraGlyphs,\n  })\n  const subfeatures = getSubparts(feature, config)\n  layOutSubfeatures({\n    layout: subLayout,\n    subfeatures,\n    bpPerPx,\n    reversed,\n    config,\n    extraGlyphs,\n  })\n  return subLayout\n}\n\nexport default observer(ProcessedTranscript)\n","import React from 'react'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { observer } from 'mobx-react'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { SceneGraph } from '@jbrowse/core/util/layouts'\nimport {\n  chooseGlyphComponent,\n  ExtraGlyphValidator,\n  layOut,\n  layOutFeature,\n} from './util'\n\nfunction Subfeatures(props: {\n  feature: Feature\n  featureLayout: SceneGraph\n  selected?: boolean\n}) {\n  const { feature, featureLayout, selected } = props\n\n  return (\n    <>\n      {feature.get('subfeatures')?.map(subfeature => {\n        const subfeatureId = String(subfeature.id())\n        const subfeatureLayout = featureLayout.getSubRecord(subfeatureId)\n        if (!subfeatureLayout) {\n          return null\n        }\n        const { GlyphComponent } = subfeatureLayout.data || {}\n        return (\n          <GlyphComponent\n            key={`glyph-${subfeatureId}`}\n            {...props}\n            feature={subfeature}\n            featureLayout={subfeatureLayout}\n            selected={selected}\n          />\n        )\n      })}\n    </>\n  )\n}\n\nSubfeatures.layOut = ({\n  layout,\n  feature,\n  bpPerPx,\n  reversed,\n  config,\n  extraGlyphs,\n}: {\n  layout: SceneGraph\n  feature: Feature\n  bpPerPx: number\n  reversed: boolean\n  config: AnyConfigurationModel\n  extraGlyphs: ExtraGlyphValidator[]\n}) => {\n  const subLayout = layOutFeature({\n    layout,\n    feature,\n    bpPerPx,\n    reversed,\n    config,\n    extraGlyphs,\n  })\n  const displayMode = readConfObject(config, 'displayMode')\n  if (displayMode !== 'reducedRepresentation') {\n    let topOffset = 0\n    feature.get('subfeatures')?.forEach(subfeature => {\n      const SubfeatureGlyphComponent = chooseGlyphComponent(\n        subfeature,\n        extraGlyphs,\n      )\n      const subfeatureHeight = readConfObject(config, 'height', {\n        feature: subfeature,\n      }) as number\n\n      const subSubLayout = (SubfeatureGlyphComponent.layOut || layOut)({\n        layout: subLayout,\n        feature: subfeature,\n        bpPerPx,\n        reversed,\n        config,\n        extraGlyphs,\n      })\n      subSubLayout.move(0, topOffset)\n      topOffset +=\n        displayMode === 'collapse'\n          ? 0\n          : (displayMode === 'compact'\n              ? subfeatureHeight / 3\n              : subfeatureHeight) + 2\n    })\n  }\n  return subLayout\n}\n\nexport default observer(Subfeatures)\n","import React from 'react'\nimport {\n  readConfObject,\n  AnyConfigurationModel,\n} from '@jbrowse/core/configuration'\nimport SceneGraph from '@jbrowse/core/util/layouts/SceneGraph'\nimport { Feature, Region } from '@jbrowse/core/util'\n\n// locals\nimport Box from './Box'\nimport ProcessedTranscript from './ProcessedTranscript'\nimport Segments from './Segments'\nimport Subfeatures from './Subfeatures'\n\nexport interface Glyph\n  extends React.FC<{\n    children: React.ReactNode\n    feature: Feature\n    featureLayout: SceneGraph\n    selected?: boolean\n    config: AnyConfigurationModel\n    region: Region\n    bpPerPx: number\n    topLevel?: boolean\n    [key: string]: unknown\n  }> {\n  layOut?: Function\n}\n\ntype LayoutRecord = [number, number, number, number]\n\nexport interface DisplayModel {\n  getFeatureByID?: (arg0: string, arg1: string) => LayoutRecord\n  getFeatureOverlapping?: (\n    blockKey: string,\n    bp: number,\n    y: number,\n  ) => string | undefined\n  selectedFeatureId?: string\n  featureIdUnderMouse?: string\n  contextMenuFeature?: Feature\n}\n\nexport interface ExtraGlyphValidator {\n  glyph: Glyph\n  validator: (feature: Feature) => boolean\n}\n\nexport function chooseGlyphComponent(\n  feature: Feature,\n  extraGlyphs?: ExtraGlyphValidator[],\n): Glyph {\n  const type = feature.get('type')\n  const subfeatures = feature.get('subfeatures')\n\n  if (subfeatures && type !== 'CDS') {\n    const hasSubSub = subfeatures.find(sub => !!sub.get('subfeatures'))\n    if (\n      ['mRNA', 'transcript', 'primary_transcript'].includes(type) &&\n      subfeatures.some(f => f.get('type') === 'CDS')\n    ) {\n      return ProcessedTranscript\n    } else if (!feature.parent() && hasSubSub) {\n      // only do sub-sub on parent level features like gene\n      return Subfeatures\n    } else {\n      return Segments\n    }\n  }\n\n  return extraGlyphs?.find(f => f.validator(feature))?.glyph || Box\n}\n\ninterface BaseLayOutArgs {\n  layout: SceneGraph\n  bpPerPx: number\n  reversed: boolean\n  config: AnyConfigurationModel\n}\n\ninterface FeatureLayOutArgs extends BaseLayOutArgs {\n  feature: Feature\n  extraGlyphs: ExtraGlyphValidator[]\n}\n\ninterface SubfeatureLayOutArgs extends BaseLayOutArgs {\n  subfeatures: Feature[]\n  extraGlyphs: ExtraGlyphValidator[]\n}\n\nexport function layOut({\n  layout,\n  feature,\n  bpPerPx,\n  reversed,\n  config,\n  extraGlyphs,\n}: FeatureLayOutArgs): SceneGraph {\n  const displayMode = readConfObject(config, 'displayMode')\n  const subLayout = layOutFeature({\n    layout,\n    feature,\n    bpPerPx,\n    reversed,\n    config,\n    extraGlyphs,\n  })\n  if (displayMode !== 'reducedRepresentation') {\n    layOutSubfeatures({\n      layout: subLayout,\n      subfeatures: feature.get('subfeatures') || [],\n      bpPerPx,\n      reversed,\n      config,\n      extraGlyphs,\n    })\n  }\n  return subLayout\n}\n\nexport function layOutFeature(args: FeatureLayOutArgs): SceneGraph {\n  const { layout, feature, bpPerPx, reversed, config, extraGlyphs } = args\n  const displayMode = readConfObject(config, 'displayMode') as string\n  const GlyphComponent =\n    displayMode === 'reducedRepresentation'\n      ? Box\n      : chooseGlyphComponent(feature, extraGlyphs)\n  const parentFeature = feature.parent()\n  let x = 0\n  if (parentFeature) {\n    x =\n      (reversed\n        ? parentFeature.get('end') - feature.get('end')\n        : feature.get('start') - parentFeature.get('start')) / bpPerPx\n  }\n  const height = readConfObject(config, 'height', { feature }) as number\n  const width = (feature.get('end') - feature.get('start')) / bpPerPx\n  const layoutParent = layout.parent\n  const top = layoutParent ? layoutParent.top : 0\n  return layout.addChild(\n    String(feature.id()),\n    x,\n    displayMode === 'collapse' ? 0 : top,\n    Math.max(width, 1), // has to be at least one to register in the layout\n    displayMode === 'compact' ? height / 2 : height,\n    { GlyphComponent },\n  )\n}\n\nexport function layOutSubfeatures(args: SubfeatureLayOutArgs) {\n  const { layout, subfeatures, bpPerPx, reversed, config, extraGlyphs } = args\n  subfeatures.forEach(feature => {\n    ;(chooseGlyphComponent(feature, extraGlyphs).layOut || layOut)({\n      layout,\n      feature,\n      bpPerPx,\n      reversed,\n      config,\n      extraGlyphs,\n    })\n  })\n}\n\nexport function isUTR(feature: Feature) {\n  return /(\\bUTR|_UTR|untranslated[_\\s]region)\\b/.test(\n    feature.get('type') || '',\n  )\n}\n","import React, { useEffect, useRef, useState, useCallback } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { bpToPx, measureText, Region, Feature } from '@jbrowse/core/util'\nimport { BaseLayout, SceneGraph } from '@jbrowse/core/util/layouts'\n\n// locals\nimport FeatureGlyph from './FeatureGlyph'\nimport SvgOverlay from './SvgOverlay'\nimport {\n  chooseGlyphComponent,\n  layOut,\n  ExtraGlyphValidator,\n  DisplayModel,\n} from './util'\n\n// used to make features have a little padding for their labels\nconst xPadding = 3\nconst yPadding = 5\n\n// used so that user can click-away-from-feature below the laid out features\n// (issue #1248)\nconst svgHeightPadding = 100\n\nfunction RenderedFeatureGlyph(props: {\n  feature: Feature\n  bpPerPx: number\n  region: Region\n  config: AnyConfigurationModel\n  layout: BaseLayout<unknown>\n  extraGlyphs?: ExtraGlyphValidator[]\n  displayMode: string\n  exportSVG?: unknown\n  displayModel?: DisplayModel\n  detectRerender?: () => void\n  viewParams: {\n    start: number\n    end: number\n    offsetPx: number\n    offsetPx1: number\n  }\n  [key: string]: unknown\n}) {\n  const {\n    feature,\n    detectRerender,\n    bpPerPx,\n    region,\n    config,\n    displayMode,\n    layout,\n    extraGlyphs,\n  } = props\n\n  // used for unit testing, difficult to mock out so it is in actual source code\n  detectRerender?.()\n\n  const { reversed } = region\n  const start = feature.get(reversed ? 'end' : 'start')\n  const startPx = bpToPx(start, region, bpPerPx)\n  const labelAllowed = displayMode !== 'collapsed'\n\n  const rootLayout = new SceneGraph('root', 0, 0, 0, 0)\n  const GlyphComponent = chooseGlyphComponent(feature, extraGlyphs)\n  const featureLayout = (GlyphComponent.layOut || layOut)({\n    layout: rootLayout,\n    feature,\n    bpPerPx,\n    reversed,\n    config,\n    extraGlyphs,\n  })\n  let shouldShowName = false\n  let shouldShowDescription = false\n  let name = ''\n  let description = ''\n  let fontHeight = 0\n  let expansion = 0\n  if (labelAllowed) {\n    const showLabels = readConfObject(config, 'showLabels')\n    const showDescriptions = readConfObject(config, 'showDescriptions')\n    fontHeight = readConfObject(config, ['labels', 'fontSize'], { feature })\n    expansion = readConfObject(config, 'maxFeatureGlyphExpansion') || 0\n    name = String(readConfObject(config, ['labels', 'name'], { feature }) || '')\n    shouldShowName = /\\S/.test(name) && showLabels\n\n    const getWidth = (text: string) => {\n      const glyphWidth = rootLayout.width + expansion\n      const textWidth = measureText(text, fontHeight)\n      return Math.round(Math.min(textWidth, glyphWidth))\n    }\n\n    description = String(\n      readConfObject(config, ['labels', 'description'], { feature }) || '',\n    )\n    shouldShowDescription = /\\S/.test(description) && showDescriptions\n\n    if (shouldShowName) {\n      rootLayout.addChild(\n        'nameLabel',\n        0,\n        featureLayout.bottom,\n        getWidth(name),\n        fontHeight,\n      )\n    }\n\n    if (shouldShowDescription) {\n      const aboveLayout = shouldShowName\n        ? rootLayout.getSubRecord('nameLabel')\n        : featureLayout\n\n      rootLayout.addChild(\n        'descriptionLabel',\n        0,\n        aboveLayout.bottom,\n        getWidth(description),\n        fontHeight,\n      )\n    }\n  }\n\n  const topPx = layout.addRect(\n    feature.id(),\n    feature.get('start'),\n    feature.get('start') + rootLayout.width * bpPerPx + xPadding * bpPerPx,\n    rootLayout.height + yPadding,\n  )\n  if (topPx === null) {\n    return null\n  }\n  rootLayout.move(startPx, topPx)\n\n  return (\n    <FeatureGlyph\n      rootLayout={rootLayout}\n      name={name}\n      shouldShowName={shouldShowName}\n      description={description}\n      shouldShowDescription={shouldShowDescription}\n      fontHeight={fontHeight}\n      allowedWidthExpansion={expansion}\n      reversed={region.reversed}\n      topLevel={true}\n      {...props}\n    />\n  )\n}\n\nconst RenderedFeatures = observer(\n  (props: {\n    features?: Map<string, Feature>\n    isFeatureDisplayed?: (f: Feature) => boolean\n    bpPerPx: number\n    config: AnyConfigurationModel\n    displayMode: string\n    displayModel?: DisplayModel\n    region: Region\n    exportSVG?: unknown\n    extraGlyphs?: ExtraGlyphValidator[]\n    layout: BaseLayout<unknown>\n    viewParams: {\n      start: number\n      end: number\n      offsetPx: number\n      offsetPx1: number\n    }\n    [key: string]: unknown\n  }) => {\n    const { features = new Map(), isFeatureDisplayed } = props\n    return (\n      <>\n        {[...features.values()]\n          .filter(feature =>\n            isFeatureDisplayed ? isFeatureDisplayed(feature) : true,\n          )\n          .map(feature => (\n            <RenderedFeatureGlyph\n              key={feature.id()}\n              feature={feature}\n              {...props}\n            />\n          ))}\n      </>\n    )\n  },\n)\n\nfunction SvgFeatureRendering(props: {\n  layout: BaseLayout<unknown>\n  blockKey: string\n  regions: Region[]\n  bpPerPx: number\n  detectRerender?: () => void\n  config: AnyConfigurationModel\n  features: Map<string, Feature>\n  displayModel?: DisplayModel\n  exportSVG?: boolean\n  viewParams: {\n    start: number\n    end: number\n    offsetPx: number\n    offsetPx1: number\n  }\n  featureDisplayHandler?: (f: Feature) => boolean\n  extraGlyphs?: ExtraGlyphValidator[]\n  onMouseOut?: React.MouseEventHandler\n  onMouseDown?: React.MouseEventHandler\n  onMouseLeave?: React.MouseEventHandler\n  onMouseEnter?: React.MouseEventHandler\n  onMouseOver?: React.MouseEventHandler\n  onMouseMove?: (event: React.MouseEvent, featureId?: string) => void\n  onMouseUp?: React.MouseEventHandler\n  onClick?: React.MouseEventHandler\n}) {\n  const {\n    layout,\n    blockKey,\n    regions,\n    bpPerPx,\n    config,\n    displayModel = {},\n    exportSVG,\n    featureDisplayHandler,\n    onMouseOut,\n    onMouseDown,\n    onMouseLeave,\n    onMouseEnter,\n    onMouseOver,\n    onMouseMove,\n    onMouseUp,\n    onClick,\n  } = props\n\n  const [region] = regions || []\n  const width = (region.end - region.start) / bpPerPx\n  const displayMode = readConfObject(config, 'displayMode') as string\n\n  const ref = useRef<SVGSVGElement>(null)\n  const [mouseIsDown, setMouseIsDown] = useState(false)\n  const [height, setHeight] = useState(0)\n  const [movedDuringLastMouseDown, setMovedDuringLastMouseDown] =\n    useState(false)\n\n  const mouseDown = useCallback(\n    (event: React.MouseEvent) => {\n      setMouseIsDown(true)\n      setMovedDuringLastMouseDown(false)\n      return onMouseDown?.(event)\n    },\n    [onMouseDown],\n  )\n\n  const mouseUp = useCallback(\n    (event: React.MouseEvent) => {\n      setMouseIsDown(false)\n      return onMouseUp?.(event)\n    },\n    [onMouseUp],\n  )\n\n  const mouseMove = useCallback(\n    (event: React.MouseEvent) => {\n      if (!ref.current) {\n        return\n      }\n      if (mouseIsDown) {\n        setMovedDuringLastMouseDown(true)\n      }\n      const { left, top } = ref.current.getBoundingClientRect()\n      const offsetX = event.clientX - left\n      const offsetY = event.clientY - top\n      const px = region.reversed ? width - offsetX : offsetX\n      const clientBp = region.start + bpPerPx * px\n\n      const featureIdCurrentlyUnderMouse = displayModel.getFeatureOverlapping?.(\n        blockKey,\n        clientBp,\n        offsetY,\n      )\n\n      if (onMouseMove) {\n        onMouseMove(event, featureIdCurrentlyUnderMouse)\n      }\n    },\n    [\n      blockKey,\n      bpPerPx,\n      mouseIsDown,\n      onMouseMove,\n      region.reversed,\n      region.start,\n      displayModel,\n      width,\n    ],\n  )\n\n  const click = useCallback(\n    (event: React.MouseEvent) => {\n      // don't select a feature if we are clicking and dragging\n      if (movedDuringLastMouseDown) {\n        return\n      }\n      onClick?.(event)\n    },\n    [movedDuringLastMouseDown, onClick],\n  )\n\n  useEffect(() => {\n    setHeight(layout.getTotalHeight())\n  }, [layout])\n\n  if (exportSVG) {\n    return (\n      <RenderedFeatures\n        displayMode={displayMode}\n        isFeatureDisplayed={featureDisplayHandler}\n        region={region}\n        {...props}\n      />\n    )\n  }\n  return (\n    <svg\n      ref={ref}\n      data-testid=\"svgfeatures\"\n      width={width}\n      height={height + svgHeightPadding}\n      onMouseDown={mouseDown}\n      onMouseUp={mouseUp}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      onMouseOver={onMouseOver}\n      onMouseOut={onMouseOut}\n      onMouseMove={mouseMove}\n      onClick={click}\n    >\n      <RenderedFeatures\n        displayMode={displayMode}\n        region={region}\n        movedDuringLastMouseDown={movedDuringLastMouseDown}\n        isFeatureDisplayed={featureDisplayHandler}\n        {...props}\n      />\n\n      <SvgOverlay\n        {...props}\n        region={region}\n        movedDuringLastMouseDown={movedDuringLastMouseDown}\n      />\n    </svg>\n  )\n}\n\nexport default observer(SvgFeatureRendering)\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\n/**\n * #config SvgFeatureRenderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst SvgFeatureRenderer = ConfigurationSchema(\n  'SvgFeatureRenderer',\n  {\n    /**\n     * #slot\n     */\n    color1: {\n      type: 'color',\n      description: 'the main color of each feature',\n      defaultValue: 'goldenrod',\n      contextVariable: ['feature'],\n    },\n    /**\n     * #slot\n     */\n    color2: {\n      type: 'color',\n      description:\n        'the secondary color of each feature, used for connecting lines, etc',\n      defaultValue: '#f0f',\n      contextVariable: ['feature'],\n    },\n    /**\n     * #slot\n     */\n    color3: {\n      type: 'color',\n      description:\n        'the tertiary color of each feature, often used for contrasting fills, like on UTRs',\n      defaultValue: '#357089',\n      contextVariable: ['feature'],\n    },\n\n    /**\n     * #slot\n     */\n    outline: {\n      type: 'color',\n      description: 'the outline for features',\n      defaultValue: '',\n      contextVariable: ['feature'],\n    },\n    /**\n     * #slot\n     */\n    height: {\n      type: 'number',\n      description: 'height in pixels of the main body of each feature',\n      defaultValue: 10,\n      contextVariable: ['feature'],\n    },\n    /**\n     * #slot\n     */\n    showLabels: {\n      type: 'boolean',\n      defaultValue: true,\n    },\n\n    /**\n     * #slot\n     */\n    showDescriptions: {\n      type: 'boolean',\n      defaultValue: true,\n    },\n\n    labels: ConfigurationSchema('SvgFeatureLabels', {\n      /**\n       * #slot labels.name\n       */\n      name: {\n        type: 'string',\n        description:\n          'the primary name of the feature to show, if space is available',\n        defaultValue: `jexl:get(feature,'name') || get(feature,'id')`,\n        contextVariable: ['feature'],\n      },\n      /**\n       * #slot labels.nameColor\n       */\n      nameColor: {\n        type: 'color',\n        description: 'the color of the name label, if shown',\n        defaultValue: '#f0f',\n        contextVariable: ['feature'],\n      },\n      /**\n       * #slot labels.description\n       */\n      description: {\n        type: 'string',\n        description: 'the text description to show, if space is available',\n        defaultValue: `jexl:get(feature,'note') || get(feature,'description')`,\n        contextVariable: ['feature'],\n      },\n      /**\n       * #slot labels.descriptionColor\n       */\n      descriptionColor: {\n        type: 'color',\n        description: 'the color of the description, if shown',\n        defaultValue: 'blue',\n        contextVariable: ['feature'],\n      },\n\n      /**\n       * #slot labels.fontSize\n       */\n      fontSize: {\n        type: 'number',\n        description:\n          'height in pixels of the text to use for names and descriptions',\n        defaultValue: 12,\n        contextVariable: ['feature'],\n      },\n    }),\n\n    /**\n     * #slot\n     */\n    displayMode: {\n      type: 'stringEnum',\n      model: types.enumeration('displayMode', [\n        'normal',\n        'compact',\n        'reducedRepresentation',\n        'collapse',\n      ]),\n      description: 'Alternative display modes',\n      defaultValue: 'normal',\n    },\n\n    /**\n     * #slot\n     */\n    maxFeatureGlyphExpansion: {\n      type: 'number',\n      description:\n        \"maximum number of pixels on each side of a feature's bounding coordinates that a glyph is allowed to use\",\n      defaultValue: 500,\n    },\n\n    /**\n     * #slot\n     */\n    maxHeight: {\n      type: 'integer',\n      description: 'the maximum height to be used in a svg rendering',\n      defaultValue: 600,\n    },\n\n    /**\n     * #slot\n     */\n    subParts: {\n      type: 'string',\n      description: 'subparts for a glyph',\n      defaultValue: 'CDS,UTR,five_prime_UTR,three_prime_UTR',\n    },\n\n    /**\n     * #slot\n     */\n    impliedUTRs: {\n      type: 'boolean',\n      description: 'imply UTR from the exon and CDS differences',\n      defaultValue: false,\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default SvgFeatureRenderer\n","import BoxRendererType from '@jbrowse/core/pluggableElementTypes/renderers/BoxRendererType'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport {\n  configSchema as svgFeatureRendererConfigSchema,\n  ReactComponent as SvgFeatureRendererReactComponent,\n} from './SvgFeatureRenderer'\n\nclass SvgFeatureRenderer extends BoxRendererType {\n  supportsSVG = true\n}\n\nexport default class SVGPlugin extends Plugin {\n  name = 'SVGPlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addRendererType(\n      () =>\n        new SvgFeatureRenderer({\n          name: 'SvgFeatureRenderer',\n          ReactComponent: SvgFeatureRendererReactComponent,\n          configSchema: svgFeatureRendererConfigSchema,\n          pluginManager,\n        }),\n    )\n  }\n}\n\nexport {\n  configSchema as svgFeatureRendererConfigSchema,\n  ReactComponent as SvgFeatureRendererReactComponent,\n} from './SvgFeatureRenderer'\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config GCContentAdapter\n * #category adapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst GCContentAdapterF = (pluginManager: PluginManager) => {\n  return ConfigurationSchema(\n    'GCContentAdapter',\n    {\n      /**\n       * #slot\n       */\n      sequenceAdapter: {\n        type: 'frozen',\n        defaultValue: null,\n      },\n    },\n    { explicitlyTyped: true },\n  )\n}\n\nexport default GCContentAdapterF\n","import { DisplayType } from '@jbrowse/core/pluggableElementTypes'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { LinearWiggleDisplayReactComponent } from '@jbrowse/plugin-wiggle'\n\nimport configSchemaFactory from './config'\nimport stateModelFactory from './stateModel'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaFactory(pluginManager)\n    const stateModel = stateModelFactory(pluginManager, configSchema)\n    return new DisplayType({\n      name: 'LinearGCContentDisplay',\n      configSchema,\n      stateModel,\n      displayName: 'GC content display',\n      trackType: 'ReferenceSequenceTrack',\n      viewType: 'LinearGenomeView',\n      ReactComponent: LinearWiggleDisplayReactComponent,\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config LinearGCContentDisplay\n * #category display\n */\nexport default function WiggleConfigFactory(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'LinearGCContentDisplay',\n    {},\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: pluginManager.getDisplayType('LinearWiggleDisplay')\n        .configSchema,\n      explicitlyTyped: true,\n    },\n  )\n}\n","import {\n  getConf,\n  AnyConfigurationSchemaType,\n} from '@jbrowse/core/configuration'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { linearWiggleDisplayModelFactory } from '@jbrowse/plugin-wiggle'\nimport { types } from 'mobx-state-tree'\n\n/**\n * #stateModel LinearGCContentDisplay\n * #category display\n * base model `BaseWiggleDisplayModel`\n */\nexport default function stateModelFactory(\n  pluginManager: PluginManager,\n  configSchema: AnyConfigurationSchemaType,\n) {\n  return types\n    .compose(\n      'LinearGCContentDisplay',\n      linearWiggleDisplayModelFactory(pluginManager, configSchema),\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LinearGCContentDisplay'),\n      }),\n    )\n    .views(self => {\n      const { renderProps: superRenderProps } = self\n      return {\n        /**\n         * #method\n         * retrieves the sequence adapter from parent track, and puts it as a\n         * subadapter on a GCContentAdapter\n         */\n        renderProps() {\n          const sequenceAdapter = getConf(self.parentTrack, 'adapter')\n          return {\n            ...superRenderProps(),\n            adapterConfig: {\n              type: 'GCContentAdapter',\n              sequenceAdapter,\n            },\n          }\n        },\n      }\n    })\n}\n","import Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\n// locals\nimport GCContentAdapterF from './GCContentAdapter'\nimport LinearGCContentDisplayF from './LinearGCContentDisplay'\n\nexport default class GCContentPlugin extends Plugin {\n  name = 'GCContentPlugin'\n\n  install(pluginManager: PluginManager) {\n    GCContentAdapterF(pluginManager)\n    LinearGCContentDisplayF(pluginManager)\n  }\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchemaF from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'GCContentAdapter',\n        displayName: 'GC content adapter',\n        adapterMetadata: {\n          hiddenFromGUI: true,\n        },\n        configSchema: configSchemaF(pluginManager),\n        getAdapterClass: () =>\n          import('./GCContentAdapter').then(r => r.default),\n      }),\n  )\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react'\nimport { types } from 'mobx-state-tree'\n\n/** utility function for assembling the MST model of a column data type */\nexport default function MakeSpreadsheetColumnType(\n  name: string,\n  {\n    DataCellReactComponent = null,\n    FilterModelType = null,\n    compare,\n    displayName = undefined,\n    categoryName = undefined,\n  }: {\n    compare?: any\n    DataCellReactComponent?: React.FC<any> | null\n    FilterModelType?: any\n    displayName?: string\n    categoryName?: string\n  },\n) {\n  return types\n    .model(`ColumnDataType${name}`, {\n      type: types.literal(name),\n    })\n    .volatile(() => ({\n      DataCellReactComponent,\n      FilterModelType: FilterModelType,\n      displayName: displayName || name,\n      categoryName,\n    }))\n    .views(() => ({\n      compare,\n      get hasFilter() {\n        return !!FilterModelType\n      },\n    }))\n}\n","import React from 'react'\nimport {\n  IconButton,\n  TextField,\n  MenuItem,\n  InputAdornment,\n  Select,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { types, getParent, getPropertyMembers } from 'mobx-state-tree'\n\n// jbrowse imports\nimport {\n  getPropertyType,\n  getEnumerationValues,\n  getSubType,\n} from '@jbrowse/core/util/mst-reflection'\nimport { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\nimport {\n  doesIntersect2,\n  isContainedWithin,\n  compareLocs,\n  getSession,\n  parseLocString,\n} from '@jbrowse/core/util'\n\n// icons\nimport ClearIcon from '@mui/icons-material/Clear'\n\n// locals\nimport MakeSpreadsheetColumnType from './MakeSpreadsheetColumnType'\n\ntype LGV = LinearGenomeViewModel\n\nconst useStyles = makeStyles()({\n  textFilterControlAdornment: { marginRight: '-18px' },\n  textFilterControl: {\n    '& .MuiInput-formControl': {\n      marginTop: 8,\n    },\n    '& .MuiInputLabel-formControl': {\n      top: '-7px',\n      '&.MuiInputLabel-shrink': {\n        top: '-3px',\n      },\n    },\n  },\n})\n\n// React component for the column filter control\nconst FilterReactComponent = observer(function ({\n  filterModel,\n}: {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  filterModel: any\n}) {\n  const { classes } = useStyles()\n  const operationChoices = getEnumerationValues(\n    getSubType(getPropertyType(getPropertyMembers(filterModel), 'operation')),\n  )\n  return (\n    <>\n      <Select\n        value={filterModel.operation}\n        onChange={event => filterModel.setOperation(String(event.target.value))}\n      >\n        {operationChoices.map(name => (\n          <MenuItem key={name} value={name}>\n            {name}\n          </MenuItem>\n        ))}\n      </Select>{' '}\n      <TextField\n        label=\"range\"\n        placeholder=\"chr1:100-200\"\n        error={filterModel.locStringIsInvalid}\n        value={filterModel.locString}\n        onChange={evt => filterModel.setLocString(evt.target.value)}\n        className={classes.textFilterControl}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment\n              className={classes.textFilterControlAdornment}\n              position=\"end\"\n            >\n              <IconButton\n                aria-label=\"clear filter\"\n                onClick={() => filterModel.setLocString('')}\n              >\n                <ClearIcon />\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n    </>\n  )\n})\n\nconst OPERATIONS = [\n  'overlaps with',\n  'contained within',\n  'fully contains',\n  'does not overlap',\n  'not contained within',\n  'does not contain',\n]\n\ninterface Loc {\n  start: number\n  end: number\n  refName: string\n}\n\n// NOTE: assembly names, if present, are ignored in all of these predicates\nconst OPERATION_PREDICATES = {\n  'overlaps with': (cellLocation, specifiedLocation) => {\n    return (\n      cellLocation.refName === specifiedLocation.refName &&\n      doesIntersect2(\n        cellLocation.start,\n        cellLocation.end,\n        specifiedLocation.start,\n        specifiedLocation.end,\n      )\n    )\n  },\n  'contained within': (cellLocation, specifiedLocation) => {\n    return (\n      cellLocation.refName === specifiedLocation.refName &&\n      isContainedWithin(\n        cellLocation.start,\n        cellLocation.end,\n        specifiedLocation.start,\n        specifiedLocation.end,\n      )\n    )\n  },\n  'fully contains': (cellLocation, specifiedLocation) => {\n    return (\n      cellLocation.refName === specifiedLocation.refName &&\n      isContainedWithin(\n        specifiedLocation.start,\n        specifiedLocation.end,\n        cellLocation.start,\n        cellLocation.end,\n      )\n    )\n  },\n} as { [key: string]: (a: Loc, b: Loc) => boolean }\n\nOPERATION_PREDICATES['does not overlap'] = (\n  cellLocation,\n  specifiedLocation,\n) => {\n  return !OPERATION_PREDICATES['overlaps with'](cellLocation, specifiedLocation)\n}\nOPERATION_PREDICATES['not contained within'] = (\n  cellLocation,\n  specifiedLocation,\n) => {\n  return !OPERATION_PREDICATES['contained within'](\n    cellLocation,\n    specifiedLocation,\n  )\n}\nOPERATION_PREDICATES['does not contain'] = (\n  cellLocation,\n  specifiedLocation,\n) => {\n  return !OPERATION_PREDICATES['fully contains'](\n    cellLocation,\n    specifiedLocation,\n  )\n}\n\n// MST model for the column filter control\nconst FilterModelType = types\n  .model('ColumnLocStringFilter', {\n    type: types.literal('LocString'),\n    columnNumber: types.integer,\n    locString: '',\n    operation: types.optional(types.enumeration(OPERATIONS), OPERATIONS[0]),\n  })\n  .views(self => ({\n    get locStringIsInvalid() {\n      if (self.locString) {\n        const parsed = this.parsedLocString\n        return (\n          !parsed ||\n          parsed.refName === '' ||\n          typeof parsed.start !== 'number' ||\n          typeof parsed.end !== 'number' ||\n          parsed.start > parsed.end\n        )\n      }\n      return false\n    },\n    get parsedLocString() {\n      const session = getSession(self)\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const model = getParent<any>(self, 3).spreadsheet\n      const { assemblyName } = model\n      try {\n        return parseLocString(self.locString, refName =>\n          session.assemblyManager.isValidRefName(refName, assemblyName),\n        )\n      } catch (e) {\n        return undefined\n      }\n    },\n  }))\n  .views(self => ({\n    // returns a function that tests the given row\n    get predicate() {\n      const {\n        locString,\n        locStringIsInvalid,\n        parsedLocString,\n        operation,\n        columnNumber,\n      } = self // avoid closing over self\n      if (!locString || locStringIsInvalid || !parsedLocString) {\n        return function alwaysTrue() {\n          return true\n        }\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return function stringPredicate(_sheet: any, row: any) {\n        const { cellsWithDerived: cells } = row\n        const cell = cells[columnNumber]\n\n        if (!cell || !cell.text || !cell.extendedData) {\n          return false\n        }\n        const parsedCellText = cell.extendedData\n        if (!parsedCellText.refName) {\n          return false\n        }\n\n        const predicate = OPERATION_PREDICATES[operation]\n        if (!predicate) {\n          throw new Error(`\"${operation}\" not implemented in location filter`)\n        }\n\n        return predicate(parsedCellText, parsedLocString as Loc)\n      }\n    },\n  }))\n  .actions(self => ({\n    setLocString(s: string) {\n      self.locString = s\n    },\n    setOperation(op: string) {\n      self.operation = op\n    },\n  }))\n  .volatile(() => ({ ReactComponent: FilterReactComponent }))\n\n// opens a new LGV at the location described in the locString in the cell text\n\nasync function locationLinkClick(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  spreadsheet: any,\n  _columnNumber: number,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  cell: any,\n) {\n  const session = getSession(spreadsheet)\n  const { assemblyName } = spreadsheet\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const { id } = getParent<any>(spreadsheet)\n\n  const newViewId = `${id}_${assemblyName}`\n  let view = session.views.find(v => v.id === newViewId) as LGV\n  if (!view) {\n    view = session.addView('LinearGenomeView', {\n      id: newViewId,\n    }) as LGV\n  }\n  await view.navToLocString(cell.text, assemblyName)\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype DataCell = any\n\nconst DataCellReactComponent = observer(function ({\n  cell,\n  columnNumber,\n  spreadsheet,\n}: DataCell) {\n  return (\n    <a\n      onClick={async evt => {\n        evt.preventDefault()\n        const session = getSession(spreadsheet)\n        try {\n          await locationLinkClick(spreadsheet, columnNumber, cell)\n        } catch (e) {\n          console.error(e)\n          session.notify(`${e}`, 'error')\n        }\n      }}\n      title=\"open a new linear genome view here\"\n      href=\"#link\"\n    >\n      {cell.text}\n    </a>\n  )\n})\n\nconst LocStringColumnType = MakeSpreadsheetColumnType('LocString', {\n  categoryName: 'Location',\n  displayName: 'Full location',\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  compare(cellA: { extendedData: any }, cellB: { extendedData: any }) {\n    return compareLocs(cellA.extendedData, cellB.extendedData)\n  },\n  FilterModelType,\n  DataCellReactComponent,\n})\n\nexport default LocStringColumnType\n","import React from 'react'\nimport {\n  IconButton,\n  TextField,\n  MenuItem,\n  InputAdornment,\n  Select,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport MakeSpreadsheetColumnType from './MakeSpreadsheetColumnType'\nimport { types, getPropertyMembers } from 'mobx-state-tree'\nimport { observer } from 'mobx-react'\nimport {\n  getPropertyType,\n  getEnumerationValues,\n  getSubType,\n} from '@jbrowse/core/util/mst-reflection'\n\n// icons\nimport ClearIcon from '@mui/icons-material/Clear'\n\nconst OPERATIONS = [\n  'equals',\n  'contains',\n  'does not contain',\n  'does not equal',\n  'starts with',\n  'ends with',\n]\n\n// NOTE: assembly names, if present, are ignored in all of these predicates\nconst OPERATION_PREDICATES = {\n  contains: (textInCell, stringToFind) => {\n    return textInCell.toLowerCase().includes(stringToFind)\n  },\n  equals: (textInCell, stringToFind) => {\n    return textInCell.toLowerCase() === stringToFind\n  },\n  'starts with': (textInCell, stringToFind) => {\n    return textInCell.toLowerCase().indexOf(stringToFind) === 0\n  },\n  'ends with': (textInCell, stringToFind) => {\n    const index = textInCell.toLowerCase().indexOf(stringToFind)\n    if (index === -1) {\n      return false\n    }\n    return index === textInCell.length - stringToFind.length\n  },\n} as { [key: string]: (a: string, b: string) => boolean }\n\nOPERATION_PREDICATES['does not contain'] = (textInCell, stringToFind) => {\n  return !OPERATION_PREDICATES.contains(textInCell, stringToFind)\n}\nOPERATION_PREDICATES['does not equal'] = (textInCell, stringToFind) => {\n  return !OPERATION_PREDICATES.equals(textInCell, stringToFind)\n}\n\nconst useStyles = makeStyles()({\n  textFilterControlAdornment: { marginRight: '-18px' },\n  textFilterControl: {\n    margin: 0,\n    '& .MuiInput-formControl': {\n      marginTop: 8,\n    },\n    '& .MuiInputLabel-formControl': {\n      top: '-7px',\n      '&.MuiInputLabel-shrink': {\n        top: '-3px',\n      },\n    },\n  },\n})\n\n// React component for the column filter control\nconst FilterReactComponent = observer(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ({ filterModel }: { filterModel: any }) => {\n    const { classes } = useStyles()\n    const operationChoices = getEnumerationValues(\n      getSubType(getPropertyType(getPropertyMembers(filterModel), 'operation')),\n    )\n    return (\n      <>\n        <Select\n          value={filterModel.operation}\n          onChange={event => {\n            filterModel.setOperation(String(event.target.value))\n          }}\n        >\n          {operationChoices.map(name => (\n            <MenuItem key={name} value={name}>\n              {name}\n            </MenuItem>\n          ))}\n        </Select>{' '}\n        <TextField\n          label=\"text\"\n          value={filterModel.stringToFind}\n          onChange={evt => filterModel.setString(evt.target.value)}\n          className={classes.textFilterControl}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment\n                className={classes.textFilterControlAdornment}\n                position=\"end\"\n              >\n                <IconButton\n                  aria-label=\"clear filter\"\n                  onClick={() => filterModel.setString('')}\n                >\n                  <ClearIcon />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n      </>\n    )\n  },\n)\n\n// MST model for the column filter control\nconst ColumnTextFilter = types\n  .model('ColumnTextFilter', {\n    type: types.literal('Text'),\n    columnNumber: types.integer,\n    stringToFind: '',\n    operation: types.optional(types.enumeration(OPERATIONS), OPERATIONS[0]),\n  })\n  .views(self => ({\n    // returns a function that tests the given row\n    get predicate() {\n      const { stringToFind, columnNumber, operation } = self // avoid closing over self\n      if (!stringToFind) {\n        return function alwaysTrue() {\n          return true\n        }\n      }\n      const s = stringToFind.toLowerCase() // case insensitive match\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return function stringPredicate(_sheet: any, row: any) {\n        const { cellsWithDerived } = row\n        const cell = cellsWithDerived[columnNumber]\n        if (!cell || !cell.text) {\n          return false\n        }\n        const predicate = OPERATION_PREDICATES[operation]\n        if (!predicate) {\n          throw new Error(`\"${operation}\" not implemented in location filter`)\n        }\n        return predicate(cell.text, s)\n      }\n    },\n  }))\n  .actions(self => ({\n    setString(s: string) {\n      self.stringToFind = s\n    },\n    setOperation(op: string) {\n      self.operation = op\n    },\n  }))\n  .volatile(() => ({ ReactComponent: FilterReactComponent }))\n\nconst TextColumnType = MakeSpreadsheetColumnType('Text', {\n  compare(cellA: { text: string }, cellB: { text: string }) {\n    return cellA.text.localeCompare(cellB.text)\n  },\n  FilterModelType: ColumnTextFilter,\n})\n\nexport { TextColumnType as TextColumn, ColumnTextFilter as FilterModelType }\n","import MakeSpreadsheetColumnType from './MakeSpreadsheetColumnType'\nimport { FilterModelType as NumberFilterModel } from './Text'\nimport { types } from 'mobx-state-tree'\n\nconst FilterModelType = types.compose(\n  NumberFilterModel,\n  types.model({\n    type: types.literal('LocRef'),\n  }),\n)\n\nconst LocRef = MakeSpreadsheetColumnType('LocRef', {\n  categoryName: 'Location',\n  displayName: 'Reference seq',\n  compare(cellA: { text: string }, cellB: { text: string }) {\n    return cellA.text.localeCompare(cellB.text)\n  },\n  FilterModelType,\n})\n\nexport default LocRef\n","import React from 'react'\nimport { types } from 'mobx-state-tree'\nimport { observer } from 'mobx-react'\nimport { MenuItem, Select, TextField } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport MakeSpreadsheetColumnType from './MakeSpreadsheetColumnType'\n\nconst OPERATIONS = [\n  'equals',\n  'greater than',\n  'less than',\n  'between',\n  'not between',\n]\n\n// NOTE: assembly names, if present, are ignored in all of these predicates\nconst OPERATION_PREDICATES = {\n  equals: (numberInCell, firstNumber) => {\n    return numberInCell === firstNumber\n  },\n  'greater than': (numberInCell, firstNumber) => {\n    return numberInCell > firstNumber\n  },\n  'less than': (numberInCell, firstNumber) => {\n    return numberInCell < firstNumber\n  },\n  between: (numberInCell, firstNumber, secondNumber) => {\n    return (\n      numberInCell > firstNumber &&\n      secondNumber !== undefined &&\n      numberInCell < secondNumber\n    )\n  },\n} as { [key: string]: (arg0: number, a: number, b?: number) => boolean }\n\nOPERATION_PREDICATES['not between'] = (\n  numberInCell,\n  firstNumber,\n  secondNumber,\n) => {\n  return !OPERATION_PREDICATES.between(numberInCell, firstNumber, secondNumber)\n}\n\nconst useStyles = makeStyles()({\n  textFilterControlAdornment: { marginRight: '-18px' },\n  textFilterControl: {\n    '& .MuiInput-formControl': {\n      marginTop: 8,\n    },\n    '& .MuiInputLabel-formControl': {\n      top: '-7px',\n      '&.MuiInputLabel-shrink': {\n        top: '-3px',\n      },\n    },\n  },\n})\n\n// React component for the column filter control\nconst FilterReactComponent = observer(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ({ filterModel }: { filterModel: any }) => {\n    const { classes } = useStyles()\n\n    const operationChoices = OPERATIONS\n\n    return (\n      <>\n        <Select\n          value={filterModel.operation}\n          onChange={e => filterModel.setOperation(String(e.target.value))}\n        >\n          {operationChoices.map(name => (\n            <MenuItem key={name} value={name}>\n              {name}\n            </MenuItem>\n          ))}\n        </Select>{' '}\n        <TextField\n          label=\"number\"\n          placeholder=\"123\"\n          type=\"number\"\n          error={filterModel.firstNumberIsInvalid}\n          defaultValue={filterModel.firstNumber}\n          onChange={evt => {\n            filterModel.setFirstNumber(parseFloat(evt.target.value))\n          }}\n          className={classes.textFilterControl}\n        />\n        {filterModel.operation !== 'between' &&\n        filterModel.operation !== 'not between' ? null : (\n          <>\n            {' and '}\n            <TextField\n              label=\"number\"\n              placeholder=\"456\"\n              type=\"number\"\n              error={filterModel.secondNumberIsInvalid}\n              defaultValue={filterModel.secondNumber}\n              onChange={evt =>\n                filterModel.setSecondNumber(parseFloat(evt.target.value))\n              }\n              className={classes.textFilterControl}\n            />\n          </>\n        )}\n      </>\n    )\n  },\n)\n\n// MST model for the column filter control\nconst FilterModelType = types\n  .model('ColumnNumberFilter', {\n    type: types.literal('Number'),\n    columnNumber: types.integer,\n    firstNumber: types.maybe(types.number),\n    secondNumber: types.maybe(types.number),\n    operation: types.optional(types.enumeration(OPERATIONS), OPERATIONS[0]),\n  })\n  .views(self => ({\n    // returns a function that tests the given row\n    get predicate() {\n      if (typeof self.firstNumber !== 'number') {\n        return function alwaysTrue() {\n          return true\n        }\n      }\n\n      const { firstNumber, secondNumber, operation, columnNumber } = self // avoid closing over self\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return function stringPredicate(_sheet: any, row: any) {\n        const { cellsWithDerived } = row\n        const cell = cellsWithDerived[columnNumber]\n\n        if (!cell || !cell.text) {\n          return false\n        }\n\n        const parsedCellText = parseFloat(cell.text)\n        if (typeof parsedCellText !== 'number') {\n          return false\n        }\n\n        const predicate = OPERATION_PREDICATES[operation]\n        if (!predicate) {\n          throw new Error(`\"${operation}\" not implemented in location filter`)\n        }\n\n        return predicate(parsedCellText, firstNumber, secondNumber)\n      }\n    },\n  }))\n  .actions(self => ({\n    setFirstNumber(n: number) {\n      self.firstNumber =\n        Number.isNaN(n) || typeof n !== 'number' ? undefined : n\n    },\n    setSecondNumber(n: number) {\n      self.secondNumber =\n        Number.isNaN(n) || typeof n !== 'number' ? undefined : n\n    },\n    setOperation(op: string) {\n      self.operation = op\n    },\n  }))\n  .volatile(() => ({ ReactComponent: FilterReactComponent }))\n\nconst NumberColumn = MakeSpreadsheetColumnType('Number', {\n  compare(cellA: { text: string }, cellB: { text: string }) {\n    return parseFloat(cellA.text) - parseFloat(cellB.text)\n  },\n  FilterModelType,\n})\n\nexport { NumberColumn, FilterModelType }\n","import LocString from './LocString'\nimport LocRef from './LocRef'\nimport LocStart from './LocStart'\nimport LocEnd from './LocEnd'\nimport { NumberColumn as Number } from './Number'\nimport { TextColumn as Text } from './Text'\nimport { types, IAnyModelType } from 'mobx-state-tree'\n\nconst ColumnTypes = {\n  Number,\n  Text,\n  LocString,\n  LocRef,\n  LocStart,\n  LocEnd,\n}\n\nconst allColumnTypes = Object.values(ColumnTypes)\nconst AnyColumnType = types.union(...allColumnTypes)\nconst AnyFilterModelType = types.union(\n  ...allColumnTypes\n    .map(columnType => {\n      // just instantiate the blank types to get their filter model types\n      const { FilterModelType } = columnType.create({\n        // @ts-expect-error\n        type: columnType.properties.type.value,\n      })\n      return FilterModelType as unknown as IAnyModelType\n    })\n    // some column types might not have filter machinery, filter those out\n    .filter(t => !!t),\n)\n\nexport { ColumnTypes, AnyColumnType, AnyFilterModelType }\n","import MakeSpreadsheetColumnType from './MakeSpreadsheetColumnType'\nimport { types } from 'mobx-state-tree'\nimport { FilterModelType as NumberFilterModel } from './Number'\n\nconst FilterModelType = types.compose(\n  NumberFilterModel,\n  types.model({\n    type: types.literal('LocStart'),\n  }),\n)\n\nconst LocStart = MakeSpreadsheetColumnType('LocStart', {\n  categoryName: 'Location',\n  displayName: 'Start',\n  compare(cellA: { text: string }, cellB: { text: string }) {\n    return parseFloat(cellA.text) - parseFloat(cellB.text)\n  },\n  FilterModelType,\n})\n\nexport default LocStart\n","import MakeSpreadsheetColumnType from './MakeSpreadsheetColumnType'\nimport { FilterModelType as NumberFilterModel } from './Number'\nimport { types } from 'mobx-state-tree'\n\nconst FilterModelType = types.compose(\n  NumberFilterModel,\n  types.model({\n    type: types.literal('LocEnd'),\n  }),\n)\n\nconst LocEnd = MakeSpreadsheetColumnType('LocEnd', {\n  categoryName: 'Location',\n  displayName: 'End',\n  compare(cellA: { text: string }, cellB: { text: string }) {\n    return parseFloat(cellA.text) - parseFloat(cellB.text)\n  },\n  FilterModelType,\n})\n\nexport default LocEnd\n","import { types, getParent } from 'mobx-state-tree'\n\nconst CellModel = types.model('SpreadsheetCell', {\n  text: types.string,\n  extendedData: types.maybe(types.frozen()),\n})\n\nconst RowModel = types\n  .model('SpreadsheetRow', {\n    id: types.identifier,\n    cells: types.array(CellModel),\n    extendedData: types.maybe(types.frozen()),\n    isSelected: false,\n  })\n  .actions(self => ({\n    toggleSelect() {\n      self.isSelected = !self.isSelected\n    },\n    unSelect() {\n      self.isSelected = false\n    },\n    select() {\n      self.isSelected = true\n    },\n    setExtendedData(data: unknown) {\n      self.extendedData = data\n    },\n  }))\n  .views(self => ({\n    get cellsWithDerived() {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const { columns } = getParent<any>(self, 3)\n      let i = 0\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return columns.map((column: { isDerived: boolean; expr: any }) => {\n        if (column.isDerived) {\n          return column.expr.evalSync({\n            row: self,\n          })\n        }\n        return self.cells[i++]\n      })\n    },\n  }))\n\nexport default RowModel\n","import RowModel from './Row'\nimport { types, getParent } from 'mobx-state-tree'\n\nconst StaticRowModel = types\n  .model('StaticRowSet', {\n    isLoaded: types.literal(true),\n    rows: types.array(RowModel),\n  })\n  .views(self => ({\n    get count() {\n      return self.rows.length\n    },\n\n    get passingFiltersCount() {\n      return this.sortedFilteredRows.length\n    },\n\n    get selectedCount() {\n      return this.selectedRows.length\n    },\n\n    get selectedAndPassingFiltersCount() {\n      return this.selectedFilteredRows.length\n    },\n\n    get sortedRows() {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const parent = getParent<any>(self)\n      return [...self.rows].sort(parent.rowSortingComparisonFunction)\n    },\n\n    get selectedRows() {\n      return self.rows.filter(r => r.isSelected)\n    },\n\n    get selectedFilteredRows() {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const sheet = getParent<any>(self)\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const view = getParent<any>(sheet)\n      const { filterControls } = view\n      return this.selectedRows.filter(row =>\n        filterControls.rowPassesFilters(sheet, row),\n      )\n    },\n\n    // the set of all rows that pass the filters, sorted\n    get sortedFilteredRows() {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const sheet = getParent<any>(self)\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const view = getParent<any>(sheet)\n      const { filterControls } = view\n      return self.rows\n        .filter(row => filterControls.rowPassesFilters(sheet, row))\n        .sort(sheet.rowSortingComparisonFunction)\n    },\n  }))\n  .actions(self => ({\n    unselectAll() {\n      self.rows.forEach(row => row.unSelect())\n    },\n  }))\n\nexport default StaticRowModel\n","import { stringToJexlExpression } from '@jbrowse/core/util/jexlStrings'\nimport { getSession, getEnv } from '@jbrowse/core/util'\nimport { autorun } from 'mobx'\nimport {\n  addDisposer,\n  types,\n  getParent,\n  SnapshotIn,\n  Instance,\n} from 'mobx-state-tree'\n\n// locals\nimport { ColumnTypes, AnyColumnType } from './ColumnDataTypes'\nimport StaticRowSetModel from './StaticRowSet'\nimport RowModel from './Row'\n\ntype Row = Instance<typeof RowModel>\n\nconst ColumnDefinition = types\n  .model('ColumnDefinition', {\n    name: types.maybe(types.string),\n    dataType: types.optional(AnyColumnType, () => ({\n      type: 'Text',\n    })),\n    // set to true if column is derived from other columns\n    // if the column is derived, each cell will have a\n    // `derivationFunction` that is called to get its value\n    isDerived: false,\n    // if this cell is derived from other cells, execute this function to get\n    // the value\n    derivationFunctionText: types.maybe(types.string),\n  })\n  .views(self => ({\n    get expr() {\n      if (self.isDerived) {\n        // compile this as a jexl expression\n        return stringToJexlExpression(\n          String(self.derivationFunctionText),\n          getEnv(self).pluginManager.jexl,\n        )\n      }\n      return undefined\n    },\n  }))\n\ntype RowMenuPosition = { anchorEl: Element; rowNumber: string } | null\n\n/**\n * #stateModel SpreadsheetViewSpreadsheet\n * #category view\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst Spreadsheet = types\n  .model('Spreadsheet', {\n    /**\n     * #property\n     */\n    rowSet: types.optional(StaticRowSetModel, () => StaticRowSetModel.create()),\n    /**\n     * #property\n     */\n    columns: types.array(ColumnDefinition),\n    /**\n     * #property\n     */\n    columnDisplayOrder: types.array(types.number),\n    /**\n     * #property\n     */\n    hasColumnNames: false,\n    /**\n     * #property\n     */\n    sortColumns: types.array(\n      types\n        .model('SortColumns', {\n          columnNumber: types.number,\n          descending: false,\n        })\n        .actions(self => ({\n          switchDirection() {\n            self.descending = !self.descending\n          },\n        })),\n    ),\n\n    assemblyName: types.maybe(types.string),\n  })\n  .volatile(() => ({\n    defaultDataType: ColumnTypes.Text,\n    rowMenuPosition: null as RowMenuPosition,\n    isLoaded: false,\n  }))\n  .views(self => ({\n    /**\n     * #getter\n     */\n    get initialized() {\n      const session = getSession(self)\n      const name = self.assemblyName\n      return name ? session.assemblyManager.get(name)?.initialized : false\n    },\n    /**\n     * #getter\n     */\n    get hideRowSelection() {\n      // just delegates to parent\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return getParent<any>(self).hideRowSelection\n    },\n\n    /**\n     * #getter\n     * list of data type names to be made available in the column\n     * dropdown menu\n     */\n    get dataTypeChoices() {\n      const typeNames = Object.keys(ColumnTypes) as (keyof typeof ColumnTypes)[]\n      return typeNames.map(typeName => {\n        const dataType = ColumnTypes[typeName].create({ type: typeName })\n        const { displayName, categoryName } = dataType\n        return { typeName, displayName, categoryName }\n      })\n    },\n\n    /**\n     * #method\n     */\n    rowSortingComparisonFunction(rowA: Row, rowB: Row) {\n      for (let i = 0; i < self.sortColumns.length; i += 1) {\n        const { columnNumber, descending } = self.sortColumns[i]\n        const { dataType } = self.columns[columnNumber]\n        const result = dataType.compare(\n          rowA.cellsWithDerived[columnNumber],\n          rowB.cellsWithDerived[columnNumber],\n        )\n        if (result) {\n          return descending ? -result : result\n        }\n      }\n      return 0\n    },\n  }))\n  .actions(self => ({\n    afterAttach() {\n      addDisposer(\n        self,\n        autorun(async () => {\n          const session = getSession(self)\n          const { assemblyManager } = session\n          try {\n            if (self.assemblyName) {\n              await assemblyManager.waitForAssembly(self.assemblyName)\n              this.setLoaded(true)\n            }\n          } catch (error) {\n            session.notify(\n              `failed to load assembly ${self.assemblyName} ${error}`,\n              'error',\n            )\n          }\n        }),\n      )\n    },\n\n    /**\n     * #action\n     */\n    setLoaded(flag: boolean) {\n      self.isLoaded = flag\n    },\n\n    /**\n     * #action\n     */\n    setRowMenuPosition(newPosition: RowMenuPosition) {\n      self.rowMenuPosition = newPosition\n    },\n\n    /**\n     * #action\n     */\n    setSortColumns(newSort: NonNullable<SnapshotIn<typeof self.sortColumns>>) {\n      if (newSort) {\n        // @ts-expect-error\n        self.sortColumns = newSort\n      }\n    },\n\n    /**\n     * #action\n     */\n    setColumnType(columnNumber: number, newTypeName: string) {\n      self.columns[columnNumber].dataType = { type: newTypeName }\n    },\n\n    /**\n     * #action\n     */\n    unselectAll() {\n      return self.rowSet.unselectAll()\n    },\n  }))\n\nexport type SpreadsheetStateModel = typeof Spreadsheet\nexport type SpreadsheetModel = Instance<SpreadsheetStateModel>\n\nexport default Spreadsheet\n","import { types, getParent, Instance } from 'mobx-state-tree'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport { getSession, getEnv } from '@jbrowse/core/util'\n\n// 30MB\nconst IMPORT_SIZE_LIMIT = 30_000_000\n\nconst fileTypes = ['CSV', 'TSV', 'VCF', 'BED', 'BEDPE', 'STAR-Fusion']\nconst fileTypeParsers = {\n  CSV: () =>\n    import('../importAdapters/ImportUtils').then(r => r.parseCsvBuffer),\n  TSV: () =>\n    import('../importAdapters/ImportUtils').then(r => r.parseTsvBuffer),\n  VCF: () => import('../importAdapters/VcfImport').then(r => r.parseVcfBuffer),\n  BED: () => import('../importAdapters/BedImport').then(r => r.parseBedBuffer),\n  BEDPE: () =>\n    import('../importAdapters/BedImport').then(r => r.parseBedPEBuffer),\n  'STAR-Fusion': () =>\n    import('../importAdapters/STARFusionImport').then(\n      r => r.parseSTARFusionBuffer,\n    ),\n}\n// regexp used to guess the type of a file or URL from its file extension\nconst fileTypesRegexp = new RegExp(`\\\\.(${fileTypes.join('|')})(\\\\.gz)?$`, 'i')\n\n/**\n * #stateModel SpreadsheetImportWizard\n * #category view\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst ImportWizard = types\n  .model('SpreadsheetImportWizard', {\n    /**\n     * #property\n     */\n    fileType: types.optional(types.enumeration(fileTypes), 'CSV'),\n    /**\n     * #property\n     */\n    hasColumnNameLine: true,\n    /**\n     * #property\n     */\n    columnNameLineNumber: 1,\n    /**\n     * #property\n     */\n    selectedAssemblyName: types.maybe(types.string),\n  })\n  .volatile(() => ({\n    fileTypes,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fileSource: undefined as any,\n    error: undefined as unknown,\n    loading: false,\n  }))\n  .views(self => ({\n    get isReadyToOpen() {\n      return (\n        !self.error &&\n        self.fileSource &&\n        (self.fileSource.blobId ||\n          self.fileSource.localPath ||\n          self.fileSource.uri)\n      )\n    },\n    get canCancel() {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return getParent<any>(self).readyToDisplay\n    },\n\n    get fileName() {\n      return (\n        self.fileSource.uri ||\n        self.fileSource.localPath ||\n        (self.fileSource.blobId && self.fileSource.name)\n      )\n    },\n\n    get requiresUnzip() {\n      return this.fileName.endsWith('gz')\n    },\n\n    isValidRefName(refName: string, assemblyName?: string) {\n      const { assemblyManager } = getSession(self)\n      if (!assemblyName) {\n        return false\n      }\n      return assemblyManager.isValidRefName(refName, assemblyName)\n    },\n  }))\n  .actions(self => ({\n    setSelectedAssemblyName(s: string) {\n      self.selectedAssemblyName = s\n    },\n    setFileSource(newSource: unknown) {\n      self.fileSource = newSource\n      self.error = undefined\n\n      if (self.fileSource) {\n        // try to autodetect the file type, ignore errors\n        const name = self.fileName\n\n        if (name) {\n          const match = fileTypesRegexp.exec(name)\n          if (match && match[1]) {\n            self.fileType =\n              match[1] === 'tsv' && name.includes('star-fusion')\n                ? 'STAR-Fusion'\n                : match[1].toUpperCase()\n          }\n        }\n      }\n    },\n\n    toggleHasColumnNameLine() {\n      self.hasColumnNameLine = !self.hasColumnNameLine\n    },\n\n    setColumnNameLineNumber(newnumber: number) {\n      if (newnumber > 0) {\n        self.columnNameLineNumber = newnumber\n      }\n    },\n\n    setFileType(typeName: string) {\n      self.fileType = typeName\n    },\n\n    setError(error: unknown) {\n      console.error(error)\n      self.loading = false\n      self.error = error\n    },\n\n    setLoaded() {\n      self.loading = false\n      self.error = undefined\n    },\n\n    cancelButton() {\n      self.error = undefined\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      getParent<any>(self).setDisplayMode()\n    },\n\n    // fetch and parse the file, make a new Spreadsheet model for it,\n    // then set the parent to display it\n    async import(assemblyName: string) {\n      if (!self.fileSource) {\n        return\n      }\n\n      if (self.loading) {\n        throw new Error('Cannot import, load already in progress')\n      }\n\n      self.selectedAssemblyName = assemblyName\n      self.loading = true\n      const type = self.fileType as keyof typeof fileTypeParsers\n      const typeParser = await fileTypeParsers[type]()\n      if (!typeParser) {\n        throw new Error(`cannot open files of type '${self.fileType}'`)\n      }\n\n      const { unzip } = await import('@gmod/bgzf-filehandle')\n      const { pluginManager } = getEnv(self)\n      const filehandle = openLocation(self.fileSource, pluginManager)\n      try {\n        const stat = await filehandle.stat()\n        if (stat.size > IMPORT_SIZE_LIMIT) {\n          throw new Error(\n            `File is too big. Tabular files are limited to at most ${(\n              IMPORT_SIZE_LIMIT / 1000\n            ).toLocaleString()}kb.`,\n          )\n        }\n      } catch (e) {\n        // not required for stat to succeed to proceed, but it is helpful\n        console.warn(e)\n      }\n\n      try {\n        await filehandle\n          .readFile()\n          .then(buffer => (self.requiresUnzip ? unzip(buffer) : buffer))\n          .then(buffer => typeParser(buffer, self))\n          .then(spreadsheet => {\n            this.setLoaded()\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            getParent<any>(self).displaySpreadsheet(spreadsheet)\n          })\n      } catch (e) {\n        this.setError(e)\n      }\n    },\n  }))\n\nexport type ImportWizardStateModel = typeof ImportWizard\nexport type ImportWizardModel = Instance<ImportWizardStateModel>\n\nexport default ImportWizard\n","import { types, getParent, SnapshotIn } from 'mobx-state-tree'\nimport { AnyFilterModelType as AnyColumnFilter } from './ColumnDataTypes'\n\n// filter that finds a simple string in any of the cells of a row\nconst RowFullTextFilter = types\n  .model('RowFullTextFilter', {\n    type: types.literal('RowFullText'),\n    stringToFind: '',\n  })\n  .views(self => ({\n    // returns a function that tests the given row\n    get predicate() {\n      let s = self.stringToFind // avoid closing over self\n      if (!s) {\n        return function alwaysTrue() {\n          return true\n        }\n      }\n      s = s.toLowerCase()\n      return function stringPredicate(\n        _sheet: unknown,\n        row: { cellsWithDerived: { text: string }[] },\n      ) {\n        const { cellsWithDerived } = row\n        for (const cell of cellsWithDerived) {\n          // note: case insensitive\n          if (cell.text && cell.text.toLowerCase().includes(s)) {\n            return true\n          }\n        }\n        return false\n      }\n    },\n  }))\n  .actions(self => ({\n    setString(s: string) {\n      self.stringToFind = s\n    },\n    clear() {\n      self.stringToFind = ''\n    },\n  }))\n\nconst model = types\n  .model('SpreadsheetFilterControls', {\n    rowFullText: types.optional(\n      RowFullTextFilter,\n      () =>\n        ({\n          type: 'RowFullText',\n          stringToFind: '',\n        } as SnapshotIn<typeof RowFullTextFilter>),\n    ),\n    columnFilters: types.array(AnyColumnFilter),\n  })\n  .views(self => ({\n    get filters() {\n      return [self.rowFullText, ...self.columnFilters].filter(f => !!f)\n    },\n    setRowFullTextFilter(stringToFind: string) {\n      // @ts-expect-error\n      self.rowFullText = {\n        type: 'RowFullText',\n        stringToFind,\n      }\n    },\n    rowPassesFilters(sheet: unknown, row: unknown) {\n      for (let i = 0; i < this.filters.length; i += 1) {\n        if (!this.filters[i].predicate(sheet, row)) {\n          return false\n        }\n      }\n      return true\n    },\n  }))\n  .actions(self => ({\n    addBlankColumnFilter(columnNumber: number) {\n      const { dataType } =\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        getParent<any>(self).spreadsheet.columns[columnNumber]\n      self.columnFilters.push({\n        type: dataType.type,\n        columnNumber,\n      })\n    },\n    removeColumnFilter(filter: typeof AnyColumnFilter) {\n      return self.columnFilters.remove(filter)\n    },\n    clearAllFilters() {\n      self.columnFilters.clear()\n      self.rowFullText.clear()\n    },\n  }))\n\nexport default model\n","import {\n  types,\n  getParent,\n  getEnv,\n  cast,\n  SnapshotIn,\n  Instance,\n} from 'mobx-state-tree'\nimport { BaseViewModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { MenuItem } from '@jbrowse/core/ui'\nimport { getSession } from '@jbrowse/core/util'\n\n// icons\nimport DoneIcon from '@mui/icons-material/Done'\nimport FolderOpenIcon from '@mui/icons-material/FolderOpen'\n\nimport SpreadsheetModel from './Spreadsheet'\nimport ImportWizardModel from './ImportWizard'\nimport FilterControlsModel from './FilterControls'\n\ntype Spreadsheet = Instance<typeof SpreadsheetModel>\n\nexport type MenuItemWithDisabledCallback = MenuItem & {\n  disabled?:\n    | boolean\n    | ((\n        viewModel: unknown,\n        spreadsheetModel: Spreadsheet,\n        rowNumber: number,\n        row: Spreadsheet['rowSet']['rows'][0],\n      ) => boolean)\n}\n\nconst defaultRowMenuItems: MenuItemWithDisabledCallback[] = [\n  {\n    label: 'Toggle select',\n    icon: DoneIcon,\n    onClick(_view: unknown, spreadsheet: Spreadsheet) {\n      const rowNumber = spreadsheet.rowMenuPosition?.rowNumber\n      if (rowNumber !== undefined) {\n        spreadsheet.rowSet.rows[+rowNumber - 1].toggleSelect()\n      }\n    },\n  },\n]\n\nconst minHeight = 40\nconst defaultHeight = 440\n\n/**\n * #stateModel SpreadsheetView\n * #category view\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst model = types\n  .model('SpreadsheetView', {\n    /**\n     * #property\n     */\n    type: types.literal('SpreadsheetView'),\n    /**\n     * #property\n     */\n    offsetPx: 0,\n    /**\n     * #property\n     */\n    height: types.optional(\n      types.refinement(\n        'SpreadsheetViewHeight',\n        types.number,\n        n => n >= minHeight,\n      ),\n      defaultHeight,\n    ),\n    /**\n     * #property\n     */\n    hideVerticalResizeHandle: false,\n    /**\n     * #property\n     */\n    hideFilterControls: false,\n    /**\n     * #property\n     */\n    filterControls: types.optional(FilterControlsModel, () =>\n      FilterControlsModel.create({}),\n    ),\n    /**\n     * #property\n     * switch specifying whether we are showing the import wizard or the\n     * spreadsheet in our viewing area\n     */\n    mode: types.optional(\n      types.enumeration('SpreadsheetViewMode', ['import', 'display']),\n      'import',\n    ),\n    /**\n     * #property\n     */\n    importWizard: types.optional(ImportWizardModel, () =>\n      ImportWizardModel.create(),\n    ),\n    /**\n     * #property\n     */\n    spreadsheet: types.maybe(SpreadsheetModel),\n  })\n  .volatile(() => ({\n    width: 400,\n    rowMenuItems: defaultRowMenuItems,\n  }))\n  .views(self => ({\n    /**\n     * #getter\n     */\n    get readyToDisplay() {\n      return !!self.spreadsheet && self.spreadsheet.isLoaded\n    },\n    /**\n     * #getter\n     */\n    get hideRowSelection() {\n      return !!getEnv(self).hideRowSelection\n    },\n    /**\n     * #getter\n     */\n    get outputRows() {\n      if (self.spreadsheet && self.spreadsheet.rowSet.isLoaded) {\n        const selected = self.spreadsheet.rowSet.selectedFilteredRows\n        if (selected.length) {\n          return selected\n        }\n        return self.spreadsheet.rowSet.sortedFilteredRows\n      }\n      return undefined\n    },\n    /**\n     * #getter\n     */\n    get assembly() {\n      const name = self.spreadsheet?.assemblyName\n      if (name) {\n        const assemblies = getSession(self).assemblies\n        return assemblies?.find(asm => readConfObject(asm, 'name') === name)\n      }\n      return undefined\n    },\n  }))\n  .actions(self => ({\n    /**\n     * #action\n     */\n    setRowMenuItems(newItems: MenuItem[]) {\n      self.rowMenuItems = newItems\n    },\n    /**\n     * #action\n     */\n    setWidth(newWidth: number) {\n      self.width = newWidth\n      return self.width\n    },\n    /**\n     * #action\n     */\n    setHeight(newHeight: number) {\n      self.height = newHeight > minHeight ? newHeight : minHeight\n      return self.height\n    },\n    /**\n     * #action\n     */\n    resizeHeight(distance: number) {\n      const oldHeight = self.height\n      const newHeight = this.setHeight(self.height + distance)\n      return newHeight - oldHeight\n    },\n    /**\n     * #action\n     */\n    resizeWidth(distance: number) {\n      const oldWidth = self.width\n      const newWidth = this.setWidth(self.width + distance)\n      return newWidth - oldWidth\n    },\n\n    /**\n     * #action\n     * load a new spreadsheet and set our mode to display it\n     */\n    displaySpreadsheet(spreadsheet: SnapshotIn<typeof SpreadsheetModel>) {\n      self.filterControls.clearAllFilters()\n      self.spreadsheet = cast(spreadsheet)\n      self.mode = 'display'\n    },\n    /**\n     * #action\n     */\n    setImportMode() {\n      self.mode = 'import'\n    },\n    /**\n     * #action\n     */\n    setDisplayMode() {\n      if (self.readyToDisplay) {\n        self.mode = 'display'\n      }\n    },\n    /**\n     * #action\n     */\n    closeView() {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      getParent<any>(self, 2).removeView(self)\n    },\n  }))\n  .views(self => ({\n    /**\n     * #method\n     */\n    menuItems() {\n      return [\n        {\n          label: 'Return to import form',\n          onClick: () => self.setImportMode(),\n          icon: FolderOpenIcon,\n        },\n      ]\n    },\n  }))\n\nconst SpreadsheetView = types.compose(BaseViewModel, model)\n\nexport type SpreadsheetViewStateModel = typeof SpreadsheetView\nexport type SpreadsheetViewModel = Instance<SpreadsheetViewStateModel>\n\nexport default SpreadsheetView\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport Plugin from '@jbrowse/core/Plugin'\nimport { AbstractSessionModel, isAbstractMenuManager } from '@jbrowse/core/util'\n\n// icons\nimport ViewComfyIcon from '@mui/icons-material/ViewComfy'\n\n// locals\nimport SpreadsheetViewF from './SpreadsheetView'\n\nimport LaunchSpreadsheetViewF from './LaunchSpreadsheetView'\n\nexport default class SpreadsheetViewPlugin extends Plugin {\n  name = 'SpreadsheetViewPlugin'\n\n  install(pluginManager: PluginManager) {\n    SpreadsheetViewF(pluginManager)\n    LaunchSpreadsheetViewF(pluginManager)\n  }\n\n  configure(pluginManager: PluginManager) {\n    const { rootModel } = pluginManager\n    if (isAbstractMenuManager(rootModel)) {\n      rootModel.appendToSubMenu(['Add'], {\n        label: 'Spreadsheet view',\n        icon: ViewComfyIcon,\n        onClick: (session: AbstractSessionModel) => {\n          session.addView('SpreadsheetView', {})\n        },\n      })\n    }\n  }\n}\n\nexport {\n  type SpreadsheetViewModel,\n  type SpreadsheetViewStateModel,\n} from './SpreadsheetView'\n","import { lazy } from 'react'\nimport { ViewType } from '@jbrowse/core/pluggableElementTypes'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport stateModel from './models/SpreadsheetView'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addViewType(() => {\n    return new ViewType({\n      name: 'SpreadsheetView',\n      displayName: 'Spreadsheet view',\n      stateModel,\n      ReactComponent: lazy(() => import('./components/SpreadsheetView')),\n    })\n  })\n}\n\nexport {\n  type SpreadsheetViewModel,\n  type SpreadsheetViewStateModel,\n} from './models/SpreadsheetView'\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { AbstractSessionModel } from '@jbrowse/core/util'\nimport { SpreadsheetViewModel } from '../SpreadsheetView'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addToExtensionPoint(\n    'LaunchView-SpreadsheetView',\n    // @ts-expect-error\n    async ({\n      session,\n      assembly,\n      uri,\n      fileType,\n    }: {\n      session: AbstractSessionModel\n      assembly: string\n      uri: string\n      fileType?: string\n    }) => {\n      const view = session.addView('SpreadsheetView') as SpreadsheetViewModel\n\n      if (!view) {\n        throw new Error('Failed to initialize view')\n      }\n      const exts = uri.split('.')\n      let ext = exts?.pop()?.toUpperCase()\n      if (ext === 'GZ') {\n        ext = exts?.pop()?.toUpperCase()\n      }\n\n      view.importWizard.setFileType(fileType || ext || '')\n      view.importWizard.setSelectedAssemblyName(assembly)\n      view.importWizard.setFileSource({\n        uri,\n        locationType: 'UriLocation',\n      })\n      await view.importWizard.import(assembly)\n    },\n  )\n}\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { Grid, FormControlLabel, Checkbox } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport { SvInspectorViewModel } from '../models/SvInspectorView'\n\nconst useStyles = makeStyles()(theme => ({\n  circularViewOptions: {\n    padding: theme.spacing(1),\n  },\n}))\n\nconst CircularViewOptions = observer(function ({\n  svInspector,\n}: {\n  svInspector: SvInspectorViewModel\n}) {\n  const { classes } = useStyles()\n\n  return (\n    <Grid\n      container\n      className={classes.circularViewOptions}\n      style={{ height: svInspector.circularViewOptionsBarHeight }}\n    >\n      <Grid item>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={svInspector.onlyDisplayRelevantRegionsInCircularView}\n              onChange={e =>\n                svInspector.setOnlyDisplayRelevantRegionsInCircularView(\n                  e.target.checked,\n                )\n              }\n            />\n          }\n          label=\"show only regions with data\"\n        />\n      </Grid>\n    </Grid>\n  )\n})\n\nexport default CircularViewOptions\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\nimport { ResizeHandle } from '@jbrowse/core/ui'\n\n// locals\nimport { SvInspectorViewModel } from '../models/SvInspectorView'\nimport CircularViewOptions from './CircularViewOptions'\n\nconst useStyles = makeStyles()(theme => ({\n  resizeHandleVert: {\n    background: theme.palette.action.selected,\n    width: 4,\n    boxSizing: 'border-box',\n    borderTop: '1px solid #fafafa',\n  },\n  resizeHandleHoriz: {\n    background: theme.palette.action.selected,\n    height: 4,\n    boxSizing: 'border-box',\n    borderTop: '1px solid #fafafa',\n  },\n  viewControls: {\n    margin: 0,\n  },\n  viewsContainer: {\n    display: 'flex',\n  },\n  container: {\n    overflow: 'hidden',\n  },\n}))\n\nexport default observer(function SvInspectorView({\n  model,\n}: {\n  model: SvInspectorViewModel\n}) {\n  const { classes } = useStyles()\n\n  const {\n    SpreadsheetViewReactComponent,\n    CircularViewReactComponent,\n    showCircularView,\n  } = model\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.viewsContainer}>\n        <div\n          style={{ width: model.spreadsheetView.width }}\n          className={classes.container}\n        >\n          <SpreadsheetViewReactComponent model={model.spreadsheetView} />\n        </div>\n\n        {showCircularView ? (\n          <>\n            <ResizeHandle\n              onDrag={distance => {\n                const ret1 = model.circularView.resizeWidth(-distance)\n                return model.spreadsheetView.resizeWidth(-ret1)\n              }}\n              vertical\n              flexbox\n              className={classes.resizeHandleVert}\n            />\n            <div style={{ width: model.circularView.width }}>\n              <CircularViewOptions svInspector={model} />\n              <CircularViewReactComponent model={model.circularView} />\n            </div>\n          </>\n        ) : null}\n      </div>\n      <ResizeHandle\n        onDrag={model.resizeHeight}\n        className={classes.resizeHandleHoriz}\n      />\n    </div>\n  )\n})\n","// this file contains the rather verbose functions for\n// creating features from CSV/TSV lines\nimport { parseLocString } from '@jbrowse/core/util'\n\nexport function makeAdHocFeature(\n  columns,\n  columnsAlreadyUsedInLocations,\n  row,\n  loc1,\n  loc2,\n  rowNumber,\n) {\n  // load all the other data in the row into an `otherData` object\n  const otherData = {}\n  columns.forEach((column, columnNumber) => {\n    if (columnsAlreadyUsedInLocations.includes(columnNumber)) {\n      return\n    }\n    let { text } = row.cells[columnNumber]\n    if (column.dataType.type === 'Number') {\n      text = parseFloat(text)\n    }\n    otherData[column.name] = text\n  })\n\n  // make the final feature data out of otherData + the parsed locations\n  return {\n    ...otherData,\n    uniqueId: `sv-inspector-adhoc-${rowNumber}`,\n    refName: loc1.refName,\n    start: loc1.start,\n    end: loc1.end,\n    mate: {\n      refName: loc2.refName,\n      start: loc2.start,\n      end: loc2.end,\n    },\n  }\n}\n\nexport function makeAdHocSvFeatureFromTwoLocations(\n  columns,\n  locationColumnNumbers,\n  row,\n  rowNumber,\n  isValidRefName,\n) {\n  // use the first two locations we found (first according to *displayed* order)\n  const loc1 = parseLocString(\n    row.cells[locationColumnNumbers[0]].text,\n    isValidRefName,\n  )\n  const loc2 = parseLocString(\n    row.cells[locationColumnNumbers[1]].text,\n    isValidRefName,\n  )\n\n  const columnsAlreadyUsedInLocations = [\n    locationColumnNumbers[0],\n    locationColumnNumbers[1],\n  ]\n\n  return makeAdHocFeature(\n    columns,\n    columnsAlreadyUsedInLocations,\n    row,\n    loc1,\n    loc2,\n    rowNumber,\n  )\n}\n\nexport function makeAdHocSvFeatureFromTwoRefStartEndSets(\n  columns,\n  locRefColumnNumbers,\n  locStartColumnNumbers,\n  locEndColumnNumbers,\n  row,\n  rowNumber,\n) {\n  const textOf = colno => row.cells[colno].text\n  const loc1 = {\n    refName: textOf(locRefColumnNumbers[0]),\n    start: parseInt(textOf(locStartColumnNumbers[0]), 10) - 1,\n    end: parseInt(textOf(locEndColumnNumbers[0]), 10),\n  }\n  const loc2 = {\n    refName: textOf(locRefColumnNumbers[1]),\n    start: parseInt(textOf(locStartColumnNumbers[1]), 10) - 1,\n    end: parseInt(textOf(locEndColumnNumbers[1]), 10),\n  }\n  const columnsAlreadyUsedInLocations = [\n    locRefColumnNumbers[0],\n    locStartColumnNumbers[0],\n    locEndColumnNumbers[0],\n    locRefColumnNumbers[1],\n    locStartColumnNumbers[1],\n    locEndColumnNumbers[1],\n  ]\n  return makeAdHocFeature(\n    columns,\n    columnsAlreadyUsedInLocations,\n    row,\n    loc1,\n    loc2,\n    rowNumber,\n  )\n}\n\n// makes a feature data object (passed as `data` to a SimpleFeature constructor)\n// out of table row if the row has 2 location columns. undefined if not\nexport function makeAdHocSvFeature(sheet, rowNumber, row, isValidRefName) {\n  const { columns, columnDisplayOrder } = sheet\n  const columnTypes = {}\n  columnDisplayOrder.forEach(columnNumber => {\n    const columnDefinition = columns[columnNumber]\n    if (!columnTypes[columnDefinition.dataType.type]) {\n      columnTypes[columnDefinition.dataType.type] = []\n    }\n    columnTypes[columnDefinition.dataType.type].push(columnNumber)\n  })\n  const locationColumnNumbers = columnTypes.LocString || []\n  const locStartColumnNumbers = columnTypes.LocStart || []\n  const locEndColumnNumbers = columnTypes.LocEnd || []\n  const locRefColumnNumbers = columnTypes.LocRef || []\n\n  // if we have 2 or more columns of type location, make a feature from them\n  if (locationColumnNumbers.length >= 2) {\n    return makeAdHocSvFeatureFromTwoLocations(\n      columns,\n      locationColumnNumbers,\n      row,\n      rowNumber,\n      isValidRefName,\n    )\n  }\n  if (\n    locRefColumnNumbers.length >= 2 &&\n    locStartColumnNumbers.length >= 2 &&\n    locEndColumnNumbers.length >= 2\n  ) {\n    return makeAdHocSvFeatureFromTwoRefStartEndSets(\n      columns,\n      locRefColumnNumbers,\n      locStartColumnNumbers,\n      locEndColumnNumbers,\n      row,\n      rowNumber,\n    )\n  }\n  return undefined\n}\n","import { SimpleFeature, getEnv, getSession } from '@jbrowse/core/util'\nimport { makeAdHocSvFeature } from './adhocFeatureUtils'\n\nexport function getFeatureForRow(session, spreadsheetView, row, rowNumber) {\n  return (\n    row.extendedData?.vcfFeature ||\n    row.extendedData?.feature ||\n    makeAdHocSvFeature(\n      spreadsheetView.spreadsheet,\n      rowNumber,\n      row,\n      session.assemblyManager.isValidRefName,\n    )\n  )\n}\n\nexport function breakpointSplitViewSnapshotFromTableRow(\n  svInspectorView,\n  spreadsheetView,\n  spreadsheet,\n  row,\n  rowNumber,\n) {\n  const { pluginManager } = getEnv(svInspectorView)\n  const session = getSession(spreadsheetView)\n  const featureData = getFeatureForRow(session, spreadsheet, row, rowNumber)\n\n  if (featureData) {\n    const feature = new SimpleFeature(featureData)\n    session.setSelection(feature)\n    return pluginManager\n      .getViewType('BreakpointSplitView')\n      .snapshotFromBreakendFeature(feature, svInspectorView.circularView)\n  }\n  return undefined\n}\n\nexport function openBreakpointSplitViewFromTableRow(\n  svInspectorView,\n  spreadsheetView,\n  spreadsheet,\n  row,\n  rowNumber,\n) {\n  const viewSnapshot = breakpointSplitViewSnapshotFromTableRow(\n    svInspectorView,\n    spreadsheetView,\n    spreadsheet,\n    row,\n    rowNumber,\n  )\n  if (viewSnapshot) {\n    // try to center the offsetPx\n    const { circularView } = svInspectorView\n    viewSnapshot.views[0].offsetPx -= circularView.width / 2 + 100\n    viewSnapshot.views[1].offsetPx -= circularView.width / 2 + 100\n\n    const session = getSession(spreadsheetView)\n    session.addView('BreakpointSplitView', viewSnapshot)\n  }\n}\n\nexport function canOpenBreakpointSplitViewFromTableRow(\n  svInspectorView,\n  spreadsheetView,\n  spreadsheet,\n  row,\n  rowNumber,\n) {\n  try {\n    return Boolean(\n      breakpointSplitViewSnapshotFromTableRow(\n        svInspectorView,\n        spreadsheetView,\n        spreadsheet,\n        row,\n        rowNumber,\n      ),\n    )\n  } catch (e) {\n    console.error('Unable to open breakpoint split view from table row', e)\n    return false\n  }\n}\n","import clone from 'clone'\nimport { autorun, reaction } from 'mobx'\nimport { types, getParent, addDisposer, Instance } from 'mobx-state-tree'\n\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { getSession, Region } from '@jbrowse/core/util'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport { BaseViewModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport { SpreadsheetViewStateModel } from '@jbrowse/plugin-spreadsheet-view'\nimport { CircularViewStateModel } from '@jbrowse/plugin-circular-view'\n\n// icons\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew'\nimport FolderOpenIcon from '@mui/icons-material/FolderOpen'\n\n// locals\nimport {\n  canOpenBreakpointSplitViewFromTableRow,\n  openBreakpointSplitViewFromTableRow,\n  getFeatureForRow,\n} from './breakpointSplitViewFromTableRow'\n\n/**\n * #stateModel SvInspectorView\n * #category view\n * combination of a spreadsheetview and a circularview\n */\nfunction SvInspectorViewF(pluginManager: PluginManager) {\n  const SpreadsheetViewType = pluginManager.getViewType('SpreadsheetView')\n  const CircularViewType = pluginManager.getViewType('CircularView')\n\n  const SpreadsheetModel =\n    SpreadsheetViewType.stateModel as SpreadsheetViewStateModel\n  const CircularModel = CircularViewType.stateModel as CircularViewStateModel\n\n  const minHeight = 400\n  const defaultHeight = 550\n  const headerHeight = 52\n  const circularViewOptionsBarHeight = 52\n  return types\n    .compose(\n      BaseViewModel,\n      types.model('SvInspectorView', {\n        /**\n         * #property\n         */\n        id: ElementId,\n        /**\n         * #property\n         */\n        type: types.literal('SvInspectorView'),\n\n        /**\n         * #property\n         */\n        height: types.optional(\n          types.refinement(\n            'SvInspectorViewHeight',\n            types.number,\n            n => n >= minHeight,\n          ),\n          defaultHeight,\n        ),\n        /**\n         * #property\n         */\n        onlyDisplayRelevantRegionsInCircularView: false,\n        /**\n         * #property\n         * switch specifying whether we are showing the import wizard or the\n         * spreadsheet in our viewing area\n         */\n        mode: types.optional(\n          types.enumeration('SvInspectorViewMode', ['import', 'display']),\n          'import',\n        ),\n        /**\n         * #property\n         */\n        spreadsheetView: types.optional(SpreadsheetModel, () =>\n          SpreadsheetModel.create({\n            type: 'SpreadsheetView',\n            hideVerticalResizeHandle: true,\n          }),\n        ),\n        /**\n         * #property\n         */\n        circularView: types.optional(CircularModel, () =>\n          CircularModel.create({\n            type: 'CircularView',\n            hideVerticalResizeHandle: true,\n            hideTrackSelectorButton: true,\n            disableImportForm: true,\n          }),\n        ),\n      }),\n    )\n    .volatile(() => ({\n      width: 800,\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get selectedRows() {\n        // @ts-expect-error\n        return self.spreadsheetView.rowSet.selectedRows\n      },\n      /**\n       * #getter\n       */\n      get assemblyName() {\n        const { assembly } = self.spreadsheetView\n        return assembly ? readConfObject(assembly, 'name') : undefined\n      },\n      /**\n       * #getter\n       */\n      get showCircularView() {\n        return self.spreadsheetView.mode === 'display'\n      },\n\n      /**\n       * #getter\n       */\n      get features() {\n        const session = getSession(self)\n        const { spreadsheetView } = self\n        const { outputRows = [] } = spreadsheetView\n        return outputRows\n          .map((r, i) => getFeatureForRow(session, spreadsheetView, r, i))\n          .filter(f => !!f)\n      },\n      /**\n       * #getter\n       */\n      get featuresAdapterConfigSnapshot() {\n        return {\n          type: 'FromConfigAdapter',\n          features: this.features,\n        }\n      },\n      /**\n       * #getter\n       */\n      get featureRefNames() {\n        const refs = this.features.map(r => r.refName)\n        const CHR2 = this.features.flatMap(r => r.INFO?.CHR2).filter(f => !!f)\n        return [...refs, ...CHR2]\n      },\n      /**\n       * #getter\n       */\n      get featuresCircularTrackConfiguration() {\n        return {\n          type: 'VariantTrack',\n          trackId: `sv-inspector-variant-track-${self.id}`,\n          name: 'features from tabular data',\n          adapter: this.featuresAdapterConfigSnapshot,\n          assemblyNames: [this.assemblyName],\n          displays: [\n            {\n              type: 'ChordVariantDisplay',\n              displayId: `sv-inspector-variant-track-chord-display-${self.id}`,\n              onChordClick: `jexl:defaultOnChordClick(feature, track, pluginManager)`,\n              renderer: { type: 'StructuralVariantChordRenderer' },\n            },\n          ],\n        }\n      },\n    }))\n    .volatile(() => ({\n      SpreadsheetViewReactComponent: SpreadsheetViewType.ReactComponent,\n      CircularViewReactComponent: CircularViewType.ReactComponent,\n      circularViewOptionsBarHeight,\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setWidth(newWidth: number) {\n        self.width = newWidth\n      },\n      /**\n       * #action\n       */\n      setHeight(newHeight: number) {\n        self.height = newHeight > minHeight ? newHeight : minHeight\n        return self.height\n      },\n      /**\n       * #action\n       */\n      setImportMode() {\n        self.spreadsheetView.setImportMode()\n      },\n      /**\n       * #action\n       */\n      setDisplayMode() {\n        self.spreadsheetView.setDisplayMode()\n      },\n      /**\n       * #action\n       */\n      closeView() {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        getParent<any>(self, 2).removeView(self)\n      },\n      /**\n       * #action\n       */\n      setDisplayedRegions(regions: Region[]) {\n        self.circularView.setDisplayedRegions(regions)\n      },\n      /**\n       * #action\n       */\n      setOnlyDisplayRelevantRegionsInCircularView(val: boolean) {\n        self.onlyDisplayRelevantRegionsInCircularView = Boolean(val)\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       */\n      menuItems() {\n        return [\n          {\n            label: 'Return to import form',\n            onClick: () => self.setImportMode(),\n            icon: FolderOpenIcon,\n          },\n        ]\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      resizeHeight(distance: number) {\n        const oldHeight = self.height\n        const newHeight = self.setHeight(self.height + distance)\n        return newHeight - oldHeight\n      },\n      afterAttach() {\n        // synchronize subview widths\n        addDisposer(\n          self,\n          autorun(\n            () => {\n              const borderWidth = 1\n              if (self.showCircularView) {\n                const spreadsheetWidth = Math.round(self.width * 0.66)\n                const circularViewWidth = self.width - spreadsheetWidth\n                self.spreadsheetView.setWidth(spreadsheetWidth - borderWidth)\n                self.circularView.setWidth(circularViewWidth)\n              } else {\n                self.spreadsheetView.setWidth(self.width)\n              }\n            },\n            { name: 'SvInspectorView width binding' },\n          ),\n        )\n        // synchronize subview heights\n        addDisposer(\n          self,\n          autorun(\n            () => {\n              self.spreadsheetView.setHeight(self.height - headerHeight)\n              self.circularView.setHeight(\n                self.height - headerHeight - circularViewOptionsBarHeight,\n              )\n            },\n            { name: 'SvInspectorView height binding' },\n          ),\n        )\n\n        // bind circularview displayedRegions to spreadsheet assembly, mediated\n        // by the onlyRelevantRegions toggle\n        addDisposer(\n          self,\n          autorun(\n            async () => {\n              const {\n                assemblyName,\n                onlyDisplayRelevantRegionsInCircularView,\n                circularView,\n                featureRefNames,\n              } = self\n              const { tracks } = circularView\n              const { assemblyManager } = getSession(self)\n              if (!assemblyName) {\n                return\n              }\n              const asm = await assemblyManager.waitForAssembly(assemblyName)\n              if (!asm) {\n                return\n              }\n\n              const { getCanonicalRefName, regions = [] } = asm\n              if (onlyDisplayRelevantRegionsInCircularView) {\n                if (tracks.length === 1) {\n                  try {\n                    // canonicalize the store's ref names if necessary\n                    const refSet = new Set(\n                      featureRefNames.map(r => getCanonicalRefName(r) || r),\n                    )\n\n                    circularView.setDisplayedRegions(\n                      clone(regions.filter(r => refSet.has(r.refName))),\n                    )\n                  } catch (e) {\n                    circularView.setError(e)\n                  }\n                }\n              } else {\n                circularView.setDisplayedRegions(regions)\n              }\n            },\n            { name: 'SvInspectorView displayed regions bind' },\n          ),\n        )\n\n        // bind circularview tracks to our track snapshot view\n        addDisposer(\n          self,\n          reaction(\n            () => ({\n              generatedTrackConf: self?.featuresCircularTrackConfiguration,\n              assemblyName: self?.assemblyName,\n            }),\n            data => {\n              if (!data) {\n                return\n              }\n              const { assemblyName, generatedTrackConf } = data\n              const { circularView } = self\n              // hide any visible tracks\n              circularView.tracks.forEach(t =>\n                circularView.hideTrack(t.configuration.trackId),\n              )\n\n              // put our track in as the only track\n              if (assemblyName && generatedTrackConf) {\n                // @ts-expect-error\n                circularView.addTrackConf(generatedTrackConf, {\n                  assemblyName,\n                })\n              }\n            },\n            {\n              name: 'SvInspectorView track configuration binding',\n              fireImmediately: true,\n            },\n          ),\n        )\n\n        // bind spreadsheetView row menu actions to us\n        addDisposer(\n          self,\n          autorun(() => {\n            self.spreadsheetView.setRowMenuItems(\n              // these are the MenuItem entries for the row menu actions in the\n              // spreadsheet view.  these are installed into the child\n              // SpreadsheetView using an autorun below\n              [\n                {\n                  label: 'Open split detail view',\n                  icon: OpenInNewIcon,\n                  // @ts-expect-error\n                  disabled(spreadsheetView, spreadsheet, rowNumber, row) {\n                    return !canOpenBreakpointSplitViewFromTableRow(\n                      self,\n                      spreadsheetView,\n                      spreadsheet,\n                      row,\n                      rowNumber,\n                    )\n                  },\n\n                  // @ts-expect-error\n                  onClick(spreadsheetView, spreadsheet, rowNumber, row) {\n                    openBreakpointSplitViewFromTableRow(\n                      self,\n                      spreadsheetView,\n                      spreadsheet,\n                      row,\n                      rowNumber,\n                    )\n                  },\n                },\n              ],\n            )\n          }),\n        )\n      },\n    }))\n}\n\nexport type SvInspectorViewStateModel = ReturnType<typeof SvInspectorViewF>\nexport type SvInspectorViewModel = Instance<SvInspectorViewStateModel>\n\nexport default SvInspectorViewF\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport ViewType from '@jbrowse/core/pluggableElementTypes/ViewType'\n\nimport ReactComponent from './components/SvInspectorView'\nimport stateModelFactory from './models/SvInspectorView'\nimport { Feature, getContainingView, getSession } from '@jbrowse/core/util'\nimport { IAnyStateTreeNode } from 'mobx-state-tree'\n\nfunction defaultOnChordClick(\n  feature: Feature,\n  chordTrack: IAnyStateTreeNode,\n  pluginManager: PluginManager,\n) {\n  const session = getSession(chordTrack)\n  session.setSelection(feature)\n  const view = getContainingView(chordTrack)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const viewType = pluginManager.getViewType('BreakpointSplitView') as any\n  const viewSnapshot = viewType.snapshotFromBreakendFeature(feature, view)\n\n  // try to center the offsetPx\n  viewSnapshot.views[0].offsetPx -= view.width / 2 + 100\n  viewSnapshot.views[1].offsetPx -= view.width / 2 + 100\n  viewSnapshot.featureData = feature.toJSON()\n\n  session.addView('BreakpointSplitView', viewSnapshot)\n}\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.jexl.addFunction('defaultOnChordClick', defaultOnChordClick)\n\n  pluginManager.addViewType(() => {\n    const stateModel = stateModelFactory(pluginManager)\n    return new ViewType({\n      name: 'SvInspectorView',\n      displayName: 'SV inspector',\n      stateModel,\n      ReactComponent,\n    })\n  })\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport Plugin from '@jbrowse/core/Plugin'\nimport {\n  AbstractSessionModel,\n  isAbstractMenuManager,\n} from '@jbrowse/core/util/types'\n\n// icons\nimport TableChartIcon from '@mui/icons-material/TableChart'\n\n// locals\nimport SvInspectorViewF from './SvInspectorView'\nimport LaunchSvInspectorViewF from './LaunchSvInspectorView'\n\nexport default class SvInspectorViewPlugin extends Plugin {\n  name = 'SvInspectorViewPlugin'\n\n  install(pluginManager: PluginManager) {\n    SvInspectorViewF(pluginManager)\n    LaunchSvInspectorViewF(pluginManager)\n  }\n\n  configure(pluginManager: PluginManager) {\n    if (isAbstractMenuManager(pluginManager.rootModel)) {\n      pluginManager.rootModel.appendToSubMenu(['Add'], {\n        label: 'SV inspector',\n        icon: TableChartIcon,\n        onClick: (session: AbstractSessionModel) => {\n          session.addView('SvInspectorView', {})\n        },\n      })\n    }\n  }\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { AbstractSessionModel } from '@jbrowse/core/util'\nimport { SvInspectorViewModel } from '../SvInspectorView/models/SvInspectorView'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addToExtensionPoint(\n    'LaunchView-SvInspectorView',\n    // @ts-expect-error\n    async ({\n      session,\n      assembly,\n      uri,\n      fileType,\n    }: {\n      session: AbstractSessionModel\n      assembly: string\n      uri: string\n      fileType?: string\n    }) => {\n      // add view, make typescript happy with return type\n      const view = session.addView('SvInspectorView') as SvInspectorViewModel\n\n      if (!view) {\n        throw new Error('Failed to initialize view')\n      }\n      const exts = uri.split('.')\n      let ext = exts?.pop()?.toUpperCase()\n      if (ext === 'GZ') {\n        ext = exts?.pop()?.toUpperCase()\n      }\n\n      view.spreadsheetView.importWizard.setFileType(fileType || ext || '')\n      view.spreadsheetView.importWizard.setSelectedAssemblyName(assembly)\n      view.spreadsheetView.importWizard.setFileSource({\n        uri,\n        locationType: 'UriLocation',\n      })\n      await view.spreadsheetView.importWizard.import(assembly)\n    },\n  )\n}\n","import React from 'react'\nimport { Region } from '@jbrowse/core/util/types'\nimport { PrerenderedCanvas } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\n\nexport default observer(function HicRendering(props: {\n  blockKey: string\n  width: number\n  height: number\n  regions: Region[]\n  bpPerPx: number\n}) {\n  const { width, height } = props\n  const canvasWidth = Math.ceil(width)\n  // need to call this in render so we get the right observer behavior\n  return (\n    <div style={{ position: 'relative', width: canvasWidth, height }}>\n      <PrerenderedCanvas\n        {...props}\n        style={{ position: 'absolute', left: 0, top: 0 }}\n      />\n    </div>\n  )\n})\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config HicRenderer\n * #category renderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst HicRenderer = ConfigurationSchema(\n  'HicRenderer',\n  {\n    /**\n     * #slot\n     */\n    baseColor: {\n      type: 'color',\n      description: 'base color to be used in the hic alignment',\n      defaultValue: '#f00',\n    },\n    /**\n     * #slot\n     */\n    color: {\n      type: 'color',\n      description: 'the color of each feature in a hic alignment',\n      defaultValue: `jexl:colorString(hsl(alpha(baseColor,min(1,count/(maxScore/20)))))`,\n      contextVariable: ['count', 'maxScore', 'baseColor'],\n    },\n\n    /**\n     * #slot\n     */\n    maxHeight: {\n      type: 'integer',\n      description: 'the maximum height to be used in a hic rendering',\n      defaultValue: 600,\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default HicRenderer\n","import ServerSideRendererType, {\n  RenderArgs as ServerSideRenderArgs,\n  RenderArgsDeserialized as ServerSideRenderArgsDeserialized,\n  ResultsSerialized as ServerSideResultsSerialized,\n  ResultsDeserialized as ServerSideResultsDeserialized,\n} from '@jbrowse/core/pluggableElementTypes/renderers/ServerSideRendererType'\nimport { Region } from '@jbrowse/core/util/types'\nimport { abortBreakPoint } from '@jbrowse/core/util'\nimport { renderToAbstractCanvas } from '@jbrowse/core/util/offscreenCanvasUtils'\nimport { toArray } from 'rxjs/operators'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { getAdapter } from '@jbrowse/core/data_adapters/dataAdapterCache'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\ninterface HicFeature {\n  bin1: number\n  bin2: number\n  counts: number\n}\n\ninterface HicDataAdapter extends BaseFeatureDataAdapter {\n  getResolution: (bp: number) => Promise<number>\n}\n\nexport interface RenderArgs extends ServerSideRenderArgs {\n  regions: Region[]\n}\n\nexport interface RenderArgsDeserialized\n  extends ServerSideRenderArgsDeserialized {\n  regions: Region[]\n  dataAdapter: HicDataAdapter\n  bpPerPx: number\n  highResolutionScaling: number\n  resolution: number\n  adapterConfig: AnyConfigurationModel\n}\n\nexport interface RenderArgsDeserializedWithFeatures\n  extends RenderArgsDeserialized {\n  features: HicFeature[]\n}\n\nexport type ResultsSerialized = ServerSideResultsSerialized\n\nexport type ResultsDeserialized = ServerSideResultsDeserialized\n\nexport default class HicRenderer extends ServerSideRendererType {\n  supportsSVG = true\n\n  async makeImageData(\n    ctx: CanvasRenderingContext2D,\n    props: RenderArgsDeserializedWithFeatures,\n  ) {\n    const {\n      features,\n      config,\n      bpPerPx,\n      signal,\n      resolution,\n      sessionId,\n      adapterConfig,\n      regions,\n    } = props\n    const [region] = regions\n    const { dataAdapter } = await getAdapter(\n      this.pluginManager,\n      sessionId,\n      adapterConfig,\n    )\n    const res = await (dataAdapter as HicDataAdapter).getResolution(\n      bpPerPx / resolution,\n    )\n\n    const Color = await import('color').then(f => f.default)\n    const w = res / (bpPerPx * Math.sqrt(2))\n    const baseColor = Color(readConfObject(config, 'baseColor'))\n    if (features.length) {\n      const offset = features[0].bin1\n      let maxScore = 0\n      let minBin = 0\n      let maxBin = 0\n      await abortBreakPoint(signal)\n      for (let i = 0; i < features.length; i++) {\n        const { bin1, bin2, counts } = features[i]\n        maxScore = Math.max(counts, maxScore)\n        minBin = Math.min(Math.min(bin1, bin2), minBin)\n        maxBin = Math.max(Math.max(bin1, bin2), maxBin)\n      }\n      await abortBreakPoint(signal)\n      function horizontallyFlip() {\n        ctx.scale(-1, 1)\n        const width = (region.end - region.start) / bpPerPx\n        ctx.translate(-width, 0)\n      }\n      if (region.reversed === true) {\n        horizontallyFlip()\n      }\n      ctx.rotate(-Math.PI / 4)\n      let start = Date.now()\n      for (let i = 0; i < features.length; i++) {\n        const { bin1, bin2, counts } = features[i]\n        ctx.fillStyle = readConfObject(config, 'color', {\n          count: counts,\n          maxScore,\n          baseColor,\n        })\n        ctx.fillRect((bin1 - offset) * w, (bin2 - offset) * w, w, w)\n        if (+Date.now() - start > 400) {\n          await abortBreakPoint(signal)\n          start = +Date.now()\n        }\n      }\n    }\n  }\n\n  async render(renderProps: RenderArgsDeserialized) {\n    const { config, regions, bpPerPx } = renderProps\n    const [region] = regions\n    const width = (region.end - region.start) / bpPerPx\n    const height = readConfObject(config, 'maxHeight')\n    const features = await this.getFeatures(renderProps)\n\n    const res = await renderToAbstractCanvas(width, height, renderProps, ctx =>\n      this.makeImageData(ctx, {\n        ...renderProps,\n        features,\n      }),\n    )\n    const results = await super.render({\n      ...renderProps,\n      ...res,\n      features,\n      region: renderProps.regions[0],\n      height,\n      width,\n    })\n\n    return {\n      ...results,\n      ...res,\n      height,\n      width,\n    }\n  }\n\n  async getFeatures(args: RenderArgsDeserialized) {\n    const { regions, sessionId, adapterConfig } = args\n    const { dataAdapter } = await getAdapter(\n      this.pluginManager,\n      sessionId,\n      adapterConfig,\n    )\n    const features = await (dataAdapter as BaseFeatureDataAdapter)\n      .getFeatures(regions[0], args)\n      .pipe(toArray())\n      .toPromise()\n    // cast to any to avoid return-type conflict, because the\n    // types of features returned by our getFeatures are quite\n    // different from the base interface\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return features as any\n  }\n}\n\nexport {\n  type RenderArgsSerialized,\n  type RenderResults,\n} from '@jbrowse/core/pluggableElementTypes/renderers/ServerSideRendererType'\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { createBaseTrackConfig } from '@jbrowse/core/pluggableElementTypes'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config HicTrack\n * #category track\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = (pluginManager: PluginManager) =>\n  ConfigurationSchema(\n    'HicTrack',\n    {},\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: createBaseTrackConfig(pluginManager),\n    },\n  )\n\nexport default configSchema\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { baseLinearDisplayConfigSchema } from '@jbrowse/plugin-linear-genome-view'\nimport { Instance } from 'mobx-state-tree'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config LinearHicDisplay\n * #category display\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst HicTrackConfigFactory = (pluginManager: PluginManager) => {\n  return ConfigurationSchema(\n    'LinearHicDisplay',\n    {\n      /**\n       * #slot\n       */\n      renderer: pluginManager.getRendererType('HicRenderer').configSchema,\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: baseLinearDisplayConfigSchema,\n      explicitlyTyped: true,\n    },\n  )\n}\n\nexport type HicTrackConfigModel = ReturnType<typeof HicTrackConfigFactory>\nexport type HicTrackConfig = Instance<HicTrackConfigModel>\nexport default HicTrackConfigFactory\n","import { ConfigurationReference, getConf } from '@jbrowse/core/configuration'\nimport { BaseLinearDisplay } from '@jbrowse/plugin-linear-genome-view'\nimport { types, getEnv } from 'mobx-state-tree'\nimport { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\n\n/**\n * #stateModel LinearHicDisplay\n * #category display\n * extends `BaseLinearDisplay`\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport default (configSchema: AnyConfigurationSchemaType) =>\n  types\n    .compose(\n      'LinearHicDisplay',\n      BaseLinearDisplay,\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LinearHicDisplay'),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n        /**\n         * #property\n         */\n        resolution: types.optional(types.number, 1),\n      }),\n    )\n    .views(self => {\n      const { renderProps: superRenderProps } = self\n      return {\n        /**\n         * #getter\n         */\n        get blockType() {\n          return 'dynamicBlocks'\n        },\n        /**\n         * #getter\n         */\n        get rendererTypeName() {\n          return 'HicRenderer'\n        },\n        /**\n         * #method\n         */\n        renderProps() {\n          const config = self.rendererType.configSchema.create(\n            getConf(self, 'renderer') || {},\n            getEnv(self),\n          )\n\n          return {\n            ...superRenderProps(),\n            config,\n            rpcDriverName: self.rpcDriverName,\n            displayModel: self,\n            resolution: self.resolution,\n          }\n        },\n      }\n    })\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setResolution(n: number) {\n        self.resolution = n\n      },\n    }))\n    .views(self => {\n      const { trackMenuItems: superTrackMenuItems } = self\n      return {\n        /**\n         * #getter\n         */\n        trackMenuItems() {\n          return [\n            ...superTrackMenuItems(),\n            {\n              label: 'Resolution',\n              subMenu: [\n                {\n                  label: 'Finer resolution',\n                  onClick: () => {\n                    self.setResolution(self.resolution * 2)\n                  },\n                },\n                {\n                  label: 'Coarser resolution',\n                  onClick: () => {\n                    self.setResolution(self.resolution / 2)\n                  },\n                },\n              ],\n            },\n          ]\n        },\n      }\n    })\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config HicAdapter\n * #category adapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst HicAdapter = ConfigurationSchema(\n  'HicAdapter',\n  {\n    /**\n     * #slot\n     */\n    hicLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/my.hic',\n        locationType: 'UriLocation',\n      },\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default HicAdapter\n","import Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport Color from 'color'\nimport HicRendererF from './HicRenderer'\nimport HicTrackF from './HicTrack'\nimport LinearHicDisplayF from './LinearHicDisplay'\nimport HicAdapterF from './HicAdapter'\nimport {\n  AdapterGuesser,\n  getFileName,\n  TrackTypeGuesser,\n} from '@jbrowse/core/util/tracks'\n\nexport default class HicPlugin extends Plugin {\n  name = 'HicPlugin'\n\n  install(pluginManager: PluginManager) {\n    HicAdapterF(pluginManager)\n    HicRendererF(pluginManager)\n    HicTrackF(pluginManager)\n    LinearHicDisplayF(pluginManager)\n\n    pluginManager.addToExtensionPoint(\n      'Core-guessAdapterForLocation',\n      (adapterGuesser: AdapterGuesser) => {\n        return (\n          file: FileLocation,\n          index?: FileLocation,\n          adapterHint?: string,\n        ) => {\n          const regexGuess = /\\.hic/i\n          const adapterName = 'HicAdapter'\n          const fileName = getFileName(file)\n          const obj = {\n            type: adapterName,\n            hicLocation: file,\n          }\n\n          if (regexGuess.test(fileName) && !adapterHint) {\n            return obj\n          } else if (adapterHint === adapterName) {\n            return obj\n          }\n          return adapterGuesser(file, index, adapterHint)\n        }\n      },\n    )\n    pluginManager.addToExtensionPoint(\n      'Core-guessTrackTypeForLocation',\n      (trackTypeGuesser: TrackTypeGuesser) => {\n        return (adapterName: string) => {\n          if (adapterName === 'HicAdapter') {\n            return 'HicTrack'\n          }\n          return trackTypeGuesser(adapterName)\n        }\n      },\n    )\n  }\n\n  configure(pluginManager: PluginManager) {\n    pluginManager.jexl.addFunction('alpha', (color: Color, value: number) =>\n      color.alpha(value),\n    )\n    pluginManager.jexl.addFunction('hsl', (color: Color) => color.hsl())\n    pluginManager.jexl.addFunction('colorString', (color: Color) =>\n      color.string(),\n    )\n  }\n}\n","import { AdapterType } from '@jbrowse/core/pluggableElementTypes'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport configSchema from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'HicAdapter',\n        displayName: 'Hi-C adapter',\n        configSchema,\n        getAdapterClass: () => import('./HicAdapter').then(r => r.default),\n      }),\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\n\nimport ReactComponent from './components/HicRendering'\nimport configSchema from './configSchema'\nimport HicRenderer from './HicRenderer'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addRendererType(\n    () =>\n      new HicRenderer({\n        name: 'HicRenderer',\n        ReactComponent,\n        configSchema,\n        pluginManager,\n      }),\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport TrackType from '@jbrowse/core/pluggableElementTypes/TrackType'\nimport { createBaseTrackModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport configSchemaF from './configSchema'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addTrackType(() => {\n    const configSchema = configSchemaF(pluginManager)\n    return new TrackType({\n      name: 'HicTrack',\n      displayName: 'Hi-C track',\n      configSchema,\n      stateModel: createBaseTrackModel(pluginManager, 'HicTrack', configSchema),\n    })\n  })\n}\n","import { DisplayType } from '@jbrowse/core/pluggableElementTypes'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { BaseLinearDisplayComponent } from '@jbrowse/plugin-linear-genome-view'\n\nimport configSchemaFactory from './configSchema'\nimport stateModelFactory from './model'\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaFactory(pluginManager)\n    return new DisplayType({\n      name: 'LinearHicDisplay',\n      displayName: 'Hi-C contact matrix display',\n      configSchema,\n      stateModel: stateModelFactory(configSchema),\n      trackType: 'HicTrack',\n      viewType: 'LinearGenomeView',\n      ReactComponent: BaseLinearDisplayComponent,\n    })\n  })\n}\n","import Trix from '@gmod/trix'\nimport {\n  BaseTextSearchAdapter,\n  BaseAdapter,\n  BaseTextSearchArgs,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport BaseResult from '@jbrowse/core/TextSearch/BaseResults'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { getSubAdapterType } from '@jbrowse/core/data_adapters/dataAdapterCache'\n\nfunction decodeURIComponentNoThrow(uri: string) {\n  try {\n    return decodeURIComponent(uri)\n  } catch (e) {\n    // avoid throwing exception on a failure to decode URI component\n    return uri\n  }\n}\n\nfunction shorten(str: string, term: string, w = 15) {\n  const tidx = str.toLowerCase().indexOf(term)\n\n  return str.length < 40\n    ? str\n    : (Math.max(0, tidx - w) > 0 ? '...' : '') +\n        str.slice(Math.max(0, tidx - w), tidx + term.length + w).trim() +\n        (tidx + term.length < str.length ? '...' : '')\n}\n\nexport default class TrixTextSearchAdapter\n  extends BaseAdapter\n  implements BaseTextSearchAdapter\n{\n  indexingAttributes?: string[]\n  trixJs: Trix\n  tracksNames?: string[]\n\n  constructor(\n    config: AnyConfigurationModel,\n    getSubAdapter?: getSubAdapterType,\n    pluginManager?: PluginManager,\n  ) {\n    super(config, getSubAdapter, pluginManager)\n    const ixFilePath = readConfObject(config, 'ixFilePath')\n    const ixxFilePath = readConfObject(config, 'ixxFilePath')\n\n    if (!ixFilePath) {\n      throw new Error('must provide out.ix')\n    }\n    if (!ixxFilePath) {\n      throw new Error('must provide out.ixx')\n    }\n    this.trixJs = new Trix(\n      openLocation(ixxFilePath, pluginManager),\n      openLocation(ixFilePath, pluginManager),\n      1500,\n    )\n  }\n\n  /**\n   * Returns list of results\n   * @param args - search options/arguments include: search query\n   * limit of results to return, searchType...prefix | full | exact\", etc.\n   */\n  async searchIndex(args: BaseTextSearchArgs) {\n    const query = args.queryString.toLowerCase()\n    const strs = query.split(' ')\n    const results = await this.trixJs.search(query)\n    const formatted = results\n      // if multi-word search try to filter out relevant items\n      .filter(([, data]) =>\n        strs.every(r =>\n          decodeURIComponentNoThrow(data).toLowerCase().includes(r),\n        ),\n      )\n      .map(([term, data]) => {\n        const result = JSON.parse(data.replaceAll('|', ',')) as string[]\n        const [loc, trackId, ...rest] = result.map(record =>\n          decodeURIComponentNoThrow(record),\n        )\n\n        const labelFieldIdx = rest.findIndex(elt => !!elt)\n        const contextIdx = rest\n          .map(elt => elt.toLowerCase())\n          .findIndex(f => f.includes(term.toLowerCase()))\n\n        const labelField = rest[labelFieldIdx]\n        const contextField = rest[contextIdx]\n        const context =\n          contextIdx !== -1 ? shorten(contextField, term) : undefined\n        const label = shorten(labelField, term)\n\n        const displayString =\n          !context || label.toLowerCase() === context.toLowerCase()\n            ? label\n            : `${label} (${context})`\n\n        return new BaseResult({\n          locString: loc,\n          label: labelField,\n          displayString,\n          matchedObject: result.map(record => decodeURIComponent(record)),\n          trackId,\n        })\n      })\n\n    return args.searchType === 'exact'\n      ? formatted.filter(\n          r => r.getLabel().toLowerCase() === args.queryString.toLowerCase(),\n        )\n      : formatted\n  }\n\n  freeResources() {}\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config TrixTextSearchAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst TrixTextSearchAdapter = ConfigurationSchema(\n  'TrixTextSearchAdapter',\n  {\n    /**\n     * #slot\n     */\n    ixFilePath: {\n      type: 'fileLocation',\n      defaultValue: { uri: 'out.ix', locationType: 'UriLocation' },\n      description: 'the location of the trix ix file',\n    },\n    /**\n     * #slot\n     */\n    ixxFilePath: {\n      type: 'fileLocation',\n      defaultValue: { uri: 'out.ixx', locationType: 'UriLocation' },\n      description: 'the location of the trix ixx file',\n    },\n    /**\n     * #slot\n     */\n    metaFilePath: {\n      type: 'fileLocation',\n      defaultValue: { uri: 'meta.json', locationType: 'UriLocation' },\n      description: 'the location of the metadata json file for the trix index',\n    },\n    /**\n     * #slot\n     */\n    tracks: {\n      type: 'stringArray',\n      defaultValue: [],\n      description: 'List of tracks covered by text search adapter',\n    },\n    /**\n     * #slot\n     */\n    assemblyNames: {\n      type: 'stringArray',\n      defaultValue: [],\n      description: 'List of assemblies covered by text search adapter',\n    },\n  },\n  {\n    explicitlyTyped: true,\n    /**\n     * #identifier\n     */\n    explicitIdentifier: 'textSearchAdapterId',\n  },\n)\n\nexport default TrixTextSearchAdapter\n","import TextSearchAdapterType from '@jbrowse/core/pluggableElementTypes/TextSearchAdapterType'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport {\n  AdapterClass as TrixTextSearchAdapterClass,\n  configSchema as trixAdapterConfigSchema,\n} from './TrixTextSearchAdapter'\n\nexport default class extends Plugin {\n  name = 'TrixPlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addTextSearchAdapterType(\n      () =>\n        new TextSearchAdapterType({\n          name: 'TrixTextSearchAdapter',\n          displayName: 'Trix text search adapter',\n          configSchema: trixAdapterConfigSchema,\n          AdapterClass: TrixTextSearchAdapterClass,\n          description: 'Trix adapter',\n        }),\n    )\n  }\n}\n","import { types, cast, Instance } from 'mobx-state-tree'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { Region } from '@jbrowse/core/util/types'\nimport { Region as RegionModel, ElementId } from '@jbrowse/core/util/types/mst'\n\nconst LabeledRegionModel = types\n  .compose(\n    RegionModel,\n    types.model('Label', { label: types.optional(types.string, '') }),\n  )\n  .actions(self => ({\n    setLabel(label: string) {\n      self.label = label\n    },\n  }))\n\nexport default function f(pluginManager: PluginManager) {\n  return types\n    .model('GridBookmarkModel', {\n      id: ElementId,\n      type: types.literal('GridBookmarkWidget'),\n      view: types.safeReference(\n        pluginManager.pluggableMstType('view', 'stateModel'),\n      ),\n      bookmarkedRegions: types.array(LabeledRegionModel),\n      modelSelectedAssembly: '',\n    })\n    .actions(self => ({\n      importBookmarks(regions: Region[]) {\n        self.bookmarkedRegions = cast([...self.bookmarkedRegions, ...regions])\n      },\n      addBookmark(region: Region) {\n        self.bookmarkedRegions.push(region)\n      },\n      removeBookmark(index: number) {\n        self.bookmarkedRegions.splice(index, 1)\n      },\n      clearAllBookmarks() {\n        self.bookmarkedRegions.clear()\n      },\n      updateBookmarkLabel(index: number, label: string) {\n        self.bookmarkedRegions[index]?.setLabel(label)\n      },\n      setSelectedAssembly(assembly: string) {\n        self.modelSelectedAssembly = assembly\n      },\n    }))\n    .views(self => ({\n      get selectedAssembly() {\n        return (\n          self.modelSelectedAssembly ||\n          (self.bookmarkedRegions.length\n            ? self.bookmarkedRegions[0].assemblyName\n            : '')\n        )\n      },\n      get assemblies() {\n        return [\n          ...new Set(self.bookmarkedRegions.map(region => region.assemblyName)),\n        ]\n      },\n    }))\n}\n\nexport type GridBookmarkStateModel = ReturnType<typeof f>\nexport type GridBookmarkModel = Instance<GridBookmarkStateModel>\n","import { lazy } from 'react'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { WidgetType } from '@jbrowse/core/pluggableElementTypes'\nimport stateModelFactory from './model'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\nconst configSchema = ConfigurationSchema('GridBookmarkWidget', {})\n\nexport default (pluginManager: PluginManager) => {\n  pluginManager.addWidgetType(() => {\n    return new WidgetType({\n      name: 'GridBookmarkWidget',\n      heading: 'Bookmarked regions',\n      configSchema,\n      stateModel: stateModelFactory(pluginManager),\n      ReactComponent: lazy(() => import('./components/GridBookmarkWidget')),\n    })\n  })\n}\n","import Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\nimport { getSession, isSessionModelWithWidgets } from '@jbrowse/core/util'\nimport {\n  PluggableElementType,\n  ViewType,\n} from '@jbrowse/core/pluggableElementTypes'\n\n// icons\nimport BookmarkIcon from '@mui/icons-material/Bookmark'\nimport BookmarksIcon from '@mui/icons-material/Bookmarks'\n\nimport GridBookmarkWidgetF from './GridBookmarkWidget'\n\nexport default class extends Plugin {\n  name = 'GridBookmarkPlugin'\n\n  install(pluginManager: PluginManager) {\n    GridBookmarkWidgetF(pluginManager)\n\n    pluginManager.addToExtensionPoint(\n      'Core-extendPluggableElement',\n      (pluggableElement: PluggableElementType) => {\n        if (pluggableElement.name === 'LinearGenomeView') {\n          const { stateModel } = pluggableElement as ViewType\n          const newStateModel = stateModel.extend(\n            (self: LinearGenomeViewModel) => {\n              const superMenuItems = self.menuItems\n              const superRubberBandMenuItems = self.rubberBandMenuItems\n              return {\n                actions: {\n                  activateBookmarkWidget() {\n                    const session = getSession(self)\n                    if (isSessionModelWithWidgets(session)) {\n                      let bookmarkWidget = session.widgets.get('GridBookmark')\n                      if (!bookmarkWidget) {\n                        bookmarkWidget = session.addWidget(\n                          'GridBookmarkWidget',\n                          'GridBookmark',\n                          { view: self },\n                        )\n                      }\n\n                      session.showWidget(bookmarkWidget)\n                      return bookmarkWidget\n                    }\n\n                    throw new Error('Could not open bookmark widget')\n                  },\n\n                  bookmarkCurrentRegion() {\n                    const selectedRegions = self.getSelectedRegions(\n                      self.leftOffset,\n                      self.rightOffset,\n                    )\n                    const firstRegion = selectedRegions[0]\n                    const session = getSession(self)\n                    if (isSessionModelWithWidgets(session)) {\n                      const { widgets } = session\n                      let bookmarkWidget = widgets.get('GridBookmark')\n                      if (!bookmarkWidget) {\n                        this.activateBookmarkWidget()\n                        bookmarkWidget = widgets.get('GridBookmark')\n                      }\n                      // @ts-expect-error\n                      bookmarkWidget.addBookmark(firstRegion)\n                    }\n                  },\n                },\n                views: {\n                  menuItems() {\n                    return [\n                      ...superMenuItems(),\n                      { type: 'divider' },\n                      {\n                        label: 'Open bookmark widget',\n                        icon: BookmarksIcon,\n                        // @ts-expect-error\n                        onClick: self.activateBookmarkWidget,\n                      },\n                      {\n                        label: 'Bookmark current region',\n                        icon: BookmarkIcon,\n                        // @ts-expect-error\n                        onClick: self.bookmarkCurrentRegion,\n                      },\n                    ]\n                  },\n\n                  rubberBandMenuItems() {\n                    return [\n                      ...superRubberBandMenuItems(),\n                      {\n                        label: 'Bookmark region',\n                        icon: BookmarkIcon,\n                        onClick: () => {\n                          const { leftOffset, rightOffset } = self\n                          const selectedRegions = self.getSelectedRegions(\n                            leftOffset,\n                            rightOffset,\n                          )\n                          const firstRegion = selectedRegions[0]\n                          const session = getSession(self)\n                          if (isSessionModelWithWidgets(session)) {\n                            const { widgets } = session\n                            let bookmarkWidget = widgets.get('GridBookmark')\n                            if (!bookmarkWidget) {\n                              // @ts-expect-error\n                              self.activateBookmarkWidget()\n                              bookmarkWidget = widgets.get('GridBookmark')\n                            }\n                            // @ts-expect-error\n                            bookmarkWidget.addBookmark(firstRegion)\n                          }\n                        },\n                      },\n                    ]\n                  },\n                },\n              }\n            },\n          )\n\n          ;(pluggableElement as ViewType).stateModel = newStateModel\n        }\n        return pluggableElement\n      },\n    )\n  }\n\n  configure(_pluginManager: PluginManager) {}\n}\n","import Alignments from '@jbrowse/plugin-alignments'\nimport Authentication from '@jbrowse/plugin-authentication'\nimport Bed from '@jbrowse/plugin-bed'\nimport BreakpointSplitView from '@jbrowse/plugin-breakpoint-split-view'\nimport CircularView from '@jbrowse/plugin-circular-view'\nimport Config from '@jbrowse/plugin-config'\nimport ComparativeAdapters from '@jbrowse/plugin-comparative-adapters'\nimport DataManagement from '@jbrowse/plugin-data-management'\nimport DotplotView from '@jbrowse/plugin-dotplot-view'\nimport GtfPlugin from '@jbrowse/plugin-gtf'\nimport Gff3 from '@jbrowse/plugin-gff3'\nimport LegacyJBrowse from '@jbrowse/plugin-legacy-jbrowse'\nimport LinearGenomeView from '@jbrowse/plugin-linear-genome-view'\nimport LinearComparativeView from '@jbrowse/plugin-linear-comparative-view'\nimport Lollipop from '@jbrowse/plugin-lollipop'\nimport Arc from '@jbrowse/plugin-arc'\nimport Menus from '@jbrowse/plugin-menus'\nimport RDF from '@jbrowse/plugin-rdf'\nimport Sequence from '@jbrowse/plugin-sequence'\nimport SVG from '@jbrowse/plugin-svg'\nimport Variants from '@jbrowse/plugin-variants'\nimport Wiggle from '@jbrowse/plugin-wiggle'\nimport GCContent from '@jbrowse/plugin-gccontent'\nimport SpreadsheetViewPlugin from '@jbrowse/plugin-spreadsheet-view'\nimport SvInspectorPlugin from '@jbrowse/plugin-sv-inspector'\nimport HicPlugin from '@jbrowse/plugin-hic'\nimport TrixPlugin from '@jbrowse/plugin-trix'\nimport GridBookmarkPlugin from '@jbrowse/plugin-grid-bookmark'\n\nconst corePlugins = [\n  SVG,\n  LinearGenomeView,\n  Alignments,\n  Authentication,\n  Bed,\n  CircularView,\n  Config,\n  DataManagement,\n  DotplotView,\n  GtfPlugin,\n  Gff3,\n  LegacyJBrowse,\n  LinearComparativeView,\n  Lollipop,\n  Arc,\n  Menus,\n  RDF,\n  Sequence,\n  Variants,\n  Wiggle,\n  GCContent,\n  SpreadsheetViewPlugin,\n  SvInspectorPlugin,\n  BreakpointSplitView,\n  HicPlugin,\n  TrixPlugin,\n  GridBookmarkPlugin,\n  ComparativeAdapters,\n]\n\nexport default corePlugins\n"],"names":["configSchema","ConfigurationSchema","formatSubfeatures","obj","depth","parse","_obj$subfeatures","currentDepth","arguments","length","undefined","returnObj","subfeatures","map","sub","stateModelFactory","pluginManager","types","model","id","ElementId","type","literal","featureData","frozen","formattedFields","unformattedFeatureData","view","safeReference","pluggableMstType","track","trackId","maybe","string","trackType","volatile","error","actions","self","setFeatureData","clearFeatureData","setFormattedData","feat","setExtra","setError","e","afterCreate","addDisposer","autorun","_self$track","_self$track2","configuration","session","getSession","feature","clone","combine","arg2","_objectSpread","getConf","__jbrowsefmt","console","preProcessSnapshot","snap","finalizedFeatureData","rest","_objectWithoutProperties","_excluded","postProcessSnapshot","_ref","_excluded2","JSON","stringify","_","v","Plugin","_classCallCheck","name","url","version","configurationSchema","_createClass","key","value","_pluginManager","CoreGetRefNames","_RpcMethodType","_inherits","_super","_createSuper","_this","_len","args","Array","_key","call","apply","concat","_execute","_asyncToGenerator","_regeneratorRuntime","mark","_callee","rpcDriver","pm","deserializedArgs","sessionId","adapterConfig","_yield$getAdapter","dataAdapter","wrap","_context","prev","next","this","deserializeArguments","sent","getAdapter","isFeatureAdapter","abrupt","getRefNames","stop","_x","_x2","RpcMethodType","validateRendererType","rendererType","RendererType","Error","ReactComponent","ServerSideRendererType","TypeError","CoreGetFeatureDetails","_serializeArguments","rootModel","assemblyManager","renamedArgs","superArgs","renameRegionsIfNeeded","_get","_getPrototypeOf","prototype","getRendererType","serializeArgsInClient","_callee2","_RendererType$session","_RendererType$session2","_deserializedArgs","featureId","_context2","sessions","getLayoutId","cachedLayout","layout","getDataByID","toJSON","_x3","_x4","CoreGetMetadata","getMetadata","CoreGetFileInfo","getHeader","CoreGetFeatures","_deserializeReturn","feats","superDeserialized","SimpleFeature","_x5","_callee3","signal","regions","opts","ret","r","_context3","getFeaturesInMultipleRegions","firstValueFrom","pipe","toArray","f","_x6","_x7","CoreRender","result","checkAbortSignal","render","t0","renderInWorker","serializedReturn","des","deserializeResultsInClient","CoreFreeResources","specification","deleteCount","freeAdapterResources","getRendererTypes","forEach","renderer","count","freeResources","_rpcDriver","CoreGetFeatureDensityStats","_args$filters","filters","getMultiRegionFeatureDensityStats","cytobandLocation","defaultValue","uri","explicitlyTyped","CorePlugin","_Plugin","Object","values","coreRpcMethods","RpcMethod","addRpcMethod","addAdapterType","AdapterType","getAdapterClass","then","default","CytobandAdapterF","addWidgetType","WidgetType","heading","stateModel","lazy","PhasedScheduler","phaseCallbacks","Map","phaseOrder","phase","callback","includes","get","set","push","phaseName","_this$phaseCallbacks$","TypeRecord","typeName","baseClass","registeredTypes","t","has","PluginManager","_this2","initialPlugins","plugins","jexl","createJexlInstance","pluginMetadata","runtimePluginDefinitions","elementCreationSchedule","rendererTypes","adapterTypes","textSearchAdapterTypes","TextSearchAdapterType","trackTypes","TrackType","displayTypes","DisplayType","connectionTypes","ConnectionType","viewTypes","ViewType","widgetTypes","rpcMethods","addTrackWidgets","AddTrackWorkflowType","internetAccountTypes","InternetAccountType","configured","extensionPoints","jbrequireCache","lib","ReExports","load","jbrequire","pack","addPlugin","plugin","metadata","isCore","configurationSchemas","_ref2","_slicedToArray","_ref2$","definition","install","find","p","getPlugin","run","_this3","configure","groupName","creationCallback","_this$elementCreation","_this4","typeRecord","getElementTypeRecord","add","newElement","evaluateExtensionPoint","all","getElementTypesInGroup","fieldName","fallback","null","pluggableTypes","filter","isType","isModelType","jest","warn","union","_toConsumableArray","typeGroup","isBareConfigurationSchemaType","methodName","cb","addElementType","_this5","display","addDisplayType","_this6","newView","viewType","extendedName","extensionPointName","callbacks","extendee","props","accumulator","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","_evaluateAsyncExtensionPoint","_iterator2","_step2","t1","finish","Entries","Accordion","AccordionActions","AccordionDetails","Alert","AlertTitle","Autocomplete","Avatar","AvatarGroup","Backdrop","Badge","Box","Breadcrumbs","Button","ButtonGroup","Card","CardActions","CardActionArea","CardContent","CardHeader","CardMedia","CircularProgress","Collapse","ClickAwayListener","Chip","Checkbox","Container","Dialog","DialogActions","DialogTitle","DialogContent","DialogContentText","Divider","Drawer","Fab","Fade","FilledInput","FormLabel","FormControl","FormControlLabel","FormHelperText","FormGroup","Grid","Grow","Icon","IconButton","Input","InputBase","InputLabel","InputAdornment","Link","LinearProgress","List","ListItem","ListItemAvatar","ListItemSecondaryAction","ListItemIcon","ListSubheader","ListItemText","Menu","MenuItem","MenuList","Modal","NativeSelect","OutlinedInput","Pagination","PaginationItem","Paper","Popover","Popper","Portal","Radio","RadioGroup","Rating","ScopedCssBaseline","Select","Skeleton","Slider","Snackbar","SnackbarContent","SpeedDial","SpeedDialAction","SpeedDialIcon","Stack","Step","StepButton","StepConnector","StepLabel","StepIcon","Stepper","SvgIcon","Switch","Tab","Table","TableBody","TableCell","TableContainer","TableFooter","TableHead","TablePagination","TableRow","TableSortLabel","Tabs","TextField","TextareaAutosize","ToggleButton","ToggleButtonGroup","Toolbar","Tooltip","Typography","LazyMUICore","fromEntries","entries","_jsx","Suspense","children","MaterialPrefixMUI","_ref3","_ref4","MuiPrefixMUI","_ref5","_ref6","Attributes","FeatureDetails","BaseCard","DataGridEntries","DataGrid","module","GridActionsCellItem","GridAddIcon","GridArrowDownwardIcon","GridArrowUpwardIcon","GridCellCheckboxForwardRef","GridCellCheckboxRenderer","GridCheckCircleIcon","GridCheckIcon","GridCloseIcon","GridColumnHeaderSeparator","GridColumnHeaderSortIcon","GridColumnIcon","GridColumnMenu","GridColumnMenuContainer","GridDragIcon","GridExpandMoreIcon","GridFilterAltIcon","GridFilterForm","GridFilterListIcon","GridFilterPanel","GridFooter","GridFooterContainer","GridHeader","GridHeaderCheckbox","GridKeyboardArrowRight","GridLoadIcon","GridLoadingOverlay","GridMenuIcon","GridMoreVertIcon","GridNoRowsOverlay","GridOverlay","GridPagination","GridPanel","GridPanelWrapper","GridPreferencesPanel","GridRemoveIcon","GridRoot","GridRowCount","GridSaveAltIcon","GridSearchIcon","GridSelectedRowCount","GridSeparatorIcon","GridTableRowsIcon","GridToolbar","GridToolbarColumnsButton","GridToolbarContainer","GridToolbarDensitySelector","GridToolbarExport","GridToolbarExportContainer","GridToolbarFilterButton","GridTripleDotsVerticalIcon","GridViewHeadlineIcon","GridViewStreamIcon","LazyDataGridComponents","_ref7","_ref8","libs","mobx","mst","react","React","ReactJSXRuntime","ReactDom","mxreact","useGridApiContext","useGridApiRef","useGridRootProps","MUIUtils","makeStyles","useTheme","alpha","MUIStyles","useStyles","classes","PropTypes","pluggableElementTypes","pluggableElementTypeModels","CircularChordRendererType","BoxRendererType","FeatureRendererType","Configuration","mstTypes","coreUi","coreUtil","coreColor","coreLayouts","trackUtils","Base1DView","coreIo","coreMstReflection","rxjs","BaseAdapterExports","libsList","keys","inLibsOnly","mod","reExportsList","join","inReExportsOnly","BaseResult","label","renderingComponent","displayString","matchedAttribute","matchedObject","textSearchAdapter","relevance","score","locString","results","newScore","getLabel","getLocation","getTrackId","RefSequenceResult","_BaseResult","_args$refName","refName","typeModels","stringArray","array","stringArrayMap","numberMap","number","boolean","color","refinement","integer","text","fileLocation","FileLocation","fallbackDefaults","locationType","literalJSON","views","valueJSON","objectJSON","typeModelExtensions","val","removeAtIndex","idx","splice","setAtIndex","remove","delete","addToKey","ar","removeAtKeyIndex","setAtKeyIndex","JexlStringType","str","startsWith","isEmptyArray","thing","isArray","makeConfigurationSchemaModel","modelName","schemaDefinition","options","identifier","modelDefinition","optional","explicitIdentifier","implicitIdentifier","volatileConstants","isJBrowseConfigurationSchema","jbrowseSchema","slotName","slotDefinition","isLateType","isConfigurationSchemaType","_ref$description","description","_ref$contextVariable","contextVariable","configSlotModelName","charAt","toUpperCase","slice","slot","isCallback","String","expr","getEnv","stringToJexlExpression","evalSync","newVal","reset","convertToCallback","convertToValue","funcResult","extend","m","defineProperty","ConfigSlot","completeModel","setSubschema","data","newSchema","isStateTreeNode","create","identifierDefault","_defineProperty","modelDefault","defaultSnap","getSnapshot","newSnap","matchesDefault","_i","_Object$entries","_Object$entries$_i","inputSchemaDefinition","inputOptions","_preprocessConfigurat","baseConfiguration","jbrowseSchemaDefinition","jbrowseSchemaOptions","preprocessConfigurationSchemaArguments","schemaType","ConfigurationReference","reference","readConfObject","confObject","slotPath","isMapType","getType","appliedFunc","newPath","subConf","isConfigurationModel","getTypeNamesFromExplicitlyTypedUnion","maybeUnionType","resolveLateType","isUnionType","typeNames","getUnionSubTypes","getDefaultValue","every","isOptionalType","getSubType","isArrayType","isConfigurationSlotType","isSequenceAdapter","isRegionsAdapter","isRefNameAliasAdapter","isTextSearchAdapter","EmptyConfig","BaseAdapter","config","getSubAdapter","idMaker","arg","capabilities","BaseFeatureDataAdapter","_BaseAdapter","_getHeader","_opts","_getMetadata","region","ObservableCreate","observer","hasData","hasDataForRefName","getFeatures","subscribe","complete","merge","getFeaturesInRegion","_hasDataForRefName","_callee4","refNames","_args4","_context4","_getRegionQuantitativeStats","_callee5","_context5","scoresToStats","_getMultiRegionQuantitativeStats","_callee6","scoreMax","scoreMin","scoreSum","scoreSumSquares","featureCount","basesCovered","_args6","_context6","blankStats","Promise","getRegionQuantitativeStats","max","a","min","sum","rectifyStats","lastTime","Date","now","statsFromInterval","_callee7","expansionTime","start","end","sampleCenter","features","_context7","Math","round","maybeRecordStats","featureDensity","_x8","_callee8","interval","stats","statsSampleFeatures","refLen","currTime","_context8","Number","POSITIVE_INFINITY","_x9","_x10","_x11","_x12","_getMultiRegionFeatureDensityStats","_callee9","_context9","getRegionFeatureDensityStats","_x13","_x14","BaseSequenceAdapter","_BaseFeatureDataAdapt","adapterConfigCacheKey","adapterCache","_getAdapter","adapterConfigSnapshot","cacheKey","adapterType","dataAdapterType","AdapterClass","CLASS","cacheEntry","getAdapterType","bind","sessionIds","Set","specKeys","size","_PluggableElementBase","stuff","adapterCapabilities","adapterMetadata","PluggableElementBase","AddTrackWorkflow","configEditorComponent","subDisplay","maybeDisplayName","displayName","isObject","isObjectCustom","RegExp","globalThis","Blob","object","mapper","isSeen","WeakSet","mapArray","element","_Object$values","rpcDriverClassName","blobMap","getBlobMap","augmentLocationObjects","_serializeNewAuthArguments","loc","account","isAppRootModel","internetAccountPreAuthorization","findAppropriateInternetAccount","getPreAuthorizationInformation","_deserializeArguments","serializedArgs","_rpcDriverClassName","setBlobMap","isRemoteAbortSignal","deserializeAbortSignal","_serializeReturn","originalReturn","_args","_this$pluginManager$r","retryAccount","isAuthNeededException","createEphemeralInternetAccount","URL","origin","RetryError","internetAccountId","_augmentLocationObjects","uris","_uris","mapObject","isUriLocation","serializeNewAuthArguments","HeadingComponent","BaseViewModel","minimized","width","menuItems","setDisplayName","setWidth","newWidth","setMinimized","flag","displayedRegions","Region","assemblyNames","tracks","pluggableConfigSchemaType","afterAttach","connect","addTrackConf","trackConf","addTrackConfs","trackConfs","_self$tracks","setTrackConfs","cast","clear","BaseDisplay","rpcDriverName","rendererTypeName","message","RenderingComponent","getDisplayType","DisplayBlurb","parentTrack","getParent","isRoot","renderProps","getParentRenderProps","notReady","getContainingView","displayModel","DisplayMessageComponent","trackMenuItems","viewMenuActions","regionCannotBeRendered","setMessage","setRpcDriverName","reload","BaseInternetAccountConfig","authHeader","tokenType","domains","inWebWorker","sessionStorage","InternetAccount","toggleContents","SelectorComponent","selectorLabel","handlesLocation","location","some","domain","tokenKey","getTokenFromUser","resolve","reject","storeToken","token","setItem","removeToken","removeItem","retrieveToken","getItem","validateToken","tokenPromise","getToken","_location$internetAcc","_location$internetAcc2","authInfo","addAuthHeaderToInit","init","headers","Headers","authToken","validatedToken","internetAccountType","getFetcher","input","newInit","fetch","openLocation","RemoteFileWithRangeCache","createBaseTrackModel","baseTrackConfig","displays","rpcSessionId","_self$configuration","flatMap","d","canConfigure","sessionTracks","adminMode","isSessionModelWithConfigEditing","_self$configuration2","activateConfigurationUI","editTrackConfiguration","hideTrack","showTrack","showDisplay","displayId","initialSnapshot","schema","conf","resolveIdentifier","getRoot","displayType","hideDisplay","transaction","replaceDisplay","oldId","newId","findIndex","shownId","compatDisp","getViewType","compatTypes","getCompatibleDisplays","subMenu","checked","onClick","createBaseTrackConfig","category","adapter","textSearching","indexingAttributes","indexingFeatureTypesToExclude","formatDetails","formatAbout","hideUris","s2","_snap$displays","getTrackType","addDisplayConf","LayoutSession","bpPerPx","update","assign","MultiLayout","GranularRectLayout","maxHeight","displayMode","pitchX","pitchY","subLayoutConstructorArgs","deepEqual","cachedLayoutIsValid","makeLayout","_FeatureRendererType","createSession","renderArgs","maxFeatureGlyphExpansion","bpExpansion","floor","ceil","_freeResourcesInClient","rpcManager","freed","discardRange","json","PrecomputedLayout","deserializeLayoutInClient","getWorkerSession","getSublayout","serialized","serializeRegion","getExpandedRegion","rectangles","Boolean","uniqueId","maxHeightReached","_render","createLayoutInWorker","html","ref","useRef","useEffect","domNode","current","innerHTML","unmountComponentAtNode","style","outline","rIC","hydrate","_FeatureRenderer","supportsSVG","res","deserializedFeatures","fromJSON","exportSVG","blockKey","reactElement","RpcRenderedSvgGroup","FeatureRenderer","ComparativeServerSideRenderer","_ServerSideRenderer","_renameRegionsIfNeeded","deserialized","_renderInClient","getSerializedSvg","passes","_getFeatures","requestRegions","requestRegion","featurePassesFilters","dedupe","ServerSideRenderer","_ServerSideRendererTy","selectedFeatureId","iterMap","_renderArgs","featureObservable","theme","jbrowseTheme","createJBrowseTheme","ThemeProvider","timeout","_RendererType","ServerSideRenderedContent","SerializableFilterChain","renderToString","_renderInWorker","_args$statusCallback","statusCallback","deserializeArgsInWorker","updateStatus","serializeResultsInWorker","freedRpc","_ref$filters","filterChain","inputFilter","i","CascadingMenuButton","popupState","usePopupState","popupId","variant","_jsxs","_Fragment","bindTrigger","disabled","CascadingMenu","bindPopover","onMenuItemClick","ResetComponent","onFactoryReset","resetButtonText","_useState","useState","_useState2","dialogOpen","setDialogOpen","FactoryResetDialog","onClose","open","FatalErrorDialog","componentStack","_ref2$error","_ref2$resetButtonText","maxWidth","ErrorMessage","window","isBlobLocation","filename","marginLeft","spacing","setLocation","isLocalPathLocation","localPath","needToReload","getBlob","blobId","flexDirection","alignItems","fullWidth","component","hidden","onChange","target","file","files","isElectron","path","storeBlobLocation","blob","className","inputProps","event","trim","dots","content","textAlign","animation","keyframes","_templateObject","_taggedTemplateLiteral","LoadingEllipses","_ref$variant","category10","dark2","set1","set2","tableau10","ggplot2Colors6","ggplot2Colors5","ggplot2Colors4","ggplot2Colors3","moveTo","interRegionPaddingWidth","minimumBlockWidth","len","bpSoFar","index","offset","lengthBetween","numBlocksWideEnough","targetBpPerPx","newBpPerPx","zoomTo","extraBp","bpToStart","scrollTo","coord","bp","reversed","pxToBp","px","offsetPx","blocks","staticBlocks","contentBlocks","oob","interRegionPaddingBp","currBlock","_blocks$currBlock","regionNumber","at","assemblyName","bpToPx","_blocks$currBlock2","volatileWidth","setDisplayedRegions","setBpPerPx","setVolatileWidth","displayedRegionsTotalPx","totalBp","maxOffset","minOffset","reduce","b","dynamicBlocks","calculateDynamicBlocks","calculateStaticBlocks","currBp","_bpToPx2","setFeatures","showAllRegions","zoomOut","zoomIn","clamp","minBpPerPx","maxBpPerPx","Infinity","oldBpPerPx","abs","newOffsetPx","centerAt","centerPx","scroll","distance","oldOffsetPx","AbortError","_Error","code","_wrapNativeSuper","AbortSignal","aborted","makeAbortError","ms","setTimeout","abortBreakPoint","_abortBreakPoint","DOMException","observeAbortSignal","fromEvent","Observable","isAbortException","exception","test","BlockSet","block","ElidedBlock","lastBlock","toRegion","func","thisarg","widthPx","ContentBlock","BaseBlock","isLeftEndOfDisplayedRegion","constructor","_BaseBlock","_BaseBlock2","_super2","elidedBlockCount","otherBlock","InterRegionPaddingBlock","_BaseBlock3","_super3","padding","elision","displayedRegionLeftPx","windowLeftPx","windowRightPx","regionStart","regionEnd","displayedRegionRightPx","regionWidthPx","parentRegion","isRightEndOfDisplayedRegion","blockOffsetPx","_intersection","intersection2","_intersection2","leftPx","rightPx","blockData","assembleLocStringFast","extra","modelWidth","windowLeftBp","windowRightBp","blockSizePx","blockSizeBp","regionBpOffset","regionBlockCount","windowRightBlockNum","windowLeftBlockNum","blockNum","colors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","namedColorToHex","isNamedColor","contrastingTextColor","getLuminance","convertedColor","muiGetLuminance","emphasize","coefficient","muiEmphasize","makeContrasting","foreground","background","minContrastRatio","convertedForeground","convertedBackground","backgroundLuminance","contrastRatio","getContrastRatio","originalColor","darken","lighten","list","hasher","lookup","entry","hashed","_keys","hashCode","fetchers","globalRangeCache","HttpRangeFetcher","fetcher","pow","chunkSize","maxFetchSize","minimumTTL","_RemoteFile","_fetch","requestHeaders","range","rangeParse","_rangeParse","_start","_end","response","fetchBinaryRange","exec","parseInt","getRange","Response","buffer","status","_fetchBinaryRange","requestDate","responseDate","errorMessage","_step$value","k","arrayBuffer","_args2","statusText","Buffer","from","RemoteFile","resolveUriLocation","baseUri","href","isNode","LocalFile","BlobFile","absoluteLocation","internetAccount","getInternetAccount","checkAuthNeededFetch","isRootModelWithInternetAccounts","getInternetAccountType","_checkAuthNeededFetch","_response$headers$get","AuthNeededError","toString","j","addFunction","parent","log","sqrt","log10","parseFloat","char","split","charCodeAt","pos","codePointAt","search","endsWith","pad","padEnd","fill","padStart","repeat","match","replace","replaceAll","substring","toLowerCase","trimEnd","trimStart","tags","addBinaryOp","compilationCache","compiled","compile","minSizeToBotherWith","segmentsIntersect","x1","x2","y1","y2","LayoutRow","allFilled","widthLimit","rowState","x","_this$rowState","bits","left","right","_this$rowState2","maxX","rectWidth","rect","l","initialize","oLeft","oRight","currLength","additionalLength","w","leftTrimAmount","rightTrimAmount","trimAmount","desiredLength","_ref$pitchX","_ref$pitchY","_ref$maxHeight","_ref$hardRowLimit","hardRowLimit","_ref$displayMode","bitmap","pTotalHeight","height","storedRec","top","addRectToBitmap","pLeft","pRight","pHeight","rectangle","h","originalHeight","maxTop","collides","maxY","y","row","isRangeClear","yEnd","autovivifyRow","setAllFilled","addRect","pY","pX","getItemAt","_this$rectangles$get","getTotalHeight","regionRectangles","containsNoTransferables","totalHeight","getRectangles","SubLayoutClass","subLayouts","layoutName","subLayout","_this$subLayouts$get","_step2$value","sublayout","rbush","RBush","insert","minX","minY","_rect","_top","_data","_left","_right","_region","ThrowingLayout","PrecomputedMultiLayout","_MultiLayout","sublayoutJson","SceneGraph","absoluteCache","inDevelopment","isNaN","dirty","nameOrSceneGraph","child","_child$absolute","absolute","childLeft","childRight","childTop","childBottom","bottom","expand","newLeft","newRight","newTop","newBottom","_this$absolute","diff","walkParents","walkChildren","xOffset","yOffset","node","c","_this$absolute2","_subtype","_subType","subType","unionType","_types","getPropertyType","propertyName","properties","_defaultValue","getEnumerationValues","maybeLate","createCanvas","createImageBitmap","ImageBitmapType","drawImageOntoCanvasContext","imageData","context","serializedCommands","CanvasSequence","execute","drawImage","weHave","OffscreenCanvas","ImageBitmap","nodeCreateCanvas","canvas","dataUri","img","toDataURL","nodeImage","onload","onerror","src","getContext","ctx","renderToAbstractCanvas","_renderToAbstractCanvas","_opts$highResolutionS","highResolutionScaling","fakeCtx","_ctx","_result","_s","_canvas","_ctx2","_result2","rasterizeLayers","canvasRecordedData","scale","t2","t3","t4","t5","t7","blobToDataURL","convertToBlob","t8","t6","t9","t10","xlinkHref","t11","t12","t13","t14","t15","t16","t17","_getSerializedSvg","C2S","getSvg","ReactRendering","rendering","dangerouslySetInnerHTML","__html","left1","right1","left2","right2","doesIntersect2","isContainedWithin","catch","takeUntil","isFeature","isSimpleFeatureSerialized","parentHandle","_this$data$subfeature","aliases","strand","parentId","calcStdFromSums","sumSquares","variance","scoreMean","scoreStdDev","_scoresToStats","seed","found","_yield$firstValueFrom","MAX_VALUE","MIN_VALUE","acc","summary","getTrackAssemblyNames","trackAssemblyNames","getRpcSessionId","thisNode","highestRpcSessionId","currentNode","UNKNOWN","UNSUPPORTED","counter","makeIndex","suffix","makeIndexType","typeA","typeB","getFileName","lastIndexOf","guessAdapter","adapterHint","_file","_index","_adapterHint","adapterGuesser","guessTrackType","_adapterName","trackTypeGuesser","generateUnsupportedTrackConf","trackName","trackUrl","categories","objectHash","generateUnknownTrackConf","getTrackName","asm","assemblies","sequence","isViewContainer","isSessionModel","isSessionWithAddTracks","disableAddTracks","isSessionModelWithWidgets","isSessionModelWithConnections","isSessionModelWithConnectionEditing","isSessionWithSessionPlugins","isSelectionContainer","isViewModel","isTrackModel","isDisplayModel","isTrackViewModel","isAbstractMenuManager","setPrototypeOf","_assertThisInitialized","_Error2","isRetryException","shortid","propTypes","isRequired","ConfigSchema","MxPropTypes","objectOrObservableObject","Feature","NoAssemblyRegion","setRefName","newRefName","compose","LocalPathLocation","BlobLocation","UriLocationRaw","UriLocation","snapshotProcessor","postProcessor","preProcessor","useMeasure","dims","setDims","RS","ResizeObserver","contentRect","observe","disconnect","when","getter","timeoutId","finished","whenPromise","mobxWhen","finishTimeout","cancel","clearTimeout","addEventListener","whenPresent","_whenPresent","getNextRefPos","mdRegex","modificationRegex","cigarRegex","startClip","endClip","parseCigar","cigarToMismatches","ops","seq","qual","roffset","soffset","mismatches","hasRefAndSeq","op","base","altbase","q","cliplen","mdToMismatches","mdstring","cigarMismatches","curr","lastCigar","lastTemplateOffset","lastRefOffset","lastSkipPos","mismatchRecords","skips","cigar","getTemplateCoordLocal","refCoord","templateOffset","refOffset","md","num","mismatch","getMismatches","cigarOps","positions","readPos","refPos","currPos","_i2","_marked","getModificationProbabilities","_getTagAlt","getTagAlt","elt","getMethBins","fstart","fend","fstrand","flen","mm","methBins","methProbs","probabilities","modifications","getModificationPositions","probIndex","prob","fseq","revcom","mods","_mod$split","_mod$split2","_toArray","basemod","matches","_matches","delta","temp","sort","getModificationTypes","_mod$split3","getOrientedCigar","flip","getOrientedMismatches","getLengthOnRef","lengthOnRef","getLength","getLengthSansClipping","getClip","getTag","tag","featurizeSA","SA","readName","normalize","aln","_aln$split","_aln$split2","saRef","saStart","saStrand","saCigar","saLengthOnRef","saLength","saLengthSansClipping","saStrandNormalized","saClipPos","saRealStart","seqLength","clipPos","CIGAR","mate","fetchSizeLimit","cramLocation","craiLocation","sequenceAdapter","bamLocation","indexType","enumeration","htsgetBase","htsgetTrackId","hiddenFromGUI","subadapter","clipColor","indicatorThreshold","drawArcs","drawInterbaseCounts","drawIndicators","SNPCoverageRenderer","_WiggleBaseRenderer","_draw","displayCrossHatches","_props$modificationTa","modificationTagMap","scaleOpts","unadjustedHeight","configTheme","cfg","ticks","_regions","viewScale","indicatorViewScale","originY","originLinear","toY","toHeight","toY2","toHeight2","bases","colorForBase","coverage","_featureSpanPx","_featureSpanPx2","prevTotal","extraHorizontallyFlippedOffset","_feature","_featureSpanPx3","_featureSpanPx4","_leftPx","_rightPx","_score","snpinfo","_w","totalScore","total","_height","interbaseEvents","_curr","_i3","_base","_total","accum","maxBase","_i4","_base2","_total2","indicatorComparatorScore","_i5","_bpSpanPx","_bpSpanPx2","xs","neg","YSCALEBAR_LABEL_OFFSET","getScale","scaleType","getOrigin","palette","A","main","C","G","T","insertion","softclip","hardclip","meth","unmeth","fillStyle","featureSpanPx","fillRect","cov","noncov","beginPath","lineTo","bpSpanPx","strokeStyle","lineWidth","bezierCurveTo","stroke","tick","WiggleBaseRenderer","register","addRendererType","WiggleRendering","PileupLayoutSession","_LayoutSession","sortedBy","filterBy","showSoftClip","layoutFeats","featureMap","featureArray","featuresInCenterLine","featuresOutsideCenter","innerArray","isCram","localeCompare","baseSortArray","baseMap","aMismatch","bMismatch","acode","bcode","sortFeature","heightPx","expansionBefore","expansionAfter","_mismatches$i","_mismatches$i$cliplen","topPx","layoutFeature","cw","getColorBaseMap","deletion","getCharWidthHeight","charWidth","measureText","charHeight","colorByOrientation","fillColor","orientationType","LR","RR","RL","LL","orientationTypes","getOrientation","getAlignmentShapeColor","colorType","defaultColor","colorTagMap","colorByInsertSize","colorByStrand","colorByMappingQuality","flags","flipper","getStranded","colorByStrandedRnaSeq","renderAlignment","contrastForBase","canvasWidth","colorBy","_renderArgs$colorTagM","_ref2$tag","_ref2$type","closePath","renderAlignmentShape","scores","start0","renderPerBaseQuality","heightLim","letter","fillText","renderPerBaseLettering","Color","_renderArgs$modificat","col","hsl","renderModifications","regionSequence","_getMethBins","_regionSequence","_regionSequence2","l1","l2","getCol","_bpSpanPx3","_bpSpanPx4","_bpSpanPx5","_bpSpanPx6","leftPx2","renderMethylation","renderMismatches","minSubfeatureWidth","largeInsertionIndicatorScale","mismatchAlpha","drawSNPsMuted","_ref$drawIndels","drawIndels","pxPerBp","mstart","mlen","mbase","baseColor","contrastColor","txt","rwidth","insW","clipW","adjustPx","clearRect","renderSoftClipping","minFeatWidth","_getCharWidthHeight","s0","getContrastText","makeImageData","layoutRecords","getContrastBaseMap","font","PileupRenderer","_BoxRendererType","_fetchSequence2","fetchSequence","maxClippingSize","_renderProps$colorBy","_regions2","shouldFetchReferenceSequence","notEmpty","noSpacing","_filterBy$tagFilter","onMouseMove","featureIdUnderMouse","contextMenuFeature","highlightOverlayCanvas","mouseIsDown","setMouseIsDown","_useState3","_useState4","movedDuringLastMouseDown","setMovedDuringLastMouseDown","mouseMove","getBoundingClientRect","offsetX","clientX","offsetY","clientY","clientBp","getFeatureOverlapping","callMouseHandler","handlerName","featureHandler","canvasHandler","_displayModel$getFeat","_displayModel$getFeat2","selectedRect","getFeatureByID","_selectedRect","leftBp","rightBp","bottomPx","rectTop","rectHeight","shadowColor","shadowBlur","lineJoin","strokeRect","highlightedFeature","highlightedRect","_highlightedRect","tagFilter","position","PrerenderedCanvas","onMouseDown","onMouseEnter","onMouseOut","onMouseOver","onMouseUp","onMouseLeave","onContextMenu","onFocus","onBlur","getLowerPanelDisplays","getDisplayElements","_f$subDisplay","_f$subDisplay2","lowerPanel","deepSnap","preCheck","PileupDisplay","SNPCoverageDisplay","isAlive","lowerPanelDisplays","snpCovHeight","heightPreConfig","userFeatureScreenDensity","lowerPanelType","AlignmentsModel","scrollTop","setScrollTop","setSNPCoverageHeight","_self$heightPreConfig","pileupConf","searchFeatureByID","_self$PileupDisplay","coverageConf","setSNPCoverageDisplay","setFeatureDensityStatsLimit","setPileupDisplay","setHeight","setLowerPanelType","resizeHeight","oldHeight","setConfig","setColorBy","propagateColorBy","setFilterBy","propagateFilterBy","renderSvg","pileupHeight","overrideHeight","transform","superTrackMenuItems","resizeHandle","zIndex","ResizeHandle","onDrag","pileupDisplay","snpCoverageDisplay","baseLinearDisplayConfigSchema","modelFactory","en","toLocaleString","pct","toFixed","toP","TooltipContents","reactRef","refbase","rn1","r1","info","featureUnderMouse","getUniqueTagValues","_getUniqueTagValues","colorScheme","_getSession","getUniqueModificationValues","_getUniqueModificationValues","_getSession2","FilterModel","flagInclude","flagExclude","linearWiggleDisplayModelFactory","observable","modificationsReady","updateModificationColorMap","uniqueModifications","modificationColors","randomColor","superRenderProps","rendererConfig","_self$drawInterbaseCo","_self$drawIndicators","_self$drawArcs","configBlob","drawArcsSetting","_self$drawArcs2","drawInterbaseCountsSetting","_self$drawInterbaseCo2","drawIndicatorsSetting","_self$drawIndicators2","autorunReady","initialized","featureDensityStatsReady","regionTooLarge","renderReady","ready","superProps","setModificationsReady","toggleDrawIndicators","toggleDrawInterbaseCounts","toggleDrawArcs","createAutorun","vals","delay","TooltipComponent","needsScalebar","contextMenuItems","autoscale","minScore","maxScore","inverted","multiTicks","renderers","configSchemaFactory","LinearWiggleDisplayReactComponent","bg","action","disabledBackground","loading","backgroundColor","backgroundImage","pointerEvents","BlockMsg","severity","buttonText","DataDisplay","drawn","lastDrawnOffsetPx","LoadingBar","Arcs","totalWidthPx","useCallback","setRef","BaseDisplayComponent","maxFeatureScreenDensity","jitter","linearBasicDisplayConfigSchemaFactory","FilterByTagDlg","TrackHeightMixin","FeatureDensityMixin","drawInter","drawLongRange","chainData","lastDrawnBpPerPx","setLastDrawnOffsetPx","setLastDrawnBpPerPx","setLoading","setColorScheme","setChainData","setDrawInter","setDrawLongRange","setLineWidth","setJitter","lineWidthSetting","_self$lineWidth","jitterVal","_self$jitter","icon","FilterListIcon","queueDialog","handleClose","PaletteIcon","_yield$import","_yield$import2","drawFeats","_yield$import3","doAfterAttach","_yield$import4","configSchemaF","stateModelF","Cloud","featureHeight","drawSingletons","setDrawSingletons","addTrackType","linearAlignmentsDisplay","baseModel","baseModelFactory","getInsertSizeStats","filtered","tlen","sum2","avg","sd","upper","lower","PileupBaseRPC","_rootModel$session","PileupGetReducedFeatures","_PileupBaseRPC","featuresArray","reduced","chains","pair_orientation","next_ref","next_pos","groupBy","hasPaired","PileupGetVisibleModifications","_yield$this$deseriali","uniqueValues","PileupGetGlobalValueForTag","addToExtensionPoint","adapterName","fileName","indexName","defaultRendering","_sortedBy$tag","ColorByTagDlg","SortByTagDlg","SetFeatureHeightDlg","SetMaxHeightDlg","ModificationsDlg","BaseLinearDisplay","showSoftClipping","fadeLikelihood","trackMaxHeight","featureUnderMouseVolatile","currSortBpPerPx","sortReady","tagsReady","setTagsReady","setSortReady","setCurrSortBpPerPx","setMaxHeight","setFeatureHeight","setNoSpacing","updateColorTagMap","uniqueTag","colorPalette","totalKeys","setFeatureUnderMouse","selectFeature","featureWidget","addWidget","showWidget","setSelection","clearSelected","copyFeatureToClipboard","_feature$toJSON","copy","notify","toggleSoftClipping","toggleMismatchAlpha","setSortedBy","centerLineInfo","centerBp","superReload","featureHeightSetting","mismatchAlphaSetting","viewName","MenuOpenIcon","clearFeatureSelection","ContentCopyIcon","LinearPileupDisplayBlurb","renderPropsPre","onFeatureClick","layoutId","onFeatureContextMenu","setContextMenuFeature","pre","VisibilityIcon","SortIcon","option","doneCallback","renderInClient","_self$featureUnderMou","_ref9","BaseLinearDisplayComponent","AlignmentsPlugin","CramAdapterF","BamAdapterF","LinearPileupDisplayF","LinearSNPCoverageDisplayF","AlignmentsTrackF","SNPCoverageAdapterF","HtsgetBamAdapterF","PileupRendererF","PileupRPCMethodsF","SNPCoverageRendererF","LinearReadArcsDisplayF","LinearReadCloudDisplayF","LinearAlignmentsDisplayF","AlignmentsFeatureWidgetF","GuessAlignmentsTypesF","color_fwd_strand_not_proper","color_rev_strand_not_proper","color_fwd_strand","color_rev_strand","color_fwd_missing_mate","color_rev_missing_mate","color_fwd_diff_chr","color_rev_diff_chr","color_pair_lr","color_pair_rr","color_pair_rl","color_pair_ll","color_nostrand","color_interchrom","color_longinsert","color_shortinsert","color_unknown","strokeColor","getPairedInsertSizeColor","f1","f2","sameRef","getPairedInsertSizeAndOrientationColor","getPairedOrientationColor","fr","type2","pairMap","alt","_getTag","F1R2","F2R1","F1F2","F2F1","R1R2","R2R1","R1F2","R2F1","rf","ff","_fetchSequence","_feats$","originalRefName","o","g","random","TOP","BOTTOM","getPxFromCoordinate","yPos","level","getYPosOverride","chunk","_views$level$trackRef","trackRefs","heightFromSpecificLevel","useNextFrame","variable","setNextFrameState","intersect","a1","ids","a12","findCircleIntersectionX","cx","cy","resultArray","solution","findCircleIntersectionY","cartesianToPolar","rho","theta","atan","PI","cartesianToTheta","twoPi","Slice","offsetRadians","radianWidth","startRadians","endRadians","bpPerRadian","flipped","assembleLocString","widthBp","freeze","radiusPx","totalRadians","elided","polarToCartesian","sliceIsVisible","r1start","r1length","r2start","r2length","_self$visibleSection$","visibleSection","visibleThetaMin","visibleThetaMax","ExportSvgDialog","hideVerticalResizeHandle","hideTrackSelectorButton","lockedFitToWindow","disableImportForm","scrollX","scrollY","minimumRadiusPx","spacingPx","paddingPx","lockedPaddingPx","minVisibleWidth","trackSelectorType","viewSides","circleCenter","circleRadius","_viewSides","viewL","viewR","viewT","viewB","_circleCenter","vertices","maxRho","_vertices$i","reflect","rhoMin","rhoMax","thetaMin","thetaMax","_vertices$_i","vx","vy","_cartesianToPolar","_cartesianToPolar2","viewportVisibleSection","centerXY","circumferencePx","elidedBp","elidedRegions","pxPerRadian","maximumRadiusPx","minCircumferencePx","maxCircumferencePx","atMaxBpPerPx","atMinBpPerPx","tooSmallToLock","figureDimensions","figureWidth","figureHeight","visible","lastVisible","displayedRegion","_assemblyManager$get","staticSlices","slices","currentRadianOffset","calculateStaticSlices","visibleStaticSlices","newHeight","setModelViewWhenAdjust","resizeWidth","oldWidth","rotateClockwiseButton","rotateClockwise","rotateCounterClockwiseButton","rotateCounterClockwise","zoomInButton","zoomOutButton","secondCondition","closeView","removeView","previouslyEmpty","activateTrackSelector","selector","toggleTrack","supportedDisplays","displayConf","toggleFitToWindowLock","exportSvg","_arguments","renderToSvg","saveAs","FolderOpenIcon","PhotoCameraIcon","TrackSelectorIcon","_theme$palette","primary","secondary","tertiary","quaternary","strokeDasharray","strokeDashoffset","duration","light","radius","shown","setShown","patternTransform","patternUnits","strokeWidth","dominantBaseline","textAnchor","strokeLinecap","DisplayError","filled","Loading","renderReactionData","_view$displayedRegion","blockDefinitions","renderReactionEffect","_renderReactionEffect","_renderArgs$regions","cannotBeRenderedReason","_yield$rendererType$r","isCompatibleWithRenderer","baseChordDisplayConfig","onChordClick","BaseChordDisplayModel","bezierRadiusRatio","refNameMap","origSlices","_self$refNameMap","renamed","bezierRadius","ThisRendererType","selection","renderStarted","renderSuccess","renderError","setRefNameMap","makeAbortableReaction","fireImmediately","getRefNameMapForAdapter","CircularViewPlugin","addViewType","CircularViewF","assembly","_ref$tracks","addView","waitForAssembly","LaunchCircularViewF","appendToSubMenu","DataUsageIcon","fontFamily","fontSize","callbackEditor","marginTop","border","callbackContainer","overflowX","textAreaFont","contents","setContents","shrink","htmlFor","helperText","multiline","InputProps","setTarget","newTarget","refNameColumn","LazyConfigurationEditorComponent","_default","FromConfigAdapterF","FromConfigRegionsAdapterF","FromConfigSequenceAdapterF","RefNameAliasAdapterF","ConfigurationEditorHeadingComponent","ConfigurationEditorConfigSchema","ConfigurationEditorStateModelFactory","isAbsoluteUrl","trackSource","trackData","indexTrackData","altAssemblyName","altTrackName","altTrackType","textIndexTrack","textIndexingConf","setAdapterHint","setTrackSource","setTextIndexingConf","setTextIndexTrack","setTrackData","setIndexTrackData","setAssembly","setTrackName","setTrackType","clearData","trackAdapter","isFtp","_index$uri","_track$uri","isRelativeTrackUrl","_self$trackData","isRelativeIndexUrl","_self$indexTrackData","isRelativeUrl","trackHttp","_self$trackData2","_self$trackData2$uri","indexHttp","_self$indexTrackData2","_self$indexTrackData3","wrongProtocol","protocol","unsupported","_this$trackAdapter","_self$view$assemblyNa","warningMessage","query","queryLower","filterTracks","trackSelectorAnyOverlap","trackListAssemblies","trackAssemblies","a2","s1","hasAnyOverlap","generateHierarchy","trackConfigurations","collapsed","hierarchy","filterText","unshift","currLevel","_loop","isOpenByDefault","stateTreeFactory","addToSelection","removeFromSelection","clearSelection","setView","toggleCategory","pathName","clearFilterText","setFilterText","newText","getRefSeqTrackConf","_loop2","_ret","_self$view","connectionTrackConfigurations","connection","hier","connectionInstances","conns","connectionHierarchy","state","expanded","hubTxtLocation","baseConnectionConfig","UCSCTrackHubConnection","BaseConnectionModelFactory","notLoadedAssemblies","hubFileLocation","generateTracks","fetchGenomesFile","fetchTrackDbFile","fetchHubFile","hubFile","genomeFile","hubUri","genomesFileLocation","genomesFile","_session$assemblyMana","genomeName","genome","db","trackDb","seqAdapter","loadedAssemblies","str1","str2","breakConnection","addConnectionType","locstr","includeAsm","_view$pxToBp","getBlockLabelKeysToHide","viewOffsetPx","blockLabelKeysToHide","sortedBlocks","alen","labelBounds","makeTicks","emitMajor","emitMinor","gridPitch","minMajorPitchPx","minMinorPitchPx","minMajorPitchBp","majorMagnitude","toExponential","majorPitch","majorPitchPx","minorPitch","chooseGridPitch","iterPitch","minBase","contentBlock","minHeight","boxSizing","whiteSpace","overflow","elidedBlock","interRegionPaddingBlock","boundaryPaddingBlock","boundary","_ref3$style","rightRoundedRect","colorMap","gneg","gpos25","gpos50","gpos100","gpos75","gvar","stalk","acen","overview","cytobands","getCytobands","coords","arr","lcap","rcap","firstCent","points","HEADER_OVERVIEW_HEIGHT","root","paper","transition","transitions","shortest","margin","dragHandle","cursor","dragHandleIcon","verticalAlign","iconButton","TrackLabel","_session$getTrackActi","_useStyles","items","AddIcon","MinimizeIcon","getTrackActionMenuItems","priority","draggable","onDragStart","currentTarget","parentNode","dataTransfer","setDragImage","setDraggingTrackId","onDragEnd","DragIcon","title","CloseIcon","SanitizedHTML","MoreVertIcon","trackLabel","trackLabelOffset","trackLabelOverlap","labelStyle","trackLabels","prefersOffset","renderingComponentContainer","trackRenderingContainer","overflowY","onDragEnter","onScroll","evt","scaleFactor","onHorizontalScroll","horizontalScroll","overlay","draggingTrackId","ref2","dimmed","debouncedOnDragEnter","useDebouncedCallback","moveTrack","detail","_ref2$current","TrackLabelContainer","ErrorBoundary","FallbackComponent","TrackRenderingContainer","useRangeSelect","shiftOnly","startX","setStartX","_useState5","_useState6","currentX","setCurrentX","_useState7","_useState8","anchorPosition","setAnchorPosition","_useState9","_useState10","guideX","setGuideX","mouseDragging","mouseDown","shiftKey","preventDefault","stopPropagation","relativeX","getRelativeX","mouseOut","setOffsets","handleMenuItemClick","globalMouseMove","globalMouseUp","leftOffset","rightOffset","computeOffsets","removeEventListener","rubberbandOn","leftBpOffset","rightBpOffset","numOfBpSelected","guide","coordX","placement","arrow","rubberbandControl","_ref$ControlComponent","ControlComponent","_useRangeSelect","VerticalGuide","RubberbandSpan","anchorReference","rubberBandMenuItems","scalebarContainer","scalebarZoomContainer","scalebar","majorTickLabel","lineHeight","justifyContent","refLabel","fontWeight","RenderedRefNameLabels","lastLeftBlock","paddingLeft","RenderedScalebarLabels","ContentBlockComponent","baseNumber","getTickDisplayStr","ElidedBlockComponent","InterRegionPaddingBlockComponent","Scalebar","other","_useStyles3","offsetLeft","verticalGuidesZoomContainer","verticalGuidesContainer","majorTick","minorTick","divider","RenderedVerticalGuides","centerLineContainer","active","borderTop","borderBottom","centerLineText","trackHeights","startingPosition","role","tracksContainer","_useSideScroll","setMouseDragging","scheduled","prevX","cleanup","requestAnimationFrame","dataset","resizer","button","mouseUp","useSideScroll","mouseDown1","mouseDown2","onWheel","origEvent","normalizeWheel","ctrlKey","pixelY","setScaleFactor","pixelX","useWheelScroll","additional","showGridlines","Gridlines","showCenterLine","CenterLine","Rubberband","SCALE_BAR_HEIGHT","ImportForm","note","paddingTop","paddingBottom","LinearGenomeView","hasDisplayedRegions","MiniControlsComponent","HeaderComponent","TracksContainer","TrackContainer","hideNoTracksActive","startIcon","HoverTooltip","_assembly$cytobands","cytobandOffset","cytoband","getCanonicalRefName","_ref2$ControlComponen","controlsRef","click","globalKeyDown","scalebarBorder","scalebarContig","scalebarContigForward","backgroundRepeat","scalebarContigReverse","scalebarRefName","scalebarLabel","scalebarVisibleRegion","HEADER_BAR_HEIGHT","overviewSvg","Polygon","_ref$useOffset","useOffset","multiplier","totalWidthPxWithoutBorders","polygonColor","first","last","topLeft","topRight","startPx","endPx","OverviewBox","showCytobands","refNameColor","getRefNameColor","tickLabels","offsetLabel","canDisplayCytobands","borderColor","tickLabel","labelIdx","Cytobands","visibleRegions","overviewVisibleRegions","_theme$palette2","scalebarColor","firstOverviewPx","lastOverviewPx","transparency","modWidth","OverviewRubberband","getFiltered","inputValue","searchQuery","toLocaleLowerCase","group","getDeduplicatedResult","getDisplayString","aggregateResults","HelpDialog","HelpAdornment","isHelpDialogDisplayed","setHelpDialogDisplayed","HelpIcon","EndAdornment","showHelp","endAdornment","marginRight","SearchIcon","AutocompleteTextField","TextFieldProps","inputBoxVal","params","setInputValue","setCurrentSearch","_TextFieldProps$Input","placeholder","_assembly$regions","onSelect","fetchResults","_ref$showHelp","_ref$minWidth","minWidth","_ref$maxWidth","_ref$TextFieldProps","setOpen","loaded","setLoaded","currentSearch","searchOptions","setSearchOptions","debouncedSearch","useDebounce","coarseVisibleLocStrings","disableListWrap","disableClearable","freeSolo","includeInputInList","selectOnFocus","onInputChange","_event","newInputValue","loadingText","onOpen","selectedOption","getOptionDisabled","filterOptions","renderInput","getOptionLabel","opt","rubberband","rubberbandText","contrastText","popover","mouseEvents","paddingRight","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","keepMounted","disableRestoreFocus","toLocale","_fetchResults","_assembly$allRefNames","queryString","searchType","searchScope","rankSearchResults","textSearchManager","textSearchResults","refNameResults","allRefNames","getId","splitLast","lastIndex","hideHeader","ArrowDown","zoom","ZoomOut","ZoomIn","container","slider","log2","setValue","onChangeCommitted","headerRefName","navToOption","_navToOption","navToLocString","_handleSelectedRegion","_option$results","_splitLast","_splitLast2","allRefs","hasLocation","setSearchResults","allRefNamesWithLowerCase","RefNameAutocomplete","SPACING","WIDGET_HEIGHT","headerBar","headerForm","flexWrap","spacer","flexGrow","panButton","toggleButton","buttonSpacer","HeaderButtons","PanControls","slide","ArrowBackIcon","ArrowForwardIcon","RegionWidth","coarseTotalBp","getBpDisplayStr","Controls","SearchBox","ZoomControls","hideHeaderOverview","OverviewScalebar","ReturnToImportFormDialog","SequenceSearchDialog","GetSequenceDialog","SearchResultsDialog","calculateVisibleLocStrings","isSingleAssemblyName","MUIRegion","localStorageGetItem","showCytobandsSetting","volatileError","afterDisplayedRegionsSetCallbacks","coarseDynamicBlocks","MiniControls","Header","assemblyErrors","assembliesInitialized","_assemblyManager$get2","scaleBarHeight","headerHeight","trackHeightsWithResizeHandles","includeAggregateIndexes","getTrack","openTrackIds","updateScore","getScore","rewriteOnClicks","holdOnClick","trackTypeActions","allActions","setShowCytobands","toggleHeader","toggleHeaderOverview","toggleNoTracksActive","toggleShowGridlines","centerAtOffset","searchResults","setNewView","horizontallyFlip","reverse","displayInitialSnapshot","movingId","targetId","oldIndex","newIndex","setTrackLabels","setting","toggleCenterLine","getSelectedRegions","simView","afterDisplayedRegionsSet","center","showAllRegionsInAssembly","names","factor","clearView","cancelLastAnimation","viewWidths","_springAnimate","springAnimate","_springAnimate2","animate","cancelAnimation","_springAnimate3","_springAnimate4","canShowCytobands","anyCytobandsExist","_assemblyManager$get3","_assemblyManager$get4","SyncAltIcon","LabelIcon","currentlyCalculatedStaticBlocks","stringifiedCurrentlyCalculatedStaticBlocks","sret","roundedDynamicBlocks","visibleLocStrings","setCoarseDynamicBlocks","localStorage","optAssemblyName","_getSession4","isValidRefName","navToLocations","parseLocStrings","parsedLocStrings","_getSession5","locations","generateLocations","navTo","navToMultiple","assembly1","assembly2","ref1","r2","findLast","e1","e2","index2","ed","ZoomInIcon","SVGBackground","shift","SVGRegionSeparators","SVGTrackLabel","xoff","yoff","SVGTracks","displayResults","textHeight","_ref$trackLabels","_ref$trackLabelOffset","textOffset","Ruler","_ref$reversed","_ref$major","major","_ref$minor","minor","_ref$hideText","hideText","SVGRuler","renderRuler","clipid","clipPath","SVGScalebar","_model$dynamicBlocks","displayBp","x0","SVGHeader","cytobandHeight","rulerHeight","_renderToSvg","_session$allThemes","_opts$textHeight","_opts$headerHeight","_opts$rulerHeight","_opts$fontSize","_opts$cytobandHeight","_opts$trackLabels","_opts$themeName","themeName","_opts$Wrapper","Wrapper","trackLabelMaxLen","allThemes","renderToStaticMarkup","xmlns","xmlnsXlink","viewBox","_generateLocations","asmName","canonicalRefName","inputs","parseLocString","_inputs","isInteger","mouseover","CompositeMap","_Symbol$iterator","submaps","submap","_iterator3","_step3","_iterator4","_step4","_iterator6","_step6","_iterator5","_step5","_step7","_iterator7","_step8","_iterator8","_iterator9","_step9","_iterator10","_step10","Symbol","iterator","linearBlocks","heightOverflowed","textShadow","RenderedBlocks","blockState","viewModel","tooltip","borderRadius","shape","common","typography","pxToRem","wordWrap","clientMouseCoord","popperElt","setPopperElt","virtElement","useMemo","_usePopper","usePopper","styles","attributes","popper","ellipses","textOverflow","clientRect","setClientRect","offsetMouseCoord","setOffsetMouseCoord","setClientMouseCoord","contextCoord","setContextCoord","LinearBlocks","mouseCoord","TransitionProps","onExit","LoadingMessage","blockStatus","ServerSideRenderedBlockContent","RefreshIcon","reloadFlag","renderInProgress","doReload","getContainingDisplay","renderBlockData","renderBlockEffect","renderDelay","setRendered","setStatus","abortController","abort","messageText","beforeDestroy","_renderBlockData","freeResourcesInClient","optDisplay","regionAsm","hasName","displayError","_renderBlockEffect","viewParams","getViewParams","isJest","getFeatureDensityStatsPre","_getFeatureDensityStatsPre","renderBaseLinearDisplaySvg","_renderBaseLinearDisplaySvg","renderings","BlockState","regionCannotBeRenderedText","minDisplayHeight","displayHeight","regionTooLargeReason","featureDensityStats","_autorunFeatureDensityStats","_self$featureDensityS","currStatsBpPerPx","setCurrStatsBpPerPx","clearFeatureDensityStats","getFeatureDensityStats","setFeatureDensityStats","userBpPerPxLimit","userByteSizeLimit","featureDensityStatsP","currentBytesRequested","bytes","currentFeatureScreenDensity","_self$featureDensityS2","maxAllowableBytes","_self$featureDensityS3","autorunFeatureDensityStats","setFeatureDensityStatsP","totalBytes","req","toPrecision","TooLargeMessage","blockType","featureMaps","_self$blockState$get","_self$blockState$get$","getByCoord","_self$blockState$get2","_self$blockState$get3","getByID","_block$layout","addBlock","deleteBlock","getContainingTrack","setFeatureIdUnderMouse","blocksPresent","trackShowLabels","trackShowDescriptions","trackDisplayMode","showLabels","_self$trackShowLabels","showDescriptions","_self$trackShowDescri","_self$trackMaxHeight","_self$trackDisplayMod","toggleShowLabels","toggleShowDescriptions","setDisplayMode","superPropsOmit","LinearGenomeViewPlugin","exports","BasicTrackF","LinearBasicDisplayF","LinearGenomeViewF","LinearBareDisplayF","idsNotFound","LaunchLinearGenomeViewF","LineStyleIcon","altTypeToSO","DEL","INS","DUP","INV","INVDUP","CNV","TRA","NON_REF","getSOTermAndDescription","parser","soTerms","descriptions","_getSOAndDescFromAltD","getSOAndDescFromAltDefs","_getSOAndDescFromAltD2","soTerm","_getSOAndDescByExamin","bnd","parseBreakend","makeDescriptionString","getSOAndDescByExamination","_getSOAndDescByExamin2","descs","prefixes","desc","prefix","suffixes","pref","modAlt","VCFFeature","_id","dataFromVariant","field","SAMPLES","REF","ALT","POS","CHROM","INFO","ID","_getSOTermAndDescript","_getSOTermAndDescript2","isTRA","END","samples","vcfLocation","vcfGzLocation","linearBasicDisplayModelFactory","strokeColorSelected","strokeColorHover","bpToRadians","blockStart","blockEnd","_feature$get","svType","endPosition","endBlock","blocksForRefs","selected","startBlock","SVTYPE","matePosition","MatePosition","_feature$get2","_feature$get2$CHR","_feature$get3","_feature$get3$END","chr2","CHR2","startPos","startXY","endXY","controlXY","hoverStrokeColor","blocksForRefsMemo","chords","Chord","trackStyleId","VariantsPlugin","VcfAdapterF","VcfTabixAdapterF","VariantFeatureWidgetF","ExtensionPointsF","LinearVariantDisplayF","ChordRendererType","StructuralVariantChordRendererF","BaseChordDisplayComponent","ChordVariantDisplayF","LinearWiggleDisplay","YScaleBar","_yield$renderToAbstra","reducedFeatures","draw","bigWigLocation","source","subadapters","bigWigs","posColor","negColor","bicolorPivot","bicolorPivotValue","baseWiggleRendererConfigSchema","_ref$domain","_ref$range","pivotValue","_domain","scaleLinear","scaleLog","scaleQuantize","nice","_range","rangeMin","rangeMax","getNiceDomain","bounds","_bounds","_domain2","getScaleType","getQuantitativeStats","_getQuantitativeStats","nd","autoscaleType","_results","_scoreMin","_scoreMean","_scoreStdDev","quantitativeStatsAutorun","_aborter","_statsRegion","wiggleStats","aborter","AbortController","statsRegion","updateQuantitativeStats","fillRectCtx","fudgeFactor","drawXY","_props$offset","colorCallback","summaryScoreMode","minSize","_scale$domain","_scale$domain2","niceMin","niceMax","getHeight","toOrigin","hasClipping","prevLeftPx","crossingOrigin","lastCol","lastMix","effectiveC","mix","_featureSpanPx5","_featureSpanPx6","_featureSpanPx7","_featureSpanPx8","save","_featureSpanPx9","_featureSpanPx10","restore","drawLine","lastVal","_props$offset2","_scale$domain3","_scale$domain4","_featureSpanPx11","_featureSpanPx12","lowClipping","highClipping","drawDensity","pivot","crossing","_scale2$domain","_scale2$domain2","_featureSpanPx15","_featureSpanPx16","_featureSpanPx13","_featureSpanPx14","DensityRenderer","_props$onMouseLeave","_props$onMouseMove","_props$onFeatureClick","getFeatureUnderMouse","eventClientX","_getFeatureUnderMouse","_getFeatureUnderMouse2","XYPlotRenderer","LinePlotRenderer","sharedWiggleConfigFactory","minimalTicks","numStdDev","hoverVertical","useClientY","setAnchorEl","SetMinMaxDlg","SharedWiggleMixin","selectedRendering","resolution","rendererTypeNameState","constraints","statsFetchInProgress","EPSILON","setColor","setPosColor","setNegColor","statsFetch","setResolution","setFill","toggleLogScale","setScaleType","setSummaryScoreMode","setAutoscale","setMaxScore","setRendererType","setMinScore","toggleCrossHatches","setCrossHatches","cross","adapterTypeName","rendererTypeNameSimple","_self$rendererTypeNam","_self$scale","_self$constraints$max","_self$constraints$min","_self$autoscale","oldDomain","summaryScoreModeSetting","mode","canHaveFill","displayCrossHatchesSetting","hatches","hasResolution","hasGlobalStats","scoreTrackMenuItems","SetColorDlg","axisPropsFromTickScale","fillSetting","hasRenderings","superRenderSvg","XYPlotRendererConfigSchema","DensityRendererConfigSchema","LinePlotRendererConfigSchema","sources","ent","_obj$source","sourcesVolatile","setLayout","clearLayout","setSources","needsFullHeightScalebar","isMultiRow","needsCustomLegend","renderColorBoxes","_self$sourcesVolatile","iter","rowHeight","rowHeightTooSmallForScalebar","useMinimalTicks","MultiXYPlotRendererConfigSchema","MultiDensityRendererConfigSchema","MultiRowXYPlotRendererConfigSchema","MultiLineRendererConfigSchema","MultiRowLineRendererConfigSchema","MultiXYPlotRenderer","MultiDensityRenderer","MultiRowXYPlotRenderer","MultiLineRenderer","MultiRowLineRenderer","eventClientY","mouseoverBp","featuresUnderMouse","groups","_drawXY","delegateYield","translate","ConfirmDialog","trackIds","arg1","makeTrack","textbox","submit","marginBottom","MultiWiggleWidget","setVal","rows","multiple","_model$view","hideWidget","MultiWiggleGetSources","_pm$rootModel","_pm$rootModel$session","getSources","WiggleGetMultiRegionQuantitativeStats","getMultiRegionQuantitativeStats","WiggleGetGlobalQuantitativeStats","getGlobalStats","WigglePlugin","XYPlotRendererReactComponent","xyPlotRendererConfigSchema","utils","BigWigAdapterF","QuantitativeTrackF","MultiQuantitativeTrackF","LinearWiggleDisplayF","MultiLinearWiggleDisplayF","LinePlotRendererF","XYPlotRendererF","DensityRendererF","MultiXYPlotRendererF","MultiRowXYPlotRendererF","MultiDensityRendererF","MultiLineRendererF","MultiRowLineRendererF","addAddTrackWorkflowType","MultiWiggleAddTrackWidgetF","CreateMultiWiggleExtensionF","hint","orientation","Axis","shadow","format","orient","LEFT","RIGHT","fg","authEndpoint","tokenEndpoint","needsPKCE","clientId","scopes","responseType","fixup","buf","generateChallenge","_generateChallenge","sha256","Base64","processError","invalidErrorCb","_obj$error_descriptio","error_description","processTokenResponse","storeRefreshTokenCb","refresh_token","access_token","getResponseError","_getResponseError","reason","getError","_getError","named","codeVerifier","codeVerifierPKCE","Uint8Array","crypto","getRandomValues","refreshTokenKey","storeRefreshToken","refreshToken","removeRefreshToken","retrieveRefreshToken","exchangeAuthorizationForAccessToken","redirectUri","URLSearchParams","grant_type","client_id","redirect_uri","code_verifier","method","body","ok","exchangeRefreshForAccessToken","listener","exchangedTokenPromise","addMessageChannel","finishOAuthWindow","deleteMessageChannel","redirectUriWithInfo","fixedQueryString","redirectUrl","queryStringSearch","urlParams","_token","_token2","pathname","useEndpointForAuthorization","eventName","_window$require","ipcRenderer","_redirectUri","eventFromDesktop","response_type","token_access_type","scope","code_challenge","code_challenge_method","require","invoke","MessageEvent","doUserFlow","_token3","newToken","superGetFetcher","validateWithHEAD","ExternalTokenEntryForm","setToken","required","HTTPBasicLoginForm","username","setUsername","password","setPassword","onSubmit","btoa","autoComplete","OAuthConfigSchema","dropboxErrorMessages","shared_link_not_found","shared_link_access_denied","unsupported_link_type","shared_link_is_directory","getDescriptiveErrorMessage","_getDescriptiveErrorMessage","DropboxIcon","append","Authorization","GoogleDriveFile","_RemoteFileWithRangeC","statsPromise","metadataOnly","_stat","GoogleDriveIcon","getUri","urlId","driveUrl","searchParams","credentials","AuthenticationPlugin","OAuthInternetAccountModelFactory","ExternalTokenConfigSchema","ExternalTokenInternetAccountModelFactory","HTTPBasicConfigSchema","HTTPBasicInternetAccountModelFactory","DropboxOAuthConfigSchema","DropboxOAuthInternetAccountModelFactory","GoogleDriveOAuthConfigSchema","GoogleDriveOAuthInternetAccountModelFactory","addInternetAccountType","bigBedLocation","bedpeLocation","columnNames","bedGzLocation","scoreColumn","autoSql","bedLocation","colRef","colStart","colEnd","BedPlugin","BigBedAdapterF","BedAdapterF","BedpeAdapterF","BedTabixAdapterF","BreakpointSplitViewType","_ViewType","endPos","mateRefName","featureRefName","topRegion","startMod","endMod","Join","MateDirection","bottomRegion","topMarkedRegion","bottomMarkedRegion","calc","getBlockFeatures","_getBlockFeatures","flat","showIntraviewLinks","linkViews","interactToggled","matchedTrackFeatures","matchedTracks","getMatchedTracks","trackConfigId","hasTranslocations","getTrackFeatures","_self$matchedTrackFea","getMatchedFeaturesInLayout","onAction","onSubviewAction","actionName","getPath","toggleInteract","toggleIntraviewLinks","toggleLinkViews","setMatchedTrackFeatures","_view$menuItems","LinkIcon","PhotoCamera","BreakpointSplitViewPlugin","BreakpointSplitView","BreakpointSplitViewF","BreakpointAlignmentsWidgetF","targetAssembly","queryAssembly","pafLocation","mcscanAnchorsLocation","bed1Location","bed2Location","mcscanSimpleAnchorsLocation","outLocation","deltaLocation","chainLocation","ComparativeAdaptersPlugin","PAFAdapterF","DeltaAdapterF","ChainAdapterF","MCScanAnchorsAdapterF","MCScanSimpleAnchorsAdapterF","MashMapAdapterF","Dotplot1DView","box","DotplotHView","viewWidth","DotplotVView","viewHeight","blockMessage","blockError","BlockMessage","BlockError","shouldDisplay","borderSize","borderX","borderY","warnings","ReactComponent2","vview","bpPerPxY","hview","bpPerPxX","offX","offY","_ref$offsetX","_ref$offsetY","MismatchParser","lt","gt","drawCir","arc","DotplotRenderer","_ComparativeRenderer","_renameRegionsIfNeeded2","process","_process","_drawDotplot","_hview$dynamicBlocks$","_vview$dynamicBlocks$","_hview$features","drawCigar","thresholds","_views","db1","db2","hBpPerPx","vBpPerPx","clampWithWarnX","clampWithWarnY","hsnap","vsnap","effect","mateRef","identity","b10","b20","e10","e20","b1","b2","currX","currY","_views$0$dynamicBlock","_views$1$dynamicBlock","_renderProps$view","dimensions","drawDotplot","ComparativeRenderer","thresholdsPalette","tryTrack","ComparativeRender","rend","getRenderer","DotplotReadVsRefMenuItem","pluggableElement","newStateModel","superContextMenuItems","readAssembly","_getConf","trackAssembly","SA2","totalLength","refLength","gatherOverlaps","viewTrackConfigs","DotplotPlugin","tickSize","vtextRotation","htextRotation","cursorMode","showPanButtons","wheelMode","_assemblyManager$get$","hticks","vticks","setShowPanButtons","setWheelMode","setCursorMode","setDrawCigar","setBorderX","setBorderY","setAssemblyNames","setViews","getCoords","mousedown","mouseup","_minmax","minmax","_minmax2","xmin","xmax","_minmax3","_minmax4","ymin","ymax","onDotplotView","d1","d2","_getSnapshot","rest1","_getSnapshot2","rest2","viewSnapshot","removeTemporaryAssembly","vblocks","hblocks","hoffset","voffset","vhide","hhide","by","bx","squareView","hpx","vpx","squareViewProportional","ratio","DotplotViewF","DotplotDisplayF","DotplotRendererF","LaunchDotplotViewF","TimelineIcon","gtfLocation","GtfPlugin","gtfAdapterConfigSchema","gffGzLocation","dontRedispatch","gffLocation","Gff3TabixAdapterF","Gff3AdapterF","GuessGff3F","rootUrlTemplate","HttpMap","_readMeta","meta","compress","hashHexCharacters","loadFile","track_names","hash_bits","_getHashHexCharacters","readMeta","_getCompress","_getTrackNames","bucket","getBucket","_getBucket","bucketIdent","hexToDirPath","hash","_loadFile","_hexToDirPath","hex","dirpath","getHashHexCharacters","getCompress","crc32","JBrowse1TextSearchAdapter","httpMap","tracksNames","namesIndex","_loadIndexFile","_searchIndex","getTrackNames","loadIndexFile","formatResults","exact","trackIndex","locstring","namesIndexLocation","dataDirLocation","_config$tracks","fetchJb1","convertTrackConfig","assemblyConf","jb2Tracks","jb1Track","dataRoot","LegacyJBrowsePlugin","NCListAdapterF","GuessNCListF","addTextSearchAdapterType","JBrowse1TextSearchAdapterF","JBrowse1ConnectionF","view0","existingFeatures","featIds","newFeatIds","foundNewFeatureNotInExistingMap","foundExistingFeatureNotInNewMap","middleComparativeHeight","param","setMiddleComparativeHeight","shownTracks","average","headerMenuItems","middle","baseConfigFactory","mainCanvas","clickMapCanvas","cigarClickMapCanvas","mouseoverCanvas","featPositions","mouseoverId","clickId","cigarMouseoverId","setFeatPositions","setMainCanvasRef","setClickMapCanvasRef","setCigarClickMapCanvasRef","setMouseoverCanvasRef","setMouseoverId","setCigarMouseoverId","setClickId","numFeats","featMap","linearPileupDisplayConfigSchemaFactory","findPosInCigar","featX","mateX","_navToSynteny","reg","regStart","regEnd","featStart","featEnd","mateStart","mateEnd","mateAsm","featAsm","featRef","rMateStart","rMateEnd","rFeatStart","rFeatEnd","_findPosInCigar","_findPosInCigar2","fStartX","mStartX","_findPosInCigar3","_findPosInCigar4","fEndX","mEndX","view2","m1","m2","linearPileupDisplayStateModelFactory","navToSynteny","Curves","drawCIGAR","drawCurves","toggleCurves","toggleCIGAR","superHeaderMenuItems","superMenuItems","CropFreeIcon","ReadVsRefDialog","preFeature","windowSizeText","setWindowSize","primaryFeature","setPrimaryFeature","windowSize","primaryAln","_primaryAln$split","_primaryAln$split2","origStrand","suppAlns","syntenyId","featSeq","configFeatureStore","seqTrackId","sequenceTrackConf","lgvRegions","addTemporaryAssembly","noAssemblyManager","showReverse","showTranslation","LinearComparativeViewF","LinearSyntenyViewF","LinearComparativeDisplayF","LinearSyntenyDisplayF","LGVSyntenyDisplayF","_data$tracks","LaunchLinearSyntenyViewF","SyntenyFeatureWidgetF","LinearReadVsRefMenuItem","CalendarIcon","ScoreText","_ref$layoutRecord","layoutRecord","_ref$layoutRecord$dat","anchorX","innerColor","scoreString","fontHeight","anchorLocation","onFeatureMouseDown","handler","onFeatureMouseEnter","onFeatureMouseOut","onFeatureMouseOver","onFeatureMouseUp","onFeatureMouseLeave","onFeatureMouseMove","styleOuter","styleInner","layoutFeat","_props$features","_props$displayModel","records","getLayout","_createElement","Stick","Lollipop","caption","minStickLength","stickColor","stickWidth","FloatingLayout","layoutDirty","sorted","maxBottom","layoutEntries","currentItem","previouslyLaidOutItem","prevStart","prevTop","prevEnd","prevBottom","pairs","PrecomputedFloatingLayout","FloatingLayoutSession","_this$regions$","LollipopRenderer","LollipopRendererReactComponent","lollipopRendererConfigSchema","linearLollipopDisplayConfigSchemaFactory","LinearLollipopDisplayStateModelFactory","arcsRendered","textStroke","tooltipWidth","textYCoord","triggerRef","rx","ry","fillOpacity","textLength","thickness","ArcPlugin","ArcRenderer","ArcRendererF","LinearArcDisplayF","attributeName","aboutConfigSchema","aboutStateModel","helpConfigSchema","helpStateModel","importSessionConfigSchema","importSessionStateModel","sessionManagerConfigSchema","sessionManagerStateModel","appendToMenu","InfoIcon","widget","SPARQLAdapter","endpoint","queryTemplate","refNamesQueryTemplate","additionalQueryParams","configRefNames","_getRefNames","encodeURIComponent","querySparql","resultsToRefNames","filledTemplate","resultsToFeatures","_querySparql","accept","bindings","head","vars","fields","requiredField","seenFeatures","rawData","rd","parentUniqueId","pid","sf","subfeature","seenFeature","RdfPlugin","sparqlAdapterConfigSchema","SPARQLAdapterClass","twoBitLocation","chromSizesLocation","Translation","codonTable","frame","_props$reverse","tilt","effectiveFrame","seqSliced","translated","codon","normalizedCodon","aminoAcid","drop","defaultStarts","startCodon","defaultStops","stopCodon","DNA","SequenceSVG","_ref$features","_ref$showReverse","_ref$showForward","showForward","_ref$showTranslation","generateCodonTable","defaultCodonTable","complement","DivSequenceRenderer","fastaLocation","faiLocation","metadataLocation","gziLocation","searchForward","searchReverse","caseInsensitive","createReferenceSeqTrackConfig","divSequenceRendererConfigSchema","toggleShowForward","toggleShowReverse","toggleShowTranslation","SequencePlugin","DivSequenceRendererF","TwoBitAdapterF","BgzipFastaAdapterF","ChromSizesAdapterF","IndexedFastaAdapterF","SequenceSearchAdapterF","ReferenceSequenceTrackF","LinearReferenceSequenceDisplayF","createExtensionPoints","_ref$color","_ref$fontHeight","_ref$featureWidth","featureWidth","_ref$allowedWidthExpa","allowedWidthExpansion","_ref$displayModel","totalWidth","measuredTextWidth","viewLeft","labelVisible","setLabelVisible","rstart","featureWidthBp","offsetPx1","_rootLayout$getSubRec","_rootLayout$getSubRec2","_rootLayout$getSubRec3","_rootLayout$getSubRec4","rootLayout","shouldShowName","shouldShowDescription","featureLayout","getSubRecord","GlyphComponent","FeatureLabel","OverlayRect","rectProps","screenWidth","leftWithinBlock","widthWithinBlock","_ref2$displayModel","handlers","mouseoverFeatureId","reverseFlip","_featureLayout$absolu","_featureLayout$absolu2","_featureLayout$absolu3","_featureLayout$absolu4","_featureLayout$absolu5","color2","topLevel","isUTR","Arrow","_props$subfeatures","subfeatureId","subfeatureLayout","ProcessedTranscript","getSubparts","Segments","filterSubpart","confKey","makeSubpartsFilter","hasUTRs","isTranscript","subs","haveLeftUTR","haveRightUTR","subparts","codeStart","codeEnd","exons","makeUTRs","layOut","extraGlyphs","layOutFeature","layOutSubfeatures","Subfeatures","topOffset","SubfeatureGlyphComponent","chooseGlyphComponent","subfeatureHeight","move","_extraGlyphs$find","hasSubSub","validator","glyph","parentFeature","layoutParent","addChild","RenderedFeatureGlyph","detectRerender","labelAllowed","expansion","getWidth","glyphWidth","textWidth","aboveLayout","FeatureGlyph","RenderedFeatures","isFeatureDisplayed","featureDisplayHandler","_ref$current$getBound","featureIdCurrentlyUnderMouse","SvgOverlay","color1","color3","labels","nameColor","descriptionColor","subParts","impliedUTRs","SvgFeatureRenderer","SVGPlugin","_len2","_key2","SvgFeatureRendererReactComponent","svgFeatureRendererConfigSchema","GCContentPlugin","GCContentAdapterF","LinearGCContentDisplayF","MakeSpreadsheetColumnType","_ref$DataCellReactCom","DataCellReactComponent","_ref$FilterModelType","FilterModelType","compare","_ref$displayName","_ref$categoryName","categoryName","hasFilter","textFilterControlAdornment","textFilterControl","FilterReactComponent","filterModel","operationChoices","getPropertyMembers","operation","setOperation","locStringIsInvalid","setLocString","ClearIcon","OPERATIONS","OPERATION_PREDICATES","cellLocation","specifiedLocation","columnNumber","parsed","parsedLocString","spreadsheet","predicate","_sheet","cell","cellsWithDerived","extendedData","parsedCellText","locationLinkClick","_locationLinkClick","_columnNumber","_getParent","newViewId","cellA","cellB","compareLocs","contains","textInCell","stringToFind","equals","indexOf","setString","ColumnTextFilter","TextColumnType","NumberFilterModel","numberInCell","firstNumber","between","secondNumber","firstNumberIsInvalid","setFirstNumber","secondNumberIsInvalid","setSecondNumber","ColumnTypes","Text","LocString","LocRef","LocStart","LocEnd","allColumnTypes","AnyColumnType","AnyFilterModelType","columnType","CellModel","cells","isSelected","toggleSelect","unSelect","select","setExtendedData","columns","column","isDerived","StaticRowModel","isLoaded","RowModel","passingFiltersCount","sortedFilteredRows","selectedCount","selectedRows","selectedAndPassingFiltersCount","selectedFilteredRows","sortedRows","rowSortingComparisonFunction","sheet","filterControls","rowPassesFilters","unselectAll","ColumnDefinition","dataType","derivationFunctionText","rowSet","StaticRowSetModel","columnDisplayOrder","hasColumnNames","sortColumns","descending","switchDirection","defaultDataType","rowMenuPosition","hideRowSelection","dataTypeChoices","rowA","rowB","_self$sortColumns$i","setRowMenuPosition","newPosition","setSortColumns","newSort","setColumnType","newTypeName","IMPORT_SIZE_LIMIT","fileTypes","fileTypeParsers","CSV","parseCsvBuffer","TSV","parseTsvBuffer","VCF","parseVcfBuffer","BED","parseBedBuffer","BEDPE","parseBedPEBuffer","parseSTARFusionBuffer","fileTypesRegexp","fileType","hasColumnNameLine","columnNameLineNumber","selectedAssemblyName","fileSource","isReadyToOpen","canCancel","readyToDisplay","requiresUnzip","setSelectedAssemblyName","setFileSource","newSource","toggleHasColumnNameLine","setColumnNameLineNumber","newnumber","setFileType","cancelButton","import","typeParser","unzip","_getEnv","filehandle","stat","readFile","displaySpreadsheet","RowFullTextFilter","rowFullText","columnFilters","AnyColumnFilter","setRowFullTextFilter","addBlankColumnFilter","removeColumnFilter","clearAllFilters","defaultRowMenuItems","DoneIcon","_view","_spreadsheet$rowMenuP","rowNumber","hideFilterControls","FilterControlsModel","importWizard","ImportWizardModel","SpreadsheetModel","rowMenuItems","outputRows","_self$spreadsheet","setRowMenuItems","newItems","setImportMode","SpreadsheetViewPlugin","SpreadsheetViewF","_exts$pop","exts","ext","_exts$pop2","pop","LaunchSpreadsheetViewF","ViewComfyIcon","circularViewOptions","svInspector","circularViewOptionsBarHeight","item","control","onlyDisplayRelevantRegionsInCircularView","setOnlyDisplayRelevantRegionsInCircularView","resizeHandleVert","resizeHandleHoriz","viewControls","viewsContainer","SpreadsheetViewReactComponent","CircularViewReactComponent","showCircularView","spreadsheetView","ret1","circularView","flexbox","CircularViewOptions","makeAdHocFeature","columnsAlreadyUsedInLocations","loc1","loc2","otherData","makeAdHocSvFeature","columnTypes","columnDefinition","locationColumnNumbers","locStartColumnNumbers","locEndColumnNumbers","locRefColumnNumbers","makeAdHocSvFeatureFromTwoLocations","textOf","colno","makeAdHocSvFeatureFromTwoRefStartEndSets","getFeatureForRow","_row$extendedData","_row$extendedData2","vcfFeature","breakpointSplitViewSnapshotFromTableRow","svInspectorView","snapshotFromBreakendFeature","SpreadsheetViewType","CircularViewType","CircularModel","_spreadsheetView$outp","featuresAdapterConfigSnapshot","featureRefNames","refs","_r$INFO","featuresCircularTrackConfiguration","spreadsheetWidth","circularViewWidth","_asm$regions","refSet","reaction","generatedTrackConf","OpenInNewIcon","canOpenBreakpointSplitViewFromTableRow","openBreakpointSplitViewFromTableRow","defaultOnChordClick","chordTrack","SvInspectorViewPlugin","SvInspectorViewF","LaunchSvInspectorViewF","TableChartIcon","HicRenderer","_makeImageData","minBin","maxBin","_features$i","bin1","bin2","counts","_features$_i","_bin","_bin2","_counts","getResolution","rotate","_yield$getAdapter2","toPromise","hicLocation","HicPlugin","HicAdapterF","HicRendererF","HicTrackF","LinearHicDisplayF","decodeURIComponentNoThrow","decodeURIComponent","shorten","term","tidx","TrixTextSearchAdapter","trixJs","ixFilePath","ixxFilePath","Trix","strs","formatted","_result$map","record","_result$map2","labelFieldIdx","contextIdx","labelField","contextField","metaFilePath","trixAdapterConfigSchema","TrixTextSearchAdapterClass","LabeledRegionModel","RegionModel","setLabel","bookmarkedRegions","modelSelectedAssembly","importBookmarks","addBookmark","removeBookmark","clearAllBookmarks","updateBookmarkLabel","_self$bookmarkedRegio","setSelectedAssembly","selectedAssembly","GridBookmarkWidgetF","superRubberBandMenuItems","activateBookmarkWidget","bookmarkWidget","widgets","bookmarkCurrentRegion","firstRegion","BookmarksIcon","BookmarkIcon","SVG","Alignments","Authentication","Bed","CircularView","Config","DataManagement","DotplotView","Gff3","LegacyJBrowse","LinearComparativeView","Arc","Menus","RDF","Sequence","Variants","Wiggle","GCContent","SvInspectorPlugin","TrixPlugin","GridBookmarkPlugin","ComparativeAdapters"],"sourceRoot":""}