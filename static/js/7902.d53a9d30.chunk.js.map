{"version":3,"file":"static/js/7902.d53a9d30.chunk.js","mappings":"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","sources":["../../../packages/core/PluginLoader.ts","../../../packages/core/rpc/remoteAbortSignals.ts","../../../packages/core/ui/AssemblySelector.tsx","../../../packages/core/ui/CascadingMenu.tsx","../../../packages/core/ui/Dialog.tsx","../../../packages/core/ui/EditableTypography.tsx","../../../packages/core/ui/ErrorMessage.tsx","../../../packages/core/ui/FactoryResetDialog.tsx","../../../packages/core/ui/Icons.tsx","../../../packages/core/ui/Logo.tsx","../../../packages/core/ui/Menu.tsx","../../../packages/core/ui/ResizeHandle.tsx","../../../packages/core/ui/ReturnToImportFormDialog.tsx","../../../packages/core/ui/SanitizedHTML.tsx","../../../packages/core/ui/theme.ts","../../../packages/core/ui/FileSelector/FileSelector.tsx","../../../packages/core/ui/PrerenderedCanvas.tsx","../../../packages/core/ui/Tooltip.tsx","../../../packages/core/util/QuickLRU.js","../../../packages/core/util/index.ts","../../../packages/product-core/src/Session/BaseSession.ts","../../../packages/product-core/src/Session/Connections.ts","../../../plugins/data-management/src/index.ts","../../../packages/core/ui/Snackbar.tsx","../../../packages/core/ui/DropDownMenu.tsx","../../../packages/core/ui/AppLogo.tsx","../../../packages/app-core/src/ui/App/AppToolbar.tsx","../../../packages/app-core/src/ui/App/ViewLauncher.tsx","../../../packages/app-core/src/ui/App/ViewMenu.tsx","../../../packages/app-core/src/ui/App/ViewContainerTitle.tsx","../../../packages/app-core/src/ui/App/ViewContainer.tsx","../../../packages/app-core/src/ui/App/ViewPanel.tsx","../../../packages/app-core/src/ui/App/DialogQueue.tsx","../../../packages/app-core/src/ui/App/AppFab.tsx","../../../packages/app-core/src/ui/App/App.tsx","../../../packages/core/util/TimeTraveller.ts","../../../packages/core/rpc/baseRpcConfig.ts","../../../packages/core/rpc/webWorkerRpcConfig.ts","../../../packages/core/rpc/mainThreadRpcConfig.ts","../../../packages/core/rpc/configSchema.ts","../../../packages/core/rpc/BaseRpcDriver.ts","../../../packages/core/rpc/WebWorkerRpcDriver.ts","../../../packages/core/rpc/MainThreadRpcDriver.ts","../../../packages/core/rpc/RpcManager.ts","../../../packages/app-core/src/JBrowseModel/index.ts","../../../packages/app-core/src/JBrowseConfig/index.ts","../../../packages/product-core/src/RootModel/FormatDetails.ts","../../../packages/product-core/src/RootModel/FormatAbout.ts","../../../packages/product-core/src/RootModel/HierarchicalConfig.ts","components/ShareButton.tsx","components/JBrowse.tsx","SessionLoader.ts","components/NoConfigMessage.tsx","components/StartScreenErrorMessage.tsx","../../../packages/core/util/analytics.ts","../../../packages/core/assemblyManager/assemblyConfigSchema.ts","../../../packages/core/TextSearch/TextSearchManager.ts","makeWorkerInstance.ts","jbrowseModel.ts","../../../packages/core/assemblyManager/assembly.ts","../../../packages/core/assemblyManager/assemblyManager.ts","rootModel/rootModel.ts","../../../packages/product-core/src/RootModel/BaseRootModel.ts","../../../packages/product-core/src/RootModel/InternetAccounts.ts","../../../packages/app-core/src/HistoryManagement/index.ts","../../../packages/app-core/src/RootMenu/index.ts","../../../packages/core/ui/SnackbarModel.ts","../../../packages/product-core/src/Session/ReferenceManagement.ts","../../../packages/product-core/src/Session/DrawerWidgets.ts","../../../packages/product-core/src/Session/SessionTracks.ts","../../../packages/product-core/src/Session/Tracks.ts","../../../packages/web-core/src/BaseWebSession/index.ts","../../../packages/app-core/src/Assemblies/SessionAssembliesMixin.ts","../../../packages/product-core/src/Session/DialogQueue.ts","../../../packages/product-core/src/Session/Themes.ts","../../../packages/product-core/src/Session/MultipleViews.ts","../../../packages/app-core/src/Assemblies/TemporaryAssembliesMixin.ts","../../../packages/web-core/src/SessionConnections.ts","../../../packages/app-core/src/AppFocus/index.ts","sessionModel/index.ts","createPluginManager.ts","components/Loader.tsx","factoryReset.ts","sessionSharing.ts","util.ts"],"sourcesContent":["import domLoadScript from 'load-script'\n\n// locals\nimport Plugin, { PluginConstructor } from './Plugin'\nimport ReExports from './ReExports'\nimport { isElectron } from './util'\n\nexport interface UMDLocPluginDefinition {\n  umdLoc: {\n    uri: string\n    baseUri?: string\n  }\n  name: string\n}\n\nexport interface UMDUrlPluginDefinition {\n  umdUrl: string\n  name: string\n}\n\nexport interface LegacyUMDPluginDefinition {\n  url: string\n  name: string\n}\n\ntype UMDPluginDefinition = UMDLocPluginDefinition | UMDUrlPluginDefinition\n\nexport function isUMDPluginDefinition(\n  def: PluginDefinition,\n): def is UMDPluginDefinition | LegacyUMDPluginDefinition {\n  return (\n    ((def as UMDUrlPluginDefinition).umdUrl !== undefined ||\n      (def as LegacyUMDPluginDefinition).url !== undefined ||\n      (def as UMDLocPluginDefinition).umdLoc !== undefined) &&\n    (def as LegacyUMDPluginDefinition | UMDPluginDefinition).name !== undefined\n  )\n}\n\nexport interface ESMLocPluginDefinition {\n  esmLoc: { uri: string; baseUri?: string }\n}\nexport interface ESMUrlPluginDefinition {\n  esmUrl: string\n}\n\nexport type ESMPluginDefinition =\n  | ESMLocPluginDefinition\n  | ESMUrlPluginDefinition\n\nexport function isESMPluginDefinition(\n  def: PluginDefinition,\n): def is ESMPluginDefinition {\n  return (\n    (def as ESMUrlPluginDefinition).esmUrl !== undefined ||\n    (def as ESMLocPluginDefinition).esmLoc !== undefined\n  )\n}\n\nexport interface CJSPluginDefinition {\n  cjsUrl: string\n}\n\nfunction promisifiedLoadScript(src: string) {\n  return new Promise((resolve, reject) => {\n    domLoadScript(src, (err, script) => {\n      if (err) {\n        reject(err)\n      } else {\n        resolve(script.src)\n      }\n    })\n  })\n}\n\nasync function loadScript(scriptUrl: string) {\n  if (!isInWebWorker()) {\n    return promisifiedLoadScript(scriptUrl)\n  }\n\n  // @ts-expect-error\n  if (globalThis?.importScripts) {\n    // @ts-expect-error\n    await globalThis.importScripts(scriptUrl)\n    return\n  }\n  throw new Error(\n    'cannot figure out how to load external JS scripts in this environment',\n  )\n}\n\nexport function isCJSPluginDefinition(\n  def: PluginDefinition,\n): def is CJSPluginDefinition {\n  return (def as CJSPluginDefinition).cjsUrl !== undefined\n}\n\nexport interface PluginDefinition\n  extends Partial<UMDUrlPluginDefinition>,\n    Partial<UMDLocPluginDefinition>,\n    Partial<LegacyUMDPluginDefinition>,\n    Partial<ESMLocPluginDefinition>,\n    Partial<ESMUrlPluginDefinition>,\n    Partial<CJSPluginDefinition> {}\n\nexport interface PluginRecord {\n  plugin: PluginConstructor\n  definition: PluginDefinition\n}\n\nexport interface LoadedPlugin {\n  default: PluginConstructor\n}\n\nfunction pluginDescriptionString(pluginDefinition: PluginDefinition) {\n  if (isUMDPluginDefinition(pluginDefinition)) {\n    return `UMD plugin ${pluginDefinition.name}`\n  }\n  if (isESMPluginDefinition(pluginDefinition)) {\n    return `ESM plugin ${\n      (pluginDefinition as ESMUrlPluginDefinition).esmUrl ||\n      (pluginDefinition as ESMLocPluginDefinition).esmLoc?.uri\n    }`\n  }\n  if (isCJSPluginDefinition(pluginDefinition)) {\n    return `CJS plugin ${pluginDefinition.cjsUrl}`\n  }\n  return 'unknown plugin'\n}\n\nfunction isInWebWorker() {\n  return Boolean('WorkerGlobalScope' in globalThis)\n}\n\nexport default class PluginLoader {\n  definitions: PluginDefinition[] = []\n\n  fetchESM?: (url: string) => Promise<LoadedPlugin>\n  fetchCJS?: (url: string) => Promise<LoadedPlugin>\n\n  constructor(\n    defs: PluginDefinition[] = [],\n    args?: {\n      fetchESM?: (url: string) => Promise<LoadedPlugin>\n      fetchCJS?: (url: string) => Promise<LoadedPlugin>\n    },\n  ) {\n    this.fetchESM = args?.fetchESM\n    this.fetchCJS = args?.fetchCJS\n    this.definitions = JSON.parse(JSON.stringify(defs))\n  }\n\n  async loadCJSPlugin(def: CJSPluginDefinition, baseUri?: string) {\n    const parsedUrl = new URL(def.cjsUrl, baseUri)\n    if (parsedUrl.protocol !== 'http:' && parsedUrl.protocol !== 'https:') {\n      throw new Error(\n        `Cannot load plugins using protocol \"${parsedUrl.protocol}\"`,\n      )\n    }\n    if (!this.fetchCJS) {\n      throw new Error('No fetchCJS callback provided')\n    }\n\n    return this.fetchCJS(parsedUrl.href)\n  }\n\n  async loadESMPlugin(def: ESMPluginDefinition, baseUri?: string) {\n    const parsedUrl =\n      'esmUrl' in def\n        ? new URL(def.esmUrl, baseUri)\n        : new URL(def.esmLoc.uri, def.esmLoc.baseUri)\n\n    if (parsedUrl.protocol !== 'http:' && parsedUrl.protocol !== 'https:') {\n      throw new Error(\n        `cannot load plugins using protocol \"${parsedUrl.protocol}\"`,\n      )\n    }\n\n    if (!this.fetchESM) {\n      throw new Error(`No ESM fetcher installed`)\n    }\n    const plugin = await this.fetchESM(parsedUrl.href)\n\n    if (!plugin) {\n      throw new Error(`Could not load ESM plugin: ${parsedUrl}`)\n    }\n    return plugin\n  }\n\n  async loadUMDPlugin(\n    def: UMDPluginDefinition | LegacyUMDPluginDefinition,\n    baseUri?: string,\n  ) {\n    const parsedUrl =\n      'url' in def\n        ? new URL(def.url, baseUri)\n        : 'umdUrl' in def\n        ? new URL(def.umdUrl, baseUri)\n        : new URL(def.umdLoc.uri, def.umdLoc.baseUri)\n\n    if (parsedUrl.protocol !== 'http:' && parsedUrl.protocol !== 'https:') {\n      throw new Error(\n        `cannot load plugins using protocol \"${parsedUrl.protocol}\"`,\n      )\n    }\n    const moduleName = def.name\n    const umdName = `JBrowsePlugin${moduleName}`\n    if (typeof jest === 'undefined') {\n      await loadScript(parsedUrl.href)\n    } else {\n      // @ts-expect-error\n      globalThis[umdName] = { default: Plugin }\n    }\n\n    // @ts-expect-error\n    const plugin = globalThis[umdName] as\n      | { default: PluginConstructor }\n      | undefined\n    if (!plugin) {\n      throw new Error(\n        `Failed to load UMD bundle for ${moduleName}, ${umdName} is undefined`,\n      )\n    }\n    return plugin\n  }\n\n  async loadPlugin(def: PluginDefinition, baseUri?: string) {\n    let plugin: LoadedPlugin\n    if (isElectron && isCJSPluginDefinition(def)) {\n      plugin = await this.loadCJSPlugin(def, baseUri)\n    } else if (isESMPluginDefinition(def)) {\n      plugin = await this.loadESMPlugin(def, baseUri)\n    } else if (isUMDPluginDefinition(def)) {\n      plugin = await this.loadUMDPlugin(def, baseUri)\n    } else if (!isElectron && isCJSPluginDefinition(def)) {\n      throw new Error(\n        `CommonJS plugin found, but not in a NodeJS environment: ${JSON.stringify(\n          def,\n        )}`,\n      )\n    } else {\n      throw new Error(`Could not determine plugin type: ${JSON.stringify(def)}`)\n    }\n    if (!plugin.default) {\n      throw new Error(\n        `${pluginDescriptionString(\n          def,\n        )} does not have a default export, cannot load`,\n      )\n    }\n    return plugin.default\n  }\n\n  installGlobalReExports(target: WindowOrWorkerGlobalScope) {\n    // @ts-expect-error\n    target.JBrowseExports = Object.fromEntries(\n      Object.entries(ReExports).map(([moduleName, module]) => {\n        return [moduleName, module]\n      }),\n    )\n  }\n\n  async load(baseUri?: string) {\n    return Promise.all(\n      this.definitions.map(async definition => ({\n        plugin: await this.loadPlugin(definition, baseUri),\n        definition,\n      })),\n    )\n  }\n}\n","/* ---------------- for the RPC client ----------------- */\n\nlet abortSignalCounter = 0\nexport interface RemoteAbortSignal {\n  abortSignalId: number\n}\nconst abortSignalIds = new WeakMap<AbortSignal, number>() // map of abortsignal => numerical ID\n\n/**\n * assign an ID to the given abort signal and return a plain object\n * representation\n *\n * @param signal - the signal to serialize\n * @param callfunc - function used to call\n *  a remote method, will be called like callfunc('signalAbort', signalId)\n */\nexport function serializeAbortSignal(\n  signal: AbortSignal,\n  callfunc: (name: string, abortSignalId: number) => void,\n): RemoteAbortSignal {\n  let abortSignalId = abortSignalIds.get(signal)\n  if (!abortSignalId) {\n    abortSignalCounter += 1\n    abortSignalIds.set(signal, abortSignalCounter)\n    abortSignalId = abortSignalCounter\n    signal.addEventListener('abort', () => {\n      const signalId = abortSignalIds.get(signal)\n      if (signalId !== undefined) {\n        callfunc('signalAbort', signalId)\n      }\n    })\n  }\n  return { abortSignalId }\n}\n\n/* ---------------- for the RPC server ----------------- */\n\n/**\n * test whether a given object\n * @param thing - the thing to test\n * @returns true if the thing is a remote abort signal\n */\nexport function isRemoteAbortSignal(\n  thing: unknown,\n): thing is RemoteAbortSignal {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'abortSignalId' in thing &&\n    typeof thing.abortSignalId === 'number'\n  )\n}\n\n// the server side keeps a set of surrogate abort controllers that can be\n// aborted based on ID\nconst surrogateAbortControllers = new Map<number, AbortController>() // numerical ID => surrogate abort controller\n\n/**\n * deserialize the result of serializeAbortSignal into an AbortSignal\n *\n * @param signal -\n * @returns an abort signal that corresponds to the given ID\n */\nexport function deserializeAbortSignal({\n  abortSignalId,\n}: RemoteAbortSignal): AbortSignal {\n  let surrogateAbortController = surrogateAbortControllers.get(abortSignalId)\n  if (!surrogateAbortController) {\n    surrogateAbortController = new AbortController()\n    surrogateAbortControllers.set(abortSignalId, surrogateAbortController)\n  }\n  return surrogateAbortController.signal\n}\n\n/**\n * fire an abort signal from a remote abort signal ID\n *\n * @param abortSignalId -\n */\nexport function remoteAbort(props: { signalId: number }) {\n  const { signalId: abortSignalId } = props\n  const surrogateAbortController = surrogateAbortControllers.get(abortSignalId)\n\n  if (surrogateAbortController) {\n    surrogateAbortController.abort()\n  }\n}\n\nexport function remoteAbortRpcHandler() {\n  return {\n    signalAbort: remoteAbort,\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport {\n  TextField,\n  MenuItem,\n  InputProps as IIP,\n  TextFieldProps as TFP,\n} from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport { getConf } from '../configuration'\nimport { useLocalStorage, AbstractSessionModel } from '../util'\n\nconst useStyles = makeStyles()({\n  importFormEntry: {\n    minWidth: 180,\n  },\n})\n\nconst AssemblySelector = observer(function ({\n  session,\n  onChange,\n  selected,\n  InputProps,\n  TextFieldProps,\n  localStorageKey,\n  helperText = 'Select assembly to view',\n}: {\n  session: AbstractSessionModel\n  helperText?: string\n  onChange: (arg: string) => void\n  selected?: string\n  localStorageKey?: string\n  InputProps?: IIP\n  TextFieldProps?: TFP\n}) {\n  const { classes } = useStyles()\n  const { assemblyNames, assemblyManager } = session\n\n  // constructs a localstorage key based on host/path/config to help\n  // remember. non-config assists usage with e.g. embedded apps\n  const config = new URLSearchParams(window.location.search).get('config')\n  const [lastSelected, setLastSelected] =\n    typeof jest === 'undefined' && localStorageKey\n      ? useLocalStorage(\n          `lastAssembly-${[\n            window.location.host + window.location.pathname,\n            config,\n            localStorageKey,\n          ].join('-')}`,\n          selected,\n        )\n      : useState(selected)\n\n  const selection = assemblyNames.includes(lastSelected || '')\n    ? lastSelected\n    : selected\n\n  useEffect(() => {\n    if (selection && selection !== selected) {\n      onChange(selection)\n    }\n  }, [selection, onChange, selected])\n\n  const error = assemblyNames.length ? '' : 'No configured assemblies'\n  return (\n    <TextField\n      select\n      label=\"Assembly\"\n      variant=\"outlined\"\n      helperText={error || helperText}\n      value={selection || ''}\n      inputProps={{ 'data-testid': 'assembly-selector' }}\n      onChange={event => setLastSelected(event.target.value)}\n      error={!!error}\n      InputProps={InputProps}\n      disabled={!!error}\n      className={classes.importFormEntry}\n      {...TextFieldProps}\n    >\n      {assemblyNames.map(name => {\n        const assembly = assemblyManager.get(name)\n        const displayName = assembly ? getConf(assembly, 'displayName') : ''\n        return (\n          <MenuItem key={name} value={name}>\n            {displayName || name}\n          </MenuItem>\n        )\n      })}\n    </TextField>\n  )\n})\n\nexport default AssemblySelector\n","import React, { useContext, useMemo, useCallback } from 'react'\nimport {\n  Divider,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  Menu,\n  MenuItem,\n  PopoverOrigin,\n} from '@mui/material'\nimport { MenuItem as JBMenuItem, MenuItemEndDecoration } from './Menu'\nimport {\n  bindHover,\n  bindFocus,\n  bindMenu,\n  usePopupState,\n  PopupState,\n} from 'material-ui-popup-state/hooks'\nimport HoverMenu from 'material-ui-popup-state/HoverMenu'\nimport ChevronRight from '@mui/icons-material/ChevronRight'\n\nconst CascadingContext = React.createContext({\n  parentPopupState: null,\n  rootPopupState: null,\n} as { parentPopupState: PopupState | null; rootPopupState: PopupState | null })\n\nfunction CascadingMenuItem({\n  onClick,\n  ...props\n}: {\n  onClick?: Function\n  disabled?: boolean\n  children: React.ReactNode\n}) {\n  const { rootPopupState } = useContext(CascadingContext)\n  if (!rootPopupState) {\n    throw new Error('must be used inside a CascadingMenu')\n  }\n  const handleClick = useCallback(\n    (event: React.MouseEvent) => {\n      rootPopupState.close()\n      onClick?.(event)\n    },\n    [rootPopupState, onClick],\n  )\n\n  return <MenuItem {...props} onClick={handleClick} />\n}\n\nfunction CascadingSubmenu({\n  title,\n  inset,\n  popupId,\n  ...props\n}: {\n  children: React.ReactNode\n  title: string\n  onMenuItemClick: Function\n  menuItems: JBMenuItem[]\n  inset: boolean\n  popupId: string\n}) {\n  const { parentPopupState } = React.useContext(CascadingContext)\n  const popupState = usePopupState({\n    popupId,\n    variant: 'popover',\n    parentPopupState,\n  })\n  return (\n    <>\n      <MenuItem {...bindHover(popupState)} {...bindFocus(popupState)}>\n        <ListItemText primary={title} inset={inset} />\n        <ChevronRight />\n      </MenuItem>\n      <CascadingSubmenuHover\n        {...props}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'left' }}\n        popupState={popupState}\n      />\n    </>\n  )\n}\n\nfunction CascadingSubmenuHover({\n  popupState,\n  onMenuItemClick,\n  menuItems,\n  classes,\n  ...props\n}: {\n  classes?: Record<string, string>\n  popupState: PopupState\n  anchorOrigin: PopoverOrigin\n  transformOrigin: PopoverOrigin\n  onMenuItemClick: Function\n  menuItems: JBMenuItem[]\n}) {\n  const { rootPopupState } = useContext(CascadingContext)\n  const context = useMemo(\n    () => ({\n      rootPopupState: rootPopupState || popupState,\n      parentPopupState: popupState,\n    }),\n    [rootPopupState, popupState],\n  )\n\n  return (\n    <CascadingContext.Provider value={context}>\n      <HoverMenu {...props} {...bindMenu(popupState)} />\n    </CascadingContext.Provider>\n  )\n}\n\nfunction CascadingMenu({\n  popupState,\n  onMenuItemClick,\n  menuItems,\n  ...props\n}: {\n  popupState: PopupState\n  onMenuItemClick: Function\n  menuItems: JBMenuItem[]\n}) {\n  const { rootPopupState } = React.useContext(CascadingContext)\n  const context = React.useMemo(\n    () => ({\n      rootPopupState: rootPopupState || popupState,\n      parentPopupState: popupState,\n    }),\n    [rootPopupState, popupState],\n  )\n\n  return (\n    <CascadingContext.Provider value={context}>\n      <Menu {...props} {...bindMenu(popupState)} />\n    </CascadingContext.Provider>\n  )\n}\n\nfunction EndDecoration({ item }: { item: JBMenuItem }) {\n  if ('subMenu' in item) {\n    return <MenuItemEndDecoration type=\"subMenu\" />\n  } else if (item.type === 'checkbox' || item.type === 'radio') {\n    return (\n      <MenuItemEndDecoration\n        type={item.type}\n        checked={item.checked}\n        disabled={item.disabled}\n      />\n    )\n  }\n  return null\n}\n\nfunction CascadingMenuList({\n  onMenuItemClick,\n  menuItems,\n  ...props\n}: {\n  menuItems: JBMenuItem[]\n  onMenuItemClick: Function\n}) {\n  function handleClick(callback: Function) {\n    return (event: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\n      onMenuItemClick(event, callback)\n    }\n  }\n\n  const hasIcon = menuItems.some(\n    menuItem => 'icon' in menuItem && menuItem.icon,\n  )\n  return (\n    <>\n      {menuItems.map((item, idx) => {\n        return 'subMenu' in item ? (\n          <CascadingSubmenu\n            key={`subMenu-${item.label}-${idx}`}\n            popupId={`subMenu-${item.label}`}\n            title={item.label}\n            inset={hasIcon}\n            onMenuItemClick={onMenuItemClick}\n            menuItems={item.subMenu}\n          >\n            <CascadingMenuList\n              {...props}\n              onMenuItemClick={onMenuItemClick}\n              menuItems={item.subMenu}\n            />\n          </CascadingSubmenu>\n        ) : item.type === 'divider' ? (\n          <Divider key={`divider-${idx}`} component=\"li\" />\n        ) : item.type === 'subHeader' ? (\n          <ListSubheader key={`subHeader-${item.label}-${idx}`}>\n            {item.label}\n          </ListSubheader>\n        ) : (\n          <CascadingMenuItem\n            key={`${item.label}-${idx}`}\n            onClick={'onClick' in item ? handleClick(item.onClick) : undefined}\n            disabled={Boolean(item.disabled)}\n          >\n            {item.icon ? (\n              <ListItemIcon>\n                <item.icon />\n              </ListItemIcon>\n            ) : null}{' '}\n            <ListItemText\n              primary={item.label}\n              secondary={item.subLabel}\n              inset={hasIcon && !item.icon}\n            />\n            <div style={{ flexGrow: 1, minWidth: 10 }} />\n            <EndDecoration item={item} />\n          </CascadingMenuItem>\n        )\n      })}\n    </>\n  )\n}\n\nfunction CascadingMenuChildren(props: {\n  onMenuItemClick: Function\n  menuItems: JBMenuItem[]\n  popupState: PopupState\n}) {\n  return (\n    <CascadingMenu {...props}>\n      <CascadingMenuList {...props} />\n    </CascadingMenu>\n  )\n}\n\nexport default CascadingMenuChildren\n","import React from 'react'\nimport {\n  Dialog as MUIDialog,\n  DialogTitle,\n  DialogProps,\n  Divider,\n  IconButton,\n  ScopedCssBaseline,\n  ThemeProvider,\n  createTheme,\n  useTheme,\n} from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\nimport { ErrorBoundary } from 'react-error-boundary'\n\n// icons\nimport CloseIcon from '@mui/icons-material/Close'\n// locals\nimport ErrorMessage from './ErrorMessage'\n\nconst useStyles = makeStyles()(theme => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}))\n\nfunction DialogError({ error }: { error: unknown }) {\n  return (\n    <div style={{ width: 800, margin: 40 }}>\n      <ErrorMessage error={error} />\n    </div>\n  )\n}\n\ninterface Props extends DialogProps {\n  header?: React.ReactNode\n}\n\nconst Dialog = observer(function (props: Props) {\n  const { classes } = useStyles()\n  const { title, header, children, onClose } = props\n  const theme = useTheme()\n\n  return (\n    <MUIDialog {...props}>\n      <ScopedCssBaseline>\n        {React.isValidElement(header) ? (\n          <>{header}</>\n        ) : (\n          <DialogTitle>\n            {title}\n            {onClose ? (\n              <IconButton\n                className={classes.closeButton}\n                onClick={() => {\n                  // @ts-expect-error\n                  onClose()\n                }}\n              >\n                <CloseIcon />\n              </IconButton>\n            ) : null}\n          </DialogTitle>\n        )}\n        <Divider />\n\n        <ErrorBoundary FallbackComponent={DialogError}>\n          <ThemeProvider\n            theme={createTheme(theme, {\n              components: {\n                MuiInputBase: {\n                  styleOverrides: {\n                    input: {\n                      // xref https://github.com/GMOD/jbrowse-components/pull/3666\n                      boxSizing: 'content-box!important' as 'content-box',\n                    },\n                  },\n                },\n              },\n            })}\n          >\n            {children}\n          </ThemeProvider>\n        </ErrorBoundary>\n      </ScopedCssBaseline>\n    </MUIDialog>\n  )\n})\n\nexport default Dialog\n","import React, { useEffect, useState } from 'react'\nimport { InputBase, Typography, TypographyProps, useTheme } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport useMeasure from '@jbrowse/core/util/useMeasure'\n\ntype Variant = TypographyProps['variant']\n\ntype EditableTypographyClassKey =\n  | 'input'\n  | 'inputBase'\n  | 'inputRoot'\n  | 'inputFocused'\n\nconst useStyles = makeStyles()(theme => ({\n  input: {},\n  inputBase: {},\n  typography: {\n    top: 6,\n    left: 2,\n    position: 'absolute',\n    whiteSpace: 'nowrap',\n    visibility: 'hidden',\n  },\n  inputRoot: {\n    padding: theme.spacing(0.5),\n  },\n  inputFocused: {\n    borderStyle: 'solid',\n    borderWidth: 2,\n  },\n}))\n\ninterface Props {\n  value: string\n  setValue: (value: string) => void\n  variant: Variant\n  classes?: Partial<Record<EditableTypographyClassKey, string>>\n}\n\n// using forwardRef so that MUI Tooltip can wrap this component\nconst EditableTypography = React.forwardRef<HTMLDivElement, Props>(\n  function EditableTypography2(props, ref) {\n    const { value, setValue, variant, ...other } = props\n    const [ref2, { width }] = useMeasure()\n    const [editedValue, setEditedValue] = useState<string>()\n    const [inputNode, setInputNode] = useState<HTMLInputElement | null>(null)\n    const [blur, setBlur] = useState(false)\n\n    useEffect(() => {\n      if (blur) {\n        inputNode?.blur()\n        setBlur(false)\n      }\n    }, [blur, inputNode])\n\n    // possibly tss-react does not understand the passing of props to\n    // useStyles, but it appears to work\n    // @ts-expect-error\n    const { classes } = useStyles(props, { props })\n    const theme = useTheme()\n\n    const val = editedValue === undefined ? value : editedValue\n\n    return (\n      <div {...other} ref={ref}>\n        <div style={{ position: 'relative' }}>\n          <Typography\n            ref={ref2}\n            component=\"span\"\n            variant={variant}\n            className={classes.typography}\n          >\n            {val}\n          </Typography>\n        </div>\n        <InputBase\n          inputRef={node => setInputNode(node)}\n          className={classes.inputBase}\n          inputProps={{\n            style: {\n              width,\n              ...(variant && variant !== 'inherit'\n                ? theme.typography[variant]\n                : {}),\n            },\n          }}\n          classes={{\n            input: classes.input,\n            root: classes.inputRoot,\n            focused: classes.inputFocused,\n          }}\n          value={val}\n          onChange={event => setEditedValue(event.target.value)}\n          onKeyDown={event => {\n            if (event.key === 'Enter') {\n              inputNode?.blur()\n            } else if (event.key === 'Escape') {\n              setEditedValue(undefined)\n              setBlur(true)\n            }\n          }}\n          onBlur={() => {\n            setValue(editedValue || value || '')\n            setEditedValue(undefined)\n          }}\n        />\n      </div>\n    )\n  },\n)\n\nexport default EditableTypography\n","import React from 'react'\n\nfunction parseError(str: string) {\n  let snapshotError = ''\n  const findStr = 'is not assignable'\n  const idx = str.indexOf(findStr)\n  if (idx !== -1) {\n    const trim = str.slice(0, idx + findStr.length)\n    // best effort to make a better error message than the default\n    // mobx-state-tree\n\n    // case 1. element has a path\n    const match = trim.match(\n      /.*at path \"(.*)\" snapshot `(.*)` is not assignable/m,\n    )\n    if (match) {\n      str = `Failed to load element at ${match[1]}...Failed element had snapshot`\n      snapshotError = match[2]\n    }\n\n    // case 2. element has no path\n    const match2 = trim.match(/.*snapshot `(.*)` is not assignable/)\n    if (match2) {\n      str = `Failed to load element...Failed element had snapshot`\n      snapshotError = match2[1]\n    }\n  }\n  return snapshotError\n}\n\nconst ErrorMessage = ({ error }: { error: unknown }) => {\n  const str = `${error}`\n  const snapshotError = parseError(str)\n  return (\n    <div\n      style={{\n        padding: 4,\n        margin: 4,\n        overflow: 'auto',\n        maxHeight: 200,\n        background: '#f88',\n        border: '1px solid black',\n      }}\n    >\n      {str.slice(0, 10000)}\n      {snapshotError ? (\n        <pre\n          style={{\n            background: 'lightgrey',\n            border: '1px solid black',\n            margin: 20,\n          }}\n        >\n          {JSON.stringify(JSON.parse(snapshotError), null, 2)}\n        </pre>\n      ) : null}\n    </div>\n  )\n}\n\nexport default ErrorMessage\n","import React from 'react'\nimport {\n  Button,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n} from '@mui/material'\nimport Dialog from '@jbrowse/core/ui/Dialog'\n\nexport default function FactoryResetDialog({\n  onClose,\n  open,\n  onFactoryReset,\n}: {\n  onClose: () => void\n  open: boolean\n  onFactoryReset: Function\n}) {\n  function handleDialogClose(action?: string) {\n    if (action === 'reset') {\n      onFactoryReset()\n    }\n    onClose()\n  }\n\n  return (\n    <Dialog title=\"Reset\" onClose={() => handleDialogClose()} open={open}>\n      <DialogContent>\n        <DialogContentText>\n          Are you sure you want to reset? This will restore the default\n          configuration.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => handleDialogClose()} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={() => handleDialogClose('reset')}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import SvgIcon, { SvgIconProps } from '@mui/material/SvgIcon'\nimport React from 'react'\n\n// Icons below come from https://material.io/resources/icons/?icon=line_style&style=baseline\nexport function ContentCopy(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" />\n    </SvgIcon>\n  )\n}\n\n// https://materialdesignicons.com/ text-search icon\nexport function Indexing(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M19.31 18.9L22.39 22L21 23.39L17.88 20.32C17.19 20.75 16.37 21 15.5 21C13 21 11 19 11 16.5C11 14 13 12 15.5 12C18 12 20 14 20 16.5C20 17.38 19.75 18.21 19.31 18.9M15.5 19C16.88 19 18 17.88 18 16.5C18 15.12 16.88 14 15.5 14C14.12 14 13 15.12 13 16.5C13 17.88 14.12 19 15.5 19M21 4V6H3V4H21M3 16V14H9V16H3M3 11V9H21V11H18.97C17.96 10.37 16.77 10 15.5 10C14.23 10 13.04 10.37 12.03 11H3Z\" />\n    </SvgIcon>\n  )\n}\n\nexport function ContentCut(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M19,3L13,9L15,11L22,4V3M12,12.5A0.5,0.5 0 0,1 11.5,12A0.5,0.5 0 0,1 12,11.5A0.5,0.5 0 0,1 12.5,12A0.5,0.5 0 0,1 12,12.5M6,20A2,2 0 0,1 4,18C4,16.89 4.9,16 6,16A2,2 0 0,1 8,18C8,19.11 7.1,20 6,20M6,8A2,2 0 0,1 4,6C4,4.89 4.9,4 6,4A2,2 0 0,1 8,6C8,7.11 7.1,8 6,8M9.64,7.64C9.87,7.14 10,6.59 10,6A4,4 0 0,0 6,2A4,4 0 0,0 2,6A4,4 0 0,0 6,10C6.59,10 7.14,9.87 7.64,9.64L10,12L7.64,14.36C7.14,14.13 6.59,14 6,14A4,4 0 0,0 2,18A4,4 0 0,0 6,22A4,4 0 0,0 10,18C10,17.41 9.87,16.86 9.64,16.36L12,14L19,21H22V20L9.64,7.64Z\" />\n    </SvgIcon>\n  )\n}\n\nexport function ContentPaste(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M19,20H5V4H7V7H17V4H19M12,2A1,1 0 0,1 13,3A1,1 0 0,1 12,4A1,1 0 0,1 11,3A1,1 0 0,1 12,2M19,2H14.82C14.4,0.84 13.3,0 12,0C10.7,0 9.6,0.84 9.18,2H5A2,2 0 0,0 3,4V20A2,2 0 0,0 5,22H19A2,2 0 0,0 21,20V4A2,2 0 0,0 19,2Z\" />\n    </SvgIcon>\n  )\n}\n\n//  format-list-checkbox from https://materialdesignicons.com/\nexport function TrackSelector(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M21 19v-2H8v2h13m0-6v-2H8v2h13M8 7h13V5H8v2M4 5v2h2V5H4M3 5a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V5m1 6v2h2v-2H4m-1 0a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1v-2m1 6v2h2v-2H4m-1 0a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1v-2z\" />\n    </SvgIcon>\n  )\n}\n\n//  content-save-edit from https://materialdesignicons.com/\nexport function SaveAs(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M10,19L10.14,18.86C8.9,18.5 8,17.36 8,16A3,3 0 0,1 11,13C12.36,13 13.5,13.9 13.86,15.14L20,9V7L16,3H4C2.89,3 2,3.9 2,5V19A2,2 0 0,0 4,21H10V19M4,5H14V9H4V5M20.04,12.13C19.9,12.13 19.76,12.19 19.65,12.3L18.65,13.3L20.7,15.35L21.7,14.35C21.92,14.14 21.92,13.79 21.7,13.58L20.42,12.3C20.31,12.19 20.18,12.13 20.04,12.13M18.07,13.88L12,19.94V22H14.06L20.12,15.93L18.07,13.88Z\"\n      />\n    </SvgIcon>\n  )\n}\n\n//  content-save from https://materialdesignicons.com/\nexport function Save(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M15,9H5V5H15M12,19A3,3 0 0,1 9,16A3,3 0 0,1 12,13A3,3 0 0,1 15,16A3,3 0 0,1 12,19M17,3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V7L17,3Z\"\n      />\n    </SvgIcon>\n  )\n}\n\n//  dna from https://materialdesignicons.com/\nexport function DNA(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M4,2H6V4C6,5.44 6.68,6.61 7.88,7.78C8.74,8.61 9.89,9.41 11.09,10.2L9.26,11.39C8.27,10.72 7.31,10 6.5,9.21C5.07,7.82 4,6.1 4,4V2M18,2H20V4C20,6.1 18.93,7.82 17.5,9.21C16.09,10.59 14.29,11.73 12.54,12.84C10.79,13.96 9.09,15.05 7.88,16.22C6.68,17.39 6,18.56 6,20V22H4V20C4,17.9 5.07,16.18 6.5,14.79C7.91,13.41 9.71,12.27 11.46,11.16C13.21,10.04 14.91,8.95 16.12,7.78C17.32,6.61 18,5.44 18,4V2M14.74,12.61C15.73,13.28 16.69,14 17.5,14.79C18.93,16.18 20,17.9 20,20V22H18V20C18,18.56 17.32,17.39 16.12,16.22C15.26,15.39 14.11,14.59 12.91,13.8L14.74,12.61M7,3H17V4L16.94,4.5H7.06L7,4V3M7.68,6H16.32C16.08,6.34 15.8,6.69 15.42,7.06L14.91,7.5H9.07L8.58,7.06C8.2,6.69 7.92,6.34 7.68,6M9.09,16.5H14.93L15.42,16.94C15.8,17.31 16.08,17.66 16.32,18H7.68C7.92,17.66 8.2,17.31 8.58,16.94L9.09,16.5M7.06,19.5H16.94L17,20V21H7V20L7.06,19.5Z\"\n      />\n    </SvgIcon>\n  )\n}\n\nexport function Cable(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M20 5V4c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1v1h-1v4c0 .55.45 1 1 1h1v7c0 1.1-.9 2-2 2s-2-.9-2-2V7c0-2.21-1.79-4-4-4S5 4.79 5 7v7H4c-.55 0-1 .45-1 1v4h1v1c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-1h1v-4c0-.55-.45-1-1-1H7V7c0-1.1.9-2 2-2s2 .9 2 2v10c0 2.21 1.79 4 4 4s4-1.79 4-4v-7h1c.55 0 1-.45 1-1V5h-1z\" />\n    </SvgIcon>\n  )\n}\n","import React from 'react'\n\ntype LogoVariant = 'color' | 'black' | 'white'\n\ninterface LogoProps {\n  variant?: LogoVariant\n}\n\nfunction getColors(variant?: LogoVariant) {\n  if (variant === 'black') {\n    return {\n      midnight: '#808080',\n      forrest: '#666666',\n      grape: '#4d4d4d',\n      mandarin: '#333333',\n      gray: '#1a1a1a',\n    }\n  }\n  if (variant === 'white') {\n    return {\n      midnight: '#ffffff',\n      forrest: '#e6e6e6',\n      grape: '#cccccc',\n      mandarin: '#b3b3b3',\n      gray: '#999999',\n    }\n  }\n  return {\n    midnight: '#0d233f',\n    forrest: '#135560',\n    grape: '#721e63',\n    mandarin: '#ffb11d',\n    gray: '#dadada',\n  }\n}\n\nexport function Logomark({ variant }: LogoProps) {\n  return (\n    <svg viewBox=\"0 0 175 175\">\n      <Icon variant={variant} />\n    </svg>\n  )\n}\n\nexport function LogoFull({ variant }: LogoProps) {\n  return (\n    <svg viewBox=\"0 0 641 175\">\n      <Text variant={variant} />\n      <Icon variant={variant} />\n    </svg>\n  )\n}\n\nfunction Icon({ variant }: LogoProps) {\n  const colors = getColors(variant)\n  return (\n    <>\n      <path\n        style={{ fill: colors.midnight }}\n        d=\"M120.5,57.5c.168,0,.333.012.5.013V40.506c-.167,0-.333-.006-.5-.006a98.325,98.325,0,0,0-77.4,37.565q-2.664,3.378-5.023,6.994l14.206,9.327Q54.043,91.709,56,89.179A81.363,81.363,0,0,1,120.5,57.5Z\"\n      />\n      <path\n        style={{ fill: colors.forrest }}\n        d=\"M148.668,86.223c.308.133.6.283.908.42l6.746-15.618c-.153-.067-.3-.143-.454-.21a81.36,81.36,0,0,0-71.777,3.5q-2.8,1.544-5.469,3.309l9.249,14.054A63.93,63.93,0,0,1,148.668,86.223Z\"\n      />\n      <path\n        style={{ fill: colors.grape }}\n        d=\"M170.894,109.37A63.929,63.929,0,0,0,113.4,88.861l2.336,15.474a48.456,48.456,0,0,1,44.322,15.42c.111.125.214.255.324.381l11.16-10C171.323,109.879,171.118,109.62,170.894,109.37Z\"\n      />\n      <path\n        style={{ fill: colors.mandarin }}\n        d=\"M150.921,150.314c.04.163.07.326.107.489l16.509-4.058c-.039-.163-.067-.326-.107-.489A48.457,48.457,0,0,0,135.575,111.8l-5.515,15.591A32.466,32.466,0,0,1,150.921,150.314Z\"\n      />\n      <path\n        style={{ fill: colors.gray }}\n        d=\"M134.1,138.129l-9.779,13.213a32.486,32.486,0,0,1,7.823,14.463l15.147.852c.012-.166.032-.331.041-.5A32.464,32.464,0,0,0,134.1,138.129Z\"\n      />\n    </>\n  )\n}\n\nfunction Text({ variant }: LogoProps) {\n  const colors = getColors(variant)\n  return (\n    <g\n      aria-label=\"JBrowse\"\n      transform=\"translate(213.084 144.241)\"\n      style={{ fill: colors.midnight }}\n    >\n      <path d=\"m 26.355,-71.505 v 54.075 2.835 q 0,6.825 -0.42,10.185 -0.735,5.67 -2.835,9.135 -3.255,5.355 -8.505,8.4 -4.83,2.73 -11.55,3.57 L 1.47,11.76 Q 7.35,10.185 9.24,4.2 10.605,-0.105 10.605,-9.975 v -5.565 -55.965 q 1.785,0 4.62,0.315 2.835,0.21 3.255,0.21 1.785,0 2.94,-0.105 4.515,-0.42 4.935,-0.42 z\" />\n      <path d=\"m 60.68836,-65.415 v 24.78 h 3.255 q 2.94,0 4.935,-0.525 2.1,-0.525 3.885,-2.1 2.31,-1.995 3.36,-4.83 1.155,-2.835 1.155,-6.09 0,-5.565 -2.94,-8.61 -2.94,-3.045 -8.295,-3.045 -2.52,0 -5.355,0.42 z m 0,30.87 V -6.09 h 5.25 q 4.725,0 8.505,-3.675 3.885,-3.78 3.885,-10.08 0,-8.19 -4.62,-11.655 -4.095,-3.045 -13.02,-3.045 z M 44.93836,0 v -71.505 h 27.09 q 9.135,0 14.385,3.255 6.51,3.99 6.51,12.6 0,7.035 -5.25,11.655 -4.62,4.095 -11.97,5.145 v 0.945 q 7.56,0.735 12.285,3.99 6.615,4.62 6.615,13.335 0,10.185 -7.98,15.75 -6.93,4.83 -17.43,4.83 z\" />\n      <path d=\"M 109.44281,0.525 V -50.4 q 1.785,0.21 3.99,0.42 2.31,0.105 3.255,0.105 2.31,0 4.2,-0.21 1.89,-0.21 3.045,-0.315 v 13.02 q 1.89,-6.51 5.46,-9.87 4.41,-4.095 11.655,-4.095 -0.315,2.73 -0.42,6.825 -0.105,3.99 -0.105,7.455 l -0.945,0.84 q -0.945,-0.735 -2.415,-1.05 -1.47,-0.315 -2.94,-0.315 -3.57,0 -6.195,1.89 -2.52,1.785 -3.465,5.04 -0.42,1.155 -0.525,3.15 -0.105,1.89 -0.105,4.515 v 4.515 19.005 q -1.785,-0.21 -2.625,-0.21 -3.675,-0.315 -4.62,-0.315 -2.31,0 -4.2,0.21 -1.89,0.21 -3.045,0.315 z\" />\n      <path d=\"m 173.77337,1.47 q -11.655,0 -18.585,-6.825 -6.93,-6.825 -6.93,-18.48 0,-12.6 6.72,-20.055 6.825,-7.455 18.9,-7.455 11.97,0 18.9,6.72 6.93,6.72 6.93,18.48 0,12.285 -6.72,19.74 -7.14,7.875 -19.215,7.875 z m 0.735,-48.09 q -5.88,0 -8.505,6.51 -2.205,5.565 -2.205,15.96 0,8.19 1.47,12.915 2.415,7.98 8.505,7.98 5.565,0 8.19,-7.875 2.205,-6.51 2.205,-16.695 0,-8.505 -2.1,-13.23 -2.52,-5.565 -7.56,-5.565 z\" />\n      <path d=\"m 222.03563,-50.4 10.5,36.015 q 3.675,-11.235 5.67,-17.85 2.415,-8.085 5.04,-18.165 1.05,0.105 3.045,0.315 2.1,0.21 2.835,0.21 1.995,0 3.15,-0.105 1.26,-0.21 2.73,-0.42 l 10.71,36.015 q 5.88,-17.43 10.71,-36.015 l 4.2,0.315 4.095,-0.315 q -5.145,13.125 -9.135,24.57 -5.04,14.28 -8.505,26.355 -1.89,-0.21 -3.36,-0.42 -1.365,-0.105 -2.205,-0.105 -1.89,0 -3.36,0.21 -1.365,0.21 -2.31,0.315 l -10.605,-34.755 q -4.41,13.65 -6.72,21.105 -2.31,7.35 -4.095,13.65 -1.89,-0.21 -3.36,-0.42 -1.365,-0.105 -2.31,-0.105 -1.995,0 -3.465,0.21 -1.365,0.21 -2.31,0.315 -3.78,-12.81 -5.04,-17.01 -2.205,-7.245 -5.46,-17.01 -2.835,-8.4 -5.88,-16.905 1.575,0 4.305,0.315 2.73,0.21 3.36,0.21 1.47,0 4.305,-0.21 2.835,-0.315 3.465,-0.315 z\" />\n      <path d=\"m 292.84172,-12.81 h 2.625 q 1.47,4.095 4.62,6.51 3.15,2.415 7.35,2.415 2.94,0 5.46,-1.785 2.625,-1.89 2.625,-4.62 0,-3.885 -6.195,-6.615 -10.395,-4.62 -11.655,-5.46 -6.405,-4.515 -6.405,-12.285 0,-7.77 5.25,-12.18 5.25,-4.515 12.81,-4.515 3.99,0 8.085,1.365 4.095,1.26 7.14,3.57 l -2.52,9.24 h -2.94 q -0.63,-3.57 -3.57,-6.195 -2.835,-2.625 -6.405,-2.625 -3.15,0 -5.46,1.575 -2.31,1.47 -2.31,4.515 0,3.885 6.405,6.51 10.185,4.095 11.865,5.25 6.405,4.41 6.405,12.81 0,7.455 -5.46,12.18 -5.355,4.62 -14.805,4.62 -8.19,0 -14.49,-4.305 z\" />\n      <path d=\"m 349.61228,-29.925 h 15.54 q 0,-6.51 -1.05,-10.395 -1.68,-6.3 -5.88,-6.3 -5.04,0 -7.14,6.195 -1.47,4.305 -1.47,10.5 z m 30.03,5.04 h -30.03 q 0,9.135 3.045,13.86 3.57,5.67 11.55,5.67 3.255,0 6.405,-1.26 3.15,-1.26 5.88,-3.465 l 1.26,0.945 -2.31,5.88 q -6.72,4.725 -15.015,4.725 -12.915,0 -19.635,-7.245 -6.72,-7.245 -6.72,-20.37 0,-11.235 6.405,-18.165 6.51,-7.035 17.64,-7.035 11.655,0 16.905,7.56 4.62,6.615 4.62,18.9 z\" />\n    </g>\n  )\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport {\n  Divider,\n  Grow,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  MenuProps as MUIMenuProps,\n  MenuItem as MUIMenuItem,\n  MenuItemProps,\n  MenuList,\n  Paper,\n  Popover,\n  PopoverProps,\n  SvgIconProps,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n// icons\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight'\nimport CheckBoxIcon from '@mui/icons-material/CheckBox'\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank'\nimport RadioButtonCheckedIcon from '@mui/icons-material/RadioButtonChecked'\nimport RadioButtonUncheckedIcon from '@mui/icons-material/RadioButtonUnchecked'\n\n// other\nimport { findLastIndex } from '../util'\n\nconst useStyles = makeStyles()({\n  paper: {\n    position: 'fixed',\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    // So we see the popover when it's empty.\n    minWidth: 16,\n    minHeight: 16,\n    maxWidth: 'calc(100% - 32px)',\n    maxHeight: 'calc(100% - 32px)',\n    top: 0,\n    left: 0,\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n  },\n  menuItemEndDecoration: {\n    padding: 0,\n    margin: 0,\n    height: 16,\n  },\n})\n\ninterface MenuItemEndDecorationSubMenuProps {\n  type: 'subMenu'\n}\n\ninterface MenuItemEndDecorationSelectorProps {\n  type: 'checkbox' | 'radio'\n  checked: boolean\n  disabled?: boolean\n}\n\ntype MenuItemEndDecorationProps =\n  | MenuItemEndDecorationSubMenuProps\n  | MenuItemEndDecorationSelectorProps\n\nexport function MenuItemEndDecoration(props: MenuItemEndDecorationProps) {\n  const { classes } = useStyles()\n  const { type } = props\n  let checked\n  let disabled\n  if ('checked' in props) {\n    ;({ checked, disabled } = props)\n  }\n  let icon\n  switch (type) {\n    case 'subMenu': {\n      icon = <ArrowRightIcon color=\"action\" />\n      break\n    }\n    case 'checkbox': {\n      if (checked) {\n        const color = disabled ? 'inherit' : undefined\n        icon = <CheckBoxIcon color={color} />\n      } else {\n        icon = <CheckBoxOutlineBlankIcon color=\"action\" />\n      }\n      break\n    }\n    case 'radio': {\n      if (checked) {\n        const color = disabled ? 'inherit' : undefined\n        icon = <RadioButtonCheckedIcon color={color} />\n      } else {\n        icon = <RadioButtonUncheckedIcon color=\"action\" />\n      }\n      break\n    }\n    // No default\n  }\n  return <div className={classes.menuItemEndDecoration}>{icon}</div>\n}\n\nexport interface MenuDivider {\n  priority?: number\n  type: 'divider'\n}\n\nexport interface MenuSubHeader {\n  type: 'subHeader'\n  priority?: number\n  label: string\n}\n\nexport interface BaseMenuItem {\n  label: string\n  priority?: number\n  subLabel?: string\n  icon?: React.ComponentType<SvgIconProps>\n  disabled?: boolean\n}\n\nexport interface NormalMenuItem extends BaseMenuItem {\n  type?: 'normal'\n  onClick: Function\n}\n\nexport interface CheckboxMenuItem extends BaseMenuItem {\n  type: 'checkbox'\n  checked: boolean\n  onClick: Function\n}\n\nexport interface RadioMenuItem extends BaseMenuItem {\n  type: 'radio'\n  checked: boolean\n  onClick: Function\n}\n\nexport interface SubMenuItem extends BaseMenuItem {\n  type?: 'subMenu'\n  subMenu: MenuItem[]\n}\n\nexport type MenuItem =\n  | MenuDivider\n  | MenuSubHeader\n  | NormalMenuItem\n  | CheckboxMenuItem\n  | RadioMenuItem\n  | SubMenuItem\n\ntype AnchorElProp = MUIMenuProps['anchorEl']\ntype OpenProp = MUIMenuProps['open']\ntype OnCloseProp = MUIMenuProps['onClose']\n\ninterface MenuPageProps {\n  menuItems: MenuItem[]\n  onMenuItemClick: (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    callback: Function,\n  ) => void\n  anchorEl?: AnchorElProp\n  open: OpenProp\n  onClose: OnCloseProp\n  top?: boolean\n}\n\ntype MenuItemStyleProp = MenuItemProps['style']\n\nfunction findNextValidIdx(menuItems: MenuItem[], currentIdx: number) {\n  const idx = menuItems\n    .slice(currentIdx + 1)\n    .findIndex(\n      menuItem =>\n        menuItem.type !== 'divider' &&\n        menuItem.type !== 'subHeader' &&\n        !menuItem.disabled,\n    )\n  if (idx === -1) {\n    return idx\n  }\n  return currentIdx + 1 + idx\n}\n\nfunction findPreviousValidIdx(menuItems: MenuItem[], currentIdx: number) {\n  return findLastIndex(\n    menuItems.slice(0, currentIdx),\n    menuItem =>\n      menuItem.type !== 'divider' &&\n      menuItem.type !== 'subHeader' &&\n      !menuItem.disabled,\n  )\n}\n\nconst MenuPage = React.forwardRef<HTMLDivElement, MenuPageProps>(\n  function MenuPage2(props, ref) {\n    const [subMenuAnchorEl, setSubMenuAnchorEl] = useState<HTMLElement>()\n    const [openSubMenuIdx, setOpenSubMenuIdx] = useState<number>()\n    const [isSubMenuOpen, setIsSubMenuOpen] = useState(false)\n    const [selectedMenuItemIdx, setSelectedMenuItemIdx] = useState<number>()\n    const [position, setPosition] = useState<{\n      top?: number\n      left?: number\n    }>()\n    const paperRef = useRef<HTMLDivElement | null>(null)\n    const { classes } = useStyles()\n\n    const {\n      menuItems,\n      onMenuItemClick,\n      open,\n      onClose,\n      anchorEl,\n      top = false,\n    } = props\n\n    useEffect(() => {\n      if (!open) {\n        setSubMenuAnchorEl(undefined)\n        setOpenSubMenuIdx(undefined)\n      }\n    }, [open])\n\n    useEffect(() => {\n      const shouldSubMenuBeOpen = open && Boolean(subMenuAnchorEl)\n      let timer: ReturnType<typeof setTimeout>\n      if (shouldSubMenuBeOpen && !isSubMenuOpen) {\n        timer = setTimeout(() => {\n          setIsSubMenuOpen(true)\n        }, 300)\n      } else if (!shouldSubMenuBeOpen && isSubMenuOpen) {\n        timer = setTimeout(() => {\n          setIsSubMenuOpen(false)\n        }, 300)\n      }\n      return () => {\n        clearTimeout(timer)\n      }\n    }, [isSubMenuOpen, open, subMenuAnchorEl])\n\n    useEffect(() => {\n      if (anchorEl) {\n        const rect = (anchorEl as HTMLElement).getBoundingClientRect()\n        if (position) {\n          if (\n            rect.top !== position.top ||\n            rect.left + rect.width !== position.left\n          ) {\n            setPosition({ top: rect.top, left: rect.left + rect.width })\n          }\n        } else {\n          setPosition({ top: rect.top, left: rect.left + rect.width })\n        }\n      } else if (!position) {\n        setPosition({})\n      }\n    }, [position, anchorEl])\n\n    const hasIcon = menuItems.some(\n      menuItem => 'icon' in menuItem && menuItem.icon,\n    )\n    const menuItemStyle: MenuItemStyleProp = {}\n\n    function handleClick(callback: Function) {\n      return (event: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\n        onMenuItemClick(event, callback)\n      }\n    }\n\n    const ListContents = (\n      <>\n        <MenuList autoFocusItem={open && !isSubMenuOpen} dense>\n          {menuItems\n            .sort((a, b) => (b.priority || 0) - (a.priority || 0))\n            .map((menuItem, idx) => {\n              if (menuItem.type === 'divider') {\n                return <Divider key={`divider-${idx}`} component=\"li\" />\n              }\n              if (menuItem.type === 'subHeader') {\n                return (\n                  <ListSubheader key={`subHeader-${menuItem.label}-${idx}`}>\n                    {menuItem.label}\n                  </ListSubheader>\n                )\n              }\n              let icon = null\n              let endDecoration = null\n              if (menuItem.icon) {\n                const Icon = menuItem.icon\n                icon = (\n                  <ListItemIcon>\n                    <Icon />\n                  </ListItemIcon>\n                )\n              }\n              if ('subMenu' in menuItem) {\n                endDecoration = <MenuItemEndDecoration type=\"subMenu\" />\n              } else if (\n                menuItem.type === 'checkbox' ||\n                menuItem.type === 'radio'\n              ) {\n                endDecoration = (\n                  <MenuItemEndDecoration\n                    type={menuItem.type}\n                    checked={menuItem.checked}\n                    disabled={menuItem.disabled}\n                  />\n                )\n              }\n              const onClick =\n                'onClick' in menuItem\n                  ? handleClick(menuItem.onClick)\n                  : undefined\n              return (\n                <MUIMenuItem\n                  key={menuItem.label}\n                  style={menuItemStyle}\n                  selected={idx === selectedMenuItemIdx}\n                  onClick={onClick}\n                  onMouseMove={e => {\n                    if (e.currentTarget !== document.activeElement) {\n                      e.currentTarget.focus()\n                      setSelectedMenuItemIdx(idx)\n                    }\n                    if ('subMenu' in menuItem) {\n                      if (openSubMenuIdx !== idx) {\n                        setSubMenuAnchorEl(e.currentTarget)\n                        setOpenSubMenuIdx(idx)\n                      }\n                    } else {\n                      setSubMenuAnchorEl(undefined)\n                      setOpenSubMenuIdx(undefined)\n                    }\n                  }}\n                  onKeyDown={e => {\n                    switch (e.key) {\n                      case 'ArrowLeft':\n                      case 'Escape': {\n                        onClose && onClose(e, 'escapeKeyDown')\n\n                        break\n                      }\n                      case 'ArrowUp': {\n                        setSelectedMenuItemIdx(\n                          findPreviousValidIdx(menuItems, idx),\n                        )\n\n                        break\n                      }\n                      case 'ArrowDown': {\n                        const a = findNextValidIdx(menuItems, idx)\n                        setSelectedMenuItemIdx(a)\n\n                        break\n                      }\n                      default: {\n                        if (\n                          'subMenu' in menuItem &&\n                          (e.key === 'ArrowRight' || e.key === 'Enter')\n                        ) {\n                          setSubMenuAnchorEl(e.currentTarget)\n                          setOpenSubMenuIdx(idx)\n                          setIsSubMenuOpen(true)\n                        }\n                      }\n                    }\n                  }}\n                  disabled={Boolean(menuItem.disabled)}\n                >\n                  {icon}\n                  <ListItemText\n                    primary={menuItem.label}\n                    secondary={menuItem.subLabel}\n                    inset={hasIcon && !menuItem.icon}\n                  />\n                  {endDecoration}\n                </MUIMenuItem>\n              )\n            })}\n        </MenuList>\n        {menuItems.map((menuItem, idx) => {\n          let subMenu = null\n          if ('subMenu' in menuItem) {\n            subMenu = (\n              <MenuPage\n                key={menuItem.label}\n                anchorEl={subMenuAnchorEl}\n                open={isSubMenuOpen && openSubMenuIdx === idx}\n                onClose={() => {\n                  setIsSubMenuOpen(false)\n                  setSubMenuAnchorEl(undefined)\n                }}\n                onMenuItemClick={onMenuItemClick}\n                menuItems={menuItem.subMenu}\n              />\n            )\n          }\n          return subMenu\n        })}\n      </>\n    )\n\n    return top ? (\n      ListContents\n    ) : (\n      <Grow in={open} style={{ transformOrigin: `0 0 0` }} ref={ref}>\n        <Paper\n          elevation={8}\n          ref={paperRef}\n          className={classes.paper}\n          style={{ ...position }}\n        >\n          {ListContents}\n        </Paper>\n      </Grow>\n    )\n  },\n)\n\ninterface MenuProps extends PopoverProps {\n  menuItems: MenuItem[]\n  onMenuItemClick: (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    callback: Function,\n  ) => void\n}\n\nfunction Menu(props: MenuProps) {\n  const { open, onClose, menuItems, onMenuItemClick, ...other } = props\n\n  return (\n    <Popover\n      open={open}\n      onClose={onClose}\n      BackdropProps={{ invisible: true }}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'right',\n        ...other.anchorOrigin,\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'left',\n        ...other.transformOrigin,\n      }}\n      {...other}\n    >\n      <MenuPage\n        open={open}\n        onClose={onClose}\n        menuItems={menuItems}\n        onMenuItemClick={onMenuItemClick}\n        top\n      />\n    </Popover>\n  )\n}\n\nexport default Menu\n","import React, { useEffect, useState, useRef } from 'react'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()({\n  horizontalHandle: {\n    cursor: 'row-resize',\n    width: '100%',\n  },\n  verticalHandle: {\n    cursor: 'col-resize',\n    height: '100%',\n  },\n  flexbox_verticalHandle: {\n    cursor: 'col-resize',\n    alignSelf: 'stretch', // the height: 100% is actually unable to function inside flexbox\n  },\n  flexbox_horizontalHandle: {\n    cursor: 'row-resize',\n    alignSelf: 'stretch', // similar to above\n  },\n})\n\nfunction ResizeHandle({\n  onDrag,\n  vertical = false,\n  flexbox = false,\n  className: originalClassName,\n  onMouseDown,\n  ...props\n}: {\n  onDrag: (lastFrameDistance: number, totalDistance: number) => number | void\n  onMouseDown?: (event: React.MouseEvent) => void\n  vertical?: boolean\n  flexbox?: boolean\n  className?: string\n  [props: string]: unknown\n}) {\n  const [mouseDragging, setMouseDragging] = useState(false)\n  const initialPosition = useRef(0)\n  const prevPos = useRef(0)\n  const { classes, cx } = useStyles()\n\n  useEffect(() => {\n    function mouseMove(event: MouseEvent) {\n      event.preventDefault()\n      const pos = vertical ? event.clientX : event.clientY\n      const totalDistance = initialPosition.current - pos\n      const lastFrameDistance = pos - prevPos.current\n      prevPos.current = pos\n      onDrag(lastFrameDistance, totalDistance)\n    }\n\n    function mouseUp() {\n      setMouseDragging(false)\n    }\n    if (mouseDragging) {\n      window.addEventListener('mousemove', mouseMove, true)\n      window.addEventListener('mouseup', mouseUp, true)\n      return () => {\n        window.removeEventListener('mousemove', mouseMove, true)\n        window.removeEventListener('mouseup', mouseUp, true)\n      }\n    }\n    return () => {}\n  }, [mouseDragging, onDrag, vertical])\n\n  let className\n  if (flexbox) {\n    className = vertical\n      ? classes.flexbox_verticalHandle\n      : classes.flexbox_horizontalHandle\n  } else if (vertical) {\n    className = classes.verticalHandle\n  } else {\n    className = classes.horizontalHandle\n  }\n\n  return (\n    <div\n      data-resizer=\"true\"\n      onMouseDown={event => {\n        event.preventDefault()\n        const pos = vertical ? event.clientX : event.clientY\n        initialPosition.current = pos\n        prevPos.current = pos\n        setMouseDragging(true)\n        onMouseDown?.(event)\n      }}\n      className={cx(className, originalClassName)}\n      {...props}\n    />\n  )\n}\n\nexport default ResizeHandle\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { Button, DialogActions, DialogContent, Typography } from '@mui/material'\nimport Dialog from './Dialog'\n\nconst ReturnToImportFormDialog = observer(function ({\n  model,\n  handleClose,\n}: {\n  model: { clearView: () => void }\n  handleClose: () => void\n}) {\n  return (\n    <Dialog maxWidth=\"xl\" open onClose={handleClose} title=\"Reference sequence\">\n      <DialogContent>\n        <Typography>\n          Are you sure you want to return to the import form? This will lose\n          your current view\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            model.clearView()\n            handleClose()\n          }}\n          variant=\"contained\"\n          color=\"primary\"\n          autoFocus\n        >\n          OK\n        </Button>\n        <Button\n          onClick={() => handleClose()}\n          color=\"secondary\"\n          variant=\"contained\"\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n\nexport default ReturnToImportFormDialog\n","import React from 'react'\nimport escapeHTML from 'escape-html'\nimport dompurify from 'dompurify'\n\n// source https://github.com/sindresorhus/html-tags/blob/master/html-tags.json\n// with some random uncommon ones removed. note: we just use this to run the content\n// through dompurify without escaping if we see an htmlTag from this list\n// otherwise we escape angle brackets and things prematurely because it might be\n// something like <TRA> in VCF. Ref #657\nconst htmlTags = [\n  'a',\n  'b',\n  'br',\n  'code',\n  'div',\n  'em',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'i',\n  'img',\n  'li',\n  'p',\n  'pre',\n  'span',\n  'small',\n  'strong',\n  'table',\n  'tbody',\n  'sup',\n  'sub',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'tr',\n  'u',\n  'ul',\n]\n\nlet added = false\n\n// adapted from is-html\n// https://github.com/sindresorhus/is-html/blob/master/index.js\nconst full = new RegExp(htmlTags.map(tag => `<${tag}\\\\b[^>]*>`).join('|'), 'i')\nfunction isHTML(str: string) {\n  return full.test(str)\n}\n\n// note this is mocked during testing, see\n// packages/__mocks__/@jbrowse/core/ui/SanitizedHTML something about dompurify\n// behavior causes errors during tests, was seen in\n// products/jbrowse-web/src/tests/Connection.test.tsx test (can delete mock to\n// see)\n//\nexport default function SanitizedHTML({ html }: { html: string }) {\n  const value = isHTML(html) ? html : escapeHTML(html)\n  if (!added) {\n    added = true\n    // see https://github.com/cure53/DOMPurify/issues/317\n    // only have to add this once, and can't do it globally because dompurify\n    // not yet initialized at global scope\n    dompurify.addHook(\n      'afterSanitizeAttributes',\n      (node: {\n        tagName: string\n        setAttribute: (arg0: string, arg1: string) => void\n      }) => {\n        if (node.tagName === 'A') {\n          node.setAttribute('rel', 'noopener noreferrer')\n          node.setAttribute('target', '_blank')\n        }\n      },\n    )\n  }\n\n  return (\n    <span\n      // eslint-disable-next-line react/no-danger\n      dangerouslySetInnerHTML={{\n        __html: dompurify.sanitize(value),\n      }}\n    />\n  )\n}\n","import { blue, green, red, grey, orange } from '@mui/material/colors'\nimport { createTheme, ThemeOptions } from '@mui/material/styles'\nimport type { PaletteAugmentColorOptions } from '@mui/material/styles/createPalette'\nimport deepmerge from 'deepmerge'\n\ndeclare module '@mui/material/styles/createPalette' {\n  interface Palette {\n    tertiary: Palette['primary']\n    quaternary: Palette['primary']\n    stopCodon?: string\n    startCodon?: string\n    bases: {\n      A: Palette['primary']\n      C: Palette['primary']\n      G: Palette['primary']\n      T: Palette['primary']\n    }\n  }\n  interface PaletteOptions {\n    tertiary?: PaletteOptions['primary']\n    quaternary?: PaletteOptions['primary']\n    stopCodon?: string\n    startCodon?: string\n    bases?: {\n      A?: PaletteOptions['primary']\n      C?: PaletteOptions['primary']\n      G?: PaletteOptions['primary']\n      T?: PaletteOptions['primary']\n    }\n  }\n}\n\nconst midnight = '#0D233F'\nconst grape = '#721E63'\nconst forest = '#135560'\nconst mandarin = '#FFB11D'\n\nconst refTheme = createTheme()\n\nfunction stockTheme() {\n  return {\n    palette: {\n      mode: undefined,\n      primary: { main: midnight },\n      secondary: { main: grape },\n      tertiary: refTheme.palette.augmentColor({ color: { main: forest } }),\n      quaternary: refTheme.palette.augmentColor({ color: { main: mandarin } }),\n      stopCodon: '#e22',\n      startCodon: '#3e3',\n      bases: {\n        A: refTheme.palette.augmentColor({ color: green }),\n        C: refTheme.palette.augmentColor({ color: blue }),\n        G: refTheme.palette.augmentColor({ color: orange }),\n        T: refTheme.palette.augmentColor({ color: red }),\n      },\n    },\n    components: {\n      MuiLink: {\n        styleOverrides: {\n          // the default link color uses theme.palette.primary.main which is\n          // very bad with dark mode+midnight primary\n          //\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          root: ({ theme }: any) => ({\n            color: theme.palette.tertiary.main,\n          }),\n        },\n      },\n    },\n  }\n}\n\nfunction getDefaultTheme() {\n  return {\n    name: 'Default (from config)',\n    ...stockTheme(),\n  }\n}\n\nfunction getLightStockTheme() {\n  return {\n    name: 'Light (stock)',\n    ...stockTheme(),\n  }\n}\n\nfunction getDarkStockTheme() {\n  return {\n    name: 'Dark (stock)',\n    palette: {\n      mode: 'dark',\n      primary: { main: midnight },\n      secondary: { main: grape },\n      tertiary: refTheme.palette.augmentColor({ color: { main: forest } }),\n      quaternary: refTheme.palette.augmentColor({ color: { main: mandarin } }),\n      stopCodon: '#e22',\n      startCodon: '#3e3',\n      bases: {\n        A: refTheme.palette.augmentColor({ color: green }),\n        C: refTheme.palette.augmentColor({ color: blue }),\n        G: refTheme.palette.augmentColor({ color: orange }),\n        T: refTheme.palette.augmentColor({ color: red }),\n      },\n    },\n    components: {\n      MuiAppBar: {\n        defaultProps: {\n          enableColorOnDark: true,\n        },\n        styleOverrides: {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          primary: (props: any) => {\n            return props.theme.palette.primary.main\n          },\n        },\n      },\n    },\n  }\n}\n\nfunction getDarkMinimalTheme() {\n  return {\n    name: 'Dark (minimal)',\n    palette: {\n      mode: 'dark' as const,\n      primary: { main: grey[700] },\n      secondary: { main: grey[800] },\n      tertiary: refTheme.palette.augmentColor({ color: { main: grey[900] } }),\n      quaternary: refTheme.palette.augmentColor({ color: { main: mandarin } }),\n      stopCodon: '#e22',\n      startCodon: '#3e3',\n      bases: {\n        A: refTheme.palette.augmentColor({ color: green }),\n        C: refTheme.palette.augmentColor({ color: blue }),\n        G: refTheme.palette.augmentColor({ color: orange }),\n        T: refTheme.palette.augmentColor({ color: red }),\n      },\n    },\n  }\n}\n\nfunction getMinimalTheme() {\n  return {\n    name: 'Light (minimal)',\n    palette: {\n      primary: { main: grey[900] },\n      secondary: { main: grey[800] },\n      tertiary: refTheme.palette.augmentColor({ color: { main: grey[900] } }),\n      quaternary: refTheme.palette.augmentColor({ color: { main: mandarin } }),\n      stopCodon: '#e22',\n      startCodon: '#3e3',\n      bases: {\n        A: refTheme.palette.augmentColor({ color: green }),\n        C: refTheme.palette.augmentColor({ color: blue }),\n        G: refTheme.palette.augmentColor({ color: orange }),\n        T: refTheme.palette.augmentColor({ color: red }),\n      },\n    },\n  }\n}\n\nexport const defaultThemes = {\n  default: getDefaultTheme(),\n  lightStock: getLightStockTheme(),\n  lightMinimal: getMinimalTheme(),\n  darkMinimal: getDarkMinimalTheme(),\n  darkStock: getDarkStockTheme(),\n} as ThemeMap\n\nfunction createDefaultProps(theme?: ThemeOptions): ThemeOptions {\n  return {\n    components: {\n      MuiButton: {\n        defaultProps: {\n          size: 'small' as const,\n        },\n        styleOverrides: {\n          // the default button, especially when not using variant=contained, uses\n          // theme.palette.primary.main for text which is very bad with dark\n          // mode+midnight primary\n          //\n          // keeps text secondary for darkmode, uses\n          // a text-like coloring to ensure contrast\n          // xref https://stackoverflow.com/a/72546130/2129219\n          //\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          root: (props: any) => {\n            const { theme } = props\n            return theme.palette.mode === 'dark'\n              ? {\n                  color: theme.palette.text.primary,\n                }\n              : undefined\n          },\n        },\n      },\n      MuiAccordion: {\n        defaultProps: {\n          disableGutters: true,\n          TransitionProps: { timeout: 150 },\n        },\n      },\n      MuiFilledInput: {\n        defaultProps: {\n          margin: 'dense' as const,\n        },\n      },\n      MuiFormControl: {\n        defaultProps: {\n          margin: 'dense' as const,\n          size: 'small' as const,\n        },\n      },\n      MuiFormHelperText: {\n        defaultProps: {\n          margin: 'dense' as const,\n        },\n      },\n\n      MuiIconButton: {\n        defaultProps: {\n          size: 'small' as const,\n        },\n      },\n      MuiInputBase: {\n        defaultProps: {\n          margin: 'dense' as const,\n        },\n      },\n      MuiAutocomplete: {\n        defaultProps: {\n          size: 'small' as const,\n        },\n      },\n      MuiInputLabel: {\n        defaultProps: {\n          margin: 'dense' as const,\n        },\n      },\n      MuiToolbar: {\n        defaultProps: {\n          variant: 'dense' as const,\n        },\n      },\n      MuiListItem: {\n        defaultProps: {\n          dense: true,\n        },\n      },\n      MuiOutlinedInput: {\n        defaultProps: {\n          margin: 'dense' as const,\n        },\n      },\n      MuiFab: {\n        defaultProps: {\n          size: 'small' as const,\n        },\n        styleOverrides: {\n          secondary: {\n            // @ts-expect-error\n            backgroundColor: theme?.palette?.quaternary?.main,\n          },\n        },\n      },\n      MuiTable: {\n        defaultProps: {\n          size: 'small' as const,\n        },\n      },\n      MuiPopover: {\n        defaultProps: {\n          transitionDuration: 0,\n        },\n      },\n      MuiMenu: {\n        defaultProps: {\n          transitionDuration: 0,\n        },\n      },\n      MuiMenuItem: {\n        defaultProps: {\n          dense: true,\n        },\n      },\n\n      MuiTextField: {\n        defaultProps: {\n          margin: 'dense' as const,\n          variant: 'standard' as const,\n        },\n      },\n      MuiLink: {\n        styleOverrides: {\n          // the default link color uses theme.palette.primary.main which is\n          // very bad with dark mode+midnight primary\n          root: ({ theme }) => ({\n            color: theme.palette.text.secondary,\n          }),\n        },\n      },\n      MuiCheckbox: {\n        styleOverrides: {\n          // the default checkbox-when-checked color uses\n          // theme.palette.primary.main which is very bad with dark\n          // mode+midnight primary\n          //\n          // keeps the forest-green checkbox by default but for darkmode, uses\n          // a text-like coloring to ensure contrast\n          // xref https://stackoverflow.com/a/72546130/2129219\n          root: ({ theme }) => {\n            return theme.palette.mode === 'dark'\n              ? {\n                  color: theme.palette.text.secondary,\n                  '&.Mui-checked': {\n                    color: theme.palette.text.secondary,\n                  },\n                }\n              : undefined\n          },\n        },\n      },\n      MuiRadio: {\n        styleOverrides: {\n          // the default checkbox-when-checked color uses\n          // theme.palette.primary.main which is very bad with dark\n          // mode+midnight primary\n          //\n          // keeps the forest-green checkbox by default but for darkmode, uses\n          // a text-like coloring to ensure contrast\n          // xref https://stackoverflow.com/a/72546130/2129219\n          root: ({ theme }) => {\n            return theme.palette.mode === 'dark'\n              ? {\n                  color: theme.palette.text.secondary,\n                  '&.Mui-checked': {\n                    color: theme.palette.text.secondary,\n                  },\n                }\n              : undefined\n          },\n        },\n      },\n      MuiFormLabel: {\n        styleOverrides: {\n          // the default checkbox-when-checked color uses\n          // theme.palette.primary.main which is very bad with dark\n          // mode+midnight primary\n          //\n          // keeps the forest-green checkbox by default but for darkmode, uses\n          // a text-like coloring to ensure contrast\n          // xref https://stackoverflow.com/a/72546130/2129219\n          //\n\n          root: ({ theme }) => {\n            return theme.palette.mode === 'dark'\n              ? {\n                  color: theme.palette.text.secondary,\n                  '&.Mui-focused': {\n                    color: theme.palette.text.secondary,\n                  },\n                }\n              : undefined\n          },\n        },\n      },\n      MuiAccordionSummary: {\n        styleOverrides: {\n          root: {\n            // @ts-expect-error\n            backgroundColor: theme?.palette?.tertiary?.main,\n          },\n          content: {\n            // @ts-expect-error\n            color: theme?.palette?.tertiary?.contrastText,\n          },\n        },\n      },\n      MuiToggleButtonGroup: {\n        defaultProps: {\n          size: 'small' as const,\n        },\n      },\n    },\n  }\n}\n\nexport function createJBrowseBaseTheme(theme?: ThemeOptions): ThemeOptions {\n  return deepmerge(\n    {\n      palette: theme?.palette,\n      typography: { fontSize: 12 },\n      spacing: 4,\n      ...createDefaultProps(theme),\n    },\n    theme || {},\n  )\n}\n\ntype ThemeMap = Record<string, ThemeOptions>\n\nexport function createJBrowseTheme(\n  configTheme: ThemeOptions = {},\n  themes = defaultThemes,\n  themeName = 'default',\n) {\n  return createTheme(\n    createJBrowseBaseTheme(\n      themeName === 'default'\n        ? deepmerge(themes.default, augmentTheme(configTheme))\n        : augmentThemePlus(themes[themeName]) || themes.default,\n    ),\n  )\n}\n\nfunction augmentTheme(theme: ThemeOptions = {}) {\n  if (theme?.palette?.tertiary) {\n    theme = deepmerge(theme, {\n      palette: {\n        tertiary: refTheme.palette.augmentColor(\n          'color' in theme.palette.tertiary\n            ? (theme.palette.tertiary as PaletteAugmentColorOptions)\n            : { color: theme.palette.tertiary },\n        ),\n      },\n    })\n  }\n\n  if (theme?.palette?.quaternary) {\n    theme = deepmerge(theme, {\n      palette: {\n        quaternary: refTheme.palette.augmentColor(\n          'color' in theme.palette.quaternary\n            ? (theme.palette.quaternary as PaletteAugmentColorOptions)\n            : { color: theme.palette.quaternary },\n        ),\n      },\n    })\n  }\n\n  return theme\n}\n\n// creates some blank quaternary/tertiary colors if unsupplied by a user theme\nfunction augmentThemePlus(theme: ThemeOptions = {}) {\n  theme = augmentTheme(theme)\n  if (!theme?.palette?.quaternary) {\n    theme = deepmerge(theme, {\n      palette: {\n        quaternary: refTheme.palette.augmentColor({ color: { main: '#aaa' } }),\n      },\n    })\n  }\n  if (!theme?.palette?.tertiary) {\n    theme = deepmerge(theme, {\n      palette: {\n        tertiary: refTheme.palette.augmentColor({ color: { main: '#aaa' } }),\n      },\n    })\n  }\n  return theme\n}\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Box,\n  FormHelperText,\n  InputLabel,\n  Menu,\n  MenuItem,\n  Tooltip,\n  ToggleButtonGroup,\n  ToggleButton,\n  ToggleButtonProps,\n} from '@mui/material'\n\n// locals\nimport {\n  FileLocation,\n  AbstractRootModel,\n  isUriLocation,\n  isAppRootModel,\n} from '../../util/types'\nimport LocalFileChooser from './LocalFileChooser'\nimport UrlChooser from './UrlChooser'\n\n// icons\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport { notEmpty } from '../../util'\n\nfunction ToggleButtonWithTooltip(props: ToggleButtonProps) {\n  const { title, children, ...other } = props\n  return (\n    <Tooltip title={title || ''}>\n      <ToggleButton {...other}>{children}</ToggleButton>\n    </Tooltip>\n  )\n}\n\nfunction shorten(str: string, len: number) {\n  if (typeof str === 'string' && str.length > len) {\n    return `${str.slice(0, Math.max(0, len))}…`\n  }\n  return str\n}\n\nconst FileSelector = observer(function (props: {\n  location?: FileLocation\n  setLocation: (param: FileLocation) => void\n  setName?: (str: string) => void\n  name?: string\n  description?: string\n  rootModel?: AbstractRootModel\n}) {\n  const { location, name, description, rootModel, setLocation } = props\n  const fileOrUrl = !location || isUriLocation(location) ? 'url' : 'file'\n  const [toggleButtonValue, setToggleButtonValue] = useState(\n    location && 'internetAccountId' in location && location.internetAccountId\n      ? location.internetAccountId\n      : fileOrUrl,\n  )\n  const accts = isAppRootModel(rootModel) ? [...rootModel.internetAccounts] : []\n  const numShown = 2\n  const [shownAccts, setShownAccts] = useState(accts.slice(0, numShown))\n  const [hiddenAccts, setHiddenAccts] = useState(accts.slice(numShown))\n  const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null)\n\n  const selectedAcct = accts.find(\n    i => i.internetAccountId === toggleButtonValue,\n  )\n\n  const setLocationWithAcct = useCallback(\n    (location: FileLocation) => {\n      setLocation({\n        ...location,\n        ...(isUriLocation(location)\n          ? { internetAccountId: selectedAcct?.internetAccountId }\n          : {}),\n      })\n    },\n    [setLocation, selectedAcct],\n  )\n\n  useEffect(() => {\n    // if you swap account selection after inputting url\n    if (\n      selectedAcct &&\n      isUriLocation(location) &&\n      location.internetAccountId !== selectedAcct.internetAccountId\n    ) {\n      setLocationWithAcct(location)\n    }\n  }, [location, selectedAcct, setLocationWithAcct])\n\n  let locationInput = (\n    <UrlChooser\n      {...props}\n      setLocation={setLocationWithAcct}\n      label={selectedAcct?.selectorLabel}\n    />\n  )\n  if (toggleButtonValue === 'file') {\n    locationInput = <LocalFileChooser {...props} />\n  }\n  if (selectedAcct?.SelectorComponent) {\n    const { SelectorComponent } = selectedAcct\n    locationInput = (\n      <SelectorComponent {...props} setLocation={setLocationWithAcct} />\n    )\n  }\n\n  return (\n    <>\n      <Box display=\"flex\">\n        <InputLabel shrink>{name}</InputLabel>\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Box>\n          <ToggleButtonGroup\n            value={toggleButtonValue}\n            exclusive\n            onChange={(_event, newState) => {\n              if (newState) {\n                setToggleButtonValue(newState)\n              }\n              if (isUriLocation(location)) {\n                setLocationWithAcct(location)\n              }\n            }}\n            aria-label=\"file, url, or account picker\"\n          >\n            {new URLSearchParams(window.location.search).get(\n              'adminKey',\n            ) ? null : (\n              <ToggleButton value=\"file\" aria-label=\"local file\">\n                File\n              </ToggleButton>\n            )}\n            <ToggleButton value=\"url\" aria-label=\"url\">\n              URL\n            </ToggleButton>\n            {shownAccts.map(({ internetAccountId, toggleContents, name }) => (\n              <ToggleButtonWithTooltip\n                key={internetAccountId}\n                value={internetAccountId}\n                aria-label={name}\n                title={name}\n              >\n                {typeof toggleContents === 'string'\n                  ? shorten(toggleContents, 5)\n                  : toggleContents || shorten(name, 5)}\n              </ToggleButtonWithTooltip>\n            ))}\n            {hiddenAccts.length > 0 ? (\n              // @ts-expect-error\n              <ToggleButton\n                onClick={event => setAnchorEl(event.target as HTMLElement)}\n                selected={false}\n              >\n                More\n                <ArrowDropDownIcon />\n              </ToggleButton>\n            ) : null}\n          </ToggleButtonGroup>\n\n          <Menu\n            open={Boolean(anchorEl)}\n            anchorEl={anchorEl}\n            onClose={() => setAnchorEl(null)}\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n            transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n          >\n            {hiddenAccts?.map((acct, idx) => (\n              <MenuItem\n                key={acct.internetAccountId}\n                value={acct.internetAccountId}\n                onClick={() => {\n                  const prev = shownAccts.at(-1)\n                  setShownAccts([...shownAccts.slice(0, -1), acct])\n                  setHiddenAccts(\n                    [\n                      prev,\n                      ...hiddenAccts.slice(0, idx),\n                      ...hiddenAccts.slice(idx + 1),\n                    ].filter(notEmpty),\n                  )\n                  setToggleButtonValue(acct.internetAccountId)\n                  setAnchorEl(null)\n                }}\n              >\n                {acct.name}\n              </MenuItem>\n            ))}\n          </Menu>\n        </Box>\n      </Box>\n      {locationInput}\n      <FormHelperText>{description}</FormHelperText>\n    </>\n  )\n})\n\nexport default FileSelector\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState, useRef, useEffect } from 'react'\nimport { drawImageOntoCanvasContext } from '../util/offscreenCanvasPonyfill'\n\nfunction PrerenderedCanvas(props: {\n  width: number\n  height: number\n  highResolutionScaling?: number\n  style?: any\n  imageData?: any\n  showSoftClip?: boolean\n  blockKey?: string\n}) {\n  const {\n    width,\n    height,\n    highResolutionScaling = 1,\n    style = {},\n    imageData,\n    blockKey,\n    showSoftClip,\n  } = props\n  const [done, setDone] = useState(false)\n\n  const featureCanvas = useRef<HTMLCanvasElement>(null)\n\n  useEffect(() => {\n    if (!imageData) {\n      return\n    }\n    const canvas = featureCanvas.current\n    if (!canvas) {\n      return\n    }\n    const context = canvas.getContext('2d')\n    if (!context) {\n      return\n    }\n    drawImageOntoCanvasContext(imageData, context)\n    setDone(true)\n  }, [imageData])\n\n  const softClipString = showSoftClip ? '_softclipped' : ''\n  const blockKeyStr = blockKey ? '_' + blockKey : ''\n  const testId = `prerendered_canvas${softClipString}${blockKeyStr}${\n    done ? '_done' : ''\n  }`\n  return (\n    <canvas\n      data-testid={testId}\n      ref={featureCanvas}\n      width={width * highResolutionScaling}\n      height={height * highResolutionScaling}\n      style={{ width, height, ...style }}\n    />\n  )\n}\n\nexport default PrerenderedCanvas\n","import React, { useEffect, useState } from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { Feature } from '../util'\nimport { readConfObject, AnyConfigurationModel } from '../configuration'\n\nconst useStyles = makeStyles()({\n  hoverLabel: {\n    border: '1px solid black',\n    position: 'absolute',\n    background: '#fffa',\n    pointerEvents: 'none',\n    zIndex: 10000,\n  },\n})\n\nconst Tooltip = observer(function ({\n  offsetX,\n  offsetY,\n  configuration,\n  feature,\n  timeout = 300,\n}: {\n  offsetX: number\n  offsetY: number\n  configuration: AnyConfigurationModel\n  feature?: Feature\n  timeout?: number\n}) {\n  const { classes } = useStyles()\n  const [shown, setShown] = useState(false)\n  useEffect(() => {\n    // only show the loading message after short timeout to prevent excessive\n    // flickering\n    const handle = setTimeout(() => setShown(true), timeout)\n    return () => clearTimeout(handle)\n  })\n  if (feature && shown) {\n    const text = readConfObject(configuration, 'mouseover', { feature })\n    return (\n      <div\n        className={classes.hoverLabel}\n        style={{ left: offsetX, top: offsetY }}\n      >\n        {text}\n      </div>\n    )\n  }\n  return null\n})\n\nexport default Tooltip\n","// vendored from quick-lru@6.1.1, didn't like being compiled as a 'pure-esm' nodejs dependency\n// the license is reproduced below https://github.com/sindresorhus/quick-lru/blob/main/license\n// MIT License\n\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nexport default class QuickLRU extends Map {\n  constructor(options = {}) {\n    super()\n\n    if (!(options.maxSize && options.maxSize > 0)) {\n      throw new TypeError('`maxSize` must be a number greater than 0')\n    }\n\n    if (typeof options.maxAge === 'number' && options.maxAge === 0) {\n      throw new TypeError('`maxAge` must be a number greater than 0')\n    }\n\n    // TODO: Use private class fields when ESLint supports them.\n    this.maxSize = options.maxSize\n    this.maxAge = options.maxAge || Number.POSITIVE_INFINITY\n    this.onEviction = options.onEviction\n    this.cache = new Map()\n    this.oldCache = new Map()\n    this._size = 0\n  }\n\n  // TODO: Use private class methods when targeting Node.js 16.\n  _emitEvictions(cache) {\n    if (typeof this.onEviction !== 'function') {\n      return\n    }\n\n    for (const [key, item] of cache) {\n      this.onEviction(key, item.value)\n    }\n  }\n\n  _deleteIfExpired(key, item) {\n    if (typeof item.expiry === 'number' && item.expiry <= Date.now()) {\n      if (typeof this.onEviction === 'function') {\n        this.onEviction(key, item.value)\n      }\n\n      return this.delete(key)\n    }\n\n    return false\n  }\n\n  _getOrDeleteIfExpired(key, item) {\n    const deleted = this._deleteIfExpired(key, item)\n    if (deleted === false) {\n      return item.value\n    }\n  }\n\n  _getItemValue(key, item) {\n    return item.expiry ? this._getOrDeleteIfExpired(key, item) : item.value\n  }\n\n  _peek(key, cache) {\n    const item = cache.get(key)\n\n    return this._getItemValue(key, item)\n  }\n\n  _set(key, value) {\n    this.cache.set(key, value)\n    this._size++\n\n    if (this._size >= this.maxSize) {\n      this._size = 0\n      this._emitEvictions(this.oldCache)\n      this.oldCache = this.cache\n      this.cache = new Map()\n    }\n  }\n\n  _moveToRecent(key, item) {\n    this.oldCache.delete(key)\n    this._set(key, item)\n  }\n\n  *_entriesAscending() {\n    for (const item of this.oldCache) {\n      const [key, value] = item\n      if (!this.cache.has(key)) {\n        const deleted = this._deleteIfExpired(key, value)\n        if (deleted === false) {\n          yield item\n        }\n      }\n    }\n\n    for (const item of this.cache) {\n      const [key, value] = item\n      const deleted = this._deleteIfExpired(key, value)\n      if (deleted === false) {\n        yield item\n      }\n    }\n  }\n\n  get(key) {\n    if (this.cache.has(key)) {\n      const item = this.cache.get(key)\n\n      return this._getItemValue(key, item)\n    }\n\n    if (this.oldCache.has(key)) {\n      const item = this.oldCache.get(key)\n      if (this._deleteIfExpired(key, item) === false) {\n        this._moveToRecent(key, item)\n        return item.value\n      }\n    }\n  }\n\n  set(key, value, { maxAge = this.maxAge } = {}) {\n    const expiry =\n      typeof maxAge === 'number' && maxAge !== Number.POSITIVE_INFINITY\n        ? Date.now() + maxAge\n        : undefined\n    if (this.cache.has(key)) {\n      this.cache.set(key, {\n        value,\n        expiry,\n      })\n    } else {\n      this._set(key, { value, expiry })\n    }\n  }\n\n  has(key) {\n    if (this.cache.has(key)) {\n      return !this._deleteIfExpired(key, this.cache.get(key))\n    }\n\n    if (this.oldCache.has(key)) {\n      return !this._deleteIfExpired(key, this.oldCache.get(key))\n    }\n\n    return false\n  }\n\n  peek(key) {\n    if (this.cache.has(key)) {\n      return this._peek(key, this.cache)\n    }\n\n    if (this.oldCache.has(key)) {\n      return this._peek(key, this.oldCache)\n    }\n  }\n\n  delete(key) {\n    const deleted = this.cache.delete(key)\n    if (deleted) {\n      this._size--\n    }\n\n    return this.oldCache.delete(key) || deleted\n  }\n\n  clear() {\n    this.cache.clear()\n    this.oldCache.clear()\n    this._size = 0\n  }\n\n  resize(newSize) {\n    if (!(newSize && newSize > 0)) {\n      throw new TypeError('`maxSize` must be a number greater than 0')\n    }\n\n    const items = [...this._entriesAscending()]\n    const removeCount = items.length - newSize\n    if (removeCount < 0) {\n      this.cache = new Map(items)\n      this.oldCache = new Map()\n      this._size = items.length\n    } else {\n      if (removeCount > 0) {\n        this._emitEvictions(items.slice(0, removeCount))\n      }\n\n      this.oldCache = new Map(items.slice(removeCount))\n      this.cache = new Map()\n      this._size = 0\n    }\n\n    this.maxSize = newSize\n  }\n\n  *keys() {\n    for (const [key] of this) {\n      yield key\n    }\n  }\n\n  *values() {\n    for (const [, value] of this) {\n      yield value\n    }\n  }\n\n  *[Symbol.iterator]() {\n    for (const item of this.cache) {\n      const [key, value] = item\n      const deleted = this._deleteIfExpired(key, value)\n      if (deleted === false) {\n        yield [key, value.value]\n      }\n    }\n\n    for (const item of this.oldCache) {\n      const [key, value] = item\n      if (!this.cache.has(key)) {\n        const deleted = this._deleteIfExpired(key, value)\n        if (deleted === false) {\n          yield [key, value.value]\n        }\n      }\n    }\n  }\n\n  *entriesDescending() {\n    let items = [...this.cache]\n    for (let i = items.length - 1; i >= 0; --i) {\n      const item = items[i]\n      const [key, value] = item\n      const deleted = this._deleteIfExpired(key, value)\n      if (deleted === false) {\n        yield [key, value.value]\n      }\n    }\n\n    items = [...this.oldCache]\n    for (let i = items.length - 1; i >= 0; --i) {\n      const item = items[i]\n      const [key, value] = item\n      if (!this.cache.has(key)) {\n        const deleted = this._deleteIfExpired(key, value)\n        if (deleted === false) {\n          yield [key, value.value]\n        }\n      }\n    }\n  }\n\n  *entriesAscending() {\n    for (const [key, value] of this._entriesAscending()) {\n      yield [key, value.value]\n    }\n  }\n\n  get size() {\n    if (!this._size) {\n      return this.oldCache.size\n    }\n\n    let oldCacheSize = 0\n    for (const key of this.oldCache.keys()) {\n      if (!this.cache.has(key)) {\n        oldCacheSize++\n      }\n    }\n\n    return Math.min(this._size + oldCacheSize, this.maxSize)\n  }\n\n  entries() {\n    return this.entriesAscending()\n  }\n\n  forEach(callbackFunction, thisArgument = this) {\n    for (const [key, value] of this.entriesAscending()) {\n      callbackFunction.call(thisArgument, value, key, this)\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return JSON.stringify([...this.entriesAscending()])\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { useEffect, useRef, useState } from 'react'\nimport isObject from 'is-object'\nimport PluginManager from '../PluginManager'\nimport {\n  addDisposer,\n  getParent,\n  getSnapshot,\n  getEnv as getEnvMST,\n  isAlive,\n  isStateTreeNode,\n  hasParent,\n  IAnyStateTreeNode,\n  IStateTreeNode,\n  Instance,\n} from 'mobx-state-tree'\nimport { reaction, IReactionPublic, IReactionOptions } from 'mobx'\nimport { Feature } from './simpleFeature'\nimport {\n  isSessionModel,\n  isDisplayModel,\n  isViewModel,\n  isTrackModel,\n  AssemblyManager,\n  Region,\n  TypeTestedByPredicate,\n} from './types'\nimport { Region as MUIRegion } from './types/mst'\nimport { isAbortException, checkAbortSignal } from './aborting'\nimport { BaseBlock } from './blockTypes'\nimport { isUriLocation } from './types'\n// has to be the full path and not the relative path to get the jest mock\nimport useMeasure from '@jbrowse/core/util/useMeasure'\nimport { colord } from './colord'\n\nexport * from './types'\nexport * from './aborting'\nexport * from './when'\nexport * from './range'\nexport * from './dedupe'\n\nexport * from './offscreenCanvasPonyfill'\nexport * from './offscreenCanvasUtils'\n\nexport const inDevelopment =\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_ENV === 'development'\nexport const inProduction = !inDevelopment\n\nexport function useDebounce<T>(value: T, delay: number) {\n  const [debouncedValue, setDebouncedValue] = useState(value)\n\n  useEffect(() => {\n    const handle = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n    return () => {\n      clearTimeout(handle)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n\n// used in ViewContainer files to get the width\nexport function useWidthSetter(\n  view: { setWidth: (arg: number) => void },\n  padding: string,\n) {\n  const [ref, { width }] = useMeasure()\n  useEffect(() => {\n    if (width && isAlive(view)) {\n      // sets after a requestAnimationFrame\n      // https://stackoverflow.com/a/58701523/2129219\n      // avoids ResizeObserver loop error being shown during development\n      requestAnimationFrame(() =>\n        view.setWidth(width - Number.parseInt(padding, 10) * 2),\n      )\n    }\n  }, [padding, view, width])\n  return ref\n}\n\n// https://stackoverflow.com/questions/56283920/\nexport function useDebouncedCallback<T>(\n  callback: (...args: T[]) => void,\n  wait = 400,\n) {\n  // track args & timeout handle between calls\n  const argsRef = useRef<T[]>()\n  const timeout = useRef<ReturnType<typeof setTimeout>>()\n\n  function cleanup() {\n    if (timeout.current) {\n      clearTimeout(timeout.current)\n    }\n  }\n\n  // make sure our timeout gets cleared if our consuming component gets unmounted\n  useEffect(() => cleanup, [])\n\n  return function debouncedCallback(...args: T[]) {\n    // capture latest args\n    argsRef.current = args\n\n    // clear debounce timer\n    cleanup()\n\n    // start waiting again\n    timeout.current = setTimeout(() => {\n      if (argsRef.current) {\n        callback(...argsRef.current)\n      }\n    }, wait)\n  }\n}\n\n/** find the first node in the hierarchy that matches the given predicate */\nexport function findParentThat(\n  node: IAnyStateTreeNode,\n  predicate: (thing: IAnyStateTreeNode) => boolean,\n) {\n  if (!hasParent(node)) {\n    throw new Error('node does not have parent')\n  }\n  let currentNode: IAnyStateTreeNode | undefined = getParent<any>(node)\n  while (currentNode && isAlive(currentNode)) {\n    if (predicate(currentNode)) {\n      return currentNode\n    }\n    if (hasParent(currentNode)) {\n      currentNode = getParent<any>(currentNode)\n    } else {\n      break\n    }\n  }\n  throw new Error('no matching node found')\n}\n\ninterface Animation {\n  lastPosition: number\n  lastTime?: number\n  lastVelocity?: number\n}\n\n// based on https://github.com/react-spring/react-spring/blob/cd5548a987383b8023efd620f3726a981f9e18ea/src/animated/FrameLoop.ts\nexport function springAnimate(\n  fromValue: number,\n  toValue: number,\n  setValue: (value: number) => void,\n  onFinish = () => {},\n  precision = 0,\n  tension = 170,\n  friction = 26,\n) {\n  const mass = 1\n  if (!precision) {\n    precision = Math.abs(toValue - fromValue) / 1000\n  }\n\n  let animationFrameId: number\n\n  function update(animation: Animation) {\n    const time = Date.now()\n    let position = animation.lastPosition\n    let lastTime = animation.lastTime || time\n    let velocity = animation.lastVelocity || 0\n    // If we lost a lot of frames just jump to the end.\n    if (time > lastTime + 64) {\n      lastTime = time\n    }\n    // http://gafferongames.com/game-physics/fix-your-timestep/\n    const numSteps = Math.floor(time - lastTime)\n    for (let i = 0; i < numSteps; ++i) {\n      const force = -tension * (position - toValue)\n      const damping = -friction * velocity\n      const acceleration = (force + damping) / mass\n      velocity += (acceleration * 1) / 1000\n      position += (velocity * 1) / 1000\n    }\n    const isVelocity = Math.abs(velocity) <= precision\n    const isDisplacement =\n      tension !== 0 ? Math.abs(toValue - position) <= precision : true\n    const endOfAnimation = isVelocity && isDisplacement\n    if (endOfAnimation) {\n      setValue(toValue)\n      onFinish()\n    } else {\n      setValue(position)\n      animationFrameId = requestAnimationFrame(() =>\n        update({\n          lastPosition: position,\n          lastTime: time,\n          lastVelocity: velocity,\n        }),\n      )\n    }\n  }\n\n  return [\n    () => update({ lastPosition: fromValue }),\n    () => cancelAnimationFrame(animationFrameId),\n  ]\n}\n\n// find the first node in the hierarchy that matches the given 'is' typescript type guard predicate\nexport function findParentThatIs<T extends (a: IAnyStateTreeNode) => boolean>(\n  node: IAnyStateTreeNode,\n  predicate: T,\n): TypeTestedByPredicate<T> {\n  return findParentThat(node, predicate)\n}\n\n/** get the current JBrowse session model, starting at any node in the state tree */\nexport function getSession(node: IAnyStateTreeNode) {\n  try {\n    return findParentThatIs(node, isSessionModel)\n  } catch (e) {\n    throw new Error('no session model found!')\n  }\n}\n\n/** get the state model of the view in the state tree that contains the given node */\nexport function getContainingView(node: IAnyStateTreeNode) {\n  try {\n    return findParentThatIs(node, isViewModel)\n  } catch (e) {\n    throw new Error('no containing view found')\n  }\n}\n\n/** get the state model of the view in the state tree that contains the given node */\nexport function getContainingTrack(node: IAnyStateTreeNode) {\n  try {\n    return findParentThatIs(node, isTrackModel)\n  } catch (e) {\n    throw new Error('no containing track found')\n  }\n}\n\nexport function getContainingDisplay(node: IAnyStateTreeNode) {\n  try {\n    return findParentThatIs(node, isDisplayModel)\n  } catch (e) {\n    throw new Error('no containing display found')\n  }\n}\n\n/**\n * Assemble a 1-based \"locString\" from an interbase genomic location\n * @param region - Region\n * @example\n * ```ts\n * assembleLocString({ refName: 'chr1', start: 0, end: 100 })\n * // ↳ 'chr1:1..100'\n * ```\n * @example\n * ```ts\n * assembleLocString({ assemblyName: 'hg19', refName: 'chr1', start: 0, end: 100 })\n * // ↳ '{hg19}chr1:1..100'\n * ```\n * @example\n * ```ts\n * assembleLocString({ refName: 'chr1' })\n * // ↳ 'chr1'\n * ```\n * @example\n * ```ts\n * assembleLocString({ refName: 'chr1', start: 0 })\n * // ↳ 'chr1:1..'\n * ```\n * @example\n * ```ts\n * assembleLocString({ refName: 'chr1', end: 100 })\n * // ↳ 'chr1:1..100'\n * ```\n * @example\n * ```ts\n * assembleLocString({ refName: 'chr1', start: 0, end: 1 })\n * // ↳ 'chr1:1'\n * ```\n */\nexport function assembleLocString(region: ParsedLocString) {\n  return assembleLocStringFast(region, toLocale)\n}\n\n// same as assembleLocString above, but does not perform toLocaleString which\n// can slow down the speed of block calculations which use assembleLocString\n// for block.key\nexport function assembleLocStringFast(\n  region: ParsedLocString,\n  cb = (n: number): string | number => n,\n) {\n  const { assemblyName, refName, start, end, reversed } = region\n  const assemblyNameString = assemblyName ? `{${assemblyName}}` : ''\n  let startString\n  if (start !== undefined) {\n    startString = `:${cb(start + 1)}`\n  } else if (end !== undefined) {\n    startString = ':1'\n  } else {\n    startString = ''\n  }\n  let endString\n  if (end !== undefined) {\n    endString = start !== undefined && start + 1 === end ? '' : `..${cb(end)}`\n  } else {\n    endString = start !== undefined ? '..' : ''\n  }\n  let rev = ''\n  if (reversed) {\n    rev = '[rev]'\n  }\n  return `${assemblyNameString}${refName}${startString}${endString}${rev}`\n}\n\nexport interface ParsedLocString {\n  assemblyName?: string\n  refName: string\n  start?: number\n  end?: number\n  reversed?: boolean\n}\n\nexport function parseLocStringOneBased(\n  locString: string,\n  isValidRefName: (refName: string, assemblyName?: string) => boolean,\n): ParsedLocString {\n  if (!locString) {\n    throw new Error('no location string provided, could not parse')\n  }\n  let reversed = false\n  if (locString.endsWith('[rev]')) {\n    reversed = true\n    locString = locString.replace(/\\[rev]$/, '')\n  }\n  // remove any whitespace\n  locString = locString.replace(/\\s/, '')\n  // refNames can have colons, ref https://samtools.github.io/hts-specs/SAMv1.pdf Appendix A\n  const assemblyMatch = locString.match(/({(.+)})?(.+)/)\n  if (!assemblyMatch) {\n    throw new Error(`invalid location string: \"${locString}\"`)\n  }\n  const [, , assemblyName, location] = assemblyMatch\n  if (!assemblyName && location.startsWith('{}')) {\n    throw new Error(`no assembly name was provided in location \"${location}\"`)\n  }\n  const lastColonIdx = location.lastIndexOf(':')\n  if (lastColonIdx === -1) {\n    if (isValidRefName(location, assemblyName)) {\n      return { assemblyName, refName: location, reversed }\n    }\n    throw new Error(`Unknown reference sequence \"${location}\"`)\n  }\n  const prefix = location.slice(0, lastColonIdx)\n  const suffix = location.slice(lastColonIdx + 1)\n  if (\n    isValidRefName(prefix, assemblyName) &&\n    isValidRefName(location, assemblyName)\n  ) {\n    throw new Error(`ambiguous location string: \"${locString}\"`)\n  } else if (isValidRefName(prefix, assemblyName)) {\n    if (suffix) {\n      // see if it's a range\n      const rangeMatch = suffix.match(\n        /^(-?(\\d+|\\d{1,3}(,\\d{3})*))(\\.\\.|-)(-?(\\d+|\\d{1,3}(,\\d{3})*))$/,\n      )\n      // see if it's a single point\n      const singleMatch = suffix.match(/^(-?(\\d+|\\d{1,3}(,\\d{3})*))(\\.\\.|-)?$/)\n      if (rangeMatch) {\n        const [, start, , , , end] = rangeMatch\n        if (start !== undefined && end !== undefined) {\n          return {\n            assemblyName,\n            refName: prefix,\n            start: +start.replaceAll(',', ''),\n            end: +end.replaceAll(',', ''),\n            reversed,\n          }\n        }\n      } else if (singleMatch) {\n        const [, start, , , separator] = singleMatch\n        if (start !== undefined) {\n          if (separator) {\n            // indefinite end\n            return {\n              assemblyName,\n              refName: prefix,\n              start: +start.replaceAll(',', ''),\n              reversed,\n            }\n          }\n          return {\n            assemblyName,\n            refName: prefix,\n            start: +start.replaceAll(',', ''),\n            end: +start.replaceAll(',', ''),\n            reversed,\n          }\n        }\n      } else {\n        throw new Error(\n          `could not parse range \"${suffix}\" on location \"${locString}\"`,\n        )\n      }\n    } else {\n      return { assemblyName, refName: prefix, reversed }\n    }\n  } else if (isValidRefName(location, assemblyName)) {\n    return { assemblyName, refName: location, reversed }\n  }\n  throw new Error(`unknown reference sequence name in location \"${locString}\"`)\n}\n\n/**\n * Parse a 1-based location string into an interbase genomic location\n * @param locString - Location string\n * @param isValidRefName - Function that checks if a refName exists in the set\n * of all known refNames, or in the set of refNames for an assembly if\n * assemblyName is given\n * @example\n * ```ts\n * parseLocString('chr1:1..100', isValidRefName)\n * // ↳ { refName: 'chr1', start: 0, end: 100 }\n * ```\n * @example\n * ```ts\n * parseLocString('chr1:1-100', isValidRefName)\n * // ↳ { refName: 'chr1', start: 0, end: 100 }\n * ```\n * @example\n * ```ts\n * parseLocString(`{hg19}chr1:1..100`, isValidRefName)\n * // ↳ { assemblyName: 'hg19', refName: 'chr1', start: 0, end: 100 }\n * ```\n * @example\n * ```ts\n * parseLocString('chr1', isValidRefName)\n * // ↳ { refName: 'chr1' }\n * ```\n * @example\n * ```ts\n * parseLocString('chr1:1', isValidRefName)\n * // ↳ { refName: 'chr1', start: 0, end: 1 }\n * ```\n * @example\n * ```ts\n * parseLocString('chr1:1..', isValidRefName)\n * // ↳ { refName: 'chr1', start: 0}\n * ```\n */\nexport function parseLocString(\n  locString: string,\n  isValidRefName: (refName: string, assemblyName?: string) => boolean,\n) {\n  const parsed = parseLocStringOneBased(locString, isValidRefName)\n  if (typeof parsed.start === 'number') {\n    parsed.start -= 1\n  }\n  return parsed\n}\n\nexport function compareLocs(locA: ParsedLocString, locB: ParsedLocString) {\n  const assemblyComp =\n    locA.assemblyName || locB.assemblyName\n      ? (locA.assemblyName || '').localeCompare(locB.assemblyName || '')\n      : 0\n  if (assemblyComp) {\n    return assemblyComp\n  }\n\n  const refComp =\n    locA.refName || locB.refName\n      ? (locA.refName || '').localeCompare(locB.refName || '')\n      : 0\n  if (refComp) {\n    return refComp\n  }\n\n  if (locA.start !== undefined && locB.start !== undefined) {\n    const startComp = locA.start - locB.start\n    if (startComp) {\n      return startComp\n    }\n  }\n  if (locA.end !== undefined && locB.end !== undefined) {\n    const endComp = locA.end - locB.end\n    if (endComp) {\n      return endComp\n    }\n  }\n  return 0\n}\n\nexport function compareLocStrings(\n  a: string,\n  b: string,\n  isValidRefName: (refName: string, assemblyName?: string) => boolean,\n) {\n  const locA = parseLocString(a, isValidRefName)\n  const locB = parseLocString(b, isValidRefName)\n  return compareLocs(locA, locB)\n}\n\n/**\n * Ensure that a number is at least min and at most max.\n *\n * @param num -\n * @param min -\n * @param  max -\n */\nexport function clamp(num: number, min: number, max: number) {\n  if (num < min) {\n    return min\n  }\n  if (num > max) {\n    return max\n  }\n  return num\n}\n\nfunction roundToNearestPointOne(num: number) {\n  return Math.round(num * 10) / 10\n}\n\n/**\n * @param bp -\n * @param region -\n * @param bpPerPx -\n */\nexport function bpToPx(\n  bp: number,\n  {\n    reversed,\n    end = 0,\n    start = 0,\n  }: { start?: number; end?: number; reversed?: boolean },\n  bpPerPx: number,\n) {\n  return roundToNearestPointOne((reversed ? end - bp : bp - start) / bpPerPx)\n}\n\nconst oneEightyOverPi = 180 / Math.PI\nconst piOverOneEighty = Math.PI / 180\nexport function radToDeg(radians: number) {\n  return (radians * oneEightyOverPi) % 360\n}\nexport function degToRad(degrees: number) {\n  return (degrees * piOverOneEighty) % (2 * Math.PI)\n}\n\n/**\n * @returns [x, y]\n */\nexport function polarToCartesian(rho: number, theta: number) {\n  return [rho * Math.cos(theta), rho * Math.sin(theta)] as [number, number]\n}\n\n/**\n * @param x - the x\n * @param y - the y\n * @returns [rho, theta]\n */\nexport function cartesianToPolar(x: number, y: number) {\n  const rho = Math.sqrt(x * x + y * y)\n  const theta = Math.atan(y / x)\n  return [rho, theta] as [number, number]\n}\n\nexport function featureSpanPx(\n  feature: Feature,\n  region: { start: number; end: number; reversed?: boolean },\n  bpPerPx: number,\n): [number, number] {\n  return bpSpanPx(feature.get('start'), feature.get('end'), region, bpPerPx)\n}\n\nexport function bpSpanPx(\n  leftBp: number,\n  rightBp: number,\n  region: { start: number; end: number; reversed?: boolean },\n  bpPerPx: number,\n): [number, number] {\n  const start = bpToPx(leftBp, region, bpPerPx)\n  const end = bpToPx(rightBp, region, bpPerPx)\n  return region.reversed ? [end, start] : [start, end]\n}\n\n// do an array map of an iterable\nexport function iterMap<T, U>(\n  iter: Iterable<T>,\n  func: (arg: T) => U,\n  sizeHint?: number,\n) {\n  const results = Array.from<U>({ length: sizeHint || 0 })\n  let counter = 0\n  for (const item of iter) {\n    results[counter] = func(item)\n    counter += 1\n  }\n  return results\n}\n\n// https://stackoverflow.com/a/53187807\n/**\n * Returns the index of the last element in the array where predicate is true,\n * and -1 otherwise.\n * @param array - The source array to search in\n * @param predicate - find calls predicate once for each element of the array, in\n * descending order, until it finds one where predicate returns true. If such an\n * element is found, findLastIndex immediately returns that element index.\n * Otherwise, findLastIndex returns -1.\n */\nexport function findLastIndex<T>(\n  array: T[],\n  predicate: (value: T, index: number, obj: T[]) => boolean,\n): number {\n  let l = array.length\n  while (l--) {\n    if (predicate(array[l], l, array)) {\n      return l\n    }\n  }\n  return -1\n}\n\nexport function findLast<T>(\n  array: T[],\n  predicate: (value: T, index: number, obj: T[]) => boolean,\n): T | undefined {\n  let l = array.length\n  while (l--) {\n    if (predicate(array[l], l, array)) {\n      return array[l]\n    }\n  }\n  return undefined\n}\n\n/**\n * makes a mobx reaction with the given functions, that calls actions on the\n * model for each stage of execution, and to abort the reaction function when\n * the model is destroyed.\n *\n * Will call startedFunction(signal), successFunction(result), and\n * errorFunction(error) when the async reaction function starts, completes, and\n * errors respectively.\n *\n * @param self -\n * @param dataFunction -\n * @param asyncReactionFunction -\n * @param reactionOptions -\n * @param startedFunction -\n * @param successFunction -\n * @param errorFunction -\n */\nexport function makeAbortableReaction<T, U, V>(\n  self: T,\n  dataFunction: (arg: T) => U,\n  asyncReactionFunction: (\n    arg: U | undefined,\n    signal: AbortSignal,\n    model: T,\n    handle: IReactionPublic,\n  ) => Promise<V>,\n  // @ts-expect-error\n  reactionOptions: IReactionOptions,\n  startedFunction: (aborter: AbortController) => void,\n  successFunction: (arg: V) => void,\n  errorFunction: (err: unknown) => void,\n) {\n  let inProgress: AbortController | undefined\n\n  function handleError(error: unknown) {\n    if (!isAbortException(error)) {\n      if (isAlive(self)) {\n        errorFunction(error)\n      } else {\n        console.error(error)\n      }\n    }\n  }\n\n  addDisposer(\n    self,\n    reaction(\n      () => {\n        try {\n          return dataFunction(self)\n        } catch (e) {\n          handleError(e)\n          return undefined\n        }\n      },\n      async (data, mobxReactionHandle) => {\n        if (inProgress && !inProgress.signal.aborted) {\n          inProgress.abort()\n        }\n\n        if (!isAlive(self)) {\n          return\n        }\n        inProgress = new AbortController()\n\n        const thisInProgress = inProgress\n        startedFunction(thisInProgress)\n        try {\n          const result = await asyncReactionFunction(\n            data,\n            thisInProgress.signal,\n            self,\n            // @ts-expect-error\n            mobxReactionHandle,\n          )\n          checkAbortSignal(thisInProgress.signal)\n          if (isAlive(self)) {\n            successFunction(result)\n          }\n        } catch (e) {\n          if (thisInProgress && !thisInProgress.signal.aborted) {\n            thisInProgress.abort()\n          }\n          handleError(e)\n        }\n      },\n      reactionOptions,\n    ),\n  )\n  addDisposer(self, () => {\n    if (inProgress && !inProgress.signal.aborted) {\n      inProgress.abort()\n    }\n  })\n}\n\nexport function renameRegionIfNeeded(\n  refNameMap: Record<string, string>,\n  region: Region | Instance<typeof MUIRegion>,\n): Region & { originalRefName?: string } {\n  if (isStateTreeNode(region) && !isAlive(region)) {\n    return region\n  }\n\n  if (region && refNameMap?.[region.refName]) {\n    // clone the region so we don't modify it\n    region = isStateTreeNode(region)\n      ? { ...getSnapshot(region) }\n      : { ...region }\n\n    // modify it directly in the container\n    const newRef = refNameMap[region.refName]\n    if (newRef) {\n      return { ...region, refName: newRef, originalRefName: region.refName }\n    }\n  }\n  return region\n}\n\nexport async function renameRegionsIfNeeded<\n  ARGTYPE extends {\n    assemblyName?: string\n    regions?: Region[]\n    signal?: AbortSignal\n    adapterConfig: unknown\n    sessionId: string\n    statusCallback?: (arg: string) => void\n  },\n>(assemblyManager: AssemblyManager, args: ARGTYPE) {\n  const { regions = [], adapterConfig } = args\n  if (!args.sessionId) {\n    throw new Error('sessionId is required')\n  }\n\n  const assemblyNames = regions.map(region => region.assemblyName)\n  const assemblyMaps = Object.fromEntries(\n    await Promise.all(\n      [...new Set(assemblyNames)].map(async assemblyName => {\n        return [\n          assemblyName,\n          await assemblyManager.getRefNameMapForAdapter(\n            adapterConfig,\n            assemblyName,\n            args,\n          ),\n        ]\n      }),\n    ),\n  )\n\n  return {\n    ...args,\n    regions: regions.map((region, i) =>\n      // note: uses assemblyNames defined above since region could be dead now\n      renameRegionIfNeeded(assemblyMaps[assemblyNames[i]], region),\n    ),\n  }\n}\n\nexport function minmax(a: number, b: number) {\n  return [Math.min(a, b), Math.max(a, b)]\n}\n\nexport function shorten(name: string, max = 70, short = 30) {\n  return name.length > max\n    ? name.slice(0, short) + '...' + name.slice(-short)\n    : name\n}\n\nexport function stringify(\n  {\n    refName,\n    coord,\n    assemblyName,\n    oob,\n  }: {\n    assemblyName?: string\n    coord: number\n    refName?: string\n    oob?: boolean\n  },\n  useAssemblyName?: boolean,\n) {\n  return [\n    assemblyName && useAssemblyName ? `{${assemblyName}}` : '',\n    refName\n      ? `${shorten(refName)}:${toLocale(coord)}${oob ? ' (out of bounds)' : ''}`\n      : '',\n  ].join('')\n}\n\n// this is recommended in a later comment in\n// https://github.com/electron/electron/issues/2288 for detecting electron in a\n// renderer process, which is the one that has node enabled for us\n//\n// const isElectron = process.versions.electron\n// const i2 = process.versions.hasOwnProperty('electron')\nexport const isElectron = /electron/i.test(\n  typeof navigator !== 'undefined' ? navigator.userAgent : '',\n)\n\nexport function revcom(seqString: string) {\n  return reverse(complement(seqString))\n}\n\nexport function reverse(seqString: string) {\n  return seqString.split('').reverse().join('')\n}\n\nexport const complement = (() => {\n  const complementRegex = /[ACGT]/gi\n\n  // from bioperl: tr/acgtrymkswhbvdnxACGTRYMKSWHBVDNX/tgcayrkmswdvbhnxTGCAYRKMSWDVBHNX/\n  // generated with:\n  // perl -MJSON -E '@l = split \"\",\"acgtrymkswhbvdnxACGTRYMKSWHBVDNX\"; print to_json({ map { my $in = $_; tr/acgtrymkswhbvdnxACGTRYMKSWHBVDNX/tgcayrkmswdvbhnxTGCAYRKMSWDVBHNX/; $in => $_ } @l})'\n  const complementTable = {\n    S: 'S',\n    w: 'w',\n    T: 'A',\n    r: 'y',\n    a: 't',\n    N: 'N',\n    K: 'M',\n    x: 'x',\n    d: 'h',\n    Y: 'R',\n    V: 'B',\n    y: 'r',\n    M: 'K',\n    h: 'd',\n    k: 'm',\n    C: 'G',\n    g: 'c',\n    t: 'a',\n    A: 'T',\n    n: 'n',\n    W: 'W',\n    X: 'X',\n    m: 'k',\n    v: 'b',\n    B: 'V',\n    s: 's',\n    H: 'D',\n    c: 'g',\n    D: 'H',\n    b: 'v',\n    R: 'Y',\n    G: 'C',\n  } as Record<string, string>\n\n  return (seqString: string) => {\n    return seqString.replaceAll(complementRegex, m => complementTable[m] || '')\n  }\n})()\n\nexport function blobToDataURL(blob: Blob): Promise<string> {\n  const a = new FileReader()\n  return new Promise((resolve, reject) => {\n    a.onload = e => {\n      if (e.target) {\n        resolve(e.target.result as string)\n      } else {\n        reject(new Error('unknown result reading blob from canvas'))\n      }\n    }\n    a.readAsDataURL(blob)\n  })\n}\n\n// requires immediate execution in jest environment, because (hypothesis) it\n// otherwise listens for prerendered_canvas but reads empty pixels, and doesn't\n// get the contents of the canvas\nexport const rIC =\n  typeof jest === 'undefined'\n    ? typeof window !== 'undefined' && window.requestIdleCallback\n      ? window.requestIdleCallback\n      : (cb: Function) => setTimeout(() => cb(), 1)\n    : (cb: Function) => cb()\n\n// prettier-ignore\nconst widths = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2796875,0.2765625,0.3546875,0.5546875,0.5546875,0.8890625,0.665625,0.190625,0.3328125,0.3328125,0.3890625,0.5828125,0.2765625,0.3328125,0.2765625,0.3015625,0.5546875,0.5546875,0.5546875,0.5546875,0.5546875,0.5546875,0.5546875,0.5546875,0.5546875,0.5546875,0.2765625,0.2765625,0.584375,0.5828125,0.584375,0.5546875,1.0140625,0.665625,0.665625,0.721875,0.721875,0.665625,0.609375,0.7765625,0.721875,0.2765625,0.5,0.665625,0.5546875,0.8328125,0.721875,0.7765625,0.665625,0.7765625,0.721875,0.665625,0.609375,0.721875,0.665625,0.94375,0.665625,0.665625,0.609375,0.2765625,0.3546875,0.2765625,0.4765625,0.5546875,0.3328125,0.5546875,0.5546875,0.5,0.5546875,0.5546875,0.2765625,0.5546875,0.5546875,0.221875,0.240625,0.5,0.221875,0.8328125,0.5546875,0.5546875,0.5546875,0.5546875,0.3328125,0.5,0.2765625,0.5546875,0.5,0.721875,0.5,0.5,0.5,0.3546875,0.259375,0.353125,0.5890625]\n\n// xref https://gist.github.com/tophtucker/62f93a4658387bb61e4510c37e2e97cf\nexport function measureText(str: unknown, fontSize = 10) {\n  const avg = 0.5279276315789471\n  const s = String(str)\n  let total = 0\n  for (let i = 0; i < s.length; i++) {\n    const code = s.charCodeAt(i)\n    total += widths[code] ?? avg\n  }\n  return total * fontSize\n}\n\nexport const defaultStarts = ['ATG']\nexport const defaultStops = ['TAA', 'TAG', 'TGA']\nexport const defaultCodonTable = {\n  TCA: 'S',\n  TCC: 'S',\n  TCG: 'S',\n  TCT: 'S',\n  TTC: 'F',\n  TTT: 'F',\n  TTA: 'L',\n  TTG: 'L',\n  TAC: 'Y',\n  TAT: 'Y',\n  TAA: '*',\n  TAG: '*',\n  TGC: 'C',\n  TGT: 'C',\n  TGA: '*',\n  TGG: 'W',\n  CTA: 'L',\n  CTC: 'L',\n  CTG: 'L',\n  CTT: 'L',\n  CCA: 'P',\n  CCC: 'P',\n  CCG: 'P',\n  CCT: 'P',\n  CAC: 'H',\n  CAT: 'H',\n  CAA: 'Q',\n  CAG: 'Q',\n  CGA: 'R',\n  CGC: 'R',\n  CGG: 'R',\n  CGT: 'R',\n  ATA: 'I',\n  ATC: 'I',\n  ATT: 'I',\n  ATG: 'M',\n  ACA: 'T',\n  ACC: 'T',\n  ACG: 'T',\n  ACT: 'T',\n  AAC: 'N',\n  AAT: 'N',\n  AAA: 'K',\n  AAG: 'K',\n  AGC: 'S',\n  AGT: 'S',\n  AGA: 'R',\n  AGG: 'R',\n  GTA: 'V',\n  GTC: 'V',\n  GTG: 'V',\n  GTT: 'V',\n  GCA: 'A',\n  GCC: 'A',\n  GCG: 'A',\n  GCT: 'A',\n  GAC: 'D',\n  GAT: 'D',\n  GAA: 'E',\n  GAG: 'E',\n  GGA: 'G',\n  GGC: 'G',\n  GGG: 'G',\n  GGT: 'G',\n}\n\n/**\n * take CodonTable above and generate larger codon table that includes all\n * permutations of upper and lower case nucleotides\n */\nexport function generateCodonTable(table: any) {\n  const tempCodonTable: Record<string, string> = {}\n  Object.keys(table).forEach(codon => {\n    const aa = table[codon]\n    const nucs: string[][] = []\n    for (let i = 0; i < 3; i++) {\n      const nuc = codon.charAt(i)\n      nucs[i] = []\n      nucs[i][0] = nuc.toUpperCase()\n      nucs[i][1] = nuc.toLowerCase()\n    }\n    for (let i = 0; i < 2; i++) {\n      const n0 = nucs[0][i]\n      for (let j = 0; j < 2; j++) {\n        const n1 = nucs[1][j]\n        for (let k = 0; k < 2; k++) {\n          const n2 = nucs[2][k]\n          const triplet = n0 + n1 + n2\n          tempCodonTable[triplet] = aa\n        }\n      }\n    }\n  })\n  return tempCodonTable\n}\n\n// call statusCallback with current status and clear when finished\nexport async function updateStatus<U>(\n  msg: string,\n  cb: (arg: string) => void,\n  fn: () => U | Promise<U>,\n) {\n  cb(msg)\n  const res = await fn()\n  cb('')\n  return res\n}\n\nexport function hashCode(str: string) {\n  let hash = 0\n  if (str.length === 0) {\n    return hash\n  }\n  for (let i = 0; i < str.length; i++) {\n    const chr = str.charCodeAt(i)\n    hash = (hash << 5) - hash + chr\n    hash |= 0 // Convert to 32bit integer\n  }\n  return hash\n}\n\nexport function objectHash(obj: Record<string, any>) {\n  return `${hashCode(JSON.stringify(obj))}`\n}\n\ninterface VirtualOffset {\n  blockPosition: number\n}\ninterface Block {\n  minv: VirtualOffset\n  maxv: VirtualOffset\n}\n\nexport async function bytesForRegions(\n  regions: Region[],\n  index: {\n    blocksForRange: (\n      ref: string,\n      start: number,\n      end: number,\n    ) => Promise<Block[]>\n  },\n) {\n  const blockResults = await Promise.all(\n    regions.map(r => index.blocksForRange(r.refName, r.start, r.end)),\n  )\n\n  return blockResults\n    .flat()\n    .map(block => ({\n      start: block.minv.blockPosition,\n      end: block.maxv.blockPosition + 65535,\n    }))\n    .reduce((a, b) => a + b.end - b.start, 0)\n}\n\nexport interface ViewSnap {\n  bpPerPx: number\n  interRegionPaddingWidth: number\n  minimumBlockWidth: number\n  width: number\n  offsetPx: number\n  staticBlocks: { contentBlocks: BaseBlock[]; blocks: BaseBlock[] }\n  displayedRegions: (IStateTreeNode & {\n    start: number\n    end: number\n    refName: string\n    reversed: boolean\n    assemblyName: string\n  })[]\n}\n\n// supported adapter types by text indexer\n//  ensure that this matches the method found in @jbrowse/text-indexing/util\nexport function isSupportedIndexingAdapter(type: string) {\n  return [\n    'Gff3TabixAdapter',\n    'VcfTabixAdapter',\n    'Gff3Adapter',\n    'VcfAdapter',\n  ].includes(type)\n}\n\nexport function getBpDisplayStr(totalBp: number) {\n  let str\n  if (Math.floor(totalBp / 1_000_000) > 0) {\n    str = `${Number.parseFloat((totalBp / 1_000_000).toPrecision(3))}Mbp`\n  } else if (Math.floor(totalBp / 1_000) > 0) {\n    str = `${Number.parseFloat((totalBp / 1_000).toPrecision(3))}Kbp`\n  } else {\n    str = `${toLocale(Math.floor(totalBp))}bp`\n  }\n  return str\n}\n\nexport function toLocale(n: number) {\n  return n.toLocaleString('en-US')\n}\n\nexport function getTickDisplayStr(totalBp: number, bpPerPx: number) {\n  return Math.floor(bpPerPx / 1_000) > 0\n    ? `${toLocale(Number.parseFloat((totalBp / 1_000_000).toFixed(2)))}M`\n    : `${toLocale(Math.floor(totalBp))}`\n}\n\nexport function getViewParams(model: IAnyStateTreeNode, exportSVG?: boolean) {\n  // @ts-expect-error\n  const { dynamicBlocks, staticBlocks, offsetPx } = getContainingView(model)\n  const b = dynamicBlocks?.contentBlocks[0] || {}\n  const staticblock = staticBlocks?.contentBlocks[0] || {}\n  const staticblock1 = staticBlocks?.contentBlocks[1] || {}\n  return {\n    offsetPx: exportSVG ? 0 : offsetPx - staticblock.offsetPx,\n    offsetPx1: exportSVG ? 0 : offsetPx - staticblock1.offsetPx,\n    start: b.start as number,\n    end: b.end as number,\n  }\n}\n\nexport function getLayoutId({\n  sessionId,\n  layoutId,\n}: {\n  sessionId: string\n  layoutId: string\n}) {\n  return sessionId + '-' + layoutId\n}\n\n// Hook from https://usehooks.com/useLocalStorage/\nexport function useLocalStorage<T>(key: string, initialValue: T) {\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    if (typeof window === 'undefined') {\n      return initialValue\n    }\n    try {\n      const item = window.localStorage.getItem(key)\n      return item ? JSON.parse(item) : initialValue\n    } catch (error) {\n      console.error(error)\n      return initialValue\n    }\n  })\n  const setValue = (value: T | ((val: T) => T)) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value\n      setStoredValue(valueToStore)\n      if (typeof window !== 'undefined') {\n        window.localStorage.setItem(key, JSON.stringify(valueToStore))\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n  return [storedValue, setValue] as const\n}\n\nexport function getUriLink(value: { uri: string; baseUri?: string }) {\n  const { uri, baseUri = '' } = value\n  let href\n  try {\n    href = new URL(uri, baseUri).href\n  } catch (e) {\n    href = uri\n  }\n  return href\n}\n\nexport function getStr(obj: unknown) {\n  return isObject(obj)\n    ? isUriLocation(obj)\n      ? getUriLink(obj)\n      : JSON.stringify(obj)\n    : String(obj)\n}\n\n// tries to measure grid width without HTML tags included\nfunction coarseStripHTML(s: string) {\n  return s.replaceAll(/(<([^>]+)>)/gi, '')\n}\n\n// heuristic measurement for a column of a @mui/x-data-grid, pass in values from a column\nexport function measureGridWidth(\n  elements: unknown[],\n  args?: {\n    minWidth?: number\n    fontSize?: number\n    maxWidth?: number\n    padding?: number\n    stripHTML?: boolean\n  },\n) {\n  const {\n    padding = 30,\n    minWidth = 80,\n    fontSize = 12,\n    maxWidth = 1000,\n    stripHTML = false,\n  } = args || {}\n  return max(\n    elements\n      .map(element => getStr(element))\n      .map(str => (stripHTML ? coarseStripHTML(str) : str))\n      .map(str => measureText(str, fontSize))\n      .map(n => Math.min(Math.max(n + padding, minWidth), maxWidth)),\n  )\n}\n\nexport function getEnv(obj: any) {\n  return getEnvMST<{ pluginManager: PluginManager }>(obj)\n}\n\nexport function localStorageGetItem(item: string) {\n  return typeof localStorage !== 'undefined'\n    ? localStorage.getItem(item)\n    : undefined\n}\n\nexport function localStorageSetItem(str: string, item: string) {\n  return typeof localStorage !== 'undefined'\n    ? localStorage.setItem(str, item)\n    : undefined\n}\n\nexport function max(arr: number[], init = -Infinity) {\n  let max = init\n  for (const entry of arr) {\n    max = entry > max ? entry : max\n  }\n  return max\n}\n\nexport function min(arr: number[], init = Infinity) {\n  let min = init\n  for (const entry of arr) {\n    min = entry < min ? entry : min\n  }\n  return min\n}\n\nexport function sum(arr: number[]) {\n  let sum = 0\n  for (const entry of arr) {\n    sum += entry\n  }\n  return sum\n}\n\nexport function avg(arr: number[]) {\n  return sum(arr) / arr.length\n}\n\nexport function groupBy<T>(array: T[], predicate: (v: T) => string) {\n  const result = {} as Record<string, T[]>\n  for (const value of array) {\n    const entry = (result[predicate(value)] ||= [])\n    entry.push(value)\n  }\n  return result\n}\n\nexport function notEmpty<T>(value: T | null | undefined): value is T {\n  return value !== null && value !== undefined\n}\n\nexport function mergeIntervals<T extends { start: number; end: number }>(\n  intervals: T[],\n  w = 5000,\n) {\n  // test if there are at least 2 intervals\n  if (intervals.length <= 1) {\n    return intervals\n  }\n\n  const stack = []\n  let top = null\n\n  // sort the intervals based on their start values\n  intervals = intervals.sort((a, b) => a.start - b.start)\n\n  // push the 1st interval into the stack\n  stack.push(intervals[0])\n\n  // start from the next interval and merge if needed\n  for (let i = 1; i < intervals.length; i++) {\n    // get the top element\n\n    top = stack.at(-1)!\n\n    // if the current interval doesn't overlap with the\n    // stack top element, push it to the stack\n    if (top.end + w < intervals[i].start - w) {\n      stack.push(intervals[i])\n    }\n    // otherwise update the end value of the top element\n    // if end of current interval is higher\n    else if (top.end < intervals[i].end) {\n      top.end = Math.max(top.end, intervals[i].end)\n      stack.pop()\n      stack.push(top)\n    }\n  }\n\n  return stack\n}\n\ninterface BasicFeature {\n  end: number\n  start: number\n  refName: string\n}\n\n// hashmap of refName->array of features\ntype FeaturesPerRef = Record<string, BasicFeature[]>\n\nexport function gatherOverlaps(regions: BasicFeature[]) {\n  const memo = {} as FeaturesPerRef\n  for (const x of regions) {\n    if (!memo[x.refName]) {\n      memo[x.refName] = []\n    }\n    memo[x.refName].push(x)\n  }\n\n  return Object.values(memo).flatMap(group =>\n    mergeIntervals(group.sort((a, b) => a.start - b.start)),\n  )\n}\n\nexport {\n  default as SimpleFeature,\n  type Feature,\n  type SimpleFeatureSerialized,\n  isFeature,\n} from './simpleFeature'\n\nexport function stripAlpha(str: string) {\n  const c = colord(str)\n  return c.alpha(1).toHex()\n}\n","import { nanoid } from '@jbrowse/core/util/nanoid'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport {\n  IAnyStateTreeNode,\n  Instance,\n  getParent,\n  isStateTreeNode,\n  types,\n} from 'mobx-state-tree'\nimport { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\nimport { BaseAssemblyConfigSchema } from '@jbrowse/core/assemblyManager'\n\n// locals\nimport type { BaseRootModelType } from '../RootModel/BaseRootModel'\n\n/**\n * #stateModel BaseSessionModel\n * base session shared by **all** JBrowse products. Be careful what you include\n * here, everything will use it.\n */\nexport function BaseSessionModel<\n  ROOT_MODEL_TYPE extends BaseRootModelType,\n  JB_CONFIG_SCHEMA extends AnyConfigurationSchemaType,\n>(_pluginManager: PluginManager) {\n  return types\n    .model({\n      /**\n       * #property\n       */\n      id: types.optional(types.identifier, nanoid()),\n      /**\n       * #property\n       */\n      name: types.string,\n      /**\n       * #property\n       */\n      margin: 0,\n    })\n    .volatile(() => ({\n      /**\n       * #volatile\n       * this is the globally \"selected\" object. can be anything. code that\n       * wants to deal with this should examine it to see what kind of thing it\n       * is.\n       */\n      selection: undefined as unknown,\n    }))\n    .views(self => ({\n      get root() {\n        return getParent<ROOT_MODEL_TYPE>(self)\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get jbrowse() {\n        return self.root.jbrowse\n      },\n      /**\n       * #getter\n       */\n      get rpcManager() {\n        return self.root.rpcManager\n      },\n      /**\n       * #getter\n       */\n      get configuration(): Instance<JB_CONFIG_SCHEMA> {\n        return this.jbrowse.configuration\n      },\n      /**\n       * #getter\n       */\n      get adminMode() {\n        return self.root.adminMode\n      },\n\n      /**\n       * #getter\n       */\n      get textSearchManager() {\n        return self.root.textSearchManager\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get assemblies(): Instance<BaseAssemblyConfigSchema>[] {\n        return self.jbrowse.assemblies\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       * set the global selection, i.e. the globally-selected object. can be a\n       * feature, a view, just about anything\n       */\n      setSelection(thing: unknown) {\n        self.selection = thing\n      },\n\n      /**\n       * #action\n       * clears the global selection\n       */\n      clearSelection() {\n        self.selection = undefined\n      },\n    }))\n}\n\n/** Session mixin MST type for the most basic session */\nexport type BaseSessionType = ReturnType<typeof BaseSessionModel>\n\n/** Instance of the most basic possible session */\nexport type BaseSession = Instance<BaseSessionType>\n\n/** Type guard for BaseSession */\nexport function isBaseSession(thing: IAnyStateTreeNode): thing is BaseSession {\n  return 'id' in thing && 'name' in thing && 'root' in thing\n}\n\n/** Type guard for whether a thing is JBrowse session */\nexport function isSession(thing: unknown): thing is BaseSession {\n  return isStateTreeNode(thing) && isBaseSession(thing)\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { IAnyStateTreeNode, Instance, types } from 'mobx-state-tree'\nimport { BaseConnectionConfigModel } from '@jbrowse/core/pluggableElementTypes/models/baseConnectionConfig'\nimport { BaseConnectionModel } from '@jbrowse/core/pluggableElementTypes/models/BaseConnectionModelFactory'\n\n// locals\nimport type { BaseRootModelType } from '../RootModel/BaseRootModel'\nimport type { SessionWithReferenceManagementType } from './ReferenceManagement'\nimport { isBaseSession } from './BaseSession'\n\n/**\n * #stateModel ConnectionManagementSessionMixin\n */\nexport function ConnectionManagementSessionMixin(pluginManager: PluginManager) {\n  return types\n    .model({\n      /**\n       * #property\n       */\n      connectionInstances: types.array(\n        pluginManager.pluggableMstType(\n          'connection',\n          'stateModel',\n        ) as BaseConnectionModel,\n      ),\n    })\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get connections(): BaseConnectionConfigModel[] {\n        const { jbrowse } = self as typeof self & Instance<BaseRootModelType>\n        return jbrowse.connections\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      makeConnection(\n        configuration: AnyConfigurationModel,\n        initialSnapshot = {},\n      ) {\n        const type = configuration.type as string\n        if (!type) {\n          throw new Error('track configuration has no `type` listed')\n        }\n        const name = readConfObject(configuration, 'name')\n        const connectionType = pluginManager.getConnectionType(type)\n        if (!connectionType) {\n          throw new Error(`unknown connection type ${type}`)\n        }\n        const length = self.connectionInstances.push({\n          ...initialSnapshot,\n          name,\n          // @ts-expect-error unsure why ts doesn't like `type` here, but is\n          // needed\n          type,\n          configuration,\n        })\n        return self.connectionInstances[length - 1]\n      },\n\n      /**\n       * #action\n       */\n      prepareToBreakConnection(configuration: AnyConfigurationModel) {\n        const root = self as typeof self &\n          Instance<SessionWithReferenceManagementType>\n        const callbacksToDeref: Function[] = []\n        const derefTypeCount: Record<string, number> = {}\n        const name = readConfObject(configuration, 'name')\n        const connection = self.connectionInstances.find(c => c.name === name)\n        if (!connection) {\n          return undefined\n        }\n        for (const track of connection.tracks) {\n          const ref = root.getReferring(track)\n          root.removeReferring(ref, track, callbacksToDeref, derefTypeCount)\n        }\n        return [\n          () => {\n            callbacksToDeref.forEach(cb => cb())\n            this.breakConnection(configuration)\n          },\n          derefTypeCount,\n        ]\n      },\n\n      /**\n       * #action\n       */\n      breakConnection(configuration: AnyConfigurationModel) {\n        const name = readConfObject(configuration, 'name')\n        const connection = self.connectionInstances.find(c => c.name === name)\n        if (!connection) {\n          throw new Error(`no connection found with name ${name}`)\n        }\n        self.connectionInstances.remove(connection)\n      },\n\n      /**\n       * #action\n       */\n      deleteConnection(configuration: AnyConfigurationModel) {\n        const { jbrowse } = self as typeof self & Instance<BaseRootModelType>\n        return jbrowse.deleteConnectionConf(configuration)\n      },\n\n      /**\n       * #action\n       */\n      addConnectionConf(connectionConf: AnyConfigurationModel) {\n        const { jbrowse } = self as typeof self & Instance<BaseRootModelType>\n        return jbrowse.addConnectionConf(connectionConf)\n      },\n\n      /**\n       * #action\n       */\n      clearConnections() {\n        self.connectionInstances.clear()\n      },\n    }))\n}\n\n/** Session mixin MST type for a session that has connections */\nexport type SessionWithConnectionsType = ReturnType<\n  typeof ConnectionManagementSessionMixin\n>\n\n/** Instance of a session that has connections: `connectionInstances`,\n * `makeConnection()`, etc. */\nexport type SessionWithConnections = Instance<SessionWithConnectionsType>\n\n/** Type guard for SessionWithConnections */\nexport function isSessionWithConnections(\n  session: IAnyStateTreeNode,\n): session is SessionWithConnections {\n  return isBaseSession(session) && 'connectionInstances' in session\n}\n","import { lazy } from 'react'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport UCSCTrackHubConnectionF from './ucsc-trackhub'\nimport AddTrackWidgetF from './AddTrackWidget'\n\nimport AddConnectionWidgetF from './AddConnectionWidget'\nimport PluginStoreWidgetF from './PluginStoreWidget'\nimport HierarchicalTrackSelectorWidgetF from './HierarchicalTrackSelectorWidget'\n\nconst AssemblyManager = lazy(() => import('./AssemblyManager'))\n\nexport default class extends Plugin {\n  name = 'DataManagementPlugin'\n\n  exports = {\n    AssemblyManager,\n  }\n\n  install(pluginManager: PluginManager) {\n    UCSCTrackHubConnectionF(pluginManager)\n    AddTrackWidgetF(pluginManager)\n    HierarchicalTrackSelectorWidgetF(pluginManager)\n    AddConnectionWidgetF(pluginManager)\n    PluginStoreWidgetF(pluginManager)\n  }\n\n  configure(_pluginManager: PluginManager) {}\n}\n\nexport { AssemblyManager }\n\nexport { type AddTrackModel } from './AddTrackWidget/model'\nexport { type HierarchicalTrackSelectorModel } from './HierarchicalTrackSelectorWidget'\n","import React from 'react'\nimport {\n  Alert,\n  Button,\n  IconButton,\n  Snackbar as MUISnackbar,\n} from '@mui/material'\nimport { observer } from 'mobx-react'\n\n// icons\nimport CloseIcon from '@mui/icons-material/Close'\n\n// locals\nimport { AbstractSessionModel } from '../util'\nimport { SnackbarMessage } from './SnackbarModel'\n\ninterface SnackbarSession extends AbstractSessionModel {\n  snackbarMessages: SnackbarMessage[]\n  popSnackbarMessage: () => void\n}\n\nconst Snackbar = observer(function ({ session }: { session: SnackbarSession }) {\n  const { snackbarMessages } = session\n  const latestMessage = snackbarMessages.at(-1)\n\n  const handleClose = (_event: unknown, reason?: string) => {\n    if (reason !== 'clickaway') {\n      session.popSnackbarMessage()\n    }\n  }\n  return !!latestMessage ? (\n    <MUISnackbar\n      open\n      onClose={handleClose}\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n    >\n      <Alert\n        onClose={handleClose}\n        action={\n          latestMessage.action ? (\n            <>\n              <Button\n                color=\"inherit\"\n                onClick={e => {\n                  latestMessage.action?.onClick()\n                  handleClose(e)\n                }}\n              >\n                {latestMessage.action.name}\n              </Button>\n              <IconButton color=\"inherit\" onClick={handleClose}>\n                <CloseIcon />\n              </IconButton>\n            </>\n          ) : null\n        }\n        severity={latestMessage.level || 'warning'}\n      >\n        {latestMessage.message}\n      </Alert>\n    </MUISnackbar>\n  ) : null\n})\n\nexport default Snackbar\n","import React, { useRef, useState } from 'react'\nimport { Button, alpha } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport ArrowDropDown from '@mui/icons-material/ArrowDropDown'\n\nimport Menu, { MenuItem } from './Menu'\n\nconst useStyles = makeStyles()(theme => ({\n  buttonRoot: {\n    '&:hover': {\n      backgroundColor: alpha(\n        theme.palette.primary.contrastText,\n        theme.palette.action.hoverOpacity,\n      ),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent',\n      },\n    },\n  },\n}))\n\nconst DropDownMenu = observer(function ({\n  menuTitle,\n  session,\n  menuItems,\n}: {\n  menuTitle: string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  session: any\n  menuItems: MenuItem[]\n}) {\n  const [open, setOpen] = useState(false)\n  const anchorEl = useRef(null)\n  const { classes } = useStyles()\n\n  function handleClose() {\n    setOpen(false)\n  }\n\n  return (\n    <>\n      <Button\n        ref={anchorEl}\n        onClick={() => setOpen(!open)}\n        color=\"inherit\"\n        data-testid=\"dropDownMenuButton\"\n        classes={{ root: classes.buttonRoot }}\n      >\n        {menuTitle}\n        <ArrowDropDown />\n      </Button>\n      <Menu\n        anchorEl={anchorEl.current}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n        onMenuItemClick={(_event, callback) => {\n          callback(session)\n          handleClose()\n        }}\n        open={open}\n        onClose={handleClose}\n        menuItems={menuItems}\n      />\n    </>\n  )\n})\n\nexport default DropDownMenu\n","import React from 'react'\nimport { observer } from 'mobx-react'\n\n// locals\nimport { readConfObject, AnyConfigurationModel } from '../configuration'\n\n// ui elements\nimport { LogoFull } from './Logo'\n\nconst Logo = observer(function ({\n  session,\n}: {\n  session: { configuration: AnyConfigurationModel }\n}) {\n  const { configuration } = session\n  const logoPath = readConfObject(configuration, 'logoPath')\n  return logoPath?.uri ? (\n    <img src={logoPath.uri} alt=\"Custom logo\" />\n  ) : (\n    <LogoFull variant=\"white\" />\n  )\n})\n\nexport default Logo\n","import React from 'react'\nimport { Toolbar, Tooltip } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { SessionWithDrawerWidgets } from '@jbrowse/core/util'\nimport DropDownMenu from '@jbrowse/core/ui/DropDownMenu'\nimport EditableTypography from '@jbrowse/core/ui/EditableTypography'\nimport AppLogo from '@jbrowse/core/ui/AppLogo'\nimport { MenuItem as JBMenuItem } from '@jbrowse/core/ui/Menu'\nimport { SnackbarMessage } from '@jbrowse/core/ui/SnackbarModel'\n\nconst useStyles = makeStyles()(theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n  inputBase: {\n    color: theme.palette.primary.contrastText,\n  },\n  inputRoot: {\n    '&:hover': {\n      backgroundColor: theme.palette.primary.light,\n    },\n  },\n  inputFocused: {\n    borderColor: theme.palette.secondary.main,\n    backgroundColor: theme.palette.primary.light,\n  },\n}))\n\ntype AppSession = SessionWithDrawerWidgets & {\n  savedSessionNames: string[]\n  menus: { label: string; menuItems: JBMenuItem[] }[]\n  renameCurrentSession: (arg: string) => void\n  snackbarMessages: SnackbarMessage[]\n  popSnackbarMessage: () => unknown\n}\n\nconst AppToolbar = observer(function ({\n  session,\n  HeaderButtons = <div />,\n}: {\n  HeaderButtons?: React.ReactElement\n  session: AppSession\n}) {\n  const { classes } = useStyles()\n  const { savedSessionNames, name, menus } = session\n\n  return (\n    <Toolbar>\n      {menus.map(menu => (\n        <DropDownMenu\n          key={menu.label}\n          menuTitle={menu.label}\n          menuItems={menu.menuItems}\n          session={session}\n        />\n      ))}\n      <div className={classes.grow} />\n      <Tooltip title=\"Rename Session\" arrow>\n        <EditableTypography\n          value={name}\n          setValue={newName => {\n            if (savedSessionNames?.includes(newName)) {\n              session.notify(\n                `Cannot rename session to \"${newName}\", a saved session with that name already exists`,\n                'warning',\n              )\n            } else {\n              session.renameCurrentSession(newName)\n            }\n          }}\n          variant=\"body1\"\n          classes={{\n            inputBase: classes.inputBase,\n            inputRoot: classes.inputRoot,\n            inputFocused: classes.inputFocused,\n          }}\n        />\n      </Tooltip>\n      {HeaderButtons}\n      <div className={classes.grow} />\n      <div style={{ width: 150, maxHeight: 48 }}>\n        <AppLogo session={session} />\n      </div>\n    </Toolbar>\n  )\n})\n\nexport default AppToolbar\n","import React, { useState } from 'react'\nimport {\n  Button,\n  FormControl,\n  MenuItem,\n  Paper,\n  Select,\n  Typography,\n} from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport { getEnv, SessionWithDrawerWidgets } from '@jbrowse/core/util'\n\n// ui elements\nimport { MenuItem as JBMenuItem } from '@jbrowse/core/ui/Menu'\nimport { SnackbarMessage } from '@jbrowse/core/ui/SnackbarModel'\n\ntype AppSession = SessionWithDrawerWidgets & {\n  savedSessionNames: string[]\n  menus: { label: string; menuItems: JBMenuItem[] }[]\n  renameCurrentSession: (arg: string) => void\n  snackbarMessages: SnackbarMessage[]\n  popSnackbarMessage: () => unknown\n}\n\nconst useStyles = makeStyles()(theme => ({\n  selectPaper: {\n    padding: theme.spacing(4),\n  },\n}))\n\nconst ViewLauncher = observer(({ session }: { session: AppSession }) => {\n  const { classes } = useStyles()\n  const { pluginManager } = getEnv(session)\n  const viewTypes = pluginManager.getElementTypeRecord('view').all()\n  const [value, setValue] = useState(viewTypes[0]?.name)\n  return (\n    <Paper className={classes.selectPaper}>\n      <Typography>Select a view to launch</Typography>\n      <FormControl style={{ margin: 2 }}>\n        <Select value={value} onChange={event => setValue(event.target.value)}>\n          {viewTypes.map(({ displayName, name }) => (\n            <MenuItem key={name} value={name}>\n              {displayName}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl style={{ margin: 2 }}>\n        <Button\n          onClick={() => session.addView(value, {})}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Launch view\n        </Button>\n      </FormControl>\n    </Paper>\n  )\n})\n\nexport default ViewLauncher\n","import React from 'react'\nimport {\n  SvgIconProps,\n  IconButtonProps as IconButtonPropsType,\n} from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { AbstractSessionModel, getSession } from '@jbrowse/core/util'\nimport CascadingMenuButton from '@jbrowse/core/ui/CascadingMenuButton'\nimport { IBaseViewModel } from '@jbrowse/core/pluggableElementTypes/models'\n\n// icons\nimport MenuIcon from '@mui/icons-material/Menu'\nimport ArrowDownward from '@mui/icons-material/ArrowDownward'\nimport ArrowUpward from '@mui/icons-material/ArrowUpward'\n\nconst ViewMenu = observer(function ({\n  model,\n  IconProps,\n}: {\n  model: IBaseViewModel\n  IconButtonProps?: IconButtonPropsType\n  IconProps: SvgIconProps\n}) {\n  const { menuItems } = model\n  const session = getSession(model) as AbstractSessionModel & {\n    moveViewDown: (arg: string) => void\n    moveViewUp: (arg: string) => void\n  }\n\n  const items = [\n    ...(session.views.length > 1\n      ? [\n          {\n            label: 'Move view up',\n            icon: ArrowUpward,\n            onClick: () => session.moveViewUp(model.id),\n          },\n          {\n            label: 'Move view down',\n            icon: ArrowDownward,\n            onClick: () => session.moveViewDown(model.id),\n          },\n        ]\n      : []),\n\n    // <=1.3.3 didn't use a function, so check as value also\n    ...((typeof menuItems === 'function' ? menuItems() : menuItems) || []),\n  ]\n\n  return items.length ? (\n    <CascadingMenuButton menuItems={items} data-testid=\"view_menu_icon\">\n      <MenuIcon {...IconProps} fontSize=\"small\" />\n    </CascadingMenuButton>\n  ) : null\n})\nexport default ViewMenu\n","import React from 'react'\nimport { Tooltip } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\n\n// locals\nimport EditableTypography from '@jbrowse/core/ui/EditableTypography'\nimport { IBaseViewModel } from '@jbrowse/core/pluggableElementTypes'\n\nconst useStyles = makeStyles()(theme => ({\n  input: {\n    paddingBottom: 0,\n    paddingTop: 2,\n  },\n  inputBase: {\n    color: theme.palette.secondary.contrastText,\n  },\n  inputRoot: {\n    '&:hover': {\n      backgroundColor: theme.palette.secondary.light,\n    },\n  },\n  inputFocused: {\n    borderColor: theme.palette.primary.main,\n    backgroundColor: theme.palette.secondary.light,\n  },\n}))\nconst ViewContainerTitle = observer(function ({\n  view,\n}: {\n  view: IBaseViewModel\n}) {\n  const { classes } = useStyles()\n  return (\n    <Tooltip title=\"Rename view\" arrow>\n      <EditableTypography\n        value={\n          view.displayName ||\n          // @ts-expect-error\n          `${view.assemblyNames?.join(',') || 'Untitled view'}${\n            view.minimized ? ' (minimized)' : ''\n          }`\n        }\n        setValue={val => view.setDisplayName(val)}\n        variant=\"body2\"\n        classes={{\n          input: classes.input,\n          inputBase: classes.inputBase,\n          inputRoot: classes.inputRoot,\n          inputFocused: classes.inputFocused,\n        }}\n      />\n    </Tooltip>\n  )\n})\n\nexport default ViewContainerTitle\n","import React, { useEffect, useRef } from 'react'\nimport { IconButton, Paper, useTheme } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { getSession, useWidthSetter } from '@jbrowse/core/util'\nimport clsx from 'clsx'\nimport { IBaseViewModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport { SessionWithFocusedViewAndDrawerWidgets } from '@jbrowse/core/util'\n\n// icons\nimport CloseIcon from '@mui/icons-material/Close'\nimport MinimizeIcon from '@mui/icons-material/Minimize'\nimport AddIcon from '@mui/icons-material/Add'\n\n// locals\nimport ViewMenu from './ViewMenu'\nimport ViewContainerTitle from './ViewContainerTitle'\n\nconst useStyles = makeStyles()(theme => ({\n  viewContainer: {\n    overflow: 'hidden',\n    margin: theme.spacing(0.5),\n    padding: `0 ${theme.spacing(1)} ${theme.spacing(1)}`,\n  },\n  icon: {\n    color: theme.palette.secondary.contrastText,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  focusedView: {\n    background: theme.palette.secondary.main,\n  },\n  unfocusedView: {\n    background: theme.palette.secondary.dark,\n  },\n}))\n\nconst ViewContainer = observer(function ({\n  view,\n  onClose,\n  onMinimize,\n  children,\n}: {\n  view: IBaseViewModel\n  onClose: () => void\n  onMinimize: () => void\n  children: React.ReactNode\n}) {\n  const { classes } = useStyles()\n  const theme = useTheme()\n  const ref = useWidthSetter(view, theme.spacing(1))\n  const scrollRef = useRef<HTMLDivElement>(null)\n  const session = getSession(view) as SessionWithFocusedViewAndDrawerWidgets\n\n  // scroll the view into view when first mounted. note: this effect will run\n  // only once, because of the empty array second param\n  useEffect(() => {\n    scrollRef.current?.scrollIntoView?.({ block: 'center' })\n  }, [])\n\n  useEffect(() => {\n    function handleSelectView(e: Event) {\n      if (e.target instanceof Element) {\n        if (ref?.current && ref.current.contains(e.target)) {\n          session.setFocusedViewId(view.id)\n        }\n      }\n    }\n\n    document.addEventListener('mousedown', handleSelectView)\n    document.addEventListener('keydown', handleSelectView)\n    return () => {\n      document.removeEventListener('mousedown', handleSelectView)\n      document.removeEventListener('keydown', handleSelectView)\n    }\n  }, [ref, session, view])\n\n  return (\n    <Paper\n      ref={ref}\n      elevation={12}\n      className={clsx(\n        classes.viewContainer,\n        session.focusedViewId === view.id\n          ? classes.focusedView\n          : classes.unfocusedView,\n      )}\n    >\n      <div ref={scrollRef} style={{ display: 'flex' }}>\n        <ViewMenu model={view} IconProps={{ className: classes.icon }} />\n        <div className={classes.grow} />\n\n        <ViewContainerTitle view={view} />\n        <div className={classes.grow} />\n        <IconButton data-testid=\"minimize_view\" onClick={onMinimize}>\n          {view.minimized ? (\n            <AddIcon className={classes.icon} fontSize=\"small\" />\n          ) : (\n            <MinimizeIcon className={classes.icon} fontSize=\"small\" />\n          )}\n        </IconButton>\n        <IconButton data-testid=\"close_view\" onClick={onClose}>\n          <CloseIcon className={classes.icon} fontSize=\"small\" />\n        </IconButton>\n      </div>\n      <Paper>{children}</Paper>\n    </Paper>\n  )\n})\n\nexport default ViewContainer\n","import React, { Suspense } from 'react'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport { observer } from 'mobx-react'\n\n// locals\nimport {\n  getEnv,\n  AbstractViewModel,\n  SessionWithDrawerWidgets,\n} from '@jbrowse/core/util'\nimport { SnackbarMessage } from '@jbrowse/core/ui/SnackbarModel'\n\n// ui elements\nimport ErrorMessage from '@jbrowse/core/ui/ErrorMessage'\nimport LoadingEllipses from '@jbrowse/core/ui/LoadingEllipses'\nimport { MenuItem as JBMenuItem } from '@jbrowse/core/ui/Menu'\n\n// locals\nimport ViewContainer from './ViewContainer'\n\ntype AppSession = SessionWithDrawerWidgets & {\n  savedSessionNames: string[]\n  menus: { label: string; menuItems: JBMenuItem[] }[]\n  snackbarMessages: SnackbarMessage[]\n  renameCurrentSession: (arg: string) => void\n  popSnackbarMessage: () => unknown\n}\n\nconst ViewPanel = observer(function ({\n  view,\n  session,\n}: {\n  view: AbstractViewModel\n  session: AppSession\n}) {\n  const { pluginManager } = getEnv(session)\n  const viewType = pluginManager.getViewType(view.type)\n  if (!viewType) {\n    throw new Error(`unknown view type ${view.type}`)\n  }\n  const { ReactComponent } = viewType\n  return (\n    <ViewContainer\n      view={view}\n      onClose={() => session.removeView(view)}\n      onMinimize={() => view.setMinimized(!view.minimized)}\n    >\n      {!view.minimized ? (\n        <ErrorBoundary\n          FallbackComponent={({ error }) => <ErrorMessage error={error} />}\n        >\n          <Suspense fallback={<LoadingEllipses variant=\"h6\" />}>\n            <ReactComponent model={view} session={session} />\n          </Suspense>\n        </ErrorBoundary>\n      ) : (\n        false\n      )}\n    </ViewContainer>\n  )\n})\n\nexport default ViewPanel\n","import React, { Suspense } from 'react'\nimport { observer } from 'mobx-react'\n\n// locals\nimport { SessionWithDrawerWidgets } from '@jbrowse/core/util'\n\nconst DialogQueue = observer(function ({\n  session,\n}: {\n  session: SessionWithDrawerWidgets\n}) {\n  const { DialogComponent, DialogProps } = session\n  return (\n    <>\n      {DialogComponent ? (\n        <Suspense fallback={<React.Fragment />}>\n          <DialogComponent {...DialogProps} />\n        </Suspense>\n      ) : null}\n    </>\n  )\n})\n\nexport default DialogQueue\n","import React from 'react'\nimport { Fab, Tooltip } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { SessionWithDrawerWidgets } from '@jbrowse/core/util'\n\n// icons\nimport LaunchIcon from '@mui/icons-material/Launch'\n\nconst useStyles = makeStyles()(theme => ({\n  left: {\n    zIndex: 10000,\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    left: theme.spacing(2),\n  },\n  right: {\n    zIndex: 10000,\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}))\n\nconst AppFab = observer(function ({\n  session,\n}: {\n  session: SessionWithDrawerWidgets\n}) {\n  const { minimized, activeWidgets, drawerPosition } = session\n  const { classes } = useStyles()\n\n  return activeWidgets.size > 0 && minimized ? (\n    <Tooltip title=\"Open drawer widget\">\n      <Fab\n        className={drawerPosition === 'right' ? classes.right : classes.left}\n        color=\"primary\"\n        data-testid=\"drawer-maximize\"\n        onClick={() => session.showWidgetDrawer()}\n      >\n        <LaunchIcon />\n      </Fab>\n    </Tooltip>\n  ) : null\n})\n\nexport default AppFab\n","import React, { Suspense, lazy } from 'react'\nimport { AppBar } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { SessionWithFocusedViewAndDrawerWidgets } from '@jbrowse/core/util'\nimport Snackbar from '@jbrowse/core/ui/Snackbar'\nimport { SnackbarMessage } from '@jbrowse/core/ui/SnackbarModel'\nimport { MenuItem as JBMenuItem } from '@jbrowse/core/ui/Menu'\n\n// locals\nimport AppToolbar from './AppToolbar'\nimport ViewLauncher from './ViewLauncher'\nimport ViewPanel from './ViewPanel'\nimport DialogQueue from './DialogQueue'\nimport AppFab from './AppFab'\n\nconst DrawerWidget = lazy(() => import('./DrawerWidget'))\n\nconst useStyles = makeStyles()(theme => ({\n  root: {\n    display: 'grid',\n    height: '100vh',\n    width: '100%',\n    colorScheme: theme.palette.mode,\n  },\n  appContainer: {\n    gridColumn: 'main',\n    display: 'grid',\n    gridTemplateRows: '[menubar] min-content [components] auto',\n    height: '100vh',\n  },\n  viewContainer: {\n    overflowY: 'auto',\n    gridRow: 'components',\n  },\n  appBar: {\n    flexGrow: 1,\n    gridRow: 'menubar',\n  },\n}))\n\ninterface Props {\n  HeaderButtons?: React.ReactElement\n  session: SessionWithFocusedViewAndDrawerWidgets & {\n    savedSessionNames: string[]\n    menus: { label: string; menuItems: JBMenuItem[] }[]\n    renameCurrentSession: (arg: string) => void\n    snackbarMessages: SnackbarMessage[]\n    popSnackbarMessage: () => unknown\n  }\n}\n\nconst LazyDrawerWidget = observer(function (props: Props) {\n  const { session } = props\n  return (\n    <Suspense fallback={<React.Fragment />}>\n      <DrawerWidget session={session} />\n    </Suspense>\n  )\n})\n\nconst ViewContainer = observer(function (props: Props) {\n  const { session } = props\n  const { views } = session\n  const { classes } = useStyles()\n  return (\n    <div className={classes.viewContainer}>\n      {views.length > 0 ? (\n        views.map(view => (\n          <ViewPanel key={`view-${view.id}`} view={view} session={session} />\n        ))\n      ) : (\n        <ViewLauncher {...props} />\n      )}\n\n      {/* blank space at the bottom of screen allows scroll */}\n      <div style={{ height: 300 }} />\n    </div>\n  )\n})\n\nconst App = observer(function (props: Props) {\n  const { session } = props\n  const { classes } = useStyles()\n  const { minimized, visibleWidget, drawerWidth, drawerPosition } = session\n  const drawerVisible = visibleWidget && !minimized\n  const d = drawerVisible ? `[drawer] ${drawerWidth}px` : undefined\n  const grid =\n    drawerPosition === 'right' ? ['[main] 1fr', d] : [d, '[main] 1fr']\n\n  return (\n    <div\n      className={classes.root}\n      style={{ gridTemplateColumns: grid?.filter(f => !!f).join(' ') }}\n    >\n      {drawerVisible && drawerPosition === 'left' ? (\n        <LazyDrawerWidget session={session} />\n      ) : null}\n      <DialogQueue session={session} />\n      <div className={classes.appContainer}>\n        <AppBar className={classes.appBar} position=\"static\">\n          <AppToolbar {...props} />\n        </AppBar>\n        <ViewContainer {...props} />\n      </div>\n      <AppFab session={session} />\n\n      {drawerVisible && drawerPosition === 'right' ? (\n        <LazyDrawerWidget session={session} />\n      ) : null}\n\n      <Snackbar session={session} />\n    </div>\n  )\n})\n\nexport { App }\n","// adapted from https://github.com/mobxjs/mobx-state-tree/blob/master/packages/mst-middlewares/src/time-traveller.ts\nimport {\n  types,\n  resolvePath,\n  getEnv,\n  onSnapshot,\n  getSnapshot,\n  applySnapshot,\n  IDisposer,\n  IAnyStateTreeNode,\n} from 'mobx-state-tree'\n\nconst MAX_HISTORY_LENGTH = 20\n\nfunction debounce(func: (...args: unknown[]) => void, timeout = 300) {\n  let timer: ReturnType<typeof setTimeout>\n  return (...args: unknown[]) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => func(...args), timeout)\n  }\n}\n\nconst TimeTraveller = types\n  .model('TimeTraveller', {\n    undoIdx: -1,\n    targetPath: '',\n  })\n  .volatile(() => ({\n    history: [] as unknown[],\n    notTrackingUndo: false,\n  }))\n  .views(self => ({\n    get canUndo() {\n      return self.undoIdx > 0 && !self.notTrackingUndo\n    },\n    get canRedo() {\n      return self.undoIdx < self.history.length - 1 && !self.notTrackingUndo\n    },\n  }))\n  .actions(self => {\n    let targetStore: IAnyStateTreeNode\n    let snapshotDisposer: IDisposer\n    let skipNextUndoState = false\n\n    return {\n      // allows user code to (temporarily) stop tracking undo states\n      stopTrackingUndo() {\n        self.notTrackingUndo = true\n      },\n      // allows user code to resume tracking undo states\n      resumeTrackingUndo() {\n        self.notTrackingUndo = false\n      },\n      addUndoState(todos: unknown) {\n        if (self.notTrackingUndo) {\n          return\n        }\n        if (skipNextUndoState) {\n          // skip recording if this state was caused by undo / redo\n          skipNextUndoState = false\n          return\n        }\n        self.history.splice(self.undoIdx + 1)\n        self.history.push(todos)\n        if (self.history.length > MAX_HISTORY_LENGTH) {\n          self.history.shift()\n        }\n        self.undoIdx = self.history.length - 1\n      },\n\n      beforeDestroy() {\n        snapshotDisposer()\n      },\n      initialize() {\n        targetStore = self.targetPath\n          ? resolvePath(self, self.targetPath)\n          : getEnv(self).targetStore\n\n        if (!targetStore) {\n          throw new Error(\n            'Failed to find target store for TimeTraveller. Please provide `targetPath` property, or a `targetStore` in the environment',\n          )\n        }\n\n        snapshotDisposer = onSnapshot(\n          targetStore,\n          debounce((snapshot: unknown) => this.addUndoState(snapshot), 300),\n        )\n        if (self.history.length === 0) {\n          this.addUndoState(getSnapshot(targetStore))\n        }\n      },\n      undo() {\n        self.undoIdx--\n        skipNextUndoState = true\n        applySnapshot(targetStore, self.history[self.undoIdx])\n      },\n      redo() {\n        self.undoIdx++\n        skipNextUndoState = true\n        applySnapshot(targetStore, self.history[self.undoIdx])\n      },\n    }\n  })\n\nexport default TimeTraveller\n","import { ConfigurationSchema } from '../configuration'\n\n/**\n * #config BaseRpcDriver\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst BaseRpcDriverConfigSchema = ConfigurationSchema(\n  'BaseRpcDriver',\n  {\n    /**\n     * #slot\n     */\n    workerCount: {\n      type: 'number',\n      description:\n        'The number of workers to use. If 0 (the default) JBrowse will decide how many workers to use.',\n      defaultValue: 0,\n    },\n  },\n  { explicitlyTyped: true },\n)\nexport default BaseRpcDriverConfigSchema\n","import { ConfigurationSchema } from '../configuration'\nimport BaseRpcDriverConfigSchema from './baseRpcConfig'\n\n/**\n * #config WebWorkerRpcDriver\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst WebWorkerRpcDriverConfigSchema = ConfigurationSchema(\n  'WebWorkerRpcDriver',\n  {},\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: BaseRpcDriverConfigSchema,\n    explicitlyTyped: true,\n  },\n)\nexport default WebWorkerRpcDriverConfigSchema\n","import { ConfigurationSchema } from '../configuration'\nimport BaseRpcDriverConfigSchema from './baseRpcConfig'\n\n/**\n * #config MainThreadRpcDriver\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst MainThreadRpcDriverConfigSchema = ConfigurationSchema(\n  'MainThreadRpcDriver',\n  {},\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: BaseRpcDriverConfigSchema,\n    explicitlyTyped: true,\n  },\n)\nexport default MainThreadRpcDriverConfigSchema\n","import { types } from 'mobx-state-tree'\nimport { ConfigurationSchema } from '../configuration'\nimport WebWorkerRpcDriverConfigSchema from './webWorkerRpcConfig'\nimport MainThreadRpcDriverConfigSchema from './mainThreadRpcConfig'\n\n/**\n * #config RpcOptions\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport default ConfigurationSchema(\n  'RpcOptions',\n  {\n    /**\n     * #slot\n     */\n    defaultDriver: {\n      type: 'string',\n      description:\n        'the RPC driver to use for tracks and tasks that are not configured to use a specific RPC backend',\n      defaultValue: 'MainThreadRpcDriver',\n    },\n    /**\n     * #slot\n     */\n    drivers: types.optional(\n      types.map(\n        types.union(\n          MainThreadRpcDriverConfigSchema,\n          WebWorkerRpcDriverConfigSchema,\n        ),\n      ),\n      {\n        MainThreadRpcDriver: { type: 'MainThreadRpcDriver' },\n        WebWorkerRpcDriver: { type: 'WebWorkerRpcDriver' },\n      },\n    ),\n  },\n  {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    actions: (self: any) => ({\n      addDriverConfig(configName: string, configSnapshot: { type: string }) {\n        self.drivers.set(configName, configSnapshot)\n      },\n    }),\n  },\n)\n","import { isAlive, isStateTreeNode } from 'mobx-state-tree'\nimport { clamp } from '../util'\nimport { serializeAbortSignal } from './remoteAbortSignals'\nimport PluginManager from '../PluginManager'\nimport { readConfObject, AnyConfigurationModel } from '../configuration'\n\nexport interface WorkerHandle {\n  status?: string\n  error?: Error\n  on?: (channel: string, callback: (message: string) => void) => void\n  off?: (channel: string, callback: (message: string) => void) => void\n  destroy(): void\n  call(\n    functionName: string,\n    args?: unknown,\n    options?: {\n      statusCallback?(message: string): void\n      timeout?: number\n      rpcDriverClassName: string\n    },\n  ): Promise<unknown>\n}\n\nexport interface RpcDriverConstructorArgs {\n  config: AnyConfigurationModel\n}\n\nfunction isClonable(thing: unknown) {\n  return !(typeof thing === 'function') && !(thing instanceof Error)\n}\n\n// watches the given worker object, returns a promise that will be rejected if\n// the worker times out\nexport async function watchWorker(\n  worker: WorkerHandle,\n  pingTime: number,\n  rpcDriverClassName: string,\n) {\n  // after first ping succeeds, apply wait for timeout\n  while (true) {\n    await worker.call('ping', [], {\n      timeout: pingTime * 2,\n      rpcDriverClassName,\n    })\n    await new Promise(resolve => setTimeout(resolve, pingTime))\n  }\n}\n\nfunction detectHardwareConcurrency() {\n  const mainThread = typeof window !== 'undefined'\n  const canDetect = mainThread && 'hardwareConcurrency' in window.navigator\n  if (mainThread && canDetect) {\n    return window.navigator.hardwareConcurrency\n  }\n  return 1\n}\nclass LazyWorker {\n  workerP?: Promise<WorkerHandle> | undefined\n\n  constructor(public driver: BaseRpcDriver) {}\n\n  async getWorker() {\n    if (!this.workerP) {\n      this.workerP = this.driver\n        .makeWorker()\n        .then(worker => {\n          watchWorker(worker, this.driver.maxPingTime, this.driver.name).catch(\n            error => {\n              if (worker) {\n                console.error(\n                  'worker did not respond, killing and generating new one',\n                )\n                console.error(error)\n                worker.destroy()\n                worker.status = 'killed'\n                worker.error = error\n                this.workerP = undefined\n              }\n            },\n          )\n          return worker\n        })\n        .catch(e => {\n          this.workerP = undefined\n          throw e\n        })\n    }\n    return this.workerP\n  }\n}\n\nexport default abstract class BaseRpcDriver {\n  abstract name: string\n\n  private lastWorkerAssignment = -1\n\n  private workerAssignments = new Map<string, number>() // sessionId -> worker number\n\n  abstract makeWorker(): Promise<WorkerHandle>\n\n  private workerPool?: LazyWorker[]\n\n  maxPingTime = 30000\n\n  workerCheckFrequency = 5000\n\n  config: AnyConfigurationModel\n\n  constructor(args: RpcDriverConstructorArgs) {\n    this.config = args.config\n  }\n\n  // filter the given object and just remove any non-clonable things from it\n  filterArgs<THING_TYPE>(thing: THING_TYPE, sessionId: string): THING_TYPE {\n    if (Array.isArray(thing)) {\n      return thing\n        .filter(thing => isClonable(thing))\n        .map(t => this.filterArgs(t, sessionId)) as unknown as THING_TYPE\n    }\n    if (typeof thing === 'object' && thing !== null) {\n      // AbortSignals are specially handled\n      if (thing instanceof AbortSignal) {\n        return serializeAbortSignal(\n          thing,\n          this.remoteAbort.bind(this, sessionId),\n        ) as unknown as THING_TYPE\n      }\n\n      if (isStateTreeNode(thing) && !isAlive(thing)) {\n        throw new Error('dead state tree node passed to RPC call')\n      }\n\n      // special case, don't try to iterate the file's subelements as the\n      // object entries below would\n      if (thing instanceof File) {\n        return thing\n      }\n\n      return Object.fromEntries(\n        Object.entries(thing)\n          .filter(e => isClonable(e[1]))\n          .map(([k, v]) => [k, this.filterArgs(v, sessionId)]),\n      ) as THING_TYPE\n    }\n    return thing\n  }\n\n  async remoteAbort(sessionId: string, functionName: string, signalId: number) {\n    const worker = await this.getWorker(sessionId)\n    await worker.call(\n      functionName,\n      { signalId },\n      { timeout: 1000000, rpcDriverClassName: this.name },\n    )\n  }\n\n  createWorkerPool(): LazyWorker[] {\n    const hardwareConcurrency = detectHardwareConcurrency()\n\n    const workerCount =\n      readConfObject(this.config, 'workerCount') ||\n      clamp(1, Math.max(1, hardwareConcurrency - 1), 5)\n\n    const workers = []\n    for (let i = 0; i < workerCount; i++) {\n      workers.push(new LazyWorker(this))\n    }\n    return workers\n  }\n\n  getWorkerPool() {\n    if (!this.workerPool) {\n      const res = this.createWorkerPool()\n      this.workerPool = res\n      return res // making this several steps makes TS happy\n    }\n    return this.workerPool\n  }\n\n  async getWorker(sessionId: string): Promise<WorkerHandle> {\n    const workers = this.getWorkerPool()\n    let workerNumber = this.workerAssignments.get(sessionId)\n    if (workerNumber === undefined) {\n      const workerAssignment = (this.lastWorkerAssignment + 1) % workers.length\n      this.workerAssignments.set(sessionId, workerAssignment)\n      this.lastWorkerAssignment = workerAssignment\n      workerNumber = workerAssignment\n    }\n\n    return workers[workerNumber].getWorker()\n  }\n\n  async call(\n    pluginManager: PluginManager,\n    sessionId: string,\n    functionName: string,\n    args: { statusCallback?: (message: string) => void },\n    options = {},\n  ) {\n    if (!sessionId) {\n      throw new TypeError('sessionId is required')\n    }\n    let done = false\n    const worker = await this.getWorker(sessionId)\n    const rpcMethod = pluginManager.getRpcMethodType(functionName)\n    const serializedArgs = await rpcMethod.serializeArguments(args, this.name)\n    const filteredAndSerializedArgs = this.filterArgs(serializedArgs, sessionId)\n\n    // now actually call the worker\n    const callP = worker\n      .call(functionName, filteredAndSerializedArgs, {\n        timeout: 5 * 60 * 1000, // 5 minutes\n        statusCallback: args.statusCallback,\n        rpcDriverClassName: this.name,\n        ...options,\n      })\n      .finally(() => {\n        done = true\n      })\n\n    // check every 5 seconds to see if the worker has been killed, and\n    // reject the killedP promise if it has\n    let killedCheckInterval: ReturnType<typeof setInterval>\n    const killedP = new Promise((resolve, reject) => {\n      killedCheckInterval = setInterval(() => {\n        // must've been killed\n        if (worker.status === 'killed') {\n          reject(\n            new Error(\n              `operation timed out, worker process stopped responding, ${worker.error}`,\n            ),\n          )\n        } else if (done) {\n          resolve(true)\n        }\n      }, this.workerCheckFrequency)\n    }).finally(() => {\n      clearInterval(killedCheckInterval)\n    })\n\n    // the result is a race between the actual result promise, and the \"killed\"\n    // promise. the killed promise will only actually win if the worker was\n    // killed before the call could return\n    const resultP = Promise.race([callP, killedP])\n    return rpcMethod.deserializeReturn(resultP, args, this.name)\n  }\n}\n","import Rpc from 'librpc-web-mod'\nimport { deserializeError } from 'serialize-error'\n\n// locals\nimport { nanoid } from '../util/nanoid'\nimport BaseRpcDriver, { RpcDriverConstructorArgs } from './BaseRpcDriver'\nimport { PluginDefinition } from '../PluginLoader'\n\ninterface WebWorkerRpcDriverConstructorArgs extends RpcDriverConstructorArgs {\n  makeWorkerInstance: () => Worker\n}\n\ninterface Options {\n  statusCallback?: (arg0: string) => void\n  rpcDriverClassName: string\n}\n\nclass WebWorkerHandle extends Rpc.Client {\n  destroy(): void {\n    this.workers[0].terminate()\n  }\n\n  async call(funcName: string, args: Record<string, unknown>, opts: Options) {\n    const { statusCallback, rpcDriverClassName } = opts\n    const channel = `message-${nanoid()}`\n    const listener = (message: string) => {\n      statusCallback?.(message)\n    }\n    this.on(channel, listener)\n    const result = await super.call(\n      funcName,\n      { ...args, channel, rpcDriverClassName },\n      opts,\n    )\n    this.off(channel, listener)\n    return result\n  }\n}\n\nexport default class WebWorkerRpcDriver extends BaseRpcDriver {\n  name = 'WebWorkerRpcDriver'\n\n  makeWorkerInstance: () => Worker\n\n  constructor(\n    args: WebWorkerRpcDriverConstructorArgs,\n    public workerBootConfiguration: {\n      plugins: PluginDefinition[]\n      windowHref: string\n    },\n  ) {\n    super(args)\n    this.makeWorkerInstance = args.makeWorkerInstance\n  }\n\n  async makeWorker() {\n    // note that we are making a Rpc.Client connection with a worker pool of\n    // one for each worker, because we want to do our own state-group-aware\n    // load balancing rather than using librpc's builtin round-robin\n    const instance = this.makeWorkerInstance()\n\n    // @ts-ignore this is used to avoid warning in jbrowse-web startup\n    // (because this file is referred to via src, declare.d.ts file is in\n    // e.g. products/jbrowse-web)\n    const worker = new WebWorkerHandle({ workers: [instance] })\n    const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n    if (isSafari) {\n      // xref https://github.com/GMOD/jbrowse-components/issues/3245\n      // eslint-disable-next-line no-console\n      console.log(\n        'console logging the webworker handle avoids the track going into an infinite loading state, this is a hacky workaround for safari',\n        instance,\n      )\n    }\n\n    // send the worker its boot configuration using info from the pluginManager\n    return new Promise((resolve: (w: WebWorkerHandle) => void, reject) => {\n      const listener = (e: MessageEvent) => {\n        switch (e.data.message) {\n          case 'ready': {\n            resolve(worker)\n            worker.workers[0].removeEventListener('message', listener)\n            break\n          }\n          case 'readyForConfig': {\n            worker.workers[0].postMessage({\n              message: 'config',\n              config: this.workerBootConfiguration,\n            })\n            break\n          }\n          case 'error': {\n            reject(deserializeError(e.data.error))\n            break\n          }\n          // No default\n        }\n      }\n      worker.workers[0].addEventListener('message', listener)\n    })\n  }\n}\n","import BaseRpcDriver, { RpcDriverConstructorArgs } from './BaseRpcDriver'\nimport PluginManager from '../PluginManager'\n\nclass DummyHandle {\n  destroy(): void {}\n\n  async call(\n    _functionName: string,\n    _filteredArgs?: {},\n    _options = {},\n  ): Promise<unknown> {\n    return undefined\n  }\n}\n\n/**\n * Stub RPC driver class that runs RPC functions in-band in the main thread.\n *\n * @param rpcFuncs - object containing runnable rpc functions\n */\nexport default class MainThreadRpcDriver extends BaseRpcDriver {\n  name = 'MainThreadRpcDriver'\n\n  makeWorker: () => Promise<DummyHandle>\n\n  constructor(args: RpcDriverConstructorArgs) {\n    super(args)\n    this.makeWorker = async (): Promise<DummyHandle> => new DummyHandle()\n  }\n\n  async call(pm: PluginManager, sessionId: string, funcName: string, args: {}) {\n    if (!sessionId) {\n      throw new TypeError('sessionId is required')\n    }\n    const rpcMethod = pm.getRpcMethodType(funcName)\n    const serializedArgs = await rpcMethod.serializeArguments(args, this.name)\n    const result = await rpcMethod.execute(serializedArgs, this.name)\n    return rpcMethod.deserializeReturn(result, args, this.name)\n  }\n}\n","import PluginManager from '../PluginManager'\nimport { readConfObject, AnyConfigurationModel } from '../configuration'\nimport rpcConfigSchema from './configSchema'\nimport WebWorkerRpcDriver from './WebWorkerRpcDriver'\nimport MainThreadRpcDriver from './MainThreadRpcDriver'\n\ntype DriverClass = WebWorkerRpcDriver | MainThreadRpcDriver\ninterface BackendConfigurations {\n  WebWorkerRpcDriver?: Omit<\n    ConstructorParameters<typeof WebWorkerRpcDriver>[0],\n    'config'\n  >\n  MainThreadRpcDriver?: Omit<\n    ConstructorParameters<typeof MainThreadRpcDriver>[0],\n    'config'\n  >\n}\nconst DriverClasses = {\n  WebWorkerRpcDriver,\n  MainThreadRpcDriver,\n}\n\nexport default class RpcManager {\n  static configSchema = rpcConfigSchema\n\n  driverObjects: Map<string, DriverClass>\n\n  constructor(\n    public pluginManager: PluginManager,\n    public mainConfiguration: AnyConfigurationModel,\n    public backendConfigurations: BackendConfigurations,\n  ) {\n    if (!mainConfiguration) {\n      throw new Error('RpcManager requires at least a main configuration')\n    }\n    this.driverObjects = new Map()\n  }\n\n  getDriver(backendName: keyof typeof DriverClasses) {\n    const driver = this.driverObjects.get(backendName)\n    if (driver) {\n      return driver\n    }\n    let newDriver\n    const config = this.mainConfiguration.drivers.get('WebWorkerRpcDriver')\n    if (backendName === 'MainThreadRpcDriver') {\n      const backendConfiguration =\n        this.backendConfigurations.MainThreadRpcDriver\n\n      if (!backendConfiguration) {\n        throw new Error(\n          `requested RPC driver \"${backendName}\" is missing config`,\n        )\n      }\n      newDriver = new MainThreadRpcDriver({ ...backendConfiguration, config })\n    } else if (backendName === 'WebWorkerRpcDriver') {\n      const backendConfiguration = this.backendConfigurations.WebWorkerRpcDriver\n      if (!backendConfiguration) {\n        throw new Error(\n          `requested RPC driver \"${backendName}\" is missing config`,\n        )\n      }\n      newDriver = new WebWorkerRpcDriver(\n        { ...backendConfiguration, config },\n        {\n          plugins: this.pluginManager.runtimePluginDefinitions,\n          windowHref: window.location.href,\n        },\n      )\n    } else {\n      throw new Error(`requested RPC driver \"${backendName}\" is not installed`)\n    }\n    this.driverObjects.set(backendName, newDriver)\n    return newDriver\n  }\n\n  async getDriverForCall(\n    _sessionId: string,\n    _functionName: string,\n    args: { rpcDriverName?: string },\n  ) {\n    const backendName =\n      args.rpcDriverName ||\n      readConfObject(this.mainConfiguration, 'defaultDriver')\n\n    return this.getDriver(backendName)\n  }\n\n  async call(sessionId: string, functionName: string, args: {}, opts = {}) {\n    if (!sessionId) {\n      throw new Error('sessionId is required')\n    }\n    const driverForCall = await this.getDriverForCall(\n      sessionId,\n      functionName,\n      args,\n    )\n    return driverForCall.call(\n      this.pluginManager,\n      sessionId,\n      functionName,\n      args,\n      opts,\n    )\n  }\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { BaseAssemblyConfigSchema } from '@jbrowse/core/assemblyManager'\nimport { cast, getParent, getSnapshot } from 'mobx-state-tree'\nimport RpcManager from '@jbrowse/core/rpc/RpcManager'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { PluginDefinition } from '@jbrowse/core/PluginLoader'\nimport { toJS } from 'mobx'\n\n// locals\nimport { JBrowseConfigF } from '../JBrowseConfig'\n\nexport function JBrowseModelF({\n  pluginManager,\n  assemblyConfigSchema,\n}: {\n  pluginManager: PluginManager\n  assemblyConfigSchema: BaseAssemblyConfigSchema\n}) {\n  return JBrowseConfigF({ pluginManager, assemblyConfigSchema })\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get assemblyNames(): string[] {\n        return self.assemblies.map(assembly => readConfObject(assembly, 'name'))\n      },\n      /**\n       * #getter\n       */\n      get rpcManager(): RpcManager {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return getParent<any>(self).rpcManager\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      addAssemblyConf(conf: AnyConfigurationModel) {\n        const { name } = conf\n        if (!name) {\n          throw new Error('Can\\'t add assembly with no \"name\"')\n        }\n        if (self.assemblyNames.includes(name)) {\n          throw new Error(\n            `Can't add assembly with name \"${name}\", an assembly with that name already exists`,\n          )\n        }\n        const length = self.assemblies.push({\n          ...conf,\n          sequence: {\n            type: 'ReferenceSequenceTrack',\n            trackId: `${name}-${Date.now()}`,\n            ...conf.sequence,\n          },\n        })\n        return self.assemblies[length - 1]\n      },\n      /**\n       * #action\n       */\n      removeAssemblyConf(assemblyName: string) {\n        const toRemove = self.assemblies.find(a => a.name === assemblyName)\n        if (toRemove) {\n          self.assemblies.remove(toRemove)\n        }\n      },\n      /**\n       * #action\n       */\n      addTrackConf(trackConf: AnyConfigurationModel) {\n        const { type } = trackConf\n        if (!type) {\n          throw new Error(`unknown track type ${type}`)\n        }\n        const length = self.tracks.push(trackConf)\n        return self.tracks[length - 1]\n      },\n      /**\n       * #action\n       */\n      addConnectionConf(connectionConf: AnyConfigurationModel) {\n        const { type } = connectionConf\n        if (!type) {\n          throw new Error(`unknown connection type ${type}`)\n        }\n        const length = self.connections.push(connectionConf)\n        return self.connections[length - 1]\n      },\n      /**\n       * #action\n       */\n      deleteConnectionConf(configuration: AnyConfigurationModel) {\n        const elt = self.connections.find(conn => conn.id === configuration.id)\n        return self.connections.remove(elt)\n      },\n      /**\n       * #action\n       */\n      deleteTrackConf(trackConf: AnyConfigurationModel) {\n        const elt = self.tracks.find(t => t.trackId === trackConf.trackId)\n        return self.tracks.remove(elt)\n      },\n      /**\n       * #action\n       */\n      addPlugin(pluginDefinition: PluginDefinition) {\n        self.plugins.push(pluginDefinition)\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const rootModel = getParent<any>(self)\n        rootModel.setPluginsUpdated(true)\n      },\n      /**\n       * #action\n       */\n      removePlugin(pluginDefinition: PluginDefinition) {\n        self.plugins = cast(\n          self.plugins.filter(\n            plugin =>\n              plugin.url !== pluginDefinition.url ||\n              plugin.umdUrl !== pluginDefinition.umdUrl ||\n              plugin.cjsUrl !== pluginDefinition.cjsUrl ||\n              plugin.esmUrl !== pluginDefinition.esmUrl,\n          ),\n        )\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        getParent<any>(self).setPluginsUpdated(true)\n      },\n\n      /**\n       * #action\n       */\n      setDefaultSessionConf(sessionConf: AnyConfigurationModel) {\n        const newDefault =\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          getParent<any>(self).session.name === sessionConf.name\n            ? getSnapshot(sessionConf)\n            : toJS(sessionConf)\n\n        if (!newDefault.name) {\n          throw new Error(`unable to set default session to ${newDefault.name}`)\n        }\n\n        self.defaultSession = cast(newDefault)\n      },\n      /**\n       * #action\n       */\n      addInternetAccountConf(internetAccountConf: AnyConfigurationModel) {\n        const { type } = internetAccountConf\n        if (!type) {\n          throw new Error(`unknown internetAccount type ${type}`)\n        }\n        const length = self.internetAccounts.push(internetAccountConf)\n        return self.internetAccounts[length - 1]\n      },\n      /**\n       * #action\n       */\n      deleteInternetAccountConf(configuration: AnyConfigurationModel) {\n        const elt = self.internetAccounts.find(a => a.id === configuration.id)\n        return self.internetAccounts.remove(elt)\n      },\n    }))\n}\n","import {\n  AnyConfigurationSchemaType,\n  ConfigurationSchema,\n} from '@jbrowse/core/configuration'\n\nimport { PluginDefinition } from '@jbrowse/core/PluginLoader'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport RpcManager from '@jbrowse/core/rpc/RpcManager'\nimport {\n  FormatAboutConfigSchemaFactory,\n  FormatDetailsConfigSchemaFactory,\n  HierarchicalConfigSchemaFactory,\n} from '@jbrowse/product-core'\nimport { types } from 'mobx-state-tree'\n\n/**\n * #config JBrowseRootConfig\n * #category root\n * configuration in a config.json/file.jbrowse\n */\nexport function JBrowseConfigF({\n  pluginManager,\n  assemblyConfigSchema,\n}: {\n  pluginManager: PluginManager\n  assemblyConfigSchema: AnyConfigurationSchemaType\n}) {\n  return types.model('JBrowseConfig', {\n    configuration: ConfigurationSchema('Root', {\n      /**\n       * #slot configuration.rpc\n       */\n      rpc: RpcManager.configSchema,\n\n      /**\n       * #slot configuration.highResolutionScaling\n       */\n      highResolutionScaling: {\n        type: 'number',\n        defaultValue: 2,\n      },\n\n      formatDetails: FormatDetailsConfigSchemaFactory(),\n      formatAbout: FormatAboutConfigSchemaFactory(),\n\n      /*\n       * #slot configuration.shareURL\n       */\n      shareURL: {\n        type: 'string',\n        defaultValue: 'https://share.jbrowse.org/api/v1/',\n      },\n      /**\n       * #slot configuration.disableAnalytics\n       */\n      disableAnalytics: {\n        type: 'boolean',\n        defaultValue: false,\n      },\n\n      hierarchical: HierarchicalConfigSchemaFactory(),\n      /**\n       * #slot configuration.theme\n       */\n      theme: {\n        type: 'frozen',\n        defaultValue: {},\n      },\n      /**\n       * #slot configuration.extraThemes\n       */\n      extraThemes: {\n        type: 'frozen',\n        defaultValue: {},\n      },\n      /**\n       * #slot configuration.logoPath\n       */\n      logoPath: {\n        type: 'fileLocation',\n        defaultValue: { uri: '', locationType: 'UriLocation' },\n      },\n      ...pluginManager.pluginConfigurationSchemas(),\n    }),\n    /**\n     * #slot\n     * defines plugins of the format\n     * ```typescript\n     * type PluginDefinition=\n     *    { umdUrl: string, name:string } |\n     *    { url: string, name: string } |\n     *    { esmUrl: string } |\n     *    { cjsUrl: string } |\n     *    { umdLoc: { uri: string } } |\n     *    { esmLoc: { uri: string } } |\n     * ```\n     */\n    plugins: types.array(types.frozen<PluginDefinition>()),\n    /**\n     * #slot\n     * configuration of the assemblies in the instance, see BaseAssembly\n     */\n    assemblies: types.array(assemblyConfigSchema),\n    /**\n     * #slot\n     * track configuration is an array of track config schemas. multiple\n     * instances of a track can exist that use the same configuration\n     */\n    tracks: types.array(pluginManager.pluggableConfigSchemaType('track')),\n    /**\n     * #slot\n     * configuration for internet accounts, see InternetAccounts\n     */\n    internetAccounts: types.array(\n      pluginManager.pluggableConfigSchemaType('internet account'),\n    ),\n    /**\n     * #slot\n     */\n    aggregateTextSearchAdapters: types.array(\n      pluginManager.pluggableConfigSchemaType('text search adapter'),\n    ),\n\n    /**\n     * #slot\n     */\n    connections: types.array(\n      pluginManager.pluggableConfigSchemaType('connection'),\n    ),\n\n    /**\n     * #slot\n     */\n    defaultSession: types.optional(types.frozen(), {\n      name: `New Session`,\n    }),\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n/**\n * #config FormatDetails\n * generally exists on the config.json or root config as configuration.formatDetails\n */\nexport function FormatDetailsConfigSchemaFactory() {\n  return ConfigurationSchema('FormatDetails', {\n    /**\n     * #slot configuration.formatDetails.feature\n     */\n    feature: {\n      type: 'frozen',\n      description: 'adds extra fields to the feature details',\n      defaultValue: {},\n      contextVariable: ['feature'],\n    },\n    /**\n     * #slot configuration.formatDetails.subfeatures\n     */\n    subfeatures: {\n      type: 'frozen',\n      description: 'adds extra fields to the subfeatures of a feature',\n      defaultValue: {},\n      contextVariable: ['feature'],\n    },\n    /**\n     * #slot configuration.formatDetails.depth\n     */\n    depth: {\n      type: 'number',\n      defaultValue: 2,\n      description: 'depth to iterate on subfeatures',\n    },\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n/**\n * #config FormatAbout\n * generally exists on the config.json or root config as configuration.formatAbout\n */\nexport function FormatAboutConfigSchemaFactory() {\n  return ConfigurationSchema('FormatAbout', {\n    /**\n     * #slot configuration.formatAbout.config\n     */\n    config: {\n      type: 'frozen',\n      description: 'formats configuration object in about dialog',\n      defaultValue: {},\n      contextVariable: ['config'],\n    },\n    /**\n     * #slot configuration.formatAbout.hideUris\n     */\n\n    hideUris: {\n      type: 'boolean',\n      defaultValue: false,\n    },\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config HierarchicalConfigSchema\n * generally exists on the config.json or root config as configuration.hierarchical\n */\nexport function HierarchicalConfigSchemaFactory() {\n  return ConfigurationSchema('hierarchical', {\n    sort: ConfigurationSchema('hierarchicalSort', {\n      /**\n       * #slot configuration.hierarchical.sort.trackNames\n       */\n      trackNames: {\n        type: 'boolean',\n        defaultValue: false,\n      },\n      /**\n       * #slot configuration.hierarchical.sort.categories\n       */\n      categories: {\n        type: 'boolean',\n        defaultValue: false,\n      },\n    }),\n    defaultCollapsed: ConfigurationSchema('defaultCollapsed', {\n      /**\n       * #slot configuration.hierarchical.defaultCollapsed.categoryNames\n       */\n      categoryNames: {\n        type: 'stringArray',\n        defaultValue: [],\n      },\n      /**\n       * #slot configuration.hierarchical.defaultCollapsed.topLevelCategories\n       */\n      topLevelCategories: {\n        type: 'boolean',\n        defaultValue: false,\n      },\n      /**\n       * #slot configuration.hierarchical.defaultCollapsed.subCategories\n       */\n      subCategories: {\n        type: 'boolean',\n        defaultValue: false,\n      },\n    }),\n  })\n}\n","import React, { useState, lazy } from 'react'\nimport { observer } from 'mobx-react'\nimport { Button, alpha } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { AbstractSessionModel } from '@jbrowse/core/util'\n\n// icons\nimport ShareIcon from '@mui/icons-material/Share'\n\nconst useStyles = makeStyles()(theme => ({\n  shareDiv: {\n    textAlign: 'center',\n    paddingLeft: '2px',\n  },\n  shareButton: {\n    backgroundColor: alpha(\n      theme.palette.primary.contrastText,\n      theme.palette.action.hoverOpacity,\n    ),\n    '&:hover': {\n      '@media (hover: none)': {\n        backgroundColor: 'transparent',\n      },\n    },\n  },\n}))\n\nconst ShareDialog = lazy(() => import('./ShareDialog'))\n\nconst ShareButton = observer(function (props: {\n  session: AbstractSessionModel & { shareURL: string }\n}) {\n  const [open, setOpen] = useState(false)\n  const { session } = props\n  const { classes } = useStyles()\n\n  return (\n    <div className={classes.shareDiv}>\n      <Button\n        onClick={async () => setOpen(true)}\n        size=\"small\"\n        color=\"inherit\"\n        startIcon={<ShareIcon />}\n        classes={{ root: classes.shareButton }}\n      >\n        Share\n      </Button>\n      {open ? (\n        <React.Suspense fallback={<React.Fragment />}>\n          <ShareDialog handleClose={() => setOpen(false)} session={session} />\n        </React.Suspense>\n      ) : null}\n    </div>\n  )\n})\n\nexport default ShareButton\n","import React, { useEffect } from 'react'\nimport { observer } from 'mobx-react'\nimport { onSnapshot } from 'mobx-state-tree'\nimport { useQueryParam, StringParam } from 'use-query-params'\nimport { CssBaseline, ThemeProvider } from '@mui/material'\n\n// core\nimport { App } from '@jbrowse/app-core'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\n// locals\nimport ShareButton from './ShareButton'\nimport { WebSessionModel } from '../sessionModel'\n\nconst JBrowse = observer(function ({\n  pluginManager,\n}: {\n  pluginManager: PluginManager\n}) {\n  const [adminKey] = useQueryParam('adminKey', StringParam)\n  const [adminServer] = useQueryParam('adminServer', StringParam)\n  const [configPath] = useQueryParam('config', StringParam)\n  const [, setSessionId] = useQueryParam('session', StringParam)\n  const { rootModel } = pluginManager\n  const { error, jbrowse } = rootModel || {}\n  const session = rootModel?.session as WebSessionModel\n  const currentSessionId = session.id\n\n  useEffect(() => {\n    setSessionId(`local-${currentSessionId}`)\n    // @ts-expect-error\n    window.JBrowseRootModel = rootModel\n    // @ts-expect-error\n    window.JBrowseSession = session\n  }, [currentSessionId, rootModel, session, setSessionId])\n\n  useEffect(() => {\n    if (!jbrowse || !adminKey) {\n      return\n    }\n    return onSnapshot(jbrowse, async snapshot => {\n      try {\n        const response = await fetch(adminServer || `/updateConfig`, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            adminKey,\n            configPath,\n            config: snapshot,\n          }),\n        })\n        if (!response.ok) {\n          const message = await response.text()\n          throw new Error(`HTTP ${response.status} (${message})`)\n        }\n      } catch (e) {\n        session?.notify(`Admin server error: ${e}`)\n      }\n    })\n  }, [jbrowse, session, adminKey, adminServer, configPath])\n\n  if (error) {\n    throw error\n  }\n  if (!rootModel) {\n    throw new Error('No rootModel found')\n  }\n  if (!session) {\n    throw new Error('No session found')\n  }\n\n  return (\n    <ThemeProvider theme={session.theme}>\n      <CssBaseline />\n      <App\n        session={session}\n        HeaderButtons={<ShareButton session={session} />}\n      />\n    </ThemeProvider>\n  )\n})\n\nexport default JBrowse\n","import { types, addDisposer, Instance } from 'mobx-state-tree'\nimport { autorun } from 'mobx'\nimport PluginLoader, {\n  PluginDefinition,\n  PluginRecord,\n} from '@jbrowse/core/PluginLoader'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport { nanoid } from '@jbrowse/core/util/nanoid'\n\n// locals\nimport { readSessionFromDynamo } from './sessionSharing'\nimport { addRelativeUris, checkPlugins, fromUrlSafeB64, readConf } from './util'\n\nconst SessionLoader = types\n  .model({\n    configPath: types.maybe(types.string),\n    sessionQuery: types.maybe(types.string),\n    password: types.maybe(types.string),\n    adminKey: types.maybe(types.string),\n    loc: types.maybe(types.string),\n    sessionTracks: types.maybe(types.string),\n    assembly: types.maybe(types.string),\n    tracks: types.maybe(types.string),\n    initialTimestamp: types.number,\n  })\n  .volatile(() => ({\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,\n    blankSession: false as any,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,\n    sessionTriaged: undefined as any,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,\n    shareWarningOpen: false as any,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,\n    configSnapshot: undefined as any,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,\n    sessionSnapshot: undefined as any,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,\n    sessionSpec: undefined as any,\n    runtimePlugins: [] as PluginRecord[],\n    sessionPlugins: [] as PluginRecord[],\n    sessionError: undefined as unknown,\n    configError: undefined as unknown,\n    bc1:\n      window.BroadcastChannel &&\n      new window.BroadcastChannel('jb_request_session'),\n    bc2:\n      window.BroadcastChannel &&\n      new window.BroadcastChannel('jb_respond_session'),\n  }))\n  .views(self => ({\n    get isSharedSession() {\n      return !!self.sessionQuery?.startsWith('share-')\n    },\n\n    get isSpecSession() {\n      return !!self.sessionQuery?.startsWith('spec-')\n    },\n\n    get isJb1StyleSession() {\n      return !!self.loc\n    },\n\n    get isEncodedSession() {\n      return !!self.sessionQuery?.startsWith('encoded-')\n    },\n\n    get isJsonSession() {\n      return !!self.sessionQuery?.startsWith('json-')\n    },\n\n    get isLocalSession() {\n      return !!self.sessionQuery?.startsWith('local-')\n    },\n\n    get ready() {\n      return Boolean(this.isSessionLoaded && !self.configError)\n    },\n\n    get error() {\n      return self.configError || self.sessionError\n    },\n\n    get isSessionLoaded() {\n      return Boolean(\n        self.sessionError ||\n          self.sessionSnapshot ||\n          self.blankSession ||\n          self.sessionSpec,\n      )\n    },\n    get isConfigLoaded() {\n      return Boolean(self.configError || self.configSnapshot)\n    },\n\n    get sessionTracksParsed() {\n      return self.sessionTracks ? JSON.parse(self.sessionTracks) : []\n    },\n  }))\n  .actions(self => ({\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,\n    setSessionQuery(session?: any) {\n      self.sessionQuery = session\n    },\n    setConfigError(error: unknown) {\n      self.configError = error\n    },\n    setSessionError(error: unknown) {\n      self.sessionError = error\n    },\n    setRuntimePlugins(plugins: PluginRecord[]) {\n      self.runtimePlugins = plugins\n    },\n    setSessionPlugins(plugins: PluginRecord[]) {\n      self.sessionPlugins = plugins\n    },\n    setConfigSnapshot(snap: unknown) {\n      self.configSnapshot = snap\n    },\n\n    setBlankSession(flag: boolean) {\n      self.blankSession = flag\n    },\n    setSessionTriaged(args?: {\n      snap: unknown\n      origin: string\n      reason: { url?: string }[]\n    }) {\n      self.sessionTriaged = args\n    },\n    setSessionSnapshotSuccess(snap: unknown) {\n      self.sessionSnapshot = snap\n    },\n  }))\n  .actions(self => ({\n    async fetchPlugins(config: { plugins: PluginDefinition[] }) {\n      try {\n        const pluginLoader = new PluginLoader(config.plugins, {\n          fetchESM: url => import(/* webpackIgnore:true */ url),\n        })\n        pluginLoader.installGlobalReExports(window)\n        const runtimePlugins = await pluginLoader.load(window.location.href)\n        self.setRuntimePlugins([...runtimePlugins])\n      } catch (e) {\n        console.error(e)\n        self.setConfigError(e)\n      }\n    },\n    async fetchSessionPlugins(snap: { sessionPlugins?: PluginDefinition[] }) {\n      try {\n        const pluginLoader = new PluginLoader(snap.sessionPlugins || [], {\n          fetchESM: url => import(/* webpackIgnore:true */ url),\n        })\n        pluginLoader.installGlobalReExports(window)\n        const plugins = await pluginLoader.load(window.location.href)\n        self.setSessionPlugins([...plugins])\n      } catch (e) {\n        console.error(e)\n        self.setConfigError(e)\n      }\n    },\n\n    // passed\n    async setSessionSnapshot(\n      snap: { sessionPlugins?: PluginDefinition[]; id: string },\n      userAcceptedConfirmation?: boolean,\n    ) {\n      try {\n        const { sessionPlugins = [] } = snap\n        const sessionPluginsAllowed = await checkPlugins(sessionPlugins)\n        if (sessionPluginsAllowed || userAcceptedConfirmation) {\n          await this.fetchSessionPlugins(snap)\n          self.setSessionSnapshotSuccess(snap)\n        } else {\n          self.setSessionTriaged({\n            snap,\n            origin: 'session',\n            reason: sessionPlugins,\n          })\n        }\n      } catch (e) {\n        console.error(e)\n        self.setConfigError(e)\n      }\n    },\n\n    async fetchConfig() {\n      let { configPath = 'config.json' } = self\n\n      // @ts-expect-error\n      // eslint-disable-next-line no-underscore-dangle\n      if (window.__jbrowseCacheBuster) {\n        configPath += `?rand=${Math.random()}`\n      }\n\n      const text = await openLocation({\n        uri: configPath,\n        locationType: 'UriLocation',\n      }).readFile('utf8')\n      const config = JSON.parse(text)\n      const configUri = new URL(configPath, window.location.href)\n      addRelativeUris(config, configUri)\n\n      // cross origin config check\n      if (configUri.hostname !== window.location.hostname) {\n        const configPlugins = config.plugins || []\n        const configPluginsAllowed = await checkPlugins(configPlugins)\n        if (!configPluginsAllowed) {\n          return self.setSessionTriaged({\n            snap: config,\n            origin: 'config',\n            reason: configPlugins,\n          })\n        }\n      }\n      await this.fetchPlugins(config)\n      self.setConfigSnapshot(config)\n    },\n\n    async fetchSessionStorageSession() {\n      const sessionStr = sessionStorage.getItem('current')\n      const query = self.sessionQuery!.replace('local-', '')\n\n      // check if\n      if (sessionStr) {\n        const sessionSnap = JSON.parse(sessionStr).session || {}\n        if (query === sessionSnap.id) {\n          return this.setSessionSnapshot(sessionSnap)\n        }\n      }\n\n      if (self.bc1) {\n        self.bc1.postMessage(query)\n        try {\n          const result = await new Promise<Record<string, unknown>>(\n            (resolve, reject) => {\n              if (self.bc2) {\n                self.bc2.onmessage = msg => {\n                  resolve(msg.data)\n                }\n              }\n              setTimeout(() => reject(), 1000)\n            },\n          )\n          return this.setSessionSnapshot({ ...result, id: nanoid() })\n        } catch (e) {\n          // the broadcast channels did not find the session in another tab\n          // clear session param, so just ignore\n        }\n      }\n      throw new Error('Local storage session not found')\n    },\n\n    async fetchSharedSession() {\n      const defaultURL = 'https://share.jbrowse.org/api/v1/'\n      const decryptedSession = await readSessionFromDynamo(\n        `${readConf(self.configSnapshot, 'shareURL', defaultURL)}load`,\n        self.sessionQuery || '',\n        self.password || '',\n      )\n\n      const session = JSON.parse(await fromUrlSafeB64(decryptedSession))\n      await this.setSessionSnapshot({ ...session, id: nanoid() })\n    },\n\n    async decodeEncodedUrlSession() {\n      const session = JSON.parse(\n        // @ts-expect-error\n        await fromUrlSafeB64(self.sessionQuery.replace('encoded-', '')),\n      )\n      await this.setSessionSnapshot({ ...session, id: nanoid() })\n    },\n\n    decodeSessionSpec() {\n      if (!self.sessionQuery) {\n        return\n      }\n      self.sessionSpec = JSON.parse(self.sessionQuery.replace('spec-', ''))\n    },\n\n    decodeJb1StyleSession() {\n      const { loc, tracks, assembly, sessionTracksParsed: sessionTracks } = self\n      if (loc) {\n        self.sessionSpec = {\n          sessionTracks,\n          views: [\n            {\n              type: 'LinearGenomeView',\n              tracks: tracks?.split(','),\n              sessionTracks,\n              loc,\n              assembly,\n            },\n          ],\n        }\n      }\n    },\n\n    async decodeJsonUrlSession() {\n      // @ts-expect-error\n      const session = JSON.parse(self.sessionQuery.replace('json-', ''))\n      await this.setSessionSnapshot({ ...session.session, id: nanoid() })\n    },\n\n    async afterCreate() {\n      try {\n        // rename the current autosave from previously loaded jbrowse session\n        // into previousAutosave on load\n        const { configPath } = self\n        const lastAutosave = localStorage.getItem(`autosave-${configPath}`)\n        if (lastAutosave) {\n          localStorage.setItem(`previousAutosave-${configPath}`, lastAutosave)\n        }\n      } catch (e) {\n        console.error('failed to create previousAutosave', e)\n      }\n\n      try {\n        // fetch config\n        await this.fetchConfig()\n      } catch (e) {\n        console.error(e)\n        self.setConfigError(e)\n        return\n      }\n\n      addDisposer(\n        self,\n        autorun(async () => {\n          try {\n            const {\n              isLocalSession,\n              isEncodedSession,\n              isSpecSession,\n              isSharedSession,\n              isJsonSession,\n              isJb1StyleSession,\n              sessionQuery,\n              configSnapshot,\n            } = self\n            if (!configSnapshot) {\n              return\n            }\n\n            if (self.bc1) {\n              self.bc1.onmessage = msg => {\n                const r =\n                  JSON.parse(sessionStorage.getItem('current') || '{}')\n                    .session || {}\n                if (r.id === msg.data && self.bc2) {\n                  self.bc2.postMessage(r)\n                }\n              }\n            }\n\n            if (isSharedSession) {\n              await this.fetchSharedSession()\n            } else if (isSpecSession) {\n              this.decodeSessionSpec()\n            } else if (isJb1StyleSession) {\n              this.decodeJb1StyleSession()\n            } else if (isEncodedSession) {\n              await this.decodeEncodedUrlSession()\n            } else if (isJsonSession) {\n              await this.decodeJsonUrlSession()\n            } else if (isLocalSession) {\n              await this.fetchSessionStorageSession()\n            } else if (sessionQuery) {\n              // if there was a sessionQuery and we don't recognize it\n              throw new Error('unrecognized session format')\n            } else {\n              // placeholder for session loaded, but none found\n              self.setBlankSession(true)\n            }\n          } catch (e) {\n            console.error(e)\n            self.setSessionError(e)\n          }\n        }),\n      )\n    },\n  }))\n\nexport type SessionLoaderModel = Instance<typeof SessionLoader>\n\nexport default SessionLoader\n\ninterface ViewSpec {\n  type: string\n  tracks?: string[]\n  assembly: string\n  loc: string\n}\n\n// use extension point named e.g. LaunchView-LinearGenomeView to initialize an\n// LGV session\nexport function loadSessionSpec(\n  {\n    views,\n    sessionTracks = [],\n  }: {\n    views: ViewSpec[]\n    sessionTracks: unknown[]\n  },\n  pluginManager: PluginManager,\n) {\n  return async () => {\n    const { rootModel } = pluginManager\n    if (!rootModel) {\n      throw new Error('rootModel not initialized')\n    }\n    try {\n      // @ts-expect-error\n      rootModel.setSession({\n        name: `New session ${new Date().toLocaleString()}`,\n      })\n\n      // @ts-expect-error\n      sessionTracks.forEach(track => rootModel.session.addTrackConf(track))\n\n      await Promise.all(\n        views.map(view =>\n          pluginManager.evaluateAsyncExtensionPoint('LaunchView-' + view.type, {\n            ...view,\n            session: rootModel.session,\n          }),\n        ),\n      )\n    } catch (e) {\n      console.error(e)\n      rootModel.session?.notify(`${e}`)\n    }\n  }\n}\n","import React from 'react'\n\nexport default function NoConfigMessage() {\n  const links = [\n    ['test_data/volvox/config.json', 'Volvox (sample data)'],\n    ['test_data/config.json', 'Human basic'],\n    ['test_data/config_demo.json', 'Human sample data'],\n    ['test_data/tomato/config.json', 'Tomato SVs'],\n    ['test_data/breakpoint/config.json', 'Breakpoint'],\n    ['test_data/config_dotplot.json', 'Grape/Peach dotplot'],\n    ['test_data/config_synteny_grape_peach.json', 'Grape/Peach synteny'],\n    ['test_data/human_vs_mouse.json', 'Human vs mouse synteny'],\n    ['test_data/yeast_synteny/config.json', 'Yeast synteny'],\n    ['test_data/config_many_contigs.json', 'Many contigs'],\n    ['test_data/config_honeybee.json', 'Honeybee'],\n    ['test_data/config_wormbase.json', 'Wormbase'],\n    ['test_data/config_human_dotplot.json', 'Human dotplot'],\n    ['test_data/volvox/theme.json', 'Theme test (wild color)'],\n    ['test_data/volvox/theme2.json', 'Theme test (wormbase color)'],\n    ['test_data/wgbs/config.json', 'WGBS methylation'],\n    ['test_data/methylation_test/config.json', 'Nanopore methylation'],\n    ['test_data/volvox/config_main_thread.json', 'Volvox (mainthreadrpc)'],\n    ['test_data/volvox/config_auth_main.json', 'Volvox (auth, mainthreadrpc)'],\n    ['test_data/volvox/config_auth.json', 'Volvox (auth)'],\n    ['test_data/volvoxhub/config.json', 'Volvox (with ucsc-hub)'],\n  ]\n  const { href, search } = window.location\n  const { config, ...rest } = Object.fromEntries(new URLSearchParams(search))\n  const root = href.split('?')[0]\n  return (\n    <div>\n      <div>Sample JBrowse configs:</div>\n      <ul>\n        {links.map(([link, name]) => {\n          const params = new URLSearchParams(\n            Object.entries({\n              ...rest,\n              config: link,\n            }),\n          )\n          return (\n            <li key={name}>\n              <a href={`${root}?${params}`}>{name}</a>\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n  )\n}\n","import React from 'react'\nimport { ErrorMessage } from '@jbrowse/core/ui'\nimport NoConfigMessage from './NoConfigMessage'\nimport { inDevelopment } from '@jbrowse/core/util'\n\nexport default function StartScreenErrorMessage({ error }: { error: unknown }) {\n  return (\n    <>\n      {`${error}`.match(/HTTP 404 fetching config.json/) ? (\n        <div>\n          <h1>It worked!</h1>\n          <p\n            style={{\n              margin: 8,\n              padding: 8,\n              background: '#9f9',\n              border: '1px solid green',\n            }}\n          >\n            JBrowse 2 is installed. Your next step is to add and configure an\n            assembly. Follow our{' '}\n            <a href=\"https://jbrowse.org/jb2/docs/quickstart_web/\">\n              quick start guide\n            </a>{' '}\n            to continue or browse the sample data{' '}\n            <a href=\"?config=test_data/volvox/config.json\">here</a>.\n          </p>\n          {inDevelopment ? <NoConfigMessage /> : null}\n        </div>\n      ) : (\n        <div>\n          <h1>JBrowse Error</h1>\n          <ErrorMessage error={error} />\n        </div>\n      )}\n    </>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { readConfObject } from '../configuration'\nimport { isElectron } from '../util'\n\ntype AnalyticsObj = Record<string, any>\n\ninterface Track {\n  type: string\n}\n\nexport async function writeAWSAnalytics(\n  rootModel: any,\n  initialTimeStamp: number,\n  sessionQuery?: string | null,\n) {\n  try {\n    const url = 'https://analytics.jbrowse.org/api/v1'\n\n    const multiAssemblyTracks = rootModel.jbrowse.tracks.filter(\n      (track: any) => (readConfObject(track, 'assemblyNames') || []).length > 1,\n    ).length\n\n    const savedSessionCount = Object.keys(localStorage).filter(name =>\n      name.includes('localSaved-'),\n    ).length\n\n    const { jbrowse: config, session, version: ver } = rootModel\n    const { tracks, assemblies, plugins } = config\n\n    // stats to be recorded in db\n    const stats: AnalyticsObj = {\n      ver,\n      'plugins-count': plugins?.length || 0,\n      'plugin-names': plugins?.map((p: any) => p.name).join(','),\n      'assemblies-count': assemblies.length,\n      'tracks-count': tracks.length,\n      'session-tracks-count': session?.sessionTracks.length || 0,\n      'open-views': session?.views.length || 0,\n      'synteny-tracks-count': multiAssemblyTracks,\n      'saved-sessions-count': savedSessionCount,\n\n      // field if existing session param in query before autogenerated param\n      'existing-session-param-type': sessionQuery?.split('-')[0] || 'none',\n\n      // screen geometry\n      'scn-h': window.screen.height,\n      'scn-w': window.screen.width,\n\n      // window geometry\n      'win-h': window.innerHeight,\n      'win-w': window.innerWidth,\n\n      electron: isElectron,\n      loadTime: (Date.now() - initialTimeStamp) / 1000,\n      jb2: true,\n    }\n\n    // stringifies the track type counts, gets processed in lambda\n    tracks.forEach((track: Track) => {\n      const key = `track-types-${track.type}`\n      stats[key] = stats[key] + 1 || 1\n    })\n\n    // stringifies the session track type counts, gets processed in lambda\n    session?.sessionTracks.forEach((track: Track) => {\n      const key = `sessionTrack-types-${track.type}`\n      stats[key] = stats[key] + 1 || 1\n    })\n\n    // put stats into a query string for get request\n    const qs = Object.keys(stats)\n      .map(key => `${key}=${stats[key]}`)\n      .join('&')\n\n    await fetch(`${url}?${qs}`)\n  } catch (e) {\n    console.error('Failed to write analytics to AWS.', e)\n  }\n}\n\nexport async function writeGAAnalytics(\n  rootModel: any,\n  initialTimestamp: number,\n) {\n  const jbrowseUser = 'UA-7115575-5'\n  const stats: AnalyticsObj = {\n    'tracks-count': rootModel.jbrowse.tracks.length, // this is all possible tracks\n    ver: rootModel.version,\n    electron: isElectron,\n    loadTime: Date.now() - initialTimestamp,\n    pluginNames:\n      rootModel.jbrowse.plugins?.map((plugin: any) => plugin.name) || '',\n  }\n\n  // create script\n  let analyticsScript =\n    \"(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\"\n  analyticsScript +=\n    '(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),'\n  analyticsScript +=\n    'm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)'\n  analyticsScript +=\n    \"})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\"\n  analyticsScript += `ga('create', '${jbrowseUser}', 'auto', 'jbrowseTracker');`\n\n  const gaData: AnalyticsObj = {}\n  const googleDimensions = 'tracks-count ver electron loadTime pluginNames'\n\n  googleDimensions.split(/\\s+/).forEach((key, index) => {\n    gaData[`dimension${index + 1}`] = stats[key]\n  })\n\n  gaData.metric1 = Math.round(stats.loadTime)\n\n  analyticsScript += `ga('jbrowseTracker.send', 'pageview',${JSON.stringify(\n    gaData,\n  )});`\n\n  const analyticsScriptNode = document.createElement('script')\n  analyticsScriptNode.innerHTML = analyticsScript\n\n  document.getElementsByTagName('head')[0].append(analyticsScriptNode)\n}\n\nexport function doAnalytics(\n  rootModel: any,\n  initialTimestamp: number,\n  initialSessionQuery: string | null | undefined,\n) {\n  if (\n    rootModel &&\n    !readConfObject(rootModel.jbrowse.configuration, 'disableAnalytics')\n  ) {\n    // ok if these are unhandled\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    writeAWSAnalytics(rootModel, initialTimestamp, initialSessionQuery)\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    writeGAAnalytics(rootModel, initialTimestamp)\n  }\n}\n","import { ConfigurationSchema } from '../configuration'\nimport PluginManager from '../PluginManager'\n\n/**\n * #config BaseAssembly\n * #category assemblyManagement\n * This corresponds to the assemblies section of the config\n */\nfunction assemblyConfigSchema(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'BaseAssembly',\n    {\n      /**\n       * #slot\n       * aliases are \"reference name aliases\" e.g. aliases for hg38 might be \"GRCh38\"\n       */\n      aliases: {\n        type: 'stringArray',\n        defaultValue: [],\n        description: 'Other possible names for the assembly',\n      },\n\n      /**\n       * #slot\n       * sequence refers to a reference sequence track that has an adapter containing,\n       * importantly, a sequence adapter such as IndexedFastaAdapter\n       */\n      sequence: pluginManager.getTrackType('ReferenceSequenceTrack')\n        .configSchema,\n\n      /**\n       * #slot\n       */\n      refNameColors: {\n        type: 'stringArray',\n        defaultValue: [],\n        description:\n          'Define custom colors for each reference sequence. Will cycle through this list if there are not enough colors for every sequence.',\n      },\n\n      refNameAliases: ConfigurationSchema(\n        'RefNameAliases',\n        {\n          /**\n           * #slot refNameAliases.adapter\n           * refNameAliases help resolve e.g. chr1 and 1 as the same entity\n           * the data for refNameAliases are fetched from an adapter, that is\n           * commonly a tsv like chromAliases.txt from UCSC or similar\n           */\n          adapter: pluginManager.pluggableConfigSchemaType('adapter'),\n        },\n        {\n          preProcessSnapshot: snap => {\n            // allow refNameAliases to be unspecified\n            // @ts-expect-error\n            if (!snap.adapter) {\n              return { adapter: { type: 'RefNameAliasAdapter' } }\n            }\n            return snap\n          },\n        },\n      ),\n      cytobands: ConfigurationSchema(\n        'Cytoband',\n        {\n          /**\n           * #slot cytobands.adapter\n           * cytoband data is fetched from an adapter, and can be displayed by a\n           * view type as ideograms\n           */\n          adapter: pluginManager.pluggableConfigSchemaType('adapter'),\n        },\n        {\n          preProcessSnapshot: snap => {\n            // allow cytoBand to be unspecified\n            // @ts-expect-error\n            if (!snap.adapter) {\n              return { adapter: { type: 'CytobandAdapter' } }\n            }\n            return snap\n          },\n        },\n      ),\n\n      /**\n       * #slot\n       */\n      displayName: {\n        type: 'string',\n        defaultValue: '',\n        description:\n          'A human readable display name for the assembly e.g. \"Homo sapiens (hg38)\" while the assembly name may just be \"hg38\"',\n      },\n    },\n    {\n      /**\n       * #identifier name\n       * the name acts as a unique identifier in the config, so it cannot be duplicated.\n       * it usually a short human readable \"id\" like hg38, but you can also optionally\n       * customize the assembly \"displayName\" config slot\n       */\n      explicitIdentifier: 'name',\n    },\n  )\n}\n\nexport default assemblyConfigSchema\nexport type BaseAssemblyConfigSchema = ReturnType<typeof assemblyConfigSchema>\n","import BaseResult from './BaseResults'\nimport PluginManager from '../PluginManager'\nimport QuickLRU from '../util/QuickLRU'\nimport {\n  BaseTextSearchAdapter,\n  BaseTextSearchArgs,\n} from '../data_adapters/BaseAdapter'\nimport { readConfObject, AnyConfigurationModel } from '../configuration'\n\nexport interface SearchScope {\n  includeAggregateIndexes: boolean\n  assemblyName: string\n  tracks?: string[]\n}\n\nexport default class TextSearchManager {\n  adapterCache = new QuickLRU<string, BaseTextSearchAdapter>({\n    maxSize: 15,\n  })\n\n  constructor(public pluginManager: PluginManager) {}\n\n  loadTextSearchAdapters(searchScope: SearchScope) {\n    const pm = this.pluginManager\n    return this.relevantAdapters(searchScope).map(conf => {\n      const adapterId = readConfObject(conf, 'textSearchAdapterId')\n      const r = this.adapterCache.get(adapterId)\n      if (r) {\n        return r\n      } else {\n        const { AdapterClass } = pm.getTextSearchAdapterType(conf.type)\n        const a = new AdapterClass(conf, undefined, pm) as BaseTextSearchAdapter\n        this.adapterCache.set(adapterId, a)\n        return a\n      }\n    })\n  }\n\n  relevantAdapters(searchScope: SearchScope) {\n    const pm = this.pluginManager\n    const { aggregateTextSearchAdapters } = pm.rootModel?.jbrowse as {\n      aggregateTextSearchAdapters: AnyConfigurationModel[]\n    }\n    const { tracks } = pm.rootModel?.session as {\n      tracks: AnyConfigurationModel[]\n    }\n\n    const { assemblyName } = searchScope\n\n    return [\n      ...this.getAdaptersWithAssembly(\n        assemblyName,\n        aggregateTextSearchAdapters,\n      ),\n      ...this.getTrackAdaptersWithAssembly(assemblyName, tracks),\n    ]\n  }\n\n  getAdaptersWithAssembly(\n    assemblyName: string,\n    confs: AnyConfigurationModel[],\n  ): AnyConfigurationModel[] {\n    return confs.filter(\n      c => readConfObject(c, 'assemblyNames')?.includes(assemblyName),\n    )\n  }\n\n  getTrackAdaptersWithAssembly(\n    assemblyName: string,\n    confs: AnyConfigurationModel[],\n  ) {\n    return confs\n      .filter(\n        conf =>\n          readConfObject(conf, [\n            'textSearching',\n            'textSearchAdapter',\n            'assemblyNames',\n          ])?.includes(assemblyName),\n      )\n      .map(\n        conf => conf.textSearching.textSearchAdapter as AnyConfigurationModel,\n      )\n  }\n\n  /**\n   * Returns list of relevant results given a search query and options\n   * @param args - search options/arguments include: search query\n   * limit of results to return, searchType...prefix | full | exact\", etc.\n   */\n  async search(\n    args: BaseTextSearchArgs,\n    searchScope: SearchScope,\n    rankFn: (results: BaseResult[]) => BaseResult[],\n  ) {\n    const adapters = this.loadTextSearchAdapters(searchScope)\n    const results = await Promise.all(adapters.map(a => a.searchIndex(args)))\n    return this.sortResults(results.flat(), rankFn)\n  }\n\n  /**\n   * Returns array of revelevant and sorted results\n   * @param results - array of results from all text search adapters\n   * @param rankFn - function that updates results scores\n   * based on more relevance\n   */\n  sortResults(\n    results: BaseResult[],\n    rankFn: (results: BaseResult[]) => BaseResult[],\n  ) {\n    return rankFn(\n      results.sort((a, b) => -b.getLabel().localeCompare(a.getLabel())),\n    ).sort((r1, r2) => r1.getScore() - r2.getScore())\n  }\n}\n","// this is in a separate module here so it can be mocked out by jest. the\n// import.meta.url is not well recognized by jest and we use MainThreadRpc in\n// tests anyways right now\n//\n// note: this uses webpack 5 native worker modules\n//\n// see https://github.com/cmdcolin/cra-webpack5-web-worker-example for simple example\n// and docs https://webpack.js.org/guides/web-workers/\n//\n// also note: the craco config for webpack publicPath: 'auto' is needed for\n// these workers\nexport default function makeWorkerInstance() {\n  return new Worker(new URL('./rpcWorker', import.meta.url))\n}\n","import { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { JBrowseModelF } from '@jbrowse/app-core'\nimport { getSnapshot, resolveIdentifier, types } from 'mobx-state-tree'\nimport clone from 'clone'\n\n// locals\nimport { removeAttr } from './util'\n\n// poke some things for testing (this stuff will eventually be removed)\n// @ts-expect-error\nwindow.getSnapshot = getSnapshot\n// @ts-expect-error\nwindow.resolveIdentifier = resolveIdentifier\n\n/**\n * #stateModel JBrowseWebConfigModel\n * #category root\n * the rootModel.jbrowse state model for JBrowse Web\n */\nexport default function JBrowseWeb({\n  pluginManager,\n  assemblyConfigSchema,\n}: {\n  pluginManager: PluginManager\n  assemblyConfigSchema: AnyConfigurationSchemaType\n}) {\n  return types.snapshotProcessor(\n    JBrowseModelF({ pluginManager, assemblyConfigSchema }),\n    {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      postProcessor(snapshot: Record<string, any>) {\n        return removeAttr(clone(snapshot), 'baseUri')\n      },\n    },\n  )\n}\n","import { getParent, types, Instance, IAnyType } from 'mobx-state-tree'\nimport jsonStableStringify from 'json-stable-stringify'\nimport AbortablePromiseCache from 'abortable-promise-cache'\n\n// locals\nimport { getConf, AnyConfigurationModel } from '../configuration'\nimport {\n  BaseOptions,\n  BaseRefNameAliasAdapter,\n  RegionsAdapter,\n} from '../data_adapters/BaseAdapter'\nimport PluginManager from '../PluginManager'\nimport { when, Region, Feature } from '../util'\nimport QuickLRU from '../util/QuickLRU'\nimport RpcManager from '../rpc/RpcManager'\n\nconst refNameRegex = new RegExp(\n  '[0-9A-Za-z!#$%&+./:;?@^_|~-][0-9A-Za-z!#$%&*+./:;=?@^_|~-]*',\n)\n\n// Based on the UCSC Genome Browser chromosome color palette:\n// https://github.com/ucscGenomeBrowser/kent/blob/a50ed53aff81d6fb3e34e6913ce18578292bc24e/src/hg/inc/chromColors.h\n// Some colors darkened to have at least a 3:1 contrast ratio on a white\n// background\nconst refNameColors = [\n  'rgb(153, 102, 0)',\n  'rgb(102, 102, 0)',\n  'rgb(153, 153, 30)',\n  'rgb(204, 0, 0)',\n  'rgb(255, 0, 0)',\n  'rgb(255, 0, 204)',\n  'rgb(165, 132, 132)', // originally 'rgb(255, 204, 204)'\n  'rgb(204, 122, 0)', // originally rgb(255, 153, 0)'\n  'rgb(178, 142, 0)', // originally 'rgb(255, 204, 0)'\n  'rgb(153, 153, 0)', // originally 'rgb(255, 255, 0)'\n  'rgb(122, 153, 0)', // originally 'rgb(204, 255, 0)'\n  'rgb(0, 165, 0)', // originally 'rgb(0, 255, 0)'\n  'rgb(53, 128, 0)',\n  'rgb(0, 0, 204)',\n  'rgb(96, 145, 242)', // originally 'rgb(102, 153, 255)'\n  'rgb(107, 142, 178)', // originally 'rgb(153, 204, 255)'\n  'rgb(0, 165, 165)', // originally 'rgb(0, 255, 255)'\n  'rgb(122, 153, 153)', // originally 'rgb(204, 255, 255)'\n  'rgb(153, 0, 204)',\n  'rgb(204, 51, 255)',\n  'rgb(173, 130, 216)', // originally 'rgb(204, 153, 255)'\n  'rgb(102, 102, 102)',\n  'rgb(145, 145, 145)', // originally 'rgb(153, 153, 153)'\n  'rgb(142, 142, 142)', // originally 'rgb(204, 204, 204)'\n  'rgb(142, 142, 107)', // originally 'rgb(204, 204, 153)'\n  'rgb(96, 163, 48)', // originally 'rgb(121, 204, 61)'\n]\n\nasync function loadRefNameMap(\n  assembly: Assembly,\n  adapterConfig: unknown,\n  options: BaseOptions,\n  signal?: AbortSignal,\n) {\n  const { sessionId } = options\n  await when(() => !!(assembly.regions && assembly.refNameAliases), {\n    signal,\n    name: 'when assembly ready',\n  })\n\n  const refNames = (await assembly.rpcManager.call(\n    sessionId || 'assemblyRpc',\n    'CoreGetRefNames',\n    {\n      adapterConfig,\n      signal,\n      ...options,\n    },\n    { timeout: 1000000 },\n  )) as string[]\n\n  const { refNameAliases } = assembly\n  if (!refNameAliases) {\n    throw new Error(`error loading assembly ${assembly.name}'s refNameAliases`)\n  }\n\n  const refNameMap = Object.fromEntries(\n    refNames.map(name => {\n      checkRefName(name)\n      return [assembly.getCanonicalRefName(name), name]\n    }),\n  )\n\n  // make the reversed map too\n  const reversed = Object.fromEntries(\n    Object.entries(refNameMap).map(([canonicalName, adapterName]) => [\n      adapterName,\n      canonicalName,\n    ]),\n  )\n\n  return {\n    forwardMap: refNameMap,\n    reverseMap: reversed,\n  }\n}\n\n// Valid refName pattern from https://samtools.github.io/hts-specs/SAMv1.pdf\nfunction checkRefName(refName: string) {\n  if (!refNameRegex.test(refName)) {\n    throw new Error(`Encountered invalid refName: \"${refName}\"`)\n  }\n}\n\nfunction getAdapterId(adapterConf: unknown) {\n  return jsonStableStringify(adapterConf)\n}\n\ntype RefNameAliases = Record<string, string | undefined>\n\ninterface CacheData {\n  adapterConf: unknown\n  self: Assembly\n  sessionId: string\n  options: BaseOptions\n}\n\nexport interface RefNameMap {\n  forwardMap: RefNameAliases\n  reverseMap: RefNameAliases\n}\n\nexport interface BasicRegion {\n  start: number\n  end: number\n  refName: string\n  assemblyName: string\n}\n\nexport interface Loading {\n  adapterRegionsWithAssembly: Region[]\n  refNameAliases: RefNameAliases\n  lowerCaseRefNameAliases: RefNameAliases\n  cytobands: Feature[]\n}\n\n/**\n * #stateModel Assembly\n */\nexport default function assemblyFactory(\n  assemblyConfigType: IAnyType,\n  pm: PluginManager,\n) {\n  const adapterLoads = new AbortablePromiseCache<CacheData, RefNameMap>({\n    cache: new QuickLRU({ maxSize: 1000 }),\n\n    // @ts-expect-error\n    async fill(\n      args: CacheData,\n      signal?: AbortSignal,\n      statusCallback?: (arg: string) => void,\n    ) {\n      const { adapterConf, self, options } = args\n      return loadRefNameMap(\n        self,\n        adapterConf,\n        { ...options, statusCallback },\n        signal,\n      )\n    },\n  })\n  return types\n    .model({\n      /**\n       * #property\n       */\n      configuration: types.safeReference(assemblyConfigType),\n    })\n    .volatile(() => ({\n      error: undefined as unknown,\n      loaded: false,\n      loadingP: undefined as Promise<void> | undefined,\n      volatileRegions: undefined as BasicRegion[] | undefined,\n      refNameAliases: undefined as RefNameAliases | undefined,\n      lowerCaseRefNameAliases: undefined as RefNameAliases | undefined,\n      cytobands: undefined as Feature[] | undefined,\n    }))\n    .views(self => ({\n      getConf(arg: string) {\n        return self.configuration ? getConf(self, arg) : undefined\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get initialized() {\n        // @ts-expect-error\n        self.load()\n        return !!self.refNameAliases\n      },\n      /**\n       * #getter\n       */\n      get name(): string {\n        return self.getConf('name') || ''\n      },\n      /**\n       * #getter\n       */\n      get regions() {\n        // @ts-expect-error\n        self.load()\n        return self.volatileRegions\n      },\n      /**\n       * #getter\n       */\n      get aliases(): string[] {\n        return self.getConf('aliases') || []\n      },\n      /**\n       * #getter\n       */\n      get displayName(): string | undefined {\n        return self.getConf('displayName')\n      },\n      /**\n       * #getter\n       */\n      hasName(name: string) {\n        return this.allAliases.includes(name)\n      },\n      /**\n       * #getter\n       */\n      get allAliases() {\n        return [this.name, ...this.aliases]\n      },\n      /**\n       * #getter\n       * note: lowerCaseRefNameAliases not included here: this allows the list\n       * of refnames to be just the \"normal casing\", but things like\n       * getCanonicalRefName can resolve a lower-case name if needed\n       */\n      get allRefNames() {\n        return !self.refNameAliases\n          ? undefined\n          : Object.keys(self.refNameAliases)\n      },\n      /**\n       * #getter\n       */\n      get lowerCaseRefNames() {\n        return !self.lowerCaseRefNameAliases\n          ? undefined\n          : Object.keys(self.lowerCaseRefNameAliases || {})\n      },\n\n      /**\n       * #getter\n       */\n      get allRefNamesWithLowerCase() {\n        return this.allRefNames && this.lowerCaseRefNames\n          ? [...new Set([...this.allRefNames, ...this.lowerCaseRefNames])]\n          : undefined\n      },\n      /**\n       * #getter\n       */\n      get rpcManager(): RpcManager {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return getParent<any>(self, 2).rpcManager\n      },\n      /**\n       * #getter\n       */\n      get refNameColors() {\n        const colors: string[] = self.getConf('refNameColors') || []\n        return colors.length === 0 ? refNameColors : colors\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get refNames() {\n        return self.regions?.map(region => region.refName)\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       */\n      getCanonicalRefName(refName: string) {\n        if (!self.refNameAliases || !self.lowerCaseRefNameAliases) {\n          throw new Error(\n            'aliases not loaded, we expect them to be loaded before getCanonicalRefName can be called',\n          )\n        }\n        return (\n          self.refNameAliases[refName] || self.lowerCaseRefNameAliases[refName]\n        )\n      },\n      /**\n       * #method\n       */\n      getRefNameColor(refName: string) {\n        if (!self.refNames) {\n          return undefined\n        }\n        const idx = self.refNames.indexOf(refName)\n        if (idx === -1) {\n          return undefined\n        }\n        return self.refNameColors[idx % self.refNameColors.length]\n      },\n      /**\n       * #method\n       */\n      isValidRefName(refName: string) {\n        if (!self.refNameAliases) {\n          throw new Error(\n            'isValidRefName cannot be called yet, the assembly has not finished loading',\n          )\n        }\n        return !!this.getCanonicalRefName(refName)\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setLoaded({\n        adapterRegionsWithAssembly,\n        refNameAliases,\n        lowerCaseRefNameAliases,\n        cytobands,\n      }: Loading) {\n        self.loaded = true\n        this.setRegions(adapterRegionsWithAssembly)\n        this.setRefNameAliases(refNameAliases, lowerCaseRefNameAliases)\n        this.setCytobands(cytobands)\n      },\n      /**\n       * #action\n       */\n      setError(e: unknown) {\n        console.error(e)\n        self.error = e\n      },\n      /**\n       * #action\n       */\n      setRegions(regions: Region[]) {\n        self.volatileRegions = regions\n      },\n      /**\n       * #action\n       */\n      setRefNameAliases(aliases: RefNameAliases, lcAliases: RefNameAliases) {\n        self.refNameAliases = aliases\n        self.lowerCaseRefNameAliases = lcAliases\n      },\n      /**\n       * #action\n       */\n      setCytobands(cytobands: Feature[]) {\n        self.cytobands = cytobands\n      },\n      /**\n       * #action\n       */\n      setLoadingP(p?: Promise<void>) {\n        self.loadingP = p\n      },\n      /**\n       * #action\n       */\n      load() {\n        if (!self.loadingP) {\n          self.loadingP = this.loadPre().catch(e => {\n            this.setLoadingP(undefined)\n            this.setError(e)\n          })\n        }\n        return self.loadingP\n      },\n      /**\n       * #action\n       */\n      async loadPre() {\n        const conf = self.configuration\n        const refNameAliasesAdapterConf = conf?.refNameAliases?.adapter\n        const cytobandAdapterConf = conf?.cytobands?.adapter\n        const sequenceAdapterConf = conf?.sequence.adapter\n        const assemblyName = self.name\n\n        const regions = await getAssemblyRegions(sequenceAdapterConf, pm)\n        const adapterRegionsWithAssembly = regions.map(r => {\n          checkRefName(r.refName)\n          return { ...r, assemblyName }\n        })\n        const refNameAliases: RefNameAliases = {}\n\n        const ret = await getRefNameAliases(refNameAliasesAdapterConf, pm)\n        const cytobands = await getCytobands(cytobandAdapterConf, pm)\n        ret.forEach(({ refName, aliases }) => {\n          aliases.forEach(a => {\n            checkRefName(a)\n            refNameAliases[a] = refName\n          })\n        })\n        // add identity to the refNameAliases list\n        adapterRegionsWithAssembly.forEach(region => {\n          refNameAliases[region.refName] = region.refName\n        })\n\n        const lowerCaseRefNameAliases = Object.fromEntries(\n          Object.entries(refNameAliases).map(([key, val]) => [\n            key.toLowerCase(),\n            val,\n          ]),\n        )\n\n        this.setLoaded({\n          adapterRegionsWithAssembly,\n          refNameAliases,\n          lowerCaseRefNameAliases,\n          cytobands,\n        })\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       */\n      getAdapterMapEntry(adapterConf: unknown, options: BaseOptions) {\n        const { signal, statusCallback, ...rest } = options\n        if (!options.sessionId) {\n          throw new Error('sessionId is required')\n        }\n        const adapterId = getAdapterId(adapterConf)\n        return adapterLoads.get(\n          adapterId,\n          {\n            adapterConf,\n            self: self as Assembly,\n            options: rest,\n          } as CacheData,\n\n          // signal intentionally not passed here, fixes issues like #2221.\n          // alternative fix #2540 was proposed but non-working currently\n          undefined,\n          statusCallback,\n        )\n      },\n\n      /**\n       * #method\n       * get Map of `canonical-name -> adapter-specific-name`\n       */\n      async getRefNameMapForAdapter(adapterConf: unknown, opts: BaseOptions) {\n        if (!opts?.sessionId) {\n          throw new Error('sessionId is required')\n        }\n        const map = await this.getAdapterMapEntry(adapterConf, opts)\n        return map.forwardMap\n      },\n\n      /**\n       * #method\n       * get Map of `adapter-specific-name -> canonical-name`\n       */\n      async getReverseRefNameMapForAdapter(\n        adapterConf: unknown,\n        opts: BaseOptions,\n      ) {\n        const map = await this.getAdapterMapEntry(adapterConf, opts)\n        return map.reverseMap\n      },\n    }))\n}\n\nasync function getRefNameAliases(\n  config: AnyConfigurationModel,\n  pm: PluginManager,\n  signal?: AbortSignal,\n) {\n  const type = pm.getAdapterType(config.type)\n  const CLASS = await type.getAdapterClass()\n  const adapter = new CLASS(config, undefined, pm) as BaseRefNameAliasAdapter\n  return adapter.getRefNameAliases({ signal })\n}\n\nasync function getCytobands(config: AnyConfigurationModel, pm: PluginManager) {\n  const type = pm.getAdapterType(config.type)\n  const CLASS = await type.getAdapterClass()\n  const adapter = new CLASS(config, undefined, pm)\n\n  // @ts-expect-error\n  return adapter.getData()\n}\n\nasync function getAssemblyRegions(\n  config: AnyConfigurationModel,\n  pm: PluginManager,\n  signal?: AbortSignal,\n) {\n  const type = pm.getAdapterType(config.type)\n  const CLASS = await type.getAdapterClass()\n  const adapter = new CLASS(config, undefined, pm) as RegionsAdapter\n  return adapter.getRegions({ signal })\n}\n\nexport type AssemblyModel = ReturnType<typeof assemblyFactory>\nexport type Assembly = Instance<AssemblyModel>\n","import {\n  addDisposer,\n  cast,\n  getParent,\n  types,\n  Instance,\n  IAnyType,\n} from 'mobx-state-tree'\nimport { when } from '../util'\nimport { reaction } from 'mobx'\nimport { readConfObject, AnyConfigurationModel } from '../configuration'\nimport assemblyFactory, { Assembly } from './assembly'\nimport PluginManager from '../PluginManager'\nimport RpcManager from '../rpc/RpcManager'\n\n/**\n * #stateModel AssemblyManager\n */\nfunction assemblyManagerFactory(conf: IAnyType, pm: PluginManager) {\n  type Conf = Instance<typeof conf> // this is type any, try to narrow...\n  return types\n    .model({\n      /**\n       * #property\n       * this is automatically managed by an autorun which looks in the parent\n       * session.assemblies, session.sessionAssemblies, and\n       * session.temporaryAssemblies\n       */\n      assemblies: types.array(assemblyFactory(conf, pm)),\n    })\n    .views(self => ({\n      get assemblyNameMap() {\n        const obj = {} as Record<string, Assembly | undefined>\n        for (const assembly of self.assemblies) {\n          for (const name of assembly.allAliases) {\n            obj[name] = assembly\n          }\n        }\n        return obj\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       */\n      get(asmName: string) {\n        return self.assemblyNameMap[asmName]\n      },\n\n      /**\n       * #getter\n       */\n      get assemblyNamesList() {\n        return this.assemblyList.map(asm => asm.name)\n      },\n\n      /**\n       * #getter\n       * looks at jbrowse.assemblies, session.sessionAssemblies, and\n       * session.temporaryAssemblies to load from\n       */\n      get assemblyList() {\n        // name is the explicit identifier and can be accessed without getConf,\n        // hence the union with {name:string}\n        const {\n          jbrowse: { assemblies },\n          session: { sessionAssemblies = [], temporaryAssemblies = [] } = {},\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        } = getParent<any>(self)\n        return [\n          ...assemblies,\n          ...sessionAssemblies,\n          ...temporaryAssemblies,\n        ] as AnyConfigurationModel[]\n      },\n\n      get rpcManager(): RpcManager {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return getParent<any>(self).rpcManager\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       * use this method instead of assemblyManager.get(assemblyName)\n       * to get an assembly with regions loaded\n       */\n      async waitForAssembly(assemblyName: string) {\n        if (!assemblyName) {\n          throw new Error('no assembly name supplied to waitForAssembly')\n        }\n        let assembly = self.get(assemblyName)\n        if (!assembly) {\n          try {\n            await when(() => Boolean(self.get(assemblyName)), { timeout: 1000 })\n            assembly = self.get(assemblyName)\n          } catch (e) {\n            // ignore\n          }\n        }\n\n        if (!assembly) {\n          return undefined\n        }\n        await assembly.load()\n        await when(\n          () =>\n            Boolean(assembly?.regions && assembly.refNameAliases) ||\n            !!assembly?.error,\n        )\n        if (assembly.error) {\n          throw assembly.error\n        }\n        return assembly\n      },\n\n      /**\n       * #method\n       */\n      async getRefNameMapForAdapter(\n        adapterConf: unknown,\n        assemblyName: string | undefined,\n        opts: { signal?: AbortSignal; sessionId: string },\n      ) {\n        if (assemblyName) {\n          const asm = await this.waitForAssembly(assemblyName)\n          return asm?.getRefNameMapForAdapter(adapterConf, opts)\n        }\n        return {}\n      },\n\n      /**\n       * #method\n       */\n      async getReverseRefNameMapForAdapter(\n        adapterConf: unknown,\n        assemblyName: string | undefined,\n        opts: { signal?: AbortSignal; sessionId: string },\n      ) {\n        if (assemblyName) {\n          const asm = await this.waitForAssembly(assemblyName)\n          return asm?.getReverseRefNameMapForAdapter(adapterConf, opts)\n        }\n        return {}\n      },\n\n      /**\n       * #method\n       */\n      isValidRefName(refName: string, assemblyName: string) {\n        const assembly = self.get(assemblyName)\n        if (assembly) {\n          return assembly.isValidRefName(refName)\n        }\n        throw new Error(\n          `Failed to look up refName ${refName} on ${assemblyName} because assembly does not exist`,\n        )\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        addDisposer(\n          self,\n          reaction(\n            () => self.assemblyList,\n            assemblyConfs => {\n              self.assemblies.forEach(asm => {\n                if (!asm.configuration) {\n                  this.removeAssembly(asm)\n                }\n              })\n              assemblyConfs.forEach(conf => {\n                if (\n                  !self.assemblies.some(\n                    a => a.name === readConfObject(conf, 'name'),\n                  )\n                ) {\n                  this.addAssembly(conf)\n                }\n              })\n            },\n            { fireImmediately: true, name: 'assemblyManagerAfterAttach' },\n          ),\n        )\n      },\n\n      /**\n       * #action\n       * private: you would generally want to add to manipulate\n       * jbrowse.assemblies, session.sessionAssemblies, or\n       * session.temporaryAssemblies instead of using this directly\n       */\n      removeAssembly(asm: Assembly) {\n        self.assemblies.remove(asm)\n      },\n\n      /**\n       * #action\n       * private: you would generally want to add to manipulate\n       * jbrowse.assemblies, session.sessionAssemblies, or\n       * session.temporaryAssemblies instead of using this directly\n       *\n       * this can take an active instance of an assembly, in which case it is\n       * referred to, or it can take an identifier e.g. assembly name, which is\n       * used as a reference. snapshots cannot be used\n       */\n      addAssembly(configuration: Conf) {\n        self.assemblies.push({ configuration })\n      },\n\n      /**\n       * #action\n       * private: you would generally want to add to manipulate\n       * jbrowse.assemblies, session.sessionAssemblies, or\n       * session.temporaryAssemblies instead of using this directly\n       */\n      replaceAssembly(idx: number, configuration: Conf) {\n        self.assemblies[idx] = cast({ configuration })\n      },\n    }))\n}\n\nexport default assemblyManagerFactory\n","import { lazy } from 'react'\nimport {\n  addDisposer,\n  cast,\n  getSnapshot,\n  getType,\n  types,\n  IAnyStateTreeNode,\n  SnapshotIn,\n  Instance,\n  IAnyType,\n} from 'mobx-state-tree'\n\nimport { saveAs } from 'file-saver'\nimport { observable, autorun } from 'mobx'\nimport assemblyConfigSchemaFactory from '@jbrowse/core/assemblyManager/assemblyConfigSchema'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport RpcManager from '@jbrowse/core/rpc/RpcManager'\nimport TextSearchManager from '@jbrowse/core/TextSearch/TextSearchManager'\nimport { AbstractSessionModel, SessionWithWidgets } from '@jbrowse/core/util'\nimport { MenuItem } from '@jbrowse/core/ui'\n\n// icons\nimport AddIcon from '@mui/icons-material/Add'\nimport SettingsIcon from '@mui/icons-material/Settings'\nimport AppsIcon from '@mui/icons-material/Apps'\nimport FileCopyIcon from '@mui/icons-material/FileCopy'\nimport FolderOpenIcon from '@mui/icons-material/FolderOpen'\nimport GetAppIcon from '@mui/icons-material/GetApp'\nimport PublishIcon from '@mui/icons-material/Publish'\nimport ExtensionIcon from '@mui/icons-material/Extension'\nimport StorageIcon from '@mui/icons-material/Storage'\nimport SaveIcon from '@mui/icons-material/Save'\nimport UndoIcon from '@mui/icons-material/Undo'\nimport RedoIcon from '@mui/icons-material/Redo'\nimport { Cable } from '@jbrowse/core/ui/Icons'\n\n// other\nimport makeWorkerInstance from '../makeWorkerInstance'\nimport jbrowseWebFactory from '../jbrowseModel'\nimport { filterSessionInPlace } from '../util'\nimport packageJSON from '../../package.json'\nimport {\n  BaseSession,\n  BaseSessionType,\n  SessionWithDialogs,\n  InternetAccountsRootModelMixin,\n  BaseRootModelFactory,\n} from '@jbrowse/product-core'\nimport { HistoryManagementMixin, RootAppMenuMixin } from '@jbrowse/app-core'\nimport { hydrateRoot } from 'react-dom/client'\nimport { AssemblyManager } from '@jbrowse/plugin-data-management'\n\n// locals\nconst SetDefaultSession = lazy(() => import('../components/SetDefaultSession'))\nconst PreferencesDialog = lazy(() => import('../components/PreferencesDialog'))\n\nexport interface Menu {\n  label: string\n  menuItems: MenuItem[]\n}\n\ntype AssemblyConfig = ReturnType<typeof assemblyConfigSchemaFactory>\ntype SessionModelFactory = (args: {\n  pluginManager: PluginManager\n  assemblyConfigSchema: AssemblyConfig\n}) => IAnyType\n\n/**\n * #stateModel JBrowseWebRootModel\n *\n * composed of\n * - BaseRootModel\n * - InternetAccountsMixin\n * - HistoryManagementMixin\n * - AppFocusMixin\n * - RootAppMenuMixin\n *\n * note: many properties of the root model are available through the session,\n * and we generally prefer using the session model (via e.g. getSession) over\n * the root model (via e.g. getRoot) in plugin code\n */\nexport default function RootModel({\n  pluginManager,\n  sessionModelFactory,\n  adminMode = false,\n}: {\n  pluginManager: PluginManager\n  sessionModelFactory: SessionModelFactory\n  adminMode?: boolean\n}) {\n  const assemblyConfigSchema = assemblyConfigSchemaFactory(pluginManager)\n  const jbrowseModelType = jbrowseWebFactory({\n    pluginManager,\n    assemblyConfigSchema,\n  })\n  const sessionModelType = sessionModelFactory({\n    pluginManager,\n    assemblyConfigSchema,\n  })\n  return types\n    .compose(\n      BaseRootModelFactory({\n        pluginManager,\n        jbrowseModelType,\n        sessionModelType,\n        assemblyConfigSchema,\n      }),\n      InternetAccountsRootModelMixin(pluginManager),\n      HistoryManagementMixin(),\n      RootAppMenuMixin(),\n    )\n    .props({\n      /**\n       * #property\n       */\n      configPath: types.maybe(types.string),\n    })\n    .volatile(self => ({\n      version: packageJSON.version,\n      hydrateFn: hydrateRoot,\n      pluginsUpdated: false,\n      rpcManager: new RpcManager(\n        pluginManager,\n        self.jbrowse.configuration.rpc,\n        {\n          WebWorkerRpcDriver: { makeWorkerInstance },\n          MainThreadRpcDriver: {},\n        },\n      ),\n      savedSessionsVolatile: observable.map<\n        string,\n        { name: string; [key: string]: unknown }\n      >({}),\n      textSearchManager: new TextSearchManager(pluginManager),\n      error: undefined as unknown,\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get savedSessions() {\n        return [...self.savedSessionsVolatile.values()]\n      },\n      /**\n       * #method\n       */\n      localStorageId(name: string) {\n        return `localSaved-${name}-${self.configPath}`\n      },\n      /**\n       * #getter\n       */\n      get autosaveId() {\n        return `autosave-${self.configPath}`\n      },\n      /**\n       * #getter\n       */\n      get previousAutosaveId() {\n        return `previousAutosave-${self.configPath}`\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get savedSessionNames() {\n        return self.savedSessions.map(session => session.name)\n      },\n      /**\n       * #getter\n       */\n      get currentSessionId() {\n        const locationUrl = new URL(window.location.href)\n        const params = new URLSearchParams(locationUrl.search)\n        return params?.get('session')?.split('local-')[1]\n      },\n    }))\n\n    .actions(self => ({\n      afterCreate() {\n        for (const [key, val] of Object.entries(localStorage)\n          .filter(([key, _val]) => key.startsWith('localSaved-'))\n          .filter(([key]) => key.includes(self.configPath || 'undefined'))) {\n          try {\n            const { session } = JSON.parse(val)\n            self.savedSessionsVolatile.set(key, session)\n          } catch (e) {\n            console.error('bad session encountered', key, val)\n          }\n        }\n        addDisposer(\n          self,\n          autorun(() => {\n            for (const [, val] of self.savedSessionsVolatile.entries()) {\n              try {\n                const key = self.localStorageId(val.name)\n                localStorage.setItem(key, JSON.stringify({ session: val }))\n              } catch (e) {\n                // @ts-expect-error\n                if (e.code === '22' || e.code === '1024') {\n                  alert(\n                    'Local storage is full! Please use the \"Open sessions\" panel to remove old sessions',\n                  )\n                }\n              }\n            }\n          }),\n        )\n\n        addDisposer(\n          self,\n          autorun(\n            () => {\n              if (!self.session) {\n                return\n              }\n              const snapshot = getSnapshot(self.session as BaseSession) || {\n                name: 'empty',\n              }\n              const s = JSON.stringify\n              sessionStorage.setItem('current', s({ session: snapshot }))\n              localStorage.setItem(\n                `autosave-${self.configPath}`,\n                s({\n                  session: {\n                    ...snapshot,\n                    name: `${snapshot.name}-autosaved`,\n                  },\n                }),\n              )\n\n              // this check is not able to be modularized into it's own autorun\n              // at current time because it depends on session storage snapshot\n              // being set above\n              if (self.pluginsUpdated) {\n                window.location.reload()\n              }\n            },\n            { delay: 400 },\n          ),\n        )\n      },\n      /**\n       * #action\n       */\n      setSession(sessionSnapshot?: SnapshotIn<BaseSessionType>) {\n        const oldSession = self.session\n        self.session = cast(sessionSnapshot)\n        if (self.session) {\n          // validate all references in the session snapshot\n          try {\n            filterSessionInPlace(self.session, getType(self.session))\n          } catch (error) {\n            // throws error if session filtering failed\n            self.session = oldSession\n            throw error\n          }\n        }\n      },\n\n      /**\n       * #action\n       */\n      setPluginsUpdated(flag: boolean) {\n        self.pluginsUpdated = flag\n      },\n      /**\n       * #action\n       */\n      setDefaultSession() {\n        const { defaultSession } = self.jbrowse\n        const newSession = {\n          ...defaultSession,\n          name: `${defaultSession.name} ${new Date().toLocaleString()}`,\n        }\n\n        this.setSession(newSession)\n      },\n      /**\n       * #action\n       */\n      renameCurrentSession(sessionName: string) {\n        if (self.session) {\n          const snapshot = JSON.parse(JSON.stringify(getSnapshot(self.session)))\n          snapshot.name = sessionName\n          this.setSession(snapshot)\n        }\n      },\n      /**\n       * #action\n       */\n      addSavedSession(session: { name: string }) {\n        const key = self.localStorageId(session.name)\n        self.savedSessionsVolatile.set(key, session)\n      },\n      /**\n       * #action\n       */\n      removeSavedSession(session: { name: string }) {\n        const key = self.localStorageId(session.name)\n        localStorage.removeItem(key)\n        self.savedSessionsVolatile.delete(key)\n      },\n      /**\n       * #action\n       */\n      duplicateCurrentSession() {\n        if (self.session) {\n          const snapshot = JSON.parse(JSON.stringify(getSnapshot(self.session)))\n          let newSnapshotName = `${self.session.name} (copy)`\n          if (self.savedSessionNames.includes(newSnapshotName)) {\n            let newSnapshotCopyNumber = 2\n            do {\n              newSnapshotName = `${self.session.name} (copy ${newSnapshotCopyNumber})`\n              newSnapshotCopyNumber += 1\n            } while (self.savedSessionNames.includes(newSnapshotName))\n          }\n          snapshot.name = newSnapshotName\n          this.setSession(snapshot)\n        }\n      },\n      /**\n       * #action\n       */\n      activateSession(name: string) {\n        const localId = self.localStorageId(name)\n        const newSessionSnapshot = localStorage.getItem(localId)\n        if (!newSessionSnapshot) {\n          throw new Error(\n            `Can't activate session ${name}, it is not in the savedSessions`,\n          )\n        }\n\n        this.setSession(JSON.parse(newSessionSnapshot).session)\n      },\n      /**\n       * #action\n       */\n      saveSessionToLocalStorage() {\n        if (self.session) {\n          const key = self.localStorageId(self.session.name)\n          self.savedSessionsVolatile.set(key, getSnapshot(self.session))\n        }\n      },\n      loadAutosaveSession() {\n        const previousAutosave = localStorage.getItem(self.previousAutosaveId)\n        const autosavedSession = previousAutosave\n          ? JSON.parse(previousAutosave).session\n          : {}\n        const { name } = autosavedSession\n        autosavedSession.name = `${name.replace('-autosaved', '')}-restored`\n        this.setSession(autosavedSession)\n      },\n      /**\n       * #action\n       */\n      setError(error?: unknown) {\n        self.error = error\n      },\n    }))\n    .volatile(self => ({\n      menus: [\n        {\n          label: 'File',\n          menuItems: [\n            {\n              label: 'New session',\n              icon: AddIcon,\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              onClick: (session: any) => {\n                const lastAutosave = localStorage.getItem(self.autosaveId)\n                if (lastAutosave) {\n                  localStorage.setItem(self.previousAutosaveId, lastAutosave)\n                }\n                session.setDefaultSession()\n              },\n            },\n            {\n              label: 'Import session…',\n              icon: PublishIcon,\n              onClick: (session: SessionWithWidgets) => {\n                const widget = session.addWidget(\n                  'ImportSessionWidget',\n                  'importSessionWidget',\n                )\n                session.showWidget(widget)\n              },\n            },\n            {\n              label: 'Export session',\n              icon: GetAppIcon,\n              onClick: (session: IAnyStateTreeNode) => {\n                const sessionBlob = new Blob(\n                  [JSON.stringify({ session: getSnapshot(session) }, null, 2)],\n                  { type: 'text/plain;charset=utf-8' },\n                )\n                saveAs(sessionBlob, 'session.json')\n              },\n            },\n            {\n              label: 'Open session…',\n              icon: FolderOpenIcon,\n              onClick: (session: SessionWithWidgets) => {\n                const widget = session.addWidget(\n                  'SessionManager',\n                  'sessionManager',\n                )\n                session.showWidget(widget)\n              },\n            },\n            {\n              label: 'Save session',\n              icon: SaveIcon,\n              onClick: (session: SessionWithWidgets) => {\n                self.saveSessionToLocalStorage()\n                session.notify(`Saved session \"${session.name}\"`, 'success')\n              },\n            },\n            {\n              label: 'Duplicate session',\n              icon: FileCopyIcon,\n              onClick: (session: AbstractSessionModel) => {\n                if (session.duplicateCurrentSession) {\n                  session.duplicateCurrentSession()\n                }\n              },\n            },\n            { type: 'divider' },\n            {\n              label: 'Open track...',\n              icon: StorageIcon,\n              onClick: (session: SessionWithWidgets) => {\n                if (session.views.length === 0) {\n                  session.notify('Please open a view to add a track first')\n                } else if (session.views.length > 0) {\n                  const widget = session.addWidget(\n                    'AddTrackWidget',\n                    'addTrackWidget',\n                    { view: session.views[0].id },\n                  )\n                  session.showWidget(widget)\n                  if (session.views.length > 1) {\n                    session.notify(\n                      `This will add a track to the first view. Note: if you want to open a track in a specific view open the track selector for that view and use the add track (plus icon) in the bottom right`,\n                    )\n                  }\n                }\n              },\n            },\n            {\n              label: 'Open connection...',\n              icon: Cable,\n              onClick: (session: SessionWithWidgets) => {\n                session.showWidget(\n                  session.addWidget(\n                    'AddConnectionWidget',\n                    'addConnectionWidget',\n                  ),\n                )\n              },\n            },\n            { type: 'divider' },\n            {\n              label: 'Return to splash screen',\n              icon: AppsIcon,\n              onClick: () => self.setSession(undefined),\n            },\n          ],\n        },\n        ...(adminMode\n          ? [\n              {\n                label: 'Admin',\n                menuItems: [\n                  {\n                    label: 'Open assembly manager',\n                    onClick: () =>\n                      self.session.queueDialog((onClose: () => void) => [\n                        AssemblyManager,\n                        { onClose, rootModel: self },\n                      ]),\n                  },\n                  {\n                    label: 'Set default session',\n                    onClick: () =>\n                      self.session.queueDialog((onClose: () => void) => [\n                        SetDefaultSession,\n                        { rootModel: self, onClose },\n                      ]),\n                  },\n                ],\n              },\n            ]\n          : []),\n        {\n          label: 'Add',\n          menuItems: [],\n        },\n        {\n          label: 'Tools',\n          menuItems: [\n            {\n              label: 'Undo',\n              icon: UndoIcon,\n              onClick: () => {\n                if (self.history.canUndo) {\n                  self.history.undo()\n                }\n              },\n            },\n            {\n              label: 'Redo',\n              icon: RedoIcon,\n              onClick: () => {\n                if (self.history.canRedo) {\n                  self.history.redo()\n                }\n              },\n            },\n            { type: 'divider' },\n            {\n              label: 'Plugin store',\n              icon: ExtensionIcon,\n              onClick: () => {\n                if (self.session) {\n                  self.session.showWidget(\n                    self.session.addWidget(\n                      'PluginStoreWidget',\n                      'pluginStoreWidget',\n                    ),\n                  )\n                }\n              },\n            },\n            {\n              label: 'Preferences',\n              icon: SettingsIcon,\n              onClick: () => {\n                if (self.session) {\n                  ;(self.session as SessionWithDialogs).queueDialog(\n                    handleClose => [\n                      PreferencesDialog,\n                      {\n                        session: self.session,\n                        handleClose,\n                      },\n                    ],\n                  )\n                }\n              },\n            },\n          ],\n        },\n      ] as Menu[],\n      adminMode,\n    }))\n}\n\nexport type WebRootModelType = ReturnType<typeof RootModel>\nexport type WebRootModel = Instance<WebRootModelType>\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport assemblyManagerFactory, {\n  BaseAssemblyConfigSchema,\n} from '@jbrowse/core/assemblyManager'\nimport RpcManager from '@jbrowse/core/rpc/RpcManager'\nimport {\n  IAnyType,\n  Instance,\n  SnapshotIn,\n  cast,\n  getSnapshot,\n  isStateTreeNode,\n  types,\n} from 'mobx-state-tree'\nimport TextSearchManager from '@jbrowse/core/TextSearch/TextSearchManager'\n\n/**\n * #stateModel BaseRootModel\n * #category root\n * factory function for the Base-level root model shared by all products\n */\nexport function BaseRootModelFactory({\n  pluginManager,\n  jbrowseModelType,\n  sessionModelType,\n  assemblyConfigSchema,\n}: {\n  pluginManager: PluginManager\n  jbrowseModelType: IAnyType\n  sessionModelType: IAnyType\n  assemblyConfigSchema: BaseAssemblyConfigSchema\n}) {\n  return types\n    .model('BaseRootModel', {\n      /**\n       * #property\n       * `jbrowse` is a mapping of the config.json into the in-memory state\n       * tree\n       */\n      jbrowse: jbrowseModelType,\n\n      /**\n       * #property\n       * `session` encompasses the currently active state of the app, including\n       * views open, tracks open in those views, etc.\n       */\n      session: types.maybe(sessionModelType),\n      /**\n       * #property\n       */\n      sessionPath: types.optional(types.string, ''),\n\n      /**\n       * #property\n       */\n      assemblyManager: types.optional(\n        assemblyManagerFactory(assemblyConfigSchema, pluginManager),\n        {},\n      ),\n    })\n    .volatile(self => ({\n      rpcManager: new RpcManager(\n        pluginManager,\n        self.jbrowse.configuration.rpc,\n        {\n          MainThreadRpcDriver: {},\n        },\n      ),\n\n      adminMode: false,\n      isAssemblyEditing: false,\n      error: undefined as unknown,\n      textSearchManager: new TextSearchManager(pluginManager),\n      pluginManager,\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setError(error: unknown) {\n        self.error = error\n      },\n      /**\n       * #action\n       */\n      setSession(sessionSnapshot?: SnapshotIn<IAnyType>) {\n        self.session = cast(sessionSnapshot)\n      },\n      /**\n       * #action\n       */\n      setDefaultSession() {\n        this.setSession(self.jbrowse.defaultSession)\n      },\n      /**\n       * #action\n       */\n      setSessionPath(path: string) {\n        self.sessionPath = path\n      },\n      /**\n       * #action\n       */\n      renameCurrentSession(newName: string) {\n        if (self.session) {\n          const snapshot = JSON.parse(JSON.stringify(getSnapshot(self.session)))\n          snapshot.name = newName\n          this.setSession(snapshot)\n        }\n      },\n      /**\n       * #action\n       */\n      setAssemblyEditing(flag: boolean) {\n        self.isAssemblyEditing = flag\n      },\n    }))\n}\n\nexport type BaseRootModelType = ReturnType<typeof BaseRootModelFactory>\nexport type BaseRootModel = Instance<BaseRootModelType>\n\n/** Type guard for checking if something is a JB root model */\nexport function isRootModel(thing: unknown): thing is BaseRootModelType {\n  return (\n    isStateTreeNode(thing) &&\n    'session' in thing &&\n    'jbrowse' in thing &&\n    'assemblyManager' in thing\n  )\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { UriLocation } from '@jbrowse/core/util'\nimport { autorun } from 'mobx'\nimport { Instance, addDisposer, types } from 'mobx-state-tree'\nimport { BaseRootModel } from './BaseRootModel'\n\n/**\n * #stateModel InternetAccountsMixin\n * #category root\n */\nexport function InternetAccountsRootModelMixin(pluginManager: PluginManager) {\n  return types\n    .model({\n      /**\n       * #property\n       */\n      internetAccounts: types.array(\n        pluginManager.pluggableMstType('internet account', 'stateModel'),\n      ),\n    })\n    .actions(self => ({\n      /**\n       * #action\n       */\n      initializeInternetAccount(\n        internetAccountConfig: AnyConfigurationModel,\n        initialSnapshot = {},\n      ) {\n        const internetAccountType = pluginManager.getInternetAccountType(\n          internetAccountConfig.type,\n        )\n        if (!internetAccountType) {\n          throw new Error(\n            `unknown internet account type ${internetAccountConfig.type}`,\n          )\n        }\n\n        const length = self.internetAccounts.push({\n          ...initialSnapshot,\n          type: internetAccountConfig.type,\n          configuration: internetAccountConfig,\n        })\n        return self.internetAccounts[length - 1]\n      },\n\n      /**\n       * #action\n       */\n      createEphemeralInternetAccount(\n        internetAccountId: string,\n        initialSnapshot = {},\n        url: string,\n      ) {\n        let hostUri\n\n        try {\n          hostUri = new URL(url).origin\n        } catch (e) {\n          // ignore\n        }\n        // id of a custom new internaccount is `${type}-${name}`\n        const internetAccountSplit = internetAccountId.split('-')\n        const configuration = {\n          type: internetAccountSplit[0],\n          internetAccountId: internetAccountId,\n          name: internetAccountSplit.slice(1).join('-'),\n          description: '',\n          domains: hostUri ? [hostUri] : [],\n        }\n        const type = pluginManager.getInternetAccountType(configuration.type)\n        const internetAccount = type.stateModel.create({\n          ...initialSnapshot,\n          type: configuration.type,\n          configuration,\n        })\n        self.internetAccounts.push(internetAccount)\n        return internetAccount\n      },\n      /**\n       * #action\n       */\n      findAppropriateInternetAccount(location: UriLocation) {\n        // find the existing account selected from menu\n        const selectedId = location.internetAccountId\n        if (selectedId) {\n          const selectedAccount = self.internetAccounts.find(account => {\n            return account.internetAccountId === selectedId\n          })\n          if (selectedAccount) {\n            return selectedAccount\n          }\n        }\n\n        // if no existing account or not found, try to find working account\n        for (const account of self.internetAccounts) {\n          const handleResult = account.handlesLocation(location)\n          if (handleResult) {\n            return account\n          }\n        }\n\n        // if still no existing account, create ephemeral config to use\n        return selectedId\n          ? this.createEphemeralInternetAccount(selectedId, {}, location.uri)\n          : null\n      },\n    }))\n    .actions(self => ({\n      afterCreate() {\n        addDisposer(\n          self,\n          autorun(() => {\n            const { jbrowse } = self as typeof self & BaseRootModel\n            jbrowse.internetAccounts.forEach(self.initializeInternetAccount)\n          }),\n        )\n      },\n    }))\n}\n\nexport type RootModelWithInternetAccountsType = ReturnType<\n  typeof InternetAccountsRootModelMixin\n>\nexport type RootModelWithInternetAccounts =\n  Instance<RootModelWithInternetAccountsType>\n","import TimeTraveller from '@jbrowse/core/util/TimeTraveller'\nimport type { BaseRootModel } from '@jbrowse/product-core'\nimport { autorun } from 'mobx'\nimport { addDisposer, types } from 'mobx-state-tree'\n\n/**\n * #stateModel HistoryManagementMixin\n * #category root\n */\nexport function HistoryManagementMixin() {\n  return types\n    .model({\n      /**\n       * #property\n       * used for undo/redo\n       */\n      history: types.optional(TimeTraveller, { targetPath: '../session' }),\n    })\n    .actions(self => ({\n      afterCreate() {\n        document.addEventListener('keydown', e => {\n          if (\n            self.history.canRedo &&\n            // ctrl+shift+z or cmd+shift+z\n            (((e.ctrlKey || e.metaKey) && e.shiftKey && e.code === 'KeyZ') ||\n              // ctrl+y\n              (e.ctrlKey && !e.shiftKey && e.code === 'KeyY')) &&\n            document.activeElement?.tagName.toUpperCase() !== 'INPUT'\n          ) {\n            self.history.redo()\n          }\n          if (\n            self.history.canUndo &&\n            // ctrl+z or cmd+z\n            (e.ctrlKey || e.metaKey) &&\n            !e.shiftKey &&\n            e.code === 'KeyZ' &&\n            document.activeElement?.tagName.toUpperCase() !== 'INPUT'\n          ) {\n            self.history.undo()\n          }\n        })\n        addDisposer(\n          self,\n          autorun(() => {\n            const { session } = self as typeof self & BaseRootModel\n            if (session) {\n              // we use a specific initialization routine after session is\n              // created to get it to start tracking itself sort of related\n              // issue here\n              // https://github.com/mobxjs/mobx-state-tree/issues/1089#issuecomment-441207911\n              self.history.initialize()\n            }\n          }),\n        )\n      },\n    }))\n}\n","import { MenuItem } from '@jbrowse/core/ui/Menu'\nimport { types } from 'mobx-state-tree'\n\nexport interface Menu {\n  label: string\n  menuItems: MenuItem[]\n}\nexport function RootAppMenuMixin() {\n  return types.model({}).actions(s => {\n    const self = s as { menus: Menu[] }\n    return {\n      /**\n       * #action\n       */\n      setMenus(newMenus: Menu[]) {\n        self.menus = newMenus\n      },\n      /**\n       * #action\n       * Add a top-level menu\n       * @param menuName - Name of the menu to insert.\n       * @returns The new length of the top-level menus array\n       */\n      appendMenu(menuName: string) {\n        return self.menus.push({ label: menuName, menuItems: [] })\n      },\n      /**\n       * #action\n       * Insert a top-level menu\n       * @param menuName - Name of the menu to insert.\n       * @param position - Position to insert menu. If negative, counts from th\n       * end, e.g. `insertMenu('My Menu', -1)` will insert the menu as the\n       * second-to-last one.\n       * @returns The new length of the top-level menus array\n       */\n      insertMenu(menuName: string, position: number) {\n        self.menus.splice(\n          (position < 0 ? self.menus.length : 0) + position,\n          0,\n          {\n            label: menuName,\n            menuItems: [],\n          },\n        )\n        return self.menus.length\n      },\n      /**\n       * #action\n       * Add a menu item to a top-level menu\n       * @param menuName - Name of the top-level menu to append to.\n       * @param menuItem - Menu item to append.\n       * @returns The new length of the menu\n       */\n      appendToMenu(menuName: string, menuItem: MenuItem) {\n        const menu = self.menus.find(m => m.label === menuName)\n        if (!menu) {\n          self.menus.push({ label: menuName, menuItems: [menuItem] })\n          return 1\n        }\n        return menu.menuItems.push(menuItem)\n      },\n      /**\n       * #action\n       * Insert a menu item into a top-level menu\n       * @param menuName - Name of the top-level menu to insert into\n       * @param menuItem - Menu item to insert\n       * @param position - Position to insert menu item. If negative, counts\n       * from the end, e.g. `insertMenu('My Menu', -1)` will insert the menu as\n       * the second-to-last one.\n       * @returns The new length of the menu\n       */\n      insertInMenu(menuName: string, menuItem: MenuItem, position: number) {\n        const menu = self.menus.find(m => m.label === menuName)\n        if (!menu) {\n          self.menus.push({ label: menuName, menuItems: [menuItem] })\n          return 1\n        }\n        const insertPosition =\n          position < 0 ? menu.menuItems.length + position : position\n        menu.menuItems.splice(insertPosition, 0, menuItem)\n        return menu.menuItems.length\n      },\n      /**\n       * #action\n       * Add a menu item to a sub-menu\n       * @param menuPath - Path to the sub-menu to add to, starting with the\n       * top-level menu (e.g. `['File', 'Insert']`).\n       * @param menuItem - Menu item to append.\n       * @returns The new length of the sub-menu\n       */\n      appendToSubMenu(menuPath: string[], menuItem: MenuItem) {\n        let topMenu = self.menus.find(m => m.label === menuPath[0])\n        if (!topMenu) {\n          const idx = this.appendMenu(menuPath[0])\n          topMenu = self.menus[idx - 1]\n        }\n        let { menuItems: subMenu } = topMenu\n        const pathSoFar = [menuPath[0]]\n        menuPath.slice(1).forEach(menuName => {\n          pathSoFar.push(menuName)\n          let sm = subMenu.find(mi => 'label' in mi && mi.label === menuName)\n          if (!sm) {\n            const idx = subMenu.push({ label: menuName, subMenu: [] })\n            sm = subMenu[idx - 1]\n          }\n          if (!('subMenu' in sm)) {\n            throw new Error(\n              `\"${menuName}\" in path \"${pathSoFar}\" is not a subMenu`,\n            )\n          }\n          subMenu = sm.subMenu\n        })\n        return subMenu.push(menuItem)\n      },\n      /**\n       * #action\n       * Insert a menu item into a sub-menu\n       * @param menuPath - Path to the sub-menu to add to, starting with the\n       * top-level menu (e.g. `['File', 'Insert']`).\n       * @param menuItem - Menu item to insert.\n       * @param position - Position to insert menu item. If negative, counts\n       * from the end, e.g. `insertMenu('My Menu', -1)` will insert the menu as\n       * the second-to-last one.\n       * @returns The new length of the sub-menu\n       */\n      insertInSubMenu(\n        menuPath: string[],\n        menuItem: MenuItem,\n        position: number,\n      ) {\n        let topMenu = self.menus.find(m => m.label === menuPath[0])\n        if (!topMenu) {\n          const idx = this.appendMenu(menuPath[0])\n          topMenu = self.menus[idx - 1]\n        }\n        let { menuItems: subMenu } = topMenu\n        const pathSoFar = [menuPath[0]]\n        menuPath.slice(1).forEach(menuName => {\n          pathSoFar.push(menuName)\n          let sm = subMenu.find(mi => 'label' in mi && mi.label === menuName)\n          if (!sm) {\n            const idx = subMenu.push({ label: menuName, subMenu: [] })\n            sm = subMenu[idx - 1]\n          }\n          if (!('subMenu' in sm)) {\n            throw new Error(\n              `\"${menuName}\" in path \"${pathSoFar}\" is not a subMenu`,\n            )\n          }\n          subMenu = sm.subMenu\n        })\n        subMenu.splice(position, 0, menuItem)\n        return subMenu.length\n      },\n    }\n  })\n}\n","import { IModelType, ModelProperties } from 'mobx-state-tree'\nimport { IObservableArray, observable } from 'mobx'\nimport { NotificationLevel, SnackAction } from '../util/types'\n\nexport interface SnackbarMessage {\n  message: string\n  level?: NotificationLevel\n  action?: SnackAction\n}\n\n/**\n * #stateModel SnackbarModel\n * #category session\n */\nfunction makeExtension(snackbarMessages: IObservableArray<SnackbarMessage>) {\n  return {\n    views: {\n      /**\n       * #getter\n       */\n      get snackbarMessages() {\n        return snackbarMessages\n      },\n    },\n    actions: {\n      /**\n       * #action\n       */\n      notify(message: string, level?: NotificationLevel, action?: SnackAction) {\n        this.pushSnackbarMessage(message, level, action)\n        if (level === 'info' || level === 'success') {\n          setTimeout(() => {\n            this.removeSnackbarMessage(message)\n          }, 5000)\n        }\n      },\n      /**\n       * #action\n       */\n      pushSnackbarMessage(\n        message: string,\n        level?: NotificationLevel,\n        action?: SnackAction,\n      ) {\n        return snackbarMessages.push({ message, level, action })\n      },\n      /**\n       * #action\n       */\n      popSnackbarMessage() {\n        return snackbarMessages.pop()\n      },\n      /**\n       * #action\n       */\n      removeSnackbarMessage(message: string) {\n        const element = snackbarMessages.find(f => f.message === message)\n        if (element) {\n          snackbarMessages.remove(element)\n        }\n      },\n    },\n  }\n}\n\nexport default function addSnackbarToModel<\n  PROPS extends ModelProperties,\n  OTHERS,\n>(\n  tree: IModelType<PROPS, OTHERS>,\n): IModelType<\n  PROPS,\n  OTHERS &\n    ReturnType<typeof makeExtension>['actions'] &\n    ReturnType<typeof makeExtension>['views']\n> {\n  return tree.extend(() => {\n    const snackbarMessages = observable.array<SnackbarMessage>()\n\n    return makeExtension(snackbarMessages)\n  })\n}\n","/** MST props, views, actions, etc related to managing connections */\n\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport {\n  TrackViewModel,\n  getContainingView,\n  isSessionModelWithWidgets,\n} from '@jbrowse/core/util'\nimport {\n  IAnyStateTreeNode,\n  Instance,\n  getMembers,\n  getParent,\n  getSnapshot,\n  getType,\n  isModelType,\n  isReferenceType,\n  types,\n  walk,\n} from 'mobx-state-tree'\n\nimport type { BaseTrackConfig } from '@jbrowse/core/pluggableElementTypes'\n// locals\nimport { isBaseSession } from './BaseSession'\n\nexport interface ReferringNode {\n  node: IAnyStateTreeNode\n  key: string\n}\n\n/**\n * #stateModel ReferenceManagementSessionMixin\n */\nexport function ReferenceManagementSessionMixin(_pluginManager: PluginManager) {\n  return types\n    .model('ReferenceManagementSessionMixin', {})\n    .views(self => ({\n      /**\n       * #method\n       * See if any MST nodes currently have a types.reference to this object.\n       *\n       * @param object - object\n       * @returns An array where the first element is the node referring\n       * to the object and the second element is they property name the node is\n       * using to refer to the object\n       */\n      getReferring(object: IAnyStateTreeNode) {\n        const refs: ReferringNode[] = []\n        walk(getParent(self), node => {\n          if (isModelType(getType(node))) {\n            const members = getMembers(node)\n            Object.entries(members.properties).forEach(([key, value]) => {\n              if (isReferenceType(value) && node[key] === object) {\n                refs.push({ node, key })\n              }\n            })\n          }\n        })\n        return refs\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      removeReferring(\n        referring: ReferringNode[],\n        track: BaseTrackConfig,\n        callbacks: Function[],\n        dereferenceTypeCount: Record<string, number>,\n      ) {\n        referring.forEach(({ node }) => {\n          let dereferenced = false\n          try {\n            // If a view is referring to the track config, remove the track\n            // from the view\n            const type = 'open track(s)'\n            const view = getContainingView(node) as TrackViewModel\n            callbacks.push(() => view.hideTrack(track.trackId))\n            dereferenced = true\n            if (!dereferenceTypeCount[type]) {\n              dereferenceTypeCount[type] = 0\n            }\n            dereferenceTypeCount[type] += 1\n          } catch (err1) {\n            // ignore\n          }\n\n          if (isSessionModelWithWidgets(self) && self.widgets.has(node.id)) {\n            // If a configuration editor widget has the track config\n            // open, close the widget\n            const type = 'configuration editor widget(s)'\n            if (isSessionModelWithWidgets(self)) {\n              callbacks.push(() => self.hideWidget(node))\n            }\n            dereferenced = true\n            if (!dereferenceTypeCount[type]) {\n              dereferenceTypeCount[type] = 0\n            }\n            dereferenceTypeCount[type] += 1\n          }\n          if (!dereferenced) {\n            throw new Error(\n              `Error when closing this connection, the following node is still referring to a track configuration: ${JSON.stringify(\n                getSnapshot(node),\n              )}`,\n            )\n          }\n        })\n      },\n    }))\n}\n\n/** Session mixin MST type for a session that manages multiple views */\nexport type SessionWithReferenceManagementType = ReturnType<\n  typeof ReferenceManagementSessionMixin\n>\n\n/** Instance of a session with MST reference management (`getReferring()`, `removeReferring()`)  */\nexport type SessionWithReferenceManagement =\n  Instance<SessionWithReferenceManagementType>\n\n/** Type guard for SessionWithReferenceManagement */\nexport function isSessionWithReferenceManagement(\n  thing: IAnyStateTreeNode,\n): thing is SessionWithReferenceManagement {\n  return (\n    isBaseSession(thing) &&\n    'getReferring' in thing &&\n    typeof thing.getReferring === 'function' &&\n    'removeReferring' in thing &&\n    typeof thing.removeReferring === 'function'\n  )\n}\n","import {\n  IAnyStateTreeNode,\n  Instance,\n  addDisposer,\n  isAlive,\n  types,\n} from 'mobx-state-tree'\n\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { localStorageGetItem, localStorageSetItem } from '@jbrowse/core/util'\nimport { autorun } from 'mobx'\nimport {\n  AnyConfigurationModel,\n  isConfigurationModel,\n} from '@jbrowse/core/configuration'\nimport { isBaseSession } from './BaseSession'\n\nconst minDrawerWidth = 128\n\n/**\n * #stateModel DrawerWidgetSessionMixin\n */\nexport function DrawerWidgetSessionMixin(pluginManager: PluginManager) {\n  const widgetStateModelType = pluginManager.pluggableMstType(\n    'widget',\n    'stateModel',\n  )\n  type WidgetStateModel = Instance<typeof widgetStateModelType>\n  return types\n    .model({\n      /**\n       * #property\n       */\n      drawerPosition: types.optional(\n        types.string,\n        () => localStorageGetItem('drawerPosition') || 'right',\n      ),\n      /**\n       * #property\n       */\n      drawerWidth: types.optional(\n        types.refinement(types.integer, width => width >= minDrawerWidth),\n        384,\n      ),\n      /**\n       * #property\n       */\n      widgets: types.map(widgetStateModelType),\n      /**\n       * #property\n       */\n      activeWidgets: types.map(types.safeReference(widgetStateModelType)),\n\n      /**\n       * #property\n       */\n      minimized: types.optional(types.boolean, false),\n    })\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get visibleWidget() {\n        if (isAlive(self)) {\n          // returns most recently added item in active widgets\n          return [...self.activeWidgets.values()][self.activeWidgets.size - 1]\n        }\n        return undefined\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setDrawerPosition(arg: string) {\n        self.drawerPosition = arg\n        localStorage.setItem('drawerPosition', arg)\n      },\n\n      /**\n       * #action\n       */\n      updateDrawerWidth(drawerWidth: number) {\n        if (drawerWidth === self.drawerWidth) {\n          return self.drawerWidth\n        }\n        let newDrawerWidth = drawerWidth\n        if (newDrawerWidth < minDrawerWidth) {\n          newDrawerWidth = minDrawerWidth\n        }\n        self.drawerWidth = newDrawerWidth\n        return newDrawerWidth\n      },\n\n      /**\n       * #action\n       */\n      resizeDrawer(distance: number) {\n        if (self.drawerPosition === 'left') {\n          distance *= -1\n        }\n        const oldDrawerWidth = self.drawerWidth\n        const newDrawerWidth = this.updateDrawerWidth(oldDrawerWidth - distance)\n        return oldDrawerWidth - newDrawerWidth\n      },\n\n      /**\n       * #action\n       */\n      addWidget(\n        typeName: string,\n        id: string,\n        initialState = {},\n        conf?: unknown,\n      ) {\n        const typeDefinition = pluginManager.getElementType('widget', typeName)\n        if (!typeDefinition) {\n          throw new Error(`unknown widget type ${typeName}`)\n        }\n        const data = {\n          ...initialState,\n          id,\n          type: typeName,\n          configuration: conf || { type: typeName },\n        }\n        self.widgets.set(id, data)\n        return self.widgets.get(id)\n      },\n\n      /**\n       * #action\n       */\n      showWidget(widget: WidgetStateModel) {\n        if (self.activeWidgets.has(widget.id)) {\n          self.activeWidgets.delete(widget.id)\n        }\n        self.activeWidgets.set(widget.id, widget)\n        self.minimized = false\n      },\n\n      /**\n       * #action\n       */\n      hasWidget(widget: WidgetStateModel) {\n        return self.activeWidgets.has(widget.id)\n      },\n\n      /**\n       * #action\n       */\n      hideWidget(widget: WidgetStateModel) {\n        self.activeWidgets.delete(widget.id)\n      },\n\n      /**\n       * #action\n       */\n      minimizeWidgetDrawer() {\n        self.minimized = true\n      },\n      /**\n       * #action\n       */\n      showWidgetDrawer() {\n        self.minimized = false\n      },\n      /**\n       * #action\n       */\n      hideAllWidgets() {\n        self.activeWidgets.clear()\n      },\n\n      /**\n       * #action\n       * opens a configuration editor to configure the given thing,\n       * and sets the current task to be configuring it\n       * @param configuration -\n       */\n      editConfiguration(configuration: AnyConfigurationModel) {\n        if (!isConfigurationModel(configuration)) {\n          throw new Error(\n            'must pass a configuration model to editConfiguration',\n          )\n        }\n        const editor = this.addWidget(\n          'ConfigurationEditorWidget',\n          'configEditor',\n          { target: configuration },\n        )\n        this.showWidget(editor)\n      },\n\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(() => {\n            localStorageSetItem('drawerPosition', self.drawerPosition)\n          }),\n        )\n      },\n    }))\n}\n\n/** Session mixin MST type for a session that manages drawer widgets */\nexport type SessionWithDrawerWidgetsType = ReturnType<\n  typeof DrawerWidgetSessionMixin\n>\n\n/** Instance of a session that manages drawer widgets */\nexport type SessionWithDrawerWidgets = Instance<SessionWithDrawerWidgetsType>\n\n/** Type guard for SessionWithDrawerWidgets */\nexport function isSessionWithDrawerWidgets(\n  session: IAnyStateTreeNode,\n): session is SessionWithDrawerWidgets {\n  return (\n    isBaseSession(session) &&\n    'widgets' in session &&\n    'drawerPosition' in session\n  )\n}\n","import { IAnyStateTreeNode, Instance, types } from 'mobx-state-tree'\n\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport {\n  AnyConfiguration,\n  AnyConfigurationModel,\n} from '@jbrowse/core/configuration'\n\n// locals\nimport { TracksManagerSessionMixin } from './Tracks'\nimport { isBaseSession } from './BaseSession'\n\n/**\n * #stateModel SessionTracksManagerSessionMixin\n */\nexport function SessionTracksManagerSessionMixin(pluginManager: PluginManager) {\n  return TracksManagerSessionMixin(pluginManager)\n    .named('SessionTracksManagerSessionMixin')\n    .props({\n      /**\n       * #property\n       */\n      sessionTracks: types.array(\n        pluginManager.pluggableConfigSchemaType('track'),\n      ),\n    })\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get tracks(): AnyConfigurationModel[] {\n        return self.jbrowse.tracks\n      },\n    }))\n    .actions(self => {\n      const {\n        addTrackConf: superAddTrackConf,\n        deleteTrackConf: superDeleteTrackConf,\n      } = self\n      return {\n        /**\n         * #action\n         */\n        addTrackConf(trackConf: AnyConfiguration) {\n          if (self.adminMode) {\n            return superAddTrackConf(trackConf)\n          }\n          const { trackId, type } = trackConf as {\n            type: string\n            trackId: string\n          }\n          if (!type) {\n            throw new Error(`unknown track type ${type}`)\n          }\n          const track = self.sessionTracks.find(t => t.trackId === trackId)\n          if (track) {\n            return track\n          }\n          const length = self.sessionTracks.push(trackConf)\n          return self.sessionTracks[length - 1]\n        },\n\n        /**\n         * #action\n         */\n        deleteTrackConf(trackConf: AnyConfigurationModel) {\n          // try to delete it in the main config if in admin mode\n          const found = superDeleteTrackConf(trackConf)\n          if (found) {\n            return found\n          }\n          // if not found or not in admin mode, try to delete it in the\n          // sessionTracks\n          const { trackId } = trackConf\n          const idx = self.sessionTracks.findIndex(t => t.trackId === trackId)\n          if (idx === -1) {\n            return undefined\n          }\n          return self.sessionTracks.splice(idx, 1)\n        },\n      }\n    })\n}\n\n/** Session mixin MST type for a session that has `sessionTracks` */\nexport type SessionWithSessionTracksType = ReturnType<\n  typeof SessionTracksManagerSessionMixin\n>\n\n/** Instance of a session that has `sessionTracks` */\nexport type SessionWithSessionTracks = Instance<SessionWithSessionTracksType>\n\n/** Type guard for SessionWithSessionTracks */\nexport function isSessionWithSessionTracks(\n  thing: IAnyStateTreeNode,\n): thing is SessionWithSessionTracks {\n  return isBaseSession(thing) && 'sessionTracks' in thing\n}\n","import { IAnyStateTreeNode, Instance, types } from 'mobx-state-tree'\n\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport {\n  AnyConfiguration,\n  AnyConfigurationModel,\n} from '@jbrowse/core/configuration'\nimport { BaseSessionModel, isBaseSession } from './BaseSession'\nimport { ReferenceManagementSessionMixin } from './ReferenceManagement'\n\n/**\n * #stateModel TracksManagerSessionMixin\n * composed of\n * - BaseSessionModel\n * - ReferenceManagementSessionMixin\n */\nexport function TracksManagerSessionMixin(pluginManager: PluginManager) {\n  return types\n    .compose(\n      'TracksManagerSessionMixin',\n      BaseSessionModel(pluginManager),\n      ReferenceManagementSessionMixin(pluginManager),\n    )\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get tracks(): AnyConfigurationModel[] {\n        return self.jbrowse.tracks\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      addTrackConf(trackConf: AnyConfiguration) {\n        return self.jbrowse.addTrackConf(trackConf)\n      },\n\n      /**\n       * #action\n       */\n      deleteTrackConf(trackConf: AnyConfigurationModel) {\n        const callbacksToDereferenceTrack: Function[] = []\n        const dereferenceTypeCount: Record<string, number> = {}\n        const referring = self.getReferring(trackConf)\n        self.removeReferring(\n          referring,\n          trackConf,\n          callbacksToDereferenceTrack,\n          dereferenceTypeCount,\n        )\n        callbacksToDereferenceTrack.forEach(cb => cb())\n        if (self.adminMode) {\n          return self.jbrowse.deleteTrackConf(trackConf)\n        }\n      },\n    }))\n}\n\n/** Session mixin MST type for a session that has tracks */\nexport type SessionWithTracksType = ReturnType<typeof TracksManagerSessionMixin>\n\n/** Instance of a session that has tracks */\nexport type SessionWithTracks = Instance<SessionWithTracksType>\n\n/** Type guard for SessionWithTracks */\nexport function isSessionWithTracks(\n  thing: IAnyStateTreeNode,\n): thing is SessionWithTracks {\n  return isBaseSession(thing) && 'tracks' in thing\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { lazy } from 'react'\nimport clone from 'clone'\nimport { PluginDefinition } from '@jbrowse/core/PluginLoader'\nimport {\n  getConf,\n  AnyConfigurationModel,\n  readConfObject,\n  AnyConfiguration,\n} from '@jbrowse/core/configuration'\nimport { AssemblyManager, JBrowsePlugin } from '@jbrowse/core/util/types'\nimport addSnackbarToModel from '@jbrowse/core/ui/SnackbarModel'\nimport { localStorageGetItem, localStorageSetItem } from '@jbrowse/core/util'\nimport { autorun } from 'mobx'\nimport {\n  addDisposer,\n  cast,\n  getParent,\n  getSnapshot,\n  types,\n  SnapshotIn,\n  Instance,\n} from 'mobx-state-tree'\nimport TextSearchManager from '@jbrowse/core/TextSearch/TextSearchManager'\nimport { BaseTrackConfig } from '@jbrowse/core/pluggableElementTypes'\n\n// icons\nimport SettingsIcon from '@mui/icons-material/Settings'\nimport CopyIcon from '@mui/icons-material/FileCopy'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport InfoIcon from '@mui/icons-material/Info'\n\n// locals\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport {\n  DialogQueueSessionMixin,\n  DrawerWidgetSessionMixin,\n  MultipleViewsSessionMixin,\n  ReferenceManagementSessionMixin,\n  SessionTracksManagerSessionMixin,\n  ThemeManagerSessionMixin,\n} from '@jbrowse/product-core'\nimport {\n  AppFocusMixin,\n  SessionAssembliesMixin,\n  TemporaryAssembliesMixin,\n} from '@jbrowse/app-core'\nimport { BaseAssemblyConfigSchema } from '@jbrowse/core/assemblyManager'\n// locals\nimport { WebSessionConnectionsMixin } from '../SessionConnections'\nimport { BaseConnectionConfigModel } from '@jbrowse/core/pluggableElementTypes/models/baseConnectionConfig'\n\nconst AboutDialog = lazy(() => import('./AboutDialog'))\n\nexport function BaseWebSession({\n  pluginManager,\n  assemblyConfigSchema,\n}: {\n  pluginManager: PluginManager\n  assemblyConfigSchema: BaseAssemblyConfigSchema\n}) {\n  const sessionModel = types\n    .compose(\n      'WebCoreSessionModel',\n      types.compose(\n        'WebCoreSessionModelGroupA',\n        ReferenceManagementSessionMixin(pluginManager),\n        DrawerWidgetSessionMixin(pluginManager),\n        DialogQueueSessionMixin(pluginManager),\n        ThemeManagerSessionMixin(pluginManager),\n        MultipleViewsSessionMixin(pluginManager),\n      ),\n      types.compose(\n        'WebCoreSessionModelGroupB',\n        SessionTracksManagerSessionMixin(pluginManager),\n        SessionAssembliesMixin(pluginManager, assemblyConfigSchema),\n        TemporaryAssembliesMixin(pluginManager, assemblyConfigSchema),\n        WebSessionConnectionsMixin(pluginManager),\n        AppFocusMixin(),\n      ),\n    )\n    .props({\n      /**\n       * #property\n       */\n      margin: 0,\n      /**\n       * #property\n       */\n      sessionPlugins: types.array(types.frozen()),\n    })\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get tracks(): AnyConfigurationModel[] {\n        return [...self.sessionTracks, ...self.jbrowse.tracks]\n      },\n      /**\n       * #getter\n       */\n      get root() {\n        return getParent<any>(self)\n      },\n      /**\n       * #getter\n       * list of sessionAssemblies and jbrowse config assemblies, does not\n       * include temporaryAssemblies. basically the list to be displayed in a\n       * AssemblySelector dropdown\n       */\n      get assemblies(): Instance<BaseAssemblyConfigSchema[]> {\n        return [...self.jbrowse.assemblies, ...self.sessionAssemblies]\n      },\n      /**\n       * #getter\n       * list of config connections and session connections\n       */\n      get connections(): BaseConnectionConfigModel[] {\n        return [...self.jbrowse.connections, ...self.sessionConnections]\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setName(str: string) {\n        self.name = str\n      },\n    }))\n    .volatile((/* self */) => ({\n      /**\n       * #volatile\n       */\n      sessionThemeName: localStorageGetItem('themeName') || 'default',\n      /**\n       * #volatile\n       * this is the current \"task\" that is being performed in the UI.\n       * this is usually an object of the form\n       * `{ taskName: \"configure\", target: thing_being_configured }`\n       */\n      task: undefined,\n    }))\n\n    .views(self => ({\n      /**\n       * #getter\n       * list of sessionAssemblies and jbrowse config assemblies, does not\n       * include temporaryAssemblies. basically the list to be displayed in a\n       * AssemblySelector dropdown\n       */\n      get assemblyNames() {\n        return self.assemblies.map(f => readConfObject(f, 'name') as string)\n      },\n      /**\n       * #getter\n       */\n      get version() {\n        return self.root.version\n      },\n      /**\n       * #getter\n       */\n      get shareURL() {\n        return getConf(self.jbrowse, 'shareURL')\n      },\n      /**\n       * #getter\n       */\n      get textSearchManager(): TextSearchManager {\n        return self.root.textSearchManager\n      },\n      /**\n       * #getter\n       */\n      get assemblyManager(): AssemblyManager {\n        return self.root.assemblyManager\n      },\n      /**\n       * #getter\n       */\n      get savedSessions() {\n        return self.root.savedSessions\n      },\n      /**\n       * #getter\n       */\n      get previousAutosaveId() {\n        return self.root.previousAutosaveId\n      },\n      /**\n       * #getter\n       */\n      get savedSessionNames() {\n        return self.root.savedSessionNames\n      },\n      /**\n       * #getter\n       */\n      get history() {\n        return self.root.history\n      },\n      /**\n       * #getter\n       */\n      get menus() {\n        return self.root.menus\n      },\n      /**\n       * #method\n       */\n      renderProps() {\n        return {\n          theme: self.theme,\n        }\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      addAssemblyConf(conf: AnyConfiguration) {\n        self.jbrowse.addAssemblyConf(conf)\n      },\n      /**\n       * #action\n       */\n      addSessionPlugin(plugin: JBrowsePlugin) {\n        if (self.sessionPlugins.some(p => p.name === plugin.name)) {\n          throw new Error('session plugin cannot be installed twice')\n        }\n        self.sessionPlugins.push(plugin)\n        self.root.setPluginsUpdated(true)\n      },\n\n      /**\n       * #action\n       */\n      removeSessionPlugin(pluginDefinition: PluginDefinition) {\n        self.sessionPlugins = cast(\n          self.sessionPlugins.filter(\n            plugin =>\n              plugin.url !== pluginDefinition.url ||\n              plugin.umdUrl !== pluginDefinition.umdUrl ||\n              plugin.cjsUrl !== pluginDefinition.cjsUrl ||\n              plugin.esmUrl !== pluginDefinition.esmUrl,\n          ),\n        )\n        getParent<any>(self).setPluginsUpdated(true)\n      },\n\n      /**\n       * #action\n       */\n      addSavedSession(sessionSnapshot: SnapshotIn<typeof self>) {\n        return self.root.addSavedSession(sessionSnapshot)\n      },\n\n      /**\n       * #action\n       */\n      removeSavedSession(sessionSnapshot: { name: string }) {\n        return self.root.removeSavedSession(sessionSnapshot)\n      },\n\n      /**\n       * #action\n       */\n      renameCurrentSession(sessionName: string) {\n        return self.root.renameCurrentSession(sessionName)\n      },\n\n      /**\n       * #action\n       */\n      duplicateCurrentSession() {\n        return self.root.duplicateCurrentSession()\n      },\n      /**\n       * #action\n       */\n      activateSession(sessionName: string) {\n        return self.root.activateSession(sessionName)\n      },\n\n      /**\n       * #action\n       */\n      setDefaultSession() {\n        return self.root.setDefaultSession()\n      },\n\n      /**\n       * #action\n       */\n      saveSessionToLocalStorage() {\n        return self.root.saveSessionToLocalStorage()\n      },\n\n      /**\n       * #action\n       */\n      loadAutosaveSession() {\n        return self.root.loadAutosaveSession()\n      },\n\n      /**\n       * #action\n       */\n      setSession(sessionSnapshot: SnapshotIn<typeof self>) {\n        return self.root.setSession(sessionSnapshot)\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      editTrackConfiguration(configuration: AnyConfigurationModel) {\n        const { adminMode, sessionTracks } = self\n        if (!adminMode && !sessionTracks.includes(configuration)) {\n          throw new Error(\"Can't edit the configuration of a non-session track\")\n        }\n        self.editConfiguration(configuration)\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       */\n      getTrackActionMenuItems(config: BaseTrackConfig) {\n        const { adminMode, sessionTracks } = self\n        const canEdit =\n          adminMode || sessionTracks.find(t => t.trackId === config.trackId)\n\n        // disable if it is a reference sequence track\n        const isRefSeq = config.type === 'ReferenceSequenceTrack'\n        return [\n          {\n            label: 'About track',\n            onClick: () => {\n              self.queueDialog(handleClose => [\n                AboutDialog,\n                { config, handleClose },\n              ])\n            },\n            icon: InfoIcon,\n          },\n          {\n            label: 'Settings',\n            disabled: !canEdit,\n            onClick: () => self.editTrackConfiguration(config),\n            icon: SettingsIcon,\n          },\n          {\n            label: 'Delete track',\n            disabled: !canEdit || isRefSeq,\n            onClick: () => self.deleteTrackConf(config),\n            icon: DeleteIcon,\n          },\n          {\n            label: 'Copy track',\n            disabled: isRefSeq,\n            onClick: () => {\n              interface Display {\n                displayId: string\n              }\n              const snap = clone(getSnapshot(config)) as {\n                [key: string]: unknown\n                displays: Display[]\n              }\n              const now = Date.now()\n              snap.trackId += `-${now}`\n              snap.displays.forEach(display => {\n                display.displayId += `-${now}`\n              })\n              // the -sessionTrack suffix to trackId is used as metadata for\n              // the track selector to store the track in a special category,\n              // and default category is also cleared\n              if (!self.adminMode) {\n                snap.trackId += '-sessionTrack'\n                snap.category = undefined\n              }\n              snap.name += ' (copy)'\n              self.addTrackConf(snap)\n            },\n            icon: CopyIcon,\n          },\n        ]\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(() => {\n            localStorageSetItem('drawerPosition', self.drawerPosition)\n            localStorageSetItem('themeName', self.themeName)\n          }),\n        )\n      },\n    }))\n\n  const extendedSessionModel = pluginManager.evaluateExtensionPoint(\n    'Core-extendSession',\n    sessionModel,\n  ) as typeof sessionModel\n\n  return types.snapshotProcessor(addSnackbarToModel(extendedSessionModel), {\n    // @ts-expect-error\n    preProcessor(snapshot) {\n      if (snapshot) {\n        // @ts-expect-error\n        const { connectionInstances, ...rest } = snapshot || {}\n        // connectionInstances schema changed from object to an array, so any\n        // old connectionInstances as object is in snapshot, filter it out\n        // https://github.com/GMOD/jbrowse-components/issues/1903\n        if (!Array.isArray(connectionInstances)) {\n          return rest\n        }\n      }\n      return snapshot\n    },\n  })\n}\n","import { types } from 'mobx-state-tree'\n\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { AnyConfiguration } from '@jbrowse/core/configuration'\nimport { BaseSession } from '@jbrowse/product-core'\nimport { BaseAssemblyConfigSchema } from '@jbrowse/core/assemblyManager'\n\n/**\n * #stateModel SessionAssembliesMixin\n * #category root\n */\nexport function SessionAssembliesMixin(\n  pluginManager: PluginManager,\n  assemblyConfigSchemasType: BaseAssemblyConfigSchema,\n) {\n  return types\n    .model({\n      /**\n       * #property\n       */\n      sessionAssemblies: types.array(assemblyConfigSchemasType),\n    })\n    .actions(s => {\n      const self = s as typeof s & BaseSession\n      return {\n        /**\n         * #action\n         */\n        addSessionAssembly(conf: AnyConfiguration) {\n          const asm = self.sessionAssemblies.find(f => f.name === conf.name)\n          if (asm) {\n            console.warn(`Assembly ${conf.name} already exists`)\n            return asm\n          }\n          const length = self.sessionAssemblies.push(conf)\n          return self.sessionAssemblies[length - 1]\n        },\n\n        /**\n         * #action\n         */\n        removeSessionAssembly(assemblyName: string) {\n          const elt = self.sessionAssemblies.find(a => a.name === assemblyName)\n          if (elt) {\n            self.sessionAssemblies.remove(elt)\n          }\n        },\n      }\n    })\n}\n","/** MST mixin for managing a queue of dialogs at the level of the session */\n\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { DialogComponentType } from '@jbrowse/core/util'\nimport { IAnyStateTreeNode, Instance, types } from 'mobx-state-tree'\nimport { isBaseSession } from './BaseSession'\n\n/**\n * #stateModel DialogQueueSessionMixin\n */\nexport function DialogQueueSessionMixin(_pluginManager: PluginManager) {\n  return types\n    .model('DialogQueueSessionMixin', {})\n    .volatile(() => ({\n      queueOfDialogs: [] as [DialogComponentType, unknown][],\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get DialogComponent() {\n        return self.queueOfDialogs[0]?.[0]\n      },\n      /**\n       * #getter\n       */\n      get DialogProps() {\n        return self.queueOfDialogs[0]?.[1]\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      removeActiveDialog() {\n        self.queueOfDialogs = self.queueOfDialogs.slice(1)\n      },\n      /**\n       * #action\n       */\n      queueDialog(\n        cb: (doneCallback: () => void) => [DialogComponentType, unknown],\n      ) {\n        const [component, props] = cb(() => {\n          this.removeActiveDialog()\n        })\n        self.queueOfDialogs = [...self.queueOfDialogs, [component, props]]\n      },\n    }))\n}\n\n/** Session mixin MST type for a session that has `queueOfDialogs`, etc. */\nexport type SessionWithDialogsType = ReturnType<typeof DialogQueueSessionMixin>\n\n/** Instance of a session that has dialogs */\nexport type SessionWithDialogs = Instance<SessionWithDialogsType>\n\n/** Type guard for SessionWithDialogs */\nexport function isSessionWithDialogs(\n  session: IAnyStateTreeNode,\n): session is SessionWithDialogs {\n  return isBaseSession(session) && 'queueOfDialogs' in session\n}\n","import {\n  IAnyStateTreeNode,\n  Instance,\n  addDisposer,\n  types,\n} from 'mobx-state-tree'\n\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { getConf } from '@jbrowse/core/configuration'\nimport { createJBrowseTheme, defaultThemes } from '@jbrowse/core/ui'\nimport { localStorageGetItem, localStorageSetItem } from '@jbrowse/core/util'\nimport { ThemeOptions } from '@mui/material'\nimport { autorun } from 'mobx'\n\n// locals\nimport { BaseSession } from './BaseSession'\n\ntype ThemeMap = Record<string, ThemeOptions>\n\n/**\n * #stateModel ThemeManagerSessionMixin\n */\nexport function ThemeManagerSessionMixin(_pluginManager: PluginManager) {\n  return types\n    .model({})\n    .volatile(() => ({\n      sessionThemeName: localStorageGetItem('themeName') || 'default',\n    }))\n    .views(s => ({\n      /**\n       * #method\n       */\n      allThemes(): ThemeMap {\n        const self = s as typeof s & BaseSession\n        const extraThemes = getConf(self.jbrowse, 'extraThemes')\n        return { ...defaultThemes, ...extraThemes }\n      },\n      /**\n       * #getter\n       */\n      get themeName() {\n        const { sessionThemeName } = s\n        const all = this.allThemes()\n        return all[sessionThemeName] ? sessionThemeName : 'default'\n      },\n      /**\n       * #getter\n       */\n      get theme() {\n        const self = s as typeof s & BaseSession\n        const configTheme = getConf(self.jbrowse, 'theme')\n        const all = this.allThemes()\n        return createJBrowseTheme(configTheme, all, this.themeName)\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setThemeName(name: string) {\n        self.sessionThemeName = name\n      },\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(() => {\n            localStorageSetItem('themeName', self.themeName)\n          }),\n        )\n      },\n    }))\n}\n\n/** Session mixin MST type for a session that supports theming */\nexport type SessionWithThemesType = ReturnType<typeof ThemeManagerSessionMixin>\n\n/** Instance of a session that has theming support */\nexport type SessionWithThemes = Instance<SessionWithThemesType>\n\n/** Type guard for SessionWithThemes */\nexport function isSessionWithThemes(\n  session: IAnyStateTreeNode,\n): session is SessionWithThemes {\n  return 'theme' in session\n}\n","import {\n  IAnyStateTreeNode,\n  Instance,\n  getSnapshot,\n  types,\n} from 'mobx-state-tree'\n\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { Region } from '@jbrowse/core/util'\nimport { DrawerWidgetSessionMixin } from './DrawerWidgets'\nimport { IBaseViewModel } from '@jbrowse/core/pluggableElementTypes'\nimport { IBaseViewModelWithDisplayedRegions } from '@jbrowse/core/pluggableElementTypes/models/BaseViewModel'\n\n// locals\nimport { BaseSessionModel, isBaseSession } from './BaseSession'\n\n/**\n * #stateModel MultipleViewsSessionMixin\n */\nexport function MultipleViewsSessionMixin(pluginManager: PluginManager) {\n  return types\n    .compose(\n      BaseSessionModel(pluginManager),\n      DrawerWidgetSessionMixin(pluginManager),\n    )\n    .props({\n      /**\n       * #property\n       */\n      views: types.array(pluginManager.pluggableMstType('view', 'stateModel')),\n    })\n    .actions(self => ({\n      /**\n       * #action\n       */\n      moveViewUp(id: string) {\n        const idx = self.views.findIndex(v => v.id === id)\n\n        if (idx === -1) {\n          return\n        }\n        if (idx > 0) {\n          self.views.splice(idx - 1, 2, self.views[idx], self.views[idx - 1])\n        }\n      },\n      /**\n       * #action\n       */\n      moveViewDown(id: string) {\n        const idx = self.views.findIndex(v => v.id === id)\n\n        if (idx === -1) {\n          return\n        }\n\n        if (idx < self.views.length - 1) {\n          self.views.splice(idx, 2, self.views[idx + 1], self.views[idx])\n        }\n      },\n\n      /**\n       * #action\n       */\n      addView(typeName: string, initialState = {}) {\n        const typeDefinition = pluginManager.getElementType('view', typeName)\n        if (!typeDefinition) {\n          throw new Error(`unknown view type ${typeName}`)\n        }\n\n        const length = self.views.push({\n          ...initialState,\n          type: typeName,\n        })\n        return self.views[length - 1]\n      },\n\n      /**\n       * #action\n       */\n      removeView(view: IBaseViewModel) {\n        for (const [, widget] of self.activeWidgets) {\n          if (widget.view && widget.view.id === view.id) {\n            self.hideWidget(widget)\n          }\n        }\n        self.views.remove(view)\n      },\n\n      /**\n       * #action\n       */\n      addLinearGenomeViewOfAssembly(assemblyName: string, initialState = {}) {\n        return this.addViewOfAssembly(\n          'LinearGenomeView',\n          assemblyName,\n          initialState,\n        )\n      },\n\n      /**\n       * #action\n       */\n      addViewOfAssembly(\n        viewType: string,\n        assemblyName: string,\n        initialState: Record<string, unknown> = {},\n      ) {\n        const asm = self.assemblies.find(\n          s => readConfObject(s, 'name') === assemblyName,\n        )\n        if (!asm) {\n          throw new Error(\n            `Could not add view of assembly \"${assemblyName}\", assembly name not found`,\n          )\n        }\n        return this.addView(viewType, {\n          ...initialState,\n          displayRegionsFromAssemblyName: readConfObject(asm, 'name'),\n        })\n      },\n\n      /**\n       * #action\n       */\n      addViewFromAnotherView(\n        viewType: string,\n        otherView: IBaseViewModelWithDisplayedRegions,\n        initialState: { displayedRegions?: Region[] } = {},\n      ) {\n        const state = { ...initialState }\n        state.displayedRegions = getSnapshot(otherView.displayedRegions)\n        return this.addView(viewType, state)\n      },\n    }))\n}\n\n/** Session mixin MST type for a session that manages multiple views */\nexport type SessionWithMultipleViewsType = ReturnType<\n  typeof MultipleViewsSessionMixin\n>\n\n/** Instance of a session with multiple views */\nexport type SessionWithMultipleViews = Instance<SessionWithMultipleViewsType>\n\n/** Type guard for SessionWithMultipleViews */\nexport function isSessionWithMultipleViews(\n  session: IAnyStateTreeNode,\n): session is SessionWithMultipleViews {\n  return isBaseSession(session) && 'views' in session\n}\n","import { types } from 'mobx-state-tree'\n\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { AnyConfiguration } from '@jbrowse/core/configuration'\nimport { BaseSession } from '@jbrowse/product-core'\n\n/**\n * #stateModel TemporaryAssembliesMixin\n * #category root\n */\nexport function TemporaryAssembliesMixin(\n  pluginManager: PluginManager,\n  assemblyConfigSchemasType = types.frozen(),\n) {\n  return types\n    .model({\n      /**\n       * #property\n       */\n      temporaryAssemblies: types.array(assemblyConfigSchemasType),\n    })\n\n    .actions(s => {\n      const self = s as typeof s & BaseSession\n      return {\n        /**\n         * #action\n         * used for read vs ref type assemblies.\n         */\n        addTemporaryAssembly(conf: AnyConfiguration) {\n          const asm = self.temporaryAssemblies.find(f => f.name === conf.name)\n          if (asm) {\n            console.warn(`Assembly ${conf.name} was already existing`)\n            return asm\n          }\n          const length = self.temporaryAssemblies.push(conf)\n          return self.temporaryAssemblies[length - 1]\n        },\n\n        /**\n         * #action\n         */\n        removeTemporaryAssembly(name: string) {\n          const elt = self.temporaryAssemblies.find(a => a.name === name)\n          if (elt) {\n            self.temporaryAssemblies.remove(elt)\n          }\n        },\n      }\n    })\n}\n","import { types } from 'mobx-state-tree'\n\nimport {\n  ConnectionManagementSessionMixin,\n  SessionWithSessionTracks,\n} from '@jbrowse/product-core'\nimport type { BaseSession } from '@jbrowse/product-core'\n\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { BaseConnectionConfigModel } from '@jbrowse/core/pluggableElementTypes/models/baseConnectionConfig'\n\n/**\n * #stateModel WebSessionConnectionsMixin\n * #category session\n */\nexport function WebSessionConnectionsMixin(pluginManager: PluginManager) {\n  return types\n    .compose(\n      'SessionConnectionsManagement',\n      ConnectionManagementSessionMixin(pluginManager),\n      types.model({\n        /**\n         * #property\n         */\n        sessionConnections: types.array(\n          pluginManager.pluggableConfigSchemaType('connection'),\n        ),\n      }),\n    )\n    .actions(s => {\n      const self = s as typeof s & BaseSession & SessionWithSessionTracks\n      const superDeleteConnection = self.deleteConnection\n      const superAddConnectionConf = self.addConnectionConf\n      return {\n        addConnectionConf(connectionConf: BaseConnectionConfigModel) {\n          if (self.adminMode) {\n            return superAddConnectionConf(connectionConf)\n          }\n          const { connectionId, type } = connectionConf\n          if (!type) {\n            throw new Error(`unknown connection type ${type}`)\n          }\n          const connection = self.sessionTracks.find(\n            c => c.connectionId === connectionId,\n          )\n          if (connection) {\n            return connection\n          }\n          const length = self.sessionConnections.push(connectionConf)\n          return self.sessionConnections[length - 1]\n        },\n\n        deleteConnection(configuration: AnyConfigurationModel) {\n          let deletedConn\n          if (self.adminMode) {\n            deletedConn = superDeleteConnection(configuration)\n          }\n          if (!deletedConn) {\n            const { connectionId } = configuration\n            const idx = self.sessionConnections.findIndex(\n              c => c.connectionId === connectionId,\n            )\n            if (idx === -1) {\n              return undefined\n            }\n            return self.sessionConnections.splice(idx, 1)\n          }\n          return deletedConn\n        },\n      }\n    })\n}\n","import { types } from 'mobx-state-tree'\n\n/**\n * #stateModel AppFocusMixin\n * #category session\n */\nexport function AppFocusMixin() {\n  return types\n    .model({\n      /**\n       * #property\n       * used to keep track of which view is in focus\n       */\n      focusedViewId: types.maybe(types.string),\n    })\n    .actions(self => ({\n      setFocusedViewId(viewId: string) {\n        self.focusedViewId = viewId\n      },\n    }))\n}\n","import { AbstractSessionModel } from '@jbrowse/core/util/types'\nimport { Instance } from 'mobx-state-tree'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { BaseAssemblyConfigSchema } from '@jbrowse/core/assemblyManager'\nimport { BaseWebSession } from '@jbrowse/web-core'\n\n/**\n * #stateModel JBrowseWebSessionModel\n * composed of\n * - SnackbarModel\n * - ReferenceManagementSessionMixin\n * - DrawerWidgetSessionMixin\n * - DialogQueueSessionMixin\n * - ThemeManagerSessionMixin\n * - MultipleViewsSessionMixin\n * - SessionTracksManagerSessionMixin\n * - SessionAssembliesMixin\n * - TemporaryAssembliesMixin\n * - WebSessionConnectionsMixin\n * - AppFocusMixin\n *\n */\nexport default function sessionModelFactory({\n  pluginManager,\n  assemblyConfigSchema,\n}: {\n  pluginManager: PluginManager\n  assemblyConfigSchema: BaseAssemblyConfigSchema\n}) {\n  return BaseWebSession({ pluginManager, assemblyConfigSchema })\n}\n\nexport type WebSessionModelType = ReturnType<typeof sessionModelFactory>\nexport type WebSessionModel = Instance<WebSessionModelType>\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction z(x: Instance<WebSessionModelType>): AbstractSessionModel {\n  // this function's sole purpose is to get typescript to check\n  // that the session model implements all of AbstractSessionModel\n  return x\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { doAnalytics } from '@jbrowse/core/util/analytics'\n\n// locals\nimport JBrowseRootModelFactory from './rootModel/rootModel'\nimport sessionModelFactory from './sessionModel'\nimport corePlugins from './corePlugins'\nimport { SessionLoaderModel, loadSessionSpec } from './SessionLoader'\n\nexport function createPluginManager(self: SessionLoaderModel) {\n  // it is ready when a session has loaded and when there is no config\n  // error Assuming that the query changes self.sessionError or\n  // self.sessionSnapshot or self.blankSession\n  const pluginManager = new PluginManager([\n    ...corePlugins.map(P => ({\n      plugin: new P(),\n      metadata: { isCore: true },\n    })),\n    ...self.runtimePlugins.map(({ plugin: P, definition }) => ({\n      plugin: new P(),\n      definition,\n      metadata: { url: definition.url },\n    })),\n    ...self.sessionPlugins.map(({ plugin: P, definition }) => ({\n      plugin: new P(),\n      definition,\n      metadata: { url: definition.url },\n    })),\n  ])\n  pluginManager.createPluggableElements()\n  const RootModel = JBrowseRootModelFactory({\n    pluginManager,\n    sessionModelFactory,\n    adminMode: !!self.adminKey,\n  })\n\n  if (!self.configSnapshot) {\n    return undefined\n  }\n  const rootModel = RootModel.create(\n    {\n      jbrowse: self.configSnapshot,\n      configPath: self.configPath,\n    },\n    { pluginManager },\n  )\n\n  if (!self.configSnapshot?.configuration?.rpc?.defaultDriver) {\n    const { rpc } = rootModel.jbrowse.configuration\n    rpc.defaultDriver.set('WebWorkerRpcDriver')\n  }\n\n  let afterInitializedCb = () => {}\n\n  // in order: saves the previous autosave for recovery, tries to\n  // load the local session if session in query, or loads the default\n  // session\n  try {\n    if (self.sessionError) {\n      rootModel.setDefaultSession()\n      rootModel.session.notify(\n        `Error loading session: ${self.sessionError}. If you\n                received this URL from another user, request that they send you\n                a session generated with the \"Share\" button instead of copying\n                and pasting their URL`,\n      )\n    } else if (self.sessionSnapshot) {\n      rootModel.setSession(self.sessionSnapshot)\n    } else if (self.sessionSpec) {\n      afterInitializedCb = loadSessionSpec(self.sessionSpec, pluginManager)\n    } else if (rootModel.jbrowse.defaultSession?.views?.length) {\n      rootModel.setDefaultSession()\n    }\n  } catch (e) {\n    rootModel.setDefaultSession()\n    const str = `${e}`\n    const errorMessage = str\n      .replace('[mobx-state-tree] ', '')\n      .replace(/\\(.+/, '')\n    rootModel.session?.notify(\n      `Session could not be loaded. ${\n        errorMessage.length > 1000\n          ? `${errorMessage.slice(0, 1000)}...see more in console`\n          : errorMessage\n      }`,\n    )\n    console.error(e)\n  }\n\n  // send analytics\n  doAnalytics(rootModel, self.initialTimestamp, self.sessionQuery)\n\n  pluginManager.setRootModel(rootModel)\n  pluginManager.configure()\n  afterInitializedCb()\n  return pluginManager\n}\n","import React, { lazy, useEffect, useState, Suspense } from 'react'\nimport { observer } from 'mobx-react'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport {\n  StringParam,\n  QueryParamProvider,\n  useQueryParam,\n} from 'use-query-params'\nimport { WindowHistoryAdapter } from 'use-query-params/adapters/window'\nimport { FatalErrorDialog, LoadingEllipses } from '@jbrowse/core/ui'\nimport '@fontsource/roboto'\n\n// locals\nimport Loading from './Loading'\nimport JBrowse from './JBrowse'\nimport factoryReset from '../factoryReset'\nimport SessionLoader, { SessionLoaderModel } from '../SessionLoader'\nimport StartScreenErrorMessage from './StartScreenErrorMessage'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { createPluginManager } from '../createPluginManager'\n\nconst ConfigTriaged = lazy(() => import('./ConfigWarningDialog'))\nconst SessionTriaged = lazy(() => import('./SessionWarningDialog'))\nconst StartScreen = lazy(() => import('./StartScreen'))\n\nexport function Loader({\n  initialTimestamp = Date.now(),\n}: {\n  initialTimestamp?: number\n}) {\n  // return value if defined, else convert null to undefined for use with\n  // types.maybe\n  const load = (param: string | null | undefined) =>\n    param === null ? undefined : param\n\n  const Str = StringParam\n\n  const [config] = useQueryParam('config', Str)\n  const [session] = useQueryParam('session', Str)\n  const [adminKey] = useQueryParam('adminKey', Str)\n  const [password, setPassword] = useQueryParam('password', Str)\n  const [loc, setLoc] = useQueryParam('loc', Str)\n  const [sessionTracks, setSessionTracks] = useQueryParam('sessionTracks', Str)\n  const [assembly, setAssembly] = useQueryParam('assembly', Str)\n  const [tracks, setTracks] = useQueryParam('tracks', Str)\n\n  const loader = SessionLoader.create({\n    configPath: load(config),\n    sessionQuery: load(session),\n    password: load(password),\n    adminKey: load(adminKey),\n    loc: load(loc),\n    assembly: load(assembly),\n    tracks: load(tracks),\n    sessionTracks: load(sessionTracks),\n    initialTimestamp,\n  })\n\n  useEffect(() => {\n    setLoc(undefined)\n    setTracks(undefined)\n    setAssembly(undefined)\n    setPassword(undefined)\n    setSessionTracks(undefined)\n  }, [setAssembly, setLoc, setTracks, setPassword, setSessionTracks])\n\n  return <Renderer loader={loader} />\n}\n\nconst Renderer = observer(function ({\n  loader,\n}: {\n  loader: SessionLoaderModel\n}) {\n  const { configError, ready, shareWarningOpen } = loader\n  const [pluginManager, setPluginManager] = useState<PluginManager>()\n  const [error, setError] = useState<unknown>()\n\n  useEffect(() => {\n    try {\n      if (!ready || shareWarningOpen) {\n        return\n      }\n      const pm = createPluginManager(loader)\n      setPluginManager(pm)\n    } catch (e) {\n      console.error(e)\n      setError(e)\n    }\n  }, [loader, ready, shareWarningOpen])\n  if (configError || error) {\n    return <StartScreenErrorMessage error={configError || error} />\n  }\n\n  if (loader.sessionTriaged) {\n    return (\n      <Suspense fallback={<React.Fragment />}>\n        {loader.sessionTriaged.origin === 'session' ? (\n          <SessionTriaged\n            loader={loader}\n            handleClose={() => loader.setSessionTriaged(undefined)}\n          />\n        ) : (\n          <ConfigTriaged\n            loader={loader}\n            handleClose={() => loader.setSessionTriaged(undefined)}\n          />\n        )}\n      </Suspense>\n    )\n  }\n  if (pluginManager) {\n    return !pluginManager.rootModel?.session ? (\n      <Suspense fallback={<LoadingEllipses />}>\n        <StartScreen\n          rootModel={pluginManager.rootModel}\n          onFactoryReset={factoryReset}\n        />\n      </Suspense>\n    ) : (\n      <JBrowse pluginManager={pluginManager} />\n    )\n  }\n  return <Loading />\n})\n\nconst LoaderWrapper = ({ initialTimestamp }: { initialTimestamp: number }) => {\n  return (\n    <ErrorBoundary\n      FallbackComponent={props => (\n        <FatalErrorDialog\n          {...props}\n          resetButtonText=\"Reset Session\"\n          onFactoryReset={factoryReset}\n        />\n      )}\n    >\n      <QueryParamProvider adapter={WindowHistoryAdapter}>\n        <Loader initialTimestamp={initialTimestamp} />\n      </QueryParamProvider>\n    </ErrorBoundary>\n  )\n}\n\nexport default LoaderWrapper\n","export default async function factoryReset() {\n  // @ts-expect-error\n  window.location = window.location.pathname\n}\n","import { toUrlSafeB64 } from './util'\n\n// from https://stackoverflow.com/questions/1349404/\nfunction generateUID(length: number) {\n  return window\n    .btoa(\n      [...window.crypto.getRandomValues(new Uint8Array(length * 2))]\n        .map(b => String.fromCharCode(b))\n        .join(''),\n    )\n    .replaceAll(/[+/]/g, '')\n    .slice(0, length)\n}\n\nconst encrypt = async (text: string, password: string) => {\n  const AES = await import('crypto-js/aes')\n  return AES.encrypt(text, password).toString()\n}\n\nconst decrypt = async (text: string, password: string) => {\n  const AES = await import('crypto-js/aes')\n  const Utf8 = await import('crypto-js/enc-utf8')\n  const bytes = AES.decrypt(text, password)\n  return bytes.toString(Utf8)\n}\n\nfunction getErrorMsg(err: string) {\n  try {\n    const obj = JSON.parse(err)\n    return obj.message\n  } catch (e) {\n    return err\n  }\n}\n// writes the encrypted session, current datetime, and referer to DynamoDB\nexport async function shareSessionToDynamo(\n  session: unknown,\n  url: string,\n  referer: string,\n) {\n  const sess = await toUrlSafeB64(JSON.stringify(session))\n  const password = generateUID(5)\n  const encryptedSession = await encrypt(sess, password)\n\n  const data = new FormData()\n  data.append('session', encryptedSession)\n  data.append('dateShared', `${Date.now()}`)\n  data.append('referer', referer)\n\n  const response = await fetch(`${url}share`, {\n    method: 'POST',\n    mode: 'cors',\n    body: data,\n  })\n\n  if (!response.ok) {\n    const err = await response.text()\n    throw new Error(getErrorMsg(err))\n  }\n  const json = await response.json()\n  return {\n    json,\n    encryptedSession,\n    password,\n  }\n}\n\nexport async function readSessionFromDynamo(\n  baseUrl: string,\n  sessionQueryParam: string,\n  password: string,\n  signal?: AbortSignal,\n) {\n  const sessionId = sessionQueryParam.split('share-')[1]\n  const url = `${baseUrl}?sessionId=${encodeURIComponent(sessionId)}`\n  const response = await fetch(url, {\n    signal,\n  })\n\n  if (!response.ok) {\n    const err = await response.text()\n    throw new Error(getErrorMsg(err))\n  }\n\n  const json = await response.json()\n  return decrypt(json.session, password)\n}\n","import {\n  PluginDefinition,\n  isCJSPluginDefinition,\n  isESMPluginDefinition,\n  isUMDPluginDefinition,\n} from '@jbrowse/core/PluginLoader'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport {\n  getPropertyMembers,\n  getChildType,\n  isArrayType,\n  isModelType,\n  isReferenceType,\n  isValidReference,\n  isMapType,\n  types,\n  IAnyType,\n  IAnyStateTreeNode,\n  Instance,\n  SnapshotOut,\n} from 'mobx-state-tree'\n\n/**\n * Pad the end of a base64 string with \"=\" to make it valid\n * @param b64 - unpadded b64 string\n */\nexport function b64PadSuffix(b64: string): string {\n  let num = 0\n  const mo = b64.length % 4\n  switch (mo) {\n    case 3:\n      num = 1\n      break\n    case 2:\n      num = 2\n      break\n    case 0:\n      num = 0\n      break\n    default:\n      throw new Error('base64 not a valid length')\n  }\n  return b64 + '='.repeat(num)\n}\n\n/**\n * Decode and inflate a url-safe base64 to a string\n * See {@link https://en.wikipedia.org/wiki/Base64#URL_applications}\n * @param b64 - a base64 string to decode and inflate\n */\nexport async function fromUrlSafeB64(b64: string) {\n  const originalB64 = b64PadSuffix(\n    b64.replaceAll('-', '+').replaceAll('_', '/'),\n  )\n  const { toByteArray } = await import('base64-js')\n  const { inflate } = await import('pako')\n  const bytes = toByteArray(originalB64)\n  const inflated = inflate(bytes)\n  return new TextDecoder().decode(inflated)\n}\n\n/**\n * Compress and encode a string as url-safe base64\n * See {@link https://en.wikipedia.org/wiki/Base64#URL_applications}\n * @param str-  a string to compress and encode\n */\nexport async function toUrlSafeB64(str: string) {\n  const bytes = new TextEncoder().encode(str)\n  const { deflate } = await import('pako')\n  const { fromByteArray } = await import('base64-js')\n  const deflated = deflate(bytes)\n  const encoded = fromByteArray(deflated)\n  const pos = encoded.indexOf('=')\n  return pos > 0\n    ? encoded.slice(0, pos).replaceAll('+', '-').replaceAll('/', '_')\n    : encoded.replaceAll('+', '-').replaceAll('/', '_')\n}\n\ntype MSTArray = Instance<ReturnType<typeof types.array>>\ntype MSTMap = Instance<ReturnType<typeof types.map>>\n\n// attempts to remove undefined references from the given MST model. can only actually\n// remove them from arrays and maps. throws MST undefined ref error if it encounters\n// undefined refs in model properties\nexport function filterSessionInPlace(node: IAnyStateTreeNode, type: IAnyType) {\n  // makes it work with session sharing\n  if (node === undefined) {\n    return\n  }\n  if (isArrayType(type)) {\n    const array = node as MSTArray\n    const childType = getChildType(node)\n    if (isReferenceType(childType)) {\n      // filter array elements\n      for (let i = 0; i < array.length; ) {\n        if (!isValidReference(() => array[i])) {\n          array.splice(i, 1)\n        } else {\n          i += 1\n        }\n      }\n    }\n    array.forEach(el => {\n      filterSessionInPlace(el, childType)\n    })\n  } else if (isMapType(type)) {\n    const map = node as MSTMap\n    const childType = getChildType(map)\n    if (isReferenceType(childType)) {\n      // filter the map members\n      for (const key in map.keys()) {\n        if (!isValidReference(() => map.get(key))) {\n          map.delete(key)\n        }\n      }\n    }\n    map.forEach(child => {\n      filterSessionInPlace(child, childType)\n    })\n  } else if (isModelType(type)) {\n    // iterate over children\n    const { properties } = getPropertyMembers(node)\n\n    Object.entries(properties).forEach(([pname, ptype]) => {\n      // @ts-ignore\n      filterSessionInPlace(node[pname], ptype)\n    })\n  }\n}\n\ntype Config = SnapshotOut<AnyConfigurationModel>\n\nexport function addRelativeUris(config: Config, base: URL) {\n  if (typeof config === 'object') {\n    for (const key of Object.keys(config)) {\n      if (typeof config[key] === 'object') {\n        addRelativeUris(config[key], base)\n      } else if (key === 'uri') {\n        config.baseUri = base.href\n      }\n    }\n  }\n}\n\ninterface Root {\n  configuration?: Config\n}\n\n// raw readConf alternative for before conf is initialized\nexport function readConf({ configuration }: Root, attr: string, def: string) {\n  return configuration?.[attr] || def\n}\n\nexport async function fetchPlugins() {\n  const response = await fetch('https://jbrowse.org/plugin-store/plugins.json')\n  if (!response.ok) {\n    throw new Error(\n      `HTTP ${response.status} ${response.statusText} fetching plugins`,\n    )\n  }\n  return response.json() as Promise<{ plugins: PluginDefinition[] }>\n}\n\nexport async function checkPlugins(pluginsToCheck: PluginDefinition[]) {\n  if (pluginsToCheck.length === 0) {\n    return true\n  }\n  const storePlugins = await fetchPlugins()\n  return pluginsToCheck.every(p => {\n    if (isUMDPluginDefinition(p)) {\n      return storePlugins.plugins.some(\n        pp =>\n          isUMDPluginDefinition(p) &&\n          (('url' in pp && 'url' in p && p.url === pp.url) ||\n            ('umdUrl' in pp && 'umdUrl' in p && p.umdUrl === pp.umdUrl)),\n      )\n    }\n    if (isESMPluginDefinition(p)) {\n      return storePlugins.plugins.some(\n        pp =>\n          isESMPluginDefinition(p) && 'esmUrl' in p && p.esmUrl === pp.esmUrl,\n      )\n    }\n    if (isCJSPluginDefinition(p)) {\n      return storePlugins.plugins.some(\n        pp => isCJSPluginDefinition(p) && p.cjsUrl === pp.cjsUrl,\n      )\n    }\n    return false\n  })\n}\n\nexport function removeAttr(obj: Record<string, unknown>, attr: string) {\n  for (const prop in obj) {\n    if (prop === attr) {\n      delete obj[prop]\n    } else if (typeof obj[prop] === 'object') {\n      removeAttr(obj[prop] as Record<string, unknown>, attr)\n    }\n  }\n  return obj\n}\n"],"names":["isUMDPluginDefinition","def","undefined","umdUrl","url","umdLoc","name","isESMPluginDefinition","esmUrl","esmLoc","promisifiedLoadScript","src","Promise","resolve","reject","domLoadScript","err","script","loadScript","_x","_loadScript","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee7","scriptUrl","wrap","_context7","prev","next","Boolean","globalThis","abrupt","importScripts","Error","stop","isCJSPluginDefinition","cjsUrl","pluginDescriptionString","pluginDefinition","concat","_esmLoc","uri","PluginLoader","defs","length","args","_classCallCheck","definitions","fetchESM","fetchCJS","this","JSON","parse","stringify","_createClass","key","value","_loadCJSPlugin","_callee","baseUri","parsedUrl","_context","URL","protocol","href","_x2","_x3","_loadESMPlugin","_callee2","plugin","_context2","sent","_x4","_x5","_loadUMDPlugin","_callee3","moduleName","umdName","_context3","jest","default","Plugin","_x6","_x7","_loadPlugin","_callee4","_context4","isElectron","loadCJSPlugin","loadESMPlugin","loadUMDPlugin","_x8","_x9","target","JBrowseExports","Object","fromEntries","entries","ReExports","map","_ref","_ref2","_slicedToArray","_load","_callee6","_this","_context6","all","_ref3","_callee5","definition","_context5","loadPlugin","t0","t1","_x11","_x10","abortSignalCounter","abortSignalIds","WeakMap","serializeAbortSignal","signal","callfunc","abortSignalId","get","set","addEventListener","signalId","isRemoteAbortSignal","thing","surrogateAbortControllers","Map","deserializeAbortSignal","surrogateAbortController","AbortController","useStyles","makeStyles","importFormEntry","minWidth","AssemblySelector","observer","session","onChange","selected","InputProps","TextFieldProps","localStorageKey","_ref$helperText","helperText","classes","assemblyNames","assemblyManager","config","URLSearchParams","window","location","search","useLocalStorage","host","pathname","join","useState","lastSelected","setLastSelected","selection","includes","useEffect","error","_jsx","TextField","_objectSpread","select","label","variant","inputProps","event","disabled","className","children","assembly","displayName","getConf","MenuItem","CascadingContext","React","parentPopupState","rootPopupState","CascadingMenuItem","onClick","props","_objectWithoutProperties","_excluded","useContext","handleClick","useCallback","close","CascadingSubmenu","title","inset","popupId","_excluded2","popupState","usePopupState","_jsxs","_Fragment","bindHover","bindFocus","ListItemText","primary","ChevronRight","CascadingSubmenuHover","anchorOrigin","vertical","horizontal","transformOrigin","onMenuItemClick","menuItems","_excluded3","context","useMemo","Provider","HoverMenu","bindMenu","CascadingMenu","_ref4","_excluded4","Menu","EndDecoration","_ref5","item","MenuItemEndDecoration","type","checked","CascadingMenuList","_ref6","_excluded5","hasIcon","some","menuItem","icon","idx","subMenu","Divider","component","ListSubheader","callback","ListItemIcon","secondary","subLabel","style","flexGrow","theme","closeButton","position","right","spacing","top","color","palette","grey","DialogError","width","margin","ErrorMessage","Dialog","header","onClose","useTheme","MUIDialog","ScopedCssBaseline","DialogTitle","IconButton","CloseIcon","ErrorBoundary","FallbackComponent","ThemeProvider","createTheme","components","MuiInputBase","styleOverrides","input","boxSizing","inputBase","typography","left","whiteSpace","visibility","inputRoot","padding","inputFocused","borderStyle","borderWidth","EditableTypography","ref","setValue","other","_useMeasure","useMeasure","_useMeasure2","ref2","_useState","_useState2","editedValue","setEditedValue","_useState3","_useState4","inputNode","setInputNode","_useState5","_useState6","blur","setBlur","val","Typography","InputBase","inputRef","node","root","focused","onKeyDown","onBlur","str","snapshotError","findStr","indexOf","trim","slice","match","match2","parseError","overflow","maxHeight","background","border","FactoryResetDialog","open","onFactoryReset","handleDialogClose","action","DialogContent","DialogContentText","DialogActions","Button","ContentCopy","SvgIcon","d","Indexing","TrackSelector","Cable","getColors","midnight","forrest","grape","mandarin","gray","Logomark","viewBox","Icon","LogoFull","Text","colors","fill","transform","paper","overflowY","overflowX","minHeight","maxWidth","outline","menuItemEndDecoration","height","ArrowRightIcon","CheckBoxIcon","CheckBoxOutlineBlankIcon","RadioButtonCheckedIcon","RadioButtonUncheckedIcon","MenuPage","subMenuAnchorEl","setSubMenuAnchorEl","openSubMenuIdx","setOpenSubMenuIdx","isSubMenuOpen","setIsSubMenuOpen","_useState7","_useState8","selectedMenuItemIdx","setSelectedMenuItemIdx","_useState9","_useState10","setPosition","paperRef","useRef","anchorEl","_props$top","timer","shouldSubMenuBeOpen","setTimeout","clearTimeout","rect","getBoundingClientRect","menuItemStyle","ListContents","MenuList","autoFocusItem","dense","sort","a","b","priority","endDecoration","MUIMenuItem","onMouseMove","e","currentTarget","document","activeElement","focus","currentIdx","findLastIndex","findPreviousValidIdx","findIndex","findNextValidIdx","Grow","in","Paper","elevation","Popover","BackdropProps","invisible","horizontalHandle","cursor","verticalHandle","flexbox_verticalHandle","alignSelf","flexbox_horizontalHandle","onDrag","_ref$vertical","_ref$flexbox","flexbox","originalClassName","onMouseDown","mouseDragging","setMouseDragging","initialPosition","prevPos","_useStyles","cx","mouseMove","preventDefault","pos","clientX","clientY","totalDistance","current","lastFrameDistance","mouseUp","removeEventListener","ReturnToImportFormDialog","model","handleClose","clearView","autoFocus","added","full","RegExp","tag","SanitizedHTML","html","test","escapeHTML","dompurify","tagName","setAttribute","dangerouslySetInnerHTML","__html","forest","refTheme","stockTheme","mode","main","tertiary","augmentColor","quaternary","stopCodon","startCodon","bases","A","green","C","blue","G","orange","T","red","MuiLink","defaultThemes","lightStock","lightMinimal","darkMinimal","darkStock","MuiAppBar","defaultProps","enableColorOnDark","createJBrowseBaseTheme","deepmerge","fontSize","_theme$palette","_theme$palette$quater","_theme$palette2","_theme$palette2$terti","_theme$palette3","_theme$palette3$terti","MuiButton","size","text","MuiAccordion","disableGutters","TransitionProps","timeout","MuiFilledInput","MuiFormControl","MuiFormHelperText","MuiIconButton","MuiAutocomplete","MuiInputLabel","MuiToolbar","MuiListItem","MuiOutlinedInput","MuiFab","backgroundColor","MuiTable","MuiPopover","transitionDuration","MuiMenu","MuiMenuItem","MuiTextField","MuiCheckbox","MuiRadio","MuiFormLabel","MuiAccordionSummary","content","contrastText","MuiToggleButtonGroup","createDefaultProps","createJBrowseTheme","configTheme","themes","themeName","augmentTheme","_theme3","_theme3$palette","_theme4","_theme4$palette","augmentThemePlus","_theme","_theme$palette4","_theme2","_theme2$palette","ToggleButtonWithTooltip","Tooltip","ToggleButton","shorten","len","Math","max","description","rootModel","setLocation","fileOrUrl","isUriLocation","internetAccountId","toggleButtonValue","setToggleButtonValue","accts","isAppRootModel","_toConsumableArray","internetAccounts","shownAccts","setShownAccts","hiddenAccts","setHiddenAccts","setAnchorEl","selectedAcct","find","i","setLocationWithAcct","locationInput","UrlChooser","selectorLabel","LocalFileChooser","SelectorComponent","Box","display","InputLabel","shrink","flexDirection","ToggleButtonGroup","exclusive","_event","newState","toggleContents","ArrowDropDownIcon","acct","at","filter","notEmpty","FormHelperText","_props$highResolution","highResolutionScaling","_props$style","imageData","blockKey","showSoftClip","done","setDone","featureCanvas","canvas","getContext","drawImageOntoCanvasContext","blockKeyStr","testId","hoverLabel","pointerEvents","zIndex","offsetX","offsetY","configuration","feature","_ref$timeout","shown","setShown","handle","readConfObject","QuickLRU","_Map","_Symbol$iterator","_Symbol$toStringTag","_inherits","_super","_createSuper","options","call","maxSize","TypeError","maxAge","Number","POSITIVE_INFINITY","onEviction","cache","oldCache","_size","_step","_iterator","_createForOfIteratorHelper","s","n","_step$value","f","expiry","Date","now","delete","_deleteIfExpired","_getOrDeleteIfExpired","_getItemValue","_emitEvictions","_set","_entriesAscending","_iterator2","_step2","_item","_iterator3","_step3","_item2","_item3","_key","_value","has","finish","_moveToRecent","_ref$maxAge","_peek","deleted","clear","newSize","items","removeCount","keys","_iterator4","_step4","_step4$value","values","_iterator5","_step5","_step5$value","_iterator6","_step6","_item5","_iterator7","_step7","_item6","_item7","_key2","_value2","entriesDescending","_item8","_i","_item9","_item10","_key3","_value3","entriesAscending","_iterator8","_step8","_step8$value","_step9","oldCacheSize","_iterator9","min","callbackFunction","_step10","thisArgument","_iterator10","_step10$value","_wrapNativeSuper","Symbol","iterator","toStringTag","inDevelopment","process","inProduction","useDebounce","delay","debouncedValue","setDebouncedValue","useWidthSetter","view","isAlive","requestAnimationFrame","setWidth","parseInt","useDebouncedCallback","wait","argsRef","cleanup","_len","Array","findParentThat","predicate","hasParent","currentNode","getParent","springAnimate","fromValue","toValue","animationFrameId","onFinish","precision","tension","friction","update","animation","time","lastPosition","lastTime","velocity","lastVelocity","numSteps","floor","isVelocity","abs","isDisplacement","cancelAnimationFrame","findParentThatIs","getSession","isSessionModel","getContainingView","isViewModel","getContainingTrack","isTrackModel","getContainingDisplay","isDisplayModel","assembleLocString","region","assembleLocStringFast","toLocale","startString","endString","cb","assemblyName","refName","start","end","reversed","assemblyNameString","rev","parseLocStringOneBased","locString","isValidRefName","endsWith","replace","assemblyMatch","_assemblyMatch","startsWith","lastColonIdx","lastIndexOf","prefix","suffix","rangeMatch","singleMatch","_rangeMatch","replaceAll","_singleMatch","separator","parseLocString","parsed","compareLocs","locA","locB","assemblyComp","localeCompare","refComp","startComp","endComp","compareLocStrings","clamp","num","bpToPx","bp","bpPerPx","_ref$end","_ref$start","round","oneEightyOverPi","PI","piOverOneEighty","radToDeg","radians","degToRad","degrees","polarToCartesian","rho","theta","cos","sin","cartesianToPolar","x","y","sqrt","atan","featureSpanPx","bpSpanPx","leftBp","rightBp","iterMap","iter","func","sizeHint","results","from","counter","array","l","findLast","makeAbortableReaction","self","dataFunction","asyncReactionFunction","reactionOptions","startedFunction","successFunction","errorFunction","inProgress","handleError","isAbortException","console","addDisposer","reaction","data","mobxReactionHandle","thisInProgress","result","aborted","abort","checkAbortSignal","renameRegionIfNeeded","refNameMap","isStateTreeNode","newRef","getSnapshot","originalRefName","renameRegionsIfNeeded","_renameRegionsIfNeeded","_args$regions","regions","adapterConfig","assemblyMaps","sessionId","Set","getRefNameMapForAdapter","minmax","short","useAssemblyName","coord","oob","navigator","userAgent","revcom","seqString","reverse","complement","split","complementRegex","complementTable","S","w","r","N","K","Y","V","M","h","k","g","t","W","X","m","v","B","H","c","D","R","blobToDataURL","blob","FileReader","onload","readAsDataURL","rIC","requestIdleCallback","widths","measureText","String","total","_widths$code","code","charCodeAt","defaultStarts","defaultStops","defaultCodonTable","TCA","TCC","TCG","TCT","TTC","TTT","TTA","TTG","TAC","TAT","TAA","TAG","TGC","TGT","TGA","TGG","CTA","CTC","CTG","CTT","CCA","CCC","CCG","CCT","CAC","CAT","CAA","CAG","CGA","CGC","CGG","CGT","ATA","ATC","ATT","ATG","ACA","ACC","ACG","ACT","AAC","AAT","AAA","AAG","AGC","AGT","AGA","AGG","GTA","GTC","GTG","GTT","GCA","GCC","GCG","GCT","GAC","GAT","GAA","GAG","GGA","GGC","GGG","GGT","generateCodonTable","table","tempCodonTable","forEach","codon","aa","nucs","nuc","charAt","toUpperCase","toLowerCase","n0","j","n1","n2","updateStatus","_updateStatus","msg","fn","res","hashCode","hash","objectHash","obj","bytesForRegions","_bytesForRegions","index","blockResults","blocksForRange","flat","block","minv","blockPosition","maxv","reduce","isSupportedIndexingAdapter","getBpDisplayStr","totalBp","parseFloat","toPrecision","toLocaleString","getTickDisplayStr","toFixed","getViewParams","exportSVG","_getContainingView","dynamicBlocks","staticBlocks","offsetPx","contentBlocks","staticblock","staticblock1","offsetPx1","getLayoutId","layoutId","initialValue","localStorage","getItem","storedValue","setStoredValue","valueToStore","Function","setItem","getUriLink","_value$baseUri","getStr","isObject","measureGridWidth","elements","_ref5$padding","_ref5$minWidth","_ref5$fontSize","_ref5$maxWidth","_ref5$stripHTML","stripHTML","element","getEnv","getEnvMST","localStorageGetItem","localStorageSetItem","arr","Infinity","entry","sum","avg","groupBy","_predicate","push","mergeIntervals","intervals","stack","pop","gatherOverlaps","memo","flatMap","group","stripAlpha","colord","alpha","toHex","BaseSessionModel","_pluginManager","types","id","optional","identifier","nanoid","string","volatile","views","jbrowse","rpcManager","adminMode","textSearchManager","assemblies","actions","setSelection","clearSelection","isBaseSession","ConnectionManagementSessionMixin","pluginManager","connectionInstances","pluggableMstType","connections","makeConnection","initialSnapshot","getConnectionType","prepareToBreakConnection","callbacksToDeref","derefTypeCount","connection","tracks","track","getReferring","removeReferring","breakConnection","remove","deleteConnection","deleteConnectionConf","addConnectionConf","connectionConf","clearConnections","isSessionWithConnections","AssemblyManager","lazy","_default","_Plugin","exports","UCSCTrackHubConnectionF","AddTrackWidgetF","HierarchicalTrackSelectorWidgetF","AddConnectionWidgetF","PluginStoreWidgetF","latestMessage","snackbarMessages","reason","popSnackbarMessage","MUISnackbar","Alert","_latestMessage$action","severity","level","message","buttonRoot","hoverOpacity","menuTitle","setOpen","ArrowDropDown","logoPath","alt","grow","light","borderColor","_ref$HeaderButtons","HeaderButtons","savedSessionNames","menus","Toolbar","menu","DropDownMenu","arrow","newName","notify","renameCurrentSession","AppLogo","selectPaper","_viewTypes$","viewTypes","getElementTypeRecord","FormControl","Select","addView","IconProps","ArrowUpward","moveViewUp","ArrowDownward","moveViewDown","CascadingMenuButton","MenuIcon","paddingBottom","paddingTop","_view$assemblyNames","minimized","setDisplayName","viewContainer","focusedView","unfocusedView","dark","onMinimize","scrollRef","_scrollRef$current","_scrollRef$current$sc","scrollIntoView","handleSelectView","Element","contains","setFocusedViewId","clsx","focusedViewId","ViewMenu","ViewContainerTitle","AddIcon","MinimizeIcon","viewType","getViewType","ReactComponent","ViewContainer","removeView","setMinimized","Suspense","fallback","LoadingEllipses","DialogComponent","DialogProps","bottom","activeWidgets","drawerPosition","Fab","showWidgetDrawer","LaunchIcon","DrawerWidget","colorScheme","appContainer","gridColumn","gridTemplateRows","gridRow","appBar","LazyDrawerWidget","ViewPanel","ViewLauncher","App","visibleWidget","drawerWidth","drawerVisible","grid","gridTemplateColumns","DialogQueue","AppBar","AppToolbar","AppFab","Snackbar","TimeTraveller","undoIdx","targetPath","history","notTrackingUndo","canUndo","canRedo","targetStore","snapshotDisposer","skipNextUndoState","stopTrackingUndo","resumeTrackingUndo","addUndoState","todos","splice","shift","beforeDestroy","initialize","resolvePath","onSnapshot","debounce","snapshot","undo","applySnapshot","redo","ConfigurationSchema","workerCount","defaultValue","explicitlyTyped","baseConfiguration","BaseRpcDriverConfigSchema","defaultDriver","drivers","union","MainThreadRpcDriverConfigSchema","WebWorkerRpcDriverConfigSchema","MainThreadRpcDriver","WebWorkerRpcDriver","addDriverConfig","configName","configSnapshot","isClonable","watchWorker","_watchWorker","worker","pingTime","rpcDriverClassName","LazyWorker","driver","workerP","_getWorker","makeWorker","then","maxPingTime","catch","destroy","status","BaseRpcDriver","lastWorkerAssignment","workerAssignments","workerPool","workerCheckFrequency","_this2","isArray","filterArgs","AbortSignal","remoteAbort","bind","File","_remoteAbort","functionName","getWorker","hardwareConcurrency","mainThread","canDetect","detectHardwareConcurrency","workers","createWorkerPool","_getWorker2","workerNumber","workerAssignment","getWorkerPool","_call","rpcMethod","serializedArgs","filteredAndSerializedArgs","callP","killedCheckInterval","killedP","resultP","_this3","_args4","getRpcMethodType","serializeArguments","statusCallback","finally","setInterval","clearInterval","race","deserializeReturn","WebWorkerHandle","_Rpc$Client","terminate","funcName","opts","channel","listener","on","_get","_getPrototypeOf","prototype","off","Rpc","Client","_BaseRpcDriver","_super2","workerBootConfiguration","makeWorkerInstance","_makeWorker","instance","log","postMessage","deserializeError","DummyHandle","_functionName","_filteredArgs","_args","_call2","pm","execute","RpcManager","mainConfiguration","backendConfigurations","driverObjects","backendName","newDriver","backendConfiguration","plugins","runtimePluginDefinitions","windowHref","_getDriverForCall","_sessionId","rpcDriverName","getDriver","driverForCall","_args2","getDriverForCall","JBrowseModelF","assemblyConfigSchema","rpc","configSchema","formatDetails","contextVariable","subfeatures","depth","formatAbout","hideUris","shareURL","disableAnalytics","hierarchical","trackNames","categories","defaultCollapsed","categoryNames","topLevelCategories","subCategories","extraThemes","locationType","pluginConfigurationSchemas","frozen","pluggableConfigSchemaType","aggregateTextSearchAdapters","defaultSession","JBrowseConfigF","addAssemblyConf","conf","sequence","trackId","removeAssemblyConf","toRemove","addTrackConf","trackConf","elt","conn","deleteTrackConf","addPlugin","setPluginsUpdated","removePlugin","cast","setDefaultSessionConf","sessionConf","newDefault","toJS","addInternetAccountConf","internetAccountConf","deleteInternetAccountConf","rpcConfigSchema","shareDiv","textAlign","paddingLeft","shareButton","ShareDialog","startIcon","ShareIcon","JBrowse","_useQueryParam","useQueryParam","StringParam","adminKey","_useQueryParam3","adminServer","_useQueryParam5","configPath","_useQueryParam7","setSessionId","currentSessionId","JBrowseRootModel","JBrowseSession","response","fetch","method","headers","body","ok","CssBaseline","ShareButton","maybe","sessionQuery","password","loc","sessionTracks","initialTimestamp","number","blankSession","sessionTriaged","shareWarningOpen","sessionSnapshot","sessionSpec","runtimePlugins","sessionPlugins","sessionError","configError","bc1","BroadcastChannel","bc2","isSharedSession","_self$sessionQuery","isSpecSession","_self$sessionQuery2","isJb1StyleSession","isEncodedSession","_self$sessionQuery3","isJsonSession","_self$sessionQuery4","isLocalSession","_self$sessionQuery5","ready","isSessionLoaded","isConfigLoaded","sessionTracksParsed","setSessionQuery","setConfigError","setSessionError","setRuntimePlugins","setSessionPlugins","setConfigSnapshot","snap","setBlankSession","flag","setSessionTriaged","setSessionSnapshotSuccess","fetchPlugins","pluginLoader","import","installGlobalReExports","load","fetchSessionPlugins","setSessionSnapshot","userAcceptedConfirmation","_snap$sessionPlugins","checkPlugins","origin","fetchConfig","_self$configPath","configUri","configPlugins","__jbrowseCacheBuster","random","openLocation","readFile","addRelativeUris","hostname","fetchSessionStorageSession","sessionStr","query","sessionSnap","sessionStorage","onmessage","fetchSharedSession","_this4","decryptedSession","readSessionFromDynamo","readConf","fromUrlSafeB64","decodeEncodedUrlSession","_this5","decodeSessionSpec","decodeJb1StyleSession","decodeJsonUrlSession","_this6","_callee8","_context8","afterCreate","_this7","_callee10","lastAutosave","_context10","autorun","_callee9","_context9","NoConfigMessage","_window$location","_Object$fromEntries","rest","link","params","StartScreenErrorMessage","_writeAWSAnalytics","initialTimeStamp","multiAssemblyTracks","savedSessionCount","ver","stats","qs","version","p","screen","innerHeight","innerWidth","electron","loadTime","jb2","_writeGAAnalytics","_rootModel$jbrowse$pl","analyticsScript","gaData","analyticsScriptNode","pluginNames","metric1","createElement","innerHTML","getElementsByTagName","append","doAnalytics","initialSessionQuery","writeAWSAnalytics","writeGAAnalytics","aliases","getTrackType","refNameColors","refNameAliases","adapter","preProcessSnapshot","cytobands","explicitIdentifier","TextSearchManager","adapterCache","searchScope","relevantAdapters","adapterId","AdapterClass","getTextSearchAdapterType","_pm$rootModel","_pm$rootModel2","getAdaptersWithAssembly","getTrackAdaptersWithAssembly","confs","_readConfObject","_readConfObject2","textSearching","textSearchAdapter","_search","rankFn","adapters","loadTextSearchAdapters","searchIndex","sortResults","getLabel","r1","r2","getScore","Worker","resolveIdentifier","refNameRegex","loadRefNameMap","_loadRefNameMap","refNames","when","checkRefName","getCanonicalRefName","canonicalName","forwardMap","reverseMap","assemblyFactory","assemblyConfigType","adapterLoads","AbortablePromiseCache","adapterConf","safeReference","loaded","loadingP","volatileRegions","lowerCaseRefNameAliases","arg","initialized","hasName","allAliases","allRefNames","lowerCaseRefNames","allRefNamesWithLowerCase","_self$regions","getRefNameColor","setLoaded","adapterRegionsWithAssembly","setRegions","setRefNameAliases","setCytobands","setError","lcAliases","setLoadingP","loadPre","_conf$refNameAliases","_conf$cytobands","refNameAliasesAdapterConf","cytobandAdapterConf","sequenceAdapterConf","ret","getAssemblyRegions","getRefNameAliases","getCytobands","getAdapterMapEntry","jsonStableStringify","getAdapterId","getReverseRefNameMapForAdapter","_getRefNameAliases","CLASS","getAdapterType","getAdapterClass","_getCytobands","getData","_x12","_getAssemblyRegions","getRegions","assemblyNameMap","asmName","assemblyNamesList","assemblyList","asm","_getParent","_getParent$session","_getParent$session2","_getParent$session2$s","sessionAssemblies","_getParent$session2$t","temporaryAssemblies","waitForAssembly","_assembly","_assembly2","afterAttach","assemblyConfs","removeAssembly","addAssembly","fireImmediately","replaceAssembly","SetDefaultSession","PreferencesDialog","RootModel","sessionModelFactory","_ref$adminMode","assemblyConfigSchemaFactory","jbrowseModelType","snapshotProcessor","postProcessor","removeAttr","clone","jbrowseWebFactory","sessionModelType","compose","sessionPath","assemblyManagerFactory","isAssemblyEditing","setSession","setDefaultSession","setSessionPath","path","setAssemblyEditing","BaseRootModelFactory","initializeInternetAccount","internetAccountConfig","getInternetAccountType","createEphemeralInternetAccount","hostUri","internetAccountSplit","domains","internetAccount","stateModel","create","findAppropriateInternetAccount","selectedId","selectedAccount","account","handlesLocation","InternetAccountsRootModelMixin","_document$activeEleme","_document$activeEleme2","ctrlKey","metaKey","shiftKey","setMenus","newMenus","appendMenu","menuName","insertMenu","appendToMenu","insertInMenu","insertPosition","appendToSubMenu","menuPath","topMenu","pathSoFar","sm","mi","insertInSubMenu","packageJSON","hydrateFn","hydrateRoot","pluginsUpdated","savedSessionsVolatile","observable","savedSessions","localStorageId","autosaveId","previousAutosaveId","_params$get","locationUrl","alert","reload","oldSession","filterSessionInPlace","getType","newSession","sessionName","addSavedSession","removeSavedSession","removeItem","duplicateCurrentSession","newSnapshotName","newSnapshotCopyNumber","activateSession","localId","newSessionSnapshot","saveSessionToLocalStorage","loadAutosaveSession","previousAutosave","autosavedSession","PublishIcon","widget","addWidget","showWidget","GetAppIcon","sessionBlob","Blob","saveAs","FolderOpenIcon","SaveIcon","FileCopyIcon","StorageIcon","AppsIcon","queueDialog","UndoIcon","RedoIcon","ExtensionIcon","SettingsIcon","addSnackbarToModel","tree","extend","pushSnackbarMessage","removeSnackbarMessage","makeExtension","ReferenceManagementSessionMixin","object","refs","walk","isModelType","members","getMembers","properties","isReferenceType","referring","callbacks","dereferenceTypeCount","dereferenced","hideTrack","err1","isSessionModelWithWidgets","widgets","hideWidget","minDrawerWidth","DrawerWidgetSessionMixin","widgetStateModelType","refinement","integer","boolean","setDrawerPosition","updateDrawerWidth","newDrawerWidth","resizeDrawer","distance","oldDrawerWidth","typeName","initialState","getElementType","hasWidget","minimizeWidgetDrawer","hideAllWidgets","editConfiguration","isConfigurationModel","editor","SessionTracksManagerSessionMixin","callbacksToDereferenceTrack","TracksManagerSessionMixin","named","superAddTrackConf","superDeleteTrackConf","found","AboutDialog","BaseWebSession","assemblyConfigSchemasType","sessionModel","queueOfDialogs","_self$queueOfDialogs$","_self$queueOfDialogs$2","removeActiveDialog","_cb","_cb2","sessionThemeName","allThemes","setThemeName","addLinearGenomeViewOfAssembly","addViewOfAssembly","displayRegionsFromAssemblyName","addViewFromAnotherView","otherView","state","displayedRegions","MultipleViewsSessionMixin","addSessionAssembly","warn","removeSessionAssembly","addTemporaryAssembly","removeTemporaryAssembly","TemporaryAssembliesMixin","sessionConnections","superDeleteConnection","superAddConnectionConf","connectionId","deletedConn","WebSessionConnectionsMixin","viewId","setName","task","renderProps","addSessionPlugin","removeSessionPlugin","editTrackConfiguration","getTrackActionMenuItems","canEdit","isRefSeq","InfoIcon","DeleteIcon","displays","displayId","category","CopyIcon","extendedSessionModel","evaluateExtensionPoint","preProcessor","createPluginManager","_self$configSnapshot","_self$configSnapshot$","_self$configSnapshot$2","PluginManager","corePlugins","P","metadata","isCore","createPluggableElements","JBrowseRootModelFactory","afterInitializedCb","_rootModel$jbrowse$de","_rootModel$jbrowse$de2","_ref2$sessionTracks","_callee11","_rootModel$session","_context11","evaluateAsyncExtensionPoint","loadSessionSpec","errorMessage","setRootModel","configure","ConfigTriaged","SessionTriaged","StartScreen","Loader","_ref$initialTimestamp","param","Str","_useQueryParam8","setPassword","_useQueryParam9","_useQueryParam10","setLoc","_useQueryParam11","_useQueryParam12","setSessionTracks","_useQueryParam13","_useQueryParam14","setAssembly","_useQueryParam15","_useQueryParam16","setTracks","loader","SessionLoader","Renderer","_pluginManager$rootMo","setPluginManager","factoryReset","Loading","FatalErrorDialog","resetButtonText","QueryParamProvider","WindowHistoryAdapter","_factoryReset","encrypt","AES","toString","decrypt","Utf8","bytes","getErrorMsg","shareSessionToDynamo","_shareSessionToDynamo","referer","sess","encryptedSession","json","toUrlSafeB64","btoa","crypto","getRandomValues","Uint8Array","fromCharCode","FormData","_readSessionFromDynamo","baseUrl","sessionQueryParam","encodeURIComponent","b64PadSuffix","b64","repeat","_fromUrlSafeB","originalB64","_yield$import","toByteArray","_yield$import2","inflate","inflated","TextDecoder","decode","_toUrlSafeB","_yield$import3","deflate","_yield$import4","fromByteArray","deflated","encoded","TextEncoder","encode","isArrayType","childType","getChildType","_loop","isValidReference","el","isMapType","_loop2","child","getPropertyMembers","pname","ptype","base","_i2","_Object$keys","attr","_fetchPlugins","statusText","_checkPlugins","pluginsToCheck","storePlugins","every","pp","prop"],"sourceRoot":""}