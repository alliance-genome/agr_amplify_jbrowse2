{"version":3,"sources":["../../../node_modules/@material-ui/icons/KeyboardArrowLeft.js","../../../node_modules/@material-ui/icons/KeyboardArrowRight.js","../../../plugins/dotplot-view/src/DotplotView/components/ImportForm.tsx","../../../plugins/dotplot-view/src/DotplotView/components/Header.tsx","../../../plugins/dotplot-view/src/DotplotView/components/Axes.tsx","../../../plugins/dotplot-view/src/DotplotView/components/DotplotView.tsx","../../../node_modules/@material-ui/icons/KeyboardArrowUp.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","useStyles","makeStyles","theme","importFormContainer","padding","spacing","margin","assemblySelector","width","getName","trackData","uri","localPath","name","undefined","DotplotImportForm","observer","model","classes","session","getSession","assemblyNames","assemblyManager","useState","setTrackData","bed2Location","setBed2Location","bed1Location","setBed1Location","targetAssembly","setTargetAssembly","queryAssembly","setQueryAssembly","selected","error","setError","setValue","fileName","radioOption","path","extname","endsWith","slice","length","stripGz","assemblyError","map","a","get","filter","f","join","getAdapter","type","pafLocation","outLocation","deltaLocation","chainLocation","mcscanAnchorsLocation","mcscanSimpleAnchorsLocation","Error","displayError","Container","className","Grid","container","justifyContent","alignItems","item","Paper","style","textAlign","Typography","onChange","val","RadioGroup","event","target","FormControlLabel","control","Radio","label","href","display","description","location","setLocation","loc","Button","onClick","isSessionWithAddTracks","transaction","basename","trackId","Date","now","addTrackConf","adapter","toggleTrack","setViews","bpPerPx","offsetPx","setAssemblyNames","e","console","disabled","variant","color","iconButton","bp","marginLeft","spacer","flexGrow","headerBar","DotplotControls","menuAnchorEl","setMenuAnchorEl","IconButton","hview","scroll","title","vview","zoomOutButton","zoomInButton","activateTrackSelector","currentTarget","anchorEl","keepMounted","open","Boolean","onMenuItemClick","_event","callback","menuItems","squareView","squareViewProportional","onClose","Header","selection","getBpDisplayStr","currBp","height","vtext","gridColumn","gridRow","pointerEvents","userSelect","htext","majorTickLabel","fontSize","majorTick","stroke","minorTick","HorizontalAxis","viewWidth","borderX","borderY","htextRotation","hticks","dblocks","dynamicBlocks","contentBlocks","hide","getBlockLabelKeysToHide","hviewSnap","getSnapshot","region","includes","key","xoff","transform","JSON","stringify","x","y","fill","dominantBaseline","textAnchor","refName","start","Math","floor","tick","viewBpToPx","coord","base","self","x1","x2","y1","y2","strokeWidth","toLocaleString","VerticalAxis","viewHeight","vtextRotation","vticks","vviewSnap","root","position","marginBottom","overflow","overlay","zIndex","cursor","content","popover","background","maxWidth","wordBreak","border","children","hblocks","vblocks","htop","displayedRegionsTotalPx","vtop","hbottom","vbottom","getOffset","rect","left","top","RenderedComponent","tracks","track","displays","RenderingComponent","configuration","DotplotViewInternal","mousecurrClient","setMouseCurrClient","mousedownClient","setMouseDownClient","mouseOvered","setMouseOvered","mouseupClient","setMouseUpClient","ref","useRef","distanceX","distanceY","lref","rref","scheduled","blank","svg","current","getBoundingClientRect","rrect","lrect","mousedown","mousecurr","mouseup","mouserect","abs","useEffect","onWheel","origEvent","normalizeWheel","preventDefault","pixelX","pixelY","window","requestAnimationFrame","curr","addEventListener","removeEventListener","globalMouseMove","clientX","clientY","cleanup","globalMouseUp","onMouseLeave","onMouseEnter","scaleFactor","locstr","role","onMouseDown","button","min","_","anchorReference","anchorPosition","zoomIn","onDotplotView","onDrag","n","setHeight","boxSizing","borderTop","DotplotView","initialized","loading","ImportForm","LinearProgress"],"mappings":"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","file":"static/js/28.b5dc2d07.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z\"\n}), 'KeyboardArrowLeft');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\n\nexports.default = _default;","import React, { useState } from 'react'\nimport path from 'path'\nimport {\n  Button,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  Paper,\n  Container,\n  Grid,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { FileSelector, ErrorMessage, AssemblySelector } from '@jbrowse/core/ui'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport { observer } from 'mobx-react'\nimport { transaction } from 'mobx'\nimport { getSession, isSessionWithAddTracks } from '@jbrowse/core/util'\nimport { DotplotViewModel } from '../model'\n\nconst useStyles = makeStyles(theme => ({\n  importFormContainer: {\n    padding: theme.spacing(4),\n    margin: '0 auto',\n  },\n  assemblySelector: {\n    width: '75%',\n    margin: '0 auto',\n  },\n}))\n\nfunction getName(\n  trackData?: { uri: string } | { localPath: string } | { name: string },\n) {\n  return trackData\n    ? // @ts-ignore\n      trackData.uri || trackData.localPath || trackData.name\n    : undefined\n}\n\nfunction stripGz(fileName: string) {\n  return fileName.endsWith('.gz')\n    ? fileName.slice(0, fileName.length - 3)\n    : fileName\n}\n\nconst DotplotImportForm = observer(({ model }: { model: DotplotViewModel }) => {\n  const classes = useStyles()\n  const session = getSession(model)\n  const { assemblyNames, assemblyManager } = session\n  const [trackData, setTrackData] = useState<FileLocation>()\n  const [bed2Location, setBed2Location] = useState<FileLocation>()\n  const [bed1Location, setBed1Location] = useState<FileLocation>()\n  const [targetAssembly, setTargetAssembly] = useState(assemblyNames[0])\n  const [queryAssembly, setQueryAssembly] = useState(assemblyNames[0])\n  const selected = [queryAssembly, targetAssembly]\n  const [error, setError] = useState<unknown>()\n  const [value, setValue] = useState('')\n  const fileName = getName(trackData)\n  const radioOption = value || (fileName ? path.extname(stripGz(fileName)) : '')\n\n  const assemblyError = assemblyNames.length\n    ? selected\n        .map(a => assemblyManager.get(a)?.error)\n        .filter(f => !!f)\n        .join(', ')\n    : 'No configured assemblies'\n\n  function getAdapter() {\n    if (radioOption === '.paf') {\n      return {\n        type: 'PAFAdapter',\n        pafLocation: trackData,\n        queryAssembly,\n        targetAssembly,\n      }\n    } else if (radioOption === '.out') {\n      return {\n        type: 'MashMapAdapter',\n        outLocation: trackData,\n        queryAssembly,\n        targetAssembly,\n      }\n    } else if (radioOption === '.delta') {\n      return {\n        type: 'DeltaAdapter',\n        deltaLocation: trackData,\n        queryAssembly,\n        targetAssembly,\n      }\n    } else if (radioOption === '.chain') {\n      return {\n        type: 'ChainAdapter',\n        chainLocation: trackData,\n        queryAssembly,\n        targetAssembly,\n      }\n    } else if (radioOption === '.anchors') {\n      return {\n        type: 'MCScanAnchorsAdapter',\n        mcscanAnchorsLocation: trackData,\n        bed1Location,\n        bed2Location,\n        assemblyNames: [queryAssembly, targetAssembly],\n      }\n    } else if (radioOption === '.anchors.simple') {\n      return {\n        type: 'MCScanSimpleAnchorsAdapter',\n        mcscanSimpleAnchorsLocation: trackData,\n        bed1Location,\n        bed2Location,\n        assemblyNames: [queryAssembly, targetAssembly],\n      }\n    } else {\n      throw new Error('Unknown type')\n    }\n  }\n\n  function onOpenClick() {\n    try {\n      if (!isSessionWithAddTracks(session)) {\n        return\n      }\n      transaction(() => {\n        if (trackData) {\n          const fileName = path.basename(getName(trackData)) || 'MyTrack'\n          const trackId = `${fileName}-${Date.now()}`\n\n          session.addTrackConf({\n            trackId: trackId,\n            name: fileName,\n            assemblyNames: [targetAssembly, queryAssembly],\n            type: 'SyntenyTrack',\n            adapter: getAdapter(),\n          })\n          model.toggleTrack(trackId)\n        }\n        model.setViews([\n          { bpPerPx: 0.1, offsetPx: 0 },\n          { bpPerPx: 0.1, offsetPx: 0 },\n        ])\n        model.setAssemblyNames(targetAssembly, queryAssembly)\n      })\n    } catch (e) {\n      console.error(e)\n      setError(e)\n    }\n  }\n\n  // this is a combination of any displayed error message we have\n  const displayError = error || assemblyError\n  return (\n    <Container className={classes.importFormContainer}>\n      {displayError ? <ErrorMessage error={displayError} /> : null}\n      <Grid\n        container\n        spacing={1}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        className={classes.assemblySelector}\n      >\n        <Grid item>\n          <Paper style={{ padding: 12 }}>\n            <p style={{ textAlign: 'center' }}>\n              Select assemblies for dotplot view\n            </p>\n            <Grid\n              container\n              spacing={1}\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <Typography>\n                  {value === '.anchors' || value === '.anchors.simple'\n                    ? 'Left column of anchors file'\n                    : 'Query'}\n                </Typography>\n                <AssemblySelector\n                  selected={queryAssembly}\n                  onChange={val => setQueryAssembly(val)}\n                  session={session}\n                />\n              </Grid>\n              <Grid item>\n                <Typography>\n                  {value === '.anchors' || value === '.anchors.simple'\n                    ? 'Right column of anchors file'\n                    : 'Target'}\n                </Typography>\n                <AssemblySelector\n                  selected={targetAssembly}\n                  onChange={val => setTargetAssembly(val)}\n                  session={session}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n\n          <Paper style={{ padding: 12 }}>\n            <Typography style={{ textAlign: 'center' }}>\n              <b>Optional</b>: Add a .paf, .out (MashMap), .delta (Mummer),\n              .chain, .anchors or .anchors.simple (MCScan) file to view in the\n              dotplot. These file types can also be gzipped. The first assembly\n              should be the query sequence (e.g. left column of the PAF) and the\n              second assembly should be the target sequence (e.g. right column\n              of the PAF)\n            </Typography>\n            <RadioGroup\n              value={radioOption}\n              onChange={event => setValue(event.target.value)}\n            >\n              <Grid container justifyContent=\"center\">\n                <Grid item>\n                  <FormControlLabel\n                    value=\".paf\"\n                    control={<Radio />}\n                    label=\".paf\"\n                  />\n                </Grid>\n                <Grid item>\n                  <FormControlLabel\n                    value=\".out\"\n                    control={<Radio />}\n                    label=\".out\"\n                  />\n                </Grid>\n                <Grid item>\n                  <FormControlLabel\n                    value=\".delta\"\n                    control={<Radio />}\n                    label=\".delta\"\n                  />\n                </Grid>\n                <Grid item>\n                  <FormControlLabel\n                    value=\".chain\"\n                    control={<Radio />}\n                    label=\".chain\"\n                  />\n                </Grid>\n                <Grid item>\n                  <FormControlLabel\n                    value=\".anchors\"\n                    control={<Radio />}\n                    label=\".anchors\"\n                  />\n                </Grid>\n                <Grid item>\n                  <FormControlLabel\n                    value=\".anchors.simple\"\n                    control={<Radio />}\n                    label=\".anchors.simple\"\n                  />\n                </Grid>\n              </Grid>\n            </RadioGroup>\n            <Grid container justifyContent=\"center\">\n              <Grid item>\n                {value === '.anchors' || value === '.anchors.simple' ? (\n                  <div>\n                    <div style={{ margin: 20 }}>\n                      Open the {value} and .bed files for both genome assemblies\n                      from the MCScan (Python verson) pipeline{' '}\n                      <a href=\"https://github.com/tanghaibao/jcvi/wiki/MCscan-(Python-version)\">\n                        (more info)\n                      </a>\n                    </div>\n                    <div style={{ display: 'flex' }}>\n                      <div>\n                        <FileSelector\n                          name=\".anchors file\"\n                          description=\"\"\n                          location={trackData}\n                          setLocation={loc => setTrackData(loc)}\n                        />\n                      </div>\n                      <div>\n                        <FileSelector\n                          name=\"genome 1 .bed (left column of anchors file)\"\n                          description=\"\"\n                          location={bed1Location}\n                          setLocation={loc => setBed1Location(loc)}\n                        />\n                      </div>\n                      <div>\n                        <FileSelector\n                          name=\"genome 2 .bed (right column of anchors file)\"\n                          description=\"\"\n                          location={bed2Location}\n                          setLocation={loc => setBed2Location(loc)}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                  <FileSelector\n                    name={value ? value + ' location' : ''}\n                    description=\"\"\n                    location={trackData}\n                    setLocation={loc => setTrackData(loc)}\n                  />\n                )}\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid item>\n          <Button\n            data-testid=\"submitDotplot\"\n            onClick={onOpenClick}\n            // only disable button on assemblyError. for other types of errors\n            // in the useState can retry\n            disabled={!!assemblyError}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Open\n          </Button>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n})\n\nexport default DotplotImportForm\n","import React, { useState } from 'react'\n\nimport { IconButton, Typography, makeStyles } from '@material-ui/core'\nimport { getBpDisplayStr } from '@jbrowse/core/util'\nimport { Menu } from '@jbrowse/core/ui'\n\n// icons\nimport ZoomOut from '@material-ui/icons/ZoomOut'\nimport ZoomIn from '@material-ui/icons/ZoomIn'\nimport ArrowUp from '@material-ui/icons/KeyboardArrowUp'\nimport ArrowDown from '@material-ui/icons/KeyboardArrowDown'\nimport ArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport ArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport CropFreeIcon from '@material-ui/icons/CropFree'\n\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\n\nimport { observer } from 'mobx-react'\nimport { DotplotViewModel } from '../model'\n\nconst useStyles = makeStyles({\n  iconButton: {\n    margin: 5,\n  },\n  bp: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 10,\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  headerBar: {\n    display: 'flex',\n  },\n})\n\nconst DotplotControls = observer(({ model }: { model: DotplotViewModel }) => {\n  const classes = useStyles()\n  const [menuAnchorEl, setMenuAnchorEl] = useState<null | HTMLElement>(null)\n  return (\n    <div>\n      <IconButton\n        onClick={() => {\n          model.hview.scroll(-100)\n        }}\n        className={classes.iconButton}\n        title=\"left\"\n        color=\"secondary\"\n      >\n        <ArrowLeft />\n      </IconButton>\n\n      <IconButton\n        onClick={() => {\n          model.hview.scroll(100)\n        }}\n        className={classes.iconButton}\n        title=\"left\"\n        color=\"secondary\"\n      >\n        <ArrowRight />\n      </IconButton>\n      <IconButton\n        onClick={() => {\n          model.vview.scroll(100)\n        }}\n        className={classes.iconButton}\n        title=\"left\"\n        color=\"secondary\"\n      >\n        <ArrowDown />\n      </IconButton>\n      <IconButton\n        onClick={() => {\n          model.vview.scroll(-100)\n        }}\n        className={classes.iconButton}\n        title=\"left\"\n        color=\"secondary\"\n      >\n        <ArrowUp />\n      </IconButton>\n      <IconButton\n        onClick={model.zoomOutButton}\n        className={classes.iconButton}\n        color=\"secondary\"\n      >\n        <ZoomOut />\n      </IconButton>\n\n      <IconButton\n        onClick={model.zoomInButton}\n        className={classes.iconButton}\n        title=\"zoom in\"\n        color=\"secondary\"\n      >\n        <ZoomIn />\n      </IconButton>\n\n      <IconButton\n        onClick={model.activateTrackSelector}\n        className={classes.iconButton}\n        title=\"Open track selector\"\n        data-testid=\"circular_track_select\"\n        color=\"secondary\"\n      >\n        <TrackSelectorIcon />\n      </IconButton>\n\n      <IconButton\n        onClick={event => setMenuAnchorEl(event.currentTarget)}\n        className={classes.iconButton}\n        title=\"Square view\"\n        color=\"secondary\"\n      >\n        <CropFreeIcon />\n      </IconButton>\n\n      {menuAnchorEl ? (\n        <Menu\n          anchorEl={menuAnchorEl}\n          keepMounted\n          open={Boolean(menuAnchorEl)}\n          onMenuItemClick={(_event, callback) => {\n            callback()\n            setMenuAnchorEl(null)\n          }}\n          menuItems={[\n            {\n              onClick: () => model.squareView(),\n              label: 'Square view - same base pairs per pixel',\n            },\n            {\n              onClick: () => model.squareViewProportional(),\n              label: 'Rectanglular view - same total bp',\n            },\n          ]}\n          onClose={() => {\n            setMenuAnchorEl(null)\n          }}\n        />\n      ) : null}\n    </div>\n  )\n})\n\nconst Header = observer(\n  ({\n    model,\n    selection,\n  }: {\n    model: DotplotViewModel\n    selection?: { width: number; height: number }\n  }) => {\n    const classes = useStyles()\n    const { hview, vview } = model\n    return (\n      <div className={classes.headerBar}>\n        <DotplotControls model={model} />\n        <Typography\n          className={classes.bp}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >\n          x: {hview.assemblyNames.join(',')} {getBpDisplayStr(hview.currBp)}\n          <br />\n          y: {vview.assemblyNames.join(',')} {getBpDisplayStr(vview.currBp)}\n        </Typography>\n        {selection ? (\n          <Typography\n            className={classes.bp}\n            variant=\"body2\"\n            color=\"textSecondary\"\n          >\n            {`width:${getBpDisplayStr(hview.bpPerPx * selection.width)}`} <br />\n            {`height:${getBpDisplayStr(vview.bpPerPx * selection.height)}`}\n          </Typography>\n        ) : null}\n        <div className={classes.spacer} />\n      </div>\n    )\n  },\n)\nexport default Header\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core'\nimport { observer } from 'mobx-react'\nimport { getSnapshot } from 'mobx-state-tree'\nimport { getBlockLabelKeysToHide } from './util'\nimport { viewBpToPx } from '@jbrowse/core/util'\nimport { DotplotViewModel } from '../model'\n\nconst useStyles = makeStyles(() => ({\n  vtext: {\n    gridColumn: '1/2',\n    gridRow: '1/2',\n    pointerEvents: 'none',\n    userSelect: 'none',\n  },\n  htext: {\n    gridColumn: '2/2',\n    gridRow: '2/2',\n    pointerEvents: 'none',\n    userSelect: 'none',\n  },\n  majorTickLabel: {\n    fontSize: '11px',\n  },\n  majorTick: {\n    stroke: '#555',\n  },\n  minorTick: {\n    stroke: '#999',\n  },\n}))\n\nexport const HorizontalAxis = observer(\n  ({ model }: { model: DotplotViewModel }) => {\n    const classes = useStyles()\n    const { viewWidth, borderX, borderY, hview, htextRotation, hticks } = model\n    const { offsetPx, width, dynamicBlocks } = hview\n    const dblocks = dynamicBlocks.contentBlocks\n    const hide = getBlockLabelKeysToHide(dblocks, viewWidth, offsetPx)\n    const hviewSnap = { ...getSnapshot(hview), width }\n    return (\n      <svg width={viewWidth} height={borderY} className={classes.htext}>\n        {dblocks\n          .filter(region => !hide.includes(region.key))\n          .map(region => {\n            const x = region.offsetPx\n            const y = 0\n            const xoff = x - hview.offsetPx\n            return (\n              <text\n                transform={`rotate(${htextRotation},${xoff},${y})`}\n                key={JSON.stringify(region)}\n                x={xoff}\n                y={y + 1}\n                fill=\"#000000\"\n                dominantBaseline=\"hanging\"\n                textAnchor=\"end\"\n              >\n                {[\n                  region.refName,\n                  region.start !== 0 ? Math.floor(region.start) : '',\n                ]\n                  .filter(f => !!f)\n                  .join(':')}\n              </text>\n            )\n          })}\n        {hticks.map(tick => {\n          const x =\n            (viewBpToPx({\n              refName: tick.refName,\n              coord: tick.base,\n              self: hviewSnap,\n            })?.offsetPx || 0) - offsetPx\n          return (\n            <line\n              key={`line-${JSON.stringify(tick)}`}\n              x1={x}\n              x2={x}\n              y1={0}\n              y2={tick.type === 'major' ? 6 : 4}\n              strokeWidth={1}\n              stroke={tick.type === 'major' ? '#555' : '#999'}\n              className={\n                tick.type === 'major' ? classes.majorTick : classes.minorTick\n              }\n              data-bp={tick.base}\n            />\n          )\n        })}\n        {hticks\n          .filter(tick => tick.type === 'major')\n          .map(tick => {\n            const x =\n              (viewBpToPx({\n                refName: tick.refName,\n                coord: tick.base,\n                self: hviewSnap,\n              })?.offsetPx || 0) - offsetPx\n            const y = 0\n            return (\n              <text\n                x={x - 7}\n                y={y}\n                transform={`rotate(${htextRotation},${x},${y})`}\n                key={`text-${JSON.stringify(tick)}`}\n                style={{ fontSize: '11px' }}\n                className={classes.majorTickLabel}\n                dominantBaseline=\"middle\"\n                textAnchor=\"end\"\n              >\n                {(tick.base + 1).toLocaleString('en-US')}\n              </text>\n            )\n          })}\n        {hview.assemblyNames.length === 1 ? (\n          <text\n            y={borderY - 12}\n            x={(viewWidth - borderX) / 2}\n            fill=\"black\"\n            textAnchor=\"middle\"\n          >\n            {hview.assemblyNames[0]}\n          </text>\n        ) : null}\n      </svg>\n    )\n  },\n)\nexport const VerticalAxis = observer(\n  ({ model }: { model: DotplotViewModel }) => {\n    const classes = useStyles()\n    const { borderX, viewHeight, borderY, vview, vtextRotation, vticks } = model\n    const { offsetPx, width, dynamicBlocks } = vview\n    const dblocks = dynamicBlocks.contentBlocks\n    const hide = getBlockLabelKeysToHide(dblocks, viewHeight, offsetPx)\n    const vviewSnap = { ...getSnapshot(vview), width }\n    return (\n      <svg className={classes.vtext} width={borderX} height={viewHeight}>\n        {dblocks\n          .filter(region => !hide.includes(region.key))\n          .map(region => {\n            const y = region.offsetPx\n            const x = borderX\n            return (\n              <text\n                transform={`rotate(${vtextRotation},${x},${y})`}\n                key={JSON.stringify(region)}\n                x={x}\n                y={viewHeight - y + offsetPx}\n                fill=\"#000000\"\n                textAnchor=\"end\"\n              >\n                {[\n                  region.refName,\n                  region.start !== 0 ? Math.floor(region.start) : '',\n                ]\n                  .filter(f => !!f)\n                  .join(':')}\n              </text>\n            )\n          })}\n        {vticks.map(tick => {\n          const y =\n            (viewBpToPx({\n              refName: tick.refName,\n              coord: tick.base,\n              self: vviewSnap,\n            })?.offsetPx || 0) - offsetPx\n          return (\n            <line\n              key={`line-${JSON.stringify(tick)}`}\n              y1={viewHeight - y}\n              y2={viewHeight - y}\n              x1={borderX}\n              x2={borderX - (tick.type === 'major' ? 6 : 4)}\n              strokeWidth={1}\n              stroke={tick.type === 'major' ? '#555' : '#999'}\n              className={\n                tick.type === 'major' ? classes.majorTick : classes.minorTick\n              }\n              data-bp={tick.base}\n            />\n          )\n        })}\n        {vticks\n          .filter(tick => tick.type === 'major')\n          .map(tick => {\n            const y =\n              (viewBpToPx({\n                refName: tick.refName,\n                coord: tick.base,\n                self: vviewSnap,\n              })?.offsetPx || 0) - offsetPx\n            return (\n              <text\n                y={viewHeight - y - 3}\n                x={borderX - 7}\n                key={`text-${JSON.stringify(tick)}`}\n                textAnchor=\"end\"\n                dominantBaseline=\"hanging\"\n                style={{ fontSize: '11px' }}\n                className={classes.majorTickLabel}\n              >\n                {(tick.base + 1).toLocaleString('en-US')}\n              </text>\n            )\n          })}\n        {vview.assemblyNames.length === 1 ? (\n          <text\n            y={(viewHeight - borderY) / 2}\n            x={12}\n            transform={`rotate(-90,12,${(viewHeight - borderY) / 2})`}\n            textAnchor=\"middle\"\n          >\n            {vview.assemblyNames[0]}\n          </text>\n        ) : null}\n      </svg>\n    )\n  },\n)\n","import React, { useState, useEffect, useRef } from 'react'\nimport { observer } from 'mobx-react'\nimport { transaction } from 'mobx'\nimport { makeStyles, LinearProgress } from '@material-ui/core'\nimport { Menu, ResizeHandle } from '@jbrowse/core/ui'\nimport normalizeWheel from 'normalize-wheel'\nimport { DotplotViewModel } from '../model'\nimport ImportForm from './ImportForm'\nimport Header from './Header'\nimport { locstr } from './util'\nimport { HorizontalAxis, VerticalAxis } from './Axes'\n\nconst useStyles = makeStyles(theme => ({\n  spacer: {\n    gridColumn: '1/2',\n    gridRow: '2/2',\n  },\n  root: {\n    position: 'relative',\n    marginBottom: theme.spacing(1),\n    overflow: 'hidden',\n  },\n\n  container: {\n    display: 'grid',\n    padding: 5,\n    position: 'relative',\n  },\n  overlay: {\n    pointerEvents: 'none',\n    overflow: 'hidden',\n    display: 'flex',\n    width: '100%',\n    gridRow: '1/2',\n    gridColumn: '2/2',\n    zIndex: 100, // needs to be below controls\n    '& path': {\n      cursor: 'crosshair',\n      fill: 'none',\n    },\n  },\n\n  content: {\n    position: 'relative',\n    gridColumn: '2/2',\n    gridRow: '1/2',\n  },\n\n  popover: {\n    background: '#fff',\n    maxWidth: 400,\n    wordBreak: 'break-all',\n    zIndex: 1000,\n    border: '1px solid black',\n    pointerEvents: 'none',\n    position: 'absolute',\n  },\n}))\n\ntype Coord = [number, number] | undefined\ntype Rect = { left: number; top: number }\n\nconst Grid = observer(\n  ({\n    model,\n    children,\n    stroke = '#0003',\n  }: {\n    model: DotplotViewModel\n    children: React.ReactNode\n    stroke?: string\n  }) => {\n    const { viewWidth, viewHeight, hview, vview } = model\n    const hblocks = hview.dynamicBlocks.contentBlocks\n    const vblocks = vview.dynamicBlocks.contentBlocks\n    const htop = hview.displayedRegionsTotalPx - hview.offsetPx\n    const vtop = vview.displayedRegionsTotalPx - vview.offsetPx\n    const hbottom = hblocks[0]?.offsetPx - hview.offsetPx\n    const vbottom = vblocks[0]?.offsetPx - vview.offsetPx\n\n    return (\n      <svg\n        style={{ background: 'rgba(0,0,0,0.12)' }}\n        width={viewWidth}\n        height={viewHeight}\n      >\n        <rect\n          x={hbottom}\n          y={viewHeight - vtop}\n          width={htop - hbottom}\n          height={vtop - vbottom}\n          fill=\"#fff\"\n        />\n        <g>\n          {hblocks.map(region => {\n            const x = region.offsetPx - hview.offsetPx\n            return (\n              <line\n                key={JSON.stringify(region)}\n                x1={x}\n                y1={0}\n                x2={x}\n                y2={viewHeight}\n                stroke={stroke}\n              />\n            )\n          })}\n          {vblocks.map(region => {\n            const y = viewHeight - (region.offsetPx - vview.offsetPx)\n            return (\n              <line\n                key={JSON.stringify(region)}\n                x1={0}\n                y1={y}\n                x2={viewWidth}\n                y2={y}\n                stroke={stroke}\n              />\n            )\n          })}\n          <line x1={htop} y1={0} x2={htop} y2={viewHeight} stroke={stroke} />\n          <line\n            x1={0}\n            y1={viewHeight - vtop}\n            x2={viewWidth}\n            y2={viewHeight - vtop}\n            stroke={stroke}\n          />\n        </g>\n        {children}\n      </svg>\n    )\n  },\n)\n// produces offsetX/offsetY coordinates from a clientX and an element's\n// getBoundingClientRect\nfunction getOffset(coord: Coord, rect: Rect) {\n  return coord && ([coord[0] - rect.left, coord[1] - rect.top] as Coord)\n}\n\nconst RenderedComponent = observer(({ model }: { model: DotplotViewModel }) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.overlay}>\n      {model.tracks.map(track => {\n        const [display] = track.displays\n        const { RenderingComponent } = display\n\n        return RenderingComponent ? (\n          <RenderingComponent\n            key={track.configuration.trackId}\n            model={display}\n          />\n        ) : null\n      })}\n    </div>\n  )\n})\n\nconst DotplotViewInternal = observer(\n  ({ model }: { model: DotplotViewModel }) => {\n    const { hview, vview, viewHeight } = model\n    const classes = useStyles()\n    const [mousecurrClient, setMouseCurrClient] = useState<Coord>()\n    const [mousedownClient, setMouseDownClient] = useState<Coord>()\n    const [mouseOvered, setMouseOvered] = useState(false)\n    const [mouseupClient, setMouseUpClient] = useState<Coord>()\n    const ref = useRef<HTMLDivElement>(null)\n    const root = useRef<HTMLDivElement>(null)\n    const distanceX = useRef(0)\n    const distanceY = useRef(0)\n    const lref = useRef<HTMLDivElement>(null)\n    const rref = useRef<HTMLDivElement>(null)\n    const scheduled = useRef(false)\n    const blank = { left: 0, top: 0, width: 0, height: 0 }\n    const svg = ref.current?.getBoundingClientRect() || blank\n    const rrect = rref.current?.getBoundingClientRect() || blank\n    const lrect = lref.current?.getBoundingClientRect() || blank\n    const mousedown = getOffset(mousedownClient, svg)\n    const mousecurr = getOffset(mousecurrClient, svg)\n    const mouseup = getOffset(mouseupClient, svg)\n    const mouserect = mouseup || mousecurr\n    let selection\n    if (mousedown && mousecurr) {\n      selection = {\n        width: Math.abs(mousedown[0] - mousecurr[0]),\n        height: Math.abs(mousedown[1] - mousecurr[1]),\n      }\n    }\n    if (mouseup && mousedown) {\n      selection = {\n        width: Math.abs(mouseup[0] - mousedown[0]),\n        height: Math.abs(mouseup[1] - mousedown[1]),\n      }\n    }\n\n    // use non-React wheel handler to properly prevent body scrolling\n    useEffect(() => {\n      function onWheel(origEvent: WheelEvent) {\n        const event = normalizeWheel(origEvent)\n        origEvent.preventDefault()\n\n        distanceX.current += event.pixelX\n        distanceY.current -= event.pixelY\n        if (!scheduled.current) {\n          scheduled.current = true\n\n          window.requestAnimationFrame(() => {\n            transaction(() => {\n              model.hview.scroll(distanceX.current)\n              model.vview.scroll(distanceY.current)\n            })\n            scheduled.current = false\n            distanceX.current = 0\n            distanceY.current = 0\n          })\n        }\n      }\n      if (ref.current) {\n        const curr = ref.current\n        curr.addEventListener('wheel', onWheel)\n        return () => {\n          curr.removeEventListener('wheel', onWheel)\n        }\n      }\n      return () => {}\n    }, [model.hview, model.vview])\n\n    useEffect(() => {\n      function globalMouseMove(event: MouseEvent) {\n        setMouseCurrClient([event.clientX, event.clientY])\n      }\n\n      window.addEventListener('mousemove', globalMouseMove)\n      return () => {\n        window.removeEventListener('mousemove', globalMouseMove)\n      }\n    }, [])\n\n    // detect a mouseup after a mousedown was submitted, autoremoves mouseup\n    // once that single mouseup is set\n    useEffect(() => {\n      let cleanup = () => {}\n\n      function globalMouseUp(event: MouseEvent) {\n        if (\n          mousedown &&\n          mousecurr &&\n          Math.abs(mousedown[0] - mousecurr[0]) > 3 &&\n          Math.abs(mousedown[1] - mousecurr[1]) > 3\n        ) {\n          setMouseUpClient([event.clientX, event.clientY])\n        } else {\n          setMouseDownClient(undefined)\n        }\n      }\n\n      if (mousedown && !mouseup) {\n        window.addEventListener('mouseup', globalMouseUp, true)\n        cleanup = () => {\n          window.removeEventListener('mouseup', globalMouseUp, true)\n        }\n      }\n      return cleanup\n    }, [mousedown, mousecurr, mouseup])\n\n    return (\n      <div>\n        <Header model={model} selection={selection} />\n        <div\n          ref={root}\n          className={classes.root}\n          onMouseLeave={() => setMouseOvered(false)}\n          onMouseEnter={() => setMouseOvered(true)}\n        >\n          <div\n            className={classes.container}\n            style={{\n              transform: `scaleX(${model.hview.scaleFactor}) scaleY(${model.vview.scaleFactor})`,\n            }}\n          >\n            <VerticalAxis model={model} />\n            <HorizontalAxis model={model} />\n            <div ref={ref} className={classes.content}>\n              {mouseOvered && mouserect ? (\n                <div\n                  ref={lref}\n                  className={classes.popover}\n                  style={{\n                    left:\n                      mouserect[0] -\n                      (mousedown && mouserect[0] - mousedown[0] < 0\n                        ? lrect.width\n                        : 0),\n                    top:\n                      mouserect[1] -\n                      (mousedown && mouserect[1] - mousedown[1] < 0\n                        ? lrect.height\n                        : 0),\n                  }}\n                >\n                  {`x - ${locstr(mouserect[0], hview)}`}\n                  <br />\n                  {`y - ${locstr(viewHeight - mouserect[1], vview)}`}\n                  <br />\n                </div>\n              ) : null}\n              {mousedown &&\n              mouserect &&\n              Math.abs(mousedown[0] - mouserect[0]) > 3 &&\n              Math.abs(mousedown[1] - mouserect[1]) > 3 ? (\n                <div\n                  ref={rref}\n                  className={classes.popover}\n                  style={{\n                    left:\n                      mousedown[0] -\n                      (mouserect[0] - mousedown[0] < 0 ? 0 : rrect.width),\n                    top:\n                      mousedown[1] -\n                      (mouserect[1] - mousedown[1] < 0 ? 0 : rrect.height),\n                  }}\n                >\n                  {`x - ${locstr(mousedown[0], hview)}`}\n                  <br />\n                  {`y - ${locstr(viewHeight - mousedown[1], vview)}`}\n                  <br />\n                </div>\n              ) : null}\n\n              <div\n                role=\"presentation\"\n                style={{ cursor: 'crosshair' }}\n                onMouseDown={event => {\n                  if (event.button === 0) {\n                    setMouseDownClient([event.clientX, event.clientY])\n                    setMouseCurrClient([event.clientX, event.clientY])\n                  }\n                }}\n              >\n                <Grid model={model}>\n                  {mousedown && mouserect ? (\n                    <rect\n                      fill=\"rgba(255,0,0,0.3)\"\n                      x={Math.min(mouserect[0], mousedown[0])}\n                      y={Math.min(mouserect[1], mousedown[1])}\n                      width={Math.abs(mouserect[0] - mousedown[0])}\n                      height={Math.abs(mouserect[1] - mousedown[1])}\n                    />\n                  ) : null}\n                </Grid>\n              </div>\n              <div className={classes.spacer} />\n            </div>\n            <RenderedComponent model={model} />\n            <Menu\n              open={Boolean(mouseup)}\n              onMenuItemClick={(_, callback) => {\n                callback()\n                setMouseUpClient(undefined)\n                setMouseDownClient(undefined)\n              }}\n              onClose={() => {\n                setMouseUpClient(undefined)\n                setMouseDownClient(undefined)\n              }}\n              anchorReference=\"anchorPosition\"\n              anchorPosition={\n                mouseupClient\n                  ? {\n                      top: mouseupClient[1] + 30,\n                      left: mouseupClient[0] + 30,\n                    }\n                  : undefined\n              }\n              style={{ zIndex: 10000 }}\n              menuItems={[\n                {\n                  label: 'Zoom in',\n                  onClick: () => {\n                    if (mousedown && mouseup) {\n                      model.zoomIn(mousedown, mouseup)\n                    }\n                  },\n                },\n                {\n                  label: 'Open linear synteny view',\n                  onClick: () => {\n                    if (mousedown && mouseup) {\n                      model.onDotplotView(mousedown, mouseup)\n                    }\n                  },\n                },\n              ]}\n            />\n          </div>\n          <ResizeHandle\n            onDrag={n => model.setHeight(model.height + n)}\n            style={{\n              height: 4,\n              background: '#ccc',\n              boxSizing: 'border-box',\n              borderTop: '1px solid #fafafa',\n            }}\n          />\n        </div>\n      </div>\n    )\n  },\n)\nconst DotplotView = observer(({ model }: { model: DotplotViewModel }) => {\n  const { initialized, loading, error } = model\n\n  if ((!initialized && !loading) || error) {\n    return <ImportForm model={model} />\n  }\n\n  if (loading) {\n    return (\n      <div>\n        <p>Loading...</p>\n        <LinearProgress />\n      </div>\n    )\n  }\n\n  return <DotplotViewInternal model={model} />\n})\n\nexport default DotplotView\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z\"\n}), 'KeyboardArrowUp');\n\nexports.default = _default;"],"sourceRoot":""}