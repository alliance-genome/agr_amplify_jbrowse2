{"version":3,"file":"static/js/3654.6284dce0.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/material/Skeleton/Skeleton.js","../../../node_modules/@mui/material/Skeleton/skeletonClasses.js","../../../node_modules/@mui/material/Switch/Switch.js","../../../node_modules/@mui/material/Switch/switchClasses.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js","../../../node_modules/@mui/x-data-grid/utils/Store.js","../../../node_modules/@mui/x-data-grid/utils/EventManager.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridPipeProcessing.js","../../../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridStrategyProcessing.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridLocaleText.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridInitializeState.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/serializers/csvSerializer.js","../../../node_modules/@mui/x-data-grid/hooks/features/clipboard/useGridClipboard.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenu.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeApplier.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumns.js","../../../node_modules/@mui/x-data-grid/hooks/features/density/useGridDensity.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/utils.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/useGridCsvExport.js","../../../node_modules/@mui/x-data-grid/utils/exportAs.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js","../../../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridRegisterStrategyProcessor.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/useGridFilter.js","../../../node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js","../../../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/useGridKeyboardNavigation.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridCellEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridRowEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRows.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsPreProcessors.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelection.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/useGridSorting.js","../../../node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsMeta.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGrouping.js","../../../node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelectionPreProcessors.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumnSpanning.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js","../../../node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js","../../../node_modules/@mui/x-data-grid/hooks/features/events/useGridEvents.js","../../../node_modules/@mui/x-data-grid/hooks/features/statePersistence/useGridStatePersistence.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScroller.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerContent.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerRenderZone.js","../../../node_modules/@mui/x-data-grid/components/DataGridVirtualScroller.js","../../../node_modules/@mui/x-data-grid/DataGrid/DataGrid.js","../../../node_modules/@mui/utils/chainPropTypes/chainPropTypes.js","../../../node_modules/@mui/x-data-grid/components/GridNoResultsOverlay.js","../../../node_modules/@mui/x-data-grid/material/icons/GridColumnUnsortedIcon.js","../../../node_modules/@mui/x-data-grid/material/components/MUISelectOption.js","../../../node_modules/@mui/x-data-grid/material/index.js","../../../node_modules/@mui/x-data-grid/constants/defaultGridSlotsComponents.js","../../../node_modules/@mui/x-data-grid/internals/utils/slotsMigration.js","../../../node_modules/@mui/x-data-grid/internals/utils/useProps.js","../../../node_modules/@mui/x-data-grid/DataGrid/useDataGridProps.js","../../../node_modules/@mui/x-data-grid/internals/utils/computeSlots.js","../../../node_modules/@mui/x-data-grid/colDef/gridActionsColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridBooleanColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridBooleanOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridCheckboxSelectionColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridDateColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridDateOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridDefaultColumnTypes.js","../../../node_modules/@mui/x-data-grid/colDef/gridNumericColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridNumericOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridSingleSelectColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridSingleSelectOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridStringColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridStringOperators.js","../../../node_modules/@mui/x-data-grid/colDef/utils.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnGroupHeader.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridBaseColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeadersInner.js","../../../node_modules/@mui/x-data-grid/components/GridColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/GridFooter.js","../../../node_modules/@mui/x-data-grid/components/GridHeader.js","../../../node_modules/@mui/x-data-grid/components/GridLoadingOverlay.js","../../../node_modules/@mui/x-data-grid/components/GridNoRowsOverlay.js","../../../node_modules/@mui/x-data-grid/components/GridPagination.js","../../../node_modules/@mui/x-data-grid/components/GridRow.js","../../../node_modules/@mui/x-data-grid/components/GridRowCount.js","../../../node_modules/@mui/x-data-grid/components/GridSelectedRowCount.js","../../../node_modules/@mui/x-data-grid/components/containers/GridMainContainer.js","../../../node_modules/@mui/x-data-grid/components/base/GridBody.js","../../../node_modules/@mui/x-data-grid/components/base/GridFooterPlaceholder.js","../../../node_modules/@mui/x-data-grid/components/base/GridOverlays.js","../../../node_modules/@mui/x-data-grid/components/cell/GridActionsCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridBooleanCell.js","../../../node_modules/@mui/x-data-grid/utils/doesSupportPreventScroll.js","../../../node_modules/@mui/x-data-grid/components/cell/GridCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditBooleanCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditDateCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditInputCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditSingleSelectCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridSkeletonCell.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderFilterIconButton.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/ColumnHeaderMenuIcon.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderItem.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSeparator.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSortIcon.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderTitle.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridGenericColumnHeaderItem.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridIconButtonContainer.js","../../../node_modules/@mui/x-data-grid/components/columnSelection/GridCellCheckboxRenderer.js","../../../node_modules/@mui/x-data-grid/components/columnSelection/GridHeaderCheckbox.js","../../../node_modules/@mui/x-data-grid/components/containers/GridFooterContainer.js","../../../node_modules/@mui/x-data-grid/components/containers/GridOverlay.js","../../../node_modules/@mui/x-data-grid/components/containers/GridRootStyles.js","../../../node_modules/@mui/x-data-grid/components/containers/GridRoot.js","../../../node_modules/@mui/x-data-grid/components/menu/GridMenu.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenuSlots.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenu.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenuContainer.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuColumnsItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuFilterItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuHideItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuManageItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuSortItem.js","../../../node_modules/@mui/x-data-grid/components/panel/GridColumnsPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelContent.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelFooter.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelHeader.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelWrapper.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterForm.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputBoolean.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputDate.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleValue.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputSingleSelect.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputValue.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/filterPanelUtils.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExport.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExportContainer.js","../../../node_modules/@mui/x-data-grid/constants/envConstants.js","../../../node_modules/@mui/x-data-grid/constants/gridClasses.js","../../../node_modules/@mui/x-data-grid/constants/gridDetailPanelToggleField.js","../../../node_modules/@mui/x-data-grid/constants/localeTextConstants.js","../../../node_modules/@mui/x-data-grid/context/GridContextProvider.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/columnMenuSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/density/densitySelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/gridEditingSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterState.js","../../../node_modules/@mui/x-data-grid/utils/getPublicApiRef.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/focus/gridFocusStateSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/headerFiltering/gridHeaderFilteringSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelsValue.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/gridRowSelectionSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsMetaSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridParamsApi.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/gridVirtualizationSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualScroller.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualization.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useFirstRender.js","../../../node_modules/@mui/x-data-grid/utils/cleanupTracking/TimerBasedCleanupTracking.js","../../../node_modules/@mui/x-data-grid/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridApiEventHandler.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridApiMethod.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridAriaAttributes.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridLogger.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridPrivateApiContext.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridVisibleRows.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useLazyRef.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useOnMount.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useTimeout.js","../../../node_modules/@mui/x-data-grid/material/icons/index.js","../../../node_modules/@mui/x-data-grid/models/gridColumnGrouping.js","../../../node_modules/@mui/x-data-grid/models/gridEditRowModel.js","../../../node_modules/@mui/x-data-grid/models/gridFilterItem.js","../../../node_modules/@mui/x-data-grid/models/params/gridEditCellParams.js","../../../node_modules/@mui/x-data-grid/models/params/gridRowParams.js","../../../node_modules/reselect/es/index.js","../../../node_modules/@mui/x-data-grid/utils/createSelector.js","../../../node_modules/@mui/x-data-grid/utils/domUtils.js","../../../node_modules/@mui/x-data-grid/utils/fastMemo.js","../../../node_modules/@mui/x-data-grid/utils/fastObjectShallowCompare.js","../../../node_modules/@mui/x-data-grid/utils/keyboardUtils.js","../../../node_modules/@mui/x-data-grid/utils/utils.js","../../../node_modules/@mui/x-data-grid/utils/warning.js","../../../node_modules/reselect/es/defaultMemoize.js"],"sourcesContent":["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.variant === 'rounded' && {\n    borderRadius: (theme.vars || theme).shape.borderRadius\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 2s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 2s linear 0.5s infinite;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${0},\n          transparent\n        );\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, (theme.vars || theme).palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n      animation = 'pulse',\n      className,\n      component = 'span',\n      height,\n      style,\n      variant = 'text',\n      width\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","'use client';\n\n// @inheritedComponent IconButton\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"edge\", \"size\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha, darken, lighten } from '@mui/system/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled'],\n    thumb: ['thumb'],\n    track: ['track'],\n    input: ['input']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst SwitchRoot = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: -8\n}, ownerState.edge === 'end' && {\n  marginRight: -8\n}, ownerState.size === 'small' && {\n  width: 40,\n  height: 24,\n  padding: 7,\n  [`& .${switchClasses.thumb}`]: {\n    width: 16,\n    height: 16\n  },\n  [`& .${switchClasses.switchBase}`]: {\n    padding: 4,\n    [`&.${switchClasses.checked}`]: {\n      transform: 'translateX(16px)'\n    }\n  }\n}));\nconst SwitchSwitchBase = styled(SwitchBase, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.switchBase, {\n      [`& .${switchClasses.input}`]: styles.input\n    }, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.vars ? theme.vars.palette.Switch.defaultColor : `${theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300]}`,\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${switchClasses.checked}`]: {\n    transform: 'translateX(20px)'\n  },\n  [`&.${switchClasses.disabled}`]: {\n    color: theme.vars ? theme.vars.palette.Switch.defaultDisabledColor : `${theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]}`\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.${switchClasses.disabled} + .${switchClasses.track}`]: {\n    opacity: theme.vars ? theme.vars.opacity.switchTrackDisabled : `${theme.palette.mode === 'light' ? 0.12 : 0.2}`\n  },\n  [`& .${switchClasses.input}`]: {\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${switchClasses.checked}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main,\n    '&:hover': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${switchClasses.disabled}`]: {\n      color: theme.vars ? theme.vars.palette.Switch[`${ownerState.color}DisabledColor`] : `${theme.palette.mode === 'light' ? lighten(theme.palette[ownerState.color].main, 0.62) : darken(theme.palette[ownerState.color].main, 0.55)}`\n    }\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].main\n  }\n}));\nconst SwitchTrack = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Track',\n  overridesResolver: (props, styles) => styles.track\n})(({\n  theme\n}) => ({\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.vars ? theme.vars.palette.common.onBackground : `${theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white}`,\n  opacity: theme.vars ? theme.vars.opacity.switchTrack : `${theme.palette.mode === 'light' ? 0.38 : 0.3}`\n}));\nconst SwitchThumb = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Thumb',\n  overridesResolver: (props, styles) => styles.thumb\n})(({\n  theme\n}) => ({\n  boxShadow: (theme.vars || theme).shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n  const {\n      className,\n      color = 'primary',\n      edge = false,\n      size = 'medium',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const icon = /*#__PURE__*/_jsx(SwitchThumb, {\n    className: classes.thumb,\n    ownerState: ownerState\n  });\n  return /*#__PURE__*/_jsxs(SwitchRoot, {\n    className: clsx(classes.root, className),\n    sx: sx,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(SwitchSwitchBase, _extends({\n      type: \"checkbox\",\n      icon: icon,\n      checkedIcon: icon,\n      ref: ref,\n      ownerState: ownerState\n    }, other, {\n      classes: _extends({}, classes, {\n        root: classes.switchBase\n      })\n    })), /*#__PURE__*/_jsx(SwitchTrack, {\n      className: classes.track,\n      ownerState: ownerState\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSwitchUtilityClass(slot) {\n  return generateUtilityClass('MuiSwitch', slot);\n}\nconst switchClasses = generateUtilityClasses('MuiSwitch', ['root', 'edgeStart', 'edgeEnd', 'switchBase', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium', 'checked', 'disabled', 'input', 'thumb', 'track']);\nexport default switchClasses;","import * as React from 'react';\nimport { localStorageAvailable } from '../../utils/utils';\nimport { useGridApiMethod } from '../utils';\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\nconst noop = () => {};\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI: Log level ${logLevel} not recognized.`);\n  }\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n    return loggerObj;\n  }, {});\n  return logger;\n}\nexport const useGridLoggerFactory = (apiRef, props) => {\n  const getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n  useGridApiMethod(apiRef, {\n    getLogger\n  }, 'private');\n};","export class Store {\n  static create(value) {\n    return new Store(value);\n  }\n  constructor(_value) {\n    this.value = void 0;\n    this.listeners = void 0;\n    this.subscribe = fn => {\n      this.listeners.add(fn);\n      return () => {\n        this.listeners.delete(fn);\n      };\n    };\n    this.getSnapshot = () => {\n      return this.value;\n    };\n    this.update = value => {\n      this.value = value;\n      this.listeners.forEach(l => l(value));\n    };\n    this.value = _value;\n    this.listeners = new Set();\n  }\n}","// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  constructor() {\n    this.maxListeners = 20;\n    this.warnOnce = false;\n    this.events = {};\n  }\n  on(eventName, listener, options = {}) {\n    let collection = this.events[eventName];\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`].join('\\n'));\n      }\n    }\n  }\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n  removeAllListeners() {\n    this.events = {};\n  }\n  emit(eventName, ...args) {\n    const collection = this.events[eventName];\n    if (!collection) {\n      return;\n    }\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener(...args) {\n      that.removeListener(eventName, oneTimeListener);\n      listener.apply(that, args);\n    });\n  }\n}","import * as React from 'react';\nimport { Store } from '../../utils/Store';\nimport { useGridApiMethod } from '../utils/useGridApiMethod';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { EventManager } from '../../utils/EventManager';\nconst SYMBOL_API_PRIVATE = Symbol('mui.api_private');\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\nexport function unwrapPrivateAPI(publicApi) {\n  return publicApi[SYMBOL_API_PRIVATE];\n}\nlet globalId = 0;\nfunction createPrivateAPI(publicApiRef) {\n  var _publicApiRef$current;\n  const existingPrivateApi = (_publicApiRef$current = publicApiRef.current) == null ? void 0 : _publicApiRef$current[SYMBOL_API_PRIVATE];\n  if (existingPrivateApi) {\n    return existingPrivateApi;\n  }\n  const state = {};\n  const privateApi = {\n    state,\n    store: Store.create(state),\n    instanceId: {\n      id: globalId\n    }\n  };\n  globalId += 1;\n  privateApi.getPublicApi = () => publicApiRef.current;\n  privateApi.register = (visibility, methods) => {\n    Object.keys(methods).forEach(methodName => {\n      const method = methods[methodName];\n      const currentPrivateMethod = privateApi[methodName];\n      if ((currentPrivateMethod == null ? void 0 : currentPrivateMethod.spying) === true) {\n        currentPrivateMethod.target = method;\n      } else {\n        privateApi[methodName] = method;\n      }\n      if (visibility === 'public') {\n        const publicApi = publicApiRef.current;\n        const currentPublicMethod = publicApi[methodName];\n        if ((currentPublicMethod == null ? void 0 : currentPublicMethod.spying) === true) {\n          currentPublicMethod.target = method;\n        } else {\n          publicApi[methodName] = method;\n        }\n      }\n    });\n  };\n  privateApi.register('private', {\n    caches: {},\n    eventManager: new EventManager()\n  });\n  return privateApi;\n}\nfunction createPublicAPI(privateApiRef) {\n  const publicApi = {\n    get state() {\n      return privateApiRef.current.state;\n    },\n    get store() {\n      return privateApiRef.current.store;\n    },\n    get instanceId() {\n      return privateApiRef.current.instanceId;\n    },\n    [SYMBOL_API_PRIVATE]: privateApiRef.current\n  };\n  return publicApi;\n}\nexport function useGridApiInitialization(inputApiRef, props) {\n  const publicApiRef = React.useRef();\n  const privateApiRef = React.useRef();\n  if (!privateApiRef.current) {\n    privateApiRef.current = createPrivateAPI(publicApiRef);\n  }\n  if (!publicApiRef.current) {\n    publicApiRef.current = createPublicAPI(privateApiRef);\n  }\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n    const details = props.signature === GridSignature.DataGridPro ? {\n      api: privateApiRef.current.getPublicApi()\n    } : {};\n    privateApiRef.current.eventManager.emit(name, params, event, details);\n  }, [privateApiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    privateApiRef.current.eventManager.on(event, handler, options);\n    const api = privateApiRef.current;\n    return () => {\n      api.eventManager.removeListener(event, handler);\n    };\n  }, [privateApiRef]);\n  useGridApiMethod(privateApiRef, {\n    subscribeEvent,\n    publishEvent\n  }, 'public');\n  React.useImperativeHandle(inputApiRef, () => publicApiRef.current, [publicApiRef]);\n  React.useEffect(() => {\n    const api = privateApiRef.current;\n    return () => {\n      api.publishEvent('unmount');\n    };\n  }, [privateApiRef]);\n  return privateApiRef;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.requestPipeProcessorsApplication` is called for the given group.\n */\nexport const useGridPipeProcessing = apiRef => {\n  const processorsCache = React.useRef({});\n  const isRunning = React.useRef(false);\n  const runAppliers = React.useCallback(groupCache => {\n    if (isRunning.current || !groupCache) {\n      return;\n    }\n    isRunning.current = true;\n    Object.values(groupCache.appliers).forEach(callback => {\n      callback();\n    });\n    isRunning.current = false;\n  }, []);\n  const registerPipeProcessor = React.useCallback((group, id, processor) => {\n    if (!processorsCache.current[group]) {\n      processorsCache.current[group] = {\n        processors: new Map(),\n        appliers: {}\n      };\n    }\n    const groupCache = processorsCache.current[group];\n    const oldProcessor = groupCache.processors.get(id);\n    if (oldProcessor !== processor) {\n      groupCache.processors.set(id, processor);\n      runAppliers(groupCache);\n    }\n    return () => {\n      processorsCache.current[group].processors.set(id, null);\n    };\n  }, [runAppliers]);\n  const registerPipeApplier = React.useCallback((group, id, applier) => {\n    if (!processorsCache.current[group]) {\n      processorsCache.current[group] = {\n        processors: new Map(),\n        appliers: {}\n      };\n    }\n    processorsCache.current[group].appliers[id] = applier;\n    return () => {\n      const _appliers = processorsCache.current[group].appliers,\n        otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n      processorsCache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  const requestPipeProcessorsApplication = React.useCallback(group => {\n    const groupCache = processorsCache.current[group];\n    runAppliers(groupCache);\n  }, [runAppliers]);\n  const applyPipeProcessors = React.useCallback((...args) => {\n    const [group, value, context] = args;\n    if (!processorsCache.current[group]) {\n      return value;\n    }\n    const preProcessors = Array.from(processorsCache.current[group].processors.values());\n    return preProcessors.reduce((acc, preProcessor) => {\n      if (!preProcessor) {\n        return acc;\n      }\n      return preProcessor(acc, context);\n    }, value);\n  }, []);\n  const preProcessingPrivateApi = {\n    registerPipeProcessor,\n    registerPipeApplier,\n    requestPipeProcessorsApplication\n  };\n  const preProcessingPublicApi = {\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingPrivateApi, 'private');\n  useGridApiMethod(apiRef, preProcessingPublicApi, 'public');\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport const GRID_DEFAULT_STRATEGY = 'none';\nexport const GRID_STRATEGIES_PROCESSORS = {\n  rowTreeCreation: 'rowTree',\n  filtering: 'rowTree',\n  sorting: 'rowTree',\n  visibleRowsLookupCreation: 'rowTree'\n};\n/**\n * Implements a variant of the Strategy Pattern (see https://en.wikipedia.org/wiki/Strategy_pattern)\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic that must only be applied if the right strategy is active.\n * For instance, the row grouping plugin has a custom filtering algorithm.\n * This algorithm must be applied by the filtering plugin if the row grouping is the current way of grouping rows,\n * but not if the tree data is the current way of grouping rows.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterStrategyProcessor` to register their processor.\n *   When the processor of the active strategy changes, it will fire `\"activeStrategyProcessorChange\"` to re-apply the processor.\n *\n * - `apiRef.current.setStrategyAvailability` to tell if their strategy can be used.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to apply the custom logic of the current strategy must use:\n *\n * - `apiRef.current.applyStrategyProcessor` to run the processor of the active strategy for a given processor name.\n *\n * - the \"strategyAvailabilityChange\" event to update something when the active strategy changes.\n *    Warning: Be careful not to apply the processor several times.\n *    For instance \"rowsSet\" is fired by `useGridRows` whenever the active strategy changes.\n *    So listening to both would most likely run your logic twice.\n *\n * - The \"activeStrategyProcessorChange\" event to update something when the processor of the active strategy changes.\n *\n * =====================================================================================================================\n *\n * Each processor name is part of a strategy group which can only have one active strategy at the time.\n * For now, there is only one strategy group named `rowTree` which customize\n * - row tree creation algorithm.\n * - sorting algorithm.\n * - filtering algorithm.\n */\nexport const useGridStrategyProcessing = apiRef => {\n  const availableStrategies = React.useRef(new Map());\n  const strategiesCache = React.useRef({});\n  const registerStrategyProcessor = React.useCallback((strategyName, processorName, processor) => {\n    const cleanup = () => {\n      const _ref = strategiesCache.current[processorName],\n        otherProcessors = _objectWithoutPropertiesLoose(_ref, [strategyName].map(_toPropertyKey));\n      strategiesCache.current[processorName] = otherProcessors;\n    };\n    if (!strategiesCache.current[processorName]) {\n      strategiesCache.current[processorName] = {};\n    }\n    const groupPreProcessors = strategiesCache.current[processorName];\n    const previousProcessor = groupPreProcessors[strategyName];\n    groupPreProcessors[strategyName] = processor;\n    if (!previousProcessor || previousProcessor === processor) {\n      return cleanup;\n    }\n    if (strategyName === apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName])) {\n      apiRef.current.publishEvent('activeStrategyProcessorChange', processorName);\n    }\n    return cleanup;\n  }, [apiRef]);\n  const applyStrategyProcessor = React.useCallback((processorName, params) => {\n    const activeStrategy = apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName]);\n    if (activeStrategy == null) {\n      throw new Error(\"Can't apply a strategy processor before defining an active strategy\");\n    }\n    const groupCache = strategiesCache.current[processorName];\n    if (!groupCache || !groupCache[activeStrategy]) {\n      throw new Error(`No processor found for processor \"${processorName}\" on strategy \"${activeStrategy}\"`);\n    }\n    const processor = groupCache[activeStrategy];\n    return processor(params);\n  }, [apiRef]);\n  const getActiveStrategy = React.useCallback(strategyGroup => {\n    var _availableStrategyEnt;\n    const strategyEntries = Array.from(availableStrategies.current.entries());\n    const availableStrategyEntry = strategyEntries.find(([, strategy]) => {\n      if (strategy.group !== strategyGroup) {\n        return false;\n      }\n      return strategy.isAvailable();\n    });\n    return (_availableStrategyEnt = availableStrategyEntry == null ? void 0 : availableStrategyEntry[0]) != null ? _availableStrategyEnt : GRID_DEFAULT_STRATEGY;\n  }, []);\n  const setStrategyAvailability = React.useCallback((strategyGroup, strategyName, isAvailable) => {\n    availableStrategies.current.set(strategyName, {\n      group: strategyGroup,\n      isAvailable\n    });\n    apiRef.current.publishEvent('strategyAvailabilityChange');\n  }, [apiRef]);\n  const strategyProcessingApi = {\n    registerStrategyProcessor,\n    applyStrategyProcessor,\n    getActiveStrategy,\n    setStrategyAvailability\n  };\n  useGridApiMethod(apiRef, strategyProcessingApi, 'private');\n};","import { useGridLoggerFactory } from './useGridLoggerFactory';\nimport { useGridApiInitialization } from './useGridApiInitialization';\nimport { useGridLocaleText } from './useGridLocaleText';\nimport { useGridPipeProcessing } from './pipeProcessing';\nimport { useGridStrategyProcessing } from './strategyProcessing';\nimport { useGridStateInitialization } from './useGridStateInitialization';\n\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\nexport const useGridInitialization = (inputApiRef, props) => {\n  const privateApiRef = useGridApiInitialization(inputApiRef, props);\n  useGridLoggerFactory(privateApiRef, props);\n  useGridStateInitialization(privateApiRef, props);\n  useGridPipeProcessing(privateApiRef);\n  useGridStrategyProcessing(privateApiRef);\n  useGridLocaleText(privateApiRef, props);\n  privateApiRef.current.register('private', {\n    rootProps: props\n  });\n  return privateApiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../utils';\nimport { isFunction } from '../../utils/utils';\nexport const useGridStateInitialization = (apiRef, props) => {\n  const controlStateMapRef = React.useRef({});\n  const [, rawForceUpdate] = React.useState();\n  const registerControlState = React.useCallback(controlStateItem => {\n    controlStateMapRef.current[controlStateItem.stateId] = controlStateItem;\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n    let ignoreSetState = false;\n\n    // Apply the control state constraints\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (newSubState === oldSubState) {\n        return;\n      }\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      });\n\n      // The state is controlled, the prop should always win\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n      if (apiRef.current.publishEvent) {\n        apiRef.current.publishEvent('stateChange', newState);\n      }\n      apiRef.current.store.update(newState);\n    }\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (controlState.propOnChange && hasPropChanged) {\n        const details = props.signature === GridSignature.DataGridPro ? {\n          api: apiRef.current,\n          reason\n        } : {\n          reason\n        };\n        controlState.propOnChange(model, details);\n      }\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n    return !ignoreSetState;\n  }, [apiRef, props.signature]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return _extends({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const forceUpdate = React.useCallback(() => rawForceUpdate(() => apiRef.current.state), [apiRef]);\n  const publicStateApi = {\n    setState,\n    forceUpdate\n  };\n  const privateStateApi = {\n    updateControlState,\n    registerControlState\n  };\n  useGridApiMethod(apiRef, publicStateApi, 'public');\n  useGridApiMethod(apiRef, privateStateApi, 'private');\n};","import * as React from 'react';\nexport const useGridLocaleText = (apiRef, props) => {\n  const getLocaleText = React.useCallback(key => {\n    if (props.localeText[key] == null) {\n      throw new Error(`Missing translation for key ${key}.`);\n    }\n    return props.localeText[key];\n  }, [props.localeText]);\n  apiRef.current.register('public', {\n    getLocaleText\n  });\n};","import * as React from 'react';\nexport const useGridInitializeState = (initializer, privateApiRef, props) => {\n  const isInitialized = React.useRef(false);\n  if (!isInitialized.current) {\n    privateApiRef.current.state = initializer(privateApiRef.current.state, props, privateApiRef);\n    isInitialized.current = true;\n  }\n};","import { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../../colDef';\nimport { buildWarning } from '../../../../utils/warning';\nfunction sanitizeCellValue(value, delimiterCharacter) {\n  if (typeof value === 'string') {\n    // Make sure value containing delimiter or line break won't be split into multiple rows\n    if ([delimiterCharacter, '\\n', '\\r', '\"'].some(delimiter => value.includes(delimiter))) {\n      return `\"${value.replace(/\"/g, '\"\"')}\"`;\n    }\n    return value;\n  }\n  return value;\n}\nexport const serializeCellValue = (cellParams, options) => {\n  const {\n    delimiterCharacter,\n    ignoreValueFormatter\n  } = options;\n  let value;\n  if (ignoreValueFormatter) {\n    var _cellParams$value2;\n    const columnType = cellParams.colDef.type;\n    if (columnType === 'number') {\n      value = String(cellParams.value);\n    } else if (columnType === 'date' || columnType === 'dateTime') {\n      var _cellParams$value;\n      value = (_cellParams$value = cellParams.value) == null ? void 0 : _cellParams$value.toISOString();\n    } else if (typeof ((_cellParams$value2 = cellParams.value) == null ? void 0 : _cellParams$value2.toString) === 'function') {\n      value = cellParams.value.toString();\n    } else {\n      value = cellParams.value;\n    }\n  } else {\n    value = cellParams.formattedValue;\n  }\n  return sanitizeCellValue(value, delimiterCharacter);\n};\nconst objectFormattedValueWarning = buildWarning(['MUI: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\nclass CSVRow {\n  constructor(options) {\n    this.options = void 0;\n    this.rowString = '';\n    this.isEmpty = true;\n    this.options = options;\n  }\n  addValue(value) {\n    if (!this.isEmpty) {\n      this.rowString += this.options.delimiterCharacter;\n    }\n    if (value === null || value === undefined) {\n      this.rowString += '';\n    } else if (typeof this.options.sanitizeCellValue === 'function') {\n      this.rowString += this.options.sanitizeCellValue(value, this.options.delimiterCharacter);\n    } else {\n      this.rowString += value;\n    }\n    this.isEmpty = false;\n  }\n  getRowString() {\n    return this.rowString;\n  }\n}\nconst serializeRow = ({\n  id,\n  columns,\n  getCellParams,\n  delimiterCharacter,\n  ignoreValueFormatter\n}) => {\n  const row = new CSVRow({\n    delimiterCharacter\n  });\n  columns.forEach(column => {\n    const cellParams = getCellParams(id, column.field);\n    if (process.env.NODE_ENV !== 'production') {\n      if (String(cellParams.formattedValue) === '[object Object]') {\n        objectFormattedValueWarning();\n      }\n    }\n    row.addValue(serializeCellValue(cellParams, {\n      delimiterCharacter,\n      ignoreValueFormatter\n    }));\n  });\n  return row.getRowString();\n};\nexport function buildCSV(options) {\n  const {\n    columns,\n    rowIds,\n    delimiterCharacter,\n    includeHeaders,\n    includeColumnGroupsHeaders,\n    ignoreValueFormatter,\n    apiRef\n  } = options;\n  const CSVBody = rowIds.reduce((acc, id) => `${acc}${serializeRow({\n    id,\n    columns,\n    getCellParams: apiRef.current.getCellParams,\n    delimiterCharacter,\n    ignoreValueFormatter\n  })}\\r\\n`, '').trim();\n  if (!includeHeaders) {\n    return CSVBody;\n  }\n  const filteredColumns = columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field);\n  const headerRows = [];\n  if (includeColumnGroupsHeaders) {\n    const columnGroupLookup = apiRef.current.unstable_getAllGroupDetails();\n    let maxColumnGroupsDepth = 0;\n    const columnGroupPathsLookup = filteredColumns.reduce((acc, column) => {\n      const columnGroupPath = apiRef.current.unstable_getColumnGroupPath(column.field);\n      acc[column.field] = columnGroupPath;\n      maxColumnGroupsDepth = Math.max(maxColumnGroupsDepth, columnGroupPath.length);\n      return acc;\n    }, {});\n    for (let i = 0; i < maxColumnGroupsDepth; i += 1) {\n      const headerGroupRow = new CSVRow({\n        delimiterCharacter,\n        sanitizeCellValue\n      });\n      headerRows.push(headerGroupRow);\n      filteredColumns.forEach(column => {\n        const columnGroupId = (columnGroupPathsLookup[column.field] || [])[i];\n        const columnGroup = columnGroupLookup[columnGroupId];\n        headerGroupRow.addValue(columnGroup ? columnGroup.headerName || columnGroup.groupId : '');\n      });\n    }\n  }\n  const mainHeaderRow = new CSVRow({\n    delimiterCharacter,\n    sanitizeCellValue\n  });\n  filteredColumns.forEach(column => {\n    mainHeaderRow.addValue(column.headerName || column.field);\n  });\n  headerRows.push(mainHeaderRow);\n  const CSVHead = `${headerRows.map(row => row.getRowString()).join('\\r\\n')}\\r\\n`;\n  return `${CSVHead}${CSVBody}`.trim();\n}","import * as React from 'react';\nimport { useGridApiOptionHandler, useGridNativeEventListener } from '../../utils';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { serializeCellValue } from '../export/serializers/csvSerializer';\nfunction writeToClipboardPolyfill(data) {\n  const span = document.createElement('span');\n  span.style.whiteSpace = 'pre';\n  span.style.userSelect = 'all';\n  span.style.opacity = '0px';\n  span.textContent = data;\n  document.body.appendChild(span);\n  const range = document.createRange();\n  range.selectNode(span);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(span);\n  }\n}\nfunction copyToClipboard(data) {\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(data).catch(() => {\n      writeToClipboardPolyfill(data);\n    });\n  } else {\n    writeToClipboardPolyfill(data);\n  }\n}\nfunction hasNativeSelection(element) {\n  var _window$getSelection;\n  // When getSelection is called on an <iframe> that is not displayed Firefox will return null.\n  if ((_window$getSelection = window.getSelection()) != null && _window$getSelection.toString()) {\n    return true;\n  }\n\n  // window.getSelection() returns an empty string in Firefox for selections inside a form element.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=85686.\n  // Instead, we can use element.selectionStart that is only defined on form elements.\n  if (element && (element.selectionEnd || 0) - (element.selectionStart || 0) > 0) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @requires useGridCsvExport (method)\n * @requires useGridSelection (method)\n */\nexport const useGridClipboard = (apiRef, props) => {\n  const ignoreValueFormatterProp = props.unstable_ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp == null ? void 0 : ignoreValueFormatterProp.clipboardExport : ignoreValueFormatterProp) || false;\n  const clipboardCopyCellDelimiter = props.clipboardCopyCellDelimiter;\n  const handleCopy = React.useCallback(event => {\n    if (!((event.ctrlKey || event.metaKey) && event.key === 'c')) {\n      return;\n    }\n\n    // Do nothing if there's a native selection\n    if (hasNativeSelection(event.target)) {\n      return;\n    }\n    let textToCopy = '';\n    const selectedRows = apiRef.current.getSelectedRows();\n    if (selectedRows.size > 0) {\n      textToCopy = apiRef.current.getDataAsCsv({\n        includeHeaders: false,\n        // TODO: make it configurable\n        delimiter: clipboardCopyCellDelimiter\n      });\n    } else {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell) {\n        const cellParams = apiRef.current.getCellParams(focusedCell.id, focusedCell.field);\n        textToCopy = serializeCellValue(cellParams, {\n          delimiterCharacter: clipboardCopyCellDelimiter,\n          ignoreValueFormatter\n        });\n      }\n    }\n    textToCopy = apiRef.current.unstable_applyPipeProcessors('clipboardCopy', textToCopy);\n    if (textToCopy) {\n      copyToClipboard(textToCopy);\n      apiRef.current.publishEvent('clipboardCopy', textToCopy);\n    }\n  }, [apiRef, ignoreValueFormatter, clipboardCopyCellDelimiter]);\n  useGridNativeEventListener(apiRef, apiRef.current.rootElementRef, 'keydown', handleCopy);\n  useGridApiOptionHandler(apiRef, 'clipboardCopy', props.onClipboardCopy);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { gridColumnMenuSelector } from './columnMenuSelector';\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from '../columns/gridColumnsSelector';\nexport const columnMenuStateInitializer = state => _extends({}, state, {\n  columnMenu: {\n    open: false\n  }\n});\n\n/**\n * @requires useGridColumnResize (event)\n * @requires useGridInfiniteLoader (event)\n */\nexport const useGridColumnMenu = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridColumnMenu');\n\n  /**\n   * API METHODS\n   */\n  const showColumnMenu = React.useCallback(field => {\n    const shouldUpdate = apiRef.current.setState(state => {\n      if (state.columnMenu.open && state.columnMenu.field === field) {\n        return state;\n      }\n      logger.debug('Opening Column Menu');\n      return _extends({}, state, {\n        columnMenu: {\n          open: true,\n          field\n        }\n      });\n    });\n    if (shouldUpdate) {\n      apiRef.current.hidePreferences();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const hideColumnMenu = React.useCallback(() => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    if (columnMenuState.field) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef);\n      let fieldToFocus = columnMenuState.field;\n\n      // If the column was removed from the grid, we need to find the closest visible field\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      }\n\n      // If the field to focus is hidden, we need to find the closest visible field\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n      apiRef.current.setColumnHeaderFocus(fieldToFocus);\n    }\n    const shouldUpdate = apiRef.current.setState(state => {\n      if (!state.columnMenu.open && state.columnMenu.field === undefined) {\n        return state;\n      }\n      logger.debug('Hiding Column Menu');\n      return _extends({}, state, {\n        columnMenu: _extends({}, state.columnMenu, {\n          open: false,\n          field: undefined\n        })\n      });\n    });\n    if (shouldUpdate) {\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const toggleColumnMenu = React.useCallback(field => {\n    logger.debug('Toggle Column Menu');\n    const columnMenu = gridColumnMenuSelector(apiRef.current.state);\n    if (!columnMenu.open || columnMenu.field !== field) {\n      showColumnMenu(field);\n    } else {\n      hideColumnMenu();\n    }\n  }, [apiRef, logger, showColumnMenu, hideColumnMenu]);\n  const columnMenuApi = {\n    showColumnMenu,\n    hideColumnMenu,\n    toggleColumnMenu\n  };\n  useGridApiMethod(apiRef, columnMenuApi, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStart', hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerWheel', apiRef.current.hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerTouchMove', apiRef.current.hideColumnMenu);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnFieldsSelector, gridColumnDefinitionsSelector, gridColumnLookupSelector, gridColumnsStateSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from './gridColumnsSelector';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridRegisterPipeProcessor, useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { hydrateColumnsWidth, createColumnsState, mergeColumnsState, COLUMNS_DIMENSION_PROPERTIES } from './gridColumnsUtils';\nimport { GridPreferencePanelsValue } from '../preferencesPanel';\nimport { getGridDefaultColumnTypes } from '../../../colDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultColumnTypes = getGridDefaultColumnTypes();\nexport const columnsStateInitializer = (state, props, apiRef) => {\n  var _props$initialState, _ref, _props$columnVisibili, _props$initialState2;\n  const columnsState = createColumnsState({\n    apiRef,\n    columnTypes: defaultColumnTypes,\n    columnsToUpsert: props.columns,\n    initialState: (_props$initialState = props.initialState) == null ? void 0 : _props$initialState.columns,\n    columnVisibilityModel: (_ref = (_props$columnVisibili = props.columnVisibilityModel) != null ? _props$columnVisibili : (_props$initialState2 = props.initialState) == null || (_props$initialState2 = _props$initialState2.columns) == null ? void 0 : _props$initialState2.columnVisibilityModel) != null ? _ref : {},\n    keepOnlyColumnsToUpsert: true\n  });\n  return _extends({}, state, {\n    columns: columnsState\n  });\n};\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridDimensions (method, event) - can be after\n * TODO: Impossible priority - useGridParamsApi also needs to be after useGridColumns\n */\nexport function useGridColumns(apiRef, props) {\n  var _props$initialState4, _props$slotProps2;\n  const logger = useGridLogger(apiRef, 'useGridColumns');\n  const columnTypes = defaultColumnTypes;\n  const previousColumnsProp = React.useRef(props.columns);\n  const previousColumnTypesProp = React.useRef(columnTypes);\n  apiRef.current.registerControlState({\n    stateId: 'visibleColumns',\n    propModel: props.columnVisibilityModel,\n    propOnChange: props.onColumnVisibilityModelChange,\n    stateSelector: gridColumnVisibilityModelSelector,\n    changeEvent: 'columnVisibilityModelChange'\n  });\n  const setGridColumnsState = React.useCallback(columnsState => {\n    logger.debug('Updating columns state.');\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n  }, [logger, apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const getColumn = React.useCallback(field => gridColumnLookupSelector(apiRef)[field], [apiRef]);\n  const getAllColumns = React.useCallback(() => gridColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getVisibleColumns = React.useCallback(() => gridVisibleColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getColumnIndex = React.useCallback((field, useVisibleColumns = true) => {\n    const columns = useVisibleColumns ? gridVisibleColumnDefinitionsSelector(apiRef) : gridColumnDefinitionsSelector(apiRef);\n    return columns.findIndex(col => col.field === field);\n  }, [apiRef]);\n  const getColumnPosition = React.useCallback(field => {\n    const index = getColumnIndex(field);\n    return gridColumnPositionsSelector(apiRef)[index];\n  }, [apiRef, getColumnIndex]);\n  const setColumnVisibilityModel = React.useCallback(model => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    if (currentModel !== model) {\n      apiRef.current.setState(state => _extends({}, state, {\n        columns: createColumnsState({\n          apiRef,\n          columnTypes,\n          columnsToUpsert: [],\n          initialState: undefined,\n          columnVisibilityModel: model,\n          keepOnlyColumnsToUpsert: false\n        })\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, columnTypes]);\n  const updateColumns = React.useCallback(columns => {\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: columns,\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, setGridColumnsState, columnTypes]);\n  const setColumnVisibility = React.useCallback((field, isVisible) => {\n    var _columnVisibilityMode;\n    const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n    const isCurrentlyVisible = (_columnVisibilityMode = columnVisibilityModel[field]) != null ? _columnVisibilityMode : true;\n    if (isVisible !== isCurrentlyVisible) {\n      const newModel = _extends({}, columnVisibilityModel, {\n        [field]: isVisible\n      });\n      apiRef.current.setColumnVisibilityModel(newModel);\n    }\n  }, [apiRef]);\n  const getColumnIndexRelativeToVisibleColumns = React.useCallback(field => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    return allColumns.findIndex(col => col === field);\n  }, [apiRef]);\n  const setColumnIndex = React.useCallback((field, targetIndexPosition) => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    const oldIndexPosition = getColumnIndexRelativeToVisibleColumns(field);\n    if (oldIndexPosition === targetIndexPosition) {\n      return;\n    }\n    logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);\n    const updatedColumns = [...allColumns];\n    const fieldRemoved = updatedColumns.splice(oldIndexPosition, 1)[0];\n    updatedColumns.splice(targetIndexPosition, 0, fieldRemoved);\n    setGridColumnsState(_extends({}, gridColumnsStateSelector(apiRef.current.state), {\n      orderedFields: updatedColumns\n    }));\n    const params = {\n      column: apiRef.current.getColumn(field),\n      targetIndex: apiRef.current.getColumnIndexRelativeToVisibleColumns(field),\n      oldIndex: oldIndexPosition\n    };\n    apiRef.current.publishEvent('columnIndexChange', params);\n  }, [apiRef, logger, setGridColumnsState, getColumnIndexRelativeToVisibleColumns]);\n  const setColumnWidth = React.useCallback((field, width) => {\n    var _apiRef$current$getRo, _apiRef$current$getRo2;\n    logger.debug(`Updating column ${field} width to ${width}`);\n    const columnsState = gridColumnsStateSelector(apiRef.current.state);\n    const column = columnsState.lookup[field];\n    const newColumn = _extends({}, column, {\n      width,\n      hasBeenResized: true\n    });\n    setGridColumnsState(hydrateColumnsWidth(_extends({}, columnsState, {\n      lookup: _extends({}, columnsState.lookup, {\n        [field]: newColumn\n      })\n    }), (_apiRef$current$getRo = (_apiRef$current$getRo2 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo2.viewportInnerSize.width) != null ? _apiRef$current$getRo : 0));\n    apiRef.current.publishEvent('columnWidthChange', {\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: newColumn,\n      width\n    });\n  }, [apiRef, logger, setGridColumnsState]);\n  const columnApi = {\n    getColumn,\n    getAllColumns,\n    getColumnIndex,\n    getColumnPosition,\n    getVisibleColumns,\n    getColumnIndexRelativeToVisibleColumns,\n    updateColumns,\n    setColumnVisibilityModel,\n    setColumnVisibility,\n    setColumnWidth\n  };\n  const columnReorderApi = {\n    setColumnIndex\n  };\n  useGridApiMethod(apiRef, columnApi, 'public');\n  useGridApiMethod(apiRef, columnReorderApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState$c, _props$initialState3;\n    const columnsStateToExport = {};\n    const columnVisibilityModelToExport = gridColumnVisibilityModelSelector(apiRef);\n    const shouldExportColumnVisibilityModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.columnVisibilityModel != null ||\n    // Always export if the model has been initialized\n    // TODO v6 Do a nullish check instead to export even if the initial model equals \"{}\"\n    Object.keys((_props$initialState$c = (_props$initialState3 = props.initialState) == null || (_props$initialState3 = _props$initialState3.columns) == null ? void 0 : _props$initialState3.columnVisibilityModel) != null ? _props$initialState$c : {}).length > 0 ||\n    // Always export if the model is not empty\n    Object.keys(columnVisibilityModelToExport).length > 0;\n    if (shouldExportColumnVisibilityModel) {\n      columnsStateToExport.columnVisibilityModel = columnVisibilityModelToExport;\n    }\n    columnsStateToExport.orderedFields = gridColumnFieldsSelector(apiRef);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const dimensions = {};\n    columns.forEach(colDef => {\n      if (colDef.hasBeenResized) {\n        const colDefDimensions = {};\n        COLUMNS_DIMENSION_PROPERTIES.forEach(propertyName => {\n          let propertyValue = colDef[propertyName];\n          if (propertyValue === Infinity) {\n            propertyValue = -1;\n          }\n          colDefDimensions[propertyName] = propertyValue;\n        });\n        dimensions[colDef.field] = colDefDimensions;\n      }\n    });\n    if (Object.keys(dimensions).length > 0) {\n      columnsStateToExport.dimensions = dimensions;\n    }\n    return _extends({}, prevState, {\n      columns: columnsStateToExport\n    });\n  }, [apiRef, props.columnVisibilityModel, (_props$initialState4 = props.initialState) == null ? void 0 : _props$initialState4.columns]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n    const columnVisibilityModelToImport = (_context$stateToResto = context.stateToRestore.columns) == null ? void 0 : _context$stateToResto.columnVisibilityModel;\n    const initialState = context.stateToRestore.columns;\n    if (columnVisibilityModelToImport == null && initialState == null) {\n      return params;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: [],\n      initialState,\n      columnVisibilityModel: columnVisibilityModelToImport,\n      keepOnlyColumnsToUpsert: false\n    });\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    if (initialState != null) {\n      apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    }\n    return params;\n  }, [apiRef, columnTypes]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.columns) {\n      var _props$slotProps;\n      const ColumnsPanel = props.slots.columnsPanel;\n      return /*#__PURE__*/_jsx(ColumnsPanel, _extends({}, (_props$slotProps = props.slotProps) == null ? void 0 : _props$slotProps.columnsPanel));\n    }\n    return initialValue;\n  }, [props.slots.columnsPanel, (_props$slotProps2 = props.slotProps) == null ? void 0 : _props$slotProps2.columnsPanel]);\n  const addColumnMenuItems = React.useCallback(columnMenuItems => {\n    if (props.disableColumnSelector) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuColumnsItem'];\n  }, [props.disableColumnSelector]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItems);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      setGridColumnsState(hydrateColumnsWidth(gridColumnsStateSelector(apiRef.current.state), viewportInnerSize.width));\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n\n  /**\n   * APPLIERS\n   */\n  const hydrateColumns = React.useCallback(() => {\n    logger.info(`Columns pipe processing have changed, regenerating the columns`);\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: [],\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, logger, setGridColumnsState, columnTypes]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateColumns', hydrateColumns);\n\n  /**\n   * EFFECTS\n   */\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    logger.info(`GridColumns have changed, new length ${props.columns.length}`);\n    if (previousColumnsProp.current === props.columns && previousColumnTypesProp.current === columnTypes) {\n      return;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      initialState: undefined,\n      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`\n      columnsToUpsert: props.columns,\n      keepOnlyColumnsToUpsert: true\n    });\n    previousColumnsProp.current = props.columns;\n    previousColumnTypesProp.current = columnTypes;\n    setGridColumnsState(columnsState);\n  }, [logger, apiRef, setGridColumnsState, props.columns, columnTypes]);\n  React.useEffect(() => {\n    if (props.columnVisibilityModel !== undefined) {\n      apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel);\n    }\n  }, [apiRef, logger, props.columnVisibilityModel]);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridDensitySelector } from './densitySelector';\nimport { isDeepEqual } from '../../../utils/utils';\nexport const COMPACT_DENSITY_FACTOR = 0.7;\nexport const COMFORTABLE_DENSITY_FACTOR = 1.3;\nconst DENSITY_FACTORS = {\n  compact: COMPACT_DENSITY_FACTOR,\n  comfortable: COMFORTABLE_DENSITY_FACTOR,\n  standard: 1\n};\nexport const densityStateInitializer = (state, props) => _extends({}, state, {\n  density: {\n    value: props.density,\n    factor: DENSITY_FACTORS[props.density]\n  }\n});\nexport const useGridDensity = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useDensity');\n  const setDensity = React.useCallback(newDensity => {\n    logger.debug(`Set grid density to ${newDensity}`);\n    apiRef.current.setState(state => {\n      const currentDensityState = gridDensitySelector(state);\n      const newDensityState = {\n        value: newDensity,\n        factor: DENSITY_FACTORS[newDensity]\n      };\n      if (isDeepEqual(currentDensityState, newDensityState)) {\n        return state;\n      }\n      return _extends({}, state, {\n        density: newDensityState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, apiRef]);\n  React.useEffect(() => {\n    apiRef.current.setDensity(props.density);\n  }, [apiRef, props.density]);\n  const densityApi = {\n    setDensity\n  };\n  useGridApiMethod(apiRef, densityApi, 'public');\n};","import { gridColumnDefinitionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns';\nimport { gridFilteredSortedRowIdsSelector } from '../filter';\nimport { gridPinnedRowsSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\nexport const getColumnsToExport = ({\n  apiRef,\n  options\n}) => {\n  const columns = gridColumnDefinitionsSelector(apiRef);\n  if (options.fields) {\n    return options.fields.reduce((currentColumns, field) => {\n      const column = columns.find(col => col.field === field);\n      if (column) {\n        currentColumns.push(column);\n      }\n      return currentColumns;\n    }, []);\n  }\n  const validColumns = options.allColumns ? columns : gridVisibleColumnDefinitionsSelector(apiRef);\n  return validColumns.filter(column => !column.disableExport);\n};\nexport const defaultGetRowsToExport = ({\n  apiRef\n}) => {\n  var _pinnedRows$top, _pinnedRows$bottom;\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  const rowTree = gridRowTreeSelector(apiRef);\n  const selectedRows = apiRef.current.getSelectedRows();\n  const bodyRows = filteredSortedRowIds.filter(id => rowTree[id].type !== 'footer');\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsIds = (pinnedRows == null || (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.map(row => row.id)) || [];\n  const bottomPinnedRowsIds = (pinnedRows == null || (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.map(row => row.id)) || [];\n  bodyRows.unshift(...topPinnedRowsIds);\n  bodyRows.push(...bottomPinnedRowsIds);\n  if (selectedRows.size > 0) {\n    return bodyRows.filter(id => selectedRows.has(id));\n  }\n  return bodyRows;\n};","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { exportAs } from '../../../utils/exportAs';\nimport { buildCSV } from './serializers/csvSerializer';\nimport { getColumnsToExport, defaultGetRowsToExport } from './utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridCsvExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridCsvExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridCsvExport');\n  const ignoreValueFormatterProp = props.unstable_ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp == null ? void 0 : ignoreValueFormatterProp.csvExport : ignoreValueFormatterProp) || false;\n  const getDataAsCsv = React.useCallback((options = {}) => {\n    var _options$getRowsToExp, _options$includeHeade, _options$includeColum;\n    logger.debug(`Get data as CSV`);\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const getRowsToExport = (_options$getRowsToExp = options.getRowsToExport) != null ? _options$getRowsToExp : defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    return buildCSV({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      delimiterCharacter: options.delimiter || ',',\n      includeHeaders: (_options$includeHeade = options.includeHeaders) != null ? _options$includeHeade : true,\n      includeColumnGroupsHeaders: (_options$includeColum = options.includeColumnGroupsHeaders) != null ? _options$includeColum : true,\n      ignoreValueFormatter,\n      apiRef\n    });\n  }, [logger, apiRef, ignoreValueFormatter]);\n  const exportDataAsCsv = React.useCallback(options => {\n    logger.debug(`Export data as CSV`);\n    const csv = getDataAsCsv(options);\n    const blob = new Blob([options != null && options.utf8WithBom ? new Uint8Array([0xef, 0xbb, 0xbf]) : '', csv], {\n      type: 'text/csv'\n    });\n    exportAs(blob, 'csv', options == null ? void 0 : options.fileName);\n  }, [logger, getDataAsCsv]);\n  const csvExportApi = {\n    getDataAsCsv,\n    exportDataAsCsv\n  };\n  useGridApiMethod(apiRef, csvExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    var _options$csvOptions;\n    if ((_options$csvOptions = options.csvOptions) != null && _options$csvOptions.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridCsvExportMenuItem, {\n        options: options.csvOptions\n      }),\n      componentName: 'csvExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","/**\n * I have hesitated to use https://github.com/eligrey/FileSaver.js.\n * If we get bug reports that this project solves, we should consider using it.\n *\n * Related resources.\n * https://blog.logrocket.com/programmatic-file-downloads-in-the-browser-9a5186298d5c/\n * https://github.com/mbrn/filefy/blob/ec4ed0b7415d93be7158c23029f2ea1fa0b8e2d9/src/core/BaseBuilder.ts\n * https://unpkg.com/browse/@progress/kendo-file-saver@1.0.7/dist/es/save-as.js\n * https://github.com/ag-grid/ag-grid/blob/9565c219b6210aa85fa833c929d0728f9d163a91/community-modules/csv-export/src/csvExport/downloader.ts\n */\n\nexport function exportAs(blob, extension = 'csv', filename = document.title || 'untitled') {\n  const fullName = `${filename}.${extension}`;\n\n  // Test download attribute first\n  // https://github.com/eligrey/FileSaver.js/issues/193\n  if ('download' in HTMLAnchorElement.prototype) {\n    // Create an object URL for the blob object\n    const url = URL.createObjectURL(blob);\n\n    // Create a new anchor element\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fullName;\n\n    // Programmatically trigger a click on the anchor element\n    // Useful if you want the download to happen automatically\n    // Without attaching the anchor element to the DOM\n    a.click();\n\n    // https://github.com/eligrey/FileSaver.js/issues/205\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    });\n    return;\n  }\n  throw new Error('MUI: exportAs not supported');\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridFilteredTopLevelRowCountSelector } from '../filter';\nimport { gridDensityFactorSelector } from '../density';\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPaginationModelSelector } from './gridPaginationSelector';\nimport { calculatePinnedRowsHeight } from '../rows/gridRowsUtils';\nimport { getPageCount, noRowCountInServerMode, defaultPageSize, throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel, getValidPage } from './gridPaginationUtils';\nexport const paginationStateInitializer = (state, props) => {\n  var _props$paginationMode, _props$initialState;\n  const paginationModel = _extends({}, getDefaultGridPaginationModel(props.autoPageSize), (_props$paginationMode = props.paginationModel) != null ? _props$paginationMode : (_props$initialState = props.initialState) == null || (_props$initialState = _props$initialState.pagination) == null ? void 0 : _props$initialState.paginationModel);\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, props.signature);\n  return _extends({}, state, {\n    pagination: {\n      paginationModel\n    }\n  });\n};\nexport const mergeStateWithPaginationModel = (rowCount, signature, paginationModelProp) => paginationState => {\n  var _paginationModelProp$;\n  let paginationModel = paginationState.paginationModel;\n  const pageSize = (_paginationModelProp$ = paginationModelProp == null ? void 0 : paginationModelProp.pageSize) != null ? _paginationModelProp$ : paginationModel.pageSize;\n  const pageCount = getPageCount(rowCount, pageSize);\n  if (paginationModelProp && ((paginationModelProp == null ? void 0 : paginationModelProp.page) !== paginationModel.page || (paginationModelProp == null ? void 0 : paginationModelProp.pageSize) !== paginationModel.pageSize)) {\n    paginationModel = paginationModelProp;\n  }\n  const validPage = getValidPage(paginationModel.page, pageCount);\n  if (validPage !== paginationModel.page) {\n    paginationModel = _extends({}, paginationModel, {\n      page: validPage\n    });\n  }\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, signature);\n  return {\n    paginationModel\n  };\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPagination = (apiRef, props) => {\n  var _props$initialState3;\n  const logger = useGridLogger(apiRef, 'useGridPagination');\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  apiRef.current.registerControlState({\n    stateId: 'pagination',\n    propModel: props.paginationModel,\n    propOnChange: props.onPaginationModelChange,\n    stateSelector: gridPaginationModelSelector,\n    changeEvent: 'paginationModelChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPage = React.useCallback(page => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (page === currentModel.page) {\n      return;\n    }\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setPaginationModel({\n      page,\n      pageSize: currentModel.pageSize\n    });\n  }, [apiRef, logger]);\n  const setPageSize = React.useCallback(pageSize => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (pageSize === currentModel.pageSize) {\n      return;\n    }\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setPaginationModel({\n      pageSize,\n      page: currentModel.page\n    });\n  }, [apiRef, logger]);\n  const setPaginationModel = React.useCallback(paginationModel => {\n    var _props$rowCount;\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (paginationModel === currentModel) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationModel' to\", paginationModel);\n    apiRef.current.updateControlState('pagination', mergeStateWithPaginationModel((_props$rowCount = props.rowCount) != null ? _props$rowCount : visibleTopLevelRowCount, props.signature, paginationModel), 'setPaginationModel');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.rowCount, props.signature, visibleTopLevelRowCount]);\n  const pageApi = {\n    setPage,\n    setPageSize,\n    setPaginationModel\n  };\n  useGridApiMethod(apiRef, pageApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState2;\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const shouldExportPaginationModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationModel` is controlled\n    props.paginationModel != null ||\n    // Always export if the `paginationModel` has been initialized\n    ((_props$initialState2 = props.initialState) == null || (_props$initialState2 = _props$initialState2.pagination) == null ? void 0 : _props$initialState2.paginationModel) != null ||\n    // Export if `page` or `pageSize` is not equal to the default value\n    paginationModel.page !== 0 && paginationModel.pageSize !== defaultPageSize(props.autoPageSize);\n    if (!shouldExportPaginationModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        paginationModel\n      })\n    });\n  }, [apiRef, props.paginationModel, (_props$initialState3 = props.initialState) == null || (_props$initialState3 = _props$initialState3.pagination) == null ? void 0 : _props$initialState3.paginationModel, props.autoPageSize]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto, _context$stateToResto2, _props$rowCount2;\n    const paginationModel = (_context$stateToResto = context.stateToRestore.pagination) != null && _context$stateToResto.paginationModel ? _extends({}, getDefaultGridPaginationModel(props.autoPageSize), (_context$stateToResto2 = context.stateToRestore.pagination) == null ? void 0 : _context$stateToResto2.paginationModel) : gridPaginationModelSelector(apiRef);\n    apiRef.current.updateControlState('pagination', mergeStateWithPaginationModel((_props$rowCount2 = props.rowCount) != null ? _props$rowCount2 : visibleTopLevelRowCount, props.signature, paginationModel), 'stateRestorePreProcessing');\n    return params;\n  }, [apiRef, props.autoPageSize, props.rowCount, props.signature, visibleTopLevelRowCount]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = () => {\n    var _apiRef$current$virtu;\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    if ((_apiRef$current$virtu = apiRef.current.virtualScrollerRef) != null && _apiRef$current$virtu.current) {\n      apiRef.current.scrollToIndexes({\n        rowIndex: paginationModel.page * paginationModel.pageSize\n      });\n    }\n    apiRef.current.forceUpdate();\n  };\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    const dimensions = apiRef.current.getRootDimensions();\n    if (!props.autoPageSize || !dimensions) {\n      return;\n    }\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    const maximumPageSizeWithoutScrollBar = Math.floor((dimensions.viewportInnerSize.height - pinnedRowsHeight.top - pinnedRowsHeight.bottom) / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (props.paginationMode === 'server' && props.rowCount == null) {\n        noRowCountInServerMode();\n      }\n    }\n  }, [props.rowCount, props.paginationMode]);\n  React.useEffect(() => {\n    var _props$rowCount3;\n    apiRef.current.updateControlState('pagination', mergeStateWithPaginationModel((_props$rowCount3 = props.rowCount) != null ? _props$rowCount3 : visibleTopLevelRowCount, props.signature, props.paginationModel));\n  }, [apiRef, props.paginationModel, props.rowCount, props.paginationMode, visibleTopLevelRowCount, props.signature]);\n  React.useEffect(() => {\n    handleUpdateAutoPageSize();\n  }, [handleUpdateAutoPageSize]);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterStrategyProcessor = (apiRef, strategyName, group, processor) => {\n  const registerPreProcessor = React.useCallback(() => {\n    apiRef.current.registerStrategyProcessor(strategyName, group, processor);\n  }, [apiRef, processor, group, strategyName]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { defaultMemoize } from 'reselect';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useLazyRef } from '../../utils/useLazyRef';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridFilterableColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { GridPreferencePanelsValue } from '../preferencesPanel/gridPreferencePanelsValue';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { gridFilterModelSelector } from './gridFilterSelector';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { gridRowsLookupSelector } from '../rows';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\nimport { buildAggregatedFilterApplier, sanitizeFilterModel, mergeStateWithFilterModel, cleanFilterItem, passFilterLogic } from './gridFilterUtils';\nimport { isDeepEqual } from '../../../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const filterStateInitializer = (state, props, apiRef) => {\n  var _ref, _props$filterModel, _props$initialState;\n  const filterModel = (_ref = (_props$filterModel = props.filterModel) != null ? _props$filterModel : (_props$initialState = props.initialState) == null || (_props$initialState = _props$initialState.filter) == null ? void 0 : _props$initialState.filterModel) != null ? _ref : getDefaultGridFilterModel();\n  return _extends({}, state, {\n    filter: {\n      filterModel: sanitizeFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef),\n      filteredRowsLookup: {},\n      filteredDescendantCountLookup: {}\n    },\n    visibleRowsLookup: {}\n  });\n};\nconst getVisibleRowsLookup = params => {\n  // For flat tree, the `visibleRowsLookup` and the `filteredRowsLookup` are equals since no row is collapsed.\n  return params.filteredRowsLookup;\n};\nfunction getVisibleRowsLookupState(apiRef, state) {\n  return apiRef.current.applyStrategyProcessor('visibleRowsLookupCreation', {\n    tree: state.rows.tree,\n    filteredRowsLookup: state.filter.filteredRowsLookup\n  });\n}\nfunction createMemoizedValues() {\n  return defaultMemoize(Object.values);\n}\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n * @requires useGridRows (event)\n */\nexport const useGridFilter = (apiRef, props) => {\n  var _props$initialState3, _props$slotProps2;\n  const logger = useGridLogger(apiRef, 'useGridFilter');\n  apiRef.current.registerControlState({\n    stateId: 'filter',\n    propModel: props.filterModel,\n    propOnChange: props.onFilterModelChange,\n    stateSelector: gridFilterModelSelector,\n    changeEvent: 'filterModelChange'\n  });\n  const updateFilteredRows = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const filterModel = gridFilterModelSelector(state, apiRef.current.instanceId);\n      const isRowMatchingFilters = props.filterMode === 'client' ? buildAggregatedFilterApplier(filterModel, apiRef, props.disableEval) : null;\n      const filteringResult = apiRef.current.applyStrategyProcessor('filtering', {\n        isRowMatchingFilters,\n        filterModel: filterModel != null ? filterModel : getDefaultGridFilterModel()\n      });\n      const newState = _extends({}, state, {\n        filter: _extends({}, state.filter, filteringResult)\n      });\n      const visibleRowsLookupState = getVisibleRowsLookupState(apiRef, newState);\n      return _extends({}, newState, {\n        visibleRowsLookup: visibleRowsLookupState\n      });\n    });\n    apiRef.current.publishEvent('filteredRowsSet');\n  }, [apiRef, props.filterMode, props.disableEval]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.filterable === false || props.disableColumnFilter) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuFilterItem'];\n  }, [props.disableColumnFilter]);\n\n  /**\n   * API METHODS\n   */\n  const applyFilters = React.useCallback(() => {\n    updateFilteredRows();\n    apiRef.current.forceUpdate();\n  }, [apiRef, updateFilteredRows]);\n  const upsertFilterItem = React.useCallback(item => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = [...filterModel.items];\n    const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n    if (itemIndex === -1) {\n      items.push(item);\n    } else {\n      items[itemIndex] = item;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItem');\n  }, [apiRef]);\n  const upsertFilterItems = React.useCallback(items => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const existingItems = [...filterModel.items];\n    items.forEach(item => {\n      const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n      if (itemIndex === -1) {\n        existingItems.push(item);\n      } else {\n        existingItems[itemIndex] = item;\n      }\n    });\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItems');\n  }, [apiRef]);\n  const deleteFilterItem = React.useCallback(itemToDelete => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = filterModel.items.filter(item => item.id !== itemToDelete.id);\n    if (items.length === filterModel.items.length) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'deleteFilterItem');\n  }, [apiRef]);\n  const showFilterPanel = React.useCallback((targetColumnField, panelId, labelId) => {\n    logger.debug('Displaying filter panel');\n    if (targetColumnField) {\n      const filterModel = gridFilterModelSelector(apiRef);\n      const filterItemsWithValue = filterModel.items.filter(item => {\n        var _column$filterOperato;\n        if (item.value !== undefined) {\n          // Some filters like `isAnyOf` support array as `item.value`.\n          // If array is empty, we want to remove it from the filter model.\n          if (Array.isArray(item.value) && item.value.length === 0) {\n            return false;\n          }\n          return true;\n        }\n        const column = apiRef.current.getColumn(item.field);\n        const filterOperator = (_column$filterOperato = column.filterOperators) == null ? void 0 : _column$filterOperato.find(operator => operator.value === item.operator);\n        const requiresFilterValue = typeof (filterOperator == null ? void 0 : filterOperator.requiresFilterValue) === 'undefined' ? true : filterOperator == null ? void 0 : filterOperator.requiresFilterValue;\n\n        // Operators like `isEmpty` don't have and don't require `item.value`.\n        // So we don't want to remove them from the filter model if `item.value === undefined`.\n        // See https://github.com/mui/mui-x/issues/5402\n        if (requiresFilterValue) {\n          return false;\n        }\n        return true;\n      });\n      let newFilterItems;\n      const filterItemOnTarget = filterItemsWithValue.find(item => item.field === targetColumnField);\n      const targetColumn = apiRef.current.getColumn(targetColumnField);\n      if (filterItemOnTarget) {\n        newFilterItems = filterItemsWithValue;\n      } else if (props.disableMultipleColumnsFiltering) {\n        newFilterItems = [cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      } else {\n        newFilterItems = [...filterItemsWithValue, cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      }\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n    apiRef.current.showPreferences(GridPreferencePanelsValue.filters, panelId, labelId);\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const hideFilterPanel = React.useCallback(() => {\n    logger.debug('Hiding filter panel');\n    apiRef.current.hidePreferences();\n  }, [apiRef, logger]);\n  const setFilterLogicOperator = React.useCallback(logicOperator => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.logicOperator === logicOperator) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      logicOperator\n    }), 'changeLogicOperator');\n  }, [apiRef]);\n  const setQuickFilterValues = React.useCallback(values => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (isDeepEqual(filterModel.quickFilterValues, values)) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      quickFilterValues: [...values]\n    }));\n  }, [apiRef]);\n  const setFilterModel = React.useCallback((model, reason) => {\n    const currentModel = gridFilterModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug('Setting filter model');\n      apiRef.current.updateControlState('filter', mergeStateWithFilterModel(model, props.disableMultipleColumnsFiltering, apiRef), reason);\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const filterApi = {\n    setFilterLogicOperator,\n    unstable_applyFilters: applyFilters,\n    deleteFilterItem,\n    upsertFilterItem,\n    upsertFilterItems,\n    setFilterModel,\n    showFilterPanel,\n    hideFilterPanel,\n    setQuickFilterValues,\n    ignoreDiacritics: props.ignoreDiacritics\n  };\n  useGridApiMethod(apiRef, filterApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState2;\n    const filterModelToExport = gridFilterModelSelector(apiRef);\n    const shouldExportFilterModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.filterModel != null ||\n    // Always export if the model has been initialized\n    ((_props$initialState2 = props.initialState) == null || (_props$initialState2 = _props$initialState2.filter) == null ? void 0 : _props$initialState2.filterModel) != null ||\n    // Export if the model is not equal to the default value\n    !isDeepEqual(filterModelToExport, getDefaultGridFilterModel());\n    if (!shouldExportFilterModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      filter: {\n        filterModel: filterModelToExport\n      }\n    });\n  }, [apiRef, props.filterModel, (_props$initialState3 = props.initialState) == null || (_props$initialState3 = _props$initialState3.filter) == null ? void 0 : _props$initialState3.filterModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n    const filterModel = (_context$stateToResto = context.stateToRestore.filter) == null ? void 0 : _context$stateToResto.filterModel;\n    if (filterModel == null) {\n      return params;\n    }\n    apiRef.current.updateControlState('filter', mergeStateWithFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef), 'restoreState');\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.unstable_applyFilters]\n    });\n  }, [apiRef, props.disableMultipleColumnsFiltering]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.filters) {\n      var _props$slotProps;\n      const FilterPanel = props.slots.filterPanel;\n      return /*#__PURE__*/_jsx(FilterPanel, _extends({}, (_props$slotProps = props.slotProps) == null ? void 0 : _props$slotProps.filterPanel));\n    }\n    return initialValue;\n  }, [props.slots.filterPanel, (_props$slotProps2 = props.slotProps) == null ? void 0 : _props$slotProps2.filterPanel]);\n  const {\n    getRowId\n  } = props;\n  const getRowsRef = useLazyRef(createMemoizedValues);\n  const flatFilteringMethod = React.useCallback(params => {\n    if (props.filterMode !== 'client' || !params.isRowMatchingFilters) {\n      return {\n        filteredRowsLookup: {},\n        filteredDescendantCountLookup: {}\n      };\n    }\n    const dataRowIdToModelLookup = gridRowsLookupSelector(apiRef);\n    const filteredRowsLookup = {};\n    const {\n      isRowMatchingFilters\n    } = params;\n    const filterCache = {};\n    const result = {\n      passingFilterItems: null,\n      passingQuickFilterValues: null\n    };\n    const rows = getRowsRef.current(apiRef.current.state.rows.dataRowIdToModelLookup);\n    for (let i = 0; i < rows.length; i += 1) {\n      const row = rows[i];\n      const id = getRowId ? getRowId(row) : row.id;\n      isRowMatchingFilters(row, undefined, result);\n      const isRowPassing = passFilterLogic([result.passingFilterItems], [result.passingQuickFilterValues], params.filterModel, apiRef, filterCache);\n      filteredRowsLookup[id] = isRowPassing;\n    }\n    const footerId = 'auto-generated-group-footer-root';\n    const footer = dataRowIdToModelLookup[footerId];\n    if (footer) {\n      filteredRowsLookup[footerId] = true;\n    }\n    return {\n      filteredRowsLookup,\n      filteredDescendantCountLookup: {}\n    };\n  }, [apiRef, props.filterMode, getRowId, getRowsRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'filtering', flatFilteringMethod);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'visibleRowsLookupCreation', getVisibleRowsLookup);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnsChange = React.useCallback(() => {\n    logger.debug('onColUpdated - GridColumns changed, applying filters');\n    const filterModel = gridFilterModelSelector(apiRef);\n    const filterableColumnsLookup = gridFilterableColumnLookupSelector(apiRef);\n    const newFilterItems = filterModel.items.filter(item => item.field && filterableColumnsLookup[item.field]);\n    if (newFilterItems.length < filterModel.items.length) {\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n  }, [apiRef, logger]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'filtering') {\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef]);\n  const updateVisibleRowsLookupState = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        visibleRowsLookup: getVisibleRowsLookupState(apiRef, state)\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n\n  // Do not call `apiRef.current.forceUpdate` to avoid re-render before updating the sorted rows.\n  // Otherwise, the state is not consistent during the render\n  useGridApiEventHandler(apiRef, 'rowsSet', updateFilteredRows);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', updateVisibleRowsLookupState);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.quickFilterValues && filterModel.quickFilterExcludeHiddenColumns) {\n      // re-apply filters because the quick filter results may have changed\n      apiRef.current.unstable_applyFilters();\n    }\n  });\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.unstable_applyFilters();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.filterModel !== undefined) {\n      apiRef.current.setFilterModel(props.filterModel);\n    }\n  }, [apiRef, logger, props.filterModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventcallback } from '@mui/utils';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { gridFocusCellSelector, unstable_gridFocusColumnGroupHeaderSelector } from './gridFocusStateSelector';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { clamp } from '../../../utils/utils';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  }\n});\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const publishCellFocusOut = React.useCallback((cell, event) => {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if ((focusedCell == null ? void 0 : focusedCell.id) === id && (focusedCell == null ? void 0 : focusedCell.field) === field) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFilterFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header filter with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnGroupHeaderFocus = React.useCallback((field, depth, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell) {\n      apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        },\n        focus: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const getColumnGroupHeaderFocus = React.useCallback(() => unstable_gridFocusColumnGroupHeaderSelector(apiRef), [apiRef]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const pinnedRows = gridPinnedRowsSelector(apiRef);\n\n    // Include pinned rows as well\n    const currentPageRows = [].concat(pinnedRows.top || [], currentPage.rows, pinnedRows.bottom || []);\n    let rowIndexToFocus = currentPageRows.findIndex(row => row.id === id);\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n      if (rowIndexToFocus < currentPageRows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPageRows.length - 1);\n    const rowToFocus = currentPageRows[rowIndexToFocus];\n    if (!rowToFocus) {\n      return;\n    }\n    const colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || event.key === 'Shift' || isNavigationKey(event.key)) {\n      return;\n    }\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleColumnGroupHeaderFocus = React.useCallback(({\n    fields,\n    depth\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    const focusedColumnGroup = unstable_gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup !== null && focusedColumnGroup.depth === depth && fields.includes(focusedColumnGroup.field)) {\n      // This group cell has already been focused\n      return;\n    }\n    apiRef.current.setColumnGroupHeaderFocus(fields[0], depth, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback((_, event) => {\n    var _event$relatedTarget;\n    if ((_event$relatedTarget = event.relatedTarget) != null && _event$relatedTarget.className.includes(gridClasses.columnHeader)) {\n      return;\n    }\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null,\n        columnHeaderFilter: null,\n        columnGroupHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseDown = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n      return;\n    }\n    if ((cellParams == null ? void 0 : cellParams.id) === focusedCell.id && (cellParams == null ? void 0 : cellParams.field) === focusedCell.field) {\n      return;\n    }\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n    if (cellElement != null && cellElement.contains(event.target)) {\n      return;\n    }\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate();\n\n      // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n    const cell = gridFocusCellSelector(apiRef);\n    if ((cell == null ? void 0 : cell.id) !== params.id || (cell == null ? void 0 : cell.field) !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    // If the focused cell is in a row which does not exist anymore, then remove the focus\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n    }\n  }, [apiRef]);\n  const handlePaginationModelChange = useEventcallback(() => {\n    const currentFocusedCell = gridFocusCellSelector(apiRef);\n    if (!currentFocusedCell) {\n      return;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const rowIsInCurrentPage = currentPage.rows.find(row => row.id === currentFocusedCell.id);\n    if (rowIsInCurrentPage) {\n      return;\n    }\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id: currentPage.rows[0].id,\n            field: visibleColumns[0].field\n          },\n          columnGroupHeader: null,\n          columnHeader: null,\n          columnHeaderFilter: null\n        }\n      });\n    });\n  });\n  const focusApi = {\n    setCellFocus,\n    setColumnHeaderFocus,\n    setColumnHeaderFilterFocus\n  };\n  const focusPrivateApi = {\n    moveFocusToRelativeCell,\n    setColumnGroupHeaderFocus,\n    getColumnGroupHeaderFocus\n  };\n  useGridApiMethod(apiRef, focusApi, 'public');\n  useGridApiMethod(apiRef, focusPrivateApi, 'private');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('mouseup', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('mouseup', handleDocumentClick);\n    };\n  }, [apiRef, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', handleCellMouseDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderFocus', handleColumnGroupHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n};","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { gridExpandedSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../colDef/gridCheckboxSelectionColDef';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nimport { unstable_gridFocusColumnGroupHeaderSelector } from '../focus';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../columnGrouping/gridColumnGroupsSelector';\nimport { unstable_gridHeaderFilteringEditFieldSelector, unstable_gridHeaderFilteringMenuSelector } from '../headerFiltering/gridHeaderFilteringSelectors';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { isEventTargetInPortal } from '../../../utils/domUtils';\nfunction enrichPageRowsWithPinnedRows(apiRef, rows) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef) || {};\n  return [...(pinnedRows.top || []), ...rows, ...(pinnedRows.bottom || [])];\n}\nconst getLeftColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  direction\n}) => {\n  if (direction === 'rtl') {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  } else if (direction === 'ltr') {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  }\n  return null;\n};\nconst getRightColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  direction\n}) => {\n  if (direction === 'rtl') {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  } else if (direction === 'ltr') {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  }\n  return null;\n};\n\n/**\n * @requires useGridSorting (method) - can be after\n * @requires useGridFilter (state) - can be after\n * @requires useGridColumns (state, method) - can be after\n * @requires useGridDimensions (method) - can be after\n * @requires useGridFocus (method) - can be after\n * @requires useGridScroll (method) - can be after\n * @requires useGridColumnSpanning (method) - can be after\n */\nexport const useGridKeyboardNavigation = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridKeyboardNavigation');\n  const initialCurrentPageRows = useGridVisibleRows(apiRef, props).rows;\n  const theme = useTheme();\n  const currentPageRows = React.useMemo(() => enrichPageRowsWithPinnedRows(apiRef, initialCurrentPageRows), [apiRef, initialCurrentPageRows]);\n  const headerFilteringEnabled =\n  // @ts-expect-error // TODO move relevant code to the `DataGridPro`\n  props.signature !== 'DataGrid' && props.unstable_headerFilters;\n\n  /**\n   * @param {number} colIndex Index of the column to focus\n   * @param {number} rowIndex index of the row to focus\n   * @param {string} closestColumnToUse Which closest column cell to use when the cell is spanned by `colSpan`.\n   * TODO replace with apiRef.current.moveFocusToRelativeCell()\n   */\n  const goToCell = React.useCallback((colIndex, rowId, closestColumnToUse = 'left') => {\n    const visibleSortedRows = gridExpandedSortedRowEntriesSelector(apiRef);\n    const nextCellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (nextCellColSpanInfo && nextCellColSpanInfo.spannedByColSpan) {\n      if (closestColumnToUse === 'left') {\n        colIndex = nextCellColSpanInfo.leftVisibleCellIndex;\n      } else if (closestColumnToUse === 'right') {\n        colIndex = nextCellColSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    // `scrollToIndexes` requires a rowIndex relative to all visible rows.\n    // Those rows do not include pinned rows, but pinned rows do not need scroll anyway.\n    const rowIndexRelativeToAllRows = visibleSortedRows.findIndex(row => row.id === rowId);\n    logger.debug(`Navigating to cell row ${rowIndexRelativeToAllRows}, col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex,\n      rowIndex: rowIndexRelativeToAllRows\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setCellFocus(rowId, field);\n  }, [apiRef, logger]);\n  const goToHeader = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef, logger]);\n  const goToHeaderFilter = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header filter col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFilterFocus(field, event);\n  }, [apiRef, logger]);\n  const goToGroupHeader = React.useCallback((colIndex, depth, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const {\n      field\n    } = apiRef.current.getVisibleColumns()[colIndex];\n    apiRef.current.setColumnGroupHeaderFocus(field, depth, event);\n  }, [apiRef, logger]);\n  const getRowIdFromIndex = React.useCallback(rowIndex => {\n    var _currentPageRows$rowI;\n    return (_currentPageRows$rowI = currentPageRows[rowIndex]) == null ? void 0 : _currentPageRows$rowI.id;\n  }, [currentPageRows]);\n  const handleColumnHeaderKeyDown = React.useCallback((params, event) => {\n    const headerTitleNode = event.currentTarget.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n    const isFromInsideContent = !!headerTitleNode && headerTitleNode.contains(event.target);\n    if (isFromInsideContent && params.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // When focus is on a nested input, keyboard events have no effect to avoid conflicts with native events.\n      // There is one exception for the checkBoxHeader\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions();\n    if (!dimensions) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = currentPageRows.length > 0 ? 0 : null;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    const columnGroupMaxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (firstRowIndexInPage !== null) {\n            if (headerFilteringEnabled) {\n              goToHeaderFilter(colIndexBefore, event);\n            } else {\n              goToCell(colIndexBefore, getRowIdFromIndex(firstRowIndexInPage));\n            }\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (rightColIndex !== null) {\n            goToHeader(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (leftColIndex !== null) {\n            goToHeader(leftColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (columnGroupMaxDepth > 0) {\n            goToGroupHeader(colIndexBefore, columnGroupMaxDepth - 1, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeader(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeader(lastColIndex, event);\n          break;\n        }\n      case 'Enter':\n        {\n          if (event.ctrlKey || event.metaKey) {\n            apiRef.current.toggleColumnMenu(params.field);\n          }\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, headerFilteringEnabled, goToHeaderFilter, goToCell, getRowIdFromIndex, theme.direction, goToHeader, goToGroupHeader]);\n  const handleHeaderFilterKeyDown = React.useCallback((params, event) => {\n    const dimensions = apiRef.current.getRootDimensions();\n    if (!dimensions) {\n      return;\n    }\n    const isEditing = unstable_gridHeaderFilteringEditFieldSelector(apiRef) === params.field;\n    const isHeaderMenuOpen = unstable_gridHeaderFilteringMenuSelector(apiRef) === params.field;\n    if (isEditing || isHeaderMenuOpen || !isNavigationKey(event.key)) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          const rowId = getRowIdFromIndex(firstRowIndexInPage);\n          if (firstRowIndexInPage !== null && rowId != null) {\n            goToCell(colIndexBefore, rowId);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (rightColIndex !== null) {\n            goToHeaderFilter(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (leftColIndex !== null) {\n            goToHeaderFilter(leftColIndex, event);\n          } else {\n            apiRef.current.setColumnHeaderFilterFocus(params.field, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          goToHeader(colIndexBefore, event);\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeaderFilter(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeaderFilter(lastColIndex, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeaderFilter, theme.direction, goToHeader, goToCell, getRowIdFromIndex]);\n  const handleColumnGroupHeaderKeyDown = React.useCallback((params, event) => {\n    const dimensions = apiRef.current.getRootDimensions();\n    if (!dimensions) {\n      return;\n    }\n    const focusedColumnGroup = unstable_gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup === null) {\n      return;\n    }\n    const {\n      field: currentField,\n      depth: currentDepth\n    } = focusedColumnGroup;\n    const {\n      fields,\n      depth,\n      maxDepth\n    } = params;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const currentColIndex = apiRef.current.getColumnIndex(currentField);\n    const colIndexBefore = currentField ? apiRef.current.getColumnIndex(currentField) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (depth === maxDepth - 1) {\n            goToHeader(currentColIndex, event);\n          } else {\n            goToGroupHeader(currentColIndex, currentDepth + 1, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (depth > 0) {\n            goToGroupHeader(currentColIndex, currentDepth - 1, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const remainingRightColumns = fields.length - fields.indexOf(currentField) - 1;\n          if (currentColIndex + remainingRightColumns + 1 <= lastColIndex) {\n            goToGroupHeader(currentColIndex + remainingRightColumns + 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const remainingLeftColumns = fields.indexOf(currentField);\n          if (currentColIndex - remainingLeftColumns - 1 >= firstColIndex) {\n            goToGroupHeader(currentColIndex - remainingLeftColumns - 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToGroupHeader(firstColIndex, currentDepth, event);\n          break;\n        }\n      case 'End':\n        {\n          goToGroupHeader(lastColIndex, currentDepth, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeader, goToGroupHeader, goToCell, getRowIdFromIndex]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // Get the most recent params because the cell mode may have changed by another listener\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n    if (cellParams.cellMode === GridCellModes.Edit || !isNavigationKey(event.key)) {\n      return;\n    }\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions();\n    if (currentPageRows.length === 0 || !dimensions) {\n      return;\n    }\n    const direction = theme.direction;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const rowIndexBefore = currentPageRows.findIndex(row => row.id === params.id);\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          // \"Enter\" is only triggered by the row / cell editing feature\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore + 1));\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (rowIndexBefore > firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore - 1));\n          } else if (headerFilteringEnabled) {\n            goToHeaderFilter(colIndexBefore, event);\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction\n          });\n          if (rightColIndex !== null) {\n            goToCell(rightColIndex, getRowIdFromIndex(rowIndexBefore), direction === 'rtl' ? 'left' : 'right');\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction\n          });\n          if (leftColIndex !== null) {\n            goToCell(leftColIndex, getRowIdFromIndex(rowIndexBefore), direction === 'rtl' ? 'right' : 'left');\n          }\n          break;\n        }\n      case 'Tab':\n        {\n          // \"Tab\" is only triggered by the row / cell editing feature\n          if (event.shiftKey && colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore), 'left');\n          } else if (!event.shiftKey && colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n          break;\n        }\n      case ' ':\n        {\n          const field = params.field;\n          if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n            break;\n          }\n          const colDef = params.colDef;\n          if (colDef && colDef.type === 'treeDataGroup') {\n            break;\n          }\n          if (!event.shiftKey && rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageUp':\n        {\n          // Go to the first row before going to header\n          const nextRowIndex = Math.max(rowIndexBefore - viewportPageSize, firstRowIndexInPage);\n          if (nextRowIndex !== rowIndexBefore && nextRowIndex >= firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(nextRowIndex));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'Home':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(firstColIndex, getRowIdFromIndex(firstRowIndexInPage));\n          } else {\n            goToCell(firstColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      case 'End':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(lastColIndex, getRowIdFromIndex(lastRowIndexInPage));\n          } else {\n            goToCell(lastColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows, theme.direction, goToCell, getRowIdFromIndex, headerFilteringEnabled, goToHeaderFilter, goToHeader]);\n  const checkIfCanStartEditing = React.useCallback((initialValue, {\n    event\n  }) => {\n    if (event.key === ' ') {\n      // Space scrolls to the last row\n      return false;\n    }\n    return initialValue;\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'canStartEditing', checkIfCanStartEditing);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'headerFilterKeyDown', handleHeaderFilterKeyDown);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderKeyDown', handleColumnGroupHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPreferencePanelStateSelector } from './gridPreferencePanelSelector';\nexport const preferencePanelStateInitializer = (state, props) => {\n  var _props$initialState$p, _props$initialState;\n  return _extends({}, state, {\n    preferencePanel: (_props$initialState$p = (_props$initialState = props.initialState) == null ? void 0 : _props$initialState.preferencePanel) != null ? _props$initialState$p : {\n      open: false\n    }\n  });\n};\n\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\nexport const useGridPreferencesPanel = (apiRef, props) => {\n  var _props$initialState3;\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n  const hideTimeout = React.useRef();\n  const immediateTimeout = React.useRef();\n\n  /**\n   * API METHODS\n   */\n  const hidePreferences = React.useCallback(() => {\n    logger.debug('Hiding Preferences Panel');\n    const preferencePanelState = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (preferencePanelState.openedPanelValue) {\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: {\n        open: false\n      }\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n\n  // This is to prevent the preferences from closing when you open a select box or another panel,\n  // The issue is in MUI core V4 => Fixed in V5\n  const doNotHidePanel = React.useCallback(() => {\n    immediateTimeout.current = setTimeout(() => clearTimeout(hideTimeout.current), 0);\n  }, []);\n\n  // This is a hack for the issue with Core V4, by delaying hiding the panel on the clickAwayListener,\n  // we can cancel the action if the trigger element still need the panel...\n  const hidePreferencesDelayed = React.useCallback(() => {\n    hideTimeout.current = setTimeout(hidePreferences, 100);\n  }, [hidePreferences]);\n  const showPreferences = React.useCallback((newValue, panelId, labelId) => {\n    logger.debug('Opening Preferences Panel');\n    doNotHidePanel();\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue,\n        panelId,\n        labelId\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, doNotHidePanel, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences: hidePreferencesDelayed\n  }, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState2;\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n    const shouldExportPreferencePanel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the panel was initialized\n    ((_props$initialState2 = props.initialState) == null ? void 0 : _props$initialState2.preferencePanel) != null ||\n    // Always export if the panel is opened\n    preferencePanelToExport.open;\n    if (!shouldExportPreferencePanel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef, (_props$initialState3 = props.initialState) == null ? void 0 : _props$initialState3.preferencePanel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(hideTimeout.current);\n      clearTimeout(immediateTimeout.current);\n    };\n  }, []);\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"field\"],\n  _excluded2 = [\"id\", \"field\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isPrintableKey } from '../../../utils/keyboardUtils';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsDataRowIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { deepClone } from '../../../utils/utils';\nimport { GridCellEditStartReasons, GridCellEditStopReasons } from '../../../models/params/gridEditCellParams';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, e.g. `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see http://mui.com/components/data-grid/editing/#server-side-persistence.'], 'error');\nexport const useGridCellEditing = (apiRef, props) => {\n  const [cellModesModel, setCellModesModel] = React.useState({});\n  const cellModesModelRef = React.useRef(cellModesModel);\n  const prevCellModesModel = React.useRef({});\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    cellModesModel: cellModesModelProp,\n    onCellModesModelChange\n  } = props;\n  const runIfEditModeIsCell = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) !== mode) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (params.cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('cellEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.View) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStopReasons.cellFocusOut\n    });\n    apiRef.current.publishEvent('cellEditStop', newParams, event);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is deprecated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridCellEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        reason = event.shiftKey ? GridCellEditStopReasons.shiftTabKeyDown : GridCellEditStopReasons.tabKeyDown;\n        event.preventDefault(); // Prevent going to the next element in the tab sequence\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n        apiRef.current.publishEvent('cellEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'cell'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if ((event.ctrlKey || event.metaKey) && event.key === 'v') {\n        reason = GridCellEditStartReasons.pasteKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Delete' || event.key === 'Backspace') {\n        // Delete on Windows, Backspace on macOS\n        reason = GridCellEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason,\n          key: event.key\n        });\n        apiRef.current.publishEvent('cellEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleCellEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startCellEditModeParams = {\n      id,\n      field\n    };\n    if (reason === GridCellEditStartReasons.printableKeyDown || reason === GridCellEditStartReasons.deleteKeyDown || reason === GridCellEditStartReasons.pasteKeyDown) {\n      startCellEditModeParams.deleteValue = true;\n    }\n    apiRef.current.startCellEditMode(startCellEditModeParams);\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    let cellToFocusAfter;\n    if (reason === GridCellEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridCellEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridCellEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopCellEditMode({\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsCell(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsCell(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsCell(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellEditStart', runIfEditModeIsCell(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', runIfEditModeIsCell(handleCellEditStop));\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', props.onCellEditStop);\n  const getCellMode = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && editingState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]);\n  const updateCellModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.cellModesModel;\n    if (onCellModesModelChange && isNewModelDifferentFromProp) {\n      onCellModesModelChange(newModel, {});\n    }\n    if (props.cellModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setCellModesModel(newModel);\n    cellModesModelRef.current = newModel;\n    apiRef.current.publishEvent('cellModesModelChange', newModel);\n  });\n  const updateFieldInCellModesModel = React.useCallback((id, field, newProps) => {\n    // We use the ref because it always contain the up-to-date value, different from the state\n    // that needs a rerender to reflect the new value\n    const newModel = _extends({}, cellModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newModel[id], {\n        [field]: _extends({}, newProps)\n      });\n    } else {\n      const _newModel$id = newModel[id],\n        otherFields = _objectWithoutPropertiesLoose(_newModel$id, [field].map(_toPropertyKey)); // Ensure that we have a new object, not a reference\n      newModel[id] = otherFields;\n      if (Object.keys(newModel[id]).length === 0) {\n        delete newModel[id];\n      }\n    }\n    updateCellModesModel(newModel);\n  }, [updateCellModesModel]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.View);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.Edit\n    }, other));\n  }, [throwIfNotEditable, throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStartCellEditMode = useEventCallback(params => {\n    const {\n      id,\n      field,\n      deleteValue,\n      initialValue\n    } = params;\n    let newValue = apiRef.current.getCellValue(id, field);\n    if (deleteValue || initialValue) {\n      newValue = deleteValue ? '' : initialValue;\n    }\n    const newProps = {\n      value: newValue,\n      error: false,\n      isProcessingProps: false\n    };\n    updateOrDeleteFieldState(id, field, newProps);\n    apiRef.current.setCellFocus(id, field);\n  });\n  const stopCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.View\n    }, other));\n  }, [throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStopCellEditMode = useEventCallback(async params => {\n    const {\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter = 'none'\n    } = params;\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    const finishCellEditMode = () => {\n      updateOrDeleteFieldState(id, field, null);\n      updateFieldInCellModesModel(id, field, null);\n      if (cellToFocusAfter !== 'none') {\n        apiRef.current.moveFocusToRelativeCell(id, field, cellToFocusAfter);\n      }\n    };\n    if (ignoreModifications) {\n      finishCellEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      error,\n      isProcessingProps\n    } = editingState[id][field];\n    if (error || isProcessingProps) {\n      // Attempt to change cell mode to \"view\" was not successful\n      // Update previous mode to allow another attempt\n      prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n      // Revert the mode in the cellModesModel prop back to \"edit\"\n      updateFieldInCellModesModel(id, field, {\n        mode: GridCellModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n        // Revert the mode in the cellModesModel prop back to \"edit\"\n        updateFieldInCellModesModel(id, field, {\n          mode: GridCellModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n      try {\n        const row = apiRef.current.getRow(id);\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishCellEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishCellEditMode();\n    }\n  });\n  const setCellEditingEditCellValue = React.useCallback(async params => {\n    var _editingState$id;\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, apiRef.current.getCellParams(id, field));\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (column.preProcessEditCellProps) {\n      const hasChanged = value !== editingState[id][field].value;\n      newProps = _extends({}, newProps, {\n        isProcessingProps: true\n      });\n      updateOrDeleteFieldState(id, field, newProps);\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row,\n        props: newProps,\n        hasChanged\n      }));\n    }\n\n    // Check again if the cell is in edit mode because the user may have\n    // discarded the changes while the props were being processed.\n    if (apiRef.current.getCellMode(id, field) === GridCellModes.View) {\n      return false;\n    }\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    newProps = _extends({}, newProps, {\n      isProcessingProps: false\n    });\n    // We don't update the value with the one coming from the props pre-processing\n    // because when the promise resolves it may be already outdated. The only\n    // exception to this rule is when there's no pre-processing.\n    newProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n    updateOrDeleteFieldState(id, field, newProps);\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return !((_editingState$id = editingState[id]) != null && (_editingState$id = _editingState$id[field]) != null && _editingState$id.error);\n  }, [apiRef, throwIfNotEditable, throwIfNotInMode, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromCellEditing = React.useCallback((id, field) => {\n    const column = apiRef.current.getColumn(field);\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id] || !editingState[id][field]) {\n      return apiRef.current.getRow(id);\n    }\n    const {\n      value\n    } = editingState[id][field];\n    return column.valueSetter ? column.valueSetter({\n      value,\n      row\n    }) : _extends({}, row, {\n      [field]: value\n    });\n  }, [apiRef]);\n  const editingApi = {\n    getCellMode,\n    startCellEditMode,\n    stopCellEditMode\n  };\n  const editingPrivateApi = {\n    setCellEditingEditCellValue,\n    getRowWithUpdatedValuesFromCellEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (cellModesModelProp) {\n      updateCellModesModel(cellModesModelProp);\n    }\n  }, [cellModesModelProp, updateCellModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopCellEditMode may change it later\n    const copyOfPrevCellModes = prevCellModesModel.current;\n    prevCellModesModel.current = deepClone(cellModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(cellModesModel).forEach(([id, fields]) => {\n      Object.entries(fields).forEach(([field, params]) => {\n        var _copyOfPrevCellModes$, _idToIdLookup$id;\n        const prevMode = ((_copyOfPrevCellModes$ = copyOfPrevCellModes[id]) == null || (_copyOfPrevCellModes$ = _copyOfPrevCellModes$[field]) == null ? void 0 : _copyOfPrevCellModes$.mode) || GridCellModes.View;\n        const originalId = (_idToIdLookup$id = idToIdLookup[id]) != null ? _idToIdLookup$id : id;\n        if (params.mode === GridCellModes.Edit && prevMode === GridCellModes.View) {\n          updateStateToStartCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        } else if (params.mode === GridCellModes.View && prevMode === GridCellModes.Edit) {\n          updateStateToStopCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        }\n      });\n    });\n  }, [apiRef, cellModesModel, updateStateToStartCellEditMode, updateStateToStopCellEditMode]);\n};","import _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\"],\n  _excluded2 = [\"id\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridRowModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isPrintableKey } from '../../../utils/keyboardUtils';\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from '../columns/gridColumnsSelector';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsDataRowIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { deepClone } from '../../../utils/utils';\nimport { GridRowEditStopReasons, GridRowEditStartReasons } from '../../../models/params/gridRowParams';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../../../colDef';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, e.g. `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see http://mui.com/components/data-grid/editing/#server-side-persistence.'], 'error');\nexport const useGridRowEditing = (apiRef, props) => {\n  const [rowModesModel, setRowModesModel] = React.useState({});\n  const rowModesModelRef = React.useRef(rowModesModel);\n  const prevRowModesModel = React.useRef({});\n  const focusTimeout = React.useRef(null);\n  const nextFocusedCell = React.useRef(null);\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    rowModesModel: rowModesModelProp,\n    onRowModesModelChange\n  } = props;\n  const runIfEditModeIsRow = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, mode) => {\n    if (apiRef.current.getRowMode(id) !== mode) {\n      throw new Error(`MUI: The row with id=${id} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.Edit) {\n      return;\n    }\n    const rowParams = apiRef.current.getRowParams(params.id);\n    const newParams = _extends({}, rowParams, {\n      field: params.field,\n      reason: GridRowEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('rowEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n      return;\n    }\n    // The mechanism to detect if we can stop editing a row is different from\n    // the cell editing. Instead of triggering it when clicking outside a cell,\n    // we must check if another cell in the same row was not clicked. To achieve\n    // that, first we keep track of all cells that gained focus. When a cell loses\n    // focus we check if the next cell that received focus is from a different row.\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(() => {\n      var _nextFocusedCell$curr;\n      focusTimeout.current = null;\n      if (((_nextFocusedCell$curr = nextFocusedCell.current) == null ? void 0 : _nextFocusedCell$curr.id) !== params.id) {\n        // The row might have been deleted during the click\n        if (!apiRef.current.getRow(params.id)) {\n          return;\n        }\n\n        // The row may already changed its mode\n        if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n          return;\n        }\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason: GridRowEditStopReasons.rowFocusOut\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    });\n  }, [apiRef]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(focusTimeout.current);\n    };\n  }, []);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridRowModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is deprecated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridRowEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        const columnFields = gridVisibleColumnFieldsSelector(apiRef).filter(field => {\n          const column = apiRef.current.getColumn(field);\n          if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n            return true;\n          }\n          return apiRef.current.isCellEditable(apiRef.current.getCellParams(params.id, field));\n        });\n        if (event.shiftKey) {\n          if (params.field === columnFields[0]) {\n            // Exit if user pressed Shift+Tab on the first field\n            reason = GridRowEditStopReasons.shiftTabKeyDown;\n          }\n        } else if (params.field === columnFields[columnFields.length - 1]) {\n          // Exit if user pressed Tab on the last field\n          reason = GridRowEditStopReasons.tabKeyDown;\n        }\n\n        // Always prevent going to the next element in the tab sequence because the focus is\n        // handled manually to support edit components rendered inside Portals\n        event.preventDefault();\n        if (!reason) {\n          const index = columnFields.findIndex(field => field === params.field);\n          const nextFieldToFocus = columnFields[event.shiftKey ? index - 1 : index + 1];\n          apiRef.current.setCellFocus(params.id, nextFieldToFocus);\n        }\n      }\n      if (reason) {\n        const newParams = _extends({}, apiRef.current.getRowParams(params.id), {\n          reason,\n          field: params.field\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'row'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if ((event.ctrlKey || event.metaKey) && event.key === 'v') {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Delete' || event.key === 'Backspace') {\n        // Delete on Windows, Backspace on macOS\n        reason = GridRowEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason\n        });\n        apiRef.current.publishEvent('rowEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleRowEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startRowEditModeParams = {\n      id,\n      fieldToFocus: field\n    };\n    if (reason === GridRowEditStartReasons.printableKeyDown || reason === GridRowEditStartReasons.deleteKeyDown) {\n      startRowEditModeParams.deleteValue = !!field;\n    }\n    apiRef.current.startRowEditMode(startRowEditModeParams);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback(params => {\n    const {\n      id,\n      reason,\n      field\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    let cellToFocusAfter;\n    if (reason === GridRowEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridRowEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridRowEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopRowEditMode({\n      id,\n      ignoreModifications,\n      field,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsRow(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfEditModeIsRow(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsRow(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsRow(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'rowEditStart', runIfEditModeIsRow(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', runIfEditModeIsRow(handleRowEditStop));\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && Object.keys(editingState[id]).length > 0;\n    return isEditing ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const updateRowModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.rowModesModel;\n    if (onRowModesModelChange && isNewModelDifferentFromProp) {\n      onRowModesModelChange(newModel, {});\n    }\n    if (props.rowModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setRowModesModel(newModel);\n    rowModesModelRef.current = newModel;\n    apiRef.current.publishEvent('rowModesModelChange', newModel);\n  });\n  const updateRowInRowModesModel = React.useCallback((id, newProps) => {\n    const newModel = _extends({}, rowModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newProps);\n    } else {\n      delete newModel[id];\n    }\n    updateRowModesModel(newModel);\n  }, [updateRowModesModel]);\n  const updateOrDeleteRowState = React.useCallback((id, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = newProps;\n      } else {\n        delete newEditingState[id];\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotInMode(id, GridRowModes.View);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.Edit\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStartRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      fieldToFocus,\n      deleteValue,\n      initialValue\n    } = params;\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const newProps = columnFields.reduce((acc, field) => {\n      const cellParams = apiRef.current.getCellParams(id, field);\n      if (!cellParams.isEditable) {\n        return acc;\n      }\n      let newValue = apiRef.current.getCellValue(id, field);\n      if (fieldToFocus === field && (deleteValue || initialValue)) {\n        newValue = deleteValue ? '' : initialValue;\n      }\n      acc[field] = {\n        value: newValue,\n        error: false,\n        isProcessingProps: false\n      };\n      return acc;\n    }, {});\n    updateOrDeleteRowState(id, newProps);\n    if (fieldToFocus) {\n      apiRef.current.setCellFocus(id, fieldToFocus);\n    }\n  });\n  const stopRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, GridRowModes.Edit);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.View\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStopRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      ignoreModifications,\n      field: focusedField,\n      cellToFocusAfter = 'none'\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    const finishRowEditMode = () => {\n      if (cellToFocusAfter !== 'none' && focusedField) {\n        apiRef.current.moveFocusToRelativeCell(id, focusedField, cellToFocusAfter);\n      }\n      updateOrDeleteRowState(id, null);\n      updateRowInRowModesModel(id, null);\n    };\n    if (ignoreModifications) {\n      finishRowEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    const isSomeFieldProcessingProps = Object.values(editingState[id]).some(fieldProps => fieldProps.isProcessingProps);\n    if (isSomeFieldProcessingProps) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      return;\n    }\n    const hasSomeFieldWithError = Object.values(editingState[id]).some(fieldProps => fieldProps.error);\n    if (hasSomeFieldWithError) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      // Revert the mode in the rowModesModel prop back to \"edit\"\n      updateRowInRowModesModel(id, {\n        mode: GridRowModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevRowModesModel.current[id].mode = GridRowModes.Edit;\n        // Revert the mode in the rowModesModel prop back to \"edit\"\n        updateRowInRowModesModel(id, {\n          mode: GridRowModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n      try {\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishRowEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishRowEditMode();\n    }\n  });\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, apiRef.current.getCellParams(id, field));\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (!column.preProcessEditCellProps) {\n      updateOrDeleteFieldState(id, field, newProps);\n    }\n    return new Promise(resolve => {\n      const promises = [];\n      if (column.preProcessEditCellProps) {\n        const hasChanged = newProps.value !== editingState[id][field].value;\n        newProps = _extends({}, newProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, field, newProps);\n        const _editingState$id = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id, [field].map(_toPropertyKey));\n        const promise = Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: newProps,\n          hasChanged,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          // We don't reuse the value from the props pre-processing because when the\n          // promise resolves it may be already outdated. The only exception to this rule\n          // is when there's no pre-processing.\n          processedProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n          updateOrDeleteFieldState(id, field, processedProps);\n        });\n        promises.push(promise);\n      }\n      Object.entries(editingState[id]).forEach(([thisField, fieldProps]) => {\n        if (thisField === field) {\n          return;\n        }\n        const fieldColumn = apiRef.current.getColumn(thisField);\n        if (!fieldColumn.preProcessEditCellProps) {\n          return;\n        }\n        fieldProps = _extends({}, fieldProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, thisField, fieldProps);\n        editingState = gridEditRowsStateSelector(apiRef.current.state);\n        const _editingState$id2 = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id2, [thisField].map(_toPropertyKey));\n        const promise = Promise.resolve(fieldColumn.preProcessEditCellProps({\n          id,\n          row,\n          props: fieldProps,\n          hasChanged: false,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          updateOrDeleteFieldState(id, thisField, processedProps);\n        });\n        promises.push(promise);\n      });\n      Promise.all(promises).then(() => {\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          resolve(!editingState[id][field].error);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }, [apiRef, throwIfNotEditable, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromRowEditing = React.useCallback(id => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id]) {\n      return apiRef.current.getRow(id);\n    }\n    let rowUpdate = _extends({}, row);\n    Object.entries(editingState[id]).forEach(([field, fieldProps]) => {\n      const column = apiRef.current.getColumn(field);\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter({\n          value: fieldProps.value,\n          row: rowUpdate\n        });\n      } else {\n        rowUpdate[field] = fieldProps.value;\n      }\n    });\n    return rowUpdate;\n  }, [apiRef]);\n  const editingApi = {\n    getRowMode,\n    startRowEditMode,\n    stopRowEditMode\n  };\n  const editingPrivateApi = {\n    setRowEditingEditCellValue,\n    getRowWithUpdatedValuesFromRowEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (rowModesModelProp) {\n      updateRowModesModel(rowModesModelProp);\n    }\n  }, [rowModesModelProp, updateRowModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopRowEditMode may change it later\n    const copyOfPrevRowModesModel = prevRowModesModel.current;\n    prevRowModesModel.current = deepClone(rowModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(rowModesModel).forEach(([id, params]) => {\n      var _copyOfPrevRowModesMo, _idToIdLookup$id;\n      const prevMode = ((_copyOfPrevRowModesMo = copyOfPrevRowModesModel[id]) == null ? void 0 : _copyOfPrevRowModesMo.mode) || GridRowModes.View;\n      const originalId = (_idToIdLookup$id = idToIdLookup[id]) != null ? _idToIdLookup$id : id;\n      if (params.mode === GridRowModes.Edit && prevMode === GridRowModes.View) {\n        updateStateToStartRowEditMode(_extends({\n          id: originalId\n        }, params));\n      } else if (params.mode === GridRowModes.View && prevMode === GridRowModes.Edit) {\n        updateStateToStopRowEditMode(_extends({\n          id: originalId\n        }, params));\n      }\n    });\n  }, [apiRef, rowModesModel, updateStateToStartRowEditMode, updateStateToStopRowEditMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridCellEditing } from './useGridCellEditing';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { useGridRowEditing } from './useGridRowEditing';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isAutoGeneratedRow } from '../rows/gridRowsUtils';\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (isAutoGeneratedRow(params.rowNode)) {\n      return false;\n    }\n    if (!params.colDef.editable) {\n      return false;\n    }\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n    return true;\n  }, [isCellEditableProp]);\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    // To run the callback immediately without waiting the timeout\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.setRowEditingEditCellValue : apiRef.current.setCellEditingEditCellValue;\n\n        // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    var _editingState$id$fiel, _editingState$id;\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return (_editingState$id$fiel = (_editingState$id = editingState[id]) == null ? void 0 : _editingState$id[field]) != null ? _editingState$id$fiel : null;\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  const editingSharedPrivateApi = {\n    runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'public');\n  useGridApiMethod(apiRef, editingSharedPrivateApi, 'private');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowCountSelector, gridRowsLookupSelector, gridRowTreeSelector, gridRowGroupingNameSelector, gridRowTreeDepthsSelector, gridDataRowIdsSelector, gridRowsDataRowIdToIdLookupSelector, gridRowMaximumTreeDepthSelector } from './gridRowsSelector';\nimport { useTimeout } from '../../utils/useTimeout';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridSortedRowIdsSelector } from '../sorting/gridSortingSelector';\nimport { gridFilteredRowsLookupSelector } from '../filter/gridFilterSelector';\nimport { getTreeNodeDescendants, createRowsInternalCache, getRowsStateFromCache, isAutoGeneratedRow, GRID_ROOT_GROUP_ID, GRID_ID_AUTOGENERATED, updateCacheWithNewRows, getTopLevelRowCount, getRowIdFromRowModel } from './gridRowsUtils';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nexport const rowsStateInitializer = (state, props, apiRef) => {\n  apiRef.current.caches.rows = createRowsInternalCache({\n    rows: props.rows,\n    getRowId: props.getRowId,\n    loading: props.loading,\n    rowCount: props.rowCount\n  });\n  return _extends({}, state, {\n    rows: getRowsStateFromCache({\n      apiRef,\n      rowCountProp: props.rowCount,\n      loadingProp: props.loading,\n      previousTree: null,\n      previousTreeDepths: null\n    })\n  });\n};\nexport const useGridRows = (apiRef, props) => {\n  if (process.env.NODE_ENV !== 'production') {\n    try {\n      // Freeze the `rows` prop so developers have a fast failure if they try to use Array.prototype.push().\n      Object.freeze(props.rows);\n    } catch (error) {\n      // Sometimes, it's impossible to freeze, so we give up on it.\n    }\n  }\n  const logger = useGridLogger(apiRef, 'useGridRows');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const lastUpdateMs = React.useRef(Date.now());\n  const timeout = useTimeout();\n  const getRow = React.useCallback(id => {\n    const model = gridRowsLookupSelector(apiRef)[id];\n    if (model) {\n      return model;\n    }\n    const node = apiRef.current.getRowNode(id);\n    if (node && isAutoGeneratedRow(node)) {\n      return {\n        [GRID_ID_AUTOGENERATED]: id\n      };\n    }\n    return null;\n  }, [apiRef]);\n  const getRowIdProp = props.getRowId;\n  const getRowId = React.useCallback(row => {\n    if (GRID_ID_AUTOGENERATED in row) {\n      return row[GRID_ID_AUTOGENERATED];\n    }\n    if (getRowIdProp) {\n      return getRowIdProp(row);\n    }\n    return row.id;\n  }, [getRowIdProp]);\n  const lookup = React.useMemo(() => currentPage.rows.reduce((acc, {\n    id\n  }, index) => {\n    acc[id] = index;\n    return acc;\n  }, {}), [currentPage.rows]);\n  const throttledRowsChange = React.useCallback(({\n    cache,\n    throttle\n  }) => {\n    const run = () => {\n      lastUpdateMs.current = Date.now();\n      apiRef.current.setState(state => _extends({}, state, {\n        rows: getRowsStateFromCache({\n          apiRef,\n          rowCountProp: props.rowCount,\n          loadingProp: props.loading,\n          previousTree: gridRowTreeSelector(apiRef),\n          previousTreeDepths: gridRowTreeDepthsSelector(apiRef)\n        })\n      }));\n      apiRef.current.publishEvent('rowsSet');\n      apiRef.current.forceUpdate();\n    };\n    timeout.clear();\n    apiRef.current.caches.rows = cache;\n    if (!throttle) {\n      run();\n      return;\n    }\n    const throttleRemainingTimeMs = props.throttleRowsMs - (Date.now() - lastUpdateMs.current);\n    if (throttleRemainingTimeMs > 0) {\n      timeout.start(throttleRemainingTimeMs, run);\n      return;\n    }\n    run();\n  }, [props.throttleRowsMs, props.rowCount, props.loading, apiRef, timeout]);\n\n  /**\n   * API METHODS\n   */\n  const setRows = React.useCallback(rows => {\n    logger.debug(`Updating all rows, new length ${rows.length}`);\n    const cache = createRowsInternalCache({\n      rows,\n      getRowId: props.getRowId,\n      loading: props.loading,\n      rowCount: props.rowCount\n    });\n    const prevCache = apiRef.current.caches.rows;\n    cache.rowsBeforePartialUpdates = prevCache.rowsBeforePartialUpdates;\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [logger, props.getRowId, props.loading, props.rowCount, throttledRowsChange, apiRef]);\n  const updateRows = React.useCallback(updates => {\n    if (props.signature === GridSignature.DataGrid && updates.length > 1) {\n      throw new Error([\"MUI: You can't update several rows at once in `apiRef.current.updateRows` on the DataGrid.\", 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    const nonPinnedRowsUpdates = [];\n    updates.forEach(update => {\n      const id = getRowIdFromRowModel(update, props.getRowId, 'A row was provided without id when calling updateRows():');\n      const rowNode = apiRef.current.getRowNode(id);\n      if ((rowNode == null ? void 0 : rowNode.type) === 'pinnedRow') {\n        // @ts-ignore because otherwise `release:build` doesn't work\n        const pinnedRowsCache = apiRef.current.caches.pinnedRows;\n        const prevModel = pinnedRowsCache.idLookup[id];\n        if (prevModel) {\n          pinnedRowsCache.idLookup[id] = _extends({}, prevModel, update);\n        }\n      } else {\n        nonPinnedRowsUpdates.push(update);\n      }\n    });\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows\n    });\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [props.signature, props.getRowId, throttledRowsChange, apiRef]);\n  const getRowModels = React.useCallback(() => {\n    const dataRows = gridDataRowIdsSelector(apiRef);\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    return new Map(dataRows.map(id => {\n      var _idRowsLookup$id;\n      return [id, (_idRowsLookup$id = idRowsLookup[id]) != null ? _idRowsLookup$id : {}];\n    }));\n  }, [apiRef]);\n  const getRowsCount = React.useCallback(() => gridRowCountSelector(apiRef), [apiRef]);\n  const getAllRowIds = React.useCallback(() => gridDataRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndexRelativeToVisibleRows = React.useCallback(id => lookup[id], [lookup]);\n  const setRowChildrenExpansion = React.useCallback((id, isExpanded) => {\n    const currentNode = apiRef.current.getRowNode(id);\n    if (!currentNode) {\n      throw new Error(`MUI: No row with id #${id} found`);\n    }\n    if (currentNode.type !== 'group') {\n      throw new Error('MUI: Only group nodes can be expanded or collapsed');\n    }\n    const newNode = _extends({}, currentNode, {\n      childrenExpanded: isExpanded\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [id]: newNode\n          })\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('rowExpansionChange', newNode);\n  }, [apiRef]);\n  const getRowNode = React.useCallback(id => {\n    var _ref;\n    return (_ref = gridRowTreeSelector(apiRef)[id]) != null ? _ref : null;\n  }, [apiRef]);\n  const getRowGroupChildren = React.useCallback(({\n    skipAutoGeneratedRows = true,\n    groupId,\n    applySorting,\n    applyFiltering\n  }) => {\n    const tree = gridRowTreeSelector(apiRef);\n    let children;\n    if (applySorting) {\n      const groupNode = tree[groupId];\n      if (!groupNode) {\n        return [];\n      }\n      const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n      children = [];\n      const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n      for (let index = startIndex; index < sortedRowIds.length && tree[sortedRowIds[index]].depth > groupNode.depth; index += 1) {\n        const id = sortedRowIds[index];\n        if (!skipAutoGeneratedRows || !isAutoGeneratedRow(tree[id])) {\n          children.push(id);\n        }\n      }\n    } else {\n      children = getTreeNodeDescendants(tree, groupId, skipAutoGeneratedRows);\n    }\n    if (applyFiltering) {\n      const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n      children = children.filter(childId => filteredRowsLookup[childId] !== false);\n    }\n    return children;\n  }, [apiRef]);\n  const setRowIndex = React.useCallback((rowId, targetIndex) => {\n    const node = apiRef.current.getRowNode(rowId);\n    if (!node) {\n      throw new Error(`MUI: No row with id #${rowId} found`);\n    }\n    if (node.parent !== GRID_ROOT_GROUP_ID) {\n      throw new Error(`MUI: The row reordering do not support reordering of grouped rows yet`);\n    }\n    if (node.type !== 'leaf') {\n      throw new Error(`MUI: The row reordering do not support reordering of footer or grouping rows`);\n    }\n    apiRef.current.setState(state => {\n      const group = gridRowTreeSelector(state, apiRef.current.instanceId)[GRID_ROOT_GROUP_ID];\n      const allRows = group.children;\n      const oldIndex = allRows.findIndex(row => row === rowId);\n      if (oldIndex === -1 || oldIndex === targetIndex) {\n        return state;\n      }\n      logger.debug(`Moving row ${rowId} to index ${targetIndex}`);\n      const updatedRows = [...allRows];\n      updatedRows.splice(targetIndex, 0, updatedRows.splice(oldIndex, 1)[0]);\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [GRID_ROOT_GROUP_ID]: _extends({}, group, {\n              children: updatedRows\n            })\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, logger]);\n  const replaceRows = React.useCallback((firstRowToRender, newRows) => {\n    if (props.signature === GridSignature.DataGrid && newRows.length > 1) {\n      throw new Error([\"MUI: You can't replace rows using `apiRef.current.unstable_replaceRows` on the DataGrid.\", 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    if (newRows.length === 0) {\n      return;\n    }\n    const treeDepth = gridRowMaximumTreeDepthSelector(apiRef);\n    if (treeDepth > 1) {\n      throw new Error('`apiRef.current.unstable_replaceRows` is not compatible with tree data and row grouping');\n    }\n    const tree = _extends({}, gridRowTreeSelector(apiRef));\n    const dataRowIdToModelLookup = _extends({}, gridRowsLookupSelector(apiRef));\n    const dataRowIdToIdLookup = _extends({}, gridRowsDataRowIdToIdLookupSelector(apiRef));\n    const rootGroup = tree[GRID_ROOT_GROUP_ID];\n    const rootGroupChildren = [...rootGroup.children];\n    const seenIds = new Set();\n    for (let i = 0; i < newRows.length; i += 1) {\n      const rowModel = newRows[i];\n      const rowId = getRowIdFromRowModel(rowModel, props.getRowId, 'A row was provided without id when calling replaceRows().');\n      const [removedRowId] = rootGroupChildren.splice(firstRowToRender + i, 1, rowId);\n      if (!seenIds.has(removedRowId)) {\n        delete dataRowIdToModelLookup[removedRowId];\n        delete dataRowIdToIdLookup[removedRowId];\n        delete tree[removedRowId];\n      }\n      const rowTreeNodeConfig = {\n        id: rowId,\n        depth: 0,\n        parent: GRID_ROOT_GROUP_ID,\n        type: 'leaf',\n        groupingKey: null\n      };\n      dataRowIdToModelLookup[rowId] = rowModel;\n      dataRowIdToIdLookup[rowId] = rowId;\n      tree[rowId] = rowTreeNodeConfig;\n      seenIds.add(rowId);\n    }\n    tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n      children: rootGroupChildren\n    });\n\n    // Removes potential remaining skeleton rows from the dataRowIds.\n    const dataRowIds = rootGroupChildren.filter(childId => tree[childId].type === 'leaf');\n    apiRef.current.caches.rows.dataRowIdToModelLookup = dataRowIdToModelLookup;\n    apiRef.current.caches.rows.dataRowIdToIdLookup = dataRowIdToIdLookup;\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        dataRowIdToModelLookup,\n        dataRowIdToIdLookup,\n        dataRowIds,\n        tree\n      })\n    }));\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, props.signature, props.getRowId]);\n  const rowApi = {\n    getRow,\n    getRowId,\n    getRowModels,\n    getRowsCount,\n    getAllRowIds,\n    setRows,\n    updateRows,\n    getRowNode,\n    getRowIndexRelativeToVisibleRows,\n    unstable_replaceRows: replaceRows\n  };\n  const rowProApi = {\n    setRowIndex,\n    setRowChildrenExpansion,\n    getRowGroupChildren\n  };\n\n  /**\n   * EVENTS\n   */\n  const groupRows = React.useCallback(() => {\n    logger.info(`Row grouping pre-processing have changed, regenerating the row tree`);\n    let cache;\n    if (apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows) {\n      // The `props.rows` did not change since the last row grouping\n      // We can use the current rows cache which contains the partial updates done recently.\n      cache = _extends({}, apiRef.current.caches.rows, {\n        updates: {\n          type: 'full',\n          rows: gridDataRowIdsSelector(apiRef)\n        }\n      });\n    } else {\n      // The `props.rows` has changed since the last row grouping\n      // We must use the new `props.rows` on the new grouping\n      // This occurs because this event is triggered before the `useEffect` on the rows when both the grouping pre-processing and the rows changes on the same render\n      cache = createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      });\n    }\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [logger, apiRef, props.rows, props.getRowId, props.loading, props.rowCount, throttledRowsChange]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'rowTreeCreation') {\n      groupRows();\n    }\n  }, [groupRows]);\n  const handleStrategyActivityChange = React.useCallback(() => {\n    // `rowTreeCreation` is the only processor ran when `strategyAvailabilityChange` is fired.\n    // All the other processors listen to `rowsSet` which will be published by the `groupRows` method below.\n    if (apiRef.current.getActiveStrategy('rowTree') !== gridRowGroupingNameSelector(apiRef)) {\n      groupRows();\n    }\n  }, [apiRef, groupRows]);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'strategyAvailabilityChange', handleStrategyActivityChange);\n\n  /**\n   * APPLIERS\n   */\n  const applyHydrateRowsProcessor = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const response = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n        tree: gridRowTreeSelector(state, apiRef.current.instanceId),\n        treeDepths: gridRowTreeDepthsSelector(state, apiRef.current.instanceId),\n        dataRowIds: gridDataRowIdsSelector(state, apiRef.current.instanceId),\n        dataRowIdToModelLookup: gridRowsLookupSelector(state, apiRef.current.instanceId),\n        dataRowIdToIdLookup: gridRowsDataRowIdToIdLookupSelector(state, apiRef.current.instanceId)\n      });\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, response, {\n          totalTopLevelRowCount: getTopLevelRowCount({\n            tree: response.tree,\n            rowCountProp: props.rowCount\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.rowCount]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateRows', applyHydrateRowsProcessor);\n  useGridApiMethod(apiRef, rowApi, 'public');\n  useGridApiMethod(apiRef, rowProApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridRows`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    const areNewRowsAlreadyInState = apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows;\n    const isNewLoadingAlreadyInState = apiRef.current.caches.rows.loadingPropBeforePartialUpdates === props.loading;\n    const isNewRowCountAlreadyInState = apiRef.current.caches.rows.rowCountPropBeforePartialUpdates === props.rowCount;\n\n    // The new rows have already been applied (most likely in the `'rowGroupsPreProcessingChange'` listener)\n    if (areNewRowsAlreadyInState) {\n      // If the loading prop has changed, we need to update its value in the state because it won't be done by `throttledRowsChange`\n      if (!isNewLoadingAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            loading: props.loading\n          })\n        }));\n        apiRef.current.caches.rows.loadingPropBeforePartialUpdates = props.loading;\n        apiRef.current.forceUpdate();\n      }\n      if (!isNewRowCountAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            totalRowCount: Math.max(props.rowCount || 0, state.rows.totalRowCount),\n            totalTopLevelRowCount: Math.max(props.rowCount || 0, state.rows.totalTopLevelRowCount)\n          })\n        }));\n        apiRef.current.caches.rows.rowCountPropBeforePartialUpdates = props.rowCount;\n        apiRef.current.forceUpdate();\n      }\n      return;\n    }\n    logger.debug(`Updating all rows, new length ${props.rows.length}`);\n    throttledRowsChange({\n      cache: createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      }),\n      throttle: false\n    });\n  }, [props.rows, props.rowCount, props.getRowId, props.loading, logger, throttledRowsChange, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\nimport { buildRootGroup, GRID_ROOT_GROUP_ID } from './gridRowsUtils';\nconst createFlatRowTree = rows => {\n  const tree = {\n    [GRID_ROOT_GROUP_ID]: _extends({}, buildRootGroup(), {\n      children: rows\n    })\n  };\n  for (let i = 0; i < rows.length; i += 1) {\n    const rowId = rows[i];\n    tree[rowId] = {\n      id: rowId,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rows.length\n    },\n    dataRowIds: rows\n  };\n};\nconst updateFlatRowTree = ({\n  previousTree,\n  actions\n}) => {\n  const tree = _extends({}, previousTree);\n  const idsToRemoveFromRootGroup = {};\n  for (let i = 0; i < actions.remove.length; i += 1) {\n    const idToDelete = actions.remove[i];\n    idsToRemoveFromRootGroup[idToDelete] = true;\n    delete tree[idToDelete];\n  }\n  for (let i = 0; i < actions.insert.length; i += 1) {\n    const idToInsert = actions.insert[i];\n    tree[idToInsert] = {\n      id: idToInsert,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n\n  // TODO rows v6: Support row unpinning\n\n  const rootGroup = tree[GRID_ROOT_GROUP_ID];\n  let rootGroupChildren = [...rootGroup.children, ...actions.insert];\n  if (Object.values(idsToRemoveFromRootGroup).length) {\n    rootGroupChildren = rootGroupChildren.filter(id => !idsToRemoveFromRootGroup[id]);\n  }\n  tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n    children: rootGroupChildren\n  });\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rootGroupChildren.length\n    },\n    dataRowIds: rootGroupChildren\n  };\n};\nconst flatRowTreeCreationMethod = params => {\n  if (params.updates.type === 'full') {\n    return createFlatRowTree(params.updates.rows);\n  }\n  return updateFlatRowTree({\n    previousTree: params.previousTree,\n    actions: params.updates.actions\n  });\n};\nexport const useGridRowsPreProcessors = apiRef => {\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'rowTreeCreation', flatRowTreeCreationMethod);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nimport { gridRowSelectionStateSelector, selectedGridRowsSelector, selectedIdsLookupSelector } from './gridRowSelectionSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../pagination';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { gridExpandedSortedRowIdsSelector } from '../filter/gridFilterSelector';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from '../../../colDef';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isKeyboardEvent, isNavigationKey } from '../../../utils/keyboardUtils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { isEventTargetInPortal } from '../../../utils/domUtils';\nconst getSelectionModelPropValue = (selectionModelProp, prevSelectionModel) => {\n  if (selectionModelProp == null) {\n    return selectionModelProp;\n  }\n  if (Array.isArray(selectionModelProp)) {\n    return selectionModelProp;\n  }\n  if (prevSelectionModel && prevSelectionModel[0] === selectionModelProp) {\n    return prevSelectionModel;\n  }\n  return [selectionModelProp];\n};\nexport const rowSelectionStateInitializer = (state, props) => {\n  var _getSelectionModelPro;\n  return _extends({}, state, {\n    rowSelection: props.rowSelection ? (_getSelectionModelPro = getSelectionModelPropValue(props.rowSelectionModel)) != null ? _getSelectionModelPro : [] : []\n  });\n};\n\n/**\n * @requires useGridRows (state, method) - can be after\n * @requires useGridParamsApi (method) - can be after\n * @requires useGridFocus (state) - can be after\n * @requires useGridKeyboardNavigation (`cellKeyDown` event must first be consumed by it)\n */\nexport const useGridRowSelection = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSelection');\n  const runIfRowSelectionIsEnabled = callback => (...args) => {\n    if (props.rowSelection) {\n      callback(...args);\n    }\n  };\n  const propRowSelectionModel = React.useMemo(() => {\n    return getSelectionModelPropValue(props.rowSelectionModel, gridRowSelectionStateSelector(apiRef.current.state));\n  }, [apiRef, props.rowSelectionModel]);\n  const lastRowToggled = React.useRef(null);\n  apiRef.current.registerControlState({\n    stateId: 'rowSelection',\n    propModel: propRowSelectionModel,\n    propOnChange: props.onRowSelectionModelChange,\n    stateSelector: gridRowSelectionStateSelector,\n    changeEvent: 'rowSelectionChange'\n  });\n  const {\n    checkboxSelection,\n    disableMultipleRowSelection,\n    disableRowSelectionOnClick,\n    isRowSelectable: propIsRowSelectable\n  } = props;\n  const canHaveMultipleSelection = !disableMultipleRowSelection || checkboxSelection;\n  const visibleRows = useGridVisibleRows(apiRef, props);\n  const expandMouseRowRangeSelection = React.useCallback(id => {\n    var _lastRowToggled$curre;\n    let endId = id;\n    const startId = (_lastRowToggled$curre = lastRowToggled.current) != null ? _lastRowToggled$curre : id;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (isSelected) {\n      const visibleRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n      const startIndex = visibleRowIds.findIndex(rowId => rowId === startId);\n      const endIndex = visibleRowIds.findIndex(rowId => rowId === endId);\n      if (startIndex === endIndex) {\n        return;\n      }\n      if (startIndex > endIndex) {\n        endId = visibleRowIds[endIndex + 1];\n      } else {\n        endId = visibleRowIds[endIndex - 1];\n      }\n    }\n    lastRowToggled.current = id;\n    apiRef.current.selectRowRange({\n      startId,\n      endId\n    }, !isSelected);\n  }, [apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const setRowSelectionModel = React.useCallback(model => {\n    if (props.signature === GridSignature.DataGrid && !props.checkboxSelection && Array.isArray(model) && model.length > 1) {\n      throw new Error(['MUI: `rowSelectionModel` can only contain 1 item in DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection.'].join('\\n'));\n    }\n    const currentModel = gridRowSelectionStateSelector(apiRef.current.state);\n    if (currentModel !== model) {\n      logger.debug(`Setting selection model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        rowSelection: props.rowSelection ? model : []\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger, props.rowSelection, props.signature, props.checkboxSelection]);\n  const isRowSelected = React.useCallback(id => gridRowSelectionStateSelector(apiRef.current.state).includes(id), [apiRef]);\n  const isRowSelectable = React.useCallback(id => {\n    if (propIsRowSelectable && !propIsRowSelectable(apiRef.current.getRowParams(id))) {\n      return false;\n    }\n    const rowNode = apiRef.current.getRowNode(id);\n    if ((rowNode == null ? void 0 : rowNode.type) === 'footer' || (rowNode == null ? void 0 : rowNode.type) === 'pinnedRow') {\n      return false;\n    }\n    return true;\n  }, [apiRef, propIsRowSelectable]);\n  const getSelectedRows = React.useCallback(() => selectedGridRowsSelector(apiRef), [apiRef]);\n  const selectRow = React.useCallback((id, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.isRowSelectable(id)) {\n      return;\n    }\n    lastRowToggled.current = id;\n    if (resetSelection) {\n      logger.debug(`Setting selection for row ${id}`);\n      apiRef.current.setRowSelectionModel(isSelected ? [id] : []);\n    } else {\n      logger.debug(`Toggling selection for row ${id}`);\n      const selection = gridRowSelectionStateSelector(apiRef.current.state);\n      const newSelection = selection.filter(el => el !== id);\n      if (isSelected) {\n        newSelection.push(id);\n      }\n      const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n      if (isSelectionValid) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRows = React.useCallback((ids, isSelected = true, resetSelection = false) => {\n    logger.debug(`Setting selection for several rows`);\n    const selectableIds = ids.filter(id => apiRef.current.isRowSelectable(id));\n    let newSelection;\n    if (resetSelection) {\n      newSelection = isSelected ? selectableIds : [];\n    } else {\n      // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n      const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n      selectableIds.forEach(id => {\n        if (isSelected) {\n          selectionLookup[id] = id;\n        } else {\n          delete selectionLookup[id];\n        }\n      });\n      newSelection = Object.values(selectionLookup);\n    }\n    const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n    if (isSelectionValid) {\n      apiRef.current.setRowSelectionModel(newSelection);\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRowRange = React.useCallback(({\n    startId,\n    endId\n  }, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.getRow(startId) || !apiRef.current.getRow(endId)) {\n      return;\n    }\n    logger.debug(`Expanding selection from row ${startId} to row ${endId}`);\n\n    // Using rows from all pages allow to select a range across several pages\n    const allPagesRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n    const startIndex = allPagesRowIds.indexOf(startId);\n    const endIndex = allPagesRowIds.indexOf(endId);\n    const [start, end] = startIndex > endIndex ? [endIndex, startIndex] : [startIndex, endIndex];\n    const rowsBetweenStartAndEnd = allPagesRowIds.slice(start, end + 1);\n    apiRef.current.selectRows(rowsBetweenStartAndEnd, isSelected, resetSelection);\n  }, [apiRef, logger]);\n  const selectionPublicApi = {\n    selectRow,\n    setRowSelectionModel,\n    getSelectedRows,\n    isRowSelected,\n    isRowSelectable\n  };\n  const selectionPrivateApi = {\n    selectRows,\n    selectRowRange\n  };\n  useGridApiMethod(apiRef, selectionPublicApi, 'public');\n  useGridApiMethod(apiRef, selectionPrivateApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * EVENTS\n   */\n  const removeOutdatedSelection = React.useCallback(() => {\n    if (props.keepNonExistentRowsSelected) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    const rowsLookup = gridRowsLookupSelector(apiRef);\n\n    // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n    const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n    let hasChanged = false;\n    currentSelection.forEach(id => {\n      if (!rowsLookup[id]) {\n        delete selectionLookup[id];\n        hasChanged = true;\n      }\n    });\n    if (hasChanged) {\n      apiRef.current.setRowSelectionModel(Object.values(selectionLookup));\n    }\n  }, [apiRef, props.keepNonExistentRowsSelected]);\n  const handleSingleRowSelection = React.useCallback((id, event) => {\n    const hasCtrlKey = event.metaKey || event.ctrlKey;\n\n    // multiple selection is only allowed if:\n    // - it is a checkboxSelection\n    // - it is a keyboard selection\n    // - Ctrl is pressed\n\n    const isMultipleSelectionDisabled = !checkboxSelection && !hasCtrlKey && !isKeyboardEvent(event);\n    const resetSelection = !canHaveMultipleSelection || isMultipleSelectionDisabled;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (resetSelection) {\n      apiRef.current.selectRow(id, !isMultipleSelectionDisabled ? !isSelected : true, true);\n    } else {\n      apiRef.current.selectRow(id, !isSelected, false);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection]);\n  const handleRowClick = React.useCallback((params, event) => {\n    var _closest;\n    if (disableRowSelectionOnClick) {\n      return;\n    }\n    const field = (_closest = event.target.closest(`.${gridClasses.cell}`)) == null ? void 0 : _closest.getAttribute('data-field');\n    if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // click on checkbox should not trigger row selection\n      return;\n    }\n    if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      // click to open the detail panel should not select the row\n      return;\n    }\n    if (field) {\n      const column = apiRef.current.getColumn(field);\n      if ((column == null ? void 0 : column.type) === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    const rowNode = apiRef.current.getRowNode(params.id);\n    if (rowNode.type === 'pinnedRow') {\n      return;\n    }\n    if (event.shiftKey && (canHaveMultipleSelection || checkboxSelection)) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      handleSingleRowSelection(params.id, event);\n    }\n  }, [disableRowSelectionOnClick, canHaveMultipleSelection, checkboxSelection, apiRef, expandMouseRowRangeSelection, handleSingleRowSelection]);\n  const preventSelectionOnShift = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.shiftKey) {\n      var _window$getSelection;\n      (_window$getSelection = window.getSelection()) == null || _window$getSelection.removeAllRanges();\n    }\n  }, [canHaveMultipleSelection]);\n  const handleRowSelectionCheckboxChange = React.useCallback((params, event) => {\n    if (event.nativeEvent.shiftKey) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      apiRef.current.selectRow(params.id, params.value);\n    }\n  }, [apiRef, expandMouseRowRangeSelection]);\n  const handleHeaderSelectionCheckboxChange = React.useCallback(params => {\n    const shouldLimitSelectionToCurrentPage = props.checkboxSelectionVisibleOnly && props.pagination;\n    const rowsToBeSelected = shouldLimitSelectionToCurrentPage ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridExpandedSortedRowIdsSelector(apiRef);\n    apiRef.current.selectRows(rowsToBeSelected, params.value);\n  }, [apiRef, props.checkboxSelectionVisibleOnly, props.pagination]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Get the most recent cell mode because it may have been changed by another listener\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.Edit) {\n      return;\n    }\n\n    // Ignore portal\n    // Do not apply shortcuts if the focus is not on the cell root component\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    if (isNavigationKey(event.key) && event.shiftKey) {\n      // The cell that has focus after the keyboard navigation\n      const focusCell = gridFocusCellSelector(apiRef);\n      if (focusCell && focusCell.id !== params.id) {\n        event.preventDefault();\n        const isNextRowSelected = apiRef.current.isRowSelected(focusCell.id);\n        if (!canHaveMultipleSelection) {\n          apiRef.current.selectRow(focusCell.id, !isNextRowSelected, true);\n          return;\n        }\n        const newRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id);\n        const previousRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\n        let start;\n        let end;\n        if (newRowIndex > previousRowIndex) {\n          if (isNextRowSelected) {\n            // We are navigating to the bottom of the page and adding selected rows\n            start = previousRowIndex;\n            end = newRowIndex - 1;\n          } else {\n            // We are navigating to the bottom of the page and removing selected rows\n            start = previousRowIndex;\n            end = newRowIndex;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isNextRowSelected) {\n            // We are navigating to the top of the page and removing selected rows\n            start = newRowIndex + 1;\n            end = previousRowIndex;\n          } else {\n            // We are navigating to the top of the page and adding selected rows\n            start = newRowIndex;\n            end = previousRowIndex;\n          }\n        }\n        const rowsBetweenStartAndEnd = visibleRows.rows.slice(start, end + 1).map(row => row.id);\n        apiRef.current.selectRows(rowsBetweenStartAndEnd, !isNextRowSelected);\n        return;\n      }\n    }\n    if (event.key === ' ' && event.shiftKey) {\n      event.preventDefault();\n      handleSingleRowSelection(params.id, event);\n      return;\n    }\n    if (event.key === 'a' && (event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n      selectRows(apiRef.current.getAllRowIds(), true);\n    }\n  }, [apiRef, handleSingleRowSelection, selectRows, visibleRows.rows, canHaveMultipleSelection]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', runIfRowSelectionIsEnabled(removeOutdatedSelection));\n  useGridApiEventHandler(apiRef, 'rowClick', runIfRowSelectionIsEnabled(handleRowClick));\n  useGridApiEventHandler(apiRef, 'rowSelectionCheckboxChange', runIfRowSelectionIsEnabled(handleRowSelectionCheckboxChange));\n  useGridApiEventHandler(apiRef, 'headerSelectionCheckboxChange', handleHeaderSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', runIfRowSelectionIsEnabled(preventSelectionOnShift));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfRowSelectionIsEnabled(handleCellKeyDown));\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (propRowSelectionModel !== undefined) {\n      apiRef.current.setRowSelectionModel(propRowSelectionModel);\n    }\n  }, [apiRef, propRowSelectionModel, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection) {\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, props.rowSelection]);\n  const isStateControlled = propRowSelectionModel != null;\n  React.useEffect(() => {\n    if (isStateControlled || !props.rowSelection) {\n      return;\n    }\n\n    // props.isRowSelectable changed\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (isRowSelectable) {\n      const newSelection = currentSelection.filter(id => isRowSelectable(id));\n      if (newSelection.length < currentSelection.length) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection || isStateControlled) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (!canHaveMultipleSelection && currentSelection.length > 1) {\n      // See https://github.com/mui/mui-x/issues/8455\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection, isStateControlled, props.rowSelection]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { isEnterKey } from '../../../utils/keyboardUtils';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortModelSelector } from './gridSortingSelector';\nimport { GRID_ROOT_GROUP_ID, gridRowTreeSelector } from '../rows';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { useGridRegisterStrategyProcessor, GRID_DEFAULT_STRATEGY } from '../../core/strategyProcessing';\nimport { buildAggregatedSortingApplier, mergeStateWithSortModel, getNextGridSortDirection, sanitizeSortModel } from './gridSortingUtils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { getTreeNodeDescendants } from '../rows/gridRowsUtils';\nexport const sortingStateInitializer = (state, props) => {\n  var _ref, _props$sortModel, _props$initialState;\n  const sortModel = (_ref = (_props$sortModel = props.sortModel) != null ? _props$sortModel : (_props$initialState = props.initialState) == null || (_props$initialState = _props$initialState.sorting) == null ? void 0 : _props$initialState.sortModel) != null ? _ref : [];\n  return _extends({}, state, {\n    sorting: {\n      sortModel: sanitizeSortModel(sortModel, props.disableMultipleColumnsSorting),\n      sortedRows: []\n    }\n  });\n};\n\n/**\n * @requires useGridRows (event)\n * @requires useGridColumns (event)\n */\nexport const useGridSorting = (apiRef, props) => {\n  var _props$initialState3;\n  const logger = useGridLogger(apiRef, 'useGridSorting');\n  apiRef.current.registerControlState({\n    stateId: 'sortModel',\n    propModel: props.sortModel,\n    propOnChange: props.onSortModelChange,\n    stateSelector: gridSortModelSelector,\n    changeEvent: 'sortModelChange'\n  });\n  const upsertSortModel = React.useCallback((field, sortItem) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existingIdx = sortModel.findIndex(c => c.field === field);\n    let newSortModel = [...sortModel];\n    if (existingIdx > -1) {\n      if (!sortItem) {\n        newSortModel.splice(existingIdx, 1);\n      } else {\n        newSortModel.splice(existingIdx, 1, sortItem);\n      }\n    } else {\n      newSortModel = [...sortModel, sortItem];\n    }\n    return newSortModel;\n  }, [apiRef]);\n  const createSortItem = React.useCallback((col, directionOverride) => {\n    var _col$sortingOrder2;\n    const sortModel = gridSortModelSelector(apiRef);\n    const existing = sortModel.find(c => c.field === col.field);\n    if (existing) {\n      var _col$sortingOrder;\n      const nextSort = directionOverride === undefined ? getNextGridSortDirection((_col$sortingOrder = col.sortingOrder) != null ? _col$sortingOrder : props.sortingOrder, existing.sort) : directionOverride;\n      return nextSort == null ? undefined : _extends({}, existing, {\n        sort: nextSort\n      });\n    }\n    return {\n      field: col.field,\n      sort: directionOverride === undefined ? getNextGridSortDirection((_col$sortingOrder2 = col.sortingOrder) != null ? _col$sortingOrder2 : props.sortingOrder) : directionOverride\n    };\n  }, [apiRef, props.sortingOrder]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.sortable === false) {\n      return columnMenuItems;\n    }\n    const sortingOrder = colDef.sortingOrder || props.sortingOrder;\n    if (sortingOrder.some(item => !!item)) {\n      return [...columnMenuItems, 'columnMenuSortItem'];\n    }\n    return columnMenuItems;\n  }, [props.sortingOrder]);\n\n  /**\n   * API METHODS\n   */\n  const applySorting = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (props.sortingMode === 'server') {\n        logger.debug('Skipping sorting rows as sortingMode = server');\n        return _extends({}, state, {\n          sorting: _extends({}, state.sorting, {\n            sortedRows: getTreeNodeDescendants(gridRowTreeSelector(apiRef), GRID_ROOT_GROUP_ID, false)\n          })\n        });\n      }\n      const sortModel = gridSortModelSelector(state, apiRef.current.instanceId);\n      const sortRowList = buildAggregatedSortingApplier(sortModel, apiRef);\n      const sortedRows = apiRef.current.applyStrategyProcessor('sorting', {\n        sortRowList\n      });\n      return _extends({}, state, {\n        sorting: _extends({}, state.sorting, {\n          sortedRows\n        })\n      });\n    });\n    apiRef.current.publishEvent('sortedRowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.sortingMode]);\n  const setSortModel = React.useCallback(model => {\n    const currentModel = gridSortModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug(`Setting sort model`);\n      apiRef.current.setState(mergeStateWithSortModel(model, props.disableMultipleColumnsSorting));\n      apiRef.current.forceUpdate();\n      apiRef.current.applySorting();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsSorting]);\n  const sortColumn = React.useCallback((column, direction, allowMultipleSorting) => {\n    if (!column.sortable) {\n      return;\n    }\n    const sortItem = createSortItem(column, direction);\n    let sortModel;\n    if (!allowMultipleSorting || props.disableMultipleColumnsSorting) {\n      sortModel = !sortItem ? [] : [sortItem];\n    } else {\n      sortModel = upsertSortModel(column.field, sortItem);\n    }\n    apiRef.current.setSortModel(sortModel);\n  }, [apiRef, upsertSortModel, createSortItem, props.disableMultipleColumnsSorting]);\n  const getSortModel = React.useCallback(() => gridSortModelSelector(apiRef), [apiRef]);\n  const getSortedRows = React.useCallback(() => {\n    const sortedRows = gridSortedRowEntriesSelector(apiRef);\n    return sortedRows.map(row => row.model);\n  }, [apiRef]);\n  const getSortedRowIds = React.useCallback(() => gridSortedRowIdsSelector(apiRef), [apiRef]);\n  const getRowIdFromRowIndex = React.useCallback(index => apiRef.current.getSortedRowIds()[index], [apiRef]);\n  const sortApi = {\n    getSortModel,\n    getSortedRows,\n    getSortedRowIds,\n    getRowIdFromRowIndex,\n    setSortModel,\n    sortColumn,\n    applySorting\n  };\n  useGridApiMethod(apiRef, sortApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState2;\n    const sortModelToExport = gridSortModelSelector(apiRef);\n    const shouldExportSortModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.sortModel != null ||\n    // Always export if the model has been initialized\n    ((_props$initialState2 = props.initialState) == null || (_props$initialState2 = _props$initialState2.sorting) == null ? void 0 : _props$initialState2.sortModel) != null ||\n    // Export if the model is not empty\n    sortModelToExport.length > 0;\n    if (!shouldExportSortModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      sorting: {\n        sortModel: sortModelToExport\n      }\n    });\n  }, [apiRef, props.sortModel, (_props$initialState3 = props.initialState) == null || (_props$initialState3 = _props$initialState3.sorting) == null ? void 0 : _props$initialState3.sortModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n    const sortModel = (_context$stateToResto = context.stateToRestore.sorting) == null ? void 0 : _context$stateToResto.sortModel;\n    if (sortModel == null) {\n      return params;\n    }\n    apiRef.current.setState(mergeStateWithSortModel(sortModel, props.disableMultipleColumnsSorting));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.applySorting]\n    });\n  }, [apiRef, props.disableMultipleColumnsSorting]);\n  const flatSortingMethod = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n    const rootGroupNode = rowTree[GRID_ROOT_GROUP_ID];\n    const sortedChildren = params.sortRowList ? params.sortRowList(rootGroupNode.children.map(childId => rowTree[childId])) : [...rootGroupNode.children];\n    if (rootGroupNode.footerId != null) {\n      sortedChildren.push(rootGroupNode.footerId);\n    }\n    return sortedChildren;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'sorting', flatSortingMethod);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnHeaderClick = React.useCallback(({\n    colDef\n  }, event) => {\n    const allowMultipleSorting = event.shiftKey || event.metaKey || event.ctrlKey;\n    sortColumn(colDef, undefined, allowMultipleSorting);\n  }, [sortColumn]);\n  const handleColumnHeaderKeyDown = React.useCallback(({\n    colDef\n  }, event) => {\n    // Ctrl + Enter opens the column menu\n    if (isEnterKey(event.key) && !event.ctrlKey && !event.metaKey) {\n      sortColumn(colDef, undefined, event.shiftKey);\n    }\n  }, [sortColumn]);\n  const handleColumnsChange = React.useCallback(() => {\n    // When the columns change we check that the sorted columns are still part of the dataset\n    const sortModel = gridSortModelSelector(apiRef);\n    const latestColumns = gridColumnLookupSelector(apiRef);\n    if (sortModel.length > 0) {\n      const newModel = sortModel.filter(sortItem => latestColumns[sortItem.field]);\n      if (newModel.length < sortModel.length) {\n        apiRef.current.setSortModel(newModel);\n      }\n    }\n  }, [apiRef]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'sorting') {\n      apiRef.current.applySorting();\n    }\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridApiEventHandler(apiRef, 'columnHeaderClick', handleColumnHeaderClick);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'rowsSet', apiRef.current.applySorting);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.applySorting();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.sortModel !== undefined) {\n      apiRef.current.setSortModel(props.sortModel);\n    }\n  }, [apiRef, props.sortModel]);\n};","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridPageSelector, gridPageSizeSelector } from '../pagination/gridPaginationSelector';\nimport { gridRowCountSelector } from '../rows/gridRowsSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridExpandedSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridClasses } from '../../../constants/gridClasses';\n\n// Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\nfunction scrollIntoView(dimensions) {\n  const {\n    clientHeight,\n    scrollTop,\n    offsetHeight,\n    offsetTop\n  } = dimensions;\n  const elementBottom = offsetTop + offsetHeight;\n  // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n  if (offsetHeight > clientHeight) {\n    return offsetTop;\n  }\n  if (elementBottom - clientHeight > scrollTop) {\n    return elementBottom - clientHeight;\n  }\n  if (offsetTop < scrollTop) {\n    return offsetTop;\n  }\n  return undefined;\n}\n\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\nexport const useGridScroll = (apiRef, props) => {\n  const theme = useTheme();\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersElementRef;\n  const virtualScrollerRef = apiRef.current.virtualScrollerRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridExpandedSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n    if (params.colIndex != null) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n      if (typeof params.rowIndex !== 'undefined') {\n        var _visibleSortedRows$pa;\n        const rowId = (_visibleSortedRows$pa = visibleSortedRows[params.rowIndex]) == null ? void 0 : _visibleSortedRows$pa.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n      // When using RTL, `scrollLeft` becomes negative, so we must ensure that we only compare values.\n      scrollCoordinates.left = scrollIntoView({\n        clientHeight: virtualScrollerRef.current.clientWidth,\n        scrollTop: Math.abs(virtualScrollerRef.current.scrollLeft),\n        offsetHeight: cellWidth,\n        offsetTop: columnPositions[params.colIndex]\n      });\n    }\n    if (params.rowIndex != null) {\n      var _querySelector, _querySelector2;\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      const topPinnedRowsHeight = ((_querySelector = virtualScrollerRef.current.querySelector(`.${gridClasses['pinnedRows--top']}`)) == null ? void 0 : _querySelector.clientHeight) || 0;\n      const bottomPinnedRowsHeight = ((_querySelector2 = virtualScrollerRef.current.querySelector(`.${gridClasses['pinnedRows--bottom']}`)) == null ? void 0 : _querySelector2.clientHeight) || 0;\n      scrollCoordinates.top = scrollIntoView({\n        clientHeight: virtualScrollerRef.current.clientHeight - topPinnedRowsHeight - bottomPinnedRowsHeight,\n        scrollTop: virtualScrollerRef.current.scrollTop,\n        offsetHeight: targetOffsetHeight,\n        offsetTop: rowsMeta.positions[elementIndex]\n      });\n    }\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n    return false;\n  }, [logger, apiRef, virtualScrollerRef, props.pagination, visibleSortedRows]);\n  const scroll = React.useCallback(params => {\n    if (virtualScrollerRef.current && params.left != null && colRef.current) {\n      const direction = theme.direction === 'rtl' ? -1 : 1;\n      colRef.current.scrollLeft = params.left;\n      virtualScrollerRef.current.scrollLeft = direction * params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n    if (virtualScrollerRef.current && params.top != null) {\n      virtualScrollerRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [virtualScrollerRef, theme.direction, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!(virtualScrollerRef != null && virtualScrollerRef.current)) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    return {\n      top: virtualScrollerRef.current.scrollTop,\n      left: virtualScrollerRef.current.scrollLeft\n    };\n  }, [virtualScrollerRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'public');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_debounce as debounce, unstable_capitalize as capitalize } from '@mui/utils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridDensityFactorSelector } from '../density/densitySelector';\nimport { gridFilterModelSelector } from '../filter/gridFilterSelector';\nimport { gridPaginationSelector } from '../pagination/gridPaginationSelector';\nimport { gridSortModelSelector } from '../sorting/gridSortingSelector';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from '../../../DataGrid/useDataGridProps';\nexport const rowsMetaStateInitializer = state => _extends({}, state, {\n  rowsMeta: {\n    currentPageTotalHeight: 0,\n    positions: []\n  }\n});\nlet warnedOnceInvalidRowHeight = false;\nconst getValidRowHeight = (rowHeightProp, defaultRowHeight, warningMessage) => {\n  if (typeof rowHeightProp === 'number' && rowHeightProp > 0) {\n    return rowHeightProp;\n  }\n  if (process.env.NODE_ENV !== 'production' && !warnedOnceInvalidRowHeight && typeof rowHeightProp !== 'undefined' && rowHeightProp !== null) {\n    console.warn(warningMessage);\n    warnedOnceInvalidRowHeight = true;\n  }\n  return defaultRowHeight;\n};\nconst rowHeightWarning = [`MUI: The \\`rowHeight\\` prop should be a number greater than 0.`, `The default value will be used instead.`].join('\\n');\nconst getRowHeightWarning = [`MUI: The \\`getRowHeight\\` prop should return a number greater than 0 or 'auto'.`, `The default value will be used instead.`].join('\\n');\n\n/**\n * @requires useGridPageSize (method)\n * @requires useGridPage (method)\n */\nexport const useGridRowsMeta = (apiRef, props) => {\n  const {\n    getRowHeight: getRowHeightProp,\n    getRowSpacing,\n    getEstimatedRowHeight\n  } = props;\n  const rowsHeightLookup = React.useRef(Object.create(null));\n\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  const lastMeasuredRowIndex = React.useRef(-1);\n  const hasRowWithAutoHeight = React.useRef(false);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const validRowHeight = getValidRowHeight(props.rowHeight, DATA_GRID_PROPS_DEFAULT_VALUES.rowHeight, rowHeightWarning);\n  const rowHeight = Math.floor(validRowHeight * densityFactor);\n  const hydrateRowsMeta = React.useCallback(() => {\n    var _pinnedRows$top, _pinnedRows$bottom;\n    hasRowWithAutoHeight.current = false;\n    const calculateRowProcessedSizes = row => {\n      if (!rowsHeightLookup.current[row.id]) {\n        rowsHeightLookup.current[row.id] = {\n          sizes: {\n            baseCenter: rowHeight\n          },\n          isResized: false,\n          autoHeight: false,\n          needsFirstMeasurement: true // Assume all rows will need to be measured by default\n        };\n      }\n      const {\n        isResized,\n        needsFirstMeasurement,\n        sizes\n      } = rowsHeightLookup.current[row.id];\n      let baseRowHeight = typeof rowHeight === 'number' && rowHeight > 0 ? rowHeight : 52;\n      const existingBaseRowHeight = sizes.baseCenter;\n      if (isResized) {\n        // Do not recalculate resized row height and use the value from the lookup\n        baseRowHeight = existingBaseRowHeight;\n      } else if (getRowHeightProp) {\n        const rowHeightFromUser = getRowHeightProp(_extends({}, row, {\n          densityFactor\n        }));\n        if (rowHeightFromUser === 'auto') {\n          if (needsFirstMeasurement) {\n            const estimatedRowHeight = getEstimatedRowHeight ? getEstimatedRowHeight(_extends({}, row, {\n              densityFactor\n            })) : rowHeight;\n\n            // If the row was not measured yet use the estimated row height\n            baseRowHeight = estimatedRowHeight != null ? estimatedRowHeight : rowHeight;\n          } else {\n            baseRowHeight = existingBaseRowHeight;\n          }\n          hasRowWithAutoHeight.current = true;\n          rowsHeightLookup.current[row.id].autoHeight = true;\n        } else {\n          // Default back to base rowHeight if getRowHeight returns invalid value.\n          baseRowHeight = getValidRowHeight(rowHeightFromUser, rowHeight, getRowHeightWarning);\n          rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n          rowsHeightLookup.current[row.id].autoHeight = false;\n        }\n      } else {\n        rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n      }\n      const initialHeights = {};\n      /* eslint-disable-next-line no-restricted-syntax */\n      for (const key in sizes) {\n        if (/^base[A-Z]/.test(key)) {\n          initialHeights[key] = sizes[key];\n        }\n      }\n      initialHeights.baseCenter = baseRowHeight;\n      if (getRowSpacing) {\n        var _spacing$top, _spacing$bottom;\n        const indexRelativeToCurrentPage = apiRef.current.getRowIndexRelativeToVisibleRows(row.id);\n        const spacing = getRowSpacing(_extends({}, row, {\n          isFirstVisible: indexRelativeToCurrentPage === 0,\n          isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n          indexRelativeToCurrentPage\n        }));\n        initialHeights.spacingTop = (_spacing$top = spacing.top) != null ? _spacing$top : 0;\n        initialHeights.spacingBottom = (_spacing$bottom = spacing.bottom) != null ? _spacing$bottom : 0;\n      }\n      const processedSizes = apiRef.current.unstable_applyPipeProcessors('rowHeight', initialHeights, row);\n      rowsHeightLookup.current[row.id].sizes = processedSizes;\n      return processedSizes;\n    };\n    const positions = [];\n    const currentPageTotalHeight = currentPage.rows.reduce((acc, row) => {\n      positions.push(acc);\n      let maximumBaseSize = 0;\n      let otherSizes = 0;\n      const processedSizes = calculateRowProcessedSizes(row);\n      /* eslint-disable-next-line no-restricted-syntax, guard-for-in */\n      for (const key in processedSizes) {\n        const value = processedSizes[key];\n        if (/^base[A-Z]/.test(key)) {\n          maximumBaseSize = value > maximumBaseSize ? value : maximumBaseSize;\n        } else {\n          otherSizes += value;\n        }\n      }\n      return acc + maximumBaseSize + otherSizes;\n    }, 0);\n    pinnedRows == null || (_pinnedRows$top = pinnedRows.top) == null || _pinnedRows$top.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    pinnedRows == null || (_pinnedRows$bottom = pinnedRows.bottom) == null || _pinnedRows$bottom.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowsMeta: {\n          currentPageTotalHeight,\n          positions\n        }\n      });\n    });\n    if (!hasRowWithAutoHeight.current) {\n      // No row has height=auto, so all rows are already measured\n      lastMeasuredRowIndex.current = Infinity;\n    }\n    apiRef.current.forceUpdate();\n  }, [apiRef, currentPage.rows, rowHeight, getRowHeightProp, getRowSpacing, getEstimatedRowHeight, pinnedRows, densityFactor]);\n  const getRowHeight = React.useCallback(rowId => {\n    const height = rowsHeightLookup.current[rowId];\n    return height ? height.sizes.baseCenter : rowHeight;\n  }, [rowHeight]);\n  const getRowInternalSizes = rowId => {\n    var _rowsHeightLookup$cur;\n    return (_rowsHeightLookup$cur = rowsHeightLookup.current[rowId]) == null ? void 0 : _rowsHeightLookup$cur.sizes;\n  };\n  const setRowHeight = React.useCallback((id, height) => {\n    rowsHeightLookup.current[id].sizes.baseCenter = height;\n    rowsHeightLookup.current[id].isResized = true;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n  const debouncedHydrateRowsMeta = React.useMemo(() => debounce(hydrateRowsMeta, props.rowPositionsDebounceMs), [hydrateRowsMeta, props.rowPositionsDebounceMs]);\n  const storeMeasuredRowHeight = React.useCallback((id, height, position) => {\n    if (!rowsHeightLookup.current[id] || !rowsHeightLookup.current[id].autoHeight) {\n      return;\n    }\n\n    // Only trigger hydration if the value is different, otherwise we trigger a loop\n    const needsHydration = rowsHeightLookup.current[id].sizes[`base${capitalize(position)}`] !== height;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    rowsHeightLookup.current[id].sizes[`base${capitalize(position)}`] = height;\n    if (needsHydration) {\n      debouncedHydrateRowsMeta();\n    }\n  }, [debouncedHydrateRowsMeta]);\n  const rowHasAutoHeight = React.useCallback(id => {\n    var _rowsHeightLookup$cur2;\n    return ((_rowsHeightLookup$cur2 = rowsHeightLookup.current[id]) == null ? void 0 : _rowsHeightLookup$cur2.autoHeight) || false;\n  }, []);\n  const getLastMeasuredRowIndex = React.useCallback(() => {\n    return lastMeasuredRowIndex.current;\n  }, []);\n  const setLastMeasuredRowIndex = React.useCallback(index => {\n    if (hasRowWithAutoHeight.current && index > lastMeasuredRowIndex.current) {\n      lastMeasuredRowIndex.current = index;\n    }\n  }, []);\n  const resetRowHeights = React.useCallback(() => {\n    rowsHeightLookup.current = {};\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n\n  // The effect is used to build the rows meta data - currentPageTotalHeight and positions.\n  // Because of variable row height this is needed for the virtualization\n  React.useEffect(() => {\n    hydrateRowsMeta();\n  }, [rowHeight, filterModel, paginationState, sortModel, hydrateRowsMeta]);\n  useGridRegisterPipeApplier(apiRef, 'rowHeight', hydrateRowsMeta);\n  const rowsMetaApi = {\n    unstable_setLastMeasuredRowIndex: setLastMeasuredRowIndex,\n    unstable_getRowHeight: getRowHeight,\n    unstable_getRowInternalSizes: getRowInternalSizes,\n    unstable_setRowHeight: setRowHeight,\n    unstable_storeRowHeightMeasurement: storeMeasuredRowHeight,\n    resetRowHeights\n  };\n  const rowsMetaPrivateApi = {\n    getLastMeasuredRowIndex,\n    rowHasAutoHeight\n  };\n  useGridApiMethod(apiRef, rowsMetaApi, 'public');\n  useGridApiMethod(apiRef, rowsMetaPrivateApi, 'private');\n};","import { isLeaf } from '../../../models/gridColumnGrouping';\nimport { isDeepEqual } from '../../../utils/utils';\n// This is the recurrence function that help writing `unwrapGroupingColumnModel()`\nconst recurrentUnwrapGroupingColumnModel = (columnGroupNode, parents, unwrappedGroupingModelToComplete) => {\n  if (isLeaf(columnGroupNode)) {\n    if (unwrappedGroupingModelToComplete[columnGroupNode.field] !== undefined) {\n      throw new Error([`MUI: columnGroupingModel contains duplicated field`, `column field ${columnGroupNode.field} occurs two times in the grouping model:`, `- ${unwrappedGroupingModelToComplete[columnGroupNode.field].join(' > ')}`, `- ${parents.join(' > ')}`].join('\\n'));\n    }\n    unwrappedGroupingModelToComplete[columnGroupNode.field] = parents;\n    return;\n  }\n  const {\n    groupId,\n    children\n  } = columnGroupNode;\n  children.forEach(child => {\n    recurrentUnwrapGroupingColumnModel(child, [...parents, groupId], unwrappedGroupingModelToComplete);\n  });\n};\n\n/**\n * This is a function that provide for each column the array of its parents.\n * Parents are ordered from the root to the leaf.\n * @param columnGroupingModel The model such as provided in DataGrid props\n * @returns An object `{[field]: groupIds}` where `groupIds` is the parents of the column `field`\n */\nexport const unwrapGroupingColumnModel = columnGroupingModel => {\n  if (!columnGroupingModel) {\n    return {};\n  }\n  const unwrappedSubTree = {};\n  columnGroupingModel.forEach(columnGroupNode => {\n    recurrentUnwrapGroupingColumnModel(columnGroupNode, [], unwrappedSubTree);\n  });\n  return unwrappedSubTree;\n};\nexport const getColumnGroupsHeaderStructure = (orderedColumns, unwrappedGroupingModel, pinnedFields) => {\n  const getParents = field => {\n    var _unwrappedGroupingMod;\n    return (_unwrappedGroupingMod = unwrappedGroupingModel[field]) != null ? _unwrappedGroupingMod : [];\n  };\n  const groupingHeaderStructure = [];\n  const maxDepth = Math.max(...orderedColumns.map(field => getParents(field).length));\n  const haveSameParents = (field1, field2, depth) => isDeepEqual(getParents(field1).slice(0, depth + 1), getParents(field2).slice(0, depth + 1));\n  const haveDifferentContainers = (field1, field2) => {\n    if (pinnedFields != null && pinnedFields.left && pinnedFields.left.includes(field1) && !pinnedFields.left.includes(field2)) {\n      return true;\n    }\n    if (pinnedFields != null && pinnedFields.right && !pinnedFields.right.includes(field1) && pinnedFields.right.includes(field2)) {\n      return true;\n    }\n    return false;\n  };\n  for (let depth = 0; depth < maxDepth; depth += 1) {\n    const depthStructure = orderedColumns.reduce((structure, newField) => {\n      var _getParents$depth;\n      const groupId = (_getParents$depth = getParents(newField)[depth]) != null ? _getParents$depth : null;\n      if (structure.length === 0) {\n        return [{\n          columnFields: [newField],\n          groupId\n        }];\n      }\n      const lastGroup = structure[structure.length - 1];\n      const prevField = lastGroup.columnFields[lastGroup.columnFields.length - 1];\n      const prevGroupId = lastGroup.groupId;\n      if (prevGroupId !== groupId || !haveSameParents(prevField, newField, depth) ||\n      // Fix for https://github.com/mui/mui-x/issues/7041\n      haveDifferentContainers(prevField, newField)) {\n        // It's a new group\n        return [...structure, {\n          columnFields: [newField],\n          groupId\n        }];\n      }\n\n      // It extends the previous group\n      return [...structure.slice(0, structure.length - 1), {\n        columnFields: [...lastGroup.columnFields, newField],\n        groupId\n      }];\n    }, []);\n    groupingHeaderStructure.push(depthStructure);\n  }\n  return groupingHeaderStructure;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"groupId\", \"children\"];\nimport * as React from 'react';\nimport { isLeaf } from '../../../models/gridColumnGrouping';\nimport { gridColumnGroupsLookupSelector, gridColumnGroupsUnwrappedModelSelector } from './gridColumnGroupsSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { getColumnGroupsHeaderStructure, unwrapGroupingColumnModel } from './gridColumnGroupsUtils';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from '../columns';\nconst createGroupLookup = columnGroupingModel => {\n  let groupLookup = {};\n  columnGroupingModel.forEach(node => {\n    if (isLeaf(node)) {\n      return;\n    }\n    const {\n        groupId,\n        children\n      } = node,\n      other = _objectWithoutPropertiesLoose(node, _excluded);\n    if (!groupId) {\n      throw new Error('MUI: An element of the columnGroupingModel does not have either `field` or `groupId`.');\n    }\n    if (!children) {\n      console.warn(`MUI: group groupId=${groupId} has no children.`);\n    }\n    const groupParam = _extends({}, other, {\n      groupId\n    });\n    const subTreeLookup = createGroupLookup(children);\n    if (subTreeLookup[groupId] !== undefined || groupLookup[groupId] !== undefined) {\n      throw new Error(`MUI: The groupId ${groupId} is used multiple times in the columnGroupingModel.`);\n    }\n    groupLookup = _extends({}, groupLookup, subTreeLookup, {\n      [groupId]: groupParam\n    });\n  });\n  return _extends({}, groupLookup);\n};\nexport const columnGroupsStateInitializer = (state, props, apiRef) => {\n  var _props$experimentalFe, _props$columnGrouping, _props$columnGrouping2, _apiRef$current$state;\n  if (!((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.columnGrouping)) {\n    return state;\n  }\n  const columnFields = gridColumnFieldsSelector(apiRef);\n  const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n  const groupLookup = createGroupLookup((_props$columnGrouping = props.columnGroupingModel) != null ? _props$columnGrouping : []);\n  const unwrappedGroupingModel = unwrapGroupingColumnModel((_props$columnGrouping2 = props.columnGroupingModel) != null ? _props$columnGrouping2 : []);\n  const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, // @ts-expect-error Move this part to `Pro` package\n  (_apiRef$current$state = apiRef.current.state.pinnedColumns) != null ? _apiRef$current$state : {});\n  const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => {\n    var _unwrappedGroupingMod, _unwrappedGroupingMod2;\n    return (_unwrappedGroupingMod = (_unwrappedGroupingMod2 = unwrappedGroupingModel[field]) == null ? void 0 : _unwrappedGroupingMod2.length) != null ? _unwrappedGroupingMod : 0;\n  }));\n  return _extends({}, state, {\n    columnGrouping: {\n      lookup: groupLookup,\n      unwrappedGroupingModel,\n      headerStructure: columnGroupsHeaderStructure,\n      maxDepth\n    }\n  });\n};\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnGrouping = (apiRef, props) => {\n  var _props$experimentalFe3;\n  /**\n   * API METHODS\n   */\n  const getColumnGroupPath = React.useCallback(field => {\n    var _unwrappedGroupingMod3;\n    const unwrappedGroupingModel = gridColumnGroupsUnwrappedModelSelector(apiRef);\n    return (_unwrappedGroupingMod3 = unwrappedGroupingModel[field]) != null ? _unwrappedGroupingMod3 : [];\n  }, [apiRef]);\n  const getAllGroupDetails = React.useCallback(() => {\n    const columnGroupLookup = gridColumnGroupsLookupSelector(apiRef);\n    return columnGroupLookup;\n  }, [apiRef]);\n  const columnGroupingApi = {\n    unstable_getColumnGroupPath: getColumnGroupPath,\n    unstable_getAllGroupDetails: getAllGroupDetails\n  };\n  useGridApiMethod(apiRef, columnGroupingApi, 'public');\n  const handleColumnIndexChange = React.useCallback(() => {\n    var _props$columnGrouping3;\n    const unwrappedGroupingModel = unwrapGroupingColumnModel((_props$columnGrouping3 = props.columnGroupingModel) != null ? _props$columnGrouping3 : []);\n    apiRef.current.setState(state => {\n      var _state$columns$ordere, _state$columns, _state$pinnedColumns;\n      const orderedFields = (_state$columns$ordere = (_state$columns = state.columns) == null ? void 0 : _state$columns.orderedFields) != null ? _state$columns$ordere : [];\n\n      // @ts-expect-error Move this logic to `Pro` package\n      const pinnedColumns = (_state$pinnedColumns = state.pinnedColumns) != null ? _state$pinnedColumns : {};\n      const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(orderedFields, unwrappedGroupingModel, pinnedColumns);\n      return _extends({}, state, {\n        columnGrouping: _extends({}, state.columnGrouping, {\n          headerStructure: columnGroupsHeaderStructure\n        })\n      });\n    });\n  }, [apiRef, props.columnGroupingModel]);\n  const updateColumnGroupingState = React.useCallback(columnGroupingModel => {\n    var _props$experimentalFe2, _apiRef$current$getPi, _apiRef$current$getPi2, _apiRef$current;\n    if (!((_props$experimentalFe2 = props.experimentalFeatures) != null && _props$experimentalFe2.columnGrouping)) {\n      return;\n    }\n    // @ts-expect-error Move this logic to `Pro` package\n    const pinnedColumns = (_apiRef$current$getPi = (_apiRef$current$getPi2 = (_apiRef$current = apiRef.current).getPinnedColumns) == null ? void 0 : _apiRef$current$getPi2.call(_apiRef$current)) != null ? _apiRef$current$getPi : {};\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n    const groupLookup = createGroupLookup(columnGroupingModel != null ? columnGroupingModel : []);\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(columnGroupingModel != null ? columnGroupingModel : []);\n    const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, pinnedColumns);\n    const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => {\n      var _unwrappedGroupingMod4, _unwrappedGroupingMod5;\n      return (_unwrappedGroupingMod4 = (_unwrappedGroupingMod5 = unwrappedGroupingModel[field]) == null ? void 0 : _unwrappedGroupingMod5.length) != null ? _unwrappedGroupingMod4 : 0;\n    }));\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        columnGrouping: {\n          lookup: groupLookup,\n          unwrappedGroupingModel,\n          headerStructure: columnGroupsHeaderStructure,\n          maxDepth\n        }\n      });\n    });\n  }, [apiRef, (_props$experimentalFe3 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe3.columnGrouping]);\n  useGridApiEventHandler(apiRef, 'columnIndexChange', handleColumnIndexChange);\n  useGridApiEventHandler(apiRef, 'columnsChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  }, [updateColumnGroupingState, props.columnGroupingModel]);\n};","import { useGridInitialization } from '../hooks/core/useGridInitialization';\nimport { useGridInitializeState } from '../hooks/utils/useGridInitializeState';\nimport { useGridClipboard } from '../hooks/features/clipboard/useGridClipboard';\nimport { columnMenuStateInitializer, useGridColumnMenu } from '../hooks/features/columnMenu/useGridColumnMenu';\nimport { useGridColumns, columnsStateInitializer } from '../hooks/features/columns/useGridColumns';\nimport { densityStateInitializer, useGridDensity } from '../hooks/features/density/useGridDensity';\nimport { useGridCsvExport } from '../hooks/features/export/useGridCsvExport';\nimport { useGridPrintExport } from '../hooks/features/export/useGridPrintExport';\nimport { useGridFilter, filterStateInitializer } from '../hooks/features/filter/useGridFilter';\nimport { focusStateInitializer, useGridFocus } from '../hooks/features/focus/useGridFocus';\nimport { useGridKeyboardNavigation } from '../hooks/features/keyboardNavigation/useGridKeyboardNavigation';\nimport { useGridPagination, paginationStateInitializer } from '../hooks/features/pagination/useGridPagination';\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from '../hooks/features/preferencesPanel/useGridPreferencesPanel';\nimport { useGridEditing, editingStateInitializer } from '../hooks/features/editing/useGridEditing';\nimport { useGridRows, rowsStateInitializer } from '../hooks/features/rows/useGridRows';\nimport { useGridRowsPreProcessors } from '../hooks/features/rows/useGridRowsPreProcessors';\nimport { useGridParamsApi } from '../hooks/features/rows/useGridParamsApi';\nimport { rowSelectionStateInitializer, useGridRowSelection } from '../hooks/features/rowSelection/useGridRowSelection';\nimport { useGridRowSelectionPreProcessors } from '../hooks/features/rowSelection/useGridRowSelectionPreProcessors';\nimport { useGridSorting, sortingStateInitializer } from '../hooks/features/sorting/useGridSorting';\nimport { useGridScroll } from '../hooks/features/scroll/useGridScroll';\nimport { useGridEvents } from '../hooks/features/events/useGridEvents';\nimport { useGridDimensions } from '../hooks/features/dimensions/useGridDimensions';\nimport { rowsMetaStateInitializer, useGridRowsMeta } from '../hooks/features/rows/useGridRowsMeta';\nimport { useGridStatePersistence } from '../hooks/features/statePersistence/useGridStatePersistence';\nimport { useGridColumnSpanning } from '../hooks/features/columns/useGridColumnSpanning';\nimport { useGridColumnGrouping, columnGroupsStateInitializer } from '../hooks/features/columnGrouping/useGridColumnGrouping';\nimport { useGridVirtualization, virtualizationStateInitializer } from '../hooks/features/virtualization';\nexport const useDataGridComponent = (inputApiRef, props) => {\n  const apiRef = useGridInitialization(inputApiRef, props);\n\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n  useGridRowSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n\n  /**\n   * Register all state initializers here.\n   */\n  useGridInitializeState(rowSelectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState(editingStateInitializer, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\n  useGridInitializeState(virtualizationStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridRowSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridParamsApi(apiRef, props);\n  useGridColumnSpanning(apiRef);\n  useGridColumnGrouping(apiRef, props);\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef, props);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef, props);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  useGridVirtualization(apiRef, props);\n  return apiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { getDataGridUtilityClass } from '../../../constants';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from '../../../colDef';\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\nexport const useGridRowSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.orderedFields = [GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.orderedFields];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnSpanning = apiRef => {\n  const lookup = React.useRef({});\n  const setCellColSpanInfo = React.useCallback((rowId, columnIndex, cellColSpanInfo) => {\n    const sizes = lookup.current;\n    if (!sizes[rowId]) {\n      sizes[rowId] = {};\n    }\n    sizes[rowId][columnIndex] = cellColSpanInfo;\n  }, []);\n  const getCellColSpanInfo = React.useCallback((rowId, columnIndex) => {\n    var _lookup$current$rowId;\n    return (_lookup$current$rowId = lookup.current[rowId]) == null ? void 0 : _lookup$current$rowId[columnIndex];\n  }, []);\n\n  // Calculate `colSpan` for the cell.\n  const calculateCellColSpan = React.useCallback(params => {\n    const {\n      columnIndex,\n      rowId,\n      minFirstColumnIndex,\n      maxLastColumnIndex,\n      columns\n    } = params;\n    const columnsLength = columns.length;\n    const column = columns[columnIndex];\n    const colSpan = typeof column.colSpan === 'function' ? column.colSpan(apiRef.current.getCellParams(rowId, column.field)) : column.colSpan;\n    if (!colSpan || colSpan === 1) {\n      setCellColSpanInfo(rowId, columnIndex, {\n        spannedByColSpan: false,\n        cellProps: {\n          colSpan: 1,\n          width: column.computedWidth\n        }\n      });\n      return {\n        colSpan: 1\n      };\n    }\n    let width = column.computedWidth;\n    for (let j = 1; j < colSpan; j += 1) {\n      const nextColumnIndex = columnIndex + j;\n      // Cells should be spanned only within their column section (left-pinned, right-pinned and unpinned).\n      if (nextColumnIndex >= minFirstColumnIndex && nextColumnIndex < maxLastColumnIndex) {\n        const nextColumn = columns[nextColumnIndex];\n        width += nextColumn.computedWidth;\n        setCellColSpanInfo(rowId, columnIndex + j, {\n          spannedByColSpan: true,\n          rightVisibleCellIndex: Math.min(columnIndex + colSpan, columnsLength - 1),\n          leftVisibleCellIndex: columnIndex\n        });\n      }\n      setCellColSpanInfo(rowId, columnIndex, {\n        spannedByColSpan: false,\n        cellProps: {\n          colSpan,\n          width\n        }\n      });\n    }\n    return {\n      colSpan\n    };\n  }, [apiRef, setCellColSpanInfo]);\n\n  // Calculate `colSpan` for each cell in the row\n  const calculateColSpan = React.useCallback(({\n    rowId,\n    minFirstColumn,\n    maxLastColumn,\n    columns\n  }) => {\n    for (let i = minFirstColumn; i < maxLastColumn; i += 1) {\n      const cellProps = calculateCellColSpan({\n        columnIndex: i,\n        rowId,\n        minFirstColumnIndex: minFirstColumn,\n        maxLastColumnIndex: maxLastColumn,\n        columns\n      });\n      if (cellProps.colSpan > 1) {\n        i += cellProps.colSpan - 1;\n      }\n    }\n  }, [calculateCellColSpan]);\n  const columnSpanningPublicApi = {\n    unstable_getCellColSpanInfo: getCellColSpanInfo\n  };\n  const columnSpanningPrivateApi = {\n    calculateColSpan\n  };\n  useGridApiMethod(apiRef, columnSpanningPublicApi, 'public');\n  useGridApiMethod(apiRef, columnSpanningPrivateApi, 'private');\n  const handleColumnReorderChange = React.useCallback(() => {\n    // `colSpan` needs to be recalculated after column reordering\n    lookup.current = {};\n  }, []);\n  useGridApiEventHandler(apiRef, 'columnOrderChange', handleColumnReorderChange);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridExpandedRowCountSelector } from '../filter/gridFilterSelector';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../columns/gridColumnsSelector';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getColumnsToExport } from './utils';\nimport { mergeStateWithPaginationModel } from '../pagination/useGridPagination';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridPrintExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../colDef/gridCheckboxSelectionColDef';\nimport { gridDataRowIdsSelector, gridRowsLookupSelector } from '../rows/gridRowsSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction raf() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      resolve();\n    });\n  });\n}\nfunction buildPrintWindow(title) {\n  const iframeEl = document.createElement('iframe');\n  iframeEl.style.position = 'absolute';\n  iframeEl.style.width = '0px';\n  iframeEl.style.height = '0px';\n  iframeEl.title = title || document.title;\n  return iframeEl;\n}\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  const previousRows = React.useRef([]);\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef]);\n\n  // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns, includeCheckboxes) => new Promise(resolve => {\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    if (includeCheckboxes) {\n      newColumnVisibilityModel[GRID_CHECKBOX_SELECTION_COL_DEF.field] = true;\n    }\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]);\n  const updateGridRowsForPrint = React.useCallback(getRowsToExport => {\n    const rowsToExportIds = getRowsToExport({\n      apiRef\n    });\n    const newRows = rowsToExportIds.map(id => apiRef.current.getRow(id));\n    apiRef.current.setRows(newRows);\n  }, [apiRef]);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    var _querySelector, _querySelector2;\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false,\n      includeCheckboxes: false\n    }, options);\n    const printDoc = printWindow.contentDocument;\n    if (!printDoc) {\n      return;\n    }\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n\n    // Allow to overflow to not hide the border of the last row\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n\n    // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n    gridClone.style.contain = 'size';\n    const columnHeaders = gridClone.querySelector(`.${gridClasses.columnHeaders}`);\n    const columnHeadersInner = columnHeaders.querySelector(`.${gridClasses.columnHeadersInner}`);\n    columnHeadersInner.style.width = '100%';\n    let gridToolbarElementHeight = ((_querySelector = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)) == null ? void 0 : _querySelector.offsetHeight) || 0;\n    let gridFooterElementHeight = ((_querySelector2 = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)) == null ? void 0 : _querySelector2.offsetHeight) || 0;\n    if (normalizeOptions.hideToolbar) {\n      var _gridClone$querySelec;\n      (_gridClone$querySelec = gridClone.querySelector(`.${gridClasses.toolbarContainer}`)) == null || _gridClone$querySelec.remove();\n      gridToolbarElementHeight = 0;\n    }\n    if (normalizeOptions.hideFooter) {\n      var _gridClone$querySelec2;\n      (_gridClone$querySelec2 = gridClone.querySelector(`.${gridClasses.footerContainer}`)) == null || _gridClone$querySelec2.remove();\n      gridFooterElementHeight = 0;\n    }\n\n    // Expand container height to accommodate all rows\n    const computedTotalHeight = rowsMeta.currentPageTotalHeight + getTotalHeaderHeight(apiRef, props.columnHeaderHeight) + gridToolbarElementHeight + gridFooterElementHeight;\n    gridClone.style.height = `${computedTotalHeight}px`;\n    // The height above does not include grid border width, so we need to exclude it\n    gridClone.style.boxSizing = 'content-box';\n\n    // the footer is always being placed at the bottom of the page as if all rows are exported\n    // so if getRowsToExport is being used to only export a subset of rows then we need to\n    // adjust the footer position to be correctly placed at the bottom of the grid\n    if (options != null && options.getRowsToExport) {\n      const gridFooterElement = gridClone.querySelector(`.${gridClasses.footerContainer}`);\n      gridFooterElement.style.position = 'absolute';\n      gridFooterElement.style.width = '100%';\n      gridFooterElement.style.top = `${computedTotalHeight - gridFooterElementHeight}px`;\n    }\n\n    // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n    const container = document.createElement('div');\n    container.appendChild(gridClone);\n    printDoc.body.innerHTML = container.innerHTML;\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n    const stylesheetLoadPromises = [];\n    if (normalizeOptions.copyStyles) {\n      const rootCandidate = gridRootElement.getRootNode();\n      const root = rootCandidate.constructor.name === 'ShadowRoot' ? rootCandidate : doc.current;\n      const headStyleElements = root.querySelectorAll(\"style, link[rel='stylesheet']\");\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n          if (sheet) {\n            let styleCSS = '';\n            // NOTE: for-of is not supported by IE\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n          stylesheetLoadPromises.push(new Promise(resolve => {\n            newHeadStyleElements.addEventListener('load', () => resolve());\n          }));\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    }\n\n    // Trigger print\n    if (process.env.NODE_ENV !== 'test') {\n      // wait for remote stylesheets to load\n      Promise.all(stylesheetLoadPromises).then(() => {\n        printWindow.contentWindow.print();\n      });\n    }\n  }, [apiRef, doc, props.columnHeaderHeight]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    var _previousGridState$cu;\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow);\n\n    // Revert grid to previous state\n    apiRef.current.restoreState(previousGridState.current || {});\n    if (!((_previousGridState$cu = previousGridState.current) != null && (_previousGridState$cu = _previousGridState$cu.columns) != null && _previousGridState$cu.columnVisibilityModel)) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n    apiRef.current.unstable_setVirtualization(true);\n    apiRef.current.setRows(previousRows.current);\n\n    // Clear local state\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n    previousRows.current = [];\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI: No grid root element available.');\n    }\n    previousGridState.current = apiRef.current.exportState();\n    // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n    const gridRowsLookup = gridRowsLookupSelector(apiRef);\n    previousRows.current = gridDataRowIdsSelector(apiRef).map(rowId => gridRowsLookup[rowId]);\n    if (props.pagination) {\n      const visibleRowCount = gridExpandedRowCountSelector(apiRef);\n      const paginationModel = {\n        page: 0,\n        pageSize: visibleRowCount\n      };\n      apiRef.current.updateControlState('pagination',\n      // Using signature `DataGridPro` to allow more than 100 rows in the print export\n      mergeStateWithPaginationModel(visibleRowCount, 'DataGridPro', paginationModel));\n      apiRef.current.forceUpdate();\n    }\n    await updateGridColumnsForPrint(options == null ? void 0 : options.fields, options == null ? void 0 : options.allColumns, options == null ? void 0 : options.includeCheckboxes);\n    if (options != null && options.getRowsToExport) {\n      updateGridRowsForPrint(options.getRowsToExport);\n    }\n    apiRef.current.unstable_setVirtualization(false);\n    await raf(); // wait for the state changes to take action\n    const printWindow = buildPrintWindow(options == null ? void 0 : options.fileName);\n    if (process.env.NODE_ENV === 'test') {\n      doc.current.body.appendChild(printWindow);\n      // In test env, run the all pipeline without waiting for loading\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => {\n        handlePrintWindowLoad(printWindow, options);\n        const mediaQueryList = printWindow.contentWindow.matchMedia('print');\n        mediaQueryList.addEventListener('change', mql => {\n          const isAfterPrint = mql.matches === false;\n          if (isAfterPrint) {\n            handlePrintWindowAfterPrint(printWindow);\n          }\n        });\n      };\n      doc.current.body.appendChild(printWindow);\n    }\n  }, [props, logger, apiRef, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint, updateGridRowsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    var _options$printOptions;\n    if ((_options$printOptions = options.printOptions) != null && _options$printOptions.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","import * as React from 'react';\nimport { unstable_debounce as debounce, unstable_ownerDocument as ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnsTotalWidthSelector } from '../columns';\nimport { gridDensityFactorSelector } from '../density';\nimport { useGridSelector } from '../../utils';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { calculatePinnedRowsHeight } from '../rows/gridRowsUtils';\nimport { getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nconst isTestEnvironment = process.env.NODE_ENV === 'test';\nconst hasScroll = ({\n  content,\n  container,\n  scrollBarSize\n}) => {\n  const hasScrollXIfNoYScrollBar = content.width > container.width;\n  const hasScrollYIfNoXScrollBar = content.height > container.height;\n  let hasScrollX = false;\n  let hasScrollY = false;\n  if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n    hasScrollX = hasScrollXIfNoYScrollBar;\n    hasScrollY = content.height + (hasScrollX ? scrollBarSize : 0) > container.height;\n\n    // We recalculate the scroll x to consider the size of the y scrollbar.\n    if (hasScrollY) {\n      hasScrollX = content.width + scrollBarSize > container.width;\n    }\n  }\n  return {\n    hasScrollX,\n    hasScrollY\n  };\n};\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(null);\n  const fullDimensionsRef = React.useRef(null);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, props.columnHeaderHeight);\n  const updateGridDimensionsRef = React.useCallback(() => {\n    var _apiRef$current$rootE;\n    const rootElement = (_apiRef$current$rootE = apiRef.current.rootElementRef) == null ? void 0 : _apiRef$current$rootE.current;\n    const columnsTotalWidth = gridColumnsTotalWidthSelector(apiRef);\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    if (!rootDimensionsRef.current) {\n      return;\n    }\n    let scrollBarSize;\n    if (props.scrollbarSize != null) {\n      scrollBarSize = props.scrollbarSize;\n    } else if (!columnsTotalWidth || !rootElement) {\n      scrollBarSize = 0;\n    } else {\n      const doc = ownerDocument(rootElement);\n      const scrollDiv = doc.createElement('div');\n      scrollDiv.style.width = '99px';\n      scrollDiv.style.height = '99px';\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.overflow = 'scroll';\n      scrollDiv.className = 'scrollDiv';\n      rootElement.appendChild(scrollDiv);\n      scrollBarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      rootElement.removeChild(scrollDiv);\n    }\n    let viewportOuterSize;\n    let hasScrollX;\n    let hasScrollY;\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > Math.round(rootDimensionsRef.current.width);\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rowsMeta.currentPageTotalHeight + (hasScrollX ? scrollBarSize : 0)\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: Math.max(rootDimensionsRef.current.height - totalHeaderHeight, 0)\n      };\n      const scrollInformation = hasScroll({\n        content: {\n          width: Math.round(columnsTotalWidth),\n          height: rowsMeta.currentPageTotalHeight\n        },\n        container: {\n          width: Math.round(viewportOuterSize.width),\n          height: viewportOuterSize.height - pinnedRowsHeight.top - pinnedRowsHeight.bottom\n        },\n        scrollBarSize\n      });\n      hasScrollY = scrollInformation.hasScrollY;\n      hasScrollX = scrollInformation.hasScrollX;\n    }\n    const viewportInnerSize = {\n      width: viewportOuterSize.width - (hasScrollY ? scrollBarSize : 0),\n      height: viewportOuterSize.height - (hasScrollX ? scrollBarSize : 0)\n    };\n    const newFullDimensions = {\n      viewportOuterSize,\n      viewportInnerSize,\n      hasScrollX,\n      hasScrollY,\n      scrollBarSize\n    };\n    const prevDimensions = fullDimensionsRef.current;\n    fullDimensionsRef.current = newFullDimensions;\n    if (newFullDimensions.viewportInnerSize.width !== (prevDimensions == null ? void 0 : prevDimensions.viewportInnerSize.width) || newFullDimensions.viewportInnerSize.height !== (prevDimensions == null ? void 0 : prevDimensions.viewportInnerSize.height)) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newFullDimensions.viewportInnerSize);\n    }\n  }, [apiRef, props.scrollbarSize, props.autoHeight, rowsMeta.currentPageTotalHeight, totalHeaderHeight]);\n  const [savedSize, setSavedSize] = React.useState();\n  const debouncedSetSavedSize = React.useMemo(() => debounce(setSavedSize, 60), []);\n  const previousSize = React.useRef();\n  useEnhancedEffect(() => {\n    if (savedSize) {\n      updateGridDimensionsRef();\n      apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n    }\n  }, [apiRef, savedSize, updateGridDimensionsRef]);\n\n  // This is the function called by apiRef.current.resize()\n  const resize = React.useCallback(() => {\n    apiRef.current.computeSizeAndPublishResizeEvent();\n  }, [apiRef]);\n  const getRootDimensions = React.useCallback(() => fullDimensionsRef.current, []);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = apiRef.current.getRootDimensions();\n    if (!dimensions) {\n      return 0;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n\n    // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n    if (props.getRowHeight) {\n      const renderContext = apiRef.current.getRenderContext();\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.pagination, props.paginationMode, props.getRowHeight, rowHeight]);\n  const computeSizeAndPublishResizeEvent = React.useCallback(() => {\n    var _apiRef$current$mainE, _previousSize$current, _previousSize$current2;\n    const mainEl = (_apiRef$current$mainE = apiRef.current.mainElementRef) == null ? void 0 : _apiRef$current$mainE.current;\n    if (!mainEl) {\n      return;\n    }\n    const win = ownerWindow(mainEl);\n    const computedStyle = win.getComputedStyle(mainEl);\n    const height = parseFloat(computedStyle.height) || 0;\n    const width = parseFloat(computedStyle.width) || 0;\n    const hasHeightChanged = height !== ((_previousSize$current = previousSize.current) == null ? void 0 : _previousSize$current.height);\n    const hasWidthChanged = width !== ((_previousSize$current2 = previousSize.current) == null ? void 0 : _previousSize$current2.width);\n    if (!previousSize.current || hasHeightChanged || hasWidthChanged) {\n      const size = {\n        width,\n        height\n      };\n      apiRef.current.publishEvent('resize', size);\n      previousSize.current = size;\n    }\n  }, [apiRef]);\n  const dimensionsApi = {\n    resize,\n    getRootDimensions\n  };\n  const dimensionsPrivateApi = {\n    getViewportPageSize,\n    updateGridDimensionsRef,\n    computeSizeAndPublishResizeEvent\n  };\n  useGridApiMethod(apiRef, dimensionsApi, 'public');\n  useGridApiMethod(apiRef, dimensionsPrivateApi, 'private');\n  const isFirstSizing = React.useRef(true);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size;\n\n    // jsdom has no layout capabilities\n    const isJSDOM = /jsdom/.test(window.navigator.userAgent);\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (isTestEnvironment) {\n      // We don't need to debounce the resize for tests.\n      setSavedSize(size);\n      isFirstSizing.current = false;\n      return;\n    }\n    if (isFirstSizing.current) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      setSavedSize(size);\n      isFirstSizing.current = false;\n      return;\n    }\n    debouncedSetSavedSize(size);\n  }, [props.autoHeight, debouncedSetSavedSize, logger]);\n  useEnhancedEffect(() => updateGridDimensionsRef(), [updateGridDimensionsRef]);\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', updateGridDimensionsRef);\n  useGridApiOptionHandler(apiRef, 'paginationModelChange', updateGridDimensionsRef);\n  useGridApiOptionHandler(apiRef, 'columnsChange', updateGridDimensionsRef);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}","import { useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\n/**\n * @requires useGridFocus (event) - can be after, async only\n * @requires useGridColumns (event) - can be after, async only\n */\nexport function useGridEvents(apiRef, props) {\n  useGridApiOptionHandler(apiRef, 'columnHeaderClick', props.onColumnHeaderClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderDoubleClick', props.onColumnHeaderDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOver', props.onColumnHeaderOver);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOut', props.onColumnHeaderOut);\n  useGridApiOptionHandler(apiRef, 'columnHeaderEnter', props.onColumnHeaderEnter);\n  useGridApiOptionHandler(apiRef, 'columnHeaderLeave', props.onColumnHeaderLeave);\n  useGridApiOptionHandler(apiRef, 'cellClick', props.onCellClick);\n  useGridApiOptionHandler(apiRef, 'cellDoubleClick', props.onCellDoubleClick);\n  useGridApiOptionHandler(apiRef, 'cellKeyDown', props.onCellKeyDown);\n  useGridApiOptionHandler(apiRef, 'preferencePanelClose', props.onPreferencePanelClose);\n  useGridApiOptionHandler(apiRef, 'preferencePanelOpen', props.onPreferencePanelOpen);\n  useGridApiOptionHandler(apiRef, 'menuOpen', props.onMenuOpen);\n  useGridApiOptionHandler(apiRef, 'menuClose', props.onMenuClose);\n  useGridApiOptionHandler(apiRef, 'rowDoubleClick', props.onRowDoubleClick);\n  useGridApiOptionHandler(apiRef, 'rowClick', props.onRowClick);\n  useGridApiOptionHandler(apiRef, 'stateChange', props.onStateChange);\n}","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils';\nexport const useGridStatePersistence = apiRef => {\n  const exportState = React.useCallback((params = {}) => {\n    const stateToExport = apiRef.current.unstable_applyPipeProcessors('exportState', {}, params);\n    return stateToExport;\n  }, [apiRef]);\n  const restoreState = React.useCallback(stateToRestore => {\n    const response = apiRef.current.unstable_applyPipeProcessors('restoreState', {\n      callbacks: []\n    }, {\n      stateToRestore\n    });\n    response.callbacks.forEach(callback => {\n      callback();\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const statePersistenceApi = {\n    exportState,\n    restoreState\n  };\n  useGridApiMethod(apiRef, statePersistenceApi, 'public');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScroller']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScroller',\n  overridesResolver: (props, styles) => styles.virtualScroller\n})({\n  overflow: 'auto',\n  height: '100%',\n  // See https://github.com/mui/mui-x/issues/4360\n  position: 'relative',\n  '@media print': {\n    overflow: 'hidden'\n  },\n  zIndex: 0 // See https://github.com/mui/mui-x/issues/10547\n});\nconst GridVirtualScroller = /*#__PURE__*/React.forwardRef(function GridVirtualScroller(props, ref) {\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(VirtualScrollerRoot, _extends({\n    ref: ref\n  }, props, {\n    className: clsx(classes.root, props.className),\n    ownerState: rootProps\n  }));\n});\nexport { GridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (props, overflowedContent) => {\n  const {\n    classes\n  } = props;\n  const slots = {\n    root: ['virtualScrollerContent', overflowedContent && 'virtualScrollerContent--overflowed']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerContent',\n  overridesResolver: (props, styles) => styles.virtualScrollerContent\n})({});\nconst GridVirtualScrollerContent = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerContent(props, ref) {\n  var _props$style;\n  const rootProps = useGridRootProps();\n  const overflowedContent = !rootProps.autoHeight && ((_props$style = props.style) == null ? void 0 : _props$style.minHeight) === 'auto';\n  const classes = useUtilityClasses(rootProps, overflowedContent);\n  return /*#__PURE__*/_jsx(VirtualScrollerContentRoot, _extends({\n    ref: ref\n  }, props, {\n    ownerState: rootProps,\n    className: clsx(classes.root, props.className)\n  }));\n});\nexport { GridVirtualScrollerContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerRenderZone']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerRenderZoneRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerRenderZone',\n  overridesResolver: (props, styles) => styles.virtualScrollerRenderZone\n})({\n  position: 'absolute',\n  display: 'flex',\n  // Prevents margin collapsing when using `getRowSpacing`\n  flexDirection: 'column'\n});\nconst GridVirtualScrollerRenderZone = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerRenderZone(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(VirtualScrollerRenderZoneRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nexport { GridVirtualScrollerRenderZone };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport { GridVirtualScroller } from './virtualization/GridVirtualScroller';\nimport { GridVirtualScrollerContent } from './virtualization/GridVirtualScrollerContent';\nimport { GridVirtualScrollerRenderZone } from './virtualization/GridVirtualScrollerRenderZone';\nimport { useGridVirtualScroller } from '../hooks/features/virtualization/useGridVirtualScroller';\nimport { GridOverlays } from './base/GridOverlays';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DataGridVirtualScroller = /*#__PURE__*/React.forwardRef(function DataGridVirtualScroller(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getRootProps,\n    getContentProps,\n    getRenderZoneProps,\n    getRows\n  } = useGridVirtualScroller({\n    ref\n  });\n  return /*#__PURE__*/_jsxs(GridVirtualScroller, _extends({\n    className: className\n  }, getRootProps(other), {\n    children: [/*#__PURE__*/_jsx(GridOverlays, {}), /*#__PURE__*/_jsx(GridVirtualScrollerContent, _extends({}, getContentProps(), {\n      children: /*#__PURE__*/_jsx(GridVirtualScrollerRenderZone, _extends({}, getRenderZoneProps(), {\n        children: getRows()\n      }))\n    }))]\n  }));\n});\nexport { DataGridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@mui/utils';\nimport { GridBody, GridFooterPlaceholder, GridHeader, GridRoot } from '../components';\nimport { GridContextProvider } from '../context/GridContextProvider';\nimport { useDataGridComponent } from './useDataGridComponent';\nimport { useDataGridProps, DATA_GRID_PROPS_DEFAULT_VALUES } from './useDataGridProps';\nimport { DataGridVirtualScroller } from '../components/DataGridVirtualScroller';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DataGridRaw = /*#__PURE__*/React.forwardRef(function DataGrid(inProps, ref) {\n  const props = useDataGridProps(inProps);\n  const privateApiRef = useDataGridComponent(props.apiRef, props);\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    privateApiRef: privateApiRef,\n    props: props,\n    children: /*#__PURE__*/_jsxs(GridRoot, _extends({\n      className: props.className,\n      style: props.style,\n      sx: props.sx,\n      ref: ref\n    }, props.forwardedProps, {\n      children: [/*#__PURE__*/_jsx(GridHeader, {}), /*#__PURE__*/_jsx(GridBody, {\n        VirtualScrollerComponent: DataGridVirtualScroller\n      }), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\n    }))\n  });\n});\n/**\n * Demos:\n * - [DataGrid](https://mui.com/x/react-data-grid/demo/)\n *\n * API:\n * - [DataGrid API](https://mui.com/x/api/data-grid/data-grid/)\n */\nexport const DataGrid = /*#__PURE__*/React.memo(DataGridRaw);\n\n/**\n * Remove at v7\n * @deprecated\n */\nexport const SUBMIT_FILTER_STROKE_TIME = DATA_GRID_PROPS_DEFAULT_VALUES.filterDebounceMs;\n\n/**\n * Remove at v7\n * @deprecated\n */\nexport const SUBMIT_FILTER_DATE_STROKE_TIME = DATA_GRID_PROPS_DEFAULT_VALUES.filterDebounceMs;\nDataGridRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The ref object that allows Data Grid manipulation. Can be instantiated with `useGridApiRef()`.\n   */\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }),\n  /**\n   * The label of the Data Grid.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * The id of the element containing a label for the Data Grid.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the Data Grid height is dynamic and follow the number of rows in the Data Grid.\n   * @default false\n   */\n  autoHeight: PropTypes.bool,\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n  /**\n   * If `true`, the Data Grid will display an extra column with checkboxes for selecting rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The character used to separate cell values when copying to the clipboard.\n   * @default '\\t'\n   */\n  clipboardCopyCellDelimiter: PropTypes.string,\n  /**\n   * Number of extra columns to be rendered before/after the visible slice.\n   * @default 3\n   */\n  columnBuffer: PropTypes.number,\n  columnGroupingModel: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * Sets the height in pixel of the column headers in the Data Grid.\n   * @default 56\n   */\n  columnHeaderHeight: PropTypes.number,\n  /**\n   * Set of columns of type [[GridColDef[]]].\n   */\n  columns: chainPropTypes(PropTypes.array.isRequired, props => {\n    // @ts-ignore because otherwise `build:api` doesn't work\n    if (props.columns && props.columns.some(column => column.resizable)) {\n      return new Error([`MUI: \\`column.resizable = true\\` is not a valid prop.`, 'Column resizing is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * Number of rows from the `columnBuffer` that can be visible before a new slice is rendered.\n   * @default 3\n   */\n  columnThreshold: PropTypes.number,\n  /**\n   * Set the column visibility model of the Data Grid.\n   * If defined, the Data Grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n  /**\n   * Overridable components.\n   * @deprecated Use `slots` instead.\n   */\n  components: PropTypes.object,\n  /**\n   * Overridable components props dynamically passed to the component at rendering.\n   * @deprecated Use the `slotProps` prop instead.\n   */\n  componentsProps: PropTypes.object,\n  /**\n   * Set the density of the Data Grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n  /**\n   * If `true`, `eval()` is not used for performance optimization.\n   * @default false\n   */\n  disableEval: PropTypes.bool,\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableRowSelectionOnClick: PropTypes.bool,\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n  /**\n   * Unstable features, breaking changes might be introduced.\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    ariaV7: PropTypes.bool,\n    columnGrouping: PropTypes.bool,\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n  /**\n   * The milliseconds delay to wait after a keystroke before triggering filtering.\n   * @default 150\n   */\n  filterDebounceMs: PropTypes.number,\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * Set the filter model of the Data Grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      field: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operator: PropTypes.string.isRequired,\n      value: PropTypes.any\n    })).isRequired,\n    logicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterExcludeHiddenColumns: PropTypes.bool,\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n  /**\n   * Forwarded props for the Data Grid root element.\n   * @ignore - do not document.\n   */\n  forwardedProps: PropTypes.object,\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {React.JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n  /**\n   * If `true`, the diacritics (accents) are ignored when filtering or quick filtering.\n   * E.g. when filter value is `cafe`, the rows with `café` will be visible.\n   * @default false\n   */\n  ignoreDiacritics: PropTypes.bool,\n  /**\n   * The initial state of the DataGrid.\n   * The data in it will be set in the state on initialization but will not be controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the cell is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n  /**\n   * If `true`, a  loading overlay is displayed.\n   */\n  loading: PropTypes.bool,\n  /**\n   * Set the locale text of the Data Grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/v6.19.4/packages/grid/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"error\" (\"warn\" in dev mode)\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containing which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n  /**\n   * Callback called when the data is copied to the clipboard.\n   * @param {string} data The data copied to the clipboard.\n   */\n  onClipboardCopy: PropTypes.func,\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n  /**\n   * Callback fired when the pagination model has changed.\n   * @param {GridPaginationModel} model Updated pagination model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPaginationModelChange: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n  /**\n   * Callback fired when the Data Grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the row changes are committed.\n   * @param {GridRowId} id The row id.\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditCommit: PropTypes.func,\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containing which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridRowSelectionModel} rowSelectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowSelectionModelChange: PropTypes.func,\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n  /**\n   * Callback fired when the state of the Data Grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @ignore - do not document.\n   */\n  onStateChange: PropTypes.func,\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  pagination: props => {\n    if (props.pagination === false) {\n      return new Error(['MUI: `<DataGrid pagination={false} />` is not a valid prop.', 'Infinite scrolling is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to disable the pagination.'].join('\\n'));\n    }\n    return null;\n  },\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The pagination model of type [[GridPaginationModel]] which refers to current `page` and `pageSize`.\n   */\n  paginationModel: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired\n  }),\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n  /**\n   * Number of extra rows to be rendered before/after the visible slice.\n   * @default 3\n   */\n  rowBuffer: PropTypes.number,\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   */\n  rowCount: PropTypes.number,\n  /**\n   * Sets the height in pixel of a row in the Data Grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n  /**\n   * The milliseconds delay to wait after measuring the row height before recalculating row positions.\n   * Setting it to a lower value could be useful when using dynamic row height,\n   * but might reduce performance when displaying a large number of rows.\n   * @default 166\n   */\n  rowPositionsDebounceMs: PropTypes.number,\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   */\n  rows: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /**\n   * If `false`, the row selection mode is disabled.\n   * @default true\n   */\n  rowSelection: PropTypes.bool,\n  /**\n   * Sets the row selection model of the Data Grid.\n   */\n  rowSelectionModel: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired), PropTypes.number, PropTypes.string]),\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n  /**\n   * Number of rows from the `rowBuffer` that can be visible before a new slice is rendered.\n   * @default 3\n   */\n  rowThreshold: PropTypes.number,\n  /**\n   * Override the height/width of the Data Grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n  /**\n   * If `true`, the vertical borders of the cells are displayed.\n   * @default false\n   */\n  showCellVerticalBorder: PropTypes.bool,\n  /**\n   * If `true`, the right border of the column headers are displayed.\n   * @default false\n   */\n  showColumnVerticalBorder: PropTypes.bool,\n  /**\n   * Overridable components props dynamically passed to the component at rendering.\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable components.\n   */\n  slots: PropTypes.object,\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n  /**\n   * Set the sort model of the Data Grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the Data Grid will not use `valueFormatter` when exporting to CSV or copying to clipboard.\n   * If an object is provided, you can choose to ignore the `valueFormatter` for CSV export or clipboard export.\n   * @default false\n   */\n  unstable_ignoreValueFormatterDuringExport: PropTypes.oneOfType([PropTypes.shape({\n    clipboardExport: PropTypes.bool,\n    csvExport: PropTypes.bool\n  }), PropTypes.bool])\n};","export default function chainPropTypes(propType1, propType2) {\n  if (process.env.NODE_ENV === 'production') {\n    return () => null;\n  }\n  return function validate(...args) {\n    return propType1(...args) || propType2(...args);\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridNoResultsOverlay = /*#__PURE__*/React.forwardRef(function GridNoResultsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noResultsOverlayLabel = apiRef.current.getLocaleText('noResultsOverlayLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noResultsOverlayLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sortingOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridColumnUnsortedIcon = /*#__PURE__*/React.memo(function GridColumnHeaderSortIcon(props) {\n  const {\n      sortingOrder\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const [nextSortDirection] = sortingOrder;\n  const Icon = nextSortDirection === 'asc' ? rootProps.slots.columnSortedAscendingIcon : rootProps.slots.columnSortedDescendingIcon;\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({}, other)) : null;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"native\"];\nimport * as React from 'react';\nimport MUIMenuItem from '@mui/material/MenuItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MUISelectOption(_ref) {\n  let {\n      native\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (native) {\n    return /*#__PURE__*/_jsx(\"option\", _extends({}, props));\n  }\n  return /*#__PURE__*/_jsx(MUIMenuItem, _extends({}, props));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport MUICheckbox from '@mui/material/Checkbox';\nimport MUITextField from '@mui/material/TextField';\nimport MUIFormControl from '@mui/material/FormControl';\nimport MUISelect from '@mui/material/Select';\nimport MUISwitch from '@mui/material/Switch';\nimport MUIButton from '@mui/material/Button';\nimport MUIIconButton from '@mui/material/IconButton';\nimport MUIInputAdornment from '@mui/material/InputAdornment';\nimport MUITooltip from '@mui/material/Tooltip';\nimport MUIPopper from '@mui/material/Popper';\nimport MUIInputLabel from '@mui/material/InputLabel';\nimport MUIChip from '@mui/material/Chip';\nimport { GridColumnUnsortedIcon } from './icons/GridColumnUnsortedIcon';\nimport { GridAddIcon, GridArrowDownwardIcon, GridArrowUpwardIcon, GridCheckIcon, GridCloseIcon, GridColumnIcon, GridDragIcon, GridExpandMoreIcon, GridFilterAltIcon, GridFilterListIcon, GridKeyboardArrowRight, GridMoreVertIcon, GridRemoveIcon, GridSaveAltIcon, GridSearchIcon, GridSeparatorIcon, GridTableRowsIcon, GridTripleDotsVerticalIcon, GridViewHeadlineIcon, GridViewStreamIcon, GridVisibilityOffIcon, GridViewColumnIcon, GridClearIcon, GridLoadIcon, GridDeleteForeverIcon } from './icons';\nimport MUISelectOption from './components/MUISelectOption';\nconst iconSlots = {\n  BooleanCellTrueIcon: GridCheckIcon,\n  BooleanCellFalseIcon: GridCloseIcon,\n  ColumnMenuIcon: GridTripleDotsVerticalIcon,\n  OpenFilterButtonIcon: GridFilterListIcon,\n  FilterPanelDeleteIcon: GridCloseIcon,\n  ColumnFilteredIcon: GridFilterAltIcon,\n  ColumnSelectorIcon: GridColumnIcon,\n  ColumnUnsortedIcon: GridColumnUnsortedIcon,\n  ColumnSortedAscendingIcon: GridArrowUpwardIcon,\n  ColumnSortedDescendingIcon: GridArrowDownwardIcon,\n  ColumnResizeIcon: GridSeparatorIcon,\n  DensityCompactIcon: GridViewHeadlineIcon,\n  DensityStandardIcon: GridTableRowsIcon,\n  DensityComfortableIcon: GridViewStreamIcon,\n  ExportIcon: GridSaveAltIcon,\n  MoreActionsIcon: GridMoreVertIcon,\n  TreeDataCollapseIcon: GridExpandMoreIcon,\n  TreeDataExpandIcon: GridKeyboardArrowRight,\n  GroupingCriteriaCollapseIcon: GridExpandMoreIcon,\n  GroupingCriteriaExpandIcon: GridKeyboardArrowRight,\n  DetailPanelExpandIcon: GridAddIcon,\n  DetailPanelCollapseIcon: GridRemoveIcon,\n  RowReorderIcon: GridDragIcon,\n  QuickFilterIcon: GridSearchIcon,\n  QuickFilterClearIcon: GridCloseIcon,\n  ColumnMenuHideIcon: GridVisibilityOffIcon,\n  ColumnMenuSortAscendingIcon: GridArrowUpwardIcon,\n  ColumnMenuSortDescendingIcon: GridArrowDownwardIcon,\n  ColumnMenuFilterIcon: GridFilterAltIcon,\n  ColumnMenuManageColumnsIcon: GridViewColumnIcon,\n  ColumnMenuClearIcon: GridClearIcon,\n  LoadIcon: GridLoadIcon,\n  FilterPanelAddIcon: GridAddIcon,\n  FilterPanelRemoveAllIcon: GridDeleteForeverIcon,\n  ColumnReorderIcon: GridDragIcon\n};\nconst materialSlots = _extends({}, iconSlots, {\n  BaseCheckbox: MUICheckbox,\n  BaseTextField: MUITextField,\n  BaseFormControl: MUIFormControl,\n  BaseSelect: MUISelect,\n  BaseSwitch: MUISwitch,\n  BaseButton: MUIButton,\n  BaseIconButton: MUIIconButton,\n  BaseInputAdornment: MUIInputAdornment,\n  BaseTooltip: MUITooltip,\n  BasePopper: MUIPopper,\n  BaseInputLabel: MUIInputLabel,\n  BaseSelectOption: MUISelectOption,\n  BaseChip: MUIChip\n});\nexport default materialSlots;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridSkeletonCell, GridColumnsPanel, GridFilterPanel, GridFooter, GridLoadingOverlay, GridNoRowsOverlay, GridPagination, GridPanel, GridPreferencesPanel, GridRow, GridColumnHeaderFilterIconButton, GridRowCount } from '../components';\nimport { GridCellV7 } from '../components/cell/GridCell';\nimport { GridColumnHeaders } from '../components/GridColumnHeaders';\nimport { GridColumnMenu } from '../components/menu/columnMenu/GridColumnMenu';\nimport { GridNoResultsOverlay } from '../components/GridNoResultsOverlay';\nimport materialSlots from '../material';\n\n// TODO: camelCase these key. It's a private helper now.\n// Remove then need to call `uncapitalizeObjectKeys`.\nexport const DATA_GRID_DEFAULT_SLOTS_COMPONENTS = _extends({}, materialSlots, {\n  Cell: GridCellV7,\n  SkeletonCell: GridSkeletonCell,\n  ColumnHeaderFilterIconButton: GridColumnHeaderFilterIconButton,\n  ColumnMenu: GridColumnMenu,\n  ColumnHeaders: GridColumnHeaders,\n  Footer: GridFooter,\n  FooterRowCount: GridRowCount,\n  Toolbar: null,\n  PreferencesPanel: GridPreferencesPanel,\n  LoadingOverlay: GridLoadingOverlay,\n  NoResultsOverlay: GridNoResultsOverlay,\n  NoRowsOverlay: GridNoRowsOverlay,\n  Pagination: GridPagination,\n  FilterPanel: GridFilterPanel,\n  ColumnsPanel: GridColumnsPanel,\n  Panel: GridPanel,\n  Row: GridRow\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// TODO v7: This file exist only to simplify typing between\n// components/componentsProps and slots/slotProps\n// Should be deleted when components/componentsProps are removed\n\nexport const uncapitalizeObjectKeys = capitalizedObject => {\n  if (capitalizedObject === undefined) {\n    return undefined;\n  }\n  return Object.keys(capitalizedObject).reduce((acc, key) => _extends({}, acc, {\n    [`${key.charAt(0).toLowerCase()}${key.slice(1)}`]: capitalizedObject[key]\n  }), {});\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"components\", \"componentsProps\"];\nimport * as React from 'react';\n/** Gathers props for the root element into a single `.forwardedProps` field */\nfunction groupForwardedProps(props) {\n  var _props$forwardedProps;\n  const keys = Object.keys(props);\n  if (!keys.some(key => key.startsWith('aria-') || key.startsWith('data-'))) {\n    return props;\n  }\n  const newProps = {};\n  const forwardedProps = (_props$forwardedProps = props.forwardedProps) != null ? _props$forwardedProps : {};\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    if (key.startsWith('aria-') || key.startsWith('data-')) {\n      forwardedProps[key] = props[key];\n    } else {\n      newProps[key] = props[key];\n    }\n  }\n  newProps.forwardedProps = forwardedProps;\n  return newProps;\n}\nexport function useProps(allProps) {\n  return React.useMemo(() => {\n    const {\n        components,\n        componentsProps\n      } = allProps,\n      themedProps = _objectWithoutPropertiesLoose(allProps, _excluded);\n    return [components, componentsProps, groupForwardedProps(themedProps)];\n  }, [allProps]);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { GRID_DEFAULT_LOCALE_TEXT } from '../constants';\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS } from '../constants/defaultGridSlotsComponents';\nimport { GridEditModes } from '../models';\nimport { computeSlots, useProps, uncapitalizeObjectKeys } from '../internals/utils';\nconst DATA_GRID_FORCED_PROPS = {\n  disableMultipleColumnsFiltering: true,\n  disableMultipleColumnsSorting: true,\n  disableMultipleRowSelection: true,\n  throttleRowsMs: undefined,\n  hideFooterRowCount: false,\n  pagination: true,\n  checkboxSelectionVisibleOnly: false,\n  disableColumnReorder: true,\n  disableColumnResize: true,\n  keepColumnPositionIfDraggedOutside: false,\n  signature: 'DataGrid'\n};\n\n/**\n * The default values of `DataGridPropsWithDefaultValues` to inject in the props of DataGrid.\n */\nexport const DATA_GRID_PROPS_DEFAULT_VALUES = {\n  autoHeight: false,\n  autoPageSize: false,\n  checkboxSelection: false,\n  checkboxSelectionVisibleOnly: false,\n  columnBuffer: 3,\n  rowBuffer: 3,\n  columnThreshold: 3,\n  rowThreshold: 3,\n  rowSelection: true,\n  density: 'standard',\n  disableColumnFilter: false,\n  disableColumnMenu: false,\n  disableColumnSelector: false,\n  disableDensitySelector: false,\n  disableEval: false,\n  disableMultipleColumnsFiltering: false,\n  disableMultipleRowSelection: false,\n  disableMultipleColumnsSorting: false,\n  disableRowSelectionOnClick: false,\n  disableVirtualization: false,\n  editMode: GridEditModes.Cell,\n  filterMode: 'client',\n  filterDebounceMs: 150,\n  columnHeaderHeight: 56,\n  hideFooter: false,\n  hideFooterPagination: false,\n  hideFooterRowCount: false,\n  hideFooterSelectedRowCount: false,\n  ignoreDiacritics: false,\n  logger: console,\n  logLevel: process.env.NODE_ENV === 'production' ? 'error' : 'warn',\n  pagination: false,\n  paginationMode: 'client',\n  rowHeight: 52,\n  pageSizeOptions: [25, 50, 100],\n  rowSpacingType: 'margin',\n  showCellVerticalBorder: false,\n  showColumnVerticalBorder: false,\n  sortingOrder: ['asc', 'desc', null],\n  sortingMode: 'client',\n  throttleRowsMs: 0,\n  disableColumnReorder: false,\n  disableColumnResize: false,\n  keepNonExistentRowsSelected: false,\n  keepColumnPositionIfDraggedOutside: false,\n  unstable_ignoreValueFormatterDuringExport: false,\n  clipboardCopyCellDelimiter: '\\t',\n  rowPositionsDebounceMs: 166\n};\nconst defaultSlots = uncapitalizeObjectKeys(DATA_GRID_DEFAULT_SLOTS_COMPONENTS);\nexport const useDataGridProps = inProps => {\n  const [components, componentsProps, themedProps] = useProps(useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  }));\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const slots = React.useMemo(() => computeSlots({\n    defaultSlots,\n    slots: themedProps.slots,\n    components\n  }), [components, themedProps.slots]);\n  return React.useMemo(() => {\n    var _themedProps$slotProp;\n    return _extends({}, DATA_GRID_PROPS_DEFAULT_VALUES, themedProps, {\n      localeText,\n      slots,\n      slotProps: (_themedProps$slotProp = themedProps.slotProps) != null ? _themedProps$slotProp : componentsProps\n    }, DATA_GRID_FORCED_PROPS);\n  }, [themedProps, localeText, slots, componentsProps]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { uncapitalizeObjectKeys } from './slotsMigration';\n\n// TODO v7: Remove `components` and usages of `UncapitalizeObjectKeys` type\n// after converting keys in Grid(Pro|Premium)SlotsComponent to camelCase.\n// https://github.com/mui/mui-x/issues/7940\nexport function computeSlots({\n  defaultSlots,\n  slots,\n  components\n}) {\n  const overrides = slots != null ? slots : components ? uncapitalizeObjectKeys(components) : null;\n  if (!overrides || Object.keys(overrides).length === 0) {\n    return defaultSlots;\n  }\n  const result = _extends({}, defaultSlots);\n  Object.keys(overrides).forEach(key => {\n    const k = key;\n    if (overrides[k] !== undefined) {\n      result[k] = overrides[k];\n    }\n  });\n  return result;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderActionsCell } from '../components/cell/GridActionsCell';\nexport const GRID_ACTIONS_COLUMN_TYPE = 'actions';\nexport const GRID_ACTIONS_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  width: 100,\n  align: 'center',\n  headerAlign: 'center',\n  headerName: '',\n  disableColumnMenu: true,\n  disableExport: true,\n  renderCell: renderActionsCell,\n  getApplyQuickFilterFn: undefined,\n  getApplyQuickFilterFnV7: undefined\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderBooleanCell } from '../components/cell/GridBooleanCell';\nimport { renderEditBooleanCell } from '../components/cell/GridEditBooleanCell';\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridBooleanOperators } from './gridBooleanOperators';\nfunction gridBooleanFormatter({\n  value,\n  api\n}) {\n  return value ? api.getLocaleText('booleanCellTrueLabel') : api.getLocaleText('booleanCellFalseLabel');\n}\nconst stringToBoolean = value => {\n  switch (value.toLowerCase().trim()) {\n    case 'true':\n    case 'yes':\n    case '1':\n      return true;\n    case 'false':\n    case 'no':\n    case '0':\n    case 'null':\n    case 'undefined':\n      return false;\n    default:\n      return undefined;\n  }\n};\nexport const GRID_BOOLEAN_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'boolean',\n  align: 'center',\n  headerAlign: 'center',\n  renderCell: renderBooleanCell,\n  renderEditCell: renderEditBooleanCell,\n  sortComparator: gridNumberComparator,\n  valueFormatter: gridBooleanFormatter,\n  filterOperators: getGridBooleanOperators(),\n  getApplyQuickFilterFn: undefined,\n  getApplyQuickFilterFnV7: undefined,\n  // @ts-ignore\n  aggregable: false,\n  // @ts-ignore\n  pastedValueParser: value => stringToBoolean(value)\n});","import { GridFilterInputBoolean } from '../components/panel/filterPanel/GridFilterInputBoolean';\nimport { convertLegacyOperators } from './utils';\nexport const getGridBooleanOperators = () => convertLegacyOperators([{\n  value: 'is',\n  getApplyFilterFnV7: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const valueAsBoolean = filterItem.value === 'true';\n    return value => {\n      return Boolean(value) === valueAsBoolean;\n    };\n  },\n  InputComponent: GridFilterInputBoolean\n}]);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from '../components/columnSelection/GridCellCheckboxRenderer';\nimport { GridHeaderCheckbox } from '../components/columnSelection/GridHeaderCheckbox';\nimport { selectedIdsLookupSelector } from '../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_CHECKBOX_SELECTION_FIELD = '__check__';\nexport const GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  field: GRID_CHECKBOX_SELECTION_FIELD,\n  type: 'checkboxSelection',\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  getApplyQuickFilterFnV7: undefined,\n  valueGetter: params => {\n    const selectionLookup = selectedIdsLookupSelector(params.api.state, params.api.instanceId);\n    return selectionLookup[params.id] !== undefined;\n  },\n  renderHeader: params => /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params)),\n  renderCell: params => /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params))\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridDateComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridDateOperators } from './gridDateOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditDateCell } from '../components/cell/GridEditDateCell';\nfunction throwIfNotDateObject({\n  value,\n  columnType,\n  rowId,\n  field\n}) {\n  if (!(value instanceof Date)) {\n    throw new Error([`MUI: \\`${columnType}\\` column type only accepts \\`Date\\` objects as values.`, 'Use `valueGetter` to transform the value into a `Date` object.', `Row ID: ${rowId}, field: \"${field}\".`].join('\\n'));\n  }\n}\nexport function gridDateFormatter({\n  value,\n  field,\n  id\n}) {\n  if (!value) {\n    return '';\n  }\n  throwIfNotDateObject({\n    value,\n    columnType: 'date',\n    rowId: id,\n    field\n  });\n  return value.toLocaleDateString();\n}\nexport function gridDateTimeFormatter({\n  value,\n  field,\n  id\n}) {\n  if (!value) {\n    return '';\n  }\n  throwIfNotDateObject({\n    value,\n    columnType: 'dateTime',\n    rowId: id,\n    field\n  });\n  return value.toLocaleString();\n}\nexport const GRID_DATE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'date',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateFormatter,\n  filterOperators: getGridDateOperators(),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});\nexport const GRID_DATETIME_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'dateTime',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateTimeFormatter,\n  filterOperators: getGridDateOperators(true),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});","import { GridFilterInputDate } from '../components/panel/filterPanel/GridFilterInputDate';\nimport { convertLegacyOperators } from './utils';\nconst dateRegex = /(\\d+)-(\\d+)-(\\d+)/;\nconst dateTimeRegex = /(\\d+)-(\\d+)-(\\d+)T(\\d+):(\\d+)/;\nfunction buildApplyFilterFn(filterItem, compareFn, showTime, keepHours) {\n  if (!filterItem.value) {\n    return null;\n  }\n  const [year, month, day, hour, minute] = filterItem.value.match(showTime ? dateTimeRegex : dateRegex).slice(1).map(Number);\n  const time = new Date(year, month - 1, day, hour || 0, minute || 0).getTime();\n  return value => {\n    if (!value) {\n      return false;\n    }\n    if (keepHours) {\n      return compareFn(value.getTime(), time);\n    }\n\n    // Make a copy of the date to not reset the hours in the original object\n    const dateCopy = new Date(value);\n    const timeToCompare = dateCopy.setHours(showTime ? value.getHours() : 0, showTime ? value.getMinutes() : 0, 0, 0);\n    return compareFn(timeToCompare, time);\n  };\n}\nexport const getGridDateOperators = showTime => convertLegacyOperators([{\n  value: 'is',\n  getApplyFilterFnV7: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 === value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'not',\n  getApplyFilterFnV7: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 !== value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'after',\n  getApplyFilterFnV7: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 > value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrAfter',\n  getApplyFilterFnV7: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 >= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'before',\n  getApplyFilterFnV7: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 < value2, showTime, !showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrBefore',\n  getApplyFilterFnV7: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 <= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFnV7: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFnV7: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}]);","import { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { GRID_NUMERIC_COL_DEF } from './gridNumericColDef';\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from './gridDateColDef';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { GRID_SINGLE_SELECT_COL_DEF } from './gridSingleSelectColDef';\nimport { GRID_ACTIONS_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from './gridActionsColDef';\nexport const DEFAULT_GRID_COL_TYPE_KEY = '__default__';\nexport const getGridDefaultColumnTypes = () => {\n  const nativeColumnTypes = {\n    string: GRID_STRING_COL_DEF,\n    number: GRID_NUMERIC_COL_DEF,\n    date: GRID_DATE_COL_DEF,\n    dateTime: GRID_DATETIME_COL_DEF,\n    boolean: GRID_BOOLEAN_COL_DEF,\n    singleSelect: GRID_SINGLE_SELECT_COL_DEF,\n    [GRID_ACTIONS_COLUMN_TYPE]: GRID_ACTIONS_COL_DEF,\n    [DEFAULT_GRID_COL_TYPE_KEY]: GRID_STRING_COL_DEF\n  };\n  return nativeColumnTypes;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { isNumber } from '../utils/utils';\nimport { getGridNumericOperators, getGridNumericQuickFilterFn } from './gridNumericOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { convertQuickFilterV7ToLegacy } from './utils';\nexport const GRID_NUMERIC_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'number',\n  align: 'right',\n  headerAlign: 'right',\n  sortComparator: gridNumberComparator,\n  valueParser: value => value === '' ? null : Number(value),\n  valueFormatter: ({\n    value\n  }) => isNumber(value) ? value.toLocaleString() : value || '',\n  filterOperators: getGridNumericOperators(),\n  getApplyQuickFilterFn: convertQuickFilterV7ToLegacy(getGridNumericQuickFilterFn),\n  getApplyQuickFilterFnV7: getGridNumericQuickFilterFn\n});","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nimport { convertLegacyOperators, tagInternalFilter } from './utils';\nconst parseNumericValue = value => {\n  if (value == null) {\n    return null;\n  }\n  return Number(value);\n};\nexport const getGridNumericQuickFilterFn = tagInternalFilter(value => {\n  if (value == null || Number.isNaN(value) || value === '') {\n    return null;\n  }\n  return columnValue => {\n    return parseNumericValue(columnValue) === parseNumericValue(value);\n  };\n});\nexport const getGridNumericOperators = () => convertLegacyOperators([{\n  value: '=',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) === filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '!=',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) !== filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) > filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>=',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) >= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) < filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<=',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) <= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFnV7: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFnV7: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFnV7: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    return value => {\n      return value != null && filterItem.value.includes(Number(value));\n    };\n  },\n  InputComponent: GridFilterInputMultipleValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}]);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditSingleSelectCell } from '../components/cell/GridEditSingleSelectCell';\nimport { getGridSingleSelectOperators } from './gridSingleSelectOperators';\nimport { isSingleSelectColDef } from '../components/panel/filterPanel/filterPanelUtils';\nimport { isObject } from '../utils/utils';\nconst isArrayOfObjects = options => {\n  return typeof options[0] === 'object';\n};\nconst defaultGetOptionValue = value => {\n  return isObject(value) ? value.value : value;\n};\nconst defaultGetOptionLabel = value => {\n  return isObject(value) ? value.label : String(value);\n};\nexport const GRID_SINGLE_SELECT_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'singleSelect',\n  getOptionLabel: defaultGetOptionLabel,\n  getOptionValue: defaultGetOptionValue,\n  valueFormatter(params) {\n    const {\n      id,\n      field,\n      value,\n      api\n    } = params;\n    const colDef = params.api.getColumn(field);\n    if (!isSingleSelectColDef(colDef)) {\n      return '';\n    }\n    let valueOptions;\n    if (typeof colDef.valueOptions === 'function') {\n      valueOptions = colDef.valueOptions({\n        id,\n        row: id ? api.getRow(id) : null,\n        field\n      });\n    } else {\n      valueOptions = colDef.valueOptions;\n    }\n    if (value == null) {\n      return '';\n    }\n    if (!valueOptions) {\n      return value;\n    }\n    if (!isArrayOfObjects(valueOptions)) {\n      return colDef.getOptionLabel(value);\n    }\n    const valueOption = valueOptions.find(option => colDef.getOptionValue(option) === value);\n    return valueOption ? colDef.getOptionLabel(valueOption) : '';\n  },\n  renderEditCell: renderEditSingleSelectCell,\n  filterOperators: getGridSingleSelectOperators(),\n  // @ts-ignore\n  pastedValueParser: (value, params) => {\n    const colDef = params.colDef;\n    const colDefValueOptions = colDef.valueOptions;\n    const valueOptions = typeof colDefValueOptions === 'function' ? colDefValueOptions({\n      field: colDef.field\n    }) : colDefValueOptions || [];\n    const getOptionValue = colDef.getOptionValue;\n    const valueOption = valueOptions.find(option => {\n      if (getOptionValue(option) === value) {\n        return true;\n      }\n      return false;\n    });\n    if (valueOption) {\n      return value;\n    }\n    // do not paste the value if it is not in the valueOptions\n    return undefined;\n  }\n});","import { GridFilterInputSingleSelect } from '../components/panel/filterPanel/GridFilterInputSingleSelect';\nimport { GridFilterInputMultipleSingleSelect } from '../components/panel/filterPanel/GridFilterInputMultipleSingleSelect';\nimport { isObject } from '../utils/utils';\nimport { convertLegacyOperators } from './utils';\nconst parseObjectValue = value => {\n  if (value == null || !isObject(value)) {\n    return value;\n  }\n  return value.value;\n};\nexport const getGridSingleSelectOperators = () => convertLegacyOperators([{\n  value: 'is',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) === parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'not',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) !== parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFnV7: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValues = filterItem.value.map(parseObjectValue);\n    return value => filterItemValues.includes(parseObjectValue(value));\n  },\n  InputComponent: GridFilterInputMultipleSingleSelect\n}]);","import { renderEditInputCell } from '../components/cell/GridEditInputCell';\nimport { gridStringOrNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridStringOperators, getGridStringQuickFilterFn } from './gridStringOperators';\nimport { convertQuickFilterV7ToLegacy } from './utils';\n\n/**\n * TODO: Move pro and premium properties outside of this Community file\n */\nexport const GRID_STRING_COL_DEF = {\n  width: 100,\n  minWidth: 50,\n  maxWidth: Infinity,\n  hideable: true,\n  sortable: true,\n  resizable: true,\n  filterable: true,\n  groupable: true,\n  pinnable: true,\n  // @ts-ignore\n  aggregable: true,\n  editable: false,\n  sortComparator: gridStringOrNumberComparator,\n  type: 'string',\n  align: 'left',\n  filterOperators: getGridStringOperators(),\n  renderEditCell: renderEditInputCell,\n  getApplyQuickFilterFn: convertQuickFilterV7ToLegacy(getGridStringQuickFilterFn),\n  getApplyQuickFilterFnV7: getGridStringQuickFilterFn\n};","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { escapeRegExp } from '../utils/utils';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nimport { convertLegacyOperators, tagInternalFilter } from './utils';\nimport { removeDiacritics } from '../hooks/features/filter/gridFilterUtils';\nexport const getGridStringQuickFilterFn = tagInternalFilter(value => {\n  if (!value) {\n    return null;\n  }\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return (_, row, column, apiRef) => {\n    let columnValue = apiRef.current.getRowFormattedValue(row, column);\n    if (apiRef.current.ignoreDiacritics) {\n      columnValue = removeDiacritics(columnValue);\n    }\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n});\nexport const getGridStringOperators = (disableTrim = false) => convertLegacyOperators([{\n  value: 'contains',\n  getApplyFilterFnV7: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(escapeRegExp(filterItemValue), 'i');\n    return value => {\n      return value != null ? filterRegex.test(String(value)) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'equals',\n  getApplyFilterFnV7: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => {\n      return value != null ? collator.compare(filterItemValue, value.toString()) === 0 : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'startsWith',\n  getApplyFilterFnV7: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`^${escapeRegExp(filterItemValue)}.*$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'endsWith',\n  getApplyFilterFnV7: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`.*${escapeRegExp(filterItemValue)}$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'isEmpty',\n  getApplyFilterFnV7: () => {\n    return value => {\n      return value === '' || value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFnV7: () => {\n    return value => {\n      return value !== '' && value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFnV7: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(val => val.trim());\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => value != null ? filterItemValue.some(filterValue => {\n      return collator.compare(filterValue, value.toString() || '') === 0;\n    }) : false;\n  },\n  InputComponent: GridFilterInputMultipleValue\n}]);","import _extends from \"@babel/runtime/helpers/esm/extends\";\n/**\n * A global API ref, for v7-to-legacy converter\n */\nexport const GLOBAL_API_REF = {\n  current: null\n};\n\n/**\n * A tagger to determine if the filter is internal or custom user-supplied.\n * To be a valid internal filter, the v7 function *must* be defined/redefined at\n * the same time as the legacy one.\n * https://github.com/mui/mui-x/pull/9254#discussion_r1231095551\n */\nexport function tagInternalFilter(fn) {\n  fn.isInternal = true;\n  return fn;\n}\nexport function isInternalFilter(fn) {\n  return fn !== undefined && fn.isInternal === true;\n}\nexport function convertFilterV7ToLegacy(fn) {\n  return tagInternalFilter((filterItem, column) => {\n    const filterFn = fn(filterItem, column);\n    if (!filterFn) {\n      return filterFn;\n    }\n    return cellParams => {\n      return filterFn(cellParams.value, cellParams.row, column, GLOBAL_API_REF.current);\n    };\n  });\n}\nexport function convertLegacyOperators(ops) {\n  return ops.map(op => {\n    return _extends({}, op, {\n      getApplyFilterFn: convertFilterV7ToLegacy(op.getApplyFilterFnV7),\n      getApplyFilterFnV7: tagInternalFilter(op.getApplyFilterFnV7)\n    });\n  });\n}\nexport function convertQuickFilterV7ToLegacy(fn) {\n  return tagInternalFilter((filterItem, column, apiRef) => {\n    const filterFn = fn(filterItem, column, apiRef);\n    if (!filterFn) {\n      return filterFn;\n    }\n    return cellParams => {\n      return filterFn(cellParams.value, cellParams.row, column, apiRef);\n    };\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridColumnGroupsLookupSelector } from '../../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { isEventTargetInPortal } from '../../utils/domUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    headerAlign,\n    isDragging,\n    showColumnBorder,\n    groupId\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', headerAlign === 'left' && 'columnHeader--alignLeft', headerAlign === 'center' && 'columnHeader--alignCenter', headerAlign === 'right' && 'columnHeader--alignRight', isDragging && 'columnHeader--moving', showColumnBorder && 'columnHeader--showColumnBorder', showColumnBorder && 'columnHeader--withRightBorder', 'withBorderColor', groupId === null ? 'columnHeader--emptyGroup' : 'columnHeader--filledGroup'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer', 'withBorderColor'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnGroupHeader(props) {\n  var _columnGroupsLookup$g;\n  const {\n    groupId,\n    width,\n    depth,\n    maxDepth,\n    fields,\n    height,\n    colIndex,\n    hasFocus,\n    tabIndex,\n    isLastColumn\n  } = props;\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const columnGroupsLookup = useGridSelector(apiRef, gridColumnGroupsLookupSelector);\n  const group = groupId ? columnGroupsLookup[groupId] : {};\n  const {\n    headerName = groupId != null ? groupId : '',\n    description = '',\n    headerAlign = undefined\n  } = group;\n  let headerComponent;\n  const render = groupId && ((_columnGroupsLookup$g = columnGroupsLookup[groupId]) == null ? void 0 : _columnGroupsLookup$g.renderHeaderGroup);\n  const renderParams = React.useMemo(() => ({\n    groupId,\n    headerName,\n    description,\n    depth,\n    maxDepth,\n    fields,\n    colIndex,\n    isLastColumn\n  }), [groupId, headerName, description, depth, maxDepth, fields, colIndex, isLastColumn]);\n  if (groupId && render) {\n    headerComponent = render(renderParams);\n  }\n  const showColumnBorder = rootProps.showColumnVerticalBorder;\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showColumnBorder,\n    headerAlign,\n    depth,\n    isDragging: false\n  });\n  const label = headerName != null ? headerName : groupId;\n  const id = useId();\n  const elementId = groupId === null ? `empty-group-cell-${id}` : groupId;\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (hasFocus) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus == null || elementToFocus.focus();\n    }\n  }, [apiRef, hasFocus]);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, renderParams, event);\n  },\n  // For now this is stupid, because renderParams change all the time.\n  // Need to move it's computation in the api, such that for a given depth+columnField, I can get the group parameters\n  [apiRef, renderParams]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onKeyDown: publish('columnGroupHeaderKeyDown'),\n    onFocus: publish('columnGroupHeaderFocus'),\n    onBlur: publish('columnGroupHeaderBlur')\n  }), [publish]);\n  const headerClassName = typeof group.headerClassName === 'function' ? group.headerClassName(renderParams) : group.headerClassName;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: false,\n    colIndex: colIndex,\n    height: height,\n    isResizing: false,\n    sortDirection: null,\n    hasFocus: false,\n    tabIndex: tabIndex,\n    isDraggable: false,\n    headerComponent: headerComponent,\n    headerClassName: headerClassName,\n    description: description,\n    elementId: elementId,\n    width: width,\n    columnMenuIconButton: null,\n    columnTitleIconButtons: null,\n    resizable: false,\n    label: label,\n    \"aria-colspan\": fields.length\n    // The fields are wrapped between |-...-| to avoid confusion between fields \"id\" and \"id2\" when using selector data-fields~=\n    ,\n    \"data-fields\": `|-${fields.join('-|-')}-|`\n  }, mouseEventsHandlers));\n}\nexport { GridColumnGroupHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { styled, useTheme } from '@mui/material/styles';\nimport { defaultMemoize } from 'reselect';\nimport { useGridSelector } from '../../utils';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridColumnHeaderItem } from '../../../components/columnHeaders/GridColumnHeaderItem';\nimport { getFirstColumnIndexToRender, getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { areRenderContextsEqual, getRenderableIndexes } from '../virtualization/useGridVirtualScroller';\nimport { gridVirtualizationColumnEnabledSelector } from '../virtualization';\nimport { GridColumnGroupHeader } from '../../../components/columnHeaders/GridColumnGroupHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (props, styles) => styles.columnHeaderRow\n})(() => ({\n  display: 'flex'\n}));\nfunction isUIEvent(event) {\n  return !!event.target;\n}\nexport const useGridColumnHeaders = props => {\n  const {\n    innerRef: innerRefProp,\n    minColumnIndex = 0,\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnPositions,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    densityFactor,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const theme = useTheme();\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridPrivateApiContext();\n  const hasVirtualization = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector);\n  const rootProps = useGridRootProps();\n  const innerRef = React.useRef(null);\n  const handleInnerRef = useForkRef(innerRefProp, innerRef);\n  const [renderContext, setRenderContextRaw] = React.useState(null);\n  const prevRenderContext = React.useRef(renderContext);\n  const prevScrollLeft = React.useRef(0);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, rootProps.columnHeaderHeight);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  const setRenderContext = React.useCallback(nextRenderContext => {\n    if (renderContext && nextRenderContext && areRenderContextsEqual(renderContext, nextRenderContext)) {\n      return;\n    }\n    setRenderContextRaw(nextRenderContext);\n  }, [renderContext]);\n  React.useEffect(() => {\n    apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n  }, [apiRef]);\n\n  // memoize `getFirstColumnIndexToRender`, since it's called on scroll\n  const getFirstColumnIndexToRenderRef = React.useRef(defaultMemoize(getFirstColumnIndexToRender, {\n    equalityCheck: (a, b) => ['firstColumnIndex', 'minColumnIndex', 'columnBuffer'].every(key => a[key] === b[key])\n  }));\n  const updateInnerPosition = React.useCallback(nextRenderContext => {\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex,\n      columnBuffer: rootProps.columnBuffer,\n      firstRowToRender,\n      lastRowToRender,\n      apiRef,\n      visibleRows: currentPage.rows\n    });\n    const direction = theme.direction === 'ltr' ? 1 : -1;\n    const offset = firstColumnToRender > 0 ? prevScrollLeft.current - direction * columnPositions[firstColumnToRender] : prevScrollLeft.current;\n    innerRef.current.style.transform = `translate3d(${-offset}px, 0px, 0px)`;\n  }, [columnPositions, minColumnIndex, rootProps.columnBuffer, apiRef, currentPage.rows, rootProps.rowBuffer, theme.direction]);\n  React.useLayoutEffect(() => {\n    if (renderContext) {\n      updateInnerPosition(renderContext);\n    }\n  }, [renderContext, updateInnerPosition]);\n  const handleScroll = React.useCallback(({\n    left,\n    renderContext: nextRenderContext = null\n  }, event) => {\n    var _prevRenderContext$cu, _prevRenderContext$cu2;\n    if (!innerRef.current) {\n      return;\n    }\n\n    // Ignore vertical scroll.\n    // Excepts the first event which sets the previous render context.\n    if (prevScrollLeft.current === left && ((_prevRenderContext$cu = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu.firstColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.firstColumnIndex) && ((_prevRenderContext$cu2 = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu2.lastColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.lastColumnIndex)) {\n      return;\n    }\n    prevScrollLeft.current = left;\n\n    // We can only update the position when we guarantee that the render context has been\n    // rendered. This is achieved using ReactDOM.flushSync or when the context doesn't change.\n    let canUpdateInnerPosition = false;\n    if (nextRenderContext !== prevRenderContext.current || !prevRenderContext.current) {\n      // ReactDOM.flushSync cannot be called on `scroll` events fired inside effects\n      if (isUIEvent(event)) {\n        // To prevent flickering, the inner position can only be updated after the new context has\n        // been rendered. ReactDOM.flushSync ensures that the state changes will happen before\n        // updating the position.\n        ReactDOM.flushSync(() => {\n          setRenderContext(nextRenderContext);\n        });\n        canUpdateInnerPosition = true;\n      } else {\n        setRenderContext(nextRenderContext);\n      }\n      prevRenderContext.current = nextRenderContext;\n    } else {\n      canUpdateInnerPosition = true;\n    }\n\n    // Pass directly the render context to avoid waiting for the next render\n    if (nextRenderContext && canUpdateInnerPosition) {\n      updateInnerPosition(nextRenderContext);\n    }\n  }, [updateInnerPosition, setRenderContext]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScroll);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  const getColumnsToRender = params => {\n    const {\n      renderContext: nextRenderContext = renderContext,\n      minFirstColumn = minColumnIndex,\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n    if (!nextRenderContext) {\n      return null;\n    }\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = !hasVirtualization ? 0 : getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex: minFirstColumn,\n      columnBuffer: rootProps.columnBuffer,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const lastColumnToRender = !hasVirtualization ? maxLastColumn : Math.min(nextRenderContext.lastColumnIndex + rootProps.columnBuffer, maxLastColumn);\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender,\n      minFirstColumn,\n      maxLastColumn\n    };\n  };\n  const getColumnHeaders = (params, other = {}) => {\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender == null) {\n      return null;\n    }\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = columnsToRender;\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex\n      }, other), colDef.field));\n    }\n    return /*#__PURE__*/_jsx(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      children: columns\n    });\n  };\n  const getColumnGroupHeaders = params => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender == null || columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const columns = [];\n    const headerToRender = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      var _apiRef$current$unsta, _apiRef$current$unsta2;\n      const rowStructure = columnGroupsHeaderStructure[depth];\n      const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n      const firstGroupToRender = (_apiRef$current$unsta = apiRef.current.unstable_getColumnGroupPath(firstColumnFieldToRender)[depth]) != null ? _apiRef$current$unsta : null;\n      const firstGroupIndex = rowStructure.findIndex(({\n        groupId,\n        columnFields\n      }) => groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender));\n      const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n      const lastGroupToRender = (_apiRef$current$unsta2 = apiRef.current.unstable_getColumnGroupPath(lastColumnFieldToRender)[depth]) != null ? _apiRef$current$unsta2 : null;\n      const lastGroupIndex = rowStructure.findIndex(({\n        groupId,\n        columnFields\n      }) => groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender));\n      const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n        return _extends({}, groupStructure, {\n          columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n        });\n      }).filter(groupStructure => groupStructure.columnFields.length > 0);\n      const firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n      const hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n      const leftOverflow = hiddenGroupColumns.reduce((acc, field) => {\n        var _column$computedWidth;\n        const column = apiRef.current.getColumn(field);\n        return acc + ((_column$computedWidth = column.computedWidth) != null ? _column$computedWidth : 0);\n      }, 0);\n      let columnIndex = firstColumnToRender;\n      const elements = visibleColumnGroupHeader.map(({\n        groupId,\n        columnFields\n      }) => {\n        const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n        const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n        const headerInfo = {\n          groupId,\n          width: columnFields.reduce((acc, field) => acc + apiRef.current.getColumn(field).computedWidth, 0),\n          fields: columnFields,\n          colIndex: columnIndex,\n          hasFocus,\n          tabIndex\n        };\n        columnIndex += columnFields.length;\n        return headerInfo;\n      });\n      headerToRender.push({\n        leftOverflow,\n        elements\n      });\n    }\n    headerToRender.forEach((depthInfo, depthIndex) => {\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderRow, {\n        style: {\n          height: `${headerHeight}px`,\n          transform: `translateX(-${depthInfo.leftOverflow}px)`\n        },\n        role: \"row\",\n        \"aria-rowindex\": depthIndex + 1,\n        ownerState: rootProps,\n        children: depthInfo.elements.map(({\n          groupId,\n          width,\n          fields,\n          colIndex,\n          hasFocus,\n          tabIndex\n        }, groupIndex) => {\n          return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n            groupId: groupId,\n            width: width,\n            fields: fields,\n            colIndex: colIndex,\n            depth: depthIndex,\n            isLastColumn: colIndex === visibleColumns.length - fields.length,\n            maxDepth: headerToRender.length,\n            height: headerHeight,\n            hasFocus: hasFocus,\n            tabIndex: tabIndex\n          }, groupIndex);\n        })\n      }, depthIndex));\n    });\n    return columns;\n  };\n  const rootStyle = {\n    minHeight: totalHeaderHeight,\n    maxHeight: totalHeaderHeight,\n    lineHeight: `${headerHeight}px`\n  };\n  return {\n    renderContext,\n    getColumnHeaders,\n    getColumnsToRender,\n    getColumnGroupHeaders,\n    isDragging: !!dragCol,\n    getRootProps: (other = {}) => _extends({\n      style: rootStyle\n    }, other),\n    getInnerProps: () => ({\n      ref: handleInnerRef,\n      role: 'rowgroup'\n    }),\n    headerHeight\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaders', 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeadersRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaders',\n  overridesResolver: (props, styles) => styles.columnHeaders\n})({\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'flex',\n  alignItems: 'center',\n  boxSizing: 'border-box',\n  borderBottom: '1px solid',\n  borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n  borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n});\nexport const GridBaseColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeadersRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other, {\n    role: \"presentation\"\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"isDragging\", \"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { gridClasses, getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    isDragging,\n    hasScrollX,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeadersInner', isDragging && 'columnHeaderDropZone', hasScrollX && 'columnHeadersInner--scrollable']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeadersInnerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'columnHeadersInner',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses.columnHeaderDropZone}`]: styles.columnHeaderDropZone\n  }, styles.columnHeadersInner]\n})(() => ({\n  display: 'flex',\n  alignItems: 'flex-start',\n  flexDirection: 'column',\n  [`&.${gridClasses.columnHeaderDropZone} .${gridClasses.columnHeaderDraggableContainer}`]: {\n    cursor: 'move'\n  },\n  [`&.${gridClasses['columnHeadersInner--scrollable']} .${gridClasses.columnHeader}:last-child`]: {\n    borderRight: 'none'\n  }\n}));\nexport const GridColumnHeadersInner = /*#__PURE__*/React.forwardRef(function GridColumnHeadersInner(props, ref) {\n  var _apiRef$current$getRo, _apiRef$current$getRo2;\n  const {\n      isDragging,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    isDragging,\n    hasScrollX: (_apiRef$current$getRo = (_apiRef$current$getRo2 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo2.hasScrollX) != null ? _apiRef$current$getRo : false\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridColumnHeadersInnerRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root),\n    ownerState: ownerState\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"innerRef\", \"className\", \"visibleColumns\", \"sortColumnLookup\", \"filterColumnLookup\", \"columnPositions\", \"columnHeaderTabIndexState\", \"columnGroupHeaderTabIndexState\", \"columnHeaderFocus\", \"columnGroupHeaderFocus\", \"densityFactor\", \"headerGroupingMaxDepth\", \"columnMenuState\", \"columnVisibility\", \"columnGroupsHeaderStructure\", \"hasOtherElementInTabSequence\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { fastMemo } from '../utils/fastMemo';\nimport { useGridColumnHeaders } from '../hooks/features/columnHeaders/useGridColumnHeaders';\nimport { GridBaseColumnHeaders } from './columnHeaders/GridBaseColumnHeaders';\nimport { GridColumnHeadersInner } from './columnHeaders/GridColumnHeadersInner';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnsHeaders(props, ref) {\n  const {\n      innerRef,\n      visibleColumns,\n      sortColumnLookup,\n      filterColumnLookup,\n      columnPositions,\n      columnHeaderTabIndexState,\n      columnGroupHeaderTabIndexState,\n      columnHeaderFocus,\n      columnGroupHeaderFocus,\n      densityFactor,\n      headerGroupingMaxDepth,\n      columnMenuState,\n      columnVisibility,\n      columnGroupsHeaderStructure,\n      hasOtherElementInTabSequence\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isDragging,\n    getRootProps,\n    getInnerProps,\n    getColumnHeaders,\n    getColumnGroupHeaders\n  } = useGridColumnHeaders({\n    innerRef,\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnPositions,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    densityFactor,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  });\n  return /*#__PURE__*/_jsx(GridBaseColumnHeaders, _extends({\n    ref: ref\n  }, getRootProps(other), {\n    children: /*#__PURE__*/_jsxs(GridColumnHeadersInner, _extends({\n      isDragging: isDragging\n    }, getInnerProps(), {\n      children: [getColumnGroupHeaders(), getColumnHeaders()]\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaders.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnGroupHeaderFocus: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupHeaderTabIndexState: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupsHeaderStructure: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.shape({\n    columnFields: PropTypes.arrayOf(PropTypes.string).isRequired,\n    groupId: PropTypes.string\n  }))).isRequired,\n  columnHeaderFocus: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnHeaderTabIndexState: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnMenuState: PropTypes.shape({\n    field: PropTypes.string,\n    open: PropTypes.bool.isRequired\n  }).isRequired,\n  columnPositions: PropTypes.arrayOf(PropTypes.number).isRequired,\n  columnVisibility: PropTypes.object.isRequired,\n  densityFactor: PropTypes.number.isRequired,\n  filterColumnLookup: PropTypes.object.isRequired,\n  hasOtherElementInTabSequence: PropTypes.bool.isRequired,\n  headerGroupingMaxDepth: PropTypes.number.isRequired,\n  innerRef: refType,\n  minColumnIndex: PropTypes.number,\n  sortColumnLookup: PropTypes.object.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridColumnHeaders = fastMemo(GridColumnHeaders);\nexport { MemoizedGridColumnHeaders as GridColumnHeaders };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridTopLevelRowCountSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { selectedGridRowsCountSelector } from '../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { gridFilteredTopLevelRowCountSelector } from '../hooks/features/filter/gridFilterSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridSelectedRowCount } from './GridSelectedRowCount';\nimport { GridFooterContainer } from './containers/GridFooterContainer';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {\n  var _rootProps$slotProps, _rootProps$slotProps2;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(rootProps.slots.footerRowCount, _extends({}, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.footerRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  })) : null;\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.slots.pagination && /*#__PURE__*/_jsx(rootProps.slots.pagination, _extends({}, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.pagination));\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({\n    ref: ref\n  }, props, {\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridHeader() {\n  var _rootProps$slotProps, _rootProps$slotProps2;\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.slots.preferencesPanel, _extends({}, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.preferencesPanel)), rootProps.slots.toolbar && /*#__PURE__*/_jsx(rootProps.slots.toolbar, _extends({}, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.toolbar))]\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridLoadingOverlay(props, ref) {\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: /*#__PURE__*/_jsx(CircularProgress, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = /*#__PURE__*/React.forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { styled } from '@mui/material/styles';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridFilteredTopLevelRowCountSelector } from '../hooks/features/filter';\nimport { gridPaginationModelSelector } from '../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\n\n// A mutable version of a readonly array.\n\nexport const GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const rowCount = React.useMemo(() => {\n    var _ref, _rootProps$rowCount;\n    return (_ref = (_rootProps$rowCount = rootProps.rowCount) != null ? _rootProps$rowCount : visibleTopLevelRowCount) != null ? _ref : 0;\n  }, [rootProps.rowCount, visibleTopLevelRowCount]);\n  const lastPage = React.useMemo(() => Math.floor(rowCount / (paginationModel.pageSize || 1)), [rowCount, paginationModel.pageSize]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const pageSize = Number(event.target.value);\n    apiRef.current.setPageSize(pageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((_, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n  const isPageSizeIncludedInPageSizeOptions = pageSize => {\n    for (let i = 0; i < rootProps.pageSizeOptions.length; i += 1) {\n      const option = rootProps.pageSizeOptions[i];\n      if (typeof option === 'number') {\n        if (option === pageSize) {\n          return true;\n        }\n      } else if (option.value === pageSize) {\n        return true;\n      }\n    }\n    return false;\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    var _rootProps$pagination, _rootProps$pagination2;\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingInPageSizeOptions = React.useRef(false);\n    const pageSize = (_rootProps$pagination = (_rootProps$pagination2 = rootProps.paginationModel) == null ? void 0 : _rootProps$pagination2.pageSize) != null ? _rootProps$pagination : paginationModel.pageSize;\n    if (!warnedOnceMissingInPageSizeOptions.current && !rootProps.autoPageSize && !isPageSizeIncludedInPageSizeOptions(pageSize)) {\n      console.warn([`MUI: The page size \\`${paginationModel.pageSize}\\` is not preset in the \\`pageSizeOptions\\``, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingInPageSizeOptions.current = true;\n    }\n  }\n  const pageSizeOptions = isPageSizeIncludedInPageSizeOptions(paginationModel.pageSize) ? rootProps.pageSizeOptions : [];\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref,\n    component: \"div\",\n    count: rowCount,\n    page: paginationModel.page <= lastPage ? paginationModel.page : lastPage\n    // TODO: Remove the cast once the type is fixed in Material UI and that the min Material UI version\n    // for x-data-grid is past the fix.\n    // Note that Material UI will not mutate the array, so this is safe.\n    ,\n    rowsPerPageOptions: pageSizeOptions,\n    rowsPerPage: paginationModel.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, apiRef.current.getLocaleText('MuiTablePagination'), props));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"hovered\", \"rowId\", \"row\", \"index\", \"style\", \"position\", \"rowHeight\", \"className\", \"visibleColumns\", \"renderedColumns\", \"containerWidth\", \"firstColumnToRender\", \"lastColumnToRender\", \"isLastVisible\", \"focusedCellColumnIndexNotInRange\", \"isNotVisible\", \"focusedCell\", \"tabbableCell\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\", \"onMouseOut\", \"onMouseOver\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { fastMemo } from '../utils/fastMemo';\nimport { GridEditModes, GridRowModes, GridCellModes } from '../models/gridEditRowModel';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridColumnsTotalWidthSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector, objectShallowCompare } from '../hooks/utils/useGridSelector';\nimport { useGridVisibleRows } from '../hooks/utils/useGridVisibleRows';\nimport { findParentElementFromClassName, isEventTargetInPortal } from '../utils/domUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../colDef/gridCheckboxSelectionColDef';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../colDef/gridActionsColDef';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../constants/gridDetailPanelToggleField';\nimport { gridSortModelSelector } from '../hooks/features/sorting/gridSortingSelector';\nimport { gridRowMaximumTreeDepthSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { randomNumberBetween } from '../utils/utils';\nimport { GridCellWrapper, GridCellV7 } from './cell/GridCell';\nimport { gridEditRowsStateSelector } from '../hooks/features/editing/gridEditingSelectors';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    editable,\n    editing,\n    selected,\n    isLastVisible,\n    rowHeight,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isLastVisible && 'row--lastVisible', rowHeight === 'auto' && 'row--dynamicHeight']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction EmptyCell({\n  width\n}) {\n  if (!width) {\n    return null;\n  }\n  const style = {\n    width\n  };\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: `${gridClasses.cell} ${gridClasses.withBorderColor}`,\n    style: style\n  }); // TODO change to .MuiDataGrid-emptyCell or .MuiDataGrid-rowFiller\n}\nconst GridRow = /*#__PURE__*/React.forwardRef(function GridRow(props, refProp) {\n  const {\n      selected,\n      hovered,\n      rowId,\n      row,\n      index,\n      style: styleProp,\n      position,\n      rowHeight,\n      className,\n      visibleColumns,\n      renderedColumns,\n      containerWidth,\n      firstColumnToRender,\n      isLastVisible = false,\n      focusedCellColumnIndexNotInRange,\n      isNotVisible,\n      focusedCell,\n      onClick,\n      onDoubleClick,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseOut,\n      onMouseOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\n  const handleRef = useForkRef(ref, refProp);\n  const ariaRowIndex = index + headerGroupingMaxDepth + 2; // 1 for the header row and 1 as it's 1-based\n\n  const ownerState = {\n    selected,\n    hovered,\n    isLastVisible,\n    classes: rootProps.classes,\n    editing: apiRef.current.getRowMode(rowId) === GridRowModes.Edit,\n    editable: rootProps.editMode === GridEditModes.Row,\n    rowHeight\n  };\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (rowHeight === 'auto' && ref.current && typeof ResizeObserver === 'undefined') {\n      // Fallback for IE\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, ref.current.clientHeight, position);\n    }\n  }, [apiRef, rowHeight, rowId, position]);\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      // The index prop is relative to the rows from all pages. As example, the index prop of the\n      // first row is 5 if `paginationModel.pageSize=5` and `paginationModel.page=1`. However, the index used by the virtualization\n      // doesn't care about pagination and considers the rows from the current page only, so the\n      // first row always has index=0. We need to subtract the index of the first row to make it\n      // compatible with the index used by the virtualization.\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId);\n      // pinned rows are not part of the visible rows\n      if (rowIndex != null) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n    const rootElement = ref.current;\n    const hasFixedHeight = rowHeight !== 'auto';\n    if (!rootElement || hasFixedHeight || typeof ResizeObserver === 'undefined') {\n      return undefined;\n    }\n    const resizeObserver = new ResizeObserver(entries => {\n      const [entry] = entries;\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height, position);\n    });\n    resizeObserver.observe(rootElement);\n    return () => resizeObserver.disconnect();\n  }, [apiRef, currentPage.range, index, rowHeight, rowId, position]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell == null ? void 0 : cell.getAttribute('data-field');\n\n    // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      }\n\n      // User opened a detail panel\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      }\n\n      // User reorders a row\n      if (field === '__reorder__') {\n        return;\n      }\n\n      // User is editing a cell\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      }\n\n      // User clicked a button from the \"actions\" column type\n      const column = apiRef.current.getColumn(field);\n      if ((column == null ? void 0 : column.type) === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const {\n    slots,\n    slotProps,\n    disableColumnReorder\n  } = rootProps;\n  const CellComponent = slots.cell === GridCellV7 ? GridCellV7 : GridCellWrapper;\n  const rowReordering = rootProps.rowReordering;\n  const getCell = (column, cellProps) => {\n    var _editRowsState$rowId$, _editRowsState$rowId;\n    const disableDragEvents = disableColumnReorder && column.disableReorder || !rowReordering && !!sortModel.length && treeDepth > 1 && Object.keys(editRowsState).length > 0;\n    const editCellState = (_editRowsState$rowId$ = (_editRowsState$rowId = editRowsState[rowId]) == null ? void 0 : _editRowsState$rowId[column.field]) != null ? _editRowsState$rowId$ : null;\n    let cellIsNotVisible = false;\n    if (focusedCellColumnIndexNotInRange !== undefined && visibleColumns[focusedCellColumnIndexNotInRange].field === column.field) {\n      cellIsNotVisible = true;\n    }\n    return /*#__PURE__*/_jsx(CellComponent, _extends({\n      column: column,\n      width: cellProps.width,\n      rowId: rowId,\n      height: rowHeight,\n      showRightBorder: cellProps.showRightBorder,\n      align: column.align || 'left',\n      colIndex: cellProps.indexRelativeToAllColumns,\n      colSpan: cellProps.colSpan,\n      disableDragEvents: disableDragEvents,\n      editCellState: editCellState,\n      isNotVisible: cellIsNotVisible\n    }, slotProps == null ? void 0 : slotProps.cell), column.field);\n  };\n  const sizes = useGridSelector(apiRef, () => _extends({}, apiRef.current.unstable_getRowInternalSizes(rowId)), objectShallowCompare);\n  let minHeight = rowHeight;\n  if (minHeight === 'auto' && sizes) {\n    let numberOfBaseSizes = 0;\n    const maximumSize = Object.entries(sizes).reduce((acc, [key, size]) => {\n      const isBaseHeight = /^base[A-Z]/.test(key);\n      if (!isBaseHeight) {\n        return acc;\n      }\n      numberOfBaseSizes += 1;\n      if (size > acc) {\n        return size;\n      }\n      return acc;\n    }, 0);\n    if (maximumSize > 0 && numberOfBaseSizes > 1) {\n      minHeight = maximumSize;\n    }\n  }\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        opacity: 0,\n        width: 0,\n        height: 0\n      };\n    }\n    const rowStyle = _extends({}, styleProp, {\n      maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n      // max-height doesn't support \"auto\"\n      minHeight\n    });\n    if (sizes != null && sizes.spacingTop) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n      rowStyle[property] = sizes.spacingTop;\n    }\n    if (sizes != null && sizes.spacingBottom) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n      let propertyValue = rowStyle[property];\n      // avoid overriding existing value\n      if (typeof propertyValue !== 'number') {\n        propertyValue = parseInt(propertyValue || '0', 10);\n      }\n      propertyValue += sizes.spacingBottom;\n      rowStyle[property] = propertyValue;\n    }\n    return rowStyle;\n  }, [isNotVisible, rowHeight, styleProp, minHeight, sizes, rootProps.rowSpacingType]);\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n  if (typeof rootProps.getRowClassName === 'function') {\n    var _currentPage$range;\n    const indexRelativeToCurrentPage = index - (((_currentPage$range = currentPage.range) == null ? void 0 : _currentPage$range.firstRowIndex) || 0);\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n  const randomNumber = randomNumberBetween(10000, 20, 80);\n  const rowNode = apiRef.current.getRowNode(rowId);\n  if (!rowNode) {\n    return null;\n  }\n  const rowType = rowNode.type;\n  const cells = [];\n  for (let i = 0; i < renderedColumns.length; i += 1) {\n    const column = renderedColumns[i];\n    let indexRelativeToAllColumns = firstColumnToRender + i;\n    if (focusedCellColumnIndexNotInRange !== undefined && focusedCell) {\n      if (visibleColumns[focusedCellColumnIndexNotInRange].field === column.field) {\n        indexRelativeToAllColumns = focusedCellColumnIndexNotInRange;\n      } else {\n        indexRelativeToAllColumns -= 1;\n      }\n    }\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n    if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n      if (rowType !== 'skeletonRow') {\n        const {\n          colSpan,\n          width\n        } = cellColSpanInfo.cellProps;\n        const cellProps = {\n          width,\n          colSpan,\n          showRightBorder: rootProps.showCellVerticalBorder,\n          indexRelativeToAllColumns\n        };\n        cells.push(getCell(column, cellProps));\n      } else {\n        const {\n          width\n        } = cellColSpanInfo.cellProps;\n        const contentWidth = Math.round(randomNumber());\n        cells.push( /*#__PURE__*/_jsx(slots.skeletonCell, {\n          width: width,\n          contentWidth: contentWidth,\n          field: column.field,\n          align: column.align\n        }, column.field));\n      }\n    }\n  }\n  const emptyCellWidth = containerWidth - columnsTotalWidth;\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave),\n    onMouseOut: publish('rowMouseOut', onMouseOut),\n    onMouseOver: publish('rowMouseOver', onMouseOver)\n  } : null;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className, hovered && 'Mui-hovered'),\n    \"aria-rowindex\": ariaRowIndex,\n    \"aria-selected\": selected,\n    style: style\n  }, eventHandlers, other, {\n    children: [cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  containerWidth: PropTypes.number.isRequired,\n  firstColumnToRender: PropTypes.number.isRequired,\n  /**\n   * Determines which cell has focus.\n   * If `null`, no cell in this row has focus.\n   */\n  focusedCell: PropTypes.string,\n  focusedCellColumnIndexNotInRange: PropTypes.number,\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isLastVisible: PropTypes.bool,\n  isNotVisible: PropTypes.bool,\n  lastColumnToRender: PropTypes.number.isRequired,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  position: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  renderedColumns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  row: PropTypes.object,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  /**\n   * Determines which cell should be tabbable by having tabIndex=0.\n   * If `null`, no cell in this row is in the tab sequence.\n   */\n  tabbableCell: PropTypes.string,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridRow = fastMemo(GridRow);\nexport { MemoizedGridRow as GridRow };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"rowCount\", \"visibleRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'RowCount',\n  overridesResolver: (props, styles) => styles.rowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2)\n}));\nconst GridRowCount = /*#__PURE__*/React.forwardRef(function GridRowCount(props, ref) {\n  const {\n      className,\n      rowCount,\n      visibleRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  if (rowCount === 0) {\n    return null;\n  }\n  const text = visibleRowCount < rowCount ? apiRef.current.getLocaleText('footerTotalVisibleRows')(visibleRowCount, rowCount) : rowCount.toLocaleString();\n  return /*#__PURE__*/_jsxs(GridRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: [apiRef.current.getLocaleText('footerTotalRows'), \" \", text]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  rowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  visibleRowCount: PropTypes.number.isRequired\n} : void 0;\nexport { GridRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selectedRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['selectedRowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridSelectedRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SelectedRowCount',\n  overridesResolver: (props, styles) => styles.selectedRowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2),\n  visibility: 'hidden',\n  width: 0,\n  height: 0,\n  [theme.breakpoints.up('sm')]: {\n    visibility: 'visible',\n    width: 'auto',\n    height: 'auto'\n  }\n}));\nconst GridSelectedRowCount = /*#__PURE__*/React.forwardRef(function GridSelectedRowCount(props, ref) {\n  const {\n      className,\n      selectedRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  const rowSelectedText = apiRef.current.getLocaleText('footerRowSelected')(selectedRowCount);\n  return /*#__PURE__*/_jsx(GridSelectedRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: rowSelectedText\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridSelectedRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  selectedRowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridSelectedRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridAriaAttributes } from '../../hooks/utils/useGridAriaAttributes';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['main']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridMainContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Main',\n  overridesResolver: (props, styles) => styles.main\n})(() => ({\n  position: 'relative',\n  flexGrow: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'hidden'\n}));\nexport const GridMainContainer = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _rootProps$experiment;\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const getAriaAttributes = (_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.ariaV7 // ariaV7 should never change\n  ? useGridAriaAttributes : null;\n  const ariaAttributes = typeof getAriaAttributes === 'function' ? getAriaAttributes() : null;\n  return /*#__PURE__*/_jsx(GridMainContainerRoot, _extends({\n    ref: ref,\n    className: classes.root,\n    ownerState: rootProps\n  }, ariaAttributes, {\n    children: props.children\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridMainContainer } from '../containers/GridMainContainer';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridColumnPositionsSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { gridFilterActiveItemsLookupSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridSortColumnLookupSelector } from '../../hooks/features/sorting/gridSortingSelector';\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector, unstable_gridTabIndexColumnGroupHeaderSelector, unstable_gridFocusColumnGroupHeaderSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { gridDensityFactorSelector } from '../../hooks/features/density/densitySelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector, gridColumnGroupsHeaderStructureSelector } from '../../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { gridColumnMenuSelector } from '../../hooks/features/columnMenu/columnMenuSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridBody(props) {\n  const {\n    VirtualScrollerComponent,\n    ColumnHeadersProps,\n    children\n  } = props;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const rootRef = React.useRef(null);\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const columnHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const cellTabIndexState = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const columnGroupHeaderTabIndexState = useGridSelector(apiRef, unstable_gridTabIndexColumnGroupHeaderSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const columnGroupHeaderFocus = useGridSelector(apiRef, unstable_gridFocusColumnGroupHeaderSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const columnVisibility = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const columnGroupsHeaderStructure = useGridSelector(apiRef, gridColumnGroupsHeaderStructureSelector);\n  const hasOtherElementInTabSequence = !(columnGroupHeaderTabIndexState === null && columnHeaderTabIndexState === null && cellTabIndexState === null);\n  useEnhancedEffect(() => {\n    apiRef.current.computeSizeAndPublishResizeEvent();\n    const elementToObserve = rootRef.current;\n    if (typeof ResizeObserver === 'undefined') {\n      return () => {};\n    }\n    let animationFrame;\n    const observer = new ResizeObserver(() => {\n      // See https://github.com/mui/mui-x/issues/8733\n      animationFrame = requestAnimationFrame(() => {\n        apiRef.current.computeSizeAndPublishResizeEvent();\n      });\n    });\n    if (elementToObserve) {\n      observer.observe(elementToObserve);\n    }\n    return () => {\n      if (animationFrame) {\n        window.cancelAnimationFrame(animationFrame);\n      }\n      if (elementToObserve) {\n        observer.unobserve(elementToObserve);\n      }\n    };\n  }, [apiRef]);\n  const columnHeadersRef = React.useRef(null);\n  const columnsContainerRef = React.useRef(null);\n  const virtualScrollerRef = React.useRef(null);\n  apiRef.current.register('private', {\n    columnHeadersContainerElementRef: columnsContainerRef,\n    columnHeadersElementRef: columnHeadersRef,\n    virtualScrollerRef,\n    mainElementRef: rootRef\n  });\n  const hasDimensions = !!apiRef.current.getRootDimensions();\n  return /*#__PURE__*/_jsxs(GridMainContainer, {\n    ref: rootRef,\n    children: [/*#__PURE__*/_jsx(rootProps.slots.columnHeaders, _extends({\n      ref: columnsContainerRef,\n      innerRef: columnHeadersRef,\n      visibleColumns: visibleColumns,\n      filterColumnLookup: filterColumnLookup,\n      sortColumnLookup: sortColumnLookup,\n      columnPositions: columnPositions,\n      columnHeaderTabIndexState: columnHeaderTabIndexState,\n      columnGroupHeaderTabIndexState: columnGroupHeaderTabIndexState,\n      columnHeaderFocus: columnHeaderFocus,\n      columnGroupHeaderFocus: columnGroupHeaderFocus,\n      densityFactor: densityFactor,\n      headerGroupingMaxDepth: headerGroupingMaxDepth,\n      columnMenuState: columnMenuState,\n      columnVisibility: columnVisibility,\n      columnGroupsHeaderStructure: columnGroupsHeaderStructure,\n      hasOtherElementInTabSequence: hasOtherElementInTabSequence\n    }, ColumnHeadersProps)), hasDimensions && /*#__PURE__*/_jsx(VirtualScrollerComponent\n    // The content is only rendered after dimensions are computed because\n    // the lazy-loading hook is listening to `renderedRowsIntervalChange`,\n    // but only does something if the dimensions are also available.\n    // If this event is published while dimensions haven't been computed,\n    // the `onFetchRows` prop won't be called during mount.\n    , {\n      ref: virtualScrollerRef\n    }), children]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBody.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  ColumnHeadersProps: PropTypes.object,\n  VirtualScrollerComponent: PropTypes.elementType.isRequired\n} : void 0;\nexport { GridBody };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridFooterPlaceholder() {\n  var _rootProps$slotProps;\n  const rootProps = useGridRootProps();\n  if (rootProps.hideFooter) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.footer, _extends({}, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.footer));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport clsx from 'clsx';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridExpandedRowCountSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridRowCountSelector, gridRowsLoadingSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getMinimalContentHeight } from '../../hooks/features/rows/gridRowsUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridOverlayWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapper',\n  shouldForwardProp: prop => prop !== 'overlayType',\n  overridesResolver: (props, styles) => styles.overlayWrapper\n})(({\n  overlayType\n}) => ({\n  position: 'sticky',\n  // To stay in place while scrolling\n  top: 0,\n  left: 0,\n  width: 0,\n  // To stay above the content instead of shifting it down\n  height: 0,\n  // To stay above the content instead of shifting it down\n  zIndex: overlayType === 'loadingOverlay' ? 5 // Should be above pinned columns, pinned rows, and detail panel\n  : 4 // Should be above pinned columns and detail panel\n}));\nconst GridOverlayWrapperInner = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapperInner',\n  shouldForwardProp: prop => prop !== 'overlayType',\n  overridesResolver: (props, styles) => styles.overlayWrapperInner\n})({});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlayWrapper'],\n    inner: ['overlayWrapperInner']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridOverlayWrapper(props) {\n  var _viewportInnerSize$he, _viewportInnerSize$wi;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const [viewportInnerSize, setViewportInnerSize] = React.useState(() => {\n    var _apiRef$current$getRo, _apiRef$current$getRo2;\n    return (_apiRef$current$getRo = (_apiRef$current$getRo2 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo2.viewportInnerSize) != null ? _apiRef$current$getRo : null;\n  });\n  const handleViewportSizeChange = React.useCallback(() => {\n    var _apiRef$current$getRo3, _apiRef$current$getRo4;\n    setViewportInnerSize((_apiRef$current$getRo3 = (_apiRef$current$getRo4 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo4.viewportInnerSize) != null ? _apiRef$current$getRo3 : null);\n  }, [apiRef]);\n  useEnhancedEffect(() => {\n    return apiRef.current.subscribeEvent('viewportInnerSizeChange', handleViewportSizeChange);\n  }, [apiRef, handleViewportSizeChange]);\n  let height = (_viewportInnerSize$he = viewportInnerSize == null ? void 0 : viewportInnerSize.height) != null ? _viewportInnerSize$he : 0;\n  if (rootProps.autoHeight && height === 0) {\n    height = getMinimalContentHeight(apiRef, rootProps.rowHeight); // Give room to show the overlay when there no rows.\n  }\n  const classes = useUtilityClasses(_extends({}, props, {\n    classes: rootProps.classes\n  }));\n  if (!viewportInnerSize) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridOverlayWrapperRoot, {\n    className: clsx(classes.root),\n    overlayType: props.overlayType,\n    children: /*#__PURE__*/_jsx(GridOverlayWrapperInner, _extends({\n      className: clsx(classes.inner),\n      style: {\n        height,\n        width: (_viewportInnerSize$wi = viewportInnerSize == null ? void 0 : viewportInnerSize.width) != null ? _viewportInnerSize$wi : 0\n      }\n    }, props))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridOverlayWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  overlayType: PropTypes.string.isRequired\n} : void 0;\nexport function GridOverlays() {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && totalRowCount === 0;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlay = null;\n  let overlayType = '';\n  if (showNoRowsOverlay) {\n    var _rootProps$slotProps;\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.noRowsOverlay, _extends({}, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.noRowsOverlay));\n    overlayType = 'noRowsOverlay';\n  }\n  if (showNoResultsOverlay) {\n    var _rootProps$slotProps2;\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.noResultsOverlay, _extends({}, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.noResultsOverlay));\n    overlayType = 'noResultsOverlay';\n  }\n  if (loading) {\n    var _rootProps$slotProps3;\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.loadingOverlay, _extends({}, (_rootProps$slotProps3 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps3.loadingOverlay));\n    overlayType = 'loadingOverlay';\n  }\n  if (overlay === null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, {\n    overlayType: overlayType,\n    children: overlay\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"api\", \"colDef\", \"id\", \"hasFocus\", \"isEditable\", \"field\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"cellMode\", \"tabIndex\", \"position\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuList from '@mui/material/MenuList';\nimport { useTheme } from '@mui/material/styles';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst hasActions = colDef => typeof colDef.getActions === 'function';\nfunction GridActionsCell(props) {\n  var _rootProps$slotProps;\n  const {\n      colDef,\n      id,\n      hasFocus,\n      tabIndex,\n      position = 'bottom-end',\n      focusElementRef\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [focusedButtonIndex, setFocusedButtonIndex] = React.useState(-1);\n  const [open, setOpen] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootRef = React.useRef(null);\n  const buttonRef = React.useRef(null);\n  const ignoreCallToFocus = React.useRef(false);\n  const touchRippleRefs = React.useRef({});\n  const theme = useTheme();\n  const menuId = useId();\n  const buttonId = useId();\n  const rootProps = useGridRootProps();\n  if (!hasActions(colDef)) {\n    throw new Error('MUI: Missing the `getActions` property in the `GridColDef`.');\n  }\n  const options = colDef.getActions(apiRef.current.getRowParams(id));\n  const iconButtons = options.filter(option => !option.props.showInMenu);\n  const menuButtons = options.filter(option => option.props.showInMenu);\n  const numberOfButtons = iconButtons.length + (menuButtons.length ? 1 : 0);\n  React.useLayoutEffect(() => {\n    if (!hasFocus) {\n      Object.entries(touchRippleRefs.current).forEach(([index, ref]) => {\n        ref == null || ref.stop({}, () => {\n          delete touchRippleRefs.current[index];\n        });\n      });\n    }\n  }, [hasFocus]);\n  React.useEffect(() => {\n    if (focusedButtonIndex < 0 || !rootRef.current) {\n      return;\n    }\n    if (focusedButtonIndex >= rootRef.current.children.length) {\n      return;\n    }\n    const child = rootRef.current.children[focusedButtonIndex];\n    child.focus({\n      preventScroll: true\n    });\n  }, [focusedButtonIndex]);\n  React.useEffect(() => {\n    if (!hasFocus) {\n      setFocusedButtonIndex(-1);\n      ignoreCallToFocus.current = false;\n    }\n  }, [hasFocus]);\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus() {\n      // If ignoreCallToFocus is true, then one of the buttons was clicked and the focus is already set\n      if (!ignoreCallToFocus.current) {\n        // find the first focusable button and pass the index to the state\n        const focusableButtonIndex = options.findIndex(o => !o.props.disabled);\n        setFocusedButtonIndex(focusableButtonIndex);\n      }\n    }\n  }), [options]);\n  React.useEffect(() => {\n    if (focusedButtonIndex >= numberOfButtons) {\n      setFocusedButtonIndex(numberOfButtons - 1);\n    }\n  }, [focusedButtonIndex, numberOfButtons]);\n  const showMenu = () => {\n    setOpen(true);\n    setFocusedButtonIndex(numberOfButtons - 1);\n    ignoreCallToFocus.current = true;\n  };\n  const hideMenu = () => {\n    setOpen(false);\n  };\n  const handleTouchRippleRef = index => instance => {\n    touchRippleRefs.current[index] = instance;\n  };\n  const handleButtonClick = (index, onClick) => event => {\n    setFocusedButtonIndex(index);\n    ignoreCallToFocus.current = true;\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const handleRootKeyDown = event => {\n    if (numberOfButtons <= 1) {\n      return;\n    }\n    const getNewIndex = (index, direction) => {\n      var _options;\n      if (index < 0 || index > options.length) {\n        return index;\n      }\n\n      // for rtl mode we need to reverse the direction\n      const rtlMod = theme.direction === 'rtl' ? -1 : 1;\n      const indexMod = (direction === 'left' ? -1 : 1) * rtlMod;\n\n      // if the button that should receive focus is disabled go one more step\n      return (_options = options[index + indexMod]) != null && _options.props.disabled ? getNewIndex(index + indexMod, direction) : index + indexMod;\n    };\n    let newIndex = focusedButtonIndex;\n    if (event.key === 'ArrowRight') {\n      newIndex = getNewIndex(focusedButtonIndex, 'right');\n    } else if (event.key === 'ArrowLeft') {\n      newIndex = getNewIndex(focusedButtonIndex, 'left');\n    }\n    if (newIndex < 0 || newIndex >= numberOfButtons) {\n      return; // We're already in the first or last item = do nothing and let the grid listen the event\n    }\n    if (newIndex !== focusedButtonIndex) {\n      event.preventDefault(); // Prevent scrolling\n      event.stopPropagation(); // Don't stop propagation for other keys, e.g. ArrowUp\n      setFocusedButtonIndex(newIndex);\n    }\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (['Tab', 'Escape'].includes(event.key)) {\n      hideMenu();\n    }\n  };\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    role: \"menu\",\n    ref: rootRef,\n    tabIndex: -1,\n    className: gridClasses.actionsCell,\n    onKeyDown: handleRootKeyDown\n  }, other, {\n    children: [iconButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      touchRippleRef: handleTouchRippleRef(index),\n      onClick: handleButtonClick(index, button.props.onClick),\n      tabIndex: focusedButtonIndex === index ? tabIndex : -1\n    })), menuButtons.length > 0 && buttonId && /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n      ref: buttonRef,\n      id: buttonId,\n      \"aria-label\": apiRef.current.getLocaleText('actionsCellMore'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-expanded\": open,\n      \"aria-controls\": open ? menuId : undefined,\n      role: \"menuitem\",\n      size: \"small\",\n      onClick: showMenu,\n      touchRippleRef: handleTouchRippleRef(buttonId),\n      tabIndex: focusedButtonIndex === iconButtons.length ? tabIndex : -1\n    }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseIconButton, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.moreActionsIcon, {\n        fontSize: \"small\"\n      })\n    })), menuButtons.length > 0 && /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      position: position,\n      onClose: hideMenu,\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        onKeyDown: handleListKeyDown,\n        \"aria-labelledby\": buttonId,\n        variant: \"menu\",\n        autoFocusItem: true,\n        children: menuButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n          key: index,\n          closeMenu: hideMenu\n        }))\n      })\n    })]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  api: PropTypes.object,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridActionsCell };\nexport const renderActionsCell = params => /*#__PURE__*/_jsx(GridActionsCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { isAutoGeneratedRow } from '../../hooks/features/rows/gridRowsUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridBooleanCellRaw(props) {\n  const {\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const Icon = React.useMemo(() => value ? rootProps.slots.booleanCellTrueIcon : rootProps.slots.booleanCellFalseIcon, [rootProps.slots.booleanCellFalseIcon, rootProps.slots.booleanCellTrueIcon, value]);\n  return /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: apiRef.current.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBooleanCellRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nconst GridBooleanCell = /*#__PURE__*/React.memo(GridBooleanCellRaw);\nexport { GridBooleanCell };\nexport const renderBooleanCell = params => {\n  if (isAutoGeneratedRow(params.rowNode)) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(GridBooleanCell, _extends({}, params));\n};","// Based on https://stackoverflow.com/a/59518678\nlet cachedSupportsPreventScroll;\nexport function doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n    });\n  }\n  return cachedSupportsPreventScroll;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"changeReason\", \"unstable_updateValueOnRender\"],\n  _excluded2 = [\"align\", \"children\", \"editCellState\", \"colIndex\", \"column\", \"cellMode\", \"field\", \"formattedValue\", \"hasFocus\", \"height\", \"isEditable\", \"isSelected\", \"rowId\", \"tabIndex\", \"style\", \"value\", \"width\", \"className\", \"showRightBorder\", \"extendRowFullWidth\", \"row\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded3 = [\"column\", \"rowId\", \"editCellState\", \"align\", \"children\", \"colIndex\", \"height\", \"width\", \"className\", \"showRightBorder\", \"extendRowFullWidth\", \"row\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\", \"style\"],\n  _excluded4 = [\"changeReason\", \"unstable_updateValueOnRender\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_ownerDocument as ownerDocument, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { doesSupportPreventScroll } from '../../utils/doesSupportPreventScroll';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { GridCellModes } from '../../models';\nimport { useGridSelector, objectShallowCompare } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridFocusCellSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { MissingRowIdError } from '../../hooks/features/rows/useGridParamsApi';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst EMPTY_CELL_PARAMS = {\n  id: -1,\n  field: '__unset__',\n  row: {},\n  rowNode: {\n    id: -1,\n    depth: 0,\n    type: 'leaf',\n    parent: -1,\n    groupingKey: null\n  },\n  colDef: {\n    type: 'string',\n    field: '__unset__',\n    computedWidth: 0\n  },\n  cellMode: GridCellModes.View,\n  hasFocus: false,\n  tabIndex: -1,\n  value: null,\n  formattedValue: '__unset__',\n  isEditable: false,\n  api: {}\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showRightBorder,\n    isEditable,\n    isSelected,\n    isSelectionMode,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isEditable && 'cell--editable', isSelected && 'selected', showRightBorder && 'cell--withRightBorder', isSelectionMode && !isEditable && 'cell--selectionMode', 'withBorderColor'],\n    content: ['cellContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\n\n// GridCellWrapper is a compatibility layer for the V6 cell slot. If we can use the more efficient\n// `GridCellV7`, we should. That component is a merge of `GridCellWrapper` and `GridCell`.\n// TODO(v7): Remove the wrapper & cellV6 and use the cellV7 exclusively.\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\nconst GridCellWrapper = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    column,\n    rowId,\n    editCellState\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const field = column.field;\n  const cellParamsWithAPI = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    try {\n      const cellParams = apiRef.current.getCellParams(rowId, field);\n      const result = cellParams;\n      result.api = apiRef.current;\n      return result;\n    } catch (e) {\n      if (e instanceof MissingRowIdError) {\n        return EMPTY_CELL_PARAMS;\n      }\n      throw e;\n    }\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  if (cellParamsWithAPI === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  const {\n    cellMode,\n    hasFocus,\n    isEditable,\n    value,\n    formattedValue\n  } = cellParamsWithAPI;\n  const managesOwnFocus = column.type === 'actions';\n  const tabIndex = (cellMode === 'view' || !isEditable) && !managesOwnFocus ? cellParamsWithAPI.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n  const classNames = apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  });\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParamsWithAPI) : column.cellClassName);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParamsWithAPI));\n  }\n  let children;\n  if (editCellState == null && column.renderCell) {\n    children = column.renderCell(cellParamsWithAPI);\n    classNames.push(gridClasses['cell--withRenderer']);\n    classNames.push(rootClasses == null ? void 0 : rootClasses['cell--withRenderer']);\n  }\n  if (editCellState != null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded);\n    const params = _extends({}, cellParamsWithAPI, {\n      row: updatedRow\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses == null ? void 0 : rootClasses['cell--editing']);\n  }\n  const {\n    slots\n  } = rootProps;\n  const CellComponent = slots.cell;\n  const cellProps = _extends({}, props, {\n    ref,\n    field,\n    formattedValue,\n    hasFocus,\n    isEditable,\n    isSelected,\n    value,\n    cellMode,\n    children,\n    tabIndex,\n    className: clsx(classNames)\n  });\n  return /*#__PURE__*/React.createElement(CellComponent, cellProps);\n});\nconst GridCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _rootProps$experiment, _rootProps$experiment2;\n  const {\n      align,\n      children: childrenProp,\n      colIndex,\n      column,\n      cellMode,\n      field,\n      formattedValue,\n      hasFocus,\n      height,\n      isEditable,\n      isSelected,\n      rowId,\n      tabIndex,\n      style: styleProp,\n      value,\n      width,\n      className,\n      showRightBorder,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  const valueToRender = formattedValue == null ? value : formattedValue;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    align,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    isSelected\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        border: 0\n      };\n    }\n    const cellStyle = _extends({\n      minWidth: width,\n      maxWidth: width,\n      minHeight: height,\n      maxHeight: height === 'auto' ? 'none' : height\n    }, styleProp);\n    return cellStyle;\n  }, [width, height, isNotVisible, styleProp]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && (_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if ((focusedCell == null ? void 0 : focusedCell.id) === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell == null ? void 0 : focusedCell.id}, field=${focusedCell == null ? void 0 : focusedCell.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  const managesOwnFocus = column.type === 'actions';\n  let children = childrenProp;\n  if (children === undefined) {\n    const valueString = valueToRender == null ? void 0 : valueToRender.toString();\n    children = /*#__PURE__*/_jsx(\"div\", {\n      className: classes.content,\n      title: valueString,\n      role: \"presentation\",\n      children: valueString\n    });\n  }\n  if ( /*#__PURE__*/React.isValidElement(children) && managesOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  const ariaV7 = (_rootProps$experiment2 = rootProps.experimentalFeatures) == null ? void 0 : _rootProps$experiment2.ariaV7;\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      ref: handleRef,\n      className: clsx(className, classes.root),\n      role: ariaV7 ? 'gridcell' : 'cell',\n      \"data-field\": field,\n      \"data-colindex\": colIndex,\n      \"aria-colindex\": colIndex + 1,\n      \"aria-colspan\": colSpan,\n      style: style,\n      tabIndex: tabIndex,\n      onClick: publish('cellClick', onClick),\n      onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n      onMouseOver: publish('cellMouseOver', onMouseOver),\n      onMouseDown: publishMouseDown('cellMouseDown'),\n      onMouseUp: publishMouseUp('cellMouseUp'),\n      onKeyDown: publish('cellKeyDown', onKeyDown),\n      onKeyUp: publish('cellKeyUp', onKeyUp)\n    }, draggableEventHandlers, other, {\n      onFocus: handleFocus,\n      children: children\n    }))\n  );\n});\nconst MemoizedCellWrapper = fastMemo(GridCellWrapper);\nprocess.env.NODE_ENV !== \"production\" ? GridCellWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']),\n  className: PropTypes.string,\n  colIndex: PropTypes.number,\n  colSpan: PropTypes.number,\n  column: PropTypes.object,\n  disableDragEvents: PropTypes.bool,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  showRightBorder: PropTypes.bool,\n  width: PropTypes.number\n} : void 0;\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']),\n  cellMode: PropTypes.oneOf(['edit', 'view']),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  colIndex: PropTypes.number,\n  colSpan: PropTypes.number,\n  column: PropTypes.object,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  isNotVisible: PropTypes.bool,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  showRightBorder: PropTypes.bool,\n  width: PropTypes.number\n} : void 0;\nexport { MemoizedCellWrapper as GridCellWrapper, GridCell };\nconst GridCellV7 = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _getActions, _ref, _rootProps$unstable_c, _rootProps$experiment3, _rootProps$experiment4;\n  const {\n      column,\n      rowId,\n      editCellState,\n      align,\n      colIndex,\n      height,\n      width,\n      className,\n      showRightBorder,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver,\n      style: styleProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded3);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const field = column.field;\n  const cellParamsWithAPI = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    try {\n      const cellParams = apiRef.current.getCellParams(rowId, field);\n      const result = cellParams;\n      result.api = apiRef.current;\n      return result;\n    } catch (e) {\n      if (e instanceof MissingRowIdError) {\n        return EMPTY_CELL_PARAMS;\n      }\n      throw e;\n    }\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const {\n    cellMode,\n    hasFocus,\n    isEditable,\n    value,\n    formattedValue\n  } = cellParamsWithAPI;\n  const canManageOwnFocus = column.type === 'actions' && ((_getActions = (_ref = column).getActions) == null ? void 0 : _getActions.call(_ref, apiRef.current.getRowParams(rowId)).some(action => !action.props.disabled));\n  const tabIndex = (cellMode === 'view' || !isEditable) && !canManageOwnFocus ? cellParamsWithAPI.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n  const classNames = apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  });\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParamsWithAPI) : column.cellClassName);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParamsWithAPI));\n  }\n  const valueToRender = formattedValue == null ? value : formattedValue;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  // @ts-expect-error To access `unstable_cellSelection` flag as it's a `premium` feature\n  const isSelectionMode = (_rootProps$unstable_c = rootProps.unstable_cellSelection) != null ? _rootProps$unstable_c : false;\n  const ownerState = {\n    align,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    isSelected,\n    isSelectionMode\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return _extends({\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        border: 0\n      }, styleProp);\n    }\n    const cellStyle = _extends({\n      minWidth: width,\n      maxWidth: width,\n      minHeight: height,\n      maxHeight: height === 'auto' ? 'none' : height\n    }, styleProp);\n    return cellStyle;\n  }, [width, height, isNotVisible, styleProp]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (cellParamsWithAPI === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && (_rootProps$experiment3 = rootProps.experimentalFeatures) != null && _rootProps$experiment3.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if ((focusedCell == null ? void 0 : focusedCell.id) === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell == null ? void 0 : focusedCell.id}, field=${focusedCell == null ? void 0 : focusedCell.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  let children;\n  if (editCellState == null && column.renderCell) {\n    children = column.renderCell(cellParamsWithAPI);\n    classNames.push(gridClasses['cell--withRenderer']);\n    classNames.push(rootClasses == null ? void 0 : rootClasses['cell--withRenderer']);\n  }\n  if (editCellState != null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded4);\n    const params = _extends({}, cellParamsWithAPI, {\n      row: updatedRow\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses == null ? void 0 : rootClasses['cell--editing']);\n  }\n  if (children === undefined) {\n    const valueString = valueToRender == null ? void 0 : valueToRender.toString();\n    children = /*#__PURE__*/_jsx(\"div\", {\n      className: classes.content,\n      title: valueString,\n      role: \"presentation\",\n      children: valueString\n    });\n  }\n  if ( /*#__PURE__*/React.isValidElement(children) && canManageOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  const ariaV7 = (_rootProps$experiment4 = rootProps.experimentalFeatures) == null ? void 0 : _rootProps$experiment4.ariaV7;\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      ref: handleRef,\n      className: clsx(className, classNames, classes.root),\n      role: ariaV7 ? 'gridcell' : 'cell',\n      \"data-field\": field,\n      \"data-colindex\": colIndex,\n      \"aria-colindex\": colIndex + 1,\n      \"aria-colspan\": colSpan,\n      style: style,\n      tabIndex: tabIndex,\n      onClick: publish('cellClick', onClick),\n      onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n      onMouseOver: publish('cellMouseOver', onMouseOver),\n      onMouseDown: publishMouseDown('cellMouseDown'),\n      onMouseUp: publishMouseUp('cellMouseUp'),\n      onKeyDown: publish('cellKeyDown', onKeyDown),\n      onKeyUp: publish('cellKeyUp', onKeyUp)\n    }, draggableEventHandlers, other, {\n      onFocus: handleFocus,\n      children: children\n    }))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellV7.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  isNotVisible: PropTypes.bool,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  showRightBorder: PropTypes.bool,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCellV7 = fastMemo(GridCellV7);\nexport { MemoizedGridCellV7 as GridCellV7 };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditBooleanCell(props) {\n  var _rootProps$slotProps;\n  const {\n      id: idProp,\n      value,\n      field,\n      className,\n      hasFocus,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.checked;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    setValueState(newValue);\n    await apiRef.current.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [apiRef, field, idProp, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseCheckbox))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditBooleanCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditBooleanCell };\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"inputProps\", \"isValidating\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport InputBase from '@mui/material/InputBase';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledInputBase = styled(InputBase)({\n  fontSize: 'inherit'\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditDateCell(props) {\n  const {\n      id,\n      value: valueProp,\n      field,\n      colDef,\n      hasFocus,\n      inputProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isDateTime = colDef.type === 'dateTime';\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const valueTransformed = React.useMemo(() => {\n    let parsedDate;\n    if (valueProp == null) {\n      parsedDate = null;\n    } else if (valueProp instanceof Date) {\n      parsedDate = valueProp;\n    } else {\n      parsedDate = new Date((valueProp != null ? valueProp : '').toString());\n    }\n    let formattedDate;\n    if (parsedDate == null || Number.isNaN(parsedDate.getTime())) {\n      formattedDate = '';\n    } else {\n      const localDate = new Date(parsedDate.getTime() - parsedDate.getTimezoneOffset() * 60 * 1000);\n      formattedDate = localDate.toISOString().substr(0, isDateTime ? 16 : 10);\n    }\n    return {\n      parsed: parsedDate,\n      formatted: formattedDate\n    };\n  }, [valueProp, isDateTime]);\n  const [valueState, setValueState] = React.useState(valueTransformed);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const parseValueToDate = React.useCallback(value => {\n    if (value === '') {\n      return null;\n    }\n    const [date, time] = value.split('T');\n    const [year, month, day] = date.split('-');\n    const parsedDate = new Date();\n    parsedDate.setFullYear(Number(year), Number(month) - 1, Number(day));\n    parsedDate.setHours(0, 0, 0, 0);\n    if (time) {\n      const [hours, minutes] = time.split(':');\n      parsedDate.setHours(Number(hours), Number(minutes), 0, 0);\n    }\n    return parsedDate;\n  }, []);\n  const handleChange = React.useCallback(async event => {\n    const newFormattedDate = event.target.value;\n    const newParsedDate = parseValueToDate(newFormattedDate);\n    if (onValueChange) {\n      await onValueChange(event, newParsedDate);\n    }\n    setValueState({\n      parsed: newParsedDate,\n      formatted: newFormattedDate\n    });\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newParsedDate\n    }, event);\n  }, [apiRef, field, id, onValueChange, parseValueToDate]);\n  React.useEffect(() => {\n    setValueState(state => {\n      var _valueTransformed$par, _state$parsed;\n      if (valueTransformed.parsed !== state.parsed && ((_valueTransformed$par = valueTransformed.parsed) == null ? void 0 : _valueTransformed$par.getTime()) !== ((_state$parsed = state.parsed) == null ? void 0 : _state$parsed.getTime())) {\n        return valueTransformed;\n      }\n      return state;\n    });\n  }, [valueTransformed]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(StyledInputBase, _extends({\n    inputRef: inputRef,\n    fullWidth: true,\n    className: classes.root,\n    type: isDateTime ? 'datetime-local' : 'date',\n    inputProps: _extends({\n      max: isDateTime ? '9999-12-31T23:59' : '9999-12-31'\n    }, inputProps),\n    value: valueState.formatted,\n    onChange: handleChange\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditDateCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditDateCell };\nexport const renderEditDateCell = params => /*#__PURE__*/_jsx(GridEditDateCell, _extends({}, params));","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"isValidating\", \"debounceMs\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridEditInputCellRoot = styled(InputBase, {\n  name: 'MuiDataGrid',\n  slot: 'EditInputCell',\n  overridesResolver: (props, styles) => styles.editInputCell\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  padding: '1px 0',\n  '& input': {\n    padding: '0 16px',\n    height: '100%'\n  }\n}));\nconst GridEditInputCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value,\n      field,\n      colDef,\n      hasFocus,\n      debounceMs = 200,\n      isProcessingProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const [valueState, setValueState] = React.useState(value);\n  const classes = useUtilityClasses(rootProps);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.value;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    const column = apiRef.current.getColumn(field);\n    let parsedValue = newValue;\n    if (column.valueParser) {\n      parsedValue = column.valueParser(newValue, apiRef.current.getCellParams(id, field));\n    }\n    setValueState(parsedValue);\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: parsedValue,\n      debounceMs,\n      unstable_skipValueParser: true\n    }, event);\n  }, [apiRef, debounceMs, field, id, onValueChange]);\n  const meta = apiRef.current.unstable_getEditCellMeta(id, field);\n  React.useEffect(() => {\n    if ((meta == null ? void 0 : meta.changeReason) !== 'debouncedSetEditCellValue') {\n      setValueState(value);\n    }\n  }, [meta, value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(GridEditInputCellRoot, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    className: classes.root,\n    ownerState: rootProps,\n    fullWidth: true,\n    type: colDef.type === 'number' ? colDef.type : 'text',\n    value: valueState != null ? valueState : '',\n    onChange: handleChange,\n    endAdornment: isProcessingProps ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n      fontSize: \"small\",\n      color: \"action\"\n    }) : undefined\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridEditInputCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  debounceMs: PropTypes.number,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditInputCell };\nexport const renderEditInputCell = params => /*#__PURE__*/_jsx(GridEditInputCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\", \"initialOpen\", \"getOptionLabel\", \"getOptionValue\"],\n  _excluded2 = [\"MenuProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { GridCellEditStopReasons } from '../../models/params/gridEditCellParams';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridEditModes } from '../../models/gridEditRowModel';\nimport { getValueFromValueOptions, isSingleSelectColDef } from '../panel/filterPanel/filterPanelUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isKeyboardEvent(event) {\n  return !!event.key;\n}\nfunction GridEditSingleSelectCell(props) {\n  var _rootProps$slotProps, _baseSelectProps$nati, _rootProps$slotProps2;\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value: valueProp,\n      field,\n      row,\n      colDef,\n      hasFocus,\n      error,\n      onValueChange,\n      initialOpen = rootProps.editMode === GridEditModes.Cell,\n      getOptionLabel: getOptionLabelProp,\n      getOptionValue: getOptionValueProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef();\n  const inputRef = React.useRef();\n  const [open, setOpen] = React.useState(initialOpen);\n  const baseSelectProps = ((_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : false;\n  const _ref = ((_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseSelect) || {},\n    {\n      MenuProps\n    } = _ref,\n    otherBaseSelectProps = _objectWithoutPropertiesLoose(_ref, _excluded2);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      var _inputRef$current;\n      (_inputRef$current = inputRef.current) == null || _inputRef$current.focus();\n    }\n  }, [hasFocus]);\n  if (!isSingleSelectColDef(colDef)) {\n    return null;\n  }\n  let valueOptions;\n  if (typeof (colDef == null ? void 0 : colDef.valueOptions) === 'function') {\n    valueOptions = colDef == null ? void 0 : colDef.valueOptions({\n      id,\n      row,\n      field\n    });\n  } else {\n    valueOptions = colDef == null ? void 0 : colDef.valueOptions;\n  }\n  if (!valueOptions) {\n    return null;\n  }\n  const getOptionValue = getOptionValueProp || colDef.getOptionValue;\n  const getOptionLabel = getOptionLabelProp || colDef.getOptionLabel;\n  const handleChange = async event => {\n    if (!isSingleSelectColDef(colDef) || !valueOptions) {\n      return;\n    }\n    setOpen(false);\n    const target = event.target;\n    // NativeSelect casts the value to a string.\n    const formattedTargetValue = getValueFromValueOptions(target.value, valueOptions, getOptionValue);\n    if (onValueChange) {\n      await onValueChange(event, formattedTargetValue);\n    }\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: formattedTargetValue\n    }, event);\n  };\n  const handleClose = (event, reason) => {\n    if (rootProps.editMode === GridEditModes.Row) {\n      setOpen(false);\n      return;\n    }\n    if (reason === 'backdropClick' || isEscapeKey(event.key)) {\n      const params = apiRef.current.getCellParams(id, field);\n      apiRef.current.publishEvent('cellEditStop', _extends({}, params, {\n        reason: isEscapeKey(event.key) ? GridCellEditStopReasons.escapeKeyDown : GridCellEditStopReasons.cellFocusOut\n      }));\n    }\n  };\n  const handleOpen = event => {\n    if (isKeyboardEvent(event) && event.key === 'Enter') {\n      return;\n    }\n    setOpen(true);\n  };\n  if (!valueOptions || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    value: valueProp,\n    onChange: handleChange,\n    open: open,\n    onOpen: handleOpen,\n    MenuProps: _extends({\n      onClose: handleClose\n    }, MenuProps),\n    error: error,\n    native: isSelectNative,\n    fullWidth: true\n  }, other, otherBaseSelectProps, {\n    children: valueOptions.map(valueOption => {\n      var _rootProps$slotProps3;\n      const value = getOptionValue(valueOption);\n      return /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, ((_rootProps$slotProps3 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps3.baseSelectOption) || {}, {\n        native: isSelectNative,\n        key: value,\n        value: value\n      }), getOptionLabel(valueOption));\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditSingleSelectCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * Used to determine the label displayed for a given value option.\n   * @param {ValueOptions} value The current value option.\n   * @returns {string} The text to be displayed.\n   */\n  getOptionLabel: PropTypes.func,\n  /**\n   * Used to determine the value used for a value option.\n   * @param {ValueOptions} value The current value option.\n   * @returns {string} The value to be used.\n   */\n  getOptionValue: PropTypes.func,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the select opens by default.\n   */\n  initialOpen: PropTypes.bool,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {SelectChangeEvent<any>} event The event source of the callback.\n   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditSingleSelectCell };\nexport const renderEditSingleSelectCell = params => /*#__PURE__*/_jsx(GridEditSingleSelectCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"align\", \"width\", \"contentWidth\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Skeleton from '@mui/material/Skeleton';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', 'cellSkeleton', `cell--text${capitalize(align)}`, 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridSkeletonCell(props) {\n  const {\n      align,\n      width,\n      contentWidth\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    align\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    className: classes.root,\n    style: {\n      width\n    }\n  }, other, {\n    children: /*#__PURE__*/_jsx(Skeleton, {\n      width: `${contentWidth}%`\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridSkeletonCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.string.isRequired,\n  contentWidth: PropTypes.number.isRequired,\n  field: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nexport { GridSkeletonCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport Badge from '@mui/material/Badge';\nimport { useGridSelector } from '../../hooks';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['filterIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderFilterIconButton(props) {\n  var _rootProps$slotProps, _rootProps$slotProps2;\n  const {\n    counter,\n    field,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const labelId = useId();\n  const panelId = useId();\n  const toggleFilter = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      open,\n      openedPanelValue\n    } = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel(undefined, panelId, labelId);\n    }\n    if (onClick) {\n      onClick(apiRef.current.getColumnHeaderParams(field), event);\n    }\n  }, [apiRef, field, onClick, panelId, labelId]);\n  if (!counter) {\n    return null;\n  }\n  const open = preferencePanel.open && preferencePanel.labelId === labelId;\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    id: labelId,\n    onClick: toggleFilter,\n    color: \"default\",\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderFiltersLabel'),\n    size: \"small\",\n    tabIndex: -1,\n    \"aria-haspopup\": \"menu\",\n    \"aria-expanded\": open,\n    \"aria-controls\": open ? panelId : undefined\n  }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseIconButton, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.columnFilteredIcon, {\n      className: classes.icon,\n      fontSize: \"small\"\n    })\n  }));\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: apiRef.current.getLocaleText('columnHeaderFiltersTooltipActive')(counter),\n    enterDelay: 1000\n  }, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseTooltip, {\n    children: /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n      children: [counter > 1 && /*#__PURE__*/_jsx(Badge, {\n        badgeContent: counter,\n        color: \"default\",\n        children: iconButton\n      }), counter === 1 && iconButton]\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderFilterIconButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  counter: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridColumnHeaderFilterIconButton };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['menuIcon', open && 'menuOpen'],\n    button: ['menuIconButton']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nexport const ColumnHeaderMenuIcon = /*#__PURE__*/React.memo(props => {\n  var _rootProps$slotProps, _rootProps$slotProps2;\n  const {\n    colDef,\n    open,\n    columnMenuId,\n    columnMenuButtonId,\n    iconButtonRef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleMenuIconClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    apiRef.current.toggleColumnMenu(colDef.field);\n  }, [apiRef, colDef.field]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('columnMenuLabel'),\n      enterDelay: 1000\n    }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        ref: iconButtonRef,\n        tabIndex: -1,\n        className: classes.button,\n        \"aria-label\": apiRef.current.getLocaleText('columnMenuLabel'),\n        size: \"small\",\n        onClick: handleMenuIconClick,\n        \"aria-haspopup\": \"menu\",\n        \"aria-expanded\": open,\n        \"aria-controls\": open ? columnMenuId : undefined,\n        id: columnMenuButtonId\n      }, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    }))\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { GridColumnHeaderSortIcon } from './GridColumnHeaderSortIcon';\nimport { ColumnHeaderMenuIcon } from './ColumnHeaderMenuIcon';\nimport { GridColumnHeaderMenu } from '../menu/columnMenu/GridColumnHeaderMenu';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { isEventTargetInPortal } from '../../utils/domUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    colDef,\n    classes,\n    isDragging,\n    sortDirection,\n    showRightBorder,\n    filterItemsCounter\n  } = ownerState;\n  const isColumnSorted = sortDirection != null;\n  const isColumnFiltered = filterItemsCounter != null && filterItemsCounter > 0;\n  // todo refactor to a prop on col isNumeric or ?? ie: coltype===price wont work\n  const isColumnNumeric = colDef.type === 'number';\n  const slots = {\n    root: ['columnHeader', colDef.headerAlign === 'left' && 'columnHeader--alignLeft', colDef.headerAlign === 'center' && 'columnHeader--alignCenter', colDef.headerAlign === 'right' && 'columnHeader--alignRight', colDef.sortable && 'columnHeader--sortable', isDragging && 'columnHeader--moving', isColumnSorted && 'columnHeader--sorted', isColumnFiltered && 'columnHeader--filtered', isColumnNumeric && 'columnHeader--numeric', 'withBorderColor', showRightBorder && 'columnHeader--withRightBorder'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderItem(props) {\n  var _rootProps$slotProps, _colDef$sortingOrder, _rootProps$slotProps2, _colDef$headerName;\n  const {\n    colDef,\n    columnMenuOpen,\n    colIndex,\n    headerHeight,\n    isResizing,\n    sortDirection,\n    sortIndex,\n    filterItemsCounter,\n    hasFocus,\n    tabIndex,\n    disableReorder,\n    separatorSide\n  } = props;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const columnMenuId = useId();\n  const columnMenuButtonId = useId();\n  const iconButtonRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const isDraggable = React.useMemo(() => !rootProps.disableColumnReorder && !disableReorder && !colDef.disableReorder, [rootProps.disableColumnReorder, disableReorder, colDef.disableReorder]);\n  let headerComponent;\n  if (colDef.renderHeader) {\n    headerComponent = colDef.renderHeader(apiRef.current.getColumnHeaderParams(colDef.field));\n  }\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder: rootProps.showColumnVerticalBorder\n  });\n  const classes = useUtilityClasses(ownerState);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(colDef.field), event);\n  }, [apiRef, colDef.field]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onClick: publish('columnHeaderClick'),\n    onDoubleClick: publish('columnHeaderDoubleClick'),\n    onMouseOver: publish('columnHeaderOver'),\n    // TODO remove as it's not used\n    onMouseOut: publish('columnHeaderOut'),\n    // TODO remove as it's not used\n    onMouseEnter: publish('columnHeaderEnter'),\n    // TODO remove as it's not used\n    onMouseLeave: publish('columnHeaderLeave'),\n    // TODO remove as it's not used\n    onKeyDown: publish('columnHeaderKeyDown'),\n    onFocus: publish('columnHeaderFocus'),\n    onBlur: publish('columnHeaderBlur')\n  }), [publish]);\n  const draggableEventHandlers = React.useMemo(() => isDraggable ? {\n    onDragStart: publish('columnHeaderDragStart'),\n    onDragEnter: publish('columnHeaderDragEnter'),\n    onDragOver: publish('columnHeaderDragOver'),\n    onDragEnd: publish('columnHeaderDragEnd')\n  } : {}, [isDraggable, publish]);\n  const columnHeaderSeparatorProps = React.useMemo(() => ({\n    onMouseDown: publish('columnSeparatorMouseDown'),\n    onDoubleClick: publish('columnSeparatorDoubleClick')\n  }), [publish]);\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  const handleExited = React.useCallback(() => {\n    setShowColumnMenuIcon(false);\n  }, []);\n  const columnMenuIconButton = !rootProps.disableColumnMenu && !colDef.disableColumnMenu && /*#__PURE__*/_jsx(ColumnHeaderMenuIcon, {\n    colDef: colDef,\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    open: showColumnMenuIcon,\n    iconButtonRef: iconButtonRef\n  });\n  const columnMenu = /*#__PURE__*/_jsx(GridColumnHeaderMenu, {\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    field: colDef.field,\n    open: columnMenuOpen,\n    target: iconButtonRef.current,\n    ContentComponent: rootProps.slots.columnMenu,\n    contentComponentProps: (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.columnMenu,\n    onExited: handleExited\n  });\n  const sortingOrder = (_colDef$sortingOrder = colDef.sortingOrder) != null ? _colDef$sortingOrder : rootProps.sortingOrder;\n  const columnTitleIconButtons = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [!rootProps.disableColumnFilter && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderFilterIconButton, _extends({\n      field: colDef.field,\n      counter: filterItemsCounter\n    }, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.columnHeaderFilterIconButton)), colDef.sortable && !colDef.hideSortIcons && /*#__PURE__*/_jsx(GridColumnHeaderSortIcon, {\n      direction: sortDirection,\n      index: sortIndex,\n      sortingOrder: sortingOrder\n    })]\n  });\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus == null || elementToFocus.focus();\n      apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n    }\n  }, [apiRef, hasFocus]);\n  const headerClassName = typeof colDef.headerClassName === 'function' ? colDef.headerClassName({\n    field: colDef.field,\n    colDef\n  }) : colDef.headerClassName;\n  const label = (_colDef$headerName = colDef.headerName) != null ? _colDef$headerName : colDef.field;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: columnMenuOpen,\n    colIndex: colIndex,\n    height: headerHeight,\n    isResizing: isResizing,\n    sortDirection: sortDirection,\n    hasFocus: hasFocus,\n    tabIndex: tabIndex,\n    separatorSide: separatorSide,\n    isDraggable: isDraggable,\n    headerComponent: headerComponent,\n    description: colDef.description,\n    elementId: colDef.field,\n    width: colDef.computedWidth,\n    columnMenuIconButton: columnMenuIconButton,\n    columnTitleIconButtons: columnTitleIconButtons,\n    headerClassName: headerClassName,\n    label: label,\n    resizable: !rootProps.disableColumnResize && !!colDef.resizable,\n    \"data-field\": colDef.field,\n    columnMenu: columnMenu,\n    draggableContainerProps: draggableEventHandlers,\n    columnHeaderSeparatorProps: columnHeaderSeparatorProps\n  }, mouseEventsHandlers));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  colIndex: PropTypes.number.isRequired,\n  columnMenuOpen: PropTypes.bool.isRequired,\n  disableReorder: PropTypes.bool,\n  filterItemsCounter: PropTypes.number,\n  hasFocus: PropTypes.bool,\n  headerHeight: PropTypes.number.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isResizing: PropTypes.bool.isRequired,\n  separatorSide: PropTypes.oneOf(['left', 'right']),\n  sortDirection: PropTypes.oneOf(['asc', 'desc']),\n  sortIndex: PropTypes.number,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired\n} : void 0;\nexport { GridColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"resizable\", \"resizing\", \"height\", \"side\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GridColumnHeaderSeparatorSides = /*#__PURE__*/function (GridColumnHeaderSeparatorSides) {\n  GridColumnHeaderSeparatorSides[\"Left\"] = \"left\";\n  GridColumnHeaderSeparatorSides[\"Right\"] = \"right\";\n  return GridColumnHeaderSeparatorSides;\n}(GridColumnHeaderSeparatorSides || {});\nconst useUtilityClasses = ownerState => {\n  const {\n    resizable,\n    resizing,\n    classes,\n    side\n  } = ownerState;\n  const slots = {\n    root: ['columnSeparator', resizable && 'columnSeparator--resizable', resizing && 'columnSeparator--resizing', side && `columnSeparator--side${capitalize(side)}`],\n    icon: ['iconSeparator']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderSeparatorRaw(props) {\n  const {\n      height,\n      side = GridColumnHeaderSeparatorSides.Right\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    side,\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const stopClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      className: classes.root,\n      style: {\n        minHeight: height,\n        opacity: rootProps.showColumnVerticalBorder ? 0 : 1\n      }\n    }, other, {\n      onClick: stopClick,\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnResizeIcon, {\n        className: classes.icon\n      })\n    }))\n  );\n}\nconst GridColumnHeaderSeparator = /*#__PURE__*/React.memo(GridColumnHeaderSeparatorRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSeparatorRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  height: PropTypes.number.isRequired,\n  resizable: PropTypes.bool.isRequired,\n  resizing: PropTypes.bool.isRequired,\n  side: PropTypes.oneOf(['left', 'right'])\n} : void 0;\nexport { GridColumnHeaderSeparator, GridColumnHeaderSeparatorSides };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport Badge from '@mui/material/Badge';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['sortIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction getIcon(icons, direction, className, sortingOrder) {\n  let Icon;\n  const iconProps = {};\n  if (direction === 'asc') {\n    Icon = icons.columnSortedAscendingIcon;\n  } else if (direction === 'desc') {\n    Icon = icons.columnSortedDescendingIcon;\n  } else {\n    Icon = icons.columnUnsortedIcon;\n    iconProps.sortingOrder = sortingOrder;\n  }\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: className\n  }, iconProps)) : null;\n}\nfunction GridColumnHeaderSortIconRaw(props) {\n  var _rootProps$slotProps;\n  const {\n    direction,\n    index,\n    sortingOrder\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const iconElement = getIcon(rootProps.slots, direction, classes.icon, sortingOrder);\n  if (!iconElement) {\n    return null;\n  }\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    tabIndex: -1,\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    title: apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    size: \"small\"\n  }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseIconButton, {\n    children: iconElement\n  }));\n  return /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n    children: [index != null && /*#__PURE__*/_jsx(Badge, {\n      badgeContent: index,\n      color: \"default\",\n      children: iconButton\n    }), index == null && iconButton]\n  });\n}\nconst GridColumnHeaderSortIcon = /*#__PURE__*/React.memo(GridColumnHeaderSortIconRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSortIconRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  index: PropTypes.number,\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])).isRequired\n} : void 0;\nexport { GridColumnHeaderSortIcon };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { isOverflown } from '../../utils/domUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaderTitle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeaderTitleRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderTitle',\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\n})({\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  fontWeight: 'var(--unstable_DataGrid-headWeight)'\n});\nconst ColumnHeaderInnerTitle = /*#__PURE__*/React.forwardRef(function ColumnHeaderInnerTitle(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\nfunction GridColumnHeaderTitle(props) {\n  var _rootProps$slotProps;\n  const {\n    label,\n    description\n  } = props;\n  const rootProps = useGridRootProps();\n  const titleRef = React.useRef(null);\n  const [tooltip, setTooltip] = React.useState('');\n  const handleMouseOver = React.useCallback(() => {\n    if (!description && titleRef != null && titleRef.current) {\n      const isOver = isOverflown(titleRef.current);\n      if (isOver) {\n        setTooltip(label);\n      } else {\n        setTooltip('');\n      }\n    }\n  }, [description, label]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: description || tooltip\n  }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseTooltip, {\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\n      onMouseOver: handleMouseOver,\n      ref: titleRef,\n      children: label\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnWidth: PropTypes.number.isRequired,\n  description: PropTypes.node,\n  label: PropTypes.string.isRequired\n} : void 0;\nexport { GridColumnHeaderTitle };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"classes\", \"columnMenuOpen\", \"colIndex\", \"height\", \"isResizing\", \"sortDirection\", \"hasFocus\", \"tabIndex\", \"separatorSide\", \"isDraggable\", \"headerComponent\", \"description\", \"elementId\", \"width\", \"columnMenuIconButton\", \"columnMenu\", \"columnTitleIconButtons\", \"headerClassName\", \"label\", \"resizable\", \"draggableContainerProps\", \"columnHeaderSeparatorProps\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { GridColumnHeaderTitle } from './GridColumnHeaderTitle';\nimport { GridColumnHeaderSeparator } from './GridColumnHeaderSeparator';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridGenericColumnHeaderItem = /*#__PURE__*/React.forwardRef(function GridGenericColumnHeaderItem(props, ref) {\n  const {\n      classes,\n      columnMenuOpen,\n      colIndex,\n      height,\n      isResizing,\n      sortDirection,\n      hasFocus,\n      tabIndex,\n      separatorSide,\n      isDraggable,\n      headerComponent,\n      description,\n      width,\n      columnMenuIconButton = null,\n      columnMenu = null,\n      columnTitleIconButtons = null,\n      headerClassName,\n      label,\n      resizable,\n      draggableContainerProps,\n      columnHeaderSeparatorProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const handleRef = useForkRef(headerCellRef, ref);\n  let ariaSort = 'none';\n  if (sortDirection != null) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus == null || elementToFocus.focus();\n      apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n    }\n  }, [apiRef, hasFocus]);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, headerClassName),\n    style: {\n      height,\n      width,\n      minWidth: width,\n      maxWidth: width\n    },\n    role: \"columnheader\",\n    tabIndex: tabIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-sort\": ariaSort,\n    \"aria-label\": headerComponent == null ? label : undefined\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(\"div\", _extends({\n      className: classes.draggableContainer,\n      draggable: isDraggable,\n      role: \"presentation\"\n    }, draggableContainerProps, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.titleContainer,\n        role: \"presentation\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: classes.titleContainerContent,\n          children: headerComponent !== undefined ? headerComponent : /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n            label: label,\n            description: description,\n            columnWidth: width\n          })\n        }), columnTitleIconButtons]\n      }), columnMenuIconButton]\n    })), /*#__PURE__*/_jsx(GridColumnHeaderSeparator, _extends({\n      resizable: !rootProps.disableColumnResize && !!resizable,\n      resizing: isResizing,\n      height: height,\n      side: separatorSide\n    }, columnHeaderSeparatorProps)), columnMenu]\n  }));\n});\nexport { GridGenericColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['iconButtonContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridIconButtonContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'IconButtonContainer',\n  overridesResolver: (props, styles) => styles.iconButtonContainer\n})(() => ({\n  display: 'flex',\n  visibility: 'hidden',\n  width: 0\n}));\nexport const GridIconButtonContainer = /*#__PURE__*/React.forwardRef(function GridIconButtonContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridIconButtonContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"id\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"colDef\", \"isEditable\", \"cellMode\", \"hasFocus\", \"tabIndex\", \"api\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { isSpaceKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridCellCheckboxForwardRef = /*#__PURE__*/React.forwardRef(function GridCellCheckboxRenderer(props, ref) {\n  var _rootProps$slotProps;\n  const {\n      field,\n      id,\n      value: isChecked,\n      rowNode,\n      hasFocus,\n      tabIndex\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const checkboxElement = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRef = useForkRef(checkboxElement, ref);\n  const element = apiRef.current.getCellElement(id, field);\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked,\n      id\n    };\n    apiRef.current.publishEvent('rowSelectionCheckboxChange', params, event);\n  };\n  React.useLayoutEffect(() => {\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [element, tabIndex]);\n  React.useEffect(() => {\n    if (hasFocus) {\n      var _checkboxElement$curr;\n      const input = (_checkboxElement$curr = checkboxElement.current) == null ? void 0 : _checkboxElement$curr.querySelector('input');\n      input == null || input.focus({\n        preventScroll: true\n      });\n    } else if (rippleRef.current) {\n      // Only available in @mui/material v5.4.1 or later\n      rippleRef.current.stop({});\n    }\n  }, [hasFocus]);\n  const handleKeyDown = React.useCallback(event => {\n    if (isSpaceKey(event.key)) {\n      // We call event.stopPropagation to avoid selecting the row and also scrolling to bottom\n      // TODO: Remove and add a check inside useGridKeyboardNavigation\n      event.stopPropagation();\n    }\n  }, []);\n  if (rowNode.type === 'footer' || rowNode.type === 'pinnedRow') {\n    return null;\n  }\n  const isSelectable = apiRef.current.isRowSelectable(id);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectRow' : 'checkboxSelectionSelectRow');\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: handleRef,\n    tabIndex: tabIndex,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    onKeyDown: handleKeyDown,\n    disabled: !isSelectable,\n    touchRippleRef: rippleRef\n  }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellCheckboxForwardRef.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridCellCheckboxForwardRef };\nexport const GridCellCheckboxRenderer = GridCellCheckboxForwardRef;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"colDef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridTabIndexColumnHeaderSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { gridRowSelectionStateSelector } from '../../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridExpandedSortedRowIdsSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridHeaderCheckbox = /*#__PURE__*/React.forwardRef(function GridHeaderCheckbox(props, ref) {\n  var _rootProps$slotProps;\n  const other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [, forceUpdate] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const selection = useGridSelector(apiRef, gridRowSelectionStateSelector);\n  const visibleRowIds = useGridSelector(apiRef, gridExpandedSortedRowIdsSelector);\n  const paginatedVisibleRowIds = useGridSelector(apiRef, gridPaginatedVisibleSortedGridRowIdsSelector);\n  const filteredSelection = React.useMemo(() => {\n    if (typeof rootProps.isRowSelectable !== 'function') {\n      return selection;\n    }\n    return selection.filter(id => {\n      // The row might have been deleted\n      if (!apiRef.current.getRow(id)) {\n        return false;\n      }\n      return rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n    });\n  }, [apiRef, rootProps.isRowSelectable, selection]);\n\n  // All the rows that could be selected / unselected by toggling this checkbox\n  const selectionCandidates = React.useMemo(() => {\n    const rowIds = !rootProps.pagination || !rootProps.checkboxSelectionVisibleOnly ? visibleRowIds : paginatedVisibleRowIds;\n\n    // Convert to an object to make O(1) checking if a row exists or not\n    // TODO create selector that returns visibleRowIds/paginatedVisibleRowIds as an object\n    return rowIds.reduce((acc, id) => {\n      acc[id] = true;\n      return acc;\n    }, {});\n  }, [rootProps.pagination, rootProps.checkboxSelectionVisibleOnly, paginatedVisibleRowIds, visibleRowIds]);\n\n  // Amount of rows selected and that are visible in the current page\n  const currentSelectionSize = React.useMemo(() => filteredSelection.filter(id => selectionCandidates[id]).length, [filteredSelection, selectionCandidates]);\n  const isIndeterminate = currentSelectionSize > 0 && currentSelectionSize < Object.keys(selectionCandidates).length;\n  const isChecked = currentSelectionSize > 0;\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked\n    };\n    apiRef.current.publishEvent('headerSelectionCheckboxChange', params);\n  };\n  const tabIndex = tabIndexState !== null && tabIndexState.field === props.field ? 0 : -1;\n  React.useLayoutEffect(() => {\n    const element = apiRef.current.getColumnHeaderElement(props.field);\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [tabIndex, apiRef, props.field]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // imperative toggle the checkbox because Space is disable by some preventDefault\n      apiRef.current.publishEvent('headerSelectionCheckboxChange', {\n        value: !isChecked\n      });\n    }\n  }, [apiRef, isChecked]);\n  const handleSelectionChange = React.useCallback(() => {\n    forceUpdate(p => !p);\n  }, []);\n  React.useEffect(() => {\n    return apiRef.current.subscribeEvent('rowSelectionChange', handleSelectionChange);\n  }, [apiRef, handleSelectionChange]);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectAllRows' : 'checkboxSelectionSelectAllRows');\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: ref,\n    indeterminate: isIndeterminate,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    tabIndex: tabIndex,\n    onKeyDown: handleKeyDown\n  }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderCheckbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The column of the current header component.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the column that triggered the event\n   */\n  field: PropTypes.string.isRequired\n} : void 0;\nexport { GridHeaderCheckbox };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerContainer', 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFooterContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterContainer',\n  overridesResolver: (props, styles) => styles.footerContainer\n})({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  minHeight: 52,\n  borderTop: '1px solid'\n});\nconst GridFooterContainer = /*#__PURE__*/React.forwardRef(function GridFooterContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridFooterContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooterContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooterContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridOverlayRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Overlay',\n  overridesResolver: (_, styles) => styles.overlay\n})({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignSelf: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'var(--unstable_DataGrid-overlayBackground)'\n});\nconst GridOverlay = /*#__PURE__*/React.forwardRef(function GridOverlay(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridOverlayRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { alpha, styled, darken, lighten } from '@mui/material/styles';\nimport { gridClasses } from '../../constants/gridClasses';\nfunction getBorderColor(theme) {\n  if (theme.vars) {\n    return theme.vars.palette.TableCell.border;\n  }\n  if (theme.palette.mode === 'light') {\n    return lighten(alpha(theme.palette.divider, 1), 0.88);\n  }\n  return darken(alpha(theme.palette.divider, 1), 0.68);\n}\nconst columnHeadersStyles = {\n  [`.${gridClasses.columnSeparator}, .${gridClasses['columnSeparator--resizing']}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  }\n};\nconst columnHeaderStyles = {\n  [`& .${gridClasses.iconButtonContainer}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  },\n  [`& .${gridClasses.menuIcon}`]: {\n    width: 'auto',\n    visibility: 'visible'\n  }\n};\nexport const GridRootStyles = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses.autoHeight}`]: styles.autoHeight\n  }, {\n    [`&.${gridClasses.aggregationColumnHeader}`]: styles.aggregationColumnHeader\n  }, {\n    [`&.${gridClasses['aggregationColumnHeader--alignLeft']}`]: styles['aggregationColumnHeader--alignLeft']\n  }, {\n    [`&.${gridClasses['aggregationColumnHeader--alignCenter']}`]: styles['aggregationColumnHeader--alignCenter']\n  }, {\n    [`&.${gridClasses['aggregationColumnHeader--alignRight']}`]: styles['aggregationColumnHeader--alignRight']\n  }, {\n    [`&.${gridClasses.aggregationColumnHeaderLabel}`]: styles.aggregationColumnHeaderLabel\n  }, {\n    [`&.${gridClasses['root--disableUserSelection']} .${gridClasses.cell}`]: styles['root--disableUserSelection']\n  }, {\n    [`&.${gridClasses.autosizing}`]: styles.autosizing\n  }, {\n    [`& .${gridClasses.editBooleanCell}`]: styles.editBooleanCell\n  }, {\n    [`& .${gridClasses['cell--editing']}`]: styles['cell--editing']\n  }, {\n    [`& .${gridClasses['cell--textCenter']}`]: styles['cell--textCenter']\n  }, {\n    [`& .${gridClasses['cell--textLeft']}`]: styles['cell--textLeft']\n  }, {\n    [`& .${gridClasses['cell--textRight']}`]: styles['cell--textRight']\n  },\n  // TODO v6: Remove\n  {\n    [`& .${gridClasses['cell--withRenderer']}`]: styles['cell--withRenderer']\n  }, {\n    [`& .${gridClasses.cell}`]: styles.cell\n  }, {\n    [`& .${gridClasses['cell--rangeTop']}`]: styles['cell--rangeTop']\n  }, {\n    [`& .${gridClasses['cell--rangeBottom']}`]: styles['cell--rangeBottom']\n  }, {\n    [`& .${gridClasses['cell--rangeLeft']}`]: styles['cell--rangeLeft']\n  }, {\n    [`& .${gridClasses['cell--rangeRight']}`]: styles['cell--rangeRight']\n  }, {\n    [`& .${gridClasses['cell--withRightBorder']}`]: styles['cell--withRightBorder']\n  }, {\n    [`& .${gridClasses.cellContent}`]: styles.cellContent\n  }, {\n    [`& .${gridClasses.cellCheckbox}`]: styles.cellCheckbox\n  }, {\n    [`& .${gridClasses.cellSkeleton}`]: styles.cellSkeleton\n  }, {\n    [`& .${gridClasses.checkboxInput}`]: styles.checkboxInput\n  }, {\n    [`& .${gridClasses['columnHeader--alignCenter']}`]: styles['columnHeader--alignCenter']\n  }, {\n    [`& .${gridClasses['columnHeader--alignLeft']}`]: styles['columnHeader--alignLeft']\n  }, {\n    [`& .${gridClasses['columnHeader--alignRight']}`]: styles['columnHeader--alignRight']\n  }, {\n    [`& .${gridClasses['columnHeader--dragging']}`]: styles['columnHeader--dragging']\n  }, {\n    [`& .${gridClasses['columnHeader--moving']}`]: styles['columnHeader--moving']\n  }, {\n    [`& .${gridClasses['columnHeader--numeric']}`]: styles['columnHeader--numeric']\n  }, {\n    [`& .${gridClasses['columnHeader--sortable']}`]: styles['columnHeader--sortable']\n  }, {\n    [`& .${gridClasses['columnHeader--sorted']}`]: styles['columnHeader--sorted']\n  }, {\n    [`& .${gridClasses['columnHeader--withRightBorder']}`]: styles['columnHeader--withRightBorder']\n  }, {\n    [`& .${gridClasses.columnHeader}`]: styles.columnHeader\n  }, {\n    [`& .${gridClasses.headerFilterRow}`]: styles.headerFilterRow\n  }, {\n    [`& .${gridClasses.columnHeaderCheckbox}`]: styles.columnHeaderCheckbox\n  }, {\n    [`& .${gridClasses.columnHeaderDraggableContainer}`]: styles.columnHeaderDraggableContainer\n  }, {\n    [`& .${gridClasses.columnHeaderTitleContainer}`]: styles.columnHeaderTitleContainer\n  }, {\n    [`& .${gridClasses['columnSeparator--resizable']}`]: styles['columnSeparator--resizable']\n  }, {\n    [`& .${gridClasses['columnSeparator--resizing']}`]: styles['columnSeparator--resizing']\n  }, {\n    [`& .${gridClasses.columnSeparator}`]: styles.columnSeparator\n  }, {\n    [`& .${gridClasses.filterIcon}`]: styles.filterIcon\n  }, {\n    [`& .${gridClasses.iconSeparator}`]: styles.iconSeparator\n  }, {\n    [`& .${gridClasses.menuIcon}`]: styles.menuIcon\n  }, {\n    [`& .${gridClasses.menuIconButton}`]: styles.menuIconButton\n  }, {\n    [`& .${gridClasses.menuOpen}`]: styles.menuOpen\n  }, {\n    [`& .${gridClasses.menuList}`]: styles.menuList\n  }, {\n    [`& .${gridClasses['row--editable']}`]: styles['row--editable']\n  }, {\n    [`& .${gridClasses['row--editing']}`]: styles['row--editing']\n  }, {\n    [`& .${gridClasses['row--dragging']}`]: styles['row--dragging']\n  }, {\n    [`& .${gridClasses.row}`]: styles.row\n  }, {\n    [`& .${gridClasses.rowReorderCellPlaceholder}`]: styles.rowReorderCellPlaceholder\n  }, {\n    [`& .${gridClasses.rowReorderCell}`]: styles.rowReorderCell\n  }, {\n    [`& .${gridClasses['rowReorderCell--draggable']}`]: styles['rowReorderCell--draggable']\n  }, {\n    [`& .${gridClasses.sortIcon}`]: styles.sortIcon\n  }, {\n    [`& .${gridClasses.withBorderColor}`]: styles.withBorderColor\n  }, {\n    [`& .${gridClasses.treeDataGroupingCell}`]: styles.treeDataGroupingCell\n  }, {\n    [`& .${gridClasses.treeDataGroupingCellToggle}`]: styles.treeDataGroupingCellToggle\n  }, {\n    [`& .${gridClasses.detailPanelToggleCell}`]: styles.detailPanelToggleCell\n  }, {\n    [`& .${gridClasses['detailPanelToggleCell--expanded']}`]: styles['detailPanelToggleCell--expanded']\n  }, styles.root]\n})(({\n  theme\n}) => {\n  const borderColor = getBorderColor(theme);\n  const radius = theme.shape.borderRadius;\n  const gridStyle = _extends({\n    '--unstable_DataGrid-radius': typeof radius === 'number' ? `${radius}px` : radius,\n    '--unstable_DataGrid-headWeight': theme.typography.fontWeightMedium,\n    '--unstable_DataGrid-overlayBackground': theme.vars ? `rgba(${theme.vars.palette.background.defaultChannel} / ${theme.vars.palette.action.disabledOpacity})` : alpha(theme.palette.background.default, theme.palette.action.disabledOpacity),\n    '--DataGrid-cellOffsetMultiplier': 2,\n    flex: 1,\n    boxSizing: 'border-box',\n    position: 'relative',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderColor,\n    borderRadius: 'var(--unstable_DataGrid-radius)',\n    color: (theme.vars || theme).palette.text.primary\n  }, theme.typography.body2, {\n    outline: 'none',\n    height: '100%',\n    display: 'flex',\n    minWidth: 0,\n    // See https://github.com/mui/mui-x/issues/8547\n    minHeight: 0,\n    flexDirection: 'column',\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    [`&.${gridClasses.autoHeight}`]: {\n      height: 'auto',\n      [`& .${gridClasses['row--lastVisible']} .${gridClasses.cell}`]: {\n        borderBottomColor: 'transparent'\n      }\n    },\n    [`&.${gridClasses.autosizing}`]: {\n      [`& .${gridClasses.columnHeaderTitleContainerContent} > *`]: {\n        overflow: 'visible !important'\n      },\n      [`& .${gridClasses.cell} > *`]: {\n        overflow: 'visible !important',\n        whiteSpace: 'nowrap'\n      },\n      [`& .${gridClasses.groupingCriteriaCell}`]: {\n        width: 'unset'\n      },\n      [`& .${gridClasses.treeDataGroupingCell}`]: {\n        width: 'unset'\n      }\n    },\n    [`& .${gridClasses['virtualScrollerContent--overflowed']} .${gridClasses['row--lastVisible']} .${gridClasses.cell}`]: {\n      borderBottomColor: 'transparent'\n    },\n    [`& .${gridClasses.columnHeader}, & .${gridClasses.cell}`]: {\n      WebkitTapHighlightColor: 'transparent',\n      lineHeight: null,\n      padding: '0 10px',\n      boxSizing: 'border-box'\n    },\n    [`& .${gridClasses.columnHeader}:focus-within, & .${gridClasses.cell}:focus-within`]: {\n      outline: `solid ${theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / 0.5)` : alpha(theme.palette.primary.main, 0.5)} 1px`,\n      outlineWidth: 1,\n      outlineOffset: -1\n    },\n    [`& .${gridClasses.columnHeader}:focus, & .${gridClasses.cell}:focus`]: {\n      outline: `solid ${theme.palette.primary.main} 1px`\n    },\n    [`& .${gridClasses.columnHeaderCheckbox}, & .${gridClasses.cellCheckbox}`]: {\n      padding: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses.columnHeader}`]: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses['columnHeader--sorted']} .${gridClasses.iconButtonContainer}, & .${gridClasses['columnHeader--filtered']} .${gridClasses.iconButtonContainer}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${gridClasses.columnHeader}:not(.${gridClasses['columnHeader--sorted']}) .${gridClasses.sortIcon}`]: {\n      opacity: 0,\n      transition: theme.transitions.create(['opacity'], {\n        duration: theme.transitions.duration.shorter\n      })\n    },\n    [`& .${gridClasses.columnHeaderTitleContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      minWidth: 0,\n      flex: 1,\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      // to anchor the aggregation label\n      position: 'relative'\n    },\n    [`& .${gridClasses.columnHeaderTitleContainerContent}`]: {\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses['columnHeader--filledGroup']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      borderBottomWidth: '1px',\n      borderBottomStyle: 'solid',\n      boxSizing: 'border-box'\n    },\n    [`& .${gridClasses['columnHeader--filledGroup']}.${gridClasses['columnHeader--showColumnBorder']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      borderBottom: `none`\n    },\n    [`& .${gridClasses['columnHeader--filledGroup']}.${gridClasses['columnHeader--showColumnBorder']}`]: {\n      borderBottomWidth: '1px',\n      borderBottomStyle: 'solid',\n      boxSizing: 'border-box'\n    },\n    [`& .${gridClasses.headerFilterRow}`]: {\n      borderTop: `1px solid ${borderColor}`\n    },\n    [`& .${gridClasses.sortIcon}, & .${gridClasses.filterIcon}`]: {\n      fontSize: 'inherit'\n    },\n    [`& .${gridClasses['columnHeader--sortable']}`]: {\n      cursor: 'pointer'\n    },\n    [`& .${gridClasses['columnHeader--alignCenter']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses['columnHeader--alignRight']} .${gridClasses.columnHeaderDraggableContainer}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      flexDirection: 'row-reverse'\n    },\n    [`& .${gridClasses['columnHeader--alignCenter']} .${gridClasses.menuIcon}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -6\n    },\n    [`& .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -10\n    },\n    [`& .${gridClasses['columnHeader--moving']}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.hover\n    },\n    [`& .${gridClasses.columnSeparator}`]: {\n      visibility: 'hidden',\n      position: 'absolute',\n      zIndex: 100,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      color: borderColor\n    },\n    '@media (hover: hover)': {\n      [`& .${gridClasses.columnHeaders}:hover`]: columnHeadersStyles,\n      [`& .${gridClasses.columnHeader}:hover`]: columnHeaderStyles,\n      [`& .${gridClasses.columnHeader}:not(.${gridClasses['columnHeader--sorted']}):hover .${gridClasses.sortIcon}`]: {\n        opacity: 0.5\n      }\n    },\n    '@media (hover: none)': {\n      [`& .${gridClasses.columnHeaders}`]: columnHeadersStyles,\n      [`& .${gridClasses.columnHeader}`]: columnHeaderStyles\n    },\n    [`& .${gridClasses['columnSeparator--sideLeft']}`]: {\n      left: -12\n    },\n    [`& .${gridClasses['columnSeparator--sideRight']}`]: {\n      right: -12\n    },\n    [`& .${gridClasses['columnSeparator--resizable']}`]: {\n      cursor: 'col-resize',\n      touchAction: 'none',\n      '&:hover': {\n        color: (theme.vars || theme).palette.text.primary,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          color: borderColor\n        }\n      },\n      [`&.${gridClasses['columnSeparator--resizing']}`]: {\n        color: (theme.vars || theme).palette.text.primary\n      },\n      '& svg': {\n        pointerEvents: 'none'\n      }\n    },\n    [`& .${gridClasses.iconSeparator}`]: {\n      color: 'inherit'\n    },\n    [`& .${gridClasses.menuIcon}`]: {\n      width: 0,\n      visibility: 'hidden',\n      fontSize: 20,\n      marginRight: -10,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`.${gridClasses.menuOpen}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${gridClasses.row}`]: {\n      display: 'flex',\n      width: 'fit-content',\n      breakInside: 'avoid',\n      // Avoid the row to be broken in two different print pages.\n      '&:hover, &.Mui-hovered': {\n        backgroundColor: (theme.vars || theme).palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&.Mui-selected': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n        '&:hover, &.Mui-hovered': {\n          backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(\n                ${theme.vars.palette.action.selectedOpacity} + \n                ${theme.vars.palette.action.hoverOpacity}\n              ))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n          }\n        }\n      }\n    },\n    [`& .${gridClasses.cell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      borderBottom: '1px solid',\n      '&.Mui-selected': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n        '&:hover, &.Mui-hovered': {\n          backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity + theme.palette.action.hoverOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n          }\n        }\n      }\n    },\n    [`&.${gridClasses['root--disableUserSelection']} .${gridClasses.cell}`]: {\n      userSelect: 'none'\n    },\n    [`& .${gridClasses.row}:not(.${gridClasses['row--dynamicHeight']}) > .${gridClasses.cell}`]: {\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    },\n    [`& .${gridClasses.cellContent}`]: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    },\n    [`& .${gridClasses.cell}.${gridClasses['cell--selectionMode']}`]: {\n      cursor: 'default'\n    },\n    [`& .${gridClasses.cell}.${gridClasses['cell--editing']}`]: {\n      padding: 1,\n      display: 'flex',\n      boxShadow: theme.shadows[2],\n      backgroundColor: (theme.vars || theme).palette.background.paper,\n      '&:focus-within': {\n        outline: `solid ${(theme.vars || theme).palette.primary.main} 1px`,\n        outlineOffset: '-1px'\n      }\n    },\n    [`& .${gridClasses['row--editing']}`]: {\n      boxShadow: theme.shadows[2]\n    },\n    [`& .${gridClasses['row--editing']} .${gridClasses.cell}`]: {\n      boxShadow: theme.shadows[0],\n      backgroundColor: (theme.vars || theme).palette.background.paper\n    },\n    [`& .${gridClasses.editBooleanCell}`]: {\n      display: 'flex',\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses.booleanCell}[data-value=\"true\"]`]: {\n      color: (theme.vars || theme).palette.text.secondary\n    },\n    [`& .${gridClasses.booleanCell}[data-value=\"false\"]`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    },\n    [`& .${gridClasses.actionsCell}`]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gridGap: theme.spacing(1)\n    },\n    [`& .${gridClasses.rowReorderCell}`]: {\n      display: 'inline-flex',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      opacity: (theme.vars || theme).palette.action.disabledOpacity\n    },\n    [`& .${gridClasses['rowReorderCell--draggable']}`]: {\n      cursor: 'move',\n      opacity: 1\n    },\n    [`& .${gridClasses.rowReorderCellContainer}`]: {\n      padding: 0,\n      alignItems: 'stretch'\n    },\n    [`.${gridClasses.withBorderColor}`]: {\n      borderColor\n    },\n    [`& .${gridClasses['cell--withRightBorder']}`]: {\n      borderRightWidth: '1px',\n      borderRightStyle: 'solid'\n    },\n    [`& .${gridClasses['columnHeader--withRightBorder']}`]: {\n      borderRightWidth: '1px',\n      borderRightStyle: 'solid'\n    },\n    [`& .${gridClasses['cell--textLeft']}`]: {\n      justifyContent: 'flex-start'\n    },\n    [`& .${gridClasses['cell--textRight']}`]: {\n      justifyContent: 'flex-end'\n    },\n    [`& .${gridClasses['cell--textCenter']}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses.columnHeaderDraggableContainer}`]: {\n      display: 'flex',\n      width: '100%',\n      height: '100%'\n    },\n    [`& .${gridClasses.rowReorderCellPlaceholder}`]: {\n      display: 'none'\n    },\n    [`& .${gridClasses['columnHeader--dragging']}, & .${gridClasses['row--dragging']}`]: {\n      background: (theme.vars || theme).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (theme.vars || theme).palette.action.disabledOpacity\n    },\n    [`& .${gridClasses['row--dragging']}`]: {\n      background: (theme.vars || theme).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (theme.vars || theme).palette.action.disabledOpacity,\n      [`& .${gridClasses.rowReorderCellPlaceholder}`]: {\n        display: 'flex'\n      }\n    },\n    [`& .${gridClasses.treeDataGroupingCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${gridClasses.treeDataGroupingCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: theme.spacing(2)\n    },\n    [`& .${gridClasses.groupingCriteriaCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${gridClasses.groupingCriteriaCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: theme.spacing(2)\n    }\n  });\n  return gridStyle;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_capitalize as capitalize, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { GridRootStyles } from './GridRootStyles';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridDensityValueSelector } from '../../hooks/features/density/densitySelector';\nimport { useGridAriaAttributes } from '../../hooks/utils/useGridAriaAttributes';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    autoHeight,\n    density,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`, 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  var _rootProps$experiment;\n  const rootProps = useGridRootProps();\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const densityValue = useGridSelector(apiRef, gridDensityValueSelector);\n  const rootContainerRef = React.useRef(null);\n  const handleRef = useForkRef(rootContainerRef, ref);\n  const getAriaAttributes = (_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.ariaV7 // ariaV7 should never change\n  ? null : useGridAriaAttributes;\n  const ariaAttributes = typeof getAriaAttributes === 'function' ? getAriaAttributes() : null;\n  const ownerState = _extends({}, rootProps, {\n    density: densityValue\n  });\n  const classes = useUtilityClasses(ownerState);\n  apiRef.current.register('public', {\n    rootElementRef: rootContainerRef\n  });\n\n  // Our implementation of <NoSsr />\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  if (!mountedState) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(className, classes.root),\n    ownerState: ownerState\n  }, ariaAttributes, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"open\", \"target\", \"onClose\", \"children\", \"position\", \"className\", \"onExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect, HTMLElementType } from '@mui/utils';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['menu']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridMenuRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Menu',\n  overridesResolver: (_, styles) => styles.menu\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal,\n  [`& .${gridClasses.menuList}`]: {\n    outline: 0\n  }\n}));\nconst transformOrigin = {\n  'bottom-start': 'top left',\n  'bottom-end': 'top right'\n};\nfunction GridMenu(props) {\n  var _rootProps$slotProps;\n  const {\n      open,\n      target,\n      onClose,\n      children,\n      position,\n      className,\n      onExited\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const savedFocusRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (open) {\n      savedFocusRef.current = document.activeElement instanceof HTMLElement ? document.activeElement : null;\n    } else {\n      var _savedFocusRef$curren, _savedFocusRef$curren2;\n      (_savedFocusRef$curren = savedFocusRef.current) == null || (_savedFocusRef$curren2 = _savedFocusRef$curren.focus) == null || _savedFocusRef$curren2.call(_savedFocusRef$curren);\n      savedFocusRef.current = null;\n    }\n  }, [open]);\n  React.useEffect(() => {\n    // Emit menuOpen or menuClose events\n    const eventName = open ? 'menuOpen' : 'menuClose';\n    apiRef.current.publishEvent(eventName, {\n      target\n    });\n  }, [apiRef, open, target]);\n  const handleExited = popperOnExited => node => {\n    if (popperOnExited) {\n      popperOnExited();\n    }\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleClickAway = event => {\n    if (event.target && (target === event.target || target != null && target.contains(event.target))) {\n      return;\n    }\n    onClose(event);\n  };\n  return /*#__PURE__*/_jsx(GridMenuRoot, _extends({\n    as: rootProps.slots.basePopper,\n    className: clsx(className, classes.root),\n    ownerState: rootProps,\n    open: open,\n    anchorEl: target,\n    transition: true,\n    placement: position\n  }, other, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.basePopper, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(ClickAwayListener, {\n      onClickAway: handleClickAway,\n      mouseEvent: \"onMouseDown\",\n      children: /*#__PURE__*/_jsx(Grow, _extends({}, TransitionProps, {\n        style: {\n          transformOrigin: transformOrigin[placement]\n        },\n        onExited: handleExited(TransitionProps == null ? void 0 : TransitionProps.onExited),\n        children: /*#__PURE__*/_jsx(Paper, {\n          children: children\n        })\n      }))\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  target: HTMLElementType\n} : void 0;\nexport { GridMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEventCallback as useEventCallback, HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../GridMenu';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const colDef = apiRef.current.getColumn(field);\n  const hideMenu = useEventCallback(event => {\n    if (event) {\n      // Prevent triggering the sorting\n      event.stopPropagation();\n      if (target != null && target.contains(event.target)) {\n        return;\n      }\n    }\n    apiRef.current.hideColumnMenu();\n  });\n  if (!target || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${colDef.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClose: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      colDef: colDef,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"displayOrder\"];\nimport * as React from 'react';\nimport Divider from '@mui/material/Divider';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nconst useGridColumnMenuSlots = props => {\n  const apiRef = useGridPrivateApiContext();\n  const {\n    defaultSlots,\n    defaultSlotProps,\n    slots = {},\n    slotProps = {},\n    hideMenu,\n    colDef,\n    addDividers = true\n  } = props;\n  const processedComponents = React.useMemo(() => _extends({}, defaultSlots, slots), [defaultSlots, slots]);\n  const processedSlotProps = React.useMemo(() => {\n    if (!slotProps || Object.keys(slotProps).length === 0) {\n      return defaultSlotProps;\n    }\n    const mergedProps = _extends({}, slotProps);\n    Object.entries(defaultSlotProps).forEach(([key, currentSlotProps]) => {\n      mergedProps[key] = _extends({}, currentSlotProps, slotProps[key] || {});\n    });\n    return mergedProps;\n  }, [defaultSlotProps, slotProps]);\n  const defaultItems = apiRef.current.unstable_applyPipeProcessors('columnMenu', [], props.colDef);\n  const userItems = React.useMemo(() => {\n    const defaultComponentKeys = Object.keys(defaultSlots);\n    return Object.keys(slots).filter(key => !defaultComponentKeys.includes(key));\n  }, [slots, defaultSlots]);\n  return React.useMemo(() => {\n    const uniqueItems = Array.from(new Set([...defaultItems, ...userItems]));\n    const cleansedItems = uniqueItems.filter(key => processedComponents[key] != null);\n    const sorted = cleansedItems.sort((a, b) => {\n      const leftItemProps = processedSlotProps[a];\n      const rightItemProps = processedSlotProps[b];\n      const leftDisplayOrder = Number.isFinite(leftItemProps == null ? void 0 : leftItemProps.displayOrder) ? leftItemProps.displayOrder : 100;\n      const rightDisplayOrder = Number.isFinite(rightItemProps == null ? void 0 : rightItemProps.displayOrder) ? rightItemProps.displayOrder : 100;\n      return leftDisplayOrder - rightDisplayOrder;\n    });\n    return sorted.reduce((acc, key, index) => {\n      let itemProps = {\n        colDef,\n        onClick: hideMenu\n      };\n      const processedComponentProps = processedSlotProps[key];\n      if (processedComponentProps) {\n        const customProps = _objectWithoutPropertiesLoose(processedComponentProps, _excluded);\n        itemProps = _extends({}, itemProps, customProps);\n      }\n      return addDividers && index !== sorted.length - 1 ? [...acc, [processedComponents[key], itemProps], [Divider, {}]] : [...acc, [processedComponents[key], itemProps]];\n    }, []);\n  }, [addDividers, colDef, defaultItems, hideMenu, processedComponents, processedSlotProps, userItems]);\n};\nexport { useGridColumnMenuSlots };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"defaultSlots\", \"defaultSlotProps\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridColumnMenuSlots } from '../../../hooks/features/columnMenu/useGridColumnMenuSlots';\nimport { GridColumnMenuContainer } from './GridColumnMenuContainer';\nimport { GridColumnMenuColumnsItem } from './menuItems/GridColumnMenuColumnsItem';\nimport { GridColumnMenuFilterItem } from './menuItems/GridColumnMenuFilterItem';\nimport { GridColumnMenuSortItem } from './menuItems/GridColumnMenuSortItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_COLUMN_MENU_SLOTS = {\n  columnMenuSortItem: GridColumnMenuSortItem,\n  columnMenuFilterItem: GridColumnMenuFilterItem,\n  columnMenuColumnsItem: GridColumnMenuColumnsItem\n};\nexport const GRID_COLUMN_MENU_SLOT_PROPS = {\n  columnMenuSortItem: {\n    displayOrder: 10\n  },\n  columnMenuFilterItem: {\n    displayOrder: 20\n  },\n  columnMenuColumnsItem: {\n    displayOrder: 30\n  }\n};\nconst GridGenericColumnMenu = /*#__PURE__*/React.forwardRef(function GridGenericColumnMenu(props, ref) {\n  const {\n      defaultSlots,\n      defaultSlotProps,\n      slots,\n      slotProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const orderedSlots = useGridColumnMenuSlots(_extends({}, other, {\n    defaultSlots,\n    defaultSlotProps,\n    slots,\n    slotProps\n  }));\n  return /*#__PURE__*/_jsx(GridColumnMenuContainer, _extends({\n    ref: ref\n  }, other, {\n    children: orderedSlots.map(([Component, otherProps], index) => /*#__PURE__*/_jsx(Component, _extends({}, otherProps), index))\n  }));\n});\nconst GridColumnMenu = /*#__PURE__*/React.forwardRef(function GridColumnMenu(props, ref) {\n  return /*#__PURE__*/_jsx(GridGenericColumnMenu, _extends({}, props, {\n    ref: ref,\n    defaultSlots: GRID_COLUMN_MENU_SLOTS,\n    defaultSlotProps: GRID_COLUMN_MENU_SLOT_PROPS\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { GridColumnMenu, GridGenericColumnMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"colDef\", \"id\", \"labelledby\", \"className\", \"children\", \"open\"];\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport MenuList from '@mui/material/MenuList';\nimport { styled } from '@mui/material/styles';\nimport { isHideMenuKey, isTabKey } from '../../../utils/keyboardUtils';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledMenuList = styled(MenuList)(() => ({\n  minWidth: 248\n}));\nconst GridColumnMenuContainer = /*#__PURE__*/React.forwardRef(function GridColumnMenuContainer(props, ref) {\n  const {\n      hideMenu,\n      id,\n      labelledby,\n      className,\n      children,\n      open\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const handleListKeyDown = React.useCallback(event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      hideMenu(event);\n    }\n  }, [hideMenu]);\n  return /*#__PURE__*/_jsx(StyledMenuList, _extends({\n    id: id,\n    ref: ref,\n    className: clsx(gridClasses.menuList, className),\n    \"aria-labelledby\": labelledby,\n    onKeyDown: handleListKeyDown,\n    autoFocus: open\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenuContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridColumnMenuHideItem } from './GridColumnMenuHideItem';\nimport { GridColumnMenuManageItem } from './GridColumnMenuManageItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuColumnsItem(props) {\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnMenuHideItem, _extends({}, props)), /*#__PURE__*/_jsx(GridColumnMenuManageItem, _extends({}, props))]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuColumnsItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuColumnsItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuFilterItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showFilter = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showFilterPanel(colDef.field);\n  }, [apiRef, colDef.field, onClick]);\n  if (rootProps.disableColumnFilter || !colDef.filterable) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showFilter,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuFilterIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuFilter')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuFilterItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuFilterItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { gridVisibleColumnDefinitionsSelector } from '../../../../hooks/features/columns';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuHideItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true);\n  // do not allow to hide the last column with menu\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n    apiRef.current.setColumnVisibility(colDef.field, false);\n    onClick(event);\n  }, [apiRef, colDef.field, onClick, disabled]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  if (colDef.hideable === false) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuHideIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuHideColumn')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuHideItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuHideItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { GridPreferencePanelsValue } from '../../../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuManageItem(props) {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event); // hide column menu\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showColumns,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuManageColumnsIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuManageColumns')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuManageItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuManageItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridSelector } from '../../../../hooks/utils/useGridSelector';\nimport { gridSortModelSelector } from '../../../../hooks/features/sorting/gridSortingSelector';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuSortItem(props) {\n  var _colDef$sortingOrder;\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const rootProps = useGridRootProps();\n  const sortDirection = React.useMemo(() => {\n    if (!colDef) {\n      return null;\n    }\n    const sortItem = sortModel.find(item => item.field === colDef.field);\n    return sortItem == null ? void 0 : sortItem.sort;\n  }, [colDef, sortModel]);\n  const sortingOrder = (_colDef$sortingOrder = colDef.sortingOrder) != null ? _colDef$sortingOrder : rootProps.sortingOrder;\n  const onSortMenuItemClick = React.useCallback(event => {\n    onClick(event);\n    const direction = event.currentTarget.getAttribute('data-value') || null;\n    apiRef.current.sortColumn(colDef, direction === sortDirection ? null : direction);\n  }, [apiRef, colDef, onClick, sortDirection]);\n  if (!colDef || !colDef.sortable || !sortingOrder.some(item => !!item)) {\n    return null;\n  }\n  const getLabel = key => {\n    const label = apiRef.current.getLocaleText(key);\n    return typeof label === 'function' ? label(colDef) : label;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [sortingOrder.includes('asc') && sortDirection !== 'asc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"asc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortAscendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortAsc')\n      })]\n    }) : null, sortingOrder.includes('desc') && sortDirection !== 'desc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"desc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortDescendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortDesc')\n      })]\n    }) : null, sortingOrder.includes(null) && sortDirection != null ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {}), /*#__PURE__*/_jsx(ListItemText, {\n        children: apiRef.current.getLocaleText('columnMenuUnsort')\n      })]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuSortItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuSortItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sort\", \"searchPredicate\", \"autoFocusSearchField\", \"disableHideAllButton\", \"disableShowAllButton\", \"getTogglableColumns\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport IconButton from '@mui/material/IconButton';\nimport { switchClasses } from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridPanelContent } from './GridPanelContent';\nimport { GridPanelFooter } from './GridPanelFooter';\nimport { GridPanelHeader } from './GridPanelHeader';\nimport { GridPanelWrapper } from './GridPanelWrapper';\nimport { GRID_EXPERIMENTAL_ENABLED } from '../../constants/envConstants';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsPanel'],\n    columnsPanelRow: ['columnsPanelRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnsPanelRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsPanel',\n  overridesResolver: (props, styles) => styles.columnsPanel\n})({\n  padding: '8px 0px 8px 8px'\n});\nconst GridColumnsPanelRowRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsPanelRow',\n  overridesResolver: (props, styles) => styles.columnsPanelRow\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: '1px 8px 1px 7px',\n  [`& .${switchClasses.root}`]: {\n    marginRight: theme.spacing(0.5)\n  }\n}));\nconst GridIconButtonRoot = styled(IconButton)({\n  justifyContent: 'flex-end'\n});\nconst collator = new Intl.Collator();\nconst defaultSearchPredicate = (column, searchValue) => {\n  return (column.headerName || column.field).toLowerCase().indexOf(searchValue) > -1;\n};\nfunction GridColumnsPanel(props) {\n  var _rootProps$slotProps, _rootProps$slotProps3, _rootProps$slotProps4;\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const classes = useUtilityClasses(rootProps);\n  const {\n      sort,\n      searchPredicate = defaultSearchPredicate,\n      autoFocusSearchField = true,\n      disableHideAllButton = false,\n      disableShowAllButton = false,\n      getTogglableColumns\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const sortedColumns = React.useMemo(() => {\n    switch (sort) {\n      case 'asc':\n        return [...columns].sort((a, b) => collator.compare(a.headerName || a.field, b.headerName || b.field));\n      case 'desc':\n        return [...columns].sort((a, b) => -collator.compare(a.headerName || a.field, b.headerName || b.field));\n      default:\n        return columns;\n    }\n  }, [columns, sort]);\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n  const toggleAllColumns = React.useCallback(isVisible => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    const newModel = _extends({}, currentModel);\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(columns) : null;\n    columns.forEach(col => {\n      if (col.hideable && (togglableColumns == null || togglableColumns.includes(col.field))) {\n        if (isVisible) {\n          // delete the key from the model instead of setting it to `true`\n          delete newModel[col.field];\n        } else {\n          newModel[col.field] = false;\n        }\n      }\n    });\n    return apiRef.current.setColumnVisibilityModel(newModel);\n  }, [apiRef, columns, getTogglableColumns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const currentColumns = React.useMemo(() => {\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(sortedColumns) : null;\n    const togglableSortedColumns = togglableColumns ? sortedColumns.filter(({\n      field\n    }) => togglableColumns.includes(field)) : sortedColumns;\n    if (!searchValue) {\n      return togglableSortedColumns;\n    }\n    return togglableSortedColumns.filter(column => searchPredicate(column, searchValue.toLowerCase()));\n  }, [sortedColumns, searchValue, searchPredicate, getTogglableColumns]);\n  const firstSwitchRef = React.useRef(null);\n  React.useEffect(() => {\n    if (autoFocusSearchField) {\n      searchInputRef.current.focus();\n    } else if (firstSwitchRef.current && typeof firstSwitchRef.current.focus === 'function') {\n      firstSwitchRef.current.focus();\n    }\n  }, [autoFocusSearchField]);\n  let firstHideableColumnFound = false;\n  const isFirstHideableColumn = column => {\n    if (firstHideableColumnFound === false && column.hideable !== false) {\n      firstHideableColumnFound = true;\n      return true;\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({}, other, {\n    children: [/*#__PURE__*/_jsx(GridPanelHeader, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n        label: apiRef.current.getLocaleText('columnsPanelTextFieldLabel'),\n        placeholder: apiRef.current.getLocaleText('columnsPanelTextFieldPlaceholder'),\n        inputRef: searchInputRef,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"standard\",\n        fullWidth: true\n      }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseTextField))\n    }), /*#__PURE__*/_jsx(GridPanelContent, {\n      children: /*#__PURE__*/_jsx(GridColumnsPanelRoot, {\n        className: classes.root,\n        ownerState: rootProps,\n        children: currentColumns.map(column => {\n          var _rootProps$slotProps2;\n          return /*#__PURE__*/_jsxs(GridColumnsPanelRowRoot, {\n            className: classes.columnsPanelRow,\n            ownerState: rootProps,\n            children: [/*#__PURE__*/_jsx(FormControlLabel, {\n              control: /*#__PURE__*/_jsx(rootProps.slots.baseSwitch, _extends({\n                disabled: column.hideable === false,\n                checked: columnVisibilityModel[column.field] !== false,\n                onClick: toggleColumn,\n                name: column.field,\n                size: \"small\",\n                inputRef: isFirstHideableColumn(column) ? firstSwitchRef : undefined\n              }, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseSwitch)),\n              label: column.headerName || column.field\n            }), !rootProps.disableColumnReorder && GRID_EXPERIMENTAL_ENABLED && /*#__PURE__*/_jsx(GridIconButtonRoot, {\n              draggable: true,\n              \"aria-label\": apiRef.current.getLocaleText('columnsPanelDragIconLabel'),\n              title: apiRef.current.getLocaleText('columnsPanelDragIconLabel'),\n              size: \"small\",\n              disabled: true,\n              children: /*#__PURE__*/_jsx(rootProps.slots.columnReorderIcon, {})\n            })]\n          }, column.field);\n        })\n      })\n    }), disableShowAllButton && disableHideAllButton ? null : /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [!disableHideAllButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: () => toggleAllColumns(false)\n      }, (_rootProps$slotProps3 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps3.baseButton, {\n        disabled: disableHideAllButton,\n        children: apiRef.current.getLocaleText('columnsPanelHideAllButton')\n      })) : /*#__PURE__*/_jsx(\"span\", {}), !disableShowAllButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: () => toggleAllColumns(true)\n      }, (_rootProps$slotProps4 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps4.baseButton, {\n        disabled: disableShowAllButton,\n        children: apiRef.current.getLocaleText('columnsPanelShowAllButton')\n      })) : null]\n    })]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the column search field will be focused automatically.\n   * If `false`, the first column switch input will be focused automatically.\n   * This helps to avoid input keyboard panel to popup automatically on touch devices.\n   * @default true\n   */\n  autoFocusSearchField: PropTypes.bool,\n  /**\n   * If `true`, the `Hide all` button will not be displayed.\n   * @default false\n   */\n  disableHideAllButton: PropTypes.bool,\n  /**\n   * If `true`, the `Show all` button will be disabled\n   * @default false\n   */\n  disableShowAllButton: PropTypes.bool,\n  /**\n   * Returns the list of togglable columns.\n   * If used, only those columns will be displayed in the panel\n   * which are passed as the return value of the function.\n   * @param {GridColDef[]} columns The `ColDef` list of all columns.\n   * @returns {GridColDef['field'][]} The list of togglable columns' field names.\n   */\n  getTogglableColumns: PropTypes.func,\n  searchPredicate: PropTypes.func,\n  slotProps: PropTypes.object,\n  sort: PropTypes.oneOf(['asc', 'desc'])\n} : void 0;\nexport { GridColumnsPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPanelClasses = generateUtilityClasses('MuiDataGrid', ['panel', 'paper']);\nconst GridPanelRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Panel',\n  overridesResolver: (props, styles) => styles.panel\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst GridPaperRoot = styled(Paper, {\n  name: 'MuiDataGrid',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  minWidth: 300,\n  maxHeight: 450,\n  display: 'flex'\n}));\nconst GridPanel = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = gridPanelClasses;\n  const [isPlaced, setIsPlaced] = React.useState(false);\n  const handleClickAway = React.useCallback(() => {\n    apiRef.current.hidePreferences();\n  }, [apiRef]);\n  const handleKeyDown = React.useCallback(event => {\n    if (isEscapeKey(event.key)) {\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef]);\n  const modifiers = React.useMemo(() => [{\n    name: 'flip',\n    enabled: false\n  }, {\n    name: 'isPlaced',\n    enabled: true,\n    phase: 'main',\n    fn: () => {\n      setIsPlaced(true);\n    },\n    effect: () => () => {\n      setIsPlaced(false);\n    }\n  }], []);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  React.useEffect(() => {\n    var _apiRef$current$rootE;\n    const columnHeadersElement = (_apiRef$current$rootE = apiRef.current.rootElementRef) == null || (_apiRef$current$rootE = _apiRef$current$rootE.current) == null ? void 0 : _apiRef$current$rootE.querySelector(`.${gridClasses.columnHeaders}`);\n    if (columnHeadersElement) {\n      setAnchorEl(columnHeadersElement);\n    }\n  }, [apiRef]);\n  if (!anchorEl) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridPanelRoot, _extends({\n    ref: ref,\n    placement: \"bottom-start\",\n    className: clsx(className, classes.panel),\n    ownerState: rootProps,\n    anchorEl: anchorEl,\n    modifiers: modifiers\n  }, other, {\n    children: /*#__PURE__*/_jsx(ClickAwayListener, {\n      mouseEvent: \"onMouseUp\",\n      onClickAway: handleClickAway,\n      children: /*#__PURE__*/_jsx(GridPaperRoot, {\n        className: classes.paper,\n        ownerState: rootProps,\n        elevation: 8,\n        onKeyDown: handleKeyDown,\n        children: isPlaced && children\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Popper render function or node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  ownerState: PropTypes.object\n} : void 0;\nexport { GridPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelContent',\n  overridesResolver: (props, styles) => styles.panelContent\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400\n});\nfunction GridPanelContent(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelContentRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelFooter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelFooterRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelFooter',\n  overridesResolver: (props, styles) => styles.panelFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5),\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\nfunction GridPanelFooter(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelFooterRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelHeader']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelHeaderRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelHeader',\n  overridesResolver: (props, styles) => styles.panelHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1)\n}));\nfunction GridPanelHeader(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelHeaderRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport FocusTrap from '@mui/material/Unstable_TrapFocus';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelWrapper']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelWrapper',\n  overridesResolver: (props, styles) => styles.panelWrapper\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  '&:focus': {\n    outline: 0\n  }\n});\nconst isEnabled = () => true;\nconst GridPanelWrapper = /*#__PURE__*/React.forwardRef(function GridPanelWrapper(props, ref) {\n  const {\n      className,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(FocusTrap, _extends({\n    open: true,\n    disableEnforceFocus: true,\n    isEnabled: isEnabled\n  }, slotProps.TrapFocus, {\n    children: /*#__PURE__*/_jsx(GridPanelWrapperRoot, _extends({\n      ref: ref,\n      tabIndex: -1,\n      className: clsx(className, classes.root),\n      ownerState: rootProps\n    }, other))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanelWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridPanelWrapper };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridPreferencesPanel = /*#__PURE__*/React.forwardRef(function GridPreferencesPanel(props, ref) {\n  var _preferencePanelState, _rootProps$slotProps, _rootProps$slotProps2;\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, (_preferencePanelState = preferencePanelState.openedPanelValue) != null ? _preferencePanelState : GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.slots.panel, _extends({\n    ref: ref,\n    as: rootProps.slots.basePopper,\n    open: columns.length > 0 && preferencePanelState.open,\n    id: preferencePanelState.panelId,\n    \"aria-labelledby\": preferencePanelState.labelId\n  }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.panel, props, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.basePopper, {\n    children: panelContent\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"hasMultipleFilters\", \"deleteFilter\", \"applyFilterChanges\", \"multiFilterOperator\", \"showMultiFilterOperators\", \"disableMultiFilterOperator\", \"applyMultiFilterOperatorChanges\", \"focusElementRef\", \"logicOperators\", \"columnsSort\", \"filterColumns\", \"deleteIconProps\", \"logicOperatorInputProps\", \"operatorInputProps\", \"columnInputProps\", \"valueInputProps\", \"children\"],\n  _excluded2 = [\"InputComponentProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_capitalize as capitalize } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { gridFilterableColumnDefinitionsSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { gridFilterModelSelector } from '../../../hooks/features/filter/gridFilterSelector';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { GridLogicOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    logicOperatorInput: ['filterFormLogicOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  padding: theme.spacing(1)\n}));\nconst FilterFormDeleteIcon = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(({\n  theme\n}) => ({\n  flexShrink: 0,\n  justifyContent: 'flex-end',\n  marginRight: theme.spacing(0.5),\n  marginBottom: theme.spacing(0.2)\n}));\nconst FilterFormLogicOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLogicOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLogicOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 120\n});\nconst FilterFormValueInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\nconst getLogicOperatorLocaleKey = logicOperator => {\n  switch (logicOperator) {\n    case GridLogicOperator.And:\n      return 'filterPanelOperatorAnd';\n    case GridLogicOperator.Or:\n      return 'filterPanelOperatorOr';\n    default:\n      throw new Error('MUI: Invalid `logicOperator` property in the `GridFilterPanel`.');\n  }\n};\nconst getColumnLabel = col => col.headerName || col.field;\nconst collator = new Intl.Collator();\nconst GridFilterForm = /*#__PURE__*/React.forwardRef(function GridFilterForm(props, ref) {\n  var _rootProps$slotProps, _rootProps$slotProps2, _baseSelectProps$nati, _rootProps$slotProps3, _rootProps$slotProps4, _rootProps$slotProps5, _rootProps$slotProps6, _rootProps$slotProps7, _rootProps$slotProps8, _currentColumn$filter2;\n  const {\n      item,\n      hasMultipleFilters,\n      deleteFilter,\n      applyFilterChanges,\n      multiFilterOperator,\n      showMultiFilterOperators,\n      disableMultiFilterOperator,\n      applyMultiFilterOperatorChanges,\n      focusElementRef,\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterColumns,\n      deleteIconProps = {},\n      logicOperatorInputProps = {},\n      operatorInputProps = {},\n      columnInputProps = {},\n      valueInputProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const hasLogicOperatorColumn = hasMultipleFilters && logicOperators.length > 0;\n  const baseFormControlProps = ((_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseFormControl) || {};\n  const baseSelectProps = ((_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseSelect) || {};\n  const isBaseSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const baseInputLabelProps = ((_rootProps$slotProps3 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps3.baseInputLabel) || {};\n  const baseSelectOptionProps = ((_rootProps$slotProps4 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps4.baseSelectOption) || {};\n  const {\n      InputComponentProps\n    } = valueInputProps,\n    valueInputPropsOther = _objectWithoutPropertiesLoose(valueInputProps, _excluded2);\n  const filteredColumns = React.useMemo(() => {\n    if (filterColumns === undefined || typeof filterColumns !== 'function') {\n      return filterableColumns;\n    }\n    const filteredFields = filterColumns({\n      field: item.field,\n      columns: filterableColumns,\n      currentFilters: (filterModel == null ? void 0 : filterModel.items) || []\n    });\n    return filterableColumns.filter(column => filteredFields.includes(column.field));\n  }, [filterColumns, filterModel == null ? void 0 : filterModel.items, filterableColumns, item.field]);\n  const sortedFilteredColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filteredColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      case 'desc':\n        return filteredColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      default:\n        return filteredColumns;\n    }\n  }, [filteredColumns, columnsSort]);\n  const currentColumn = item.field ? apiRef.current.getColumn(item.field) : null;\n  const currentOperator = React.useMemo(() => {\n    var _currentColumn$filter;\n    if (!item.operator || !currentColumn) {\n      return null;\n    }\n    return (_currentColumn$filter = currentColumn.filterOperators) == null ? void 0 : _currentColumn$filter.find(operator => operator.value === item.operator);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const field = event.target.value;\n    const column = apiRef.current.getColumn(field);\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    }\n\n    // try to keep the same operator when column change\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operator) || column.filterOperators[0];\n\n    // Erase filter value if the input component or filtered column type is modified\n    const eraseItemValue = !newOperator.InputComponent || newOperator.InputComponent !== (currentOperator == null ? void 0 : currentOperator.InputComponent) || column.type !== currentColumn.type;\n    applyFilterChanges(_extends({}, item, {\n      field,\n      operator: newOperator.value,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operator = event.target.value;\n    const newOperator = currentColumn == null ? void 0 : currentColumn.filterOperators.find(op => op.value === operator);\n    const eraseItemValue = !(newOperator != null && newOperator.InputComponent) || (newOperator == null ? void 0 : newOperator.InputComponent) !== (currentOperator == null ? void 0 : currentOperator.InputComponent);\n    applyFilterChanges(_extends({}, item, {\n      operator,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLogicOperator = React.useCallback(event => {\n    const logicOperator = event.target.value === GridLogicOperator.And.toString() ? GridLogicOperator.And : GridLogicOperator.Or;\n    applyMultiFilterOperatorChanges(logicOperator);\n  }, [applyMultiFilterOperatorChanges]);\n  const handleDeleteFilter = () => {\n    if (rootProps.disableMultipleColumnsFiltering) {\n      if (item.value === undefined) {\n        deleteFilter(item);\n      } else {\n        // TODO v6: simplify the behavior by always remove the filter form\n        applyFilterChanges(_extends({}, item, {\n          value: undefined\n        }));\n      }\n    } else {\n      deleteFilter(item);\n    }\n  };\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator != null && currentOperator.InputComponent) {\n        var _valueRef$current;\n        valueRef == null || (_valueRef$current = valueRef.current) == null || _valueRef$current.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, _extends({\n    ref: ref,\n    className: classes.root,\n    \"data-id\": item.id,\n    ownerState: rootProps\n  }, other, {\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\"\n      }, (_rootProps$slotProps5 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps5.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.filterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    })), /*#__PURE__*/_jsx(FilterFormLogicOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, logicOperatorInputProps, {\n      sx: _extends({\n        display: hasLogicOperatorColumn ? 'flex' : 'none',\n        visibility: showMultiFilterOperators ? 'visible' : 'hidden'\n      }, baseFormControlProps.sx || {}, logicOperatorInputProps.sx || {}),\n      className: clsx(classes.logicOperatorInput, baseFormControlProps.className, logicOperatorInputProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLogicOperator')\n        },\n        value: multiFilterOperator,\n        onChange: changeLogicOperator,\n        disabled: !!disableMultiFilterOperator || logicOperators.length === 1,\n        native: isBaseSelectNative\n      }, (_rootProps$slotProps6 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps6.baseSelect, {\n        children: logicOperators.map(logicOperator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: logicOperator.toString(),\n          value: logicOperator.toString()\n        }), apiRef.current.getLocaleText(getLogicOperatorLocaleKey(logicOperator))))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: item.field || '',\n        onChange: changeColumn,\n        native: isBaseSelectNative\n      }, (_rootProps$slotProps7 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps7.baseSelect, {\n        children: sortedFilteredColumns.map(col => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: col.field,\n          value: col.field\n        }), getColumnLabel(col)))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperator')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperator'),\n        id: operatorSelectId,\n        value: item.operator,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef\n      }, (_rootProps$slotProps8 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps8.baseSelect, {\n        children: currentColumn == null || (_currentColumn$filter2 = currentColumn.filterOperators) == null ? void 0 : _currentColumn$filter2.map(operator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: operator.value,\n          value: operator.value\n        }), operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, valueInputPropsOther, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputPropsOther.className),\n      ownerState: rootProps,\n      children: currentOperator != null && currentOperator.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef\n      }, currentOperator.InputComponentProps, InputComponentProps)) : null\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback called when the operator, column field or value is changed.\n   * @param {GridFilterItem} item The updated [[GridFilterItem]].\n   */\n  applyFilterChanges: PropTypes.func.isRequired,\n  /**\n   * Callback called when the logic operator is changed.\n   * @param {GridLogicOperator} operator The new logic operator.\n   */\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Props passed to the column input component.\n   * @default {}\n   */\n  columnInputProps: PropTypes.any,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Callback called when the delete button is clicked.\n   * @param {GridFilterItem} item The deleted [[GridFilterItem]].\n   */\n  deleteFilter: PropTypes.func.isRequired,\n  /**\n   * Props passed to the delete icon.\n   * @default {}\n   */\n  deleteIconProps: PropTypes.any,\n  /**\n   * If `true`, disables the logic operator field but still renders it.\n   */\n  disableMultiFilterOperator: PropTypes.bool,\n  /**\n   * Allows to filter the columns displayed in the filter form.\n   * @param {FilterColumnsArgs} args The columns of the grid and name of field.\n   * @returns {GridColDef['field'][]} The filtered fields array.\n   */\n  filterColumns: PropTypes.func,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the el\n   */\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the logic operator field is rendered.\n   * The field will be invisible if `showMultiFilterOperators` is also `true`.\n   */\n  hasMultipleFilters: PropTypes.bool.isRequired,\n  /**\n   * The [[GridFilterItem]] representing this form.\n   */\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  /**\n   * Props passed to the logic operator input component.\n   * @default {}\n   */\n  logicOperatorInputProps: PropTypes.any,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * The current logic operator applied.\n   */\n  multiFilterOperator: PropTypes.oneOf(['and', 'or']),\n  /**\n   * Props passed to the operator input component.\n   * @default {}\n   */\n  operatorInputProps: PropTypes.any,\n  /**\n   * If `true`, the logic operator field is visible.\n   */\n  showMultiFilterOperators: PropTypes.bool,\n  /**\n   * Props passed to the value input component.\n   * @default {}\n   */\n  valueInputProps: PropTypes.any\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterForm API](https://mui.com/x/api/data-grid/grid-filter-form/)\n */\nexport { GridFilterForm };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"apiRef\", \"focusElementRef\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"label\", \"variant\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst BooleanOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'center',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputBoolean(props) {\n  var _rootProps$slotProps, _baseSelectProps$nati, _rootProps$slotProps2, _rootProps$slotProps3;\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      clearButton,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const [filterValueState, setFilterValueState] = React.useState(item.value || '');\n  const rootProps = useGridRootProps();\n  const labelId = useId();\n  const selectId = useId();\n  const baseSelectProps = ((_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const baseSelectOptionProps = ((_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseSelectOption) || {};\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    setFilterValueState(value);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    setFilterValueState(item.value || '');\n  }, [item.value]);\n  const label = labelProp != null ? labelProp : apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(BooleanOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, (_rootProps$slotProps3 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps3.baseInputLabel, {\n        id: labelId,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsxs(rootProps.slots.baseSelect, _extends({\n        labelId: labelId,\n        id: selectId,\n        label: label,\n        value: filterValueState,\n        onChange: onFilterChange,\n        variant: variant,\n        notched: variant === 'outlined' ? true : undefined,\n        native: isSelectNative,\n        displayEmpty: true,\n        inputProps: {\n          ref: focusElementRef,\n          tabIndex\n        }\n      }, others, baseSelectProps, {\n        children: [/*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"\",\n          children: apiRef.current.getLocaleText('filterValueAny')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"true\",\n          children: apiRef.current.getLocaleText('filterValueTrue')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"false\",\n          children: apiRef.current.getLocaleText('filterValueFalse')\n        }))]\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputBoolean.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: refType,\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (e.g. `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputBoolean };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"InputProps\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from '../../../hooks/utils/useTimeout';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputDate(props) {\n  var _item$value, _rootProps$slotProps;\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      InputProps,\n      clearButton,\n      tabIndex,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      applyValue(_extends({}, item, {\n        value\n      }));\n      setIsApplying(false);\n    });\n  }, [applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    var _item$value2;\n    const itemValue = (_item$value2 = item.value) != null ? _item$value2 : '';\n    setFilterValueState(String(itemValue));\n  }, [item.value]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    fullWidth: true,\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        max: type === 'datetime-local' ? '9999-12-31T23:59' : '9999-12-31',\n        tabIndex\n      }, InputProps == null ? void 0 : InputProps.inputProps)\n    })\n  }, other, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputDate.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (e.g. `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputDate };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\", \"getOptionLabel\", \"getOptionValue\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { isSingleSelectColDef } from './filterPanelUtils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst filter = createFilterOptions();\nfunction GridFilterInputMultipleSingleSelect(props) {\n  var _resolvedColumn, _resolvedColumn2;\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard',\n      getOptionLabel: getOptionLabelProp,\n      getOptionValue: getOptionValueProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const id = useId();\n  const rootProps = useGridRootProps();\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = getOptionValueProp || ((_resolvedColumn = resolvedColumn) == null ? void 0 : _resolvedColumn.getOptionValue);\n  const getOptionLabel = getOptionLabelProp || ((_resolvedColumn2 = resolvedColumn) == null ? void 0 : _resolvedColumn2.getOptionLabel);\n  const isOptionEqualToValue = React.useCallback((option, value) => getOptionValue(option) === getOptionValue(value), [getOptionValue]);\n  const resolvedValueOptions = React.useMemo(() => {\n    var _resolvedColumn3;\n    if (!((_resolvedColumn3 = resolvedColumn) != null && _resolvedColumn3.valueOptions)) {\n      return [];\n    }\n    if (typeof resolvedColumn.valueOptions === 'function') {\n      return resolvedColumn.valueOptions({\n        field: resolvedColumn.field\n      });\n    }\n    return resolvedColumn.valueOptions;\n  }, [resolvedColumn]);\n  const resolvedFormattedValueOptions = React.useMemo(() => {\n    return resolvedValueOptions == null ? void 0 : resolvedValueOptions.map(getOptionValue);\n  }, [resolvedValueOptions, getOptionValue]);\n\n  // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n  const filteredValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n    if (resolvedValueOptions !== undefined) {\n      const itemValueIndexes = item.value.map(element => {\n        // Gets the index matching between values and valueOptions\n        return resolvedFormattedValueOptions == null ? void 0 : resolvedFormattedValueOptions.findIndex(formattedOption => formattedOption === element);\n      });\n      return itemValueIndexes.filter(index => index >= 0).map(index => resolvedValueOptions[index]);\n    }\n    return item.value;\n  }, [item.value, resolvedValueOptions, resolvedFormattedValueOptions]);\n  React.useEffect(() => {\n    if (!Array.isArray(item.value) || filteredValues.length !== item.value.length) {\n      // Updates the state if the filter value has been cleaned by the component\n      applyValue(_extends({}, item, {\n        value: filteredValues.map(getOptionValue)\n      }));\n    }\n  }, [item, filteredValues, applyValue, getOptionValue]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: value.map(getOptionValue)\n    }));\n  }, [applyValue, item, getOptionValue]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    options: resolvedValueOptions,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filteredValues,\n    onChange: handleChange,\n    getOptionLabel: getOptionLabel,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: getOptionLabel(option)\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => {\n      var _rootProps$slotProps;\n      return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n        label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n        placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n        InputLabelProps: _extends({}, params.InputLabelProps, {\n          shrink: true\n        }),\n        inputRef: focusElementRef,\n        type: \"singleSelect\"\n      }, TextFieldProps, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseTextField));\n    }\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * Used to determine the label displayed for a given value option.\n   * @param {ValueOptions} value The current value option.\n   * @returns {string} The text to be displayed.\n   */\n  getOptionLabel: PropTypes.func,\n  /**\n   * Used to determine the value used for a value option.\n   * @param {ValueOptions} value The current value option.\n   * @returns {string} The value to be used.\n   */\n  getOptionValue: PropTypes.func,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputMultipleValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const [filterValueState, setFilterValueState] = React.useState(item.value || []);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  React.useEffect(() => {\n    var _item$value;\n    const itemValue = (_item$value = item.value) != null ? _item$value : [];\n    setFilterValueState(itemValue.map(String));\n  }, [item.value]);\n  const handleChange = React.useCallback((event, value) => {\n    setFilterValueState(value.map(String));\n    applyValue(_extends({}, item, {\n      value: [...value]\n    }));\n  }, [applyValue, item]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    freeSolo: true,\n    options: [],\n    filterOptions: (options, params) => {\n      const {\n        inputValue\n      } = params;\n      return inputValue == null || inputValue === '' ? [] : [inputValue];\n    },\n    id: id,\n    value: filterValueState,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: option\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => {\n      var _rootProps$slotProps;\n      return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n        label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n        placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n        InputLabelProps: _extends({}, params.InputLabelProps, {\n          shrink: true\n        }),\n        inputRef: focusElementRef,\n        type: type || 'text'\n      }, TextFieldProps, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseTextField));\n    }\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['number', 'text'])\n} : void 0;\nexport { GridFilterInputMultipleValue };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"getOptionLabel\", \"getOptionValue\", \"placeholder\", \"tabIndex\", \"label\", \"variant\", \"isFilterActive\", \"clearButton\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getValueFromValueOptions, isSingleSelectColDef } from './filterPanelUtils';\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst renderSingleSelectOptions = ({\n  column: {\n    valueOptions,\n    field\n  },\n  OptionComponent,\n  getOptionLabel,\n  getOptionValue,\n  isSelectNative,\n  baseSelectOptionProps\n}) => {\n  const iterableColumnValues = typeof valueOptions === 'function' ? ['', ...valueOptions({\n    field\n  })] : ['', ...(valueOptions || [])];\n  return iterableColumnValues.map(option => {\n    const value = getOptionValue(option);\n    const label = getOptionLabel(option);\n    return /*#__PURE__*/_createElement(OptionComponent, _extends({}, baseSelectOptionProps, {\n      native: isSelectNative,\n      key: value,\n      value: value\n    }), label);\n  });\n};\nconst SingleSelectOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'flex-end',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputSingleSelect(props) {\n  var _item$value, _rootProps$slotProps$, _rootProps$slotProps, _resolvedColumn, _resolvedColumn2, _rootProps$slotProps2, _rootProps$slotProps3, _rootProps$slotProps4;\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      getOptionLabel: getOptionLabelProp,\n      getOptionValue: getOptionValueProp,\n      placeholder,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard',\n      clearButton\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const id = useId();\n  const labelId = useId();\n  const rootProps = useGridRootProps();\n  const isSelectNative = (_rootProps$slotProps$ = (_rootProps$slotProps = rootProps.slotProps) == null || (_rootProps$slotProps = _rootProps$slotProps.baseSelect) == null ? void 0 : _rootProps$slotProps.native) != null ? _rootProps$slotProps$ : true;\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = getOptionValueProp || ((_resolvedColumn = resolvedColumn) == null ? void 0 : _resolvedColumn.getOptionValue);\n  const getOptionLabel = getOptionLabelProp || ((_resolvedColumn2 = resolvedColumn) == null ? void 0 : _resolvedColumn2.getOptionLabel);\n  const currentValueOptions = React.useMemo(() => {\n    if (!resolvedColumn) {\n      return undefined;\n    }\n    return typeof resolvedColumn.valueOptions === 'function' ? resolvedColumn.valueOptions({\n      field: resolvedColumn.field\n    }) : resolvedColumn.valueOptions;\n  }, [resolvedColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value;\n\n    // NativeSelect casts the value to a string.\n    value = getValueFromValueOptions(value, currentValueOptions, getOptionValue);\n    setFilterValueState(String(value));\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [currentValueOptions, getOptionValue, applyValue, item]);\n  React.useEffect(() => {\n    var _itemValue;\n    let itemValue;\n    if (currentValueOptions !== undefined) {\n      // sanitize if valueOptions are provided\n      itemValue = getValueFromValueOptions(item.value, currentValueOptions, getOptionValue);\n      if (itemValue !== item.value) {\n        applyValue(_extends({}, item, {\n          value: itemValue\n        }));\n        return;\n      }\n    } else {\n      itemValue = item.value;\n    }\n    itemValue = (_itemValue = itemValue) != null ? _itemValue : '';\n    setFilterValueState(String(itemValue));\n  }, [item, currentValueOptions, applyValue, getOptionValue]);\n  if (!isSingleSelectColDef(resolvedColumn)) {\n    return null;\n  }\n  if (!isSingleSelectColDef(resolvedColumn)) {\n    return null;\n  }\n  const label = labelProp != null ? labelProp : apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(SingleSelectOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseInputLabel, {\n        id: labelId,\n        htmlFor: id,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        id: id,\n        label: label,\n        labelId: labelId,\n        value: filterValueState,\n        onChange: onFilterChange,\n        variant: variant,\n        type: type || 'text',\n        inputProps: {\n          tabIndex,\n          ref: focusElementRef,\n          placeholder: placeholder != null ? placeholder : apiRef.current.getLocaleText('filterPanelInputPlaceholder')\n        },\n        native: isSelectNative,\n        notched: variant === 'outlined' ? true : undefined\n      }, others /* FIXME: typing error */, (_rootProps$slotProps3 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps3.baseSelect, {\n        children: renderSingleSelectOptions({\n          column: resolvedColumn,\n          OptionComponent: rootProps.slots.baseSelectOption,\n          getOptionLabel,\n          getOptionValue,\n          isSelectNative,\n          baseSelectOptionProps: (_rootProps$slotProps4 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps4.baseSelectOption\n        })\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * Used to determine the label displayed for a given value option.\n   * @param {ValueOptions} value The current value option.\n   * @returns {string} The text to be displayed.\n   */\n  getOptionLabel: PropTypes.func,\n  /**\n   * Used to determine the value used for a value option.\n   * @param {ValueOptions} value The current value option.\n   * @returns {string} The value to be used.\n   */\n  getOptionValue: PropTypes.func,\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (e.g. `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"tabIndex\", \"disabled\", \"isFilterActive\", \"clearButton\", \"InputProps\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from '../../../hooks/utils/useTimeout';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputValue(props) {\n  var _item$value, _rootProps$slotProps;\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      tabIndex,\n      disabled,\n      clearButton,\n      InputProps,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const {\n      value\n    } = event.target;\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const newItem = _extends({}, item, {\n        value,\n        fromInput: id\n      });\n      applyValue(newItem);\n      setIsApplying(false);\n    });\n  }, [id, applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const itemPlusTag = item;\n    if (itemPlusTag.fromInput !== id || item.value === undefined) {\n      var _item$value2;\n      setFilterValueState(String((_item$value2 = item.value) != null ? _item$value2 : ''));\n    }\n  }, [id, item]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: variant,\n    type: type || 'text',\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        tabIndex\n      }, InputProps == null ? void 0 : InputProps.inputProps)\n    }),\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, others, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (e.g. `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputValue };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"logicOperators\", \"columnsSort\", \"filterFormProps\", \"getColumnForNewFilter\", \"children\", \"disableAddFilterButton\", \"disableRemoveAllButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridLogicOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridPanelContent } from '../GridPanelContent';\nimport { GridPanelFooter } from '../GridPanelFooter';\nimport { GridPanelWrapper } from '../GridPanelWrapper';\nimport { GridFilterForm } from './GridFilterForm';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { gridFilterModelSelector } from '../../../hooks/features/filter/gridFilterSelector';\nimport { gridFilterableColumnDefinitionsSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getGridFilter = col => ({\n  field: col.field,\n  operator: col.filterOperators[0].value,\n  id: Math.round(Math.random() * 1e5)\n});\nconst GridFilterPanel = /*#__PURE__*/React.forwardRef(function GridFilterPanel(props, ref) {\n  var _rootProps$slotProps, _rootProps$slotProps2;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const lastFilterRef = React.useRef(null);\n  const placeholderFilter = React.useRef(null);\n  const {\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterFormProps,\n      getColumnForNewFilter,\n      disableAddFilterButton = false,\n      disableRemoveAllButton = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const applyFilter = apiRef.current.upsertFilterItem;\n  const applyFilterLogicOperator = React.useCallback(operator => {\n    apiRef.current.setFilterLogicOperator(operator);\n  }, [apiRef]);\n  const getDefaultFilter = React.useCallback(() => {\n    let nextColumnWithOperator;\n    if (getColumnForNewFilter && typeof getColumnForNewFilter === 'function') {\n      // To allow override the column for default (first) filter\n      const nextFieldName = getColumnForNewFilter({\n        currentFilters: (filterModel == null ? void 0 : filterModel.items) || [],\n        columns: filterableColumns\n      });\n      if (nextFieldName === null) {\n        return null;\n      }\n      nextColumnWithOperator = filterableColumns.find(({\n        field\n      }) => field === nextFieldName);\n    } else {\n      nextColumnWithOperator = filterableColumns.find(colDef => {\n        var _colDef$filterOperato;\n        return (_colDef$filterOperato = colDef.filterOperators) == null ? void 0 : _colDef$filterOperato.length;\n      });\n    }\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel == null ? void 0 : filterModel.items, filterableColumns, getColumnForNewFilter]);\n  const getNewFilter = React.useCallback(() => {\n    if (getColumnForNewFilter === undefined || typeof getColumnForNewFilter !== 'function') {\n      return getDefaultFilter();\n    }\n    const currentFilters = filterModel.items.length ? filterModel.items : [getDefaultFilter()].filter(Boolean);\n\n    // If no items are there in filterModel, we have to pass defaultFilter\n    const nextColumnFieldName = getColumnForNewFilter({\n      currentFilters: currentFilters,\n      columns: filterableColumns\n    });\n    if (nextColumnFieldName === null) {\n      return null;\n    }\n    const nextColumnWithOperator = filterableColumns.find(({\n      field\n    }) => field === nextColumnFieldName);\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel.items, filterableColumns, getColumnForNewFilter, getDefaultFilter]);\n  const items = React.useMemo(() => {\n    if (filterModel.items.length) {\n      return filterModel.items;\n    }\n    if (!placeholderFilter.current) {\n      placeholderFilter.current = getDefaultFilter();\n    }\n    return placeholderFilter.current ? [placeholderFilter.current] : [];\n  }, [filterModel.items, getDefaultFilter]);\n  const hasMultipleFilters = items.length > 1;\n  const addNewFilter = () => {\n    const newFilter = getNewFilter();\n    if (!newFilter) {\n      return;\n    }\n    apiRef.current.upsertFilterItems([...items, newFilter]);\n  };\n  const deleteFilter = React.useCallback(item => {\n    const shouldCloseFilterPanel = items.length === 1;\n    apiRef.current.deleteFilterItem(item);\n    if (shouldCloseFilterPanel) {\n      apiRef.current.hideFilterPanel();\n    }\n  }, [apiRef, items.length]);\n  const handleRemoveAll = () => {\n    if (items.length === 1 && items[0].value === undefined) {\n      apiRef.current.deleteFilterItem(items[0]);\n      apiRef.current.hideFilterPanel();\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: []\n    }));\n  };\n  React.useEffect(() => {\n    if (logicOperators.length > 0 && filterModel.logicOperator && !logicOperators.includes(filterModel.logicOperator)) {\n      applyFilterLogicOperator(logicOperators[0]);\n    }\n  }, [logicOperators, applyFilterLogicOperator, filterModel.logicOperator]);\n  React.useEffect(() => {\n    if (items.length > 0) {\n      lastFilterRef.current.focus();\n    }\n  }, [items.length]);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(GridPanelContent, {\n      children: items.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: index > 0,\n        multiFilterOperator: filterModel.logicOperator,\n        disableMultiFilterOperator: index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: index === items.length - 1 ? lastFilterRef : null,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index : item.id))\n    }), !rootProps.disableMultipleColumnsFiltering && !(disableAddFilterButton && disableRemoveAllButton) ? /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [!disableAddFilterButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: addNewFilter,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelAddIcon, {})\n      }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelAddFilter')\n      })) : /*#__PURE__*/_jsx(\"span\", {}), !disableRemoveAllButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: handleRemoveAll,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelRemoveAllIcon, {})\n      }, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelRemoveAll')\n      })) : null]\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * If `true`, the `Add filter` button will not be displayed.\n   * @default false\n   */\n  disableAddFilterButton: PropTypes.bool,\n  /**\n   * If `true`, the `Remove all` button will be disabled\n   * @default false\n   */\n  disableRemoveAllButton: PropTypes.bool,\n  /**\n   * Props passed to each filter form.\n   */\n  filterFormProps: PropTypes.shape({\n    columnInputProps: PropTypes.any,\n    columnsSort: PropTypes.oneOf(['asc', 'desc']),\n    deleteIconProps: PropTypes.any,\n    filterColumns: PropTypes.func,\n    logicOperatorInputProps: PropTypes.any,\n    operatorInputProps: PropTypes.any,\n    valueInputProps: PropTypes.any\n  }),\n  /**\n   * Function that returns the next filter item to be picked as default filter.\n   * @param {GetColumnForNewFilterArgs} args Currently configured filters and columns.\n   * @returns {GridColDef['field']} The field to be used for the next filter or `null` to prevent adding a filter.\n   */\n  getColumnForNewFilter: PropTypes.func,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterPanel API](https://mui.com/x/api/data-grid/grid-filter-panel/)\n */\nexport { GridFilterPanel, getGridFilter };","export function isSingleSelectColDef(colDef) {\n  return (colDef == null ? void 0 : colDef.type) === 'singleSelect';\n}\nexport function getValueFromValueOptions(value, valueOptions, getOptionValue) {\n  if (valueOptions === undefined) {\n    return undefined;\n  }\n  const result = valueOptions.find(option => {\n    const optionValue = getOptionValue(option);\n    return String(optionValue) === String(value);\n  });\n  return getOptionValue(result);\n}\nexport const getLabelFromValueOption = valueOption => {\n  const label = typeof valueOption === 'object' ? valueOption.label : valueOption;\n  return label != null ? String(label) : '';\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"options\"],\n  _excluded2 = [\"hideMenu\", \"options\"],\n  _excluded3 = [\"csvOptions\", \"printOptions\", \"excelOptions\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridToolbarExportContainer } from './GridToolbarExportContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridCsvExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsCsv(options);\n      hideMenu == null || hideMenu();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportCSV')\n  }));\n}\nexport function GridPrintExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsPrint(options);\n      hideMenu == null || hideMenu();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportPrint')\n  }));\n}\nconst GridToolbarExport = /*#__PURE__*/React.forwardRef(function GridToolbarExport(props, ref) {\n  const {\n      csvOptions = {},\n      printOptions = {},\n      excelOptions\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded3);\n  const apiRef = useGridApiContext();\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('exportMenu', [], {\n    excelOptions,\n    csvOptions,\n    printOptions\n  }).sort((a, b) => a.componentName > b.componentName ? 1 : -1);\n  if (preProcessedButtons.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridToolbarExportContainer, _extends({}, other, {\n    ref: ref,\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button.component, {\n      key: index\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExport.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  csvOptions: PropTypes.object,\n  printOptions: PropTypes.object\n} : void 0;\nexport { GridToolbarExport };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"onClick\"];\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport MenuList from '@mui/material/MenuList';\nimport { isHideMenuKey, isTabKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridToolbarExportContainer = /*#__PURE__*/React.forwardRef(function GridToolbarExportContainer(props, ref) {\n  var _rootProps$slotProps;\n  const {\n      children,\n      onClick\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const exportButtonId = useId();\n  const exportMenuId = useId();\n  const [open, setOpen] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const handleRef = useForkRef(ref, buttonRef);\n  const handleMenuOpen = event => {\n    setOpen(prevOpen => !prevOpen);\n    onClick == null || onClick(event);\n  };\n  const handleMenuClose = () => setOpen(false);\n  const handleListKeyDown = event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      handleMenuClose();\n    }\n  };\n  if (children == null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n      ref: handleRef,\n      size: \"small\",\n      startIcon: /*#__PURE__*/_jsx(rootProps.slots.exportIcon, {}),\n      \"aria-expanded\": open,\n      \"aria-label\": apiRef.current.getLocaleText('toolbarExportLabel'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-controls\": open ? exportMenuId : undefined,\n      id: exportButtonId\n    }, other, {\n      onClick: handleMenuOpen\n    }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseButton, {\n      children: apiRef.current.getLocaleText('toolbarExport')\n    })), /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      onClose: handleMenuClose,\n      position: \"bottom-start\",\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: exportMenuId,\n        className: gridClasses.menuList,\n        \"aria-labelledby\": exportButtonId,\n        onKeyDown: handleListKeyDown,\n        autoFocusItem: open,\n        children: React.Children.map(children, child => {\n          if (! /*#__PURE__*/React.isValidElement(child)) {\n            return child;\n          }\n          return /*#__PURE__*/React.cloneElement(child, {\n            hideMenu: handleMenuClose\n          });\n        })\n      })\n    })]\n  });\n});","// A guide to feature toggling (deprecated)\n//\n// The feature toggle is:\n// - independent from the NODE_ENV\n// - isn't pruning code in production, as the objective is to eventually ship the code.\n// - doesn't allow to cherry-pick which feature to enable\n//\n// By default, the experimental features are only enabled in:\n// - the local environment\n// - the pull request previews\n//\n// Reviewers can force the value with the local storage and the GRID_EXPERIMENTAL_ENABLED key:\n// - 'true' => force it to be enabled\n// - 'false' => force it to be disabled\n//\n// Developers (users) are discouraged to enable the experimental feature by setting the GRID_EXPERIMENTAL_ENABLED env.\n// Instead, prefer exposing experimental APIs, for instance, a prop or a new `unstable_` module.\n\nexport const GRID_EXPERIMENTAL_ENABLED = false;","import { unstable_generateUtilityClasses as generateUtilityClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nexport function getDataGridUtilityClass(slot) {\n  return generateUtilityClass('MuiDataGrid', slot);\n}\nexport const gridClasses = generateUtilityClasses('MuiDataGrid', ['actionsCell', 'aggregationColumnHeader', 'aggregationColumnHeader--alignLeft', 'aggregationColumnHeader--alignCenter', 'aggregationColumnHeader--alignRight', 'aggregationColumnHeaderLabel', 'autoHeight', 'autosizing', 'booleanCell', 'cell--editable', 'cell--editing', 'cell--textCenter', 'cell--textLeft', 'cell--textRight', 'cell--withRenderer', 'cell--rangeTop', 'cell--rangeBottom', 'cell--rangeLeft', 'cell--rangeRight', 'cell--selectionMode', 'cell', 'cellContent', 'cellCheckbox', 'cellSkeleton', 'checkboxInput', 'columnHeader--alignCenter', 'columnHeader--alignLeft', 'columnHeader--alignRight', 'columnHeader--dragging', 'columnHeader--moving', 'columnHeader--numeric', 'columnHeader--sortable', 'columnHeader--sorted', 'columnHeader--filtered', 'columnHeader', 'columnHeaderCheckbox', 'columnHeaderDraggableContainer', 'columnHeaderDropZone', 'columnHeaderTitle', 'columnHeaderTitleContainer', 'columnHeaderTitleContainerContent', 'columnGroupHeader', 'columnHeader--filledGroup', 'columnHeader--emptyGroup', 'columnHeader--showColumnBorder', 'columnHeaders', 'columnHeadersInner', 'columnHeadersInner--scrollable', 'columnSeparator--resizable', 'columnSeparator--resizing', 'columnSeparator--sideLeft', 'columnSeparator--sideRight', 'columnSeparator', 'columnsPanel', 'columnsPanelRow', 'detailPanel', 'detailPanels', 'detailPanelToggleCell', 'detailPanelToggleCell--expanded', 'footerCell', 'panel', 'panelHeader', 'panelWrapper', 'panelContent', 'panelFooter', 'paper', 'editBooleanCell', 'editInputCell', 'filterForm', 'filterFormDeleteIcon', 'filterFormLogicOperatorInput', 'filterFormColumnInput', 'filterFormOperatorInput', 'filterFormValueInput', 'filterIcon', 'footerContainer', 'headerFilterRow', 'iconButtonContainer', 'iconSeparator', 'main', 'menu', 'menuIcon', 'menuIconButton', 'menuOpen', 'menuList', 'overlay', 'overlayWrapper', 'overlayWrapperInner', 'root', 'root--densityStandard', 'root--densityComfortable', 'root--densityCompact', 'root--disableUserSelection', 'row', 'row--editable', 'row--editing', 'row--lastVisible', 'row--dragging', 'row--dynamicHeight', 'row--detailPanelExpanded', 'rowReorderCellPlaceholder', 'rowCount', 'rowReorderCellContainer', 'rowReorderCell', 'rowReorderCell--draggable', 'scrollArea--left', 'scrollArea--right', 'scrollArea', 'selectedRowCount', 'sortIcon', 'toolbarContainer', 'toolbarFilterList', 'virtualScroller', 'virtualScrollerContent', 'virtualScrollerContent--overflowed', 'virtualScrollerRenderZone', 'pinnedColumns', 'pinnedColumns--left', 'pinnedColumns--right', 'pinnedColumnHeaders', 'pinnedColumnHeaders--left', 'pinnedColumnHeaders--right', 'withBorderColor', 'cell--withRightBorder', 'columnHeader--withRightBorder', 'treeDataGroupingCell', 'treeDataGroupingCellToggle', 'groupingCriteriaCell', 'groupingCriteriaCellToggle', 'pinnedRows', 'pinnedRows--top', 'pinnedRows--bottom', 'pinnedRowsRenderZone']);","// Can't import from pro package - hence duplication\nexport const GRID_DETAIL_PANEL_TOGGLE_FIELD = '__detail_panel_toggle__';","export const GRID_DEFAULT_LOCALE_TEXT = {\n  // Root\n  noRowsLabel: 'No rows',\n  noResultsOverlayLabel: 'No results found.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Density',\n  toolbarDensityLabel: 'Density',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Comfortable',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Columns',\n  toolbarColumnsLabel: 'Select columns',\n  // Filters toolbar button text\n  toolbarFilters: 'Filters',\n  toolbarFiltersLabel: 'Show filters',\n  toolbarFiltersTooltipHide: 'Hide filters',\n  toolbarFiltersTooltipShow: 'Show filters',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Search…',\n  toolbarQuickFilterLabel: 'Search',\n  toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Download as CSV',\n  toolbarExportPrint: 'Print',\n  toolbarExportExcel: 'Download as Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Find column',\n  columnsPanelTextFieldPlaceholder: 'Column title',\n  columnsPanelDragIconLabel: 'Reorder column',\n  columnsPanelShowAllButton: 'Show all',\n  columnsPanelHideAllButton: 'Hide all',\n  // Filter panel text\n  filterPanelAddFilter: 'Add filter',\n  filterPanelRemoveAll: 'Remove all',\n  filterPanelDeleteIconLabel: 'Delete',\n  filterPanelLogicOperator: 'Logic operator',\n  filterPanelOperator: 'Operator',\n  filterPanelOperatorAnd: 'And',\n  filterPanelOperatorOr: 'Or',\n  filterPanelColumns: 'Columns',\n  filterPanelInputLabel: 'Value',\n  filterPanelInputPlaceholder: 'Filter value',\n  // Filter operators text\n  filterOperatorContains: 'contains',\n  filterOperatorEquals: 'equals',\n  filterOperatorStartsWith: 'starts with',\n  filterOperatorEndsWith: 'ends with',\n  filterOperatorIs: 'is',\n  filterOperatorNot: 'is not',\n  filterOperatorAfter: 'is after',\n  filterOperatorOnOrAfter: 'is on or after',\n  filterOperatorBefore: 'is before',\n  filterOperatorOnOrBefore: 'is on or before',\n  filterOperatorIsEmpty: 'is empty',\n  filterOperatorIsNotEmpty: 'is not empty',\n  filterOperatorIsAnyOf: 'is any of',\n  'filterOperator=': '=',\n  'filterOperator!=': '!=',\n  'filterOperator>': '>',\n  'filterOperator>=': '>=',\n  'filterOperator<': '<',\n  'filterOperator<=': '<=',\n  // Header filter operators text\n  headerFilterOperatorContains: 'Contains',\n  headerFilterOperatorEquals: 'Equals',\n  headerFilterOperatorStartsWith: 'Starts with',\n  headerFilterOperatorEndsWith: 'Ends with',\n  headerFilterOperatorIs: 'Is',\n  headerFilterOperatorNot: 'Is not',\n  headerFilterOperatorAfter: 'Is after',\n  headerFilterOperatorOnOrAfter: 'Is on or after',\n  headerFilterOperatorBefore: 'Is before',\n  headerFilterOperatorOnOrBefore: 'Is on or before',\n  headerFilterOperatorIsEmpty: 'Is empty',\n  headerFilterOperatorIsNotEmpty: 'Is not empty',\n  headerFilterOperatorIsAnyOf: 'Is any of',\n  'headerFilterOperator=': 'Equals',\n  'headerFilterOperator!=': 'Not equals',\n  'headerFilterOperator>': 'Greater than',\n  'headerFilterOperator>=': 'Greater than or equal to',\n  'headerFilterOperator<': 'Less than',\n  'headerFilterOperator<=': 'Less than or equal to',\n  // Filter values text\n  filterValueAny: 'any',\n  filterValueTrue: 'true',\n  filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Show columns',\n  columnMenuManageColumns: 'Manage columns',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Hide column',\n  columnMenuUnsort: 'Unsort',\n  columnMenuSortAsc: 'Sort by ASC',\n  columnMenuSortDesc: 'Sort by DESC',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  columnHeaderFiltersLabel: 'Show filters',\n  columnHeaderSortIconLabel: 'Sort',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rows selected` : `${count.toLocaleString()} row selected`,\n  // Total row amount footer text\n  footerTotalRows: 'Total Rows:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} of ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox selection',\n  checkboxSelectionSelectAllRows: 'Select all rows',\n  checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  checkboxSelectionSelectRow: 'Select row',\n  checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'yes',\n  booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'more',\n  // Column pinning text\n  pinToLeft: 'Pin to left',\n  pinToRight: 'Pin to right',\n  unpin: 'Unpin',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Group',\n  treeDataExpand: 'see children',\n  treeDataCollapse: 'hide children',\n  // Grouping columns\n  groupingColumnHeaderName: 'Group',\n  groupColumn: name => `Group by ${name}`,\n  unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Expand',\n  collapseDetailPanel: 'Collapse',\n  // Used core components translation keys\n  MuiTablePagination: {},\n  // Row reordering text\n  rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  aggregationMenuItemHeader: 'Aggregation',\n  aggregationFunctionLabelSum: 'sum',\n  aggregationFunctionLabelAvg: 'avg',\n  aggregationFunctionLabelMin: 'min',\n  aggregationFunctionLabelMax: 'max',\n  aggregationFunctionLabelSize: 'size'\n};","import * as React from 'react';\nimport { GridApiContext } from '../components/GridApiContext';\nimport { GridPrivateApiContext } from '../hooks/utils/useGridPrivateApiContext';\nimport { GridRootPropsContext } from './GridRootPropsContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridContextProvider({\n  privateApiRef,\n  props,\n  children\n}) {\n  const apiRef = React.useRef(privateApiRef.current.getPublicApi());\n  return /*#__PURE__*/_jsx(GridRootPropsContext.Provider, {\n    value: props,\n    children: /*#__PURE__*/_jsx(GridPrivateApiContext.Provider, {\n      value: privateApiRef,\n      children: /*#__PURE__*/_jsx(GridApiContext.Provider, {\n        value: apiRef,\n        children: children\n      })\n    })\n  });\n}","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\n/**\n * @category ColumnGrouping\n * @ignore - do not document.\n */\nexport const gridColumnGroupingSelector = state => state.columnGrouping;\nexport const gridColumnGroupsUnwrappedModelSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => {\n  var _columnGrouping$unwra;\n  return (_columnGrouping$unwra = columnGrouping == null ? void 0 : columnGrouping.unwrappedGroupingModel) != null ? _columnGrouping$unwra : {};\n});\nexport const gridColumnGroupsLookupSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => {\n  var _columnGrouping$looku;\n  return (_columnGrouping$looku = columnGrouping == null ? void 0 : columnGrouping.lookup) != null ? _columnGrouping$looku : {};\n});\nexport const gridColumnGroupsHeaderStructureSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => {\n  var _columnGrouping$heade;\n  return (_columnGrouping$heade = columnGrouping == null ? void 0 : columnGrouping.headerStructure) != null ? _columnGrouping$heade : [];\n});\nexport const gridColumnGroupsHeaderMaxDepthSelector = createSelector(gridColumnGroupingSelector, columnGrouping => {\n  var _columnGrouping$maxDe;\n  return (_columnGrouping$maxDe = columnGrouping == null ? void 0 : columnGrouping.maxDepth) != null ? _columnGrouping$maxDe : 0;\n});","export const gridColumnMenuSelector = state => state.columnMenu;","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\n/**\n * Get the columns state\n * @category Columns\n */\nexport const gridColumnsStateSelector = state => state.columns;\n\n/**\n * Get an array of column fields in the order rendered on screen.\n * @category Columns\n */\nexport const gridColumnFieldsSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.orderedFields);\n\n/**\n * Get the columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridColumnLookupSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.lookup);\n\n/**\n * Get an array of column definitions in the order rendered on screen..\n * @category Columns\n */\nexport const gridColumnDefinitionsSelector = createSelectorMemoized(gridColumnFieldsSelector, gridColumnLookupSelector, (allFields, lookup) => allFields.map(field => lookup[field]));\n\n/**\n * Get the column visibility model, containing the visibility status of each column.\n * If a column is not registered in the model, it is visible.\n * @category Visible Columns\n */\nexport const gridColumnVisibilityModelSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.columnVisibilityModel);\n\n/**\n * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Visible Columns\n */\nexport const gridVisibleColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector, (columns, columnVisibilityModel) => columns.filter(column => columnVisibilityModel[column.field] !== false));\n\n/**\n * Get the field of each visible column.\n * @category Visible Columns\n */\nexport const gridVisibleColumnFieldsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.map(column => column.field));\n\n/**\n * Get the left position in pixel of each visible columns relative to the left of the first column.\n * @category Visible Columns\n */\nexport const gridColumnPositionsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => {\n  const positions = [];\n  let currentPosition = 0;\n  for (let i = 0; i < visibleColumns.length; i += 1) {\n    positions.push(currentPosition);\n    currentPosition += visibleColumns[i].computedWidth;\n  }\n  return positions;\n});\n\n/**\n * Get the summed width of all the visible columns.\n * @category Visible Columns\n */\nexport const gridColumnsTotalWidthSelector = createSelector(gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n  if (colCount === 0) {\n    return 0;\n  }\n  return positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth;\n});\n\n/**\n * Get the filterable columns as an array.\n * @category Columns\n */\nexport const gridFilterableColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.filter(col => col.filterable));\n\n/**\n * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridFilterableColumnLookupSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.reduce((acc, col) => {\n  if (col.filterable) {\n    acc[col.field] = col;\n  }\n  return acc;\n}, {}));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { DEFAULT_GRID_COL_TYPE_KEY, GRID_STRING_COL_DEF } from '../../../colDef';\nimport { gridColumnsStateSelector, gridColumnVisibilityModelSelector } from './gridColumnsSelector';\nimport { clamp } from '../../../utils/utils';\nimport { gridDensityFactorSelector } from '../density/densitySelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../columnGrouping/gridColumnGroupsSelector';\nexport const COLUMNS_DIMENSION_PROPERTIES = ['maxWidth', 'minWidth', 'width', 'flex'];\n/**\n * Computes width for flex columns.\n * Based on CSS Flexbox specification:\n * https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n */\nexport function computeFlexColumnsWidth({\n  initialFreeSpace,\n  totalFlexUnits,\n  flexColumns\n}) {\n  const uniqueFlexColumns = new Set(flexColumns.map(col => col.field));\n  const flexColumnsLookup = {\n    all: {},\n    frozenFields: [],\n    freeze: field => {\n      const value = flexColumnsLookup.all[field];\n      if (value && value.frozen !== true) {\n        flexColumnsLookup.all[field].frozen = true;\n        flexColumnsLookup.frozenFields.push(field);\n      }\n    }\n  };\n\n  // Step 5 of https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n  function loopOverFlexItems() {\n    // 5a: If all the flex items on the line are frozen, free space has been distributed.\n    if (flexColumnsLookup.frozenFields.length === uniqueFlexColumns.size) {\n      return;\n    }\n    const violationsLookup = {\n      min: {},\n      max: {}\n    };\n    let remainingFreeSpace = initialFreeSpace;\n    let flexUnits = totalFlexUnits;\n    let totalViolation = 0;\n\n    // 5b: Calculate the remaining free space\n    flexColumnsLookup.frozenFields.forEach(field => {\n      remainingFreeSpace -= flexColumnsLookup.all[field].computedWidth;\n      flexUnits -= flexColumnsLookup.all[field].flex;\n    });\n    for (let i = 0; i < flexColumns.length; i += 1) {\n      const column = flexColumns[i];\n      if (flexColumnsLookup.all[column.field] && flexColumnsLookup.all[column.field].frozen === true) {\n        continue;\n      }\n\n      // 5c: Distribute remaining free space proportional to the flex factors\n      const widthPerFlexUnit = remainingFreeSpace / flexUnits;\n      let computedWidth = widthPerFlexUnit * column.flex;\n\n      // 5d: Fix min/max violations\n      if (computedWidth < column.minWidth) {\n        totalViolation += column.minWidth - computedWidth;\n        computedWidth = column.minWidth;\n        violationsLookup.min[column.field] = true;\n      } else if (computedWidth > column.maxWidth) {\n        totalViolation += column.maxWidth - computedWidth;\n        computedWidth = column.maxWidth;\n        violationsLookup.max[column.field] = true;\n      }\n      flexColumnsLookup.all[column.field] = {\n        frozen: false,\n        computedWidth,\n        flex: column.flex\n      };\n    }\n\n    // 5e: Freeze over-flexed items\n    if (totalViolation < 0) {\n      // Freeze all the items with max violations\n      Object.keys(violationsLookup.max).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else if (totalViolation > 0) {\n      // Freeze all the items with min violations\n      Object.keys(violationsLookup.min).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else {\n      // Freeze all items\n      flexColumns.forEach(({\n        field\n      }) => {\n        flexColumnsLookup.freeze(field);\n      });\n    }\n\n    // 5f: Return to the start of this loop\n    loopOverFlexItems();\n  }\n  loopOverFlexItems();\n  return flexColumnsLookup.all;\n}\n\n/**\n * Compute the `computedWidth` (ie: the width the column should have during rendering) based on the `width` / `flex` / `minWidth` / `maxWidth` properties of `GridColDef`.\n * The columns already have been merged with there `type` default values for `minWidth`, `maxWidth` and `width`, thus the `!` for those properties below.\n * TODO: Unit test this function in depth and only keep basic cases for the whole grid testing.\n * TODO: Improve the `GridColDef` typing to reflect the fact that `minWidth` / `maxWidth` and `width` can't be null after the merge with the `type` default values.\n */\nexport const hydrateColumnsWidth = (rawState, viewportInnerWidth) => {\n  const columnsLookup = {};\n  let totalFlexUnits = 0;\n  let widthAllocatedBeforeFlex = 0;\n  const flexColumns = [];\n\n  // For the non-flex columns, compute their width\n  // For the flex columns, compute there minimum width and how much width must be allocated during the flex allocation\n  rawState.orderedFields.forEach(columnField => {\n    const newColumn = _extends({}, rawState.lookup[columnField]);\n    if (rawState.columnVisibilityModel[columnField] === false) {\n      newColumn.computedWidth = 0;\n    } else {\n      let computedWidth;\n      if (newColumn.flex && newColumn.flex > 0) {\n        totalFlexUnits += newColumn.flex;\n        computedWidth = 0;\n        flexColumns.push(newColumn);\n      } else {\n        computedWidth = clamp(newColumn.width || GRID_STRING_COL_DEF.width, newColumn.minWidth || GRID_STRING_COL_DEF.minWidth, newColumn.maxWidth || GRID_STRING_COL_DEF.maxWidth);\n      }\n      widthAllocatedBeforeFlex += computedWidth;\n      newColumn.computedWidth = computedWidth;\n    }\n    columnsLookup[columnField] = newColumn;\n  });\n  const initialFreeSpace = Math.max(viewportInnerWidth - widthAllocatedBeforeFlex, 0);\n\n  // Allocate the remaining space to the flex columns\n  if (totalFlexUnits > 0 && viewportInnerWidth > 0) {\n    const computedColumnWidths = computeFlexColumnsWidth({\n      initialFreeSpace,\n      totalFlexUnits,\n      flexColumns\n    });\n    Object.keys(computedColumnWidths).forEach(field => {\n      columnsLookup[field].computedWidth = computedColumnWidths[field].computedWidth;\n    });\n  }\n  return _extends({}, rawState, {\n    lookup: columnsLookup\n  });\n};\n\n/**\n * Apply the order and the dimensions of the initial state.\n * The columns not registered in `orderedFields` will be placed after the imported columns.\n */\nexport const applyInitialState = (columnsState, initialState) => {\n  if (!initialState) {\n    return columnsState;\n  }\n  const {\n    orderedFields = [],\n    dimensions = {}\n  } = initialState;\n  const columnsWithUpdatedDimensions = Object.keys(dimensions);\n  if (columnsWithUpdatedDimensions.length === 0 && orderedFields.length === 0) {\n    return columnsState;\n  }\n  const orderedFieldsLookup = {};\n  const cleanOrderedFields = [];\n  for (let i = 0; i < orderedFields.length; i += 1) {\n    const field = orderedFields[i];\n\n    // Ignores the fields in the initialState that matches no field on the current column state\n    if (columnsState.lookup[field]) {\n      orderedFieldsLookup[field] = true;\n      cleanOrderedFields.push(field);\n    }\n  }\n  const newOrderedFields = cleanOrderedFields.length === 0 ? columnsState.orderedFields : [...cleanOrderedFields, ...columnsState.orderedFields.filter(field => !orderedFieldsLookup[field])];\n  const newColumnLookup = _extends({}, columnsState.lookup);\n  for (let i = 0; i < columnsWithUpdatedDimensions.length; i += 1) {\n    const field = columnsWithUpdatedDimensions[i];\n    const newColDef = _extends({}, newColumnLookup[field], {\n      hasBeenResized: true\n    });\n    Object.entries(dimensions[field]).forEach(([key, value]) => {\n      newColDef[key] = value === -1 ? Infinity : value;\n    });\n    newColumnLookup[field] = newColDef;\n  }\n  const newColumnsState = _extends({}, columnsState, {\n    orderedFields: newOrderedFields,\n    lookup: newColumnLookup\n  });\n  return newColumnsState;\n};\nfunction getDefaultColTypeDef(columnTypes, type) {\n  let colDef = columnTypes[DEFAULT_GRID_COL_TYPE_KEY];\n  if (type && columnTypes[type]) {\n    colDef = columnTypes[type];\n  }\n  return colDef;\n}\nexport const createColumnsState = ({\n  apiRef,\n  columnsToUpsert,\n  initialState,\n  columnTypes,\n  columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef),\n  keepOnlyColumnsToUpsert = false\n}) => {\n  var _apiRef$current$getRo, _apiRef$current$getRo2, _apiRef$current;\n  const isInsideStateInitializer = !apiRef.current.state.columns;\n  let columnsState;\n  if (isInsideStateInitializer) {\n    columnsState = {\n      orderedFields: [],\n      lookup: {},\n      columnVisibilityModel\n    };\n  } else {\n    const currentState = gridColumnsStateSelector(apiRef.current.state);\n    columnsState = {\n      orderedFields: keepOnlyColumnsToUpsert ? [] : [...currentState.orderedFields],\n      lookup: _extends({}, currentState.lookup),\n      // Will be cleaned later if keepOnlyColumnsToUpsert=true\n      columnVisibilityModel\n    };\n  }\n  let columnsToKeep = {};\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    columnsToKeep = Object.keys(columnsState.lookup).reduce((acc, key) => _extends({}, acc, {\n      [key]: false\n    }), {});\n  }\n  const columnsToUpsertLookup = {};\n  columnsToUpsert.forEach(newColumn => {\n    const {\n      field\n    } = newColumn;\n    columnsToUpsertLookup[field] = true;\n    columnsToKeep[field] = true;\n    let existingState = columnsState.lookup[field];\n    if (existingState == null) {\n      existingState = _extends({}, getDefaultColTypeDef(columnTypes, newColumn.type), {\n        field,\n        hasBeenResized: false\n      });\n      columnsState.orderedFields.push(field);\n    } else if (keepOnlyColumnsToUpsert) {\n      columnsState.orderedFields.push(field);\n    }\n\n    // If the column type has changed - merge the existing state with the default column type definition\n    if (existingState && existingState.type !== newColumn.type) {\n      existingState = _extends({}, getDefaultColTypeDef(columnTypes, newColumn.type), {\n        field\n      });\n    }\n    let hasBeenResized = existingState.hasBeenResized;\n    COLUMNS_DIMENSION_PROPERTIES.forEach(key => {\n      if (newColumn[key] !== undefined) {\n        hasBeenResized = true;\n        if (newColumn[key] === -1) {\n          newColumn[key] = Infinity;\n        }\n      }\n    });\n    columnsState.lookup[field] = _extends({}, existingState, newColumn, {\n      hasBeenResized\n    });\n  });\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    Object.keys(columnsState.lookup).forEach(field => {\n      if (!columnsToKeep[field]) {\n        delete columnsState.lookup[field];\n      }\n    });\n  }\n  const columnsStateWithPreProcessing = apiRef.current.unstable_applyPipeProcessors('hydrateColumns', columnsState);\n  const columnsStateWithPortableColumns = applyInitialState(columnsStateWithPreProcessing, initialState);\n  return hydrateColumnsWidth(columnsStateWithPortableColumns, (_apiRef$current$getRo = (_apiRef$current$getRo2 = (_apiRef$current = apiRef.current).getRootDimensions) == null || (_apiRef$current$getRo2 = _apiRef$current$getRo2.call(_apiRef$current)) == null ? void 0 : _apiRef$current$getRo2.viewportInnerSize.width) != null ? _apiRef$current$getRo : 0);\n};\nexport const mergeColumnsState = columnsState => state => _extends({}, state, {\n  columns: columnsState\n});\nexport function getFirstNonSpannedColumnToRender({\n  firstColumnToRender,\n  apiRef,\n  firstRowToRender,\n  lastRowToRender,\n  visibleRows\n}) {\n  let firstNonSpannedColumnToRender = firstColumnToRender;\n  for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n    const row = visibleRows[i];\n    if (row) {\n      const rowId = visibleRows[i].id;\n      const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, firstColumnToRender);\n      if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n        firstNonSpannedColumnToRender = cellColSpanInfo.leftVisibleCellIndex;\n      }\n    }\n  }\n  return firstNonSpannedColumnToRender;\n}\nexport function getFirstColumnIndexToRender({\n  firstColumnIndex,\n  minColumnIndex,\n  columnBuffer,\n  firstRowToRender,\n  lastRowToRender,\n  apiRef,\n  visibleRows\n}) {\n  const initialFirstColumnToRender = Math.max(firstColumnIndex - columnBuffer, minColumnIndex);\n  const firstColumnToRender = getFirstNonSpannedColumnToRender({\n    firstColumnToRender: initialFirstColumnToRender,\n    apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows\n  });\n  return firstColumnToRender;\n}\nexport function getTotalHeaderHeight(apiRef, headerHeight) {\n  const densityFactor = gridDensityFactorSelector(apiRef);\n  const maxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n  return Math.floor(headerHeight * densityFactor) * ((maxDepth != null ? maxDepth : 0) + 1);\n}","import { createSelector } from '../../../utils/createSelector';\nexport const gridDensitySelector = state => state.density;\nexport const gridDensityValueSelector = createSelector(gridDensitySelector, density => density.value);\nexport const gridDensityFactorSelector = createSelector(gridDensitySelector, density => density.factor);","// TODO v6: rename to gridEditingStateSelector\nexport const gridEditRowsStateSelector = state => state.editRows;","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridSortedRowEntriesSelector } from '../sorting/gridSortingSelector';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\n\n/**\n * @category Filtering\n */\nconst gridFilterStateSelector = state => state.filter;\n\n/**\n * Get the current filter model.\n * @category Filtering\n */\nexport const gridFilterModelSelector = createSelector(gridFilterStateSelector, filterState => filterState.filterModel);\n\n/**\n * Get the current quick filter values.\n * @category Filtering\n */\nexport const gridQuickFilterValuesSelector = createSelector(gridFilterModelSelector, filterModel => filterModel.quickFilterValues);\n\n/**\n * @category Visible rows\n * @ignore - do not document.\n */\nexport const gridVisibleRowsLookupSelector = state => state.visibleRowsLookup;\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredRowsLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredDescendantCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredDescendantCountLookup);\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowEntriesSelector = createSelectorMemoized(gridVisibleRowsLookupSelector, gridSortedRowEntriesSelector, (visibleRowsLookup, sortedRows) => sortedRows.filter(row => visibleRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, visibleSortedRowEntries => visibleSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowEntriesSelector = createSelectorMemoized(gridFilteredRowsLookupSelector, gridSortedRowEntriesSelector, (filteredRowsLookup, sortedRows) => sortedRows.filter(row => filteredRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowIdsSelector = createSelectorMemoized(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredSortedTopLevelRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, (visibleSortedRows, rowTree, rowTreeDepth) => {\n  if (rowTreeDepth < 2) {\n    return visibleSortedRows;\n  }\n  return visibleSortedRows.filter(row => {\n    var _rowTree$row$id;\n    return ((_rowTree$row$id = rowTree[row.id]) == null ? void 0 : _rowTree$row$id.depth) === 0;\n  });\n});\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridExpandedRowCountSelector = createSelector(gridExpandedSortedRowEntriesSelector, visibleSortedRows => visibleSortedRows.length);\n\n/**\n * Get the amount of top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredTopLevelRowCountSelector = createSelector(gridFilteredSortedTopLevelRowEntriesSelector, visibleSortedTopLevelRows => visibleSortedTopLevelRows.length);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsSelector = createSelectorMemoized(gridFilterModelSelector, gridColumnLookupSelector, (filterModel, columnLookup) => {\n  var _filterModel$items;\n  return (_filterModel$items = filterModel.items) == null ? void 0 : _filterModel$items.filter(item => {\n    var _column$filterOperato, _item$value;\n    if (!item.field) {\n      return false;\n    }\n    const column = columnLookup[item.field];\n    if (!(column != null && column.filterOperators) || (column == null || (_column$filterOperato = column.filterOperators) == null ? void 0 : _column$filterOperato.length) === 0) {\n      return false;\n    }\n    const filterOperator = column.filterOperators.find(operator => operator.value === item.operator);\n    if (!filterOperator) {\n      return false;\n    }\n    return !filterOperator.InputComponent || item.value != null && ((_item$value = item.value) == null ? void 0 : _item$value.toString()) !== '';\n  });\n});\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsLookupSelector = createSelectorMemoized(gridFilterActiveItemsSelector, activeFilters => {\n  const result = activeFilters.reduce((res, filterItem) => {\n    if (!res[filterItem.field]) {\n      res[filterItem.field] = [filterItem];\n    } else {\n      res[filterItem.field].push(filterItem);\n    }\n    return res;\n  }, {});\n  return result;\n});","import { GridLogicOperator } from '../../../models/gridFilterItem';\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  logicOperator: GridLogicOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLogicOperator.And\n});\n\n/**\n * @param {GridRowId} rowId The id of the row we want to filter.\n * @param {(filterItem: GridFilterItem) => boolean} shouldApplyItem An optional callback to allow the filtering engine to only apply some items.\n */\n\n/**\n * Visibility status for each row.\n * A row is visible if it is passing the filters AND if its parents are expanded.\n * If a row is not registered in this lookup, it is visible.\n */","export function getPublicApiRef(apiRef) {\n  return {\n    current: apiRef.current.getPublicApi()\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridLogicOperator } from '../../../models';\nimport { GLOBAL_API_REF, isInternalFilter } from '../../../colDef/utils';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { buildWarning } from '../../../utils/warning';\nimport { getPublicApiRef } from '../../../utils/getPublicApiRef';\nimport { gridColumnFieldsSelector, gridColumnLookupSelector, gridVisibleColumnFieldsSelector } from '../columns';\nlet hasEval;\nfunction getHasEval() {\n  if (hasEval !== undefined) {\n    return hasEval;\n  }\n  try {\n    hasEval = new Function('return true')();\n  } catch (_) {\n    hasEval = false;\n  }\n  return hasEval;\n}\n/**\n * Adds default values to the optional fields of a filter items.\n * @param {GridFilterItem} item The raw filter item.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @return {GridFilterItem} The clean filter item with an uniq ID and an always-defined operator.\n * TODO: Make the typing reflect the different between GridFilterInputItem and GridFilterItem.\n */\nexport const cleanFilterItem = (item, apiRef) => {\n  const cleanItem = _extends({}, item);\n  if (cleanItem.id == null) {\n    cleanItem.id = Math.round(Math.random() * 1e5);\n  }\n  if (cleanItem.operator == null) {\n    // Selects a default operator\n    // We don't use `apiRef.current.getColumn` because it is not ready during state initialization\n    const column = gridColumnLookupSelector(apiRef)[cleanItem.field];\n    cleanItem.operator = column && column.filterOperators[0].value;\n  }\n  return cleanItem;\n};\nconst filterModelDisableMultiColumnsFilteringWarning = buildWarning(['MUI: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nconst filterModelMissingItemIdWarning = buildWarning('MUI: The `id` field is required on `filterModel.items` when you use multiple filters.', 'error');\nconst filterModelMissingItemOperatorWarning = buildWarning('MUI: The `operator` field is required on `filterModel.items`, one or more of your filtering item has no `operator` provided.', 'error');\nexport const sanitizeFilterModel = (model, disableMultipleColumnsFiltering, apiRef) => {\n  const hasSeveralItems = model.items.length > 1;\n  let items;\n  if (hasSeveralItems && disableMultipleColumnsFiltering) {\n    filterModelDisableMultiColumnsFilteringWarning();\n    items = [model.items[0]];\n  } else {\n    items = model.items;\n  }\n  const hasItemsWithoutIds = hasSeveralItems && items.some(item => item.id == null);\n  const hasItemWithoutOperator = items.some(item => item.operator == null);\n  if (hasItemsWithoutIds) {\n    filterModelMissingItemIdWarning();\n  }\n  if (hasItemWithoutOperator) {\n    filterModelMissingItemOperatorWarning();\n  }\n  if (hasItemWithoutOperator || hasItemsWithoutIds) {\n    return _extends({}, model, {\n      items: items.map(item => cleanFilterItem(item, apiRef))\n    });\n  }\n  if (model.items !== items) {\n    return _extends({}, model, {\n      items\n    });\n  }\n  return model;\n};\nexport const mergeStateWithFilterModel = (filterModel, disableMultipleColumnsFiltering, apiRef) => filteringState => _extends({}, filteringState, {\n  filterModel: sanitizeFilterModel(filterModel, disableMultipleColumnsFiltering, apiRef)\n});\nexport const removeDiacritics = value => {\n  if (typeof value === 'string') {\n    return value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n  }\n  return value;\n};\nconst getFilterCallbackFromItem = (filterItem, apiRef) => {\n  if (!filterItem.field || !filterItem.operator) {\n    return null;\n  }\n  const column = apiRef.current.getColumn(filterItem.field);\n  if (!column) {\n    return null;\n  }\n  let parsedValue;\n  if (column.valueParser) {\n    var _filterItem$value;\n    const parser = column.valueParser;\n    parsedValue = Array.isArray(filterItem.value) ? (_filterItem$value = filterItem.value) == null ? void 0 : _filterItem$value.map(x => parser(x)) : parser(filterItem.value);\n  } else {\n    parsedValue = filterItem.value;\n  }\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  if (ignoreDiacritics) {\n    parsedValue = removeDiacritics(parsedValue);\n  }\n  const newFilterItem = _extends({}, filterItem, {\n    value: parsedValue\n  });\n  const filterOperators = column.filterOperators;\n  if (!(filterOperators != null && filterOperators.length)) {\n    throw new Error(`MUI: No filter operators found for column '${column.field}'.`);\n  }\n  const filterOperator = filterOperators.find(operator => operator.value === newFilterItem.operator);\n  if (!filterOperator) {\n    throw new Error(`MUI: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operator}'.`);\n  }\n  const hasUserFunctionLegacy = !isInternalFilter(filterOperator.getApplyFilterFn);\n  const hasUserFunctionV7 = !isInternalFilter(filterOperator.getApplyFilterFnV7);\n  const publicApiRef = getPublicApiRef(apiRef);\n  if (filterOperator.getApplyFilterFnV7 && !(hasUserFunctionLegacy && !hasUserFunctionV7)) {\n    const applyFilterOnRow = filterOperator.getApplyFilterFnV7(newFilterItem, column);\n    if (typeof applyFilterOnRow !== 'function') {\n      return null;\n    }\n    return {\n      v7: true,\n      item: newFilterItem,\n      fn: row => {\n        let value = apiRef.current.getRowValue(row, column);\n        if (ignoreDiacritics) {\n          value = removeDiacritics(value);\n        }\n        return applyFilterOnRow(value, row, column, publicApiRef);\n      }\n    };\n  }\n  const applyFilterOnRow = filterOperator.getApplyFilterFn(newFilterItem, column);\n  if (typeof applyFilterOnRow !== 'function') {\n    return null;\n  }\n  return {\n    v7: false,\n    item: newFilterItem,\n    fn: rowId => {\n      const params = apiRef.current.getCellParams(rowId, newFilterItem.field);\n      GLOBAL_API_REF.current = publicApiRef;\n      if (ignoreDiacritics) {\n        params.value = removeDiacritics(params.value);\n      }\n      const result = applyFilterOnRow(params);\n      GLOBAL_API_REF.current = null;\n      return result;\n    }\n  };\n};\nlet filterItemsApplierId = 1;\n\n/**\n * Generates a method to easily check if a row is matching the current filter model.\n * @param {GridFilterModel} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedFilterItemsApplier = (filterModel, apiRef, disableEval) => {\n  const {\n    items\n  } = filterModel;\n  const appliers = items.map(item => getFilterCallbackFromItem(item, apiRef)).filter(callback => !!callback);\n  if (appliers.length === 0) {\n    return null;\n  }\n  if (disableEval || !getHasEval()) {\n    // This is the original logic, which is used if `eval()` is not supported (aka prevented by CSP).\n    return (row, shouldApplyFilter) => {\n      const resultPerItemId = {};\n      for (let i = 0; i < appliers.length; i += 1) {\n        const applier = appliers[i];\n        if (!shouldApplyFilter || shouldApplyFilter(applier.item.field)) {\n          resultPerItemId[applier.item.id] = applier.v7 ? applier.fn(row) : applier.fn(apiRef.current.getRowId(row));\n        }\n      }\n      return resultPerItemId;\n    };\n  }\n\n  // We generate a new function with `new Function()` to avoid expensive patterns for JS engines\n  // such as a dynamic object assignment, e.g. `{ [dynamicKey]: value }`.\n  const filterItemCore = new Function('getRowId', 'appliers', 'row', 'shouldApplyFilter', `\"use strict\";\n${appliers.map((applier, i) => `const shouldApply${i} = !shouldApplyFilter || shouldApplyFilter(${JSON.stringify(applier.item.field)});`).join('\\n')}\n\nconst result$$ = {\n${appliers.map((applier, i) => `  ${JSON.stringify(String(applier.item.id))}: !shouldApply${i}\n    ? false\n    : ${applier.v7 ? `appliers[${i}].fn(row)` : `appliers[${i}].fn(getRowId(row))`},`).join('\\n')}\n};\n\nreturn result$$;`.replaceAll('$$', String(filterItemsApplierId)));\n  filterItemsApplierId += 1;\n\n  // Assign to the arrow function a name to help debugging\n  const filterItem = (row, shouldApplyItem) => filterItemCore(apiRef.current.getRowId, appliers, row, shouldApplyItem);\n  return filterItem;\n};\n\n/**\n * Generates a method to easily check if a row is matching the current quick filter.\n * @param {any[]} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedQuickFilterApplier = (filterModel, apiRef) => {\n  var _filterModel$quickFil, _filterModel$quickFil2, _filterModel$quickFil3;\n  const quickFilterValues = (_filterModel$quickFil = (_filterModel$quickFil2 = filterModel.quickFilterValues) == null ? void 0 : _filterModel$quickFil2.filter(Boolean)) != null ? _filterModel$quickFil : [];\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n  const quickFilterExcludeHiddenColumns = (_filterModel$quickFil3 = filterModel.quickFilterExcludeHiddenColumns) != null ? _filterModel$quickFil3 : false;\n  const columnFields = quickFilterExcludeHiddenColumns ? gridVisibleColumnFieldsSelector(apiRef) : gridColumnFieldsSelector(apiRef);\n  const appliersPerField = [];\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  const publicApiRef = getPublicApiRef(apiRef);\n  columnFields.forEach(field => {\n    const column = apiRef.current.getColumn(field);\n    const getApplyQuickFilterFn = column == null ? void 0 : column.getApplyQuickFilterFn;\n    const getApplyQuickFilterFnV7 = column == null ? void 0 : column.getApplyQuickFilterFnV7;\n    const hasUserFunctionLegacy = !isInternalFilter(getApplyQuickFilterFn);\n    const hasUserFunctionV7 = !isInternalFilter(getApplyQuickFilterFnV7);\n    if (getApplyQuickFilterFnV7 && !(hasUserFunctionLegacy && !hasUserFunctionV7)) {\n      appliersPerField.push({\n        column,\n        appliers: quickFilterValues.map(quickFilterValue => {\n          const value = ignoreDiacritics ? removeDiacritics(quickFilterValue) : quickFilterValue;\n          return {\n            v7: true,\n            fn: getApplyQuickFilterFnV7(value, column, publicApiRef)\n          };\n        })\n      });\n    } else if (getApplyQuickFilterFn) {\n      appliersPerField.push({\n        column,\n        appliers: quickFilterValues.map(quickFilterValue => {\n          const value = ignoreDiacritics ? removeDiacritics(quickFilterValue) : quickFilterValue;\n          return {\n            v7: false,\n            fn: getApplyQuickFilterFn(value, column, publicApiRef)\n          };\n        })\n      });\n    }\n  });\n  return function isRowMatchingQuickFilter(row, shouldApplyFilter) {\n    const result = {};\n    const usedCellParams = {};\n\n    /* eslint-disable no-restricted-syntax, no-labels */\n    outer: for (let v = 0; v < quickFilterValues.length; v += 1) {\n      const filterValue = quickFilterValues[v];\n      for (let i = 0; i < appliersPerField.length; i += 1) {\n        const {\n          column,\n          appliers\n        } = appliersPerField[i];\n        const {\n          field\n        } = column;\n        if (shouldApplyFilter && !shouldApplyFilter(field)) {\n          continue;\n        }\n        const applier = appliers[v];\n        let value = apiRef.current.getRowValue(row, column);\n        if (applier.fn === null) {\n          continue;\n        }\n        if (applier.v7) {\n          if (ignoreDiacritics) {\n            value = removeDiacritics(value);\n          }\n          const isMatching = applier.fn(value, row, column, publicApiRef);\n          if (isMatching) {\n            result[filterValue] = true;\n            continue outer;\n          }\n        } else {\n          var _usedCellParams$field;\n          const cellParams = (_usedCellParams$field = usedCellParams[field]) != null ? _usedCellParams$field : apiRef.current.getCellParams(apiRef.current.getRowId(row), field);\n          if (ignoreDiacritics) {\n            cellParams.value = removeDiacritics(cellParams.value);\n          }\n          usedCellParams[field] = cellParams;\n          const isMatching = applier.fn(cellParams);\n          if (isMatching) {\n            result[filterValue] = true;\n            continue outer;\n          }\n        }\n      }\n      result[filterValue] = false;\n    }\n    /* eslint-enable no-restricted-syntax, no-labels */\n\n    return result;\n  };\n};\nexport const buildAggregatedFilterApplier = (filterModel, apiRef, disableEval) => {\n  const isRowMatchingFilterItems = buildAggregatedFilterItemsApplier(filterModel, apiRef, disableEval);\n  const isRowMatchingQuickFilter = buildAggregatedQuickFilterApplier(filterModel, apiRef);\n  return function isRowMatchingFilters(row, shouldApplyFilter, result) {\n    var _isRowMatchingFilterI, _isRowMatchingQuickFi;\n    result.passingFilterItems = (_isRowMatchingFilterI = isRowMatchingFilterItems == null ? void 0 : isRowMatchingFilterItems(row, shouldApplyFilter)) != null ? _isRowMatchingFilterI : null;\n    result.passingQuickFilterValues = (_isRowMatchingQuickFi = isRowMatchingQuickFilter == null ? void 0 : isRowMatchingQuickFilter(row, shouldApplyFilter)) != null ? _isRowMatchingQuickFi : null;\n  };\n};\nconst isNotNull = result => result != null;\nconst filterModelItems = (cache, apiRef, items) => {\n  if (!cache.cleanedFilterItems) {\n    cache.cleanedFilterItems = items.filter(item => getFilterCallbackFromItem(item, apiRef) !== null);\n  }\n  return cache.cleanedFilterItems;\n};\nexport const passFilterLogic = (allFilterItemResults, allQuickFilterResults, filterModel, apiRef, cache) => {\n  const cleanedFilterItems = filterModelItems(cache, apiRef, filterModel.items);\n  const cleanedFilterItemResults = allFilterItemResults.filter(isNotNull);\n  const cleanedQuickFilterResults = allQuickFilterResults.filter(isNotNull);\n\n  // get result for filter items model\n  if (cleanedFilterItemResults.length > 0) {\n    var _filterModel$logicOpe;\n    // Return true if the item pass with one of the rows\n    const filterItemPredicate = item => {\n      return cleanedFilterItemResults.some(filterItemResult => filterItemResult[item.id]);\n    };\n    const logicOperator = (_filterModel$logicOpe = filterModel.logicOperator) != null ? _filterModel$logicOpe : getDefaultGridFilterModel().logicOperator;\n    if (logicOperator === GridLogicOperator.And) {\n      const passesAllFilters = cleanedFilterItems.every(filterItemPredicate);\n      if (!passesAllFilters) {\n        return false;\n      }\n    } else {\n      const passesSomeFilters = cleanedFilterItems.some(filterItemPredicate);\n      if (!passesSomeFilters) {\n        return false;\n      }\n    }\n  }\n\n  // get result for quick filter model\n  if (cleanedQuickFilterResults.length > 0 && filterModel.quickFilterValues != null) {\n    var _filterModel$quickFil4;\n    // Return true if the item pass with one of the rows\n    const quickFilterValuePredicate = value => {\n      return cleanedQuickFilterResults.some(quickFilterValueResult => quickFilterValueResult[value]);\n    };\n    const quickFilterLogicOperator = (_filterModel$quickFil4 = filterModel.quickFilterLogicOperator) != null ? _filterModel$quickFil4 : getDefaultGridFilterModel().quickFilterLogicOperator;\n    if (quickFilterLogicOperator === GridLogicOperator.And) {\n      const passesAllQuickFilterValues = filterModel.quickFilterValues.every(quickFilterValuePredicate);\n      if (!passesAllQuickFilterValues) {\n        return false;\n      }\n    } else {\n      const passesSomeQuickFilterValues = filterModel.quickFilterValues.some(quickFilterValuePredicate);\n      if (!passesSomeQuickFilterValues) {\n        return false;\n      }\n    }\n  }\n  return true;\n};","import { createSelector } from '../../../utils/createSelector';\nexport const gridFocusStateSelector = state => state.focus;\nexport const gridFocusCellSelector = createSelector(gridFocusStateSelector, focusState => focusState.cell);\nexport const gridFocusColumnHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeader);\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_gridFocusColumnHeaderFilterSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeaderFilter);\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_gridFocusColumnGroupHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnGroupHeader);\nexport const gridTabIndexStateSelector = state => state.tabIndex;\nexport const gridTabIndexCellSelector = createSelector(gridTabIndexStateSelector, state => state.cell);\nexport const gridTabIndexColumnHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeader);\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_gridTabIndexColumnHeaderFilterSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeaderFilter);\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_gridTabIndexColumnGroupHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnGroupHeader);","/* eslint-disable @typescript-eslint/naming-convention */\nimport { createSelector } from '../../../utils/createSelector';\nexport const unstable_gridHeaderFilteringStateSelector = state => state.headerFiltering;\nexport const unstable_gridHeaderFilteringEditFieldSelector = createSelector(unstable_gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.editing);\nexport const unstable_gridHeaderFilteringMenuSelector = createSelector(unstable_gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.menuOpen);","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridFilteredTopLevelRowCountSelector, gridExpandedSortedRowEntriesSelector, gridExpandedSortedRowIdsSelector, gridFilteredSortedTopLevelRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\nimport { getPageCount } from './gridPaginationUtils';\n\n/**\n * @category Pagination\n * @ignore - do not document.\n */\nexport const gridPaginationSelector = state => state.pagination;\n\n/**\n * Get the pagination model\n * @category Pagination\n */\nexport const gridPaginationModelSelector = createSelector(gridPaginationSelector, pagination => pagination.paginationModel);\n\n/**\n * Get the index of the page to render if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.page);\n\n/**\n * Get the maximum amount of rows to display on a single page if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSizeSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.pageSize);\n\n/**\n * Get the amount of pages needed to display all the rows if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageCountSelector = createSelector(gridPaginationModelSelector, gridFilteredTopLevelRowCountSelector, (paginationModel, visibleTopLevelRowCount) => getPageCount(visibleTopLevelRowCount, paginationModel.pageSize));\n\n/**\n * Get the index of the first and the last row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginationRowRangeSelector = createSelectorMemoized(gridPaginationModelSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, gridExpandedSortedRowEntriesSelector, gridFilteredSortedTopLevelRowEntriesSelector, (paginationModel, rowTree, rowTreeDepth, visibleSortedRowEntries, visibleSortedTopLevelRowEntries) => {\n  const visibleTopLevelRowCount = visibleSortedTopLevelRowEntries.length;\n  const topLevelFirstRowIndex = Math.min(paginationModel.pageSize * paginationModel.page, visibleTopLevelRowCount - 1);\n  const topLevelLastRowIndex = Math.min(topLevelFirstRowIndex + paginationModel.pageSize - 1, visibleTopLevelRowCount - 1);\n\n  // The range contains no element\n  if (topLevelFirstRowIndex === -1 || topLevelLastRowIndex === -1) {\n    return null;\n  }\n\n  // The tree is flat, there is no need to look for children\n  if (rowTreeDepth < 2) {\n    return {\n      firstRowIndex: topLevelFirstRowIndex,\n      lastRowIndex: topLevelLastRowIndex\n    };\n  }\n  const topLevelFirstRow = visibleSortedTopLevelRowEntries[topLevelFirstRowIndex];\n  const topLevelRowsInCurrentPageCount = topLevelLastRowIndex - topLevelFirstRowIndex + 1;\n  const firstRowIndex = visibleSortedRowEntries.findIndex(row => row.id === topLevelFirstRow.id);\n  let lastRowIndex = firstRowIndex;\n  let topLevelRowAdded = 0;\n  while (lastRowIndex < visibleSortedRowEntries.length && topLevelRowAdded <= topLevelRowsInCurrentPageCount) {\n    var _rowTree$row$id;\n    const row = visibleSortedRowEntries[lastRowIndex];\n    const depth = (_rowTree$row$id = rowTree[row.id]) == null ? void 0 : _rowTree$row$id.depth;\n    if (depth === undefined) {\n      lastRowIndex += 1;\n    } else {\n      if (topLevelRowAdded < topLevelRowsInCurrentPageCount || depth > 0) {\n        lastRowIndex += 1;\n      }\n      if (depth === 0) {\n        topLevelRowAdded += 1;\n      }\n    }\n  }\n  return {\n    firstRowIndex,\n    lastRowIndex: lastRowIndex - 1\n  };\n});\n\n/**\n * Get the id and the model of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridPaginationRowRangeSelector, (visibleSortedRowEntries, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowEntries.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n\n/**\n * Get the id of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridPaginationRowRangeSelector, (visibleSortedRowIds, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowIds.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});","import { buildWarning } from '../../../utils/warning';\nimport { GridSignature } from '../../utils';\nconst MAX_PAGE_SIZE = 100;\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\nexport const getPageCount = (rowCount, pageSize) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n  return 0;\n};\nexport const noRowCountInServerMode = buildWarning([\"MUI: the 'rowCount' prop is undefined while using paginationMode='server'\", 'For more detail, see http://mui.com/components/data-grid/pagination/#basic-implementation'], 'error');\nexport const getDefaultGridPaginationModel = autoPageSize => ({\n  page: 0,\n  pageSize: autoPageSize ? 0 : 100\n});\nexport const getValidPage = (page, pageCount = 0) => {\n  if (pageCount === 0) {\n    return page;\n  }\n  return Math.max(Math.min(page, pageCount - 1), 0);\n};\nexport const throwIfPageSizeExceedsTheLimit = (pageSize, signatureProp) => {\n  if (signatureProp === GridSignature.DataGrid && pageSize > MAX_PAGE_SIZE) {\n    throw new Error(['MUI: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n  }\n};","export const gridPreferencePanelStateSelector = state => state.preferencePanel;","var GridPreferencePanelsValue = /*#__PURE__*/function (GridPreferencePanelsValue) {\n  GridPreferencePanelsValue[\"filters\"] = \"filters\";\n  GridPreferencePanelsValue[\"columns\"] = \"columns\";\n  return GridPreferencePanelsValue;\n}(GridPreferencePanelsValue || {});\nexport { GridPreferencePanelsValue };","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nexport const gridRowSelectionStateSelector = state => state.rowSelection;\nexport const selectedGridRowsCountSelector = createSelector(gridRowSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelectorMemoized(gridRowSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelectorMemoized(gridRowSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));","export const gridRowsMetaSelector = state => state.rowsMeta;","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nconst gridRowsStateSelector = state => state.rows;\nexport const gridRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalRowCount);\nexport const gridRowsLoadingSelector = createSelector(gridRowsStateSelector, rows => rows.loading);\nexport const gridTopLevelRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\n\n// TODO rows v6: Rename\nexport const gridRowsLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToModelLookup);\nexport const gridRowsDataRowIdToIdLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToIdLookup);\nexport const gridRowTreeSelector = createSelector(gridRowsStateSelector, rows => rows.tree);\nexport const gridRowGroupingNameSelector = createSelector(gridRowsStateSelector, rows => rows.groupingName);\nexport const gridRowTreeDepthsSelector = createSelector(gridRowsStateSelector, rows => rows.treeDepths);\nexport const gridRowMaximumTreeDepthSelector = createSelectorMemoized(gridRowsStateSelector, rows => {\n  const entries = Object.entries(rows.treeDepths);\n  if (entries.length === 0) {\n    return 1;\n  }\n  return entries.filter(([, nodeCount]) => nodeCount > 0).map(([depth]) => Number(depth)).sort((a, b) => b - a)[0] + 1;\n});\nexport const gridDataRowIdsSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIds);\n\n/**\n * @ignore - do not document.\n */\nexport const gridAdditionalRowGroupsSelector = createSelector(gridRowsStateSelector, rows => rows == null ? void 0 : rows.additionalRowGroups);\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsSelector = createSelectorMemoized(gridAdditionalRowGroupsSelector, additionalRowGroups => {\n  var _rawPinnedRows$bottom, _rawPinnedRows$top;\n  const rawPinnedRows = additionalRowGroups == null ? void 0 : additionalRowGroups.pinnedRows;\n  return {\n    bottom: rawPinnedRows == null || (_rawPinnedRows$bottom = rawPinnedRows.bottom) == null ? void 0 : _rawPinnedRows$bottom.map(rowEntry => {\n      var _rowEntry$model;\n      return {\n        id: rowEntry.id,\n        model: (_rowEntry$model = rowEntry.model) != null ? _rowEntry$model : {}\n      };\n    }),\n    top: rawPinnedRows == null || (_rawPinnedRows$top = rawPinnedRows.top) == null ? void 0 : _rawPinnedRows$top.map(rowEntry => {\n      var _rowEntry$model2;\n      return {\n        id: rowEntry.id,\n        model: (_rowEntry$model2 = rowEntry.model) != null ? _rowEntry$model2 : {}\n      };\n    })\n  };\n});\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsCountSelector = createSelector(gridPinnedRowsSelector, pinnedRows => {\n  var _pinnedRows$top, _pinnedRows$bottom;\n  return ((pinnedRows == null || (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.length) || 0) + ((pinnedRows == null || (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.length) || 0);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\nimport { gridDensityFactorSelector } from '../density/densitySelector';\nexport const GRID_ROOT_GROUP_ID = `auto-generated-group-node-root`;\nexport const GRID_ID_AUTOGENERATED = Symbol('mui.id_autogenerated');\nexport const buildRootGroup = () => ({\n  type: 'group',\n  id: GRID_ROOT_GROUP_ID,\n  depth: -1,\n  groupingField: null,\n  groupingKey: null,\n  isAutoGenerated: true,\n  children: [],\n  childrenFromPath: {},\n  childrenExpanded: true,\n  parent: null\n});\n\n/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\nexport function checkGridRowIdIsValid(id, row, detailErrorMessage = 'A row was provided without id in the rows prop:') {\n  if (id == null) {\n    throw new Error(['MUI: The data grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport const getRowIdFromRowModel = (rowModel, getRowId, detailErrorMessage) => {\n  const id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n};\nexport const createRowsInternalCache = ({\n  rows,\n  getRowId,\n  loading,\n  rowCount\n}) => {\n  const updates = {\n    type: 'full',\n    rows: []\n  };\n  const dataRowIdToModelLookup = {};\n  const dataRowIdToIdLookup = {};\n  for (let i = 0; i < rows.length; i += 1) {\n    const model = rows[i];\n    const id = getRowIdFromRowModel(model, getRowId);\n    dataRowIdToModelLookup[id] = model;\n    dataRowIdToIdLookup[id] = id;\n    updates.rows.push(id);\n  }\n  return {\n    rowsBeforePartialUpdates: rows,\n    loadingPropBeforePartialUpdates: loading,\n    rowCountPropBeforePartialUpdates: rowCount,\n    updates,\n    dataRowIdToIdLookup,\n    dataRowIdToModelLookup\n  };\n};\nexport const getTopLevelRowCount = ({\n  tree,\n  rowCountProp = 0\n}) => {\n  const rootGroupNode = tree[GRID_ROOT_GROUP_ID];\n  return Math.max(rowCountProp, rootGroupNode.children.length + (rootGroupNode.footerId == null ? 0 : 1));\n};\nexport const getRowsStateFromCache = ({\n  apiRef,\n  rowCountProp = 0,\n  loadingProp,\n  previousTree,\n  previousTreeDepths\n}) => {\n  const cache = apiRef.current.caches.rows;\n\n  // 1. Apply the \"rowTreeCreation\" family processing.\n  const {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIds: unProcessedDataRowIds,\n    groupingName\n  } = apiRef.current.applyStrategyProcessor('rowTreeCreation', {\n    previousTree,\n    previousTreeDepths,\n    updates: cache.updates,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup\n  });\n\n  // 2. Apply the \"hydrateRows\" pipe-processing.\n  const groupingParamsWithHydrateRows = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIds: unProcessedDataRowIds,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup\n  });\n\n  // 3. Reset the cache updates\n  apiRef.current.caches.rows.updates = {\n    type: 'partial',\n    actions: {\n      insert: [],\n      modify: [],\n      remove: []\n    },\n    idToActionLookup: {}\n  };\n  return _extends({}, groupingParamsWithHydrateRows, {\n    totalRowCount: Math.max(rowCountProp, groupingParamsWithHydrateRows.dataRowIds.length),\n    totalTopLevelRowCount: getTopLevelRowCount({\n      tree: groupingParamsWithHydrateRows.tree,\n      rowCountProp\n    }),\n    groupingName,\n    loading: loadingProp\n  });\n};\nexport const isAutoGeneratedRow = rowNode => rowNode.type === 'skeletonRow' || rowNode.type === 'footer' || rowNode.type === 'group' && rowNode.isAutoGenerated || rowNode.type === 'pinnedRow' && rowNode.isAutoGenerated;\nexport const getTreeNodeDescendants = (tree, parentId, skipAutoGeneratedRows) => {\n  const node = tree[parentId];\n  if (node.type !== 'group') {\n    return [];\n  }\n  const validDescendants = [];\n  for (let i = 0; i < node.children.length; i += 1) {\n    const child = node.children[i];\n    if (!skipAutoGeneratedRows || !isAutoGeneratedRow(tree[child])) {\n      validDescendants.push(child);\n    }\n    const childDescendants = getTreeNodeDescendants(tree, child, skipAutoGeneratedRows);\n    for (let j = 0; j < childDescendants.length; j += 1) {\n      validDescendants.push(childDescendants[j]);\n    }\n  }\n  if (!skipAutoGeneratedRows && node.footerId != null) {\n    validDescendants.push(node.footerId);\n  }\n  return validDescendants;\n};\nexport const updateCacheWithNewRows = ({\n  previousCache,\n  getRowId,\n  updates\n}) => {\n  var _previousCache$update, _previousCache$update2, _previousCache$update3;\n  if (previousCache.updates.type === 'full') {\n    throw new Error('MUI: Unable to prepare a partial update if a full update is not applied yet');\n  }\n\n  // Remove duplicate updates.\n  // A server can batch updates, and send several updates for the same row in one fn call.\n  const uniqueUpdates = new Map();\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    if (uniqueUpdates.has(id)) {\n      uniqueUpdates.set(id, _extends({}, uniqueUpdates.get(id), update));\n    } else {\n      uniqueUpdates.set(id, update);\n    }\n  });\n  const partialUpdates = {\n    type: 'partial',\n    actions: {\n      insert: [...((_previousCache$update = previousCache.updates.actions.insert) != null ? _previousCache$update : [])],\n      modify: [...((_previousCache$update2 = previousCache.updates.actions.modify) != null ? _previousCache$update2 : [])],\n      remove: [...((_previousCache$update3 = previousCache.updates.actions.remove) != null ? _previousCache$update3 : [])]\n    },\n    idToActionLookup: _extends({}, previousCache.updates.idToActionLookup)\n  };\n  const dataRowIdToModelLookup = _extends({}, previousCache.dataRowIdToModelLookup);\n  const dataRowIdToIdLookup = _extends({}, previousCache.dataRowIdToIdLookup);\n  const alreadyAppliedActionsToRemove = {\n    insert: {},\n    modify: {},\n    remove: {}\n  };\n\n  // Depending on the action already applied to the data row,\n  // We might want drop the already-applied-update.\n  // For instance:\n  // - if you delete then insert, then you don't want to apply the deletion in the tree.\n  // - if you insert, then modify, then you just want to apply the insertion in the tree.\n  uniqueUpdates.forEach((partialRow, id) => {\n    const actionAlreadyAppliedToRow = partialUpdates.idToActionLookup[id];\n\n    // Action === \"delete\"\n    // eslint-disable-next-line no-underscore-dangle\n    if (partialRow._action === 'delete') {\n      // If the data row has been removed since the last state update,\n      // Then do nothing.\n      if (actionAlreadyAppliedToRow === 'remove' || !dataRowIdToModelLookup[id]) {\n        return;\n      }\n\n      // If the data row has been inserted / modified since the last state update,\n      // Then drop this \"insert\" / \"modify\" update.\n      if (actionAlreadyAppliedToRow != null) {\n        alreadyAppliedActionsToRemove[actionAlreadyAppliedToRow][id] = true;\n      }\n\n      // Remove the data row from the lookups and add it to the \"delete\" update.\n      partialUpdates.actions.remove.push(id);\n      delete dataRowIdToModelLookup[id];\n      delete dataRowIdToIdLookup[id];\n      return;\n    }\n    const oldRow = dataRowIdToModelLookup[id];\n\n    // Action === \"modify\"\n    if (oldRow) {\n      // If the data row has been removed since the last state update,\n      // Then drop this \"remove\" update and add it to the \"modify\" update instead.\n      if (actionAlreadyAppliedToRow === 'remove') {\n        alreadyAppliedActionsToRemove.remove[id] = true;\n        partialUpdates.actions.modify.push(id);\n      }\n      // If the date has not been inserted / modified since the last state update,\n      // Then add it to the \"modify\" update (if it has been inserted it should just remain \"inserted\").\n      else if (actionAlreadyAppliedToRow == null) {\n        partialUpdates.actions.modify.push(id);\n      }\n\n      // Update the data row lookups.\n      dataRowIdToModelLookup[id] = _extends({}, oldRow, partialRow);\n      return;\n    }\n\n    // Action === \"insert\"\n    // If the data row has been removed since the last state update,\n    // Then drop the \"remove\" update and add it to the \"insert\" update instead.\n    if (actionAlreadyAppliedToRow === 'remove') {\n      alreadyAppliedActionsToRemove.remove[id] = true;\n      partialUpdates.actions.insert.push(id);\n    }\n    // If the data row has not been inserted since the last state update,\n    // Then add it to the \"insert\" update.\n    // `actionAlreadyAppliedToRow` can't be equal to \"modify\", otherwise we would have an `oldRow` above.\n    else if (actionAlreadyAppliedToRow == null) {\n      partialUpdates.actions.insert.push(id);\n    }\n\n    // Update the data row lookups.\n    dataRowIdToModelLookup[id] = partialRow;\n    dataRowIdToIdLookup[id] = id;\n  });\n  const actionTypeWithActionsToRemove = Object.keys(alreadyAppliedActionsToRemove);\n  for (let i = 0; i < actionTypeWithActionsToRemove.length; i += 1) {\n    const actionType = actionTypeWithActionsToRemove[i];\n    const idsToRemove = alreadyAppliedActionsToRemove[actionType];\n    if (Object.keys(idsToRemove).length > 0) {\n      partialUpdates.actions[actionType] = partialUpdates.actions[actionType].filter(id => !idsToRemove[id]);\n    }\n  }\n  return {\n    dataRowIdToModelLookup,\n    dataRowIdToIdLookup,\n    updates: partialUpdates,\n    rowsBeforePartialUpdates: previousCache.rowsBeforePartialUpdates,\n    loadingPropBeforePartialUpdates: previousCache.loadingPropBeforePartialUpdates,\n    rowCountPropBeforePartialUpdates: previousCache.rowCountPropBeforePartialUpdates\n  };\n};\nexport function calculatePinnedRowsHeight(apiRef) {\n  var _pinnedRows$top, _pinnedRows$bottom;\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsHeight = (pinnedRows == null || (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0)) || 0;\n  const bottomPinnedRowsHeight = (pinnedRows == null || (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0)) || 0;\n  return {\n    top: topPinnedRowsHeight,\n    bottom: bottomPinnedRowsHeight\n  };\n}\nexport function getMinimalContentHeight(apiRef, rowHeight) {\n  const densityFactor = gridDensityFactorSelector(apiRef);\n  return `var(--DataGrid-overlayHeight, ${2 * Math.floor(rowHeight * densityFactor)}px)`;\n}","import * as React from 'react';\nimport { getGridCellElement, getGridColumnHeaderElement, getGridRowElement } from '../../../utils/domUtils';\nimport { GRID_ID_AUTOGENERATED } from './gridRowsUtils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nexport class MissingRowIdError extends Error {}\n\n/**\n * @requires useGridColumns (method)\n * @requires useGridRows (method)\n * @requires useGridFocus (state)\n * @requires useGridEditing (method)\n * TODO: Impossible priority - useGridEditing also needs to be after useGridParamsApi\n * TODO: Impossible priority - useGridFocus also needs to be after useGridParamsApi\n */\nexport function useGridParamsApi(apiRef, props) {\n  const {\n    getRowId\n  } = props;\n  const getColumnHeaderParams = React.useCallback(field => ({\n    field,\n    colDef: apiRef.current.getColumn(field)\n  }), [apiRef]);\n  const getRowParams = React.useCallback(id => {\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const params = {\n      id,\n      columns: apiRef.current.getAllColumns(),\n      row\n    };\n    return params;\n  }, [apiRef]);\n  const getBaseCellParams = React.useCallback((id, field) => {\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n    if (!row || !rowNode) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      value: row[field],\n      colDef: apiRef.current.getColumn(field),\n      cellMode: apiRef.current.getCellMode(id, field),\n      api: apiRef.current,\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1\n    };\n    return params;\n  }, [apiRef]);\n  const getCellParams = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const value = apiRef.current.getCellValue(id, field);\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n    if (!row || !rowNode) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      colDef,\n      cellMode: apiRef.current.getCellMode(id, field),\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1,\n      value,\n      formattedValue: value,\n      isEditable: false\n    };\n    if (colDef && colDef.valueFormatter) {\n      params.formattedValue = colDef.valueFormatter({\n        id,\n        field: params.field,\n        value: params.value,\n        api: apiRef.current\n      });\n    }\n    params.isEditable = colDef && apiRef.current.isCellEditable(params);\n    return params;\n  }, [apiRef]);\n  const getCellValue = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    if (!colDef || !colDef.valueGetter) {\n      const rowModel = apiRef.current.getRow(id);\n      if (!rowModel) {\n        throw new MissingRowIdError(`No row with id #${id} found`);\n      }\n      return rowModel[field];\n    }\n    return colDef.valueGetter(getBaseCellParams(id, field));\n  }, [apiRef, getBaseCellParams]);\n  const getRowValue = React.useCallback((row, colDef) => {\n    var _getRowId;\n    const id = GRID_ID_AUTOGENERATED in row ? row[GRID_ID_AUTOGENERATED] : (_getRowId = getRowId == null ? void 0 : getRowId(row)) != null ? _getRowId : row.id;\n    const field = colDef.field;\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    return colDef.valueGetter(getBaseCellParams(id, field));\n  }, [getBaseCellParams, getRowId]);\n  const getRowFormattedValue = React.useCallback((row, colDef) => {\n    var _ref;\n    const value = getRowValue(row, colDef);\n    if (!colDef || !colDef.valueFormatter) {\n      return value;\n    }\n    const id = (_ref = getRowId ? getRowId(row) : row.id) != null ? _ref : row[GRID_ID_AUTOGENERATED];\n    const field = colDef.field;\n    return colDef.valueFormatter({\n      id,\n      field,\n      value,\n      api: apiRef.current\n    });\n  }, [apiRef, getRowId, getRowValue]);\n  const getColumnHeaderElement = React.useCallback(field => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridColumnHeaderElement(apiRef.current.rootElementRef.current, field);\n  }, [apiRef]);\n  const getRowElement = React.useCallback(id => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridRowElement(apiRef.current.rootElementRef.current, id);\n  }, [apiRef]);\n  const getCellElement = React.useCallback((id, field) => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridCellElement(apiRef.current.rootElementRef.current, {\n      id,\n      field\n    });\n  }, [apiRef]);\n  const paramsApi = {\n    getCellValue,\n    getCellParams,\n    getCellElement,\n    getRowValue,\n    getRowFormattedValue,\n    getRowParams,\n    getRowElement,\n    getColumnHeaderParams,\n    getColumnHeaderElement\n  };\n  useGridApiMethod(apiRef, paramsApi, 'public');\n}","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\n\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nconst gridSortingStateSelector = state => state.sorting;\n\n/**\n * Get the id of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowIdsSelector = createSelector(gridSortingStateSelector, sortingState => sortingState.sortedRows);\n\n/**\n * Get the id and the model of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowEntriesSelector = createSelectorMemoized(gridSortedRowIdsSelector, gridRowsLookupSelector,\n// TODO rows v6: Is this the best approach ?\n(sortedIds, idRowsLookup) => sortedIds.map(id => {\n  var _idRowsLookup$id;\n  return {\n    id,\n    model: (_idRowsLookup$id = idRowsLookup[id]) != null ? _idRowsLookup$id : {}\n  };\n}));\n\n/**\n * Get the current sorting model.\n * @category Sorting\n */\nexport const gridSortModelSelector = createSelector(gridSortingStateSelector, sorting => sorting.sortModel);\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortColumnLookupSelector = createSelectorMemoized(gridSortModelSelector, sortModel => {\n  const result = sortModel.reduce((res, sortItem, index) => {\n    res[sortItem.field] = {\n      sortDirection: sortItem.sort,\n      sortIndex: sortModel.length > 1 ? index + 1 : undefined\n    };\n    return res;\n  }, {});\n  return result;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { buildWarning } from '../../../utils/warning';\nconst sortModelDisableMultiColumnsSortingWarning = buildWarning(['MUI: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nexport const sanitizeSortModel = (model, disableMultipleColumnsSorting) => {\n  if (disableMultipleColumnsSorting && model.length > 1) {\n    sortModelDisableMultiColumnsSortingWarning();\n    return [model[0]];\n  }\n  return model;\n};\nexport const mergeStateWithSortModel = (sortModel, disableMultipleColumnsSorting) => state => _extends({}, state, {\n  sorting: _extends({}, state.sorting, {\n    sortModel: sanitizeSortModel(sortModel, disableMultipleColumnsSorting)\n  })\n});\nconst isDesc = direction => direction === 'desc';\n\n/**\n * Transform an item of the sorting model into a method comparing two rows.\n * @param {GridSortItem} sortItem The sort item we want to apply.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridParsedSortItem | null} The parsed sort item. Returns `null` is the sort item is not valid.\n */\nconst parseSortItem = (sortItem, apiRef) => {\n  const column = apiRef.current.getColumn(sortItem.field);\n  if (!column) {\n    return null;\n  }\n  const comparator = isDesc(sortItem.sort) ? (...args) => -1 * column.sortComparator(...args) : column.sortComparator;\n  const getSortCellParams = id => ({\n    id,\n    field: column.field,\n    rowNode: apiRef.current.getRowNode(id),\n    value: apiRef.current.getCellValue(id, column.field),\n    api: apiRef.current\n  });\n  return {\n    getSortCellParams,\n    comparator\n  };\n};\n/**\n * Compare two rows according to a list of valid sort items.\n * The `row1Params` and `row2Params` must have the same length as `parsedSortItems`,\n * and each of their index must contain the `GridSortCellParams` of the sort item with the same index.\n * @param {GridParsedSortItem[]} parsedSortItems All the sort items with which we want to compare the rows.\n * @param {GridRowAggregatedSortingParams} row1 The node and params of the 1st row for each sort item.\n * @param {GridRowAggregatedSortingParams} row2 The node and params of the 2nd row for each sort item.\n */\nconst compareRows = (parsedSortItems, row1, row2) => {\n  return parsedSortItems.reduce((res, item, index) => {\n    if (res !== 0) {\n      // return the results of the first comparator which distinguish the two rows\n      return res;\n    }\n    const sortCellParams1 = row1.params[index];\n    const sortCellParams2 = row2.params[index];\n    res = item.comparator(sortCellParams1.value, sortCellParams2.value, sortCellParams1, sortCellParams2);\n    return res;\n  }, 0);\n};\n\n/**\n * Generates a method to easily sort a list of rows according to the current sort model.\n * @param {GridSortModel} sortModel The model with which we want to sort the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridSortingModelApplier | null} A method that generates a list of sorted row ids from a list of rows according to the current sort model. If `null`, we consider that the rows should remain in the order there were provided.\n */\nexport const buildAggregatedSortingApplier = (sortModel, apiRef) => {\n  const comparatorList = sortModel.map(item => parseSortItem(item, apiRef)).filter(comparator => !!comparator);\n  if (comparatorList.length === 0) {\n    return null;\n  }\n  return rowList => rowList.map(node => ({\n    node,\n    params: comparatorList.map(el => el.getSortCellParams(node.id))\n  })).sort((a, b) => compareRows(comparatorList, a, b)).map(row => row.node.id);\n};\nexport const getNextGridSortDirection = (sortingOrder, current) => {\n  const currentIdx = sortingOrder.indexOf(current);\n  if (!current || currentIdx === -1 || currentIdx + 1 === sortingOrder.length) {\n    return sortingOrder[0];\n  }\n  return sortingOrder[currentIdx + 1];\n};\nconst gridNillComparator = (v1, v2) => {\n  if (v1 == null && v2 != null) {\n    return -1;\n  }\n  if (v2 == null && v1 != null) {\n    return 1;\n  }\n  if (v1 == null && v2 == null) {\n    return 0;\n  }\n  return null;\n};\nconst collator = new Intl.Collator();\nexport const gridStringOrNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (typeof value1 === 'string') {\n    return collator.compare(value1.toString(), value2.toString());\n  }\n  return value1 - value2;\n};\nexport const gridNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  return Number(value1) - Number(value2);\n};\nexport const gridDateComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (value1 > value2) {\n    return 1;\n  }\n  if (value1 < value2) {\n    return -1;\n  }\n  return 0;\n};","import { createSelector } from '../../../utils/createSelector';\n/**\n * Get the columns state\n * @category Virtualization\n */\nexport const gridVirtualizationSelector = state => state.virtualization;\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabled);\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationColumnEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForColumns);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"style\"],\n  _excluded2 = [\"style\"];\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useTheme } from '@mui/material/styles';\nimport { defaultMemoize } from 'reselect';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridVisibleColumnDefinitionsSelector, gridColumnsTotalWidthSelector, gridColumnPositionsSelector } from '../columns/gridColumnsSelector';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { clamp } from '../../../utils/utils';\nimport { selectedIdsLookupSelector } from '../rowSelection/gridRowSelectionSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getFirstNonSpannedColumnToRender } from '../columns/gridColumnsUtils';\nimport { getMinimalContentHeight } from '../rows/gridRowsUtils';\nimport { gridVirtualizationEnabledSelector, gridVirtualizationColumnEnabledSelector } from './gridVirtualizationSelectors';\n\n// Uses binary search to avoid looping through all possible positions\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function binarySearch(offset, positions, sliceStart = 0, sliceEnd = positions.length) {\n  if (positions.length <= 0) {\n    return -1;\n  }\n  if (sliceStart >= sliceEnd) {\n    return sliceStart;\n  }\n  const pivot = sliceStart + Math.floor((sliceEnd - sliceStart) / 2);\n  const itemOffset = positions[pivot];\n  return offset <= itemOffset ? binarySearch(offset, positions, sliceStart, pivot) : binarySearch(offset, positions, pivot + 1, sliceEnd);\n}\nfunction exponentialSearch(offset, positions, index) {\n  let interval = 1;\n  while (index < positions.length && Math.abs(positions[index]) < offset) {\n    index += interval;\n    interval *= 2;\n  }\n  return binarySearch(offset, positions, Math.floor(index / 2), Math.min(index, positions.length));\n}\nexport const getRenderableIndexes = ({\n  firstIndex,\n  lastIndex,\n  buffer,\n  minFirstIndex,\n  maxLastIndex\n}) => {\n  return [clamp(firstIndex - buffer, minFirstIndex, maxLastIndex), clamp(lastIndex + buffer, minFirstIndex, maxLastIndex)];\n};\nexport const areRenderContextsEqual = (context1, context2) => {\n  if (context1 === context2) {\n    return true;\n  }\n  return context1.firstRowIndex === context2.firstRowIndex && context1.lastRowIndex === context2.lastRowIndex && context1.firstColumnIndex === context2.firstColumnIndex && context1.lastColumnIndex === context2.lastColumnIndex;\n};\n// The `maxSize` is 3 so that reselect caches the `renderedColumns` values for the pinned left,\n// unpinned, and pinned right sections.\nconst MEMOIZE_OPTIONS = {\n  maxSize: 3\n};\nexport const useGridVirtualScroller = props => {\n  var _currentPage$range3, _currentPage$range4;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const enabled = useGridSelector(apiRef, gridVirtualizationEnabledSelector);\n  const enabledForColumns = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector);\n  const {\n    ref,\n    onRenderZonePositioning,\n    renderZoneMinColumnIndex = 0,\n    renderZoneMaxColumnIndex = visibleColumns.length,\n    getRowProps\n  } = props;\n  const theme = useTheme();\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const cellFocus = useGridSelector(apiRef, gridFocusCellSelector);\n  const cellTabIndex = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const selectedRowsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const renderZoneRef = React.useRef(null);\n  const rootRef = React.useRef(null);\n  const handleRef = useForkRef(ref, rootRef);\n  const [renderContext, setRenderContextState] = React.useState(null);\n  const prevRenderContext = React.useRef(renderContext);\n  const scrollPosition = React.useRef({\n    top: 0,\n    left: 0\n  });\n  const [containerDimensions, setContainerDimensions] = React.useState({\n    width: null,\n    height: null\n  });\n  const prevTotalWidth = React.useRef(columnsTotalWidth);\n  // Each visible row (not to be confused with a filter result) is composed of a central row element\n  // and up to two additional row elements for pinned columns (left and right).\n  // When hovering any of these elements, the :hover styles are applied only to the row element that\n  // was actually hovered, not its additional siblings. To make it look like a contiguous row,\n  // we add/remove the .Mui-hovered class to all of the row elements inside one visible row.\n  const [hoveredRowId, setHoveredRowId] = React.useState(null);\n  const rowStyleCache = React.useRef(Object.create(null));\n  const prevGetRowProps = React.useRef();\n  const prevRootRowStyle = React.useRef();\n  const getRenderedColumnsRef = React.useRef(defaultMemoize((columns, firstColumnToRender, lastColumnToRender, minFirstColumn, maxLastColumn, indexOfColumnWithFocusedCell) => {\n    // If the selected column is not within the current range of columns being displayed,\n    // we need to render it at either the left or right of the columns,\n    // depending on whether it is above or below the range.\n    let focusedCellColumnIndexNotInRange;\n    const renderedColumns = columns.slice(firstColumnToRender, lastColumnToRender);\n    if (indexOfColumnWithFocusedCell > -1) {\n      // check if it is not on the left pinned column.\n      if (firstColumnToRender > indexOfColumnWithFocusedCell && indexOfColumnWithFocusedCell >= minFirstColumn) {\n        focusedCellColumnIndexNotInRange = indexOfColumnWithFocusedCell;\n      }\n      // check if it is not on the right pinned column.\n      else if (lastColumnToRender < indexOfColumnWithFocusedCell && indexOfColumnWithFocusedCell < maxLastColumn) {\n        focusedCellColumnIndexNotInRange = indexOfColumnWithFocusedCell;\n      }\n    }\n    return {\n      focusedCellColumnIndexNotInRange,\n      renderedColumns\n    };\n  }, MEMOIZE_OPTIONS));\n  const indexOfColumnWithFocusedCell = React.useMemo(() => {\n    if (cellFocus !== null) {\n      return visibleColumns.findIndex(column => column.field === cellFocus.field);\n    }\n    return -1;\n  }, [cellFocus, visibleColumns]);\n  const getNearestIndexToRender = React.useCallback(offset => {\n    var _currentPage$range, _currentPage$range2;\n    const lastMeasuredIndexRelativeToAllRows = apiRef.current.getLastMeasuredRowIndex();\n    let allRowsMeasured = lastMeasuredIndexRelativeToAllRows === Infinity;\n    if ((_currentPage$range = currentPage.range) != null && _currentPage$range.lastRowIndex && !allRowsMeasured) {\n      // Check if all rows in this page are already measured\n      allRowsMeasured = lastMeasuredIndexRelativeToAllRows >= currentPage.range.lastRowIndex;\n    }\n    const lastMeasuredIndexRelativeToCurrentPage = clamp(lastMeasuredIndexRelativeToAllRows - (((_currentPage$range2 = currentPage.range) == null ? void 0 : _currentPage$range2.firstRowIndex) || 0), 0, rowsMeta.positions.length);\n    if (allRowsMeasured || rowsMeta.positions[lastMeasuredIndexRelativeToCurrentPage] >= offset) {\n      // If all rows were measured (when no row has \"auto\" as height) or all rows before the offset\n      // were measured, then use a binary search because it's faster.\n      return binarySearch(offset, rowsMeta.positions);\n    }\n\n    // Otherwise, use an exponential search.\n    // If rows have \"auto\" as height, their positions will be based on estimated heights.\n    // In this case, we can skip several steps until we find a position higher than the offset.\n    // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n    return exponentialSearch(offset, rowsMeta.positions, lastMeasuredIndexRelativeToCurrentPage);\n  }, [apiRef, (_currentPage$range3 = currentPage.range) == null ? void 0 : _currentPage$range3.firstRowIndex, (_currentPage$range4 = currentPage.range) == null ? void 0 : _currentPage$range4.lastRowIndex, rowsMeta.positions]);\n  const computeRenderContext = React.useCallback(() => {\n    if (!enabled) {\n      return {\n        firstRowIndex: 0,\n        lastRowIndex: currentPage.rows.length,\n        firstColumnIndex: 0,\n        lastColumnIndex: visibleColumns.length\n      };\n    }\n    const {\n      top,\n      left\n    } = scrollPosition.current;\n\n    // Clamp the value because the search may return an index out of bounds.\n    // In the last index, this is not needed because Array.slice doesn't include it.\n    const firstRowIndex = Math.min(getNearestIndexToRender(top), rowsMeta.positions.length - 1);\n    const lastRowIndex = rootProps.autoHeight ? firstRowIndex + currentPage.rows.length : getNearestIndexToRender(top + containerDimensions.height);\n    let firstColumnIndex = 0;\n    let lastColumnIndex = columnPositions.length;\n    if (enabledForColumns) {\n      let hasRowWithAutoHeight = false;\n      const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n        firstIndex: firstRowIndex,\n        lastIndex: lastRowIndex,\n        minFirstIndex: 0,\n        maxLastIndex: currentPage.rows.length,\n        buffer: rootProps.rowBuffer\n      });\n      for (let i = firstRowToRender; i < lastRowToRender && !hasRowWithAutoHeight; i += 1) {\n        const row = currentPage.rows[i];\n        hasRowWithAutoHeight = apiRef.current.rowHasAutoHeight(row.id);\n      }\n      if (!hasRowWithAutoHeight) {\n        firstColumnIndex = binarySearch(Math.abs(left), columnPositions);\n        lastColumnIndex = binarySearch(Math.abs(left) + containerDimensions.width, columnPositions);\n      }\n    }\n    return {\n      firstRowIndex,\n      lastRowIndex,\n      firstColumnIndex,\n      lastColumnIndex\n    };\n  }, [enabled, enabledForColumns, getNearestIndexToRender, rowsMeta.positions.length, rootProps.autoHeight, rootProps.rowBuffer, currentPage.rows, columnPositions, visibleColumns.length, apiRef, containerDimensions]);\n  useEnhancedEffect(() => {\n    if (enabled) {\n      // TODO a scroll reset should not be necessary\n      rootRef.current.scrollLeft = 0;\n      rootRef.current.scrollTop = 0;\n    } else {\n      renderZoneRef.current.style.transform = `translate3d(0px, 0px, 0px)`;\n    }\n  }, [enabled]);\n  useEnhancedEffect(() => {\n    setContainerDimensions({\n      width: rootRef.current.clientWidth,\n      height: rootRef.current.clientHeight\n    });\n  }, [rowsMeta.currentPageTotalHeight]);\n  const handleResize = React.useCallback(() => {\n    if (rootRef.current) {\n      setContainerDimensions({\n        width: rootRef.current.clientWidth,\n        height: rootRef.current.clientHeight\n      });\n    }\n  }, []);\n  useGridApiEventHandler(apiRef, 'debouncedResize', handleResize);\n  const updateRenderZonePosition = React.useCallback(nextRenderContext => {\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const [initialFirstColumnToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstColumnIndex,\n      lastIndex: nextRenderContext.lastColumnIndex,\n      minFirstIndex: renderZoneMinColumnIndex,\n      maxLastIndex: renderZoneMaxColumnIndex,\n      buffer: rootProps.columnBuffer\n    });\n    const firstColumnToRender = getFirstNonSpannedColumnToRender({\n      firstColumnToRender: initialFirstColumnToRender,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const direction = theme.direction === 'ltr' ? 1 : -1;\n    const top = gridRowsMetaSelector(apiRef.current.state).positions[firstRowToRender];\n    const left = direction * gridColumnPositionsSelector(apiRef)[firstColumnToRender]; // Call directly the selector because it might be outdated when this method is called\n    renderZoneRef.current.style.transform = `translate3d(${left}px, ${top}px, 0px)`;\n    if (typeof onRenderZonePositioning === 'function') {\n      onRenderZonePositioning({\n        top,\n        left\n      });\n    }\n  }, [apiRef, currentPage.rows, onRenderZonePositioning, renderZoneMinColumnIndex, renderZoneMaxColumnIndex, rootProps.columnBuffer, rootProps.rowBuffer, theme.direction]);\n  const getRenderContext = React.useCallback(() => prevRenderContext.current, []);\n  const setRenderContext = React.useCallback(nextRenderContext => {\n    if (prevRenderContext.current && areRenderContextsEqual(nextRenderContext, prevRenderContext.current)) {\n      updateRenderZonePosition(nextRenderContext);\n      return;\n    }\n    setRenderContextState(nextRenderContext);\n    updateRenderZonePosition(nextRenderContext);\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    apiRef.current.publishEvent('renderedRowsIntervalChange', {\n      firstRowToRender,\n      lastRowToRender\n    });\n    prevRenderContext.current = nextRenderContext;\n  }, [apiRef, setRenderContextState, prevRenderContext, currentPage.rows.length, rootProps.rowBuffer, updateRenderZonePosition]);\n  useEnhancedEffect(() => {\n    if (containerDimensions.width == null) {\n      return;\n    }\n    const initialRenderContext = computeRenderContext();\n    setRenderContext(initialRenderContext);\n    const {\n      top,\n      left\n    } = scrollPosition.current;\n    const params = {\n      top,\n      left,\n      renderContext: initialRenderContext\n    };\n    apiRef.current.publishEvent('scrollPositionChange', params);\n  }, [apiRef, computeRenderContext, containerDimensions.width, setRenderContext]);\n  const handleScroll = useEventCallback(event => {\n    const {\n      scrollTop,\n      scrollLeft\n    } = event.currentTarget;\n    scrollPosition.current.top = scrollTop;\n    scrollPosition.current.left = scrollLeft;\n\n    // On iOS and macOS, negative offsets are possible when swiping past the start\n    if (!prevRenderContext.current || scrollTop < 0) {\n      return;\n    }\n    if (theme.direction === 'ltr') {\n      if (scrollLeft < 0) {\n        return;\n      }\n    }\n    if (theme.direction === 'rtl') {\n      if (scrollLeft > 0) {\n        return;\n      }\n    }\n\n    // When virtualization is disabled, the context never changes during scroll\n    const nextRenderContext = enabled ? computeRenderContext() : prevRenderContext.current;\n    const topRowsScrolledSincePreviousRender = Math.abs(nextRenderContext.firstRowIndex - prevRenderContext.current.firstRowIndex);\n    const bottomRowsScrolledSincePreviousRender = Math.abs(nextRenderContext.lastRowIndex - prevRenderContext.current.lastRowIndex);\n    const topColumnsScrolledSincePreviousRender = Math.abs(nextRenderContext.firstColumnIndex - prevRenderContext.current.firstColumnIndex);\n    const bottomColumnsScrolledSincePreviousRender = Math.abs(nextRenderContext.lastColumnIndex - prevRenderContext.current.lastColumnIndex);\n    const shouldSetState = topRowsScrolledSincePreviousRender >= rootProps.rowThreshold || bottomRowsScrolledSincePreviousRender >= rootProps.rowThreshold || topColumnsScrolledSincePreviousRender >= rootProps.columnThreshold || bottomColumnsScrolledSincePreviousRender >= rootProps.columnThreshold || prevTotalWidth.current !== columnsTotalWidth;\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollTop,\n      left: scrollLeft,\n      renderContext: shouldSetState ? nextRenderContext : prevRenderContext.current\n    }, event);\n    if (shouldSetState) {\n      // Prevents batching render context changes\n      ReactDOM.flushSync(() => {\n        setRenderContext(nextRenderContext);\n      });\n      prevTotalWidth.current = columnsTotalWidth;\n    }\n  });\n  const handleWheel = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerWheel', {}, event);\n  });\n  const handleTouchMove = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerTouchMove', {}, event);\n  });\n  const indexOfRowWithFocusedCell = React.useMemo(() => {\n    if (cellFocus !== null) {\n      return currentPage.rows.findIndex(row => row.id === cellFocus.id);\n    }\n    return -1;\n  }, [cellFocus, currentPage.rows]);\n  useGridApiEventHandler(apiRef, 'rowMouseOver', (params, event) => {\n    var _params$id;\n    if (event.currentTarget.contains(event.relatedTarget)) {\n      return;\n    }\n    setHoveredRowId((_params$id = params.id) != null ? _params$id : null);\n  });\n  useGridApiEventHandler(apiRef, 'rowMouseOut', (params, event) => {\n    if (event.currentTarget.contains(event.relatedTarget)) {\n      return;\n    }\n    setHoveredRowId(null);\n  });\n  const getRows = (params = {\n    renderContext\n  }) => {\n    var _rootProps$slotProps;\n    const {\n      onRowRender,\n      renderContext: nextRenderContext,\n      minFirstColumn = renderZoneMinColumnIndex,\n      maxLastColumn = renderZoneMaxColumnIndex,\n      availableSpace = containerDimensions.width,\n      rowIndexOffset = 0,\n      position = 'center'\n    } = params;\n    if (!nextRenderContext || availableSpace == null) {\n      return null;\n    }\n    const rowBuffer = enabled ? rootProps.rowBuffer : 0;\n    const columnBuffer = enabled ? rootProps.columnBuffer : 0;\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rowBuffer\n    });\n    const renderedRows = [];\n    if (params.rows) {\n      params.rows.forEach(row => {\n        renderedRows.push(row);\n        apiRef.current.calculateColSpan({\n          rowId: row.id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n      });\n    } else {\n      if (!currentPage.range) {\n        return null;\n      }\n      for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n        const row = currentPage.rows[i];\n        renderedRows.push(row);\n        apiRef.current.calculateColSpan({\n          rowId: row.id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n      }\n    }\n    // If the selected row is not within the current range of rows being displayed,\n    // we need to render it at either the top or bottom of the rows,\n    // depending on whether it is above or below the range.\n\n    let isRowWithFocusedCellNotInRange = false;\n    if (indexOfRowWithFocusedCell > -1) {\n      const rowWithFocusedCell = currentPage.rows[indexOfRowWithFocusedCell];\n      if (firstRowToRender > indexOfRowWithFocusedCell || lastRowToRender < indexOfRowWithFocusedCell) {\n        isRowWithFocusedCellNotInRange = true;\n        if (indexOfRowWithFocusedCell > firstRowToRender) {\n          renderedRows.push(rowWithFocusedCell);\n        } else {\n          renderedRows.unshift(rowWithFocusedCell);\n        }\n        apiRef.current.calculateColSpan({\n          rowId: rowWithFocusedCell.id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n      }\n    }\n    const [initialFirstColumnToRender, lastColumnToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstColumnIndex,\n      lastIndex: nextRenderContext.lastColumnIndex,\n      minFirstIndex: minFirstColumn,\n      maxLastIndex: maxLastColumn,\n      buffer: columnBuffer\n    });\n    const firstColumnToRender = getFirstNonSpannedColumnToRender({\n      firstColumnToRender: initialFirstColumnToRender,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    let isColumnWihFocusedCellNotInRange = false;\n    if (firstColumnToRender > indexOfColumnWithFocusedCell || lastColumnToRender < indexOfColumnWithFocusedCell) {\n      isColumnWihFocusedCellNotInRange = true;\n    }\n    const {\n      focusedCellColumnIndexNotInRange,\n      renderedColumns\n    } = getRenderedColumnsRef.current(visibleColumns, firstColumnToRender, lastColumnToRender, minFirstColumn, maxLastColumn, isColumnWihFocusedCellNotInRange ? indexOfColumnWithFocusedCell : -1);\n    const _ref = ((_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.row) || {},\n      {\n        style: rootRowStyle\n      } = _ref,\n      rootRowProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n    const invalidatesCachedRowStyle = prevGetRowProps.current !== getRowProps || prevRootRowStyle.current !== rootRowStyle;\n    if (invalidatesCachedRowStyle) {\n      rowStyleCache.current = Object.create(null);\n    }\n    const rows = [];\n    let isRowWithFocusedCellRendered = false;\n    for (let i = 0; i < renderedRows.length; i += 1) {\n      var _currentPage$range5;\n      const {\n        id,\n        model\n      } = renderedRows[i];\n      const isRowNotVisible = isRowWithFocusedCellNotInRange && cellFocus.id === id;\n      const lastVisibleRowIndex = isRowWithFocusedCellNotInRange ? firstRowToRender + i === currentPage.rows.length : firstRowToRender + i === currentPage.rows.length - 1;\n      const baseRowHeight = !apiRef.current.rowHasAutoHeight(id) ? apiRef.current.unstable_getRowHeight(id) : 'auto';\n      let isSelected;\n      if (selectedRowsLookup[id] == null) {\n        isSelected = false;\n      } else {\n        isSelected = apiRef.current.isRowSelectable(id);\n      }\n      if (onRowRender) {\n        onRowRender(id);\n      }\n      const focusedCell = cellFocus !== null && cellFocus.id === id ? cellFocus.field : null;\n      const columnWithFocusedCellNotInRange = focusedCellColumnIndexNotInRange !== undefined && visibleColumns[focusedCellColumnIndexNotInRange];\n      const renderedColumnsWithFocusedCell = columnWithFocusedCellNotInRange && focusedCell ? [columnWithFocusedCellNotInRange, ...renderedColumns] : renderedColumns;\n      let tabbableCell = null;\n      if (cellTabIndex !== null && cellTabIndex.id === id) {\n        const cellParams = apiRef.current.getCellParams(id, cellTabIndex.field);\n        tabbableCell = cellParams.cellMode === 'view' ? cellTabIndex.field : null;\n      }\n      const _ref2 = typeof getRowProps === 'function' && getRowProps(id, model) || {},\n        {\n          style: rowStyle\n        } = _ref2,\n        rowProps = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n      if (!rowStyleCache.current[id]) {\n        const style = _extends({}, rowStyle, rootRowStyle);\n        rowStyleCache.current[id] = style;\n      }\n      let index = rowIndexOffset + ((currentPage == null || (_currentPage$range5 = currentPage.range) == null ? void 0 : _currentPage$range5.firstRowIndex) || 0) + firstRowToRender + i;\n      if (isRowWithFocusedCellNotInRange && (cellFocus == null ? void 0 : cellFocus.id) === id) {\n        index = indexOfRowWithFocusedCell;\n        isRowWithFocusedCellRendered = true;\n      } else if (isRowWithFocusedCellRendered) {\n        index -= 1;\n      }\n      rows.push( /*#__PURE__*/_jsx(rootProps.slots.row, _extends({\n        row: model,\n        rowId: id,\n        focusedCellColumnIndexNotInRange: focusedCellColumnIndexNotInRange,\n        isNotVisible: isRowNotVisible,\n        rowHeight: baseRowHeight,\n        focusedCell: focusedCell,\n        tabbableCell: tabbableCell,\n        renderedColumns: renderedColumnsWithFocusedCell,\n        visibleColumns: visibleColumns,\n        firstColumnToRender: firstColumnToRender,\n        lastColumnToRender: lastColumnToRender,\n        selected: isSelected,\n        index: index,\n        containerWidth: availableSpace,\n        isLastVisible: lastVisibleRowIndex,\n        position: position\n      }, rowProps, rootRowProps, {\n        hovered: hoveredRowId === id,\n        style: rowStyleCache.current[id]\n      }), id));\n    }\n    prevGetRowProps.current = getRowProps;\n    prevRootRowStyle.current = rootRowStyle;\n    return rows;\n  };\n  const needsHorizontalScrollbar = containerDimensions.width && columnsTotalWidth >= containerDimensions.width;\n  const contentSize = React.useMemo(() => {\n    // In cases where the columns exceed the available width,\n    // the horizontal scrollbar should be shown even when there're no rows.\n    // Keeping 1px as minimum height ensures that the scrollbar will visible if necessary.\n    const height = Math.max(rowsMeta.currentPageTotalHeight, 1);\n    let shouldExtendContent = false;\n    if (rootRef != null && rootRef.current && height <= (rootRef == null ? void 0 : rootRef.current.clientHeight)) {\n      shouldExtendContent = true;\n    }\n    const size = {\n      width: needsHorizontalScrollbar ? columnsTotalWidth : 'auto',\n      height,\n      minHeight: shouldExtendContent ? '100%' : 'auto'\n    };\n    if (rootProps.autoHeight && currentPage.rows.length === 0) {\n      size.height = getMinimalContentHeight(apiRef, rootProps.rowHeight); // Give room to show the overlay when there no rows.\n    }\n    return size;\n  }, [apiRef, rootRef, columnsTotalWidth, rowsMeta.currentPageTotalHeight, needsHorizontalScrollbar, rootProps.autoHeight, rootProps.rowHeight, currentPage.rows.length]);\n  React.useEffect(() => {\n    apiRef.current.publishEvent('virtualScrollerContentSizeChange');\n  }, [apiRef, contentSize]);\n  const rootStyle = React.useMemo(() => {\n    const style = {};\n    if (!needsHorizontalScrollbar) {\n      style.overflowX = 'hidden';\n    }\n    if (rootProps.autoHeight) {\n      style.overflowY = 'hidden';\n    }\n    return style;\n  }, [needsHorizontalScrollbar, rootProps.autoHeight]);\n  apiRef.current.register('private', {\n    getRenderContext\n  });\n  return {\n    renderContext,\n    updateRenderZonePosition,\n    getRows,\n    getRootProps: (inputProps = {}) => _extends({\n      ref: handleRef,\n      onScroll: handleScroll,\n      onWheel: handleWheel,\n      onTouchMove: handleTouchMove\n    }, inputProps, {\n      style: inputProps.style ? _extends({}, inputProps.style, rootStyle) : rootStyle,\n      role: 'presentation'\n    }),\n    getContentProps: ({\n      style\n    } = {}) => ({\n      style: style ? _extends({}, style, contentSize) : contentSize,\n      role: 'presentation'\n    }),\n    getRenderZoneProps: () => ({\n      ref: renderZoneRef,\n      role: 'rowgroup'\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport const virtualizationStateInitializer = (state, props) => {\n  const virtualization = {\n    enabled: !props.disableVirtualization,\n    enabledForColumns: true\n  };\n  return _extends({}, state, {\n    virtualization\n  });\n};\nexport function useGridVirtualization(apiRef, props) {\n  /*\n   * API METHODS\n   */\n\n  const setVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled\n      })\n    }));\n  };\n  const setColumnVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabledForColumns: enabled\n      })\n    }));\n  };\n  const api = {\n    unstable_setVirtualization: setVirtualization,\n    unstable_setColumnVirtualization: setColumnVirtualization\n  };\n  useGridApiMethod(apiRef, api, 'public');\n\n  /*\n   * EFFECTS\n   */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(() => {\n    setVirtualization(!props.disableVirtualization);\n  }, [props.disableVirtualization]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","import * as React from 'react';\nexport const useFirstRender = callback => {\n  const isFirstRender = React.useRef(true);\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    callback();\n  }\n};","// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor(timeout = CLEANUP_TIMER_LOOP_MILLIS) {\n    this.timeouts = new Map();\n    this.cleanupTimeout = CLEANUP_TIMER_LOOP_MILLIS;\n    this.cleanupTimeout = timeout;\n  }\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n}","export class FinalizationRegistryBasedCleanupTracking {\n  constructor() {\n    this.registry = new FinalizationRegistry(unsubscribe => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  reset() {}\n}","import * as React from 'react';\nimport { TimerBasedCleanupTracking } from '../../utils/cleanupTracking/TimerBasedCleanupTracking';\nimport { FinalizationRegistryBasedCleanupTracking } from '../../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking';\n/**\n * Signal to the underlying logic what version of the public component API\n * of the data grid is exposed.\n */\nvar GridSignature = /*#__PURE__*/function (GridSignature) {\n  GridSignature[\"DataGrid\"] = \"DataGrid\";\n  GridSignature[\"DataGridPro\"] = \"DataGridPro\";\n  return GridSignature;\n}(GridSignature || {});\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {}\n\n// Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\nexport function createUseGridApiEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useGridApiEventHandler(apiRef, eventName, handler, options) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef();\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event, details) => {\n        if (!event.defaultMuiPrevented) {\n          var _handlerRef$current;\n          (_handlerRef$current = handlerRef.current) == null || _handlerRef$current.call(handlerRef, params, event, details);\n        }\n      };\n      subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact,\n      // The callback below will be called once this reference stops being retained\n      () => {\n        var _subscription$current;\n        (_subscription$current = subscription.current) == null || _subscription$current.call(subscription);\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event, details) => {\n          if (!event.defaultMuiPrevented) {\n            var _handlerRef$current2;\n            (_handlerRef$current2 = handlerRef.current) == null || _handlerRef$current2.call(handlerRef, params, event, details);\n          }\n        };\n        subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      }\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n      return () => {\n        var _subscription$current2;\n        (_subscription$current2 = subscription.current) == null || _subscription$current2.call(subscription);\n        subscription.current = null;\n      };\n    }, [apiRef, eventName, options]);\n  };\n}\nconst registryContainer = {\n  registry: null\n};\n\n// TODO: move to @mui/x-data-grid/internals\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCleanupTracking = () => {\n  var _registryContainer$re;\n  (_registryContainer$re = registryContainer.registry) == null || _registryContainer$re.reset();\n  registryContainer.registry = null;\n};\nexport const useGridApiEventHandler = createUseGridApiEventHandler(registryContainer);\nconst optionsSubscriberOptions = {\n  isFirst: true\n};\nexport function useGridApiOptionHandler(apiRef, eventName, handler) {\n  // Validate that only one per event name?\n  useGridApiEventHandler(apiRef, eventName, handler, optionsSubscriberOptions);\n}\nexport { GridSignature };","import * as React from 'react';\nexport function useGridApiMethod(privateApiRef, apiMethods, visibility) {\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    isFirstRender.current = false;\n    privateApiRef.current.register(visibility, apiMethods);\n  }, [privateApiRef, visibility, apiMethods]);\n  if (isFirstRender.current) {\n    privateApiRef.current.register(visibility, apiMethods);\n  }\n}","import { gridVisibleColumnDefinitionsSelector } from '../features/columns/gridColumnsSelector';\nimport { useGridSelector } from './useGridSelector';\nimport { useGridRootProps } from './useGridRootProps';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../features/columnGrouping/gridColumnGroupsSelector';\nimport { gridPinnedRowsCountSelector, gridRowCountSelector } from '../features/rows/gridRowsSelector';\nimport { useGridPrivateApiContext } from './useGridPrivateApiContext';\nexport const useGridAriaAttributes = () => {\n  var _rootProps$experiment;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  let role = 'grid';\n  if ((_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.ariaV7 && rootProps.treeData) {\n    role = 'treegrid';\n  }\n  return {\n    role,\n    'aria-colcount': visibleColumns.length,\n    'aria-rowcount': headerGroupingMaxDepth + 1 + pinnedRowsCount + totalRowCount,\n    'aria-multiselectable': !rootProps.disableMultipleRowSelection\n  };\n};","import * as React from 'react';\nexport function useGridLogger(privateApiRef, name) {\n  const logger = React.useRef(null);\n  if (logger.current) {\n    return logger.current;\n  }\n  const newLogger = privateApiRef.current.getLogger(name);\n  logger.current = newLogger;\n  return newLogger;\n}","import * as React from 'react';\nimport { isFunction } from '../../utils/utils';\nimport { useGridLogger } from './useGridLogger';\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    let targetElement;\n    if (isFunction(ref)) {\n      targetElement = ref();\n    } else {\n      targetElement = ref && ref.current ? ref.current : null;\n    }\n    if (targetElement && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      const boundElem = targetElement;\n      setAdded(true);\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        boundElem.removeEventListener(eventName, wrapHandler, options);\n      };\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [ref, wrapHandler, eventName, added, logger, options, apiRef]);\n};","import * as React from 'react';\nexport const GridPrivateApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridPrivateApiContext.displayName = 'GridPrivateApiContext';\n}\nexport function useGridPrivateApiContext() {\n  const privateApiRef = React.useContext(GridPrivateApiContext);\n  if (privateApiRef === undefined) {\n    throw new Error(['MUI: Could not find the data grid private context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the data grid.'].join('\\n'));\n  }\n  return privateApiRef;\n}","import * as React from 'react';\nimport { useLazyRef } from './useLazyRef';\nimport { useOnMount } from './useOnMount';\nimport { buildWarning } from '../../utils/warning';\nimport { fastObjectShallowCompare } from '../../utils/fastObjectShallowCompare';\nconst stateNotInitializedWarning = buildWarning(['MUI: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\nfunction applySelector(apiRef, selector) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n  return selector(apiRef.current.state);\n}\nconst defaultCompare = Object.is;\nexport const objectShallowCompare = fastObjectShallowCompare;\nconst createRefs = () => ({\n  state: null,\n  equals: null,\n  selector: null\n});\nexport const useGridSelector = (apiRef, selector, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      stateNotInitializedWarning();\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelector(apiRef, selector));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelector(apiRef, refs.current.selector);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};","import * as React from 'react';\nimport { gridPaginationRowRangeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector } from '../features/pagination/gridPaginationSelector';\nimport { gridExpandedSortedRowEntriesSelector } from '../features/filter/gridFilterSelector';\nexport const getVisibleRows = (apiRef, props) => {\n  let rows;\n  let range;\n  if (props.pagination && props.paginationMode === 'client') {\n    range = gridPaginationRowRangeSelector(apiRef);\n    rows = gridPaginatedVisibleSortedGridRowEntriesSelector(apiRef);\n  } else {\n    rows = gridExpandedSortedRowEntriesSelector(apiRef);\n    if (rows.length === 0) {\n      range = null;\n    } else {\n      range = {\n        firstRowIndex: 0,\n        lastRowIndex: rows.length - 1\n      };\n    }\n  }\n  return {\n    rows,\n    range\n  };\n};\n\n/**\n * Computes the list of rows that are reachable by scroll.\n * Depending on whether pagination is enabled, it will return the rows in the current page.\n * - If the pagination is disabled or in server mode, it equals all the visible rows.\n * - If the row tree has several layers, it contains up to `state.pageSize` top level rows and all their descendants.\n * - If the row tree is flat, it only contains up to `state.pageSize` rows.\n */\nexport const useGridVisibleRows = (apiRef, props) => {\n  const response = getVisibleRows(apiRef, props);\n  return React.useMemo(() => ({\n    rows: response.rows,\n    range: response.range\n  }), [response.rows, response.range]);\n};","import * as React from 'react';\nconst UNINITIALIZED = {};\n\n// See https://github.com/facebook/react/issues/14490 for when to use this.\nexport function useLazyRef(init, initArg) {\n  const ref = React.useRef(UNINITIALIZED);\n  if (ref.current === UNINITIALIZED) {\n    ref.current = init(initArg);\n  }\n  return ref;\n}","import * as React from 'react';\nconst EMPTY = [];\nexport function useOnMount(fn) {\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(fn, EMPTY);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","import { useLazyRef } from './useLazyRef';\nimport { useOnMount } from './useOnMount';\nclass Timeout {\n  constructor() {\n    this.currentId = 0;\n    this.clear = () => {\n      if (this.currentId !== 0) {\n        clearTimeout(this.currentId);\n        this.currentId = 0;\n      }\n    };\n    this.disposeEffect = () => {\n      return this.clear;\n    };\n  }\n  static create() {\n    return new Timeout();\n  }\n  start(delay, fn) {\n    this.clear();\n    this.currentId = setTimeout(fn, delay);\n  }\n}\nexport function useTimeout() {\n  const timeout = useLazyRef(Timeout.create).current;\n  useOnMount(timeout.disposeEffect);\n  return timeout;\n}","import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridArrowUpwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexport const GridArrowDownwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexport const GridKeyboardArrowRight = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexport const GridExpandMoreIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexport const GridFilterListIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\nexport const GridFilterAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexport const GridSearchIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexport const GridMenuIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexport const GridCheckCircleIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexport const GridColumnIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\"\n}), 'ColumnIcon');\nexport const GridSeparatorIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 19V5h2v14z\"\n}), 'Separator');\nexport const GridViewHeadlineIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\"\n}), 'ViewHeadline');\nexport const GridTableRowsIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z\"\n}), 'TableRows');\nexport const GridViewStreamIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 18h17v-6H4v6zM4 5v6h17V5H4z\"\n}), 'ViewStream');\nexport const GridTripleDotsVerticalIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'TripleDotsVertical');\nexport const GridCloseIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexport const GridAddIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexport const GridRemoveIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexport const GridLoadIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Load');\nexport const GridDragIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'Drag');\nexport const GridSaveAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexport const GridCheckIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexport const GridMoreVertIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\nexport const GridVisibilityOffIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexport const GridViewColumnIcon = createSvgIcon( /*#__PURE__*/_jsx(\"g\", {\n  children: /*#__PURE__*/_jsx(\"path\", {\n    d: \"M14.67,5v14H9.33V5H14.67z M15.67,19H21V5h-5.33V19z M8.33,19V5H3v14H8.33z\"\n  })\n}), 'ViewColumn');\nexport const GridClearIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\nexport const GridDeleteIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexport const GridDeleteForeverIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","export function isLeaf(node) {\n  return node.field !== undefined;\n}\n\n/**\n * A function used to process headerClassName params.\n */\n\n/**\n * The union type representing the [[GridColDef]] column header class type.\n */","var GridEditModes = /*#__PURE__*/function (GridEditModes) {\n  GridEditModes[\"Cell\"] = \"cell\";\n  GridEditModes[\"Row\"] = \"row\";\n  return GridEditModes;\n}(GridEditModes || {});\nvar GridCellModes = /*#__PURE__*/function (GridCellModes) {\n  GridCellModes[\"Edit\"] = \"edit\";\n  GridCellModes[\"View\"] = \"view\";\n  return GridCellModes;\n}(GridCellModes || {});\nvar GridRowModes = /*#__PURE__*/function (GridRowModes) {\n  GridRowModes[\"Edit\"] = \"edit\";\n  GridRowModes[\"View\"] = \"view\";\n  return GridRowModes;\n}(GridRowModes || {});\nexport { GridEditModes, GridCellModes, GridRowModes };","/**\n * Filter item definition interface.\n * @demos\n *   - [Custom filter operator](/x/react-data-grid/filtering/customization/#create-a-custom-operator)\n */\nvar GridLogicOperator = /*#__PURE__*/function (GridLogicOperator) {\n  GridLogicOperator[\"And\"] = \"and\";\n  GridLogicOperator[\"Or\"] = \"or\";\n  return GridLogicOperator;\n}(GridLogicOperator || {});\nexport { GridLogicOperator };","/**\n * Params passed to `apiRef.current.setEditCellValue`.\n */\nvar GridCellEditStartReasons = /*#__PURE__*/function (GridCellEditStartReasons) {\n  GridCellEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridCellEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridCellEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  GridCellEditStartReasons[\"pasteKeyDown\"] = \"pasteKeyDown\";\n  return GridCellEditStartReasons;\n}(GridCellEditStartReasons || {});\n/**\n * Params passed to the `cellEditStart` event.\n */\nvar GridCellEditStopReasons = /*#__PURE__*/function (GridCellEditStopReasons) {\n  GridCellEditStopReasons[\"cellFocusOut\"] = \"cellFocusOut\";\n  GridCellEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridCellEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridCellEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridCellEditStopReasons;\n}(GridCellEditStopReasons || {});\n/**\n * Params passed to the `cellEditStop event.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridCellEditStartReasons, GridCellEditStopReasons };","/**\n * Object passed as parameter in the row callbacks.\n * @demos\n *   - [Master detail](/x/react-data-grid/master-detail/)\n */\n/**\n * Object passed as parameter in the row `getRowClassName` callback prop.\n * @demos\n *   - [Styling rows](/x/react-data-grid/style/#styling-rows)\n */\n/**\n * Object passed as parameter in the row `getRowHeight` callback prop.\n */\n/**\n * The getRowHeight return value.\n */\nvar GridRowEditStartReasons = /*#__PURE__*/function (GridRowEditStartReasons) {\n  GridRowEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridRowEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridRowEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  return GridRowEditStartReasons;\n}(GridRowEditStartReasons || {});\n/**\n * Params passed to the `rowEditStart` event.\n */\nvar GridRowEditStopReasons = /*#__PURE__*/function (GridRowEditStopReasons) {\n  GridRowEditStopReasons[\"rowFocusOut\"] = \"rowFocusOut\";\n  GridRowEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridRowEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridRowEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridRowEditStopReasons;\n}(GridRowEditStopReasons || {});\n/**\n * Object passed as parameter in the row `getRowSpacing` callback prop.\n * @demos\n *   - [Row spacing](/x/react-data-grid/row-height/#row-spacing)\n */\n/**\n * The getRowSpacing return value.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridRowEditStartReasons, GridRowEditStopReasons };","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector as reselectCreateSelector } from 'reselect';\nimport { buildWarning } from './warning';\nconst cacheContainer = {\n  cache: new WeakMap()\n};\nconst missingInstanceIdWarning = buildWarning(['MUI: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, e.g. `mySelector(apiRef)`, or pass the instance ID explicitly, e.g. `mySelector(state, apiRef.current.instanceId)`.']);\nfunction checkIsAPIRef(value) {\n  return 'current' in value && 'instanceId' in value.current;\n}\nconst DEFAULT_INSTANCE_ID = {\n  id: 'default'\n};\nexport const createSelector = (a, b, c, d, e, f, ...rest) => {\n  if (rest.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam != null ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      const ve = e(state, instanceId);\n      return f(va, vb, vc, vd, ve);\n    };\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam != null ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      return e(va, vb, vc, vd);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam != null ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      return d(va, vb, vc);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam != null ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      return c(va, vb);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam != null ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      return b(va);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\nexport const createSelectorMemoized = (...args) => {\n  const selector = (...selectorArgs) => {\n    var _cache$get, _cache$get3;\n    const [stateOrApiRef, instanceId] = selectorArgs;\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId != null ? instanceId : DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        missingInstanceIdWarning();\n      }\n    }\n    const {\n      cache\n    } = cacheContainer;\n    if (cache.get(cacheKey) && (_cache$get = cache.get(cacheKey)) != null && _cache$get.get(args)) {\n      var _cache$get2;\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return (_cache$get2 = cache.get(cacheKey)) == null ? void 0 : _cache$get2.get(args)(state, cacheKey);\n    }\n    const newSelector = reselectCreateSelector(...args);\n    if (!cache.get(cacheKey)) {\n      cache.set(cacheKey, new Map());\n    }\n    (_cache$get3 = cache.get(cacheKey)) == null || _cache$get3.set(args, newSelector);\n    return newSelector(state, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCreateSelectorCache = () => {\n  cacheContainer.cache = new WeakMap();\n};","import { gridClasses } from '../constants/gridClasses';\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\nexport function getRowEl(cell) {\n  if (!cell) {\n    return null;\n  }\n  return findParentElementFromClassName(cell, gridClasses.row);\n}\n\n// TODO remove\nexport function isGridCellRoot(elem) {\n  return elem != null && elem.classList.contains(gridClasses.cell);\n}\nexport function isGridHeaderCellRoot(elem) {\n  return elem != null && elem.classList.contains(gridClasses.columnHeader);\n}\nfunction escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nfunction getGridRowElementSelector(id) {\n  return `.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`;\n}\nexport function getGridRowElement(root, id) {\n  return root.querySelector(getGridRowElementSelector(id));\n}\nexport function getGridCellElement(root, {\n  id,\n  field\n}) {\n  const rowSelector = getGridRowElementSelector(id);\n  const cellSelector = `.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`;\n  const selector = `${rowSelector} ${cellSelector}`;\n  return root.querySelector(selector);\n}\n\n// https://www.abeautifulsite.net/posts/finding-the-active-element-in-a-shadow-root/\nexport const getActiveElement = (root = document) => {\n  const activeEl = root.activeElement;\n  if (!activeEl) {\n    return null;\n  }\n  if (activeEl.shadowRoot) {\n    return getActiveElement(activeEl.shadowRoot);\n  }\n  return activeEl;\n};\nexport function isEventTargetInPortal(event) {\n  if (\n  // The target is not an element when triggered by a Select inside the cell\n  // See https://github.com/mui/material-ui/issues/10534\n  event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n    return true;\n  }\n  return false;\n}","import * as React from 'react';\nimport { fastObjectShallowCompare } from './fastObjectShallowCompare';\nexport function fastMemo(component) {\n  return /*#__PURE__*/React.memo(component, fastObjectShallowCompare);\n}","const is = Object.is;\nexport function fastObjectShallowCompare(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (!(a instanceof Object) || !(b instanceof Object)) {\n    return false;\n  }\n  let aLength = 0;\n  let bLength = 0;\n\n  /* eslint-disable no-restricted-syntax */\n  /* eslint-disable guard-for-in */\n  for (const key in a) {\n    aLength += 1;\n    if (!is(a[key], b[key])) {\n      return false;\n    }\n    if (!(key in b)) {\n      return false;\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-unused-vars */\n  for (const _ in b) {\n    bLength += 1;\n  }\n  /* eslint-enable no-restricted-syntax */\n  /* eslint-enable guard-for-in */\n\n  return aLength === bLength;\n}","export const isEscapeKey = key => key === 'Escape'; // TODO remove\nexport const isEnterKey = key => key === 'Enter'; // TODO remove\nexport const isTabKey = key => key === 'Tab'; // TODO remove\n\nexport const isSpaceKey = key => key === ' ';\nexport const isArrowKeys = key => key.indexOf('Arrow') === 0;\nexport const isHomeOrEndKeys = key => key === 'Home' || key === 'End';\nexport const isPageKeys = key => key.indexOf('Page') === 0;\nexport const isDeleteKeys = key => key === 'Delete' || key === 'Backspace';\n\n// Non printable keys have a name, e.g. \"ArrowRight\", see the whole list:\n// https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n// So event.key.length === 1 is often enough.\n//\n// However, we also need to ignore shortcuts, for example: select all:\n// - Windows: Ctrl+A, event.ctrlKey is true\n// - macOS: ⌘ Command+A, event.metaKey is true\nexport function isPrintableKey(event) {\n  return event.key.length === 1 && !event.ctrlKey && !event.metaKey;\n}\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = event => isEnterKey(event.key) || isDeleteKeys(event.key) || isPrintableKey(event);\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => isHomeOrEndKeys(key) || isArrowKeys(key) || isPageKeys(key) || isSpaceKey(key);\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => isTabKey(key) || isEscapeKey(key);","export function isNumber(value) {\n  return typeof value === 'number' && !Number.isNaN(value);\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n\n/**\n * Based on `fast-deep-equal`\n *\n * MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (Array.isArray(a)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entriesA = Array.from(a.entries());\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entries = Array.from(a.entries());\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n    const keys = Object.keys(a);\n    const length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b;\n}\n\n// Pseudo random number. See https://stackoverflow.com/a/47593316\nfunction mulberry32(a) {\n  return () => {\n    /* eslint-disable */\n    let t = a += 0x6d2b79f5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n    /* eslint-enable */\n  };\n}\nexport function randomNumberBetween(seed, min, max) {\n  const random = mulberry32(seed);\n  return () => min + (max - min) * random();\n}\nexport function deepClone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n}","export const buildWarning = (message, gravity = 'warning') => {\n  let alreadyWarned = false;\n  const cleanMessage = Array.isArray(message) ? message.join('\\n') : message;\n  return () => {\n    if (!alreadyWarned) {\n      alreadyWarned = true;\n      if (gravity === 'error') {\n        console.error(cleanMessage);\n      } else {\n        console.warn(cleanMessage);\n      }\n    }\n  };\n};\nexport const wrapWithWarningOnCall = (method, message) => {\n  if (process.env.NODE_ENV === 'production') {\n    return method;\n  }\n  const warning = buildWarning(message);\n  return (...args) => {\n    warning();\n    return method(...args);\n  };\n};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}"],"names":["_excluded","_t","_t2","_t3","_t4","_","t","pulseKeyframe","waveKeyframe","SkeletonRoot","name","slot","overridesResolver","props","styles","ownerState","root","variant","animation","hasChildren","withChildren","width","fitContent","height","heightAuto","theme","radiusUnit","shape","borderRadius","radiusValue","display","backgroundColor","vars","palette","Skeleton","bg","text","primary","mode","marginTop","marginBottom","transformOrigin","transform","Math","round","content","visibility","maxWidth","action","hover","inProps","ref","className","component","style","other","Boolean","children","classes","slots","useUtilityClasses","as","getSkeletonUtilityClass","SwitchRoot","edge","size","overflow","padding","boxSizing","position","flexShrink","zIndex","verticalAlign","colorAdjust","marginLeft","marginRight","thumb","switchBase","checked","SwitchSwitchBase","input","color","top","left","Switch","defaultColor","common","white","grey","transition","transitions","create","duration","shortest","disabled","defaultDisabledColor","track","opacity","switchTrackDisabled","activeChannel","hoverOpacity","active","main","mainChannel","SwitchTrack","onBackground","black","switchTrack","SwitchThumb","boxShadow","shadows","sx","composedClasses","icon","type","checkedIcon","getSwitchUtilityClass","forceDebug","window","localStorage","getItem","noop","noopLogger","debug","info","warn","error","LOG_LEVELS","getAppender","logLevel","appender","console","minLogLevelIdx","indexOf","Error","reduce","loggerObj","method","idx","args","message","Store","value","constructor","_value","this","listeners","subscribe","fn","add","delete","getSnapshot","update","forEach","l","Set","EventManager","maxListeners","warnOnce","events","on","eventName","listener","options","collection","highPriority","Map","regular","isFirst","set","removeListener","removeAllListeners","emit","highPriorityListeners","Array","from","keys","regularListeners","i","length","has","apply","once","that","oneTimeListener","SYMBOL_API_PRIVATE","Symbol","globalId","GRID_DEFAULT_STRATEGY","GRID_STRATEGIES_PROCESSORS","rowTreeCreation","filtering","sorting","visibleRowsLookupCreation","useGridInitialization","inputApiRef","privateApiRef","publicApiRef","current","_publicApiRef$current","existingPrivateApi","state","privateApi","store","instanceId","id","getPublicApi","register","methods","Object","methodName","currentPrivateMethod","spying","target","publicApi","currentPublicMethod","caches","eventManager","createPrivateAPI","createPublicAPI","publishEvent","params","event","defaultMuiPrevented","undefined","isPropagationStopped","isSyntheticEvent","details","signature","DataGridPro","api","subscribeEvent","handler","useGridApiMethod","useGridApiInitialization","apiRef","getLogger","logger","toString","useGridLoggerFactory","controlStateMapRef","rawForceUpdate","registerControlState","controlStateItem","stateId","setState","reason","newState","ignoreSetState","updatedControlStateIds","controlState","oldSubState","stateSelector","newSubState","push","hasPropChanged","propModel","map","el","join","model","propOnChange","changeEvent","updateControlState","key","previousState","publicStateApi","forceUpdate","privateStateApi","useGridStateInitialization","processorsCache","isRunning","runAppliers","groupCache","values","appliers","callback","preProcessingPrivateApi","registerPipeProcessor","group","processor","processors","get","registerPipeApplier","applier","_appliers","otherAppliers","requestPipeProcessorsApplication","preProcessingPublicApi","unstable_applyPipeProcessors","context","acc","preProcessor","useGridPipeProcessing","availableStrategies","strategiesCache","strategyProcessingApi","registerStrategyProcessor","strategyName","processorName","cleanup","_ref","otherProcessors","groupPreProcessors","previousProcessor","getActiveStrategy","applyStrategyProcessor","activeStrategy","strategyGroup","_availableStrategyEnt","availableStrategyEntry","entries","find","strategy","isAvailable","setStrategyAvailability","useGridStrategyProcessing","getLocaleText","localeText","useGridLocaleText","rootProps","useGridInitializeState","initializer","isInitialized","sanitizeCellValue","delimiterCharacter","some","delimiter","includes","replace","serializeCellValue","cellParams","ignoreValueFormatter","_cellParams$value2","columnType","colDef","String","_cellParams$value","toISOString","formattedValue","CSVRow","rowString","isEmpty","addValue","getRowString","writeToClipboardPolyfill","data","span","document","createElement","whiteSpace","userSelect","textContent","body","appendChild","range","createRange","selectNode","selection","getSelection","removeAllRanges","addRange","execCommand","removeChild","columnMenuStateInitializer","columnMenu","open","useGridRegisterPipeProcessor","random","registerPreProcessor","useFirstRender","isFirstRender","useGridRegisterPipeApplier","defaultColumnTypes","columnsStateInitializer","_props$initialState","_props$columnVisibili","_props$initialState2","columnsState","columnTypes","columnsToUpsert","columns","initialState","columnVisibilityModel","keepOnlyColumnsToUpsert","DENSITY_FACTORS","compact","comfortable","standard","densityStateInitializer","density","factor","getColumnsToExport","fields","currentColumns","field","column","col","allColumns","filter","disableExport","defaultGetRowsToExport","_pinnedRows$top","_pinnedRows$bottom","filteredSortedRowIds","rowTree","selectedRows","getSelectedRows","bodyRows","pinnedRows","topPinnedRowsIds","row","bottomPinnedRowsIds","bottom","unshift","useGridCsvExport","useGridLogger","ignoreValueFormatterProp","unstable_ignoreValueFormatterDuringExport","csvExport","getDataAsCsv","_options$getRowsToExp","_options$includeHeade","_options$includeColum","rowIds","includeHeaders","includeColumnGroupsHeaders","CSVBody","getCellParams","serializeRow","trim","filteredColumns","headerRows","columnGroupLookup","unstable_getAllGroupDetails","maxColumnGroupsDepth","columnGroupPathsLookup","columnGroupPath","unstable_getColumnGroupPath","max","headerGroupRow","columnGroupId","columnGroup","headerName","groupId","mainHeaderRow","buildCSV","getRowsToExport","exportDataAsCsv","csv","blob","extension","filename","title","fullName","HTMLAnchorElement","prototype","url","URL","createObjectURL","a","href","download","click","setTimeout","revokeObjectURL","exportAs","Blob","utf8WithBom","Uint8Array","fileName","csvExportApi","addExportMenuButtons","initialValue","_options$csvOptions","csvOptions","disableToolbarButton","componentName","paginationStateInitializer","_props$paginationMode","paginationModel","autoPageSize","pagination","pageSize","mergeStateWithPaginationModel","rowCount","paginationModelProp","paginationState","_paginationModelProp$","pageCount","page","validPage","useGridRegisterStrategyProcessor","filterStateInitializer","_props$filterModel","filterModel","disableMultipleColumnsFiltering","filteredRowsLookup","filteredDescendantCountLookup","visibleRowsLookup","getVisibleRowsLookup","getVisibleRowsLookupState","tree","rows","createMemoizedValues","defaultMemoize","focusStateInitializer","focus","cell","columnHeader","columnHeaderFilter","columnGroupHeader","tabIndex","getLeftColumnIndex","currentColIndex","firstColIndex","lastColIndex","direction","getRightColumnIndex","preferencePanelStateInitializer","_props$initialState$p","preferencePanel","_excluded2","missingOnProcessRowUpdateErrorWarning","editingStateInitializer","editRows","rowsStateInitializer","getRowId","loading","rowCountProp","loadingProp","previousTree","previousTreeDepths","flatRowTreeCreationMethod","updates","rowId","depth","parent","groupingKey","groupingName","treeDepths","dataRowIds","createFlatRowTree","actions","idsToRemoveFromRootGroup","remove","idToDelete","insert","idToInsert","rootGroup","rootGroupChildren","updateFlatRowTree","getSelectionModelPropValue","selectionModelProp","prevSelectionModel","isArray","rowSelectionStateInitializer","_getSelectionModelPro","rowSelection","rowSelectionModel","sortingStateInitializer","_props$sortModel","sortModel","disableMultipleColumnsSorting","sortedRows","scrollIntoView","dimensions","clientHeight","scrollTop","offsetHeight","offsetTop","elementBottom","rowsMetaStateInitializer","rowsMeta","currentPageTotalHeight","positions","getValidRowHeight","rowHeightProp","defaultRowHeight","warningMessage","recurrentUnwrapGroupingColumnModel","columnGroupNode","parents","unwrappedGroupingModelToComplete","child","unwrapGroupingColumnModel","columnGroupingModel","unwrappedSubTree","getColumnGroupsHeaderStructure","orderedColumns","unwrappedGroupingModel","pinnedFields","getParents","_unwrappedGroupingMod","groupingHeaderStructure","maxDepth","haveSameParents","field1","field2","slice","depthStructure","structure","newField","_getParents$depth","columnFields","lastGroup","prevField","right","createGroupLookup","groupLookup","node","groupParam","subTreeLookup","columnGroupsStateInitializer","_props$experimentalFe","_props$columnGrouping","_props$columnGrouping2","_apiRef$current$state","experimentalFeatures","columnGrouping","visibleColumnFields","columnGroupsHeaderStructure","pinnedColumns","_unwrappedGroupingMod2","lookup","headerStructure","useDataGridComponent","composeClasses","cellCheckbox","columnHeaderCheckbox","updateSelectionColumn","selectionColumn","cellClassName","headerClassName","shouldHaveSelectionColumn","checkboxSelection","haveSelectionColumn","orderedFields","useGridRowSelectionPreProcessors","useGridRowsPreProcessors","initialCurrentPageRows","useGridVisibleRows","useTheme","currentPageRows","enrichPageRowsWithPinnedRows","headerFilteringEnabled","unstable_headerFilters","goToCell","colIndex","closestColumnToUse","visibleSortedRows","nextCellColSpanInfo","unstable_getCellColSpanInfo","spannedByColSpan","leftVisibleCellIndex","rightVisibleCellIndex","rowIndexRelativeToAllRows","findIndex","scrollToIndexes","rowIndex","getVisibleColumns","setCellFocus","goToHeader","setColumnHeaderFocus","goToHeaderFilter","setColumnHeaderFilterFocus","goToGroupHeader","setColumnGroupHeaderFocus","getRowIdFromIndex","_currentPageRows$rowI","handleColumnHeaderKeyDown","headerTitleNode","currentTarget","querySelector","gridClasses","columnHeaderTitleContainerContent","contains","getRootDimensions","viewportPageSize","getViewportPageSize","colIndexBefore","getColumnIndex","firstRowIndexInPage","lastRowIndexInPage","columnGroupMaxDepth","shouldPreventDefault","rightColIndex","leftColIndex","min","ctrlKey","metaKey","toggleColumnMenu","preventDefault","handleHeaderFilterKeyDown","isEditing","isHeaderMenuOpen","handleColumnGroupHeaderKeyDown","focusedColumnGroup","currentField","currentDepth","remainingRightColumns","remainingLeftColumns","handleCellKeyDown","cellMode","Edit","rowIndexBefore","shiftKey","nextRowIndex","checkIfCanStartEditing","useGridApiEventHandler","useGridKeyboardNavigation","runIfRowSelectionIsEnabled","propRowSelectionModel","lastRowToggled","onRowSelectionModelChange","disableMultipleRowSelection","disableRowSelectionOnClick","isRowSelectable","propIsRowSelectable","canHaveMultipleSelection","visibleRows","expandMouseRowRangeSelection","_lastRowToggled$curre","endId","startId","isSelected","isRowSelected","visibleRowIds","startIndex","endIndex","selectRowRange","setRowSelectionModel","DataGrid","getRowParams","rowNode","getRowNode","selectRow","resetSelection","newSelection","selectRows","ids","selectableIds","selectionLookup","getRow","allPagesRowIds","start","end","rowsBetweenStartAndEnd","selectionPublicApi","selectionPrivateApi","removeOutdatedSelection","keepNonExistentRowsSelected","currentSelection","rowsLookup","hasChanged","handleSingleRowSelection","hasCtrlKey","isMultipleSelectionDisabled","handleRowClick","_closest","closest","getAttribute","getColumn","preventSelectionOnShift","_window$getSelection","handleRowSelectionCheckboxChange","nativeEvent","handleHeaderSelectionCheckboxChange","rowsToBeSelected","checkboxSelectionVisibleOnly","getCellMode","focusCell","isNextRowSelected","newRowIndex","getRowIndexRelativeToVisibleRows","previousRowIndex","getAllRowIds","isStateControlled","useGridRowSelection","_props$initialState4","_props$slotProps2","previousColumnsProp","previousColumnTypesProp","onColumnVisibilityModelChange","setGridColumnsState","getAllColumns","useVisibleColumns","getColumnPosition","index","setColumnVisibilityModel","updateColumns","setColumnVisibility","isVisible","_columnVisibilityMode","newModel","getColumnIndexRelativeToVisibleColumns","setColumnIndex","targetIndexPosition","oldIndexPosition","updatedColumns","fieldRemoved","splice","targetIndex","oldIndex","setColumnWidth","_apiRef$current$getRo","_apiRef$current$getRo2","newColumn","hasBeenResized","viewportInnerSize","element","getColumnHeaderElement","columnApi","columnReorderApi","stateExportPreProcessing","prevState","_props$initialState$c","_props$initialState3","columnsStateToExport","columnVisibilityModelToExport","exportOnlyDirtyModels","colDefDimensions","propertyName","propertyValue","Infinity","stateRestorePreProcessing","_context$stateToResto","columnVisibilityModelToImport","stateToRestore","preferencePanelPreProcessing","_props$slotProps","ColumnsPanel","columnsPanel","slotProps","addColumnMenuItems","columnMenuItems","disableColumnSelector","prevInnerWidth","hydrateColumns","useGridColumns","currentPage","lastUpdateMs","Date","now","timeout","useTimeout","getRowIdProp","throttledRowsChange","cache","throttle","run","clear","throttleRemainingTimeMs","throttleRowsMs","setRows","prevCache","rowsBeforePartialUpdates","updateRows","nonPinnedRowsUpdates","pinnedRowsCache","prevModel","idLookup","previousCache","getRowModels","dataRows","idRowsLookup","_idRowsLookup$id","getRowsCount","setRowChildrenExpansion","isExpanded","currentNode","newNode","childrenExpanded","getRowGroupChildren","skipAutoGeneratedRows","applySorting","applyFiltering","groupNode","sortedRowIds","childId","setRowIndex","allRows","updatedRows","rowApi","unstable_replaceRows","firstRowToRender","newRows","dataRowIdToModelLookup","dataRowIdToIdLookup","seenIds","rowModel","removedRowId","rowTreeNodeConfig","rowProApi","groupRows","handleStrategyProcessorChange","handleStrategyActivityChange","applyHydrateRowsProcessor","response","totalTopLevelRowCount","areNewRowsAlreadyInState","isNewLoadingAlreadyInState","loadingPropBeforePartialUpdates","isNewRowCountAlreadyInState","rowCountPropBeforePartialUpdates","totalRowCount","useGridRows","useGridParamsApi","setCellColSpanInfo","columnIndex","cellColSpanInfo","sizes","getCellColSpanInfo","_lookup$current$rowId","calculateCellColSpan","minFirstColumnIndex","maxLastColumnIndex","columnsLength","colSpan","cellProps","computedWidth","j","nextColumnIndex","columnSpanningPublicApi","columnSpanningPrivateApi","calculateColSpan","minFirstColumn","maxLastColumn","handleColumnReorderChange","useGridColumnSpanning","_props$experimentalFe3","columnGroupingApi","_unwrappedGroupingMod3","handleColumnIndexChange","_props$columnGrouping3","_state$columns$ordere","_state$columns","_state$pinnedColumns","updateColumnGroupingState","_props$experimentalFe2","_apiRef$current$getPi","_apiRef$current$getPi2","_apiRef$current","getPinnedColumns","call","_unwrappedGroupingMod4","_unwrappedGroupingMod5","useGridColumnGrouping","cellModesModel","setCellModesModel","cellModesModelRef","prevCellModesModel","processRowUpdate","onProcessRowUpdateError","cellModesModelProp","onCellModesModelChange","runIfEditModeIsCell","editMode","Cell","throwIfNotEditable","isCellEditable","throwIfNotInMode","handleCellDoubleClick","isEditable","newParams","cellDoubleClick","handleCellFocusOut","View","cellFocusOut","which","escapeKeyDown","enterKeyDown","shiftTabKeyDown","tabKeyDown","printableKeyDown","pasteKeyDown","deleteKeyDown","handleCellEditStart","startCellEditModeParams","deleteValue","startCellEditMode","handleCellEditStop","cellToFocusAfter","runPendingEditCellValueMutation","ignoreModifications","stopCellEditMode","onCellEditStart","onCellEditStop","editingState","updateCellModesModel","useEventCallback","isNewModelDifferentFromProp","updateFieldInCellModesModel","newProps","_newModel$id","otherFields","updateOrDeleteFieldState","newEditingState","updateStateToStartCellEditMode","newValue","getCellValue","isProcessingProps","updateStateToStopCellEditMode","async","finishCellEditMode","moveFocusToRelativeCell","rowUpdate","getRowWithUpdatedValuesFromCellEditing","handleError","errorThrown","Promise","resolve","then","finalRowUpdate","catch","editingApi","editingPrivateApi","setCellEditingEditCellValue","_editingState$id","debounceMs","unstable_skipValueParser","skipValueParser","parsedValue","valueParser","changeReason","preProcessEditCellProps","valueSetter","useEnhancedEffect","idToIdLookup","copyOfPrevCellModes","_copyOfPrevCellModes$","_idToIdLookup$id","prevMode","originalId","useGridCellEditing","rowModesModel","setRowModesModel","rowModesModelRef","prevRowModesModel","focusTimeout","nextFocusedCell","rowModesModelProp","onRowModesModelChange","runIfEditModeIsRow","Row","getRowMode","rowParams","handleCellFocusIn","_nextFocusedCell$curr","rowFocusOut","clearTimeout","nextFieldToFocus","handleRowEditStart","startRowEditModeParams","fieldToFocus","startRowEditMode","handleRowEditStop","stopRowEditMode","onRowEditStart","onRowEditStop","updateRowModesModel","updateRowInRowModesModel","updateOrDeleteRowState","updateStateToStartRowEditMode","updateStateToStopRowEditMode","focusedField","finishRowEditMode","fieldProps","getRowWithUpdatedValuesFromRowEditing","setRowEditingEditCellValue","promises","otherFieldsProps","promise","processedProps","thisField","fieldColumn","_editingState$id2","all","copyOfPrevRowModesModel","_copyOfPrevRowModesMo","useGridRowEditing","debounceMap","isCellEditableProp","editable","renderEditCell","debounces","runCallback","debouncedField","editingSharedApi","setEditCellValue","maybeDebounce","setEditCellValueToCall","result","getRowWithUpdatedValues","unstable_getEditCellMeta","_editingState$id$fiel","editingSharedPrivateApi","useGridEditing","lastClickedCell","publishCellFocusOut","focusedCell","getColumnGroupHeaderFocus","columnIndexToFocus","visibleColumns","paginationMode","concat","rowIndexToFocus","rowToFocus","colSpanInfo","columnToFocus","handleColumnHeaderFocus","handleColumnGroupHeaderFocus","handleBlur","_event$relatedTarget","relatedTarget","handleCellMouseDown","handleDocumentClick","cellElement","getCellElement","handleCellModeChange","handleRowSet","handlePaginationModelChange","currentFocusedCell","focusApi","focusPrivateApi","doc","ownerDocument","rootElementRef","addEventListener","removeEventListener","useGridFocus","hideTimeout","immediateTimeout","hidePreferences","preferencePanelState","openedPanelValue","doNotHidePanel","hidePreferencesDelayed","showPreferences","panelId","labelId","preferencePanelToExport","useGridPreferencesPanel","onFilterModelChange","updateFilteredRows","isRowMatchingFilters","filterMode","disableEval","filteringResult","visibleRowsLookupState","addColumnMenuItem","filterable","disableColumnFilter","applyFilters","upsertFilterItem","item","items","itemIndex","filterItem","setFilterModel","upsertFilterItems","existingItems","deleteFilterItem","itemToDelete","showFilterPanel","targetColumnField","filterItemsWithValue","_column$filterOperato","filterOperator","filterOperators","operator","requiresFilterValue","newFilterItems","filterItemOnTarget","targetColumn","filters","hideFilterPanel","setFilterLogicOperator","logicOperator","setQuickFilterValues","quickFilterValues","filterApi","unstable_applyFilters","ignoreDiacritics","filterModelToExport","callbacks","FilterPanel","filterPanel","getRowsRef","useLazyRef","flatFilteringMethod","filterCache","passingFilterItems","passingQuickFilterValues","isRowPassing","footerId","handleColumnsChange","filterableColumnsLookup","updateVisibleRowsLookupState","quickFilterExcludeHiddenColumns","useGridFilter","onSortModelChange","upsertSortModel","sortItem","existingIdx","c","newSortModel","createSortItem","directionOverride","_col$sortingOrder2","existing","_col$sortingOrder","nextSort","sortingOrder","sort","sortable","sortingMode","sortRowList","setSortModel","sortColumn","allowMultipleSorting","sortApi","getSortModel","getSortedRows","getSortedRowIds","getRowIdFromRowIndex","sortModelToExport","flatSortingMethod","rootGroupNode","sortedChildren","handleColumnHeaderClick","latestColumns","useGridSorting","setDensity","newDensity","currentDensityState","newDensityState","densityApi","useGridDensity","visibleTopLevelRowCount","useGridSelector","densityFactor","rowHeight","floor","onPaginationModelChange","pageApi","setPage","currentModel","setPaginationModel","setPageSize","_props$rowCount","_context$stateToResto2","_props$rowCount2","handleUpdateAutoPageSize","pinnedRowsHeight","maximumPageSizeWithoutScrollBar","_apiRef$current$virtu","virtualScrollerRef","_props$rowCount3","useGridPagination","getRowHeight","getRowHeightProp","getRowSpacing","getEstimatedRowHeight","rowsHeightLookup","lastMeasuredRowIndex","hasRowWithAutoHeight","gridPaginationSelector","validRowHeight","hydrateRowsMeta","calculateRowProcessedSizes","baseCenter","isResized","autoHeight","needsFirstMeasurement","baseRowHeight","existingBaseRowHeight","rowHeightFromUser","estimatedRowHeight","initialHeights","test","_spacing$top","_spacing$bottom","indexRelativeToCurrentPage","spacing","isFirstVisible","isLastVisible","spacingTop","spacingBottom","processedSizes","maximumBaseSize","otherSizes","setRowHeight","debouncedHydrateRowsMeta","debounce","rowPositionsDebounceMs","storeMeasuredRowHeight","needsHydration","capitalize","rowHasAutoHeight","_rowsHeightLookup$cur2","getLastMeasuredRowIndex","setLastMeasuredRowIndex","resetRowHeights","rowsMetaApi","unstable_setLastMeasuredRowIndex","unstable_getRowHeight","unstable_getRowInternalSizes","_rowsHeightLookup$cur","unstable_setRowHeight","unstable_storeRowHeightMeasurement","rowsMetaPrivateApi","useGridRowsMeta","colRef","columnHeadersElementRef","scrollCoordinates","columnPositions","cellWidth","_visibleSortedRows$pa","clientWidth","abs","scrollLeft","_querySelector","_querySelector2","gridRowsMetaSelector","elementIndex","targetOffsetHeight","topPinnedRowsHeight","bottomPinnedRowsHeight","scroll","scrollApi","getScrollPosition","useGridScroll","showColumnMenu","hideColumnMenu","columnMenuState","columnLookup","visibleOrderedFields","fieldIndex","columnMenuApi","useGridColumnMenu","previousGridState","previousColumnVisibility","previousRows","updateGridColumnsForPrint","includeCheckboxes","exportedColumnFields","newColumnVisibilityModel","updateGridRowsForPrint","handlePrintWindowLoad","printWindow","normalizeOptions","copyStyles","hideToolbar","hideFooter","printDoc","contentDocument","gridRootElement","gridClone","cloneNode","contain","columnHeaders","columnHeadersInner","gridToolbarElementHeight","toolbarContainer","gridFooterElementHeight","footerContainer","_gridClone$querySelec","_gridClone$querySelec2","computedTotalHeight","columnHeaderHeight","gridFooterElement","container","innerHTML","defaultPageStyle","pageStyle","styleElement","createTextNode","head","bodyClassName","classList","split","stylesheetLoadPromises","rootCandidate","getRootNode","headStyleElements","querySelectorAll","tagName","newHeadStyleElements","sheet","styleCSS","cssRules","cssText","attributes","attr","setAttribute","nodeName","nodeValue","contentWindow","print","handlePrintWindowAfterPrint","_previousGridState$cu","restoreState","unstable_setVirtualization","printExportApi","exportDataAsPrint","exportState","gridRowsLookup","visibleRowCount","requestAnimationFrame","iframeEl","buildPrintWindow","onload","matchMedia","mql","matches","_options$printOptions","printOptions","useGridPrintExport","clipboardExport","clipboardCopyCellDelimiter","handleCopy","selectionEnd","selectionStart","textToCopy","navigator","clipboard","writeText","useGridNativeEventListener","onClipboardCopy","useGridClipboard","errorShown","rootDimensionsRef","fullDimensionsRef","totalHeaderHeight","updateGridDimensionsRef","_apiRef$current$rootE","rootElement","columnsTotalWidth","scrollBarSize","viewportOuterSize","hasScrollX","hasScrollY","scrollbarSize","scrollDiv","offsetWidth","scrollInformation","hasScrollXIfNoYScrollBar","hasScrollYIfNoXScrollBar","hasScroll","newFullDimensions","prevDimensions","savedSize","setSavedSize","debouncedSetSavedSize","previousSize","resize","computeSizeAndPublishResizeEvent","renderContext","getRenderContext","lastRowIndex","firstRowIndex","_apiRef$current$mainE","_previousSize$current","_previousSize$current2","mainEl","mainElementRef","computedStyle","ownerWindow","getComputedStyle","parseFloat","hasHeightChanged","hasWidthChanged","dimensionsApi","dimensionsPrivateApi","isFirstSizing","handleResize","isJSDOM","userAgent","onResize","useGridDimensions","onColumnHeaderClick","onColumnHeaderDoubleClick","onColumnHeaderOver","onColumnHeaderOut","onColumnHeaderEnter","onColumnHeaderLeave","onCellClick","onCellDoubleClick","onCellKeyDown","onPreferencePanelClose","onPreferencePanelOpen","onMenuOpen","onMenuClose","onRowDoubleClick","onRowClick","onStateChange","useGridEvents","statePersistenceApi","useGridStatePersistence","useGridVirtualization","VirtualScrollerRoot","styled","virtualScroller","GridVirtualScroller","useGridRootProps","clsx","VirtualScrollerContentRoot","virtualScrollerContent","GridVirtualScrollerContent","_props$style","overflowedContent","minHeight","VirtualScrollerRenderZoneRoot","virtualScrollerRenderZone","flexDirection","GridVirtualScrollerRenderZone","DataGridVirtualScroller","getRootProps","getContentProps","getRenderZoneProps","getRows","useGridVirtualScroller","GridOverlays","DataGridRaw","useDataGridProps","GridContextProvider","GridRoot","forwardedProps","GridHeader","GridBody","VirtualScrollerComponent","GridFooterPlaceholder","SUBMIT_FILTER_STROKE_TIME","filterDebounceMs","SUBMIT_FILTER_DATE_STROKE_TIME","propTypes","isRequired","columnBuffer","columnThreshold","components","componentsProps","disableColumnMenu","disableDensitySelector","disableVirtualization","ariaV7","warnIfFocusStateIsNotSynced","quickFilterLogicOperator","getCellClassName","getDetailPanelContent","getRowClassName","hideFooterPagination","hideFooterSelectedRowCount","nonce","onColumnOrderChange","onRowEditCommit","pageSizeOptions","label","rowBuffer","rowSpacingType","rowThreshold","showCellVerticalBorder","showColumnVerticalBorder","GridNoResultsOverlay","noResultsOverlayLabel","useGridApiContext","GridOverlay","GridColumnUnsortedIcon","nextSortDirection","Icon","columnSortedAscendingIcon","columnSortedDescendingIcon","iconSlots","BooleanCellTrueIcon","BooleanCellFalseIcon","ColumnMenuIcon","OpenFilterButtonIcon","FilterPanelDeleteIcon","ColumnFilteredIcon","ColumnSelectorIcon","ColumnUnsortedIcon","ColumnSortedAscendingIcon","ColumnSortedDescendingIcon","ColumnResizeIcon","DensityCompactIcon","DensityStandardIcon","DensityComfortableIcon","ExportIcon","MoreActionsIcon","TreeDataCollapseIcon","TreeDataExpandIcon","GroupingCriteriaCollapseIcon","GroupingCriteriaExpandIcon","DetailPanelExpandIcon","DetailPanelCollapseIcon","RowReorderIcon","QuickFilterIcon","QuickFilterClearIcon","ColumnMenuHideIcon","ColumnMenuSortAscendingIcon","ColumnMenuSortDescendingIcon","ColumnMenuFilterIcon","ColumnMenuManageColumnsIcon","ColumnMenuClearIcon","LoadIcon","FilterPanelAddIcon","FilterPanelRemoveAllIcon","ColumnReorderIcon","BaseCheckbox","BaseTextField","BaseFormControl","BaseSelect","BaseSwitch","BaseButton","BaseIconButton","BaseInputAdornment","BaseTooltip","BasePopper","BaseInputLabel","BaseSelectOption","native","BaseChip","DATA_GRID_DEFAULT_SLOTS_COMPONENTS","material","GridCell","SkeletonCell","GridSkeletonCell","ColumnHeaderFilterIconButton","GridColumnHeaderFilterIconButton","ColumnMenu","GridColumnMenu","ColumnHeaders","GridColumnHeaders","Footer","GridFooter","FooterRowCount","GridRowCount","Toolbar","PreferencesPanel","GridPreferencesPanel","LoadingOverlay","GridLoadingOverlay","NoResultsOverlay","NoRowsOverlay","GridNoRowsOverlay","Pagination","GridPagination","GridFilterPanel","GridColumnsPanel","G","Panel","GridPanel","GridRow","uncapitalizeObjectKeys","capitalizedObject","charAt","toLowerCase","groupForwardedProps","_props$forwardedProps","startsWith","DATA_GRID_FORCED_PROPS","hideFooterRowCount","disableColumnReorder","disableColumnResize","keepColumnPositionIfDraggedOutside","DATA_GRID_PROPS_DEFAULT_VALUES","defaultSlots","themedProps","allProps","useThemeProps","overrides","k","computeSlots","_themedProps$slotProp","GRID_ACTIONS_COLUMN_TYPE","GRID_ACTIONS_COL_DEF","aggregable","align","headerAlign","renderCell","getApplyQuickFilterFn","getApplyQuickFilterFnV7","GRID_BOOLEAN_COL_DEF","sortComparator","valueFormatter","pastedValueParser","stringToBoolean","getGridBooleanOperators","getApplyFilterFnV7","valueAsBoolean","InputComponent","GRID_CHECKBOX_SELECTION_FIELD","GRID_CHECKBOX_SELECTION_COL_DEF","resizable","disableReorder","valueGetter","renderHeader","throwIfNotDateObject","gridDateFormatter","toLocaleDateString","gridDateTimeFormatter","toLocaleString","GRID_DATE_COL_DEF","GRID_DATETIME_COL_DEF","dateRegex","dateTimeRegex","buildApplyFilterFn","compareFn","showTime","keepHours","year","month","day","hour","minute","match","Number","time","getTime","timeToCompare","setHours","getHours","getMinutes","getGridDateOperators","value1","value2","InputComponentProps","DEFAULT_GRID_COL_TYPE_KEY","getGridDefaultColumnTypes","string","number","date","dateTime","boolean","singleSelect","GRID_NUMERIC_COL_DEF","parseNumericValue","getGridNumericQuickFilterFn","isNaN","columnValue","getGridNumericOperators","GRID_SINGLE_SELECT_COL_DEF","getOptionLabel","getOptionValue","valueOptions","valueOption","option","colDefValueOptions","parseObjectValue","getGridSingleSelectOperators","filterItemValues","GRID_STRING_COL_DEF","minWidth","hideable","groupable","pinnable","getGridStringQuickFilterFn","filterRegex","RegExp","getRowFormattedValue","getGridStringOperators","disableTrim","filterItemValue","collator","Intl","Collator","sensitivity","usage","compare","val","filterValue","GLOBAL_API_REF","tagInternalFilter","isInternal","isInternalFilter","convertLegacyOperators","ops","op","getApplyFilterFn","filterFn","convertQuickFilterV7ToLegacy","GridColumnGroupHeader","_columnGroupsLookup$g","hasFocus","isLastColumn","headerCellRef","columnGroupsLookup","description","headerComponent","render","renderHeaderGroup","renderParams","showColumnBorder","isDragging","useId","elementId","draggableContainer","titleContainer","titleContainerContent","elementToFocus","publish","mouseEventsHandlers","onKeyDown","onFocus","onBlur","GridGenericColumnHeaderItem","columnMenuOpen","isResizing","sortDirection","isDraggable","columnMenuIconButton","columnTitleIconButtons","GridColumnHeaderRow","columnHeaderRow","GridColumnHeadersRoot","alignItems","borderBottom","borderTopLeftRadius","borderTopRightRadius","GridBaseColumnHeaders","role","GridColumnHeadersInnerRoot","columnHeaderDropZone","columnHeaderDraggableContainer","cursor","borderRight","GridColumnHeadersInner","innerRef","sortColumnLookup","filterColumnLookup","columnHeaderTabIndexState","columnGroupHeaderTabIndexState","columnHeaderFocus","columnGroupHeaderFocus","headerGroupingMaxDepth","columnVisibility","hasOtherElementInTabSequence","getInnerProps","getColumnHeaders","getColumnGroupHeaders","innerRefProp","minColumnIndex","dragCol","setDragCol","resizeCol","setResizeCol","useGridPrivateApiContext","hasVirtualization","handleInnerRef","useForkRef","setRenderContextRaw","prevRenderContext","prevScrollLeft","headerHeight","setRenderContext","nextRenderContext","columnHeadersContainerElementRef","getFirstColumnIndexToRenderRef","equalityCheck","b","every","updateInnerPosition","lastRowToRender","firstIndex","lastIndex","minFirstIndex","maxLastIndex","buffer","firstColumnToRender","firstColumnIndex","offset","handleScroll","_prevRenderContext$cu","_prevRenderContext$cu2","lastColumnIndex","canUpdateInnerPosition","isUIEvent","handleColumnResizeStart","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","getColumnsToRender","lastColumnToRender","renderedColumns","rootStyle","maxHeight","lineHeight","columnsToRender","isFirstColumn","GridColumnHeaderItem","filterItemsCounter","headerToRender","_apiRef$current$unsta","_apiRef$current$unsta2","rowStructure","firstColumnFieldToRender","firstGroupToRender","firstGroupIndex","lastColumnFieldToRender","lastGroupToRender","lastGroupIndex","visibleColumnGroupHeader","groupStructure","firstVisibleColumnIndex","leftOverflow","_column$computedWidth","elements","headerInfo","depthInfo","depthIndex","groupIndex","useGridColumnHeaders","MemoizedGridColumnHeaders","fastMemo","_rootProps$slotProps","_rootProps$slotProps2","selectedRowCount","selectedRowCountElement","rowCountElement","footerRowCount","paginationElement","preferencesPanel","toolbar","noRowsLabel","GridPaginationRoot","selectLabel","breakpoints","up","_rootProps$rowCount","lastPage","handlePageSizeChange","handlePageChange","isPageSizeIncludedInPageSizeOptions","count","rowsPerPageOptions","rowsPerPage","onPageChange","onRowsPerPageChange","EmptyCell","withBorderColor","refProp","selected","hovered","styleProp","containerWidth","focusedCellColumnIndexNotInRange","isNotVisible","onClick","onDoubleClick","onMouseEnter","onMouseLeave","onMouseOut","onMouseOver","treeDepth","editRowsState","handleRef","ariaRowIndex","editing","ResizeObserver","resizeObserver","entry","borderBoxSize","blockSize","contentRect","observe","disconnect","propHandler","publishClick","CellComponent","rowReordering","getCell","_editRowsState$rowId$","_editRowsState$rowId","disableDragEvents","editCellState","cellIsNotVisible","showRightBorder","indexRelativeToAllColumns","numberOfBaseSizes","maximumSize","rowStyle","property","parseInt","rowClassNames","_currentPage$range","randomNumber","rowType","cells","contentWidth","skeletonCell","emptyCellWidth","eventHandlers","MemoizedGridRow","GridRowCountRoot","margin","GridSelectedRowCountRoot","GridSelectedRowCount","rowSelectedText","GridMainContainerRoot","flexGrow","GridMainContainer","_rootProps$experiment","getAriaAttributes","useGridAriaAttributes","ariaAttributes","ColumnHeadersProps","rootRef","cellTabIndexState","elementToObserve","animationFrame","observer","cancelAnimationFrame","unobserve","columnHeadersRef","columnsContainerRef","hasDimensions","footer","GridOverlayWrapperRoot","shouldForwardProp","prop","overlayWrapper","overlayType","GridOverlayWrapperInner","overlayWrapperInner","inner","GridOverlayWrapper","_viewportInnerSize$he","_viewportInnerSize$wi","setViewportInnerSize","handleViewportSizeChange","_apiRef$current$getRo3","_apiRef$current$getRo4","showNoResultsOverlay","overlay","_rootProps$slotProps3","noRowsOverlay","noResultsOverlay","loadingOverlay","hasActions","getActions","GridActionsCell","focusElementRef","focusedButtonIndex","setFocusedButtonIndex","setOpen","buttonRef","ignoreCallToFocus","touchRippleRefs","menuId","buttonId","iconButtons","showInMenu","menuButtons","numberOfButtons","stop","preventScroll","focusableButtonIndex","o","hideMenu","handleTouchRippleRef","instance","handleButtonClick","actionsCell","getNewIndex","_options","indexMod","newIndex","stopPropagation","button","touchRippleRef","baseIconButton","moreActionsIcon","fontSize","onClose","menuList","autoFocusItem","closeMenu","renderActionsCell","GridBooleanCellRaw","booleanCellTrueIcon","booleanCellFalseIcon","titleAccess","GridBooleanCell","renderBooleanCell","cachedSupportsPreventScroll","doesSupportPreventScroll","_excluded3","_excluded4","EMPTY_CELL_PARAMS","isSelectionMode","GridCellWrapper","cellParamsWithAPI","e","managesOwnFocus","rootClasses","classNames","updatedRow","editCellStateRest","_rootProps$experiment2","childrenProp","onMouseDown","onMouseUp","onKeyUp","onDragEnter","onDragOver","valueToRender","cellRef","publishMouseUp","publishMouseDown","border","activeElement","focusableElement","scrollPosition","handleFocus","valueString","draggableEventHandlers","MemoizedCellWrapper","GridCellV7","_getActions","_rootProps$unstable_c","_rootProps$experiment4","canManageOwnFocus","unstable_cellSelection","MemoizedGridCellV7","GridEditBooleanCell","idProp","onValueChange","inputRef","valueState","setValueState","handleChange","htmlFor","baseCheckbox","onChange","renderEditBooleanCell","StyledInputBase","GridEditDateCell","valueProp","inputProps","isDateTime","valueTransformed","parsedDate","formattedDate","getTimezoneOffset","substr","parsed","formatted","parseValueToDate","setFullYear","hours","minutes","newFormattedDate","newParsedDate","_valueTransformed$par","_state$parsed","fullWidth","renderEditDateCell","GridEditInputCellRoot","editInputCell","typography","body2","GridEditInputCell","meta","endAdornment","loadIcon","renderEditInputCell","GridEditSingleSelectCell","_baseSelectProps$nati","initialOpen","getOptionLabelProp","getOptionValueProp","isSelectNative","baseSelect","MenuProps","otherBaseSelectProps","_inputRef$current","formattedTargetValue","onOpen","isKeyboardEvent","baseSelectOption","renderEditSingleSelectCell","counter","toggleFilter","getColumnHeaderParams","iconButton","columnFilteredIcon","baseTooltip","enterDelay","badgeContent","ColumnHeaderMenuIcon","columnMenuId","columnMenuButtonId","iconButtonRef","handleMenuIconClick","columnMenuIcon","isColumnSorted","isColumnFiltered","isColumnNumeric","_colDef$sortingOrder","_colDef$headerName","sortIndex","separatorSide","showColumnMenuIcon","setShowColumnMenuIcon","onDragStart","onDragEnd","columnHeaderSeparatorProps","handleExited","GridColumnHeaderMenu","ContentComponent","contentComponentProps","onExited","columnHeaderFilterIconButton","hideSortIcons","GridColumnHeaderSortIcon","draggableContainerProps","GridColumnHeaderSeparatorSides","GridColumnHeaderSeparatorRaw","side","Right","resizing","stopClick","columnResizeIcon","GridColumnHeaderSeparator","GridColumnHeaderSortIconRaw","iconElement","icons","iconProps","columnUnsortedIcon","getIcon","GridColumnHeaderTitleRoot","columnHeaderTitle","textOverflow","fontWeight","ColumnHeaderInnerTitle","GridColumnHeaderTitle","titleRef","tooltip","setTooltip","handleMouseOver","isOver","ariaSort","draggable","columnWidth","GridIconButtonContainerRoot","iconButtonContainer","GridIconButtonContainer","GridCellCheckboxForwardRef","isChecked","checkboxElement","rippleRef","_checkboxElement$curr","handleKeyDown","isSelectable","GridCellCheckboxRenderer","GridHeaderCheckbox","tabIndexState","paginatedVisibleRowIds","filteredSelection","selectionCandidates","currentSelectionSize","isIndeterminate","handleSelectionChange","p","indeterminate","GridFooterContainerRoot","justifyContent","borderTop","GridFooterContainer","GridOverlayRoot","alignSelf","columnHeadersStyles","columnSeparator","columnHeaderStyles","menuIcon","GridRootStyles","aggregationColumnHeader","aggregationColumnHeaderLabel","autosizing","editBooleanCell","cellContent","cellSkeleton","checkboxInput","headerFilterRow","columnHeaderTitleContainer","filterIcon","iconSeparator","menuIconButton","menuOpen","rowReorderCellPlaceholder","rowReorderCell","sortIcon","treeDataGroupingCell","treeDataGroupingCellToggle","detailPanelToggleCell","borderColor","TableCell","divider","getBorderColor","radius","fontWeightMedium","background","defaultChannel","disabledOpacity","default","flex","borderWidth","borderStyle","outline","overflowAnchor","borderBottomColor","groupingCriteriaCell","WebkitTapHighlightColor","outlineWidth","outlineOffset","shorter","borderBottomWidth","borderBottomStyle","touchAction","pointerEvents","breakInside","selectedOpacity","paper","booleanCell","secondary","gridGap","rowReorderCellContainer","borderRightWidth","borderRightStyle","groupingCriteriaCellToggle","densityValue","rootContainerRef","mountedState","setMountedState","GridMenuRoot","menu","modal","GridMenu","savedFocusRef","_savedFocusRef$curren","_savedFocusRef$curren2","HTMLElement","handleClickAway","basePopper","anchorEl","placement","TransitionProps","onClickAway","mouseEvent","popperOnExited","labelledby","GRID_COLUMN_MENU_SLOTS","columnMenuSortItem","GridColumnMenuSortItem","columnMenuFilterItem","GridColumnMenuFilterItem","columnMenuColumnsItem","GridColumnMenuColumnsItem","GRID_COLUMN_MENU_SLOT_PROPS","displayOrder","GridGenericColumnMenu","defaultSlotProps","orderedSlots","addDividers","processedComponents","processedSlotProps","mergedProps","currentSlotProps","defaultItems","userItems","defaultComponentKeys","sorted","leftItemProps","rightItemProps","isFinite","itemProps","processedComponentProps","customProps","Divider","useGridColumnMenuSlots","GridColumnMenuContainer","Component","otherProps","StyledMenuList","handleListKeyDown","autoFocus","showFilter","columnMenuFilterIcon","GridColumnMenuHideItem","toggleColumn","columnMenuHideIcon","GridColumnMenuManageItem","showColumns","columnMenuManageColumnsIcon","onSortMenuItemClick","getLabel","columnMenuSortAscendingIcon","columnMenuSortDescendingIcon","columnsPanelRow","GridColumnsPanelRoot","GridColumnsPanelRowRoot","GridIconButtonRoot","defaultSearchPredicate","searchValue","_rootProps$slotProps4","searchInputRef","setSearchValue","searchPredicate","autoFocusSearchField","disableHideAllButton","disableShowAllButton","getTogglableColumns","sortedColumns","toggleAllColumns","togglableColumns","handleSearchValueChange","togglableSortedColumns","firstSwitchRef","firstHideableColumnFound","isFirstHideableColumn","baseTextField","placeholder","control","baseSwitch","columnReorderIcon","baseButton","gridPanelClasses","GridPanelRoot","panel","GridPaperRoot","isPlaced","setIsPlaced","modifiers","enabled","phase","effect","setAnchorEl","columnHeadersElement","elevation","GridPanelContentRoot","panelContent","GridPanelContent","GridPanelFooterRoot","panelFooter","GridPanelFooter","GridPanelHeaderRoot","panelHeader","GridPanelHeader","GridPanelWrapperRoot","panelWrapper","isEnabled","GridPanelWrapper","disableEnforceFocus","TrapFocus","_preferencePanelState","GridFilterFormRoot","filterForm","FilterFormDeleteIcon","filterFormDeleteIcon","FilterFormLogicOperatorInput","filterFormLogicOperatorInput","FilterFormColumnInput","filterFormColumnInput","FilterFormOperatorInput","filterFormOperatorInput","FilterFormValueInput","filterFormValueInput","getColumnLabel","GridFilterForm","_rootProps$slotProps5","_rootProps$slotProps6","_rootProps$slotProps7","_rootProps$slotProps8","_currentColumn$filter2","hasMultipleFilters","deleteFilter","applyFilterChanges","multiFilterOperator","showMultiFilterOperators","disableMultiFilterOperator","applyMultiFilterOperatorChanges","logicOperators","And","Or","columnsSort","filterColumns","deleteIconProps","logicOperatorInputProps","operatorInputProps","columnInputProps","valueInputProps","filterableColumns","columnSelectId","columnSelectLabelId","operatorSelectId","operatorSelectLabelId","deleteIcon","logicOperatorInput","columnInput","operatorInput","valueInput","valueRef","filterSelectorRef","hasLogicOperatorColumn","baseFormControlProps","baseFormControl","isBaseSelectNative","baseInputLabelProps","baseInputLabel","baseSelectOptionProps","valueInputPropsOther","filteredFields","currentFilters","sortedFilteredColumns","currentColumn","currentOperator","_currentColumn$filter","changeColumn","newOperator","eraseItemValue","changeOperator","changeLogicOperator","_valueRef$current","filterPanelDeleteIcon","getLogicOperatorLocaleKey","applyValue","BooleanOperatorContainer","GridFilterInputBoolean","clearButton","labelProp","others","filterValueState","setFilterValueState","selectId","baseSelectProps","onFilterChange","shrink","notched","displayEmpty","GridFilterInputDate","_item$value","InputProps","filterTimeout","applying","setIsApplying","_item$value2","itemValue","InputLabelProps","GridFilterInputMultipleSingleSelect","_resolvedColumn","_resolvedColumn2","helperText","TextFieldProps","resolvedColumn","isOptionEqualToValue","resolvedValueOptions","_resolvedColumn3","resolvedFormattedValueOptions","filteredValues","formattedOption","A","multiple","filterOptions","renderTags","getTagProps","baseChip","renderInput","GridFilterInputMultipleValue","freeSolo","inputValue","renderSingleSelectOptions","OptionComponent","SingleSelectOperatorContainer","GridFilterInputSingleSelect","_rootProps$slotProps$","currentValueOptions","_itemValue","GridFilterInputValue","newItem","fromInput","getGridFilter","lastFilterRef","placeholderFilter","filterFormProps","getColumnForNewFilter","disableAddFilterButton","disableRemoveAllButton","applyFilter","applyFilterLogicOperator","getDefaultFilter","nextColumnWithOperator","nextFieldName","_colDef$filterOperato","getNewFilter","nextColumnFieldName","shouldCloseFilterPanel","newFilter","startIcon","filterPanelAddIcon","filterPanelRemoveAllIcon","isSingleSelectColDef","getValueFromValueOptions","optionValue","GridCsvExportMenuItem","GridPrintExportMenuItem","GridToolbarExport","excelOptions","preProcessedButtons","GridToolbarExportContainer","exportButtonId","exportMenuId","handleMenuClose","exportIcon","prevOpen","GRID_EXPERIMENTAL_ENABLED","getDataGridUtilityClass","GRID_DETAIL_PANEL_TOGGLE_FIELD","GRID_DEFAULT_LOCALE_TEXT","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","toolbarQuickFilterPlaceholder","toolbarQuickFilterLabel","toolbarQuickFilterDeleteIconLabel","toolbarExport","toolbarExportLabel","toolbarExportCSV","toolbarExportPrint","toolbarExportExcel","columnsPanelTextFieldLabel","columnsPanelTextFieldPlaceholder","columnsPanelDragIconLabel","columnsPanelShowAllButton","columnsPanelHideAllButton","filterPanelAddFilter","filterPanelRemoveAll","filterPanelDeleteIconLabel","filterPanelLogicOperator","filterPanelOperator","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","filterPanelInputLabel","filterPanelInputPlaceholder","filterOperatorContains","filterOperatorEquals","filterOperatorStartsWith","filterOperatorEndsWith","filterOperatorIs","filterOperatorNot","filterOperatorAfter","filterOperatorOnOrAfter","filterOperatorBefore","filterOperatorOnOrBefore","filterOperatorIsEmpty","filterOperatorIsNotEmpty","filterOperatorIsAnyOf","headerFilterOperatorContains","headerFilterOperatorEquals","headerFilterOperatorStartsWith","headerFilterOperatorEndsWith","headerFilterOperatorIs","headerFilterOperatorNot","headerFilterOperatorAfter","headerFilterOperatorOnOrAfter","headerFilterOperatorBefore","headerFilterOperatorOnOrBefore","headerFilterOperatorIsEmpty","headerFilterOperatorIsNotEmpty","headerFilterOperatorIsAnyOf","filterValueAny","filterValueTrue","filterValueFalse","columnMenuLabel","columnMenuShowColumns","columnMenuManageColumns","columnMenuFilter","columnMenuHideColumn","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerRowSelected","footerTotalRows","footerTotalVisibleRows","visibleCount","totalCount","checkboxSelectionHeaderName","checkboxSelectionSelectAllRows","checkboxSelectionUnselectAllRows","checkboxSelectionSelectRow","checkboxSelectionUnselectRow","booleanCellTrueLabel","booleanCellFalseLabel","actionsCellMore","pinToLeft","pinToRight","unpin","treeDataGroupingHeaderName","treeDataExpand","treeDataCollapse","groupingColumnHeaderName","groupColumn","unGroupColumn","detailPanelToggle","expandDetailPanel","collapseDetailPanel","MuiTablePagination","rowReorderingHeaderName","aggregationMenuItemHeader","aggregationFunctionLabelSum","aggregationFunctionLabelAvg","aggregationFunctionLabelMin","aggregationFunctionLabelMax","aggregationFunctionLabelSize","Provider","gridColumnGroupingSelector","gridColumnGroupsUnwrappedModelSelector","_columnGrouping$unwra","gridColumnGroupsLookupSelector","_columnGrouping$looku","gridColumnGroupsHeaderStructureSelector","_columnGrouping$heade","gridColumnGroupsHeaderMaxDepthSelector","_columnGrouping$maxDe","gridColumnMenuSelector","gridColumnsStateSelector","gridColumnFieldsSelector","gridColumnLookupSelector","gridColumnDefinitionsSelector","allFields","gridColumnVisibilityModelSelector","gridVisibleColumnDefinitionsSelector","gridVisibleColumnFieldsSelector","gridColumnPositionsSelector","currentPosition","gridColumnsTotalWidthSelector","colCount","gridFilterableColumnDefinitionsSelector","gridFilterableColumnLookupSelector","COLUMNS_DIMENSION_PROPERTIES","hydrateColumnsWidth","rawState","viewportInnerWidth","columnsLookup","totalFlexUnits","widthAllocatedBeforeFlex","flexColumns","columnField","initialFreeSpace","computedColumnWidths","uniqueFlexColumns","flexColumnsLookup","frozenFields","freeze","frozen","loopOverFlexItems","violationsLookup","remainingFreeSpace","flexUnits","totalViolation","computeFlexColumnsWidth","getDefaultColTypeDef","createColumnsState","isInsideStateInitializer","currentState","columnsToKeep","columnsToUpsertLookup","existingState","columnsStateWithPortableColumns","columnsWithUpdatedDimensions","orderedFieldsLookup","cleanOrderedFields","newOrderedFields","newColumnLookup","newColDef","applyInitialState","mergeColumnsState","getFirstNonSpannedColumnToRender","firstNonSpannedColumnToRender","getFirstColumnIndexToRender","getTotalHeaderHeight","gridDensitySelector","gridDensityValueSelector","gridDensityFactorSelector","gridEditRowsStateSelector","gridFilterStateSelector","gridFilterModelSelector","filterState","gridQuickFilterValuesSelector","gridVisibleRowsLookupSelector","gridFilteredRowsLookupSelector","gridFilteredDescendantCountLookupSelector","gridExpandedSortedRowEntriesSelector","gridExpandedSortedRowIdsSelector","visibleSortedRowEntries","gridFilteredSortedRowEntriesSelector","gridFilteredSortedRowIdsSelector","filteredSortedRowEntries","gridFilteredSortedTopLevelRowEntriesSelector","rowTreeDepth","_rowTree$row$id","gridExpandedRowCountSelector","gridFilteredTopLevelRowCountSelector","visibleSortedTopLevelRows","gridFilterActiveItemsSelector","_filterModel$items","gridFilterActiveItemsLookupSelector","activeFilters","res","getDefaultGridFilterModel","getPublicApiRef","hasEval","cleanFilterItem","cleanItem","filterModelDisableMultiColumnsFilteringWarning","filterModelMissingItemIdWarning","filterModelMissingItemOperatorWarning","sanitizeFilterModel","hasSeveralItems","hasItemsWithoutIds","hasItemWithoutOperator","mergeStateWithFilterModel","filteringState","removeDiacritics","normalize","getFilterCallbackFromItem","_filterItem$value","parser","x","newFilterItem","hasUserFunctionLegacy","hasUserFunctionV7","applyFilterOnRow","v7","getRowValue","filterItemsApplierId","buildAggregatedFilterApplier","isRowMatchingFilterItems","Function","getHasEval","shouldApplyFilter","resultPerItemId","filterItemCore","JSON","stringify","replaceAll","shouldApplyItem","buildAggregatedFilterItemsApplier","isRowMatchingQuickFilter","_filterModel$quickFil","_filterModel$quickFil2","_filterModel$quickFil3","appliersPerField","quickFilterValue","usedCellParams","outer","v","_usedCellParams$field","buildAggregatedQuickFilterApplier","_isRowMatchingFilterI","_isRowMatchingQuickFi","isNotNull","passFilterLogic","allFilterItemResults","allQuickFilterResults","cleanedFilterItems","filterModelItems","cleanedFilterItemResults","cleanedQuickFilterResults","_filterModel$logicOpe","filterItemPredicate","filterItemResult","_filterModel$quickFil4","quickFilterValuePredicate","quickFilterValueResult","gridFocusStateSelector","gridFocusCellSelector","focusState","gridFocusColumnHeaderSelector","unstable_gridFocusColumnHeaderFilterSelector","unstable_gridFocusColumnGroupHeaderSelector","gridTabIndexStateSelector","gridTabIndexCellSelector","gridTabIndexColumnHeaderSelector","unstable_gridTabIndexColumnHeaderFilterSelector","unstable_gridTabIndexColumnGroupHeaderSelector","unstable_gridHeaderFilteringStateSelector","headerFiltering","unstable_gridHeaderFilteringEditFieldSelector","headerFilteringState","unstable_gridHeaderFilteringMenuSelector","gridPaginationModelSelector","gridPageSelector","gridPageSizeSelector","gridPageCountSelector","gridPaginationRowRangeSelector","visibleSortedTopLevelRowEntries","topLevelFirstRowIndex","topLevelLastRowIndex","topLevelFirstRow","topLevelRowsInCurrentPageCount","topLevelRowAdded","gridPaginatedVisibleSortedGridRowEntriesSelector","paginationRange","gridPaginatedVisibleSortedGridRowIdsSelector","visibleSortedRowIds","defaultPageSize","getPageCount","ceil","getDefaultGridPaginationModel","getValidPage","throwIfPageSizeExceedsTheLimit","signatureProp","gridPreferencePanelStateSelector","GridPreferencePanelsValue","gridRowSelectionStateSelector","selectedGridRowsCountSelector","selectedGridRowsSelector","selectedIdsLookupSelector","gridRowsStateSelector","gridRowCountSelector","gridRowsLoadingSelector","gridTopLevelRowCountSelector","gridRowsLookupSelector","gridRowsDataRowIdToIdLookupSelector","gridRowTreeSelector","gridRowGroupingNameSelector","gridRowTreeDepthsSelector","gridRowMaximumTreeDepthSelector","nodeCount","gridDataRowIdsSelector","gridAdditionalRowGroupsSelector","additionalRowGroups","gridPinnedRowsSelector","_rawPinnedRows$bottom","_rawPinnedRows$top","rawPinnedRows","rowEntry","_rowEntry$model","_rowEntry$model2","gridPinnedRowsCountSelector","GRID_ROOT_GROUP_ID","GRID_ID_AUTOGENERATED","buildRootGroup","groupingField","isAutoGenerated","childrenFromPath","checkGridRowIdIsValid","detailErrorMessage","getRowIdFromRowModel","createRowsInternalCache","getTopLevelRowCount","getRowsStateFromCache","unProcessedTree","unProcessedTreeDepths","unProcessedDataRowIds","groupingParamsWithHydrateRows","modify","idToActionLookup","isAutoGeneratedRow","getTreeNodeDescendants","parentId","validDescendants","childDescendants","updateCacheWithNewRows","_previousCache$update","_previousCache$update2","_previousCache$update3","uniqueUpdates","partialUpdates","alreadyAppliedActionsToRemove","partialRow","actionAlreadyAppliedToRow","_action","oldRow","actionTypeWithActionsToRemove","actionType","idsToRemove","calculatePinnedRowsHeight","getMinimalContentHeight","MissingRowIdError","getBaseCellParams","cellFocus","cellTabIndex","_getRowId","getRowElement","paramsApi","gridSortingStateSelector","gridSortedRowIdsSelector","sortingState","gridSortedRowEntriesSelector","sortedIds","gridSortModelSelector","gridSortColumnLookupSelector","sortModelDisableMultiColumnsSortingWarning","sanitizeSortModel","mergeStateWithSortModel","buildAggregatedSortingApplier","comparatorList","getSortCellParams","comparator","parseSortItem","rowList","compareRows","row1","row2","sortCellParams1","sortCellParams2","getNextGridSortDirection","currentIdx","gridNillComparator","v1","v2","gridStringOrNumberComparator","nillResult","gridNumberComparator","gridDateComparator","gridVirtualizationSelector","virtualization","gridVirtualizationEnabledSelector","gridVirtualizationColumnEnabledSelector","enabledForColumns","binarySearch","sliceStart","sliceEnd","pivot","getRenderableIndexes","areRenderContextsEqual","context1","context2","MEMOIZE_OPTIONS","maxSize","_currentPage$range3","_currentPage$range4","onRenderZonePositioning","renderZoneMinColumnIndex","renderZoneMaxColumnIndex","getRowProps","selectedRowsLookup","renderZoneRef","setRenderContextState","containerDimensions","setContainerDimensions","prevTotalWidth","hoveredRowId","setHoveredRowId","rowStyleCache","prevGetRowProps","prevRootRowStyle","getRenderedColumnsRef","indexOfColumnWithFocusedCell","getNearestIndexToRender","_currentPage$range2","lastMeasuredIndexRelativeToAllRows","allRowsMeasured","lastMeasuredIndexRelativeToCurrentPage","interval","exponentialSearch","computeRenderContext","updateRenderZonePosition","initialFirstColumnToRender","initialRenderContext","topRowsScrolledSincePreviousRender","bottomRowsScrolledSincePreviousRender","topColumnsScrolledSincePreviousRender","bottomColumnsScrolledSincePreviousRender","shouldSetState","handleWheel","handleTouchMove","indexOfRowWithFocusedCell","_params$id","needsHorizontalScrollbar","contentSize","shouldExtendContent","overflowX","overflowY","onRowRender","availableSpace","rowIndexOffset","renderedRows","isRowWithFocusedCellNotInRange","rowWithFocusedCell","isColumnWihFocusedCellNotInRange","rootRowStyle","rootRowProps","isRowWithFocusedCellRendered","_currentPage$range5","isRowNotVisible","lastVisibleRowIndex","columnWithFocusedCellNotInRange","renderedColumnsWithFocusedCell","tabbableCell","_ref2","rowProps","onScroll","onWheel","onTouchMove","virtualizationStateInitializer","setVirtualization","unstable_setColumnVirtualization","TimerBasedCleanupTracking","timeouts","cleanupTimeout","object","unsubscribe","unregisterToken","cleanupToken","unregister","reset","FinalizationRegistryBasedCleanupTracking","registry","FinalizationRegistry","GridSignature","ObjectToBeRetainedByReact","createUseGridApiEventHandler","registryContainer","cleanupTokensCounter","objectRetainedByReact","subscription","handlerRef","cleanupTokenRef","enhancedHandler","_handlerRef$current","_subscription$current","_handlerRef$current2","_subscription$current2","unstable_resetCleanupTracking","_registryContainer$re","optionsSubscriberOptions","useGridApiOptionHandler","apiMethods","pinnedRowsCount","treeData","newLogger","added","setAdded","wrapHandler","targetElement","boundElem","GridPrivateApiContext","applySelector","selector","acceptsApiRef","isOutputSelector","defaultCompare","is","objectShallowCompare","createRefs","equals","refs","didInit","getVisibleRows","UNINITIALIZED","init","initArg","EMPTY","useOnMount","Timeout","currentId","disposeEffect","delay","GridArrowUpwardIcon","d","GridArrowDownwardIcon","GridKeyboardArrowRight","GridExpandMoreIcon","GridFilterListIcon","GridFilterAltIcon","GridSearchIcon","GridMenuIcon","GridCheckCircleIcon","GridColumnIcon","GridSeparatorIcon","GridViewHeadlineIcon","GridTableRowsIcon","GridViewStreamIcon","GridTripleDotsVerticalIcon","GridCloseIcon","GridAddIcon","GridRemoveIcon","GridLoadIcon","GridDragIcon","GridSaveAltIcon","GridCheckIcon","GridMoreVertIcon","GridVisibilityOffIcon","GridViewColumnIcon","GridClearIcon","GridDeleteIcon","GridDeleteForeverIcon","isLeaf","GridEditModes","GridCellModes","GridRowModes","GridLogicOperator","GridCellEditStartReasons","GridCellEditStopReasons","GridRowEditStartReasons","GridRowEditStopReasons","createSelectorCreator","memoize","_len","arguments","memoizeOptionsFromArgs","_key","_len2","funcs","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","pop","_directlyPassedOption2","finalMemoizeOptions","dependencies","dep","dependencyTypes","getDependencies","memoizedResultFunc","assign","lastResult","recomputations","resetRecomputations","createSelector","cacheContainer","WeakMap","checkIsAPIRef","DEFAULT_INSTANCE_ID","f","rest","stateOrApiRef","instanceIdParam","isAPIRef","va","vb","vc","vd","ve","createSelectorMemoized","selectorArgs","_cache$get","_cache$get3","cacheKey","_cache$get2","newSelector","isOverflown","scrollHeight","scrollWidth","findParentElementFromClassName","elem","escapeOperandAttributeSelector","operand","getGridColumnHeaderElement","getGridRowElementSelector","getGridRowElement","getGridCellElement","isEventTargetInPortal","nodeType","fastObjectShallowCompare","aLength","bLength","isEscapeKey","isEnterKey","isTabKey","isSpaceKey","isPrintableKey","isNavigationKey","isHomeOrEndKeys","isArrowKeys","isPageKeys","isHideMenuKey","isNumber","isFunction","isObject","localStorageAvailable","setItem","removeItem","err","escapeRegExp","clamp","isDeepEqual","entriesA","entryA","ArrayBuffer","isView","source","flags","valueOf","hasOwnProperty","randomNumberBetween","seed","imul","deepClone","obj","structuredClone","parse","buildWarning","gravity","alreadyWarned","cleanMessage","NOT_FOUND","defaultEqualityCheck","func","equalityCheckOrOptions","providedOptions","_providedOptions$equa","_providedOptions$maxS","resultEqualityCheck","prev","next","createCacheKeyComparator","put","getEntries","cacheIndex","createLruCache","memoized","matchingEntry","clearCache"],"sourceRoot":""}