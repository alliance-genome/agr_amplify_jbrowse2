{"version":3,"file":"static/js/4630.e01774b4.chunk.js","mappings":"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","sources":["../../../packages/core/ui/ErrorMessageStackTraceDialog.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  Link,\n  Typography,\n} from '@mui/material'\n\nimport { SourceMapConsumer } from 'source-map-js'\nimport copy from 'copy-to-clipboard'\n\n// locals\nimport Dialog from './Dialog'\nimport LoadingEllipses from './LoadingEllipses'\n\nfunction Link2({\n  href,\n  children,\n}: {\n  href: string\n  children: React.ReactNode\n}) {\n  return (\n    <Link target=\"_blank\" href={href}>\n      {children}\n    </Link>\n  )\n}\n\nasync function myfetch(uri: string) {\n  const res = await fetch(uri)\n  if (!res.ok) {\n    throw new Error(`HTTP ${res.status} fetching ${uri}: ${await res.text()}`)\n  }\n  return res\n}\n\nasync function myfetchjson(uri: string) {\n  const res = await myfetch(uri)\n  return res.json()\n}\n\nasync function myfetchtext(uri: string) {\n  const res = await myfetch(uri)\n  return res.text()\n}\n\n// produce a source-map resolved stack trace\n// reference code https://stackoverflow.com/a/77158517/2129219\nconst sourceMaps: Record<string, SourceMapConsumer> = {}\nasync function getSourceMapFromUri(uri: string) {\n  if (sourceMaps[uri] != undefined) {\n    return sourceMaps[uri]\n  }\n  const uriQuery = new URL(uri).search\n  const currentScriptContent = await myfetchtext(uri)\n\n  let mapUri =\n    new RegExp(/\\/\\/# sourceMappingURL=(.*)/).exec(currentScriptContent)?.[1] ||\n    ''\n  mapUri = new URL(mapUri, uri).href + uriQuery\n\n  const data = await myfetchjson(mapUri)\n  const map = new SourceMapConsumer(data)\n  sourceMaps[uri] = map\n  return map\n}\n\nasync function mapStackTrace(stack: string) {\n  const stackLines = stack.split('\\n')\n  const mappedStack = []\n\n  for (const line of stackLines) {\n    const match = new RegExp(/(.*)(https?:\\/\\/.*):(\\d+):(\\d+)/).exec(line)\n    if (match === null) {\n      mappedStack.push(line)\n      continue\n    }\n\n    const uri = match[2]\n    const consumer = await getSourceMapFromUri(uri)\n\n    const originalPosition = consumer.originalPositionFor({\n      line: parseInt(match[3]),\n      column: parseInt(match[4]),\n    })\n\n    if (\n      originalPosition.source === null ||\n      originalPosition.line === null ||\n      originalPosition.column === null\n    ) {\n      mappedStack.push(line)\n      continue\n    }\n\n    mappedStack.push(\n      `${originalPosition.source}:${originalPosition.line}:${\n        originalPosition.column + 1\n      }`,\n    )\n  }\n\n  return mappedStack.join('\\n')\n}\n\nconst MAX_ERR_LEN = 10_000\n\n// Chrome has the error message in the stacktrace, firefox doesn't\nfunction stripMessage(trace: string, error: unknown) {\n  if (trace.startsWith('Error:')) {\n    // remove the error message, which can be very long due to mobx-state-tree\n    // stuff, to get just the stack trace\n    const err = `${error}`\n    return trace.slice(err.length)\n  } else {\n    return trace\n  }\n}\n\nfunction Contents({ text, extra }: { text: string; extra?: unknown }) {\n  const err = encodeURIComponent(\n    [\n      'I got this error from JBrowse, here is the stack trace:\\n',\n      '```',\n      text,\n      '```',\n      extra ? `supporting data: ${JSON.stringify(extra, null, 2)}` : '',\n    ].join('\\n') + '\\n',\n  )\n\n  const err2 = [\n    text,\n    extra ? `supporting data: ${JSON.stringify(extra, null, 2)}` : '',\n  ].join('\\n')\n\n  const email = 'jbrowse2@berkeley.edu'\n  const githubLink = `https://github.com/GMOD/jbrowse-components/issues/new?labels=bug&title=JBrowse+issue&body=${err}`\n  const emailLink = `mailto:${email}?subject=JBrowse%202%20error&body=${err}`\n\n  return (\n    <>\n      <Typography>\n        Post a new issue at <Link2 href={githubLink}>GitHub</Link2> or send an\n        email to <Link2 href={emailLink}>{email}</Link2>{' '}\n      </Typography>\n      <pre\n        style={{\n          background: 'lightgrey',\n          border: '1px solid black',\n          overflow: 'auto',\n          margin: 20,\n          maxHeight: 300,\n        }}\n      >\n        {err2}\n      </pre>\n    </>\n  )\n}\n\nexport default function ErrorMessageStackTraceDialog({\n  error,\n  onClose,\n  extra,\n}: {\n  onClose: () => void\n  error: unknown\n  extra?: unknown\n}) {\n  const [mappedStackTrace, setMappedStackTrace] = useState<string>()\n  const [secondaryError, setSecondaryError] = useState<unknown>()\n  const [clicked, setClicked] = useState(false)\n  const stackTracePreProcessed = `${typeof error === 'object' && error !== null && 'stack' in error ? error.stack : ''}`\n  const errorText = error ? `${error}` : ''\n  const stackTrace = stripMessage(stackTracePreProcessed, errorText)\n\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      try {\n        const res = await mapStackTrace(stackTrace)\n        setMappedStackTrace(res)\n      } catch (e) {\n        console.error(e)\n        setMappedStackTrace(stackTrace)\n        setSecondaryError(e)\n      }\n    })()\n  }, [stackTrace])\n\n  const errorBoxText = [\n    secondaryError\n      ? 'Error loading source map, showing raw stack trace below:'\n      : '',\n    errorText.length > MAX_ERR_LEN\n      ? `${errorText.slice(0, MAX_ERR_LEN)}...`\n      : errorText,\n    mappedStackTrace || 'No stack trace available',\n    // @ts-expect-error add version info at bottom if we are in jbrowse-web\n    window.JBrowseSession ? `JBrowse ${window.JBrowseSession.version}` : '',\n  ]\n    .filter(f => !!f)\n    .join('\\n')\n\n  return (\n    <Dialog open onClose={onClose} title=\"Stack trace\" maxWidth=\"xl\">\n      <DialogContent>\n        {mappedStackTrace === undefined ? (\n          <LoadingEllipses variant=\"h6\" />\n        ) : (\n          <Contents text={errorBoxText} extra={extra} />\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => {\n            copy(errorBoxText)\n            setClicked(true)\n            setTimeout(() => setClicked(false), 1000)\n          }}\n        >\n          {clicked ? 'Copied!' : 'Copy stack trace to clipboard'}\n        </Button>\n        <Button variant=\"contained\" color=\"primary\" onClick={onClose}>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n"],"names":["Link2","href","children","React","Link","target","async","myfetch","uri","res","fetch","ok","Error","status","text","sourceMaps","getSourceMapFromUri","undefined","uriQuery","URL","search","currentScriptContent","myfetchtext","mapUri","RegExp","exec","data","json","myfetchjson","map","SourceMapConsumer","MAX_ERR_LEN","Contents","extra","err","encodeURIComponent","JSON","stringify","join","err2","email","githubLink","emailLink","Typography","style","background","border","overflow","margin","maxHeight","ErrorMessageStackTraceDialog","error","onClose","mappedStackTrace","setMappedStackTrace","useState","secondaryError","setSecondaryError","clicked","setClicked","errorText","stackTrace","trace","startsWith","slice","length","stripMessage","stack","useEffect","stackLines","split","mappedStack","line","match","push","originalPosition","originalPositionFor","parseInt","column","source","mapStackTrace","e","console","errorBoxText","window","JBrowseSession","version","filter","f","Dialog","open","title","maxWidth","DialogContent","LoadingEllipses","variant","DialogActions","Button","color","onClick","copy","setTimeout"],"sourceRoot":""}