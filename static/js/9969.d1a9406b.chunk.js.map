{"version":3,"file":"static/js/9969.d1a9406b.chunk.js","mappings":"uPAaMA,GAA0BC,EAAAA,EAAAA,WAAS,SAAAC,GAQrC,IAPFC,EAAKD,EAALC,MACAC,EAAOF,EAAPE,QACAC,EAASH,EAATG,UAMAC,GAAgCC,EAAAA,EAAAA,UAASF,EAAUG,OAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAxDK,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5B,OACEI,EAAAA,EAAAA,MAACC,EAAAA,OAAM,CAACC,MAAI,EAACX,QAASA,EAASY,MAAM,sBAAqBC,SAAA,EACxDJ,EAAAA,EAAAA,MAACK,EAAAA,EAAa,CAAAD,SAAA,EACZJ,EAAAA,EAAAA,MAACM,EAAAA,EAAK,CAAAF,SAAA,CAAC,6BACsB,KAC3BG,EAAAA,EAAAA,KAAA,UAAAH,UAASI,EAAAA,EAAAA,mBAAkBhB,EAAUiB,oBAA2B,QAElEF,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CACRC,WAAS,EACTC,WAAY,CAAE,cAAe,6BAC7BC,QAAQ,WACRC,MAAOhB,EACPiB,SAAU,SAAAC,GAAC,OAAIjB,EAAYiB,EAAEC,OAAOH,MAAM,EAC1CI,WAAS,QAGbX,EAAAA,EAAAA,KAACY,EAAAA,EAAa,CAAAf,UACZG,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CACLP,QAAQ,YACRQ,MAAM,UACNC,QAAS,WACHxB,GAAYN,GACdF,EAAMiC,oBAAoB/B,EAAWM,GAEvCC,EAAY,IACZR,GACF,EAAEa,SACH,gBAMT,IAEA,W","sources":["../../../plugins/grid-bookmark/src/GridBookmarkWidget/components/EditBookmarkLabelDialog.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  Alert,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n} from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { GridBookmarkModel, IExtendedLabeledRegionModel } from '../model'\nimport { observer } from 'mobx-react'\nimport { assembleLocString } from '@jbrowse/core/util'\n\nconst EditBookmarkLabelDialog = observer(function ({\n  model,\n  onClose,\n  dialogRow,\n}: {\n  model: GridBookmarkModel\n  dialogRow: IExtendedLabeledRegionModel\n  onClose: () => void\n}) {\n  const [newLabel, setNewLabel] = useState(dialogRow.label || '')\n  return (\n    <Dialog open onClose={onClose} title=\"Edit bookmark label\">\n      <DialogContent>\n        <Alert>\n          Editing label for bookmark{' '}\n          <strong>{assembleLocString(dialogRow.correspondingObj)}</strong>:\n        </Alert>\n        <TextField\n          fullWidth\n          inputProps={{ 'data-testid': 'edit-bookmark-label-field' }}\n          variant=\"outlined\"\n          value={newLabel}\n          onChange={e => setNewLabel(e.target.value)}\n          autoFocus\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            if (newLabel && dialogRow) {\n              model.updateBookmarkLabel(dialogRow, newLabel)\n            }\n            setNewLabel('')\n            onClose()\n          }}\n        >\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n\nexport default EditBookmarkLabelDialog\n"],"names":["EditBookmarkLabelDialog","observer","_ref","model","onClose","dialogRow","_useState","useState","label","_useState2","_slicedToArray","newLabel","setNewLabel","_jsxs","Dialog","open","title","children","DialogContent","Alert","_jsx","assembleLocString","correspondingObj","TextField","fullWidth","inputProps","variant","value","onChange","e","target","autoFocus","DialogActions","Button","color","onClick","updateBookmarkLabel"],"sourceRoot":""}