{"version":3,"file":"static/js/8552.3b42e631.chunk.js","mappings":"sQAIoD,uJAIlC,OAJkC,oCAIxCA,YAAM,IAyC+B,OAzC/B,yEAEhB,6FAEmE,OAD3DC,EAAKC,KAAKC,cACVC,GAAOC,EAAAA,EAAAA,cAAaH,KAAKI,QAAQ,sBAAuBL,GAAG,SAC9CG,EAAKG,SAAS,QAAO,OAA9B,OAAJC,EAAI,yBACHC,OAAOC,YACZF,EACGG,MAAM,cACNC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,MAAM,IACjBC,QAAO,SAAAF,GAAC,QAAMA,CAAC,IACfD,KAAI,SAACI,GACJ,MAAuBA,EAAKL,MAAM,MAAK,eACvC,MAAO,CADI,MAAQ,KAErB,MACH,gDACF,kDAhBe,IAgBf,4DAED,8FAMG,OALIT,KAAKF,SACRE,KAAKF,OAASE,KAAKe,WAAWC,OAAM,SAAAC,GAElC,MADA,EAAKnB,YAASoB,EACRD,CACR,KACD,kBACMjB,KAAKF,QAAM,gDACnB,kDAVA,IAUA,iEAED,yGACwBE,KAAKmB,QAAO,OAArB,OAAPC,EAAO,yBACNb,OAAOc,KAAKD,GAASV,KAAI,SAAAY,GAAO,MAAK,CAC1CA,QAAAA,EACAC,MAAO,EACPC,IAAKJ,EAAQE,GACd,KAAE,gDACJ,kDATA,IASA,uBAED,WACE,MAAO,CAAC,CACV,GAAC,2BAED,WAA8C,KAAC,EA7CG,CAEvBG,EAAAA,Y","sources":["../../../plugins/sequence/src/ChromSizesAdapter/ChromSizesAdapter.ts"],"sourcesContent":["import {\n  RegionsAdapter,\n  BaseAdapter,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { openLocation } from '@jbrowse/core/util/io'\n\nexport default class extends BaseAdapter implements RegionsAdapter {\n  // the map of refSeq to length\n  protected setupP?: Promise<{ [key: string]: number }>\n\n  async setupPre() {\n    const pm = this.pluginManager\n    const file = openLocation(this.getConf('chromSizesLocation'), pm)\n    const data = await file.readFile('utf8')\n    return Object.fromEntries(\n      data\n        .split(/\\n|\\r\\n|\\r/)\n        .map(f => f.trim())\n        .filter(f => !!f)\n        .map((line: string) => {\n          const [name, length] = line.split('\\t')\n          return [name, +length]\n        }),\n    )\n  }\n\n  async setup() {\n    if (!this.setupP) {\n      this.setupP = this.setupPre().catch(e => {\n        this.setupP = undefined\n        throw e\n      })\n    }\n    return this.setupP\n  }\n\n  public async getRegions() {\n    const refSeqs = await this.setup()\n    return Object.keys(refSeqs).map(refName => ({\n      refName,\n      start: 0,\n      end: refSeqs[refName],\n    }))\n  }\n\n  public getHeader() {\n    return {}\n  }\n\n  public freeResources(/* { region } */): void {}\n}\n"],"names":["setupP","pm","this","pluginManager","file","openLocation","getConf","readFile","data","Object","fromEntries","split","map","f","trim","filter","line","setupPre","catch","e","undefined","setup","refSeqs","keys","refName","start","end","BaseAdapter"],"sourceRoot":""}