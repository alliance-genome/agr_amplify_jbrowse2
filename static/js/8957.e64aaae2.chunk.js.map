{"version":3,"file":"static/js/8957.e64aaae2.chunk.js","mappings":"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","sources":["../../../plugins/alignments/src/shared/FilterByTag.tsx","../../../node_modules/@mui/material/Link/getTextDecoration.js","../../../node_modules/@mui/material/Link/Link.js","../../../node_modules/@mui/material/Link/linkClasses.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  Link,\n  Paper,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { makeStyles } from 'tss-react/mui'\nimport { IFilter } from '.'\n\nconst useStyles = makeStyles()(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(2),\n  },\n  field: {\n    margin: theme.spacing(2),\n  },\n}))\n\nconst flagNames = [\n  'read paired',\n  'read mapped in proper pair',\n  'read unmapped',\n  'mate unmapped',\n  'read reverse strand',\n  'mate reverse strand',\n  'first in pair',\n  'second in pair',\n  'not primary alignment',\n  'read fails platform/vendor quality checks',\n  'read is PCR or optical duplicate',\n  'supplementary alignment',\n]\n\nfunction Bitmask(props: { flag?: number; setFlag: (arg: number) => void }) {\n  const { flag = 0, setFlag } = props\n  return (\n    <>\n      <TextField\n        type=\"number\"\n        value={flag}\n        onChange={event => setFlag(+event.target.value)}\n      />\n      {flagNames.map((name, index) => {\n        const val = flag & (1 << index)\n        const key = `${name}_${val}`\n        return (\n          <div key={key}>\n            <input\n              type=\"checkbox\"\n              checked={Boolean(val)}\n              onChange={event => {\n                if (event.target.checked) {\n                  setFlag(flag | (1 << index))\n                } else {\n                  setFlag(flag & ~(1 << index))\n                }\n              }}\n            />\n            <label htmlFor={key}>{name}</label>\n          </div>\n        )\n      })}\n    </>\n  )\n}\n\nconst FilterByTagDialog = observer(function (props: {\n  model: {\n    filterBy: IFilter\n    setFilterBy: (arg: IFilter) => void\n  }\n  handleClose: () => void\n}) {\n  const { model, handleClose } = props\n  const { classes } = useStyles()\n  const { filterBy } = model\n  const [flagInclude, setFlagInclude] = useState(filterBy.flagInclude)\n  const [flagExclude, setFlagExclude] = useState(filterBy.flagExclude)\n  const [tag, setTag] = useState(filterBy.tagFilter?.tag || '')\n  const [tagValue, setTagValue] = useState(filterBy.tagFilter?.value || '')\n  const [readName, setReadName] = useState(filterBy.readName || '')\n  const validTag = tag.match(/^[A-Za-z][A-Za-z0-9]$/)\n\n  const site = 'https://broadinstitute.github.io/picard/explain-flags.html'\n\n  return (\n    <Dialog open onClose={handleClose} title=\"Filter options\">\n      <DialogContent>\n        <Typography>\n          Set filter bitmask options. Refer to <Link href={site}>{site}</Link>{' '}\n          for details\n        </Typography>\n        <Paper className={classes.paper} variant=\"outlined\">\n          <div style={{ display: 'flex' }}>\n            <div>\n              <Typography>Read must have ALL these flags</Typography>\n              <Bitmask flag={flagInclude} setFlag={setFlagInclude} />\n            </div>\n            <div>\n              <Typography>Read must have NONE of these flags</Typography>\n              <Bitmask flag={flagExclude} setFlag={setFlagExclude} />\n            </div>\n          </div>\n        </Paper>\n        <Paper className={classes.paper} variant=\"outlined\">\n          <Typography>\n            Filter by tag name and value. Use * in the value field to get all\n            reads containing any value for that tag. Example: filter tag name SA\n            with value * to get all split/supplementary reads. Other examples\n            include HP for haplotype, or RG for read group\n          </Typography>\n          <TextField\n            className={classes.field}\n            value={tag}\n            onChange={event => setTag(event.target.value)}\n            placeholder=\"Enter tag name\"\n            inputProps={{ maxLength: 2 }}\n            error={tag.length === 2 && !validTag}\n            helperText={tag.length === 2 && !validTag ? 'Not a valid tag' : ''}\n          />\n          <TextField\n            className={classes.field}\n            value={tagValue}\n            onChange={event => setTagValue(event.target.value)}\n            placeholder=\"Enter tag value\"\n          />\n        </Paper>\n        <Paper className={classes.paper} variant=\"outlined\">\n          <Typography>Filter by read name</Typography>\n          <TextField\n            className={classes.field}\n            value={readName}\n            onChange={event => setReadName(event.target.value)}\n            placeholder=\"Enter read name\"\n          />\n        </Paper>\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            autoFocus\n            type=\"submit\"\n            onClick={() => {\n              model.setFilterBy({\n                flagInclude,\n                flagExclude,\n                readName,\n                tagFilter:\n                  tag !== ''\n                    ? {\n                        tag,\n                        value: tagValue,\n                      }\n                    : undefined,\n              })\n              handleClose()\n            }}\n          >\n            Submit\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => handleClose()}\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </Dialog>\n  )\n})\n\nexport default FilterByTagDialog\n","import { getPath } from '@mui/system';\nimport { alpha } from '@mui/system/colorManipulator';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport elementTypeAcceptingRef from '@mui/utils/elementTypeAcceptingRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const {\n      className,\n      color = 'primary',\n      component = 'a',\n      onBlur,\n      onFocus,\n      TypographyClasses,\n      underline = 'always',\n      variant = 'inherit',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n  const handleBlur = event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;"],"names":["useStyles","makeStyles","theme","paper","padding","spacing","margin","field","flagNames","Bitmask","props","flag","setFlag","React","TextField","type","value","onChange","event","target","map","name","index","val","key","checked","Boolean","htmlFor","observer","model","handleClose","classes","filterBy","flagInclude","setFlagInclude","useState","flagExclude","setFlagExclude","tag","setTag","tagFilter","tagValue","setTagValue","readName","setReadName","validTag","match","site","Dialog","open","onClose","title","DialogContent","Typography","Link","href","Paper","className","variant","style","display","placeholder","inputProps","maxLength","error","length","helperText","DialogActions","Button","color","autoFocus","onClick","setFilterBy","undefined","colorTransformations","primary","textPrimary","secondary","textSecondary","ownerState","transformedColor","transformDeprecatedColors","channelColor","_excluded","LinkRoot","styled","slot","overridesResolver","styles","root","capitalize","underline","component","button","textDecoration","textDecorationColor","position","WebkitTapHighlightColor","backgroundColor","outline","border","borderRadius","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","focusVisible","inProps","ref","useThemeProps","onBlur","onFocus","TypographyClasses","sx","other","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","useIsFocusVisible","setFocusVisible","handlerRef","useForkRef","slots","composeClasses","useUtilityClasses","clsx","current","Object","keys","includes","Array","isArray","getLinkUtilityClass"],"sourceRoot":""}