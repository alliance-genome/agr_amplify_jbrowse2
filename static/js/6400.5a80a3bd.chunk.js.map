{"version":3,"file":"static/js/6400.5a80a3bd.chunk.js","mappings":"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","sources":["../../../packages/core/BaseFeatureWidget/SequenceFeatureSettingsDialog.tsx","../../../packages/core/BaseFeatureWidget/SequenceHelpDialog.tsx","../../../packages/core/BaseFeatureWidget/util.tsx","../../../packages/core/BaseFeatureWidget/SequenceBox.tsx","../../../packages/core/BaseFeatureWidget/SequencePanel.tsx","../../../packages/core/BaseFeatureWidget/SequenceFeatureDetails.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Divider,\n  IconButton,\n  TextField,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\n// icons\nimport CloseIcon from '@mui/icons-material/Close'\n\nconst useStyles = makeStyles()(theme => ({\n  formElt: {\n    margin: theme.spacing(3),\n    width: 400,\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  dialogContent: {\n    width: '80em',\n  },\n}))\n\nexport default function SequenceFeatureSettingsDialog({\n  handleClose,\n  intronBp: intronBpArg,\n  upDownBp: upDownBpArg,\n}: {\n  handleClose: (arg?: { intronBp: number; upDownBp: number }) => void\n  intronBp: number\n  upDownBp: number\n}) {\n  const { classes } = useStyles()\n  const [intronBp, setIntronBp] = useState(`${intronBpArg}`)\n  const [upDownBp, setUpDownBp] = useState(`${upDownBpArg}`)\n  const intronBpValid = !Number.isNaN(+intronBp)\n  const upDownBpValid = !Number.isNaN(+upDownBp)\n  return (\n    <Dialog maxWidth=\"xl\" open onClose={() => handleClose()}>\n      <DialogTitle>\n        Feature sequence settings\n        {handleClose ? (\n          <IconButton\n            className={classes.closeButton}\n            onClick={() => handleClose()}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      <Divider />\n\n      <DialogContent className={classes.dialogContent}>\n        <TextField\n          label=\"Number of intronic bases around splice site to display\"\n          className={classes.formElt}\n          value={intronBp}\n          helperText={!intronBpValid ? 'Not a number' : ''}\n          error={!intronBpValid}\n          onChange={event => setIntronBp(event.target.value)}\n        />\n        <TextField\n          label=\"Number of bases up/down stream of feature to display\"\n          className={classes.formElt}\n          value={upDownBp}\n          helperText={!upDownBpValid ? 'Not a number' : ''}\n          error={!upDownBpValid}\n          onChange={event => setUpDownBp(event.target.value)}\n        />\n      </DialogContent>\n\n      <DialogActions>\n        <Button\n          onClick={() =>\n            handleClose({\n              upDownBp: +upDownBp,\n              intronBp: +intronBp,\n            })\n          }\n          disabled={!intronBpValid || !upDownBpValid}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Submit\n        </Button>\n        <Button\n          onClick={() => handleClose()}\n          color=\"secondary\"\n          autoFocus\n          variant=\"contained\"\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Divider,\n  IconButton,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\n// icons\nimport CloseIcon from '@mui/icons-material/Close'\nimport SettingsIcon from '@mui/icons-material/Settings'\n\nconst useStyles = makeStyles()(theme => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  dialogContent: {},\n}))\n\nexport default function HelpDialog({\n  handleClose,\n}: {\n  handleClose: () => void\n}) {\n  const { classes } = useStyles()\n  return (\n    <Dialog maxWidth=\"xl\" open onClose={() => handleClose()}>\n      <DialogTitle>\n        Feature sequence panel\n        {handleClose ? (\n          <IconButton\n            className={classes.closeButton}\n            onClick={() => handleClose()}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      <Divider />\n\n      <DialogContent className={classes.dialogContent}>\n        <Typography paragraph>\n          The \"Feature sequence\" panel shows the underlying genomic sequence for\n          a given feature, fetched from the reference genome.\n        </Typography>\n        <Typography>\n          For gene features, this panel does special calculations to e.g. stitch\n          together the coding sequence, the options are:\n        </Typography>\n        <ul>\n          <li>CDS - shows the stitched together CDS sequences</li>\n          <li>\n            Protein - the translated coding sequence, with the \"standard\"\n            genetic code\n          </li>\n          <li>cDNA - shows the UTRs and stitched together CDS sequences</li>\n          <li>\n            Gene w/ introns - the sequence underlying the entire gene including\n            including introns, with UTR and CDS highlighted\n          </li>\n          <li>\n            Gene w/ Nbp introns - same \"Gene w/ introns\", but limiting to a\n            subset of the intron sequence displayed\n          </li>\n          <li>\n            Gene +/- Nbp up+down stream - same as \"Gene w/ introns\" but with up\n            and downstream sequence displayed\n          </li>\n          <li>\n            Gene +/- Nbp up+down stream, Nbp introns - same as \"Gene w/\n            introns\", but with limited intron sequence displayed and up and\n            downstream sequence\n          </li>\n        </ul>\n        <Typography paragraph>\n          For other feature types, the options are:\n        </Typography>\n        <ul>\n          <li>\n            Feature sequence - the reference genome sequence underlying the\n            feature\n          </li>\n          <li>\n            Feature sequence +/- Nbp up+down stream - the reference genome\n            sequence underlying the feature, with the up and downstream sequence\n          </li>\n        </ul>\n        <Typography>\n          Note: you can use the \"gear icon\" <SettingsIcon /> to edit the number\n          of bp displayed up/downstream and in the intron region\n        </Typography>\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={() => handleClose()} autoFocus variant=\"contained\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","export interface Feat {\n  start: number\n  end: number\n  type: string\n  name?: string\n  id?: string\n}\nexport interface ParentFeat extends Feat {\n  uniqueId: string\n  strand?: number\n  refName: string\n  subfeatures?: Feat[]\n  parentId?: string\n}\nexport interface SeqState {\n  seq: string\n  upstream?: string\n  downstream?: string\n}\n\nexport interface ErrorState {\n  error: string\n}\n\nexport function stitch(subfeats: Feat[], sequence: string) {\n  return subfeats.map(sub => sequence.slice(sub.start, sub.end)).join('')\n}\n\n// filter items if they have the same \"ID\" or location\nfunction getItemId(feat: Feat) {\n  return `${feat.start}-${feat.end}`\n}\n\n// filters if successive elements share same start/end\nexport function dedupe(list: Feat[]) {\n  return list.filter(\n    (item, pos, ary) => !pos || getItemId(item) !== getItemId(ary[pos - 1]),\n  )\n}\n\nexport function revlist(list: Feat[], seqlen: number) {\n  return list\n    .map(sub => ({\n      ...sub,\n      start: seqlen - sub.end,\n      end: seqlen - sub.start,\n    }))\n    .sort((a, b) => a.start - b.start)\n}\n\n// calculates UTRs using impliedUTRs logic\nexport function calculateUTRs(cds: Feat[], exons: Feat[]) {\n  const firstCds = cds[0]\n  const lastCds = cds[cds.length - 1]\n  const firstCdsIdx = exons.findIndex(\n    exon => exon.end >= firstCds.start && exon.start <= firstCds.start,\n  )\n  const lastCdsIdx = exons.findIndex(\n    exon => exon.end >= lastCds.end && exon.start <= lastCds.end,\n  )\n  const lastCdsExon = exons[lastCdsIdx]\n  const firstCdsExon = exons[firstCdsIdx]\n\n  const fiveUTRs = [\n    ...exons.slice(0, firstCdsIdx),\n    { start: firstCdsExon.start, end: firstCds.start },\n  ].map(elt => ({ ...elt, type: 'five_prime_UTR' }))\n\n  const threeUTRs = [\n    { start: lastCds.end, end: lastCdsExon.end },\n    ...exons.slice(lastCdsIdx + 1),\n  ].map(elt => ({ ...elt, type: 'three_prime_UTR' }))\n\n  return [...fiveUTRs, ...threeUTRs]\n}\n\n// calculates UTRs using impliedUTRs logic, but there are no exon subfeatures\nexport function calculateUTRs2(cds: Feat[], parentFeat: Feat) {\n  const firstCds = cds[0]\n  const lastCds = cds[cds.length - 1]\n\n  const fiveUTRs = [{ start: parentFeat.start, end: firstCds.start }].map(\n    elt => ({ ...elt, type: 'five_prime_UTR' }),\n  )\n\n  const threeUTRs = [{ start: lastCds.end, end: parentFeat.end }].map(elt => ({\n    ...elt,\n    type: 'three_prime_UTR',\n  }))\n\n  return [...fiveUTRs, ...threeUTRs]\n}\n\nexport function ellipses(slug: string) {\n  return slug.length > 20 ? `${slug.slice(0, 20)}...` : slug\n}\n","import React from 'react'\nimport { Feat, stitch } from './util'\n\n// note that these are currently put into the style section instead of being\n// defined in classes to aid copy and paste to an external document e.g. word\nconst proteinColor = 'rgb(220,160,220)'\nconst intronColor = undefined\nconst cdsColor = 'rgb(220,220,180)'\nconst updownstreamColor = 'rgba(250,200,200)'\nconst utrColor = 'rgb(200,240,240)'\nconst genomeColor = 'rgb(200,280,200)'\n\nexport function GeneCDS({ cds, sequence }: { cds: Feat[]; sequence: string }) {\n  return <span style={{ background: cdsColor }}>{stitch(cds, sequence)}</span>\n}\n\nexport function GeneProtein({\n  cds,\n  sequence,\n  codonTable,\n}: {\n  cds: Feat[]\n  sequence: string\n  codonTable: { [key: string]: string }\n}) {\n  const str = stitch(cds, sequence)\n  let protein = ''\n  for (let i = 0; i < str.length; i += 3) {\n    // use & symbol for undefined codon, or partial slice\n    protein += codonTable[str.slice(i, i + 3)] || '&'\n  }\n\n  return <span style={{ background: proteinColor }}>{protein}</span>\n}\n\nexport function GenecDNA({\n  utr,\n  cds,\n  exons,\n  sequence,\n  upstream,\n  downstream,\n  includeIntrons,\n  collapseIntron,\n  intronBp,\n}: {\n  utr: Feat[]\n  cds: Feat[]\n  exons: Feat[]\n  sequence: string\n  upstream?: string\n  downstream?: string\n  includeIntrons?: boolean\n  collapseIntron?: boolean\n  intronBp: number\n}) {\n  const chunks = cds.length\n    ? [...cds, ...utr].sort((a, b) => a.start - b.start)\n    : exons\n  return (\n    <>\n      {upstream ? (\n        <span style={{ background: updownstreamColor }}>{upstream}</span>\n      ) : null}\n\n      {chunks\n        .filter(f => f.start !== f.end)\n        .map((chunk, index) => {\n          const intron = sequence.slice(chunk.end, chunks[index + 1]?.start)\n          return (\n            <React.Fragment key={JSON.stringify(chunk)}>\n              <span\n                style={{\n                  background: chunk.type === 'CDS' ? cdsColor : utrColor,\n                }}\n              >\n                {sequence.slice(chunk.start, chunk.end)}\n              </span>\n              {includeIntrons && index < chunks.length - 1 ? (\n                <span style={{ background: intronColor }}>\n                  {collapseIntron && intron.length > intronBp * 2\n                    ? `${intron.slice(0, intronBp)}...${intron.slice(\n                        -intronBp,\n                      )}`\n                    : intron}\n                </span>\n              ) : null}\n            </React.Fragment>\n          )\n        })}\n\n      {downstream ? (\n        <span style={{ background: updownstreamColor }}>{downstream}</span>\n      ) : null}\n    </>\n  )\n}\n\nexport function Genomic({\n  sequence,\n  upstream,\n  downstream,\n}: {\n  sequence: string\n  upstream?: string\n  downstream?: string\n}) {\n  return (\n    <>\n      {upstream ? (\n        <span style={{ background: updownstreamColor }}>{upstream}</span>\n      ) : null}\n\n      <span\n        style={{\n          background: genomeColor,\n        }}\n      >\n        {sequence}\n      </span>\n\n      {downstream ? (\n        <span style={{ background: updownstreamColor }}>{downstream}</span>\n      ) : null}\n    </>\n  )\n}\n","import React from 'react'\n\nimport { defaultCodonTable, generateCodonTable, revcom } from '../util'\nimport {\n  ParentFeat,\n  SeqState,\n  calculateUTRs,\n  calculateUTRs2,\n  dedupe,\n  revlist,\n} from './util'\nimport { GenecDNA, GeneProtein, GeneCDS, Genomic } from './SequenceBox'\n\ninterface SequencePanelProps {\n  sequence: SeqState\n  feature: ParentFeat\n  mode: string\n  intronBp?: number\n}\nconst SequencePanel = React.forwardRef<HTMLDivElement, SequencePanelProps>(\n  (props, ref) => {\n    const { feature, mode, intronBp = 10 } = props\n    let {\n      sequence: { seq, upstream = '', downstream = '' },\n    } = props\n    const { subfeatures = [] } = feature\n\n    const children = subfeatures\n      .sort((a, b) => a.start - b.start)\n      .map(sub => ({\n        ...sub,\n        start: sub.start - feature.start,\n        end: sub.end - feature.start,\n      }))\n\n    // we filter duplicate entries in cds and exon lists duplicate entries may be\n    // rare but was seen in Gencode v36 track NCList, likely a bug on GFF3 or\n    // probably worth ignoring here (produces broken protein translations if\n    // included)\n    //\n    // position 1:224,800,006..225,203,064 gene ENSG00000185842.15 first\n    // transcript ENST00000445597.6\n    //\n    // http://localhost:3000/?config=test_data%2Fconfig.json&session=share-FUl7G1isvF&password=HXh5Y\n\n    let cds = dedupe(children.filter(sub => sub.type === 'CDS'))\n    let utr = dedupe(children.filter(sub => sub.type.match(/utr/i)))\n    let exons = dedupe(children.filter(sub => sub.type === 'exon'))\n\n    if (!utr.length && cds.length && exons.length) {\n      utr = calculateUTRs(cds, exons)\n    }\n    if (!utr.length && cds.length && !exons.length) {\n      utr = calculateUTRs2(cds, {\n        start: 0,\n        end: feature.end - feature.start,\n        type: 'gene',\n      })\n    }\n\n    if (feature.strand === -1) {\n      // doing this in a single assignment is needed because downstream and\n      // upstream are swapped so this avoids a temp variable\n      ;[seq, upstream, downstream] = [\n        revcom(seq),\n        revcom(downstream),\n        revcom(upstream),\n      ]\n      cds = revlist(cds, seq.length)\n      exons = revlist(exons, seq.length)\n      utr = revlist(utr, seq.length)\n    }\n    const codonTable = generateCodonTable(defaultCodonTable)\n\n    return (\n      <div ref={ref} data-testid=\"sequence_panel\">\n        <div\n          style={{\n            fontFamily: 'monospace',\n            wordWrap: 'break-word',\n            overflow: 'auto',\n            fontSize: 12,\n            maxWidth: 600,\n            maxHeight: 500,\n          }}\n        >\n          {`>${\n            feature.name ||\n            feature.id ||\n            feature.refName + ':' + (feature.start + 1) + '-' + feature.end\n          }-${mode}\\n`}\n          <br />\n          {mode === 'genomic' ? (\n            <Genomic sequence={seq} />\n          ) : mode === 'genomic_sequence_updown' ? (\n            <Genomic\n              sequence={seq}\n              upstream={upstream}\n              downstream={downstream}\n            />\n          ) : mode === 'cds' ? (\n            <GeneCDS cds={cds} sequence={seq} />\n          ) : mode === 'cdna' ? (\n            <GenecDNA\n              exons={exons}\n              cds={cds}\n              utr={utr}\n              sequence={seq}\n              intronBp={intronBp}\n            />\n          ) : mode === 'protein' ? (\n            <GeneProtein cds={cds} codonTable={codonTable} sequence={seq} />\n          ) : mode === 'gene' ? (\n            <GenecDNA\n              exons={exons}\n              cds={cds}\n              utr={utr}\n              sequence={seq}\n              includeIntrons\n              intronBp={intronBp}\n            />\n          ) : mode === 'gene_collapsed_intron' ? (\n            <GenecDNA\n              exons={exons}\n              cds={cds}\n              sequence={seq}\n              utr={utr}\n              includeIntrons\n              collapseIntron\n              intronBp={intronBp}\n            />\n          ) : mode === 'gene_updownstream' ? (\n            <GenecDNA\n              exons={exons}\n              cds={cds}\n              sequence={seq}\n              utr={utr}\n              upstream={upstream}\n              downstream={downstream}\n              includeIntrons\n              intronBp={intronBp}\n            />\n          ) : mode === 'gene_updownstream_collapsed_intron' ? (\n            <GenecDNA\n              exons={exons}\n              cds={cds}\n              sequence={seq}\n              utr={utr}\n              upstream={upstream}\n              downstream={downstream}\n              includeIntrons\n              collapseIntron\n              intronBp={intronBp}\n            />\n          ) : (\n            <div>Unknown type</div>\n          )}\n        </div>\n      </div>\n    )\n  },\n)\n\nexport default SequencePanel\n","import React, { useRef, useState, useEffect } from 'react'\nimport {\n  Button,\n  FormControl,\n  IconButton,\n  MenuItem,\n  Select,\n  Typography,\n  Tooltip,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport copy from 'copy-to-clipboard'\n\n// locals\nimport SettingsDlg from './SequenceFeatureSettingsDialog'\nimport HelpDlg from './SequenceHelpDialog'\nimport SequencePanel from './SequencePanel'\nimport { getSession, useLocalStorage } from '../util'\nimport { BaseProps } from './types'\nimport { getConf } from '../configuration'\nimport { Feature, SimpleFeatureSerialized } from '../util/simpleFeature'\nimport { ParentFeat, SeqState, ErrorState } from './util'\n\n// icons\nimport SettingsIcon from '@mui/icons-material/Settings'\nimport HelpIcon from '@mui/icons-material/Help'\n\ninterface CoordFeat extends SimpleFeatureSerialized {\n  refName: string\n  start: number\n  end: number\n}\n\nconst useStyles = makeStyles()(theme => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n  formControl: {\n    margin: 0,\n  },\n  container: {\n    margin: theme.spacing(1),\n  },\n  container2: {\n    marginTop: theme.spacing(1),\n  },\n}))\n\nconst BPLIMIT = 500_000\n\n// display the stitched-together sequence of a gene's CDS, cDNA, or protein\n// sequence. this is a best effort and weird genomic phenomena could lead these\n// to not be 100% accurate\nexport default function SequenceFeatureDetails({ model, feature }: BaseProps) {\n  const { classes } = useStyles()\n  const parentFeature = feature as unknown as ParentFeat\n  const hasCDS = !!parentFeature.subfeatures?.find(sub => sub.type === 'CDS')\n  const isGene = feature.type === 'gene'\n  const seqPanelRef = useRef<HTMLDivElement>(null)\n  const [settingsDlgOpen, setSettingsDlgOpen] = useState(false)\n\n  const [shown, setShown] = useState(false)\n  const [helpShown, setHelpShown] = useState(false)\n  const [sequence, setSequence] = useState<SeqState | ErrorState>()\n  const [error, setError] = useState<unknown>()\n  const [copied, setCopied] = useState(false)\n  const [copiedHtml, setCopiedHtml] = useState(false)\n  const [intronBp, setIntronBp] = useLocalStorage('intronBp', 10)\n  const [upDownBp, setUpDownBp] = useLocalStorage('upDownBp', 500)\n  const [forceLoad, setForceLoad] = useState({\n    id: feature.uniqueId,\n    force: false,\n  })\n\n  useEffect(() => {\n    setForceLoad({ id: feature.uniqueId, force: false })\n  }, [feature])\n\n  useEffect(() => {\n    let finished = false\n    if (!model || !shown) {\n      return () => {}\n    }\n    const { assemblyManager, rpcManager } = getSession(model)\n    const [assemblyName] = model.view?.assemblyNames || []\n    async function fetchSeq(start: number, end: number, refName: string) {\n      const assembly = await assemblyManager.waitForAssembly(assemblyName)\n      if (!assembly) {\n        throw new Error('assembly not found')\n      }\n      const sessionId = 'getSequence'\n\n      const feats = await rpcManager.call(sessionId, 'CoreGetFeatures', {\n        adapterConfig: getConf(assembly, ['sequence', 'adapter']),\n        sessionId,\n        regions: [\n          {\n            start,\n            end,\n            refName: assembly.getCanonicalRefName(refName),\n          },\n        ],\n      })\n\n      const [feat] = feats as Feature[]\n      return (feat?.get('seq') as string) || ''\n    }\n\n    ;(async () => {\n      try {\n        setError(undefined)\n        const { start, end, refName } = feature as CoordFeat\n\n        if (!forceLoad.force && end - start > BPLIMIT) {\n          setSequence({\n            error: `Genomic sequence larger than ${BPLIMIT}bp, use \"force load\" button to display`,\n          })\n        } else {\n          const seq = await fetchSeq(start, end, refName)\n          const up = await fetchSeq(\n            Math.max(0, start - upDownBp),\n            start,\n            refName,\n          )\n          const down = await fetchSeq(end, end + upDownBp, refName)\n          if (!finished) {\n            setSequence({ seq, upstream: up, downstream: down })\n          }\n        }\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    })()\n\n    return () => {\n      finished = true\n    }\n  }, [feature, shown, model, upDownBp, forceLoad])\n\n  const loading = !sequence\n\n  const session = getSession(model)\n  const defaultSeqTypes = ['mRNA', 'transcript', 'gene']\n  const sequenceTypes =\n    getConf(session, ['featureDetails', 'sequenceTypes']) || defaultSeqTypes\n\n  // only attempt fetching gene type sequence on a bare CDS if it has no parent\n  const attemptGeneType =\n    feature.type === 'CDS'\n      ? sequenceTypes.includes('CDS') && !feature.parentId\n      : sequenceTypes.includes(feature.type)\n  const val = attemptGeneType ? (hasCDS ? 'cds' : 'cdna') : 'genomic'\n\n  // this useEffect is needed to reset the mode/setMode useState because the contents of the select box can completely change depending on whether we click on a gene feature or non-gene feature, so the current value in the select box must change accordingly\n  useEffect(() => {\n    setMode(val)\n  }, [attemptGeneType, val])\n\n  const [mode, setMode] = useState(\n    attemptGeneType ? (hasCDS ? 'cds' : 'cdna') : 'genomic',\n  )\n\n  const rest = {\n    gene: 'Gene w/ introns',\n    gene_collapsed_intron: `Gene w/ ${intronBp}bp of intron`,\n    gene_updownstream: `Gene w/ ${upDownBp}bp up+down stream`,\n    gene_updownstream_collapsed_intron: `Gene w/ ${upDownBp}bp up+down stream w/ ${intronBp}bp intron`,\n    cdna: 'cDNA',\n  }\n\n  const arg = attemptGeneType\n    ? hasCDS\n      ? {\n          cds: 'CDS',\n          protein: 'Protein',\n          ...rest,\n        }\n      : rest\n    : {\n        genomic: 'Genomic seq',\n        genomic_sequence_updown: `Genomic seq w/ ${upDownBp}bp up+down stream`,\n      }\n\n  return (isGene && !hasCDS) || !model ? null : (\n    <div className={classes.container2}>\n      <Button variant=\"contained\" onClick={() => setShown(!shown)}>\n        {shown ? 'Hide feature sequence' : 'Show feature sequence'}\n      </Button>\n      <FormControl className={classes.formControl}>\n        <IconButton onClick={() => setHelpShown(true)}>\n          <HelpIcon />\n        </IconButton>\n      </FormControl>\n      <br />\n      {shown ? (\n        <div className={classes.container2}>\n          <FormControl className={classes.formControl}>\n            <Select\n              value={mode}\n              onChange={event => setMode(event.target.value)}\n            >\n              {Object.entries(arg).map(([key, val]) => (\n                <MenuItem key={key} value={key}>\n                  {val}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <FormControl className={classes.formControl}>\n            <Button\n              className={classes.button}\n              variant=\"contained\"\n              color=\"inherit\"\n              onClick={() => {\n                const ref = seqPanelRef.current\n                if (ref) {\n                  copy(ref.textContent || '', { format: 'text/plain' })\n                  setCopied(true)\n                  setTimeout(() => setCopied(false), 1000)\n                }\n              }}\n            >\n              {copied ? 'Copied to clipboard!' : 'Copy plaintext'}\n            </Button>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <Tooltip title=\"The 'Copy HTML' function retains the colors from the sequence panel but cannot be pasted into some programs like notepad that only expect plain text\">\n              <Button\n                className={classes.button}\n                variant=\"contained\"\n                color=\"inherit\"\n                onClick={() => {\n                  const ref = seqPanelRef.current\n                  if (ref) {\n                    copy(ref.innerHTML, { format: 'text/html' })\n                    setCopiedHtml(true)\n                    setTimeout(() => setCopiedHtml(false), 1000)\n                  }\n                }}\n              >\n                {copiedHtml ? 'Copied to clipboard!' : 'Copy HTML'}\n              </Button>\n            </Tooltip>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <IconButton onClick={() => setSettingsDlgOpen(true)}>\n              <SettingsIcon />\n            </IconButton>\n          </FormControl>\n\n          <br />\n          <>\n            {error ? (\n              <Typography color=\"error\">{`${error}`}</Typography>\n            ) : loading ? (\n              <Typography>Loading gene sequence...</Typography>\n            ) : sequence ? (\n              'error' in sequence ? (\n                <>\n                  <Typography color=\"error\">{sequence.error}</Typography>\n                  <Button\n                    variant=\"contained\"\n                    color=\"inherit\"\n                    onClick={() => setForceLoad({ ...forceLoad, force: true })}\n                  >\n                    Force load\n                  </Button>\n                </>\n              ) : (\n                <SequencePanel\n                  ref={seqPanelRef}\n                  feature={parentFeature}\n                  mode={mode}\n                  sequence={sequence}\n                  intronBp={intronBp}\n                />\n              )\n            ) : (\n              <Typography>No sequence found</Typography>\n            )}\n          </>\n        </div>\n      ) : null}\n\n      {settingsDlgOpen ? (\n        <SettingsDlg\n          handleClose={arg => {\n            if (arg) {\n              const { upDownBp, intronBp } = arg\n              setIntronBp(intronBp)\n              setUpDownBp(upDownBp)\n            }\n            setSettingsDlgOpen(false)\n          }}\n          upDownBp={upDownBp}\n          intronBp={intronBp}\n        />\n      ) : null}\n\n      {helpShown ? <HelpDlg handleClose={() => setHelpShown(false)} /> : null}\n    </div>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState } from 'react'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Divider,\n  Tooltip,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport ExpandMore from '@mui/icons-material/ExpandMore'\nimport { DataGrid, GridCellParams } from '@mui/x-data-grid'\nimport { observer } from 'mobx-react'\nimport isObject from 'is-object'\nimport { IAnyStateTreeNode } from 'mobx-state-tree'\n\n// locals\nimport {\n  measureText,\n  measureGridWidth,\n  getStr,\n  getEnv,\n  getSession,\n  getUriLink,\n  isUriLocation,\n} from '../util'\nimport { ErrorMessage, SanitizedHTML } from '../ui'\nimport SequenceFeatureDetails from './SequenceFeatureDetails'\nimport { BaseCardProps, BaseProps } from './types'\nimport { SimpleFeatureSerializedNoId } from '../util/simpleFeature'\nimport { ellipses } from './util'\n\nconst MAX_FIELD_NAME_WIDTH = 170\n\n// these are always omitted as too detailed\nconst globalOmit = [\n  '__jbrowsefmt',\n  'length',\n  'position',\n  'subfeatures',\n  'uniqueId',\n  'exonFrames',\n  'parentId',\n  'thickStart',\n  'thickEnd',\n]\n\n// coreDetails are omitted in some circumstances\nconst coreDetails = [\n  'name',\n  'start',\n  'end',\n  'strand',\n  'refName',\n  'description',\n  'type',\n]\n\nexport const useStyles = makeStyles()(theme => ({\n  expansionPanelDetails: {\n    display: 'block',\n    padding: theme.spacing(1),\n  },\n  expandIcon: {\n    color: '#FFFFFF',\n  },\n  field: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  fieldDescription: {\n    '&:hover': {\n      background: 'yellow',\n    },\n  },\n  fieldName: {\n    wordBreak: 'break-all',\n    minWidth: 90,\n    borderBottom: '1px solid #0003',\n    fontSize: 12,\n    background: theme.palette.grey[200],\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(0.5),\n  },\n  fieldValue: {\n    wordBreak: 'break-word',\n    maxHeight: 300,\n    fontSize: 12,\n    padding: theme.spacing(0.5),\n    overflow: 'auto',\n  },\n  fieldSubvalue: {\n    wordBreak: 'break-word',\n    maxHeight: 300,\n    padding: theme.spacing(0.5),\n    background: theme.palette.grey[100],\n    border: `1px solid ${theme.palette.grey[300]}`,\n    boxSizing: 'border-box',\n    overflow: 'auto',\n  },\n}))\n\nexport function BaseCard({\n  children,\n  title,\n  defaultExpanded = true,\n}: BaseCardProps) {\n  const { classes } = useStyles()\n  const [expanded, setExpanded] = useState(defaultExpanded)\n  return (\n    <Accordion\n      expanded={expanded}\n      onChange={() => setExpanded(s => !s)}\n      TransitionProps={{ unmountOnExit: true }}\n    >\n      <AccordionSummary\n        expandIcon={<ExpandMore className={classes.expandIcon} />}\n      >\n        <Typography variant=\"button\"> {title}</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.expansionPanelDetails}>\n        {children}\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n\nexport const FieldName = ({\n  description,\n  name,\n  width,\n  prefix = [],\n}: {\n  description?: React.ReactNode\n  name: string\n  prefix?: string[]\n  width?: number\n}) => {\n  const { classes, cx } = useStyles()\n  const val = [...prefix, name].join('.')\n  return description ? (\n    <Tooltip title={description} placement=\"left\">\n      <div className={cx(classes.fieldDescription, classes.fieldName)}>\n        {val}\n      </div>\n    </Tooltip>\n  ) : (\n    <div className={classes.fieldName} style={{ width: width }}>\n      {val}\n    </div>\n  )\n}\n\nexport const BasicValue = ({ value }: { value: string | React.ReactNode }) => {\n  const { classes } = useStyles()\n  const isLink = `${value}`.match(/^https?:\\/\\//)\n  return (\n    <div className={classes.fieldValue}>\n      {React.isValidElement(value) ? (\n        value\n      ) : isLink ? (\n        <SanitizedHTML html={`<a href=\"${value}\">${value}</a>`} />\n      ) : (\n        <SanitizedHTML\n          html={isObject(value) ? JSON.stringify(value) : String(value)}\n        />\n      )}\n    </div>\n  )\n}\n\nexport const SimpleValue = ({\n  name,\n  value,\n  description,\n  prefix,\n  width,\n}: {\n  description?: React.ReactNode\n  name: string\n  value: any\n  prefix?: string[]\n  width?: number\n}) => {\n  const { classes } = useStyles()\n  return value !== null && value !== undefined ? (\n    <div className={classes.field}>\n      <FieldName\n        prefix={prefix}\n        description={description}\n        name={name}\n        width={width}\n      />\n      <BasicValue value={value} />\n    </div>\n  ) : null\n}\n\nconst ArrayValue = ({\n  name,\n  value,\n  description,\n  prefix = [],\n}: {\n  description?: React.ReactNode\n  name: string\n  value: any[]\n  prefix?: string[]\n}) => {\n  const { classes } = useStyles()\n  if (value.length === 1) {\n    return isObject(value[0]) ? (\n      <Attributes attributes={value[0]} prefix={[...prefix, name]} />\n    ) : (\n      <div className={classes.field}>\n        <FieldName prefix={prefix} description={description} name={name} />\n        <BasicValue value={value[0]} />\n      </div>\n    )\n  } else if (value.every(val => isObject(val))) {\n    return (\n      <>\n        {value.map((val, i) => (\n          <Attributes\n            key={JSON.stringify(val) + '-' + i}\n            attributes={val}\n            prefix={[...prefix, name + '-' + i]}\n          />\n        ))}\n      </>\n    )\n  } else {\n    return (\n      <div className={classes.field}>\n        <FieldName prefix={prefix} description={description} name={name} />\n        {value.map((val, i) => (\n          <div\n            key={JSON.stringify(val) + '-' + i}\n            className={classes.fieldSubvalue}\n          >\n            <BasicValue value={val} />\n          </div>\n        ))}\n      </div>\n    )\n  }\n}\nconst toLocale = (n: number) => n.toLocaleString('en-US')\n\nfunction CoreDetails(props: BaseProps) {\n  const { feature } = props\n  const obj = feature as SimpleFeatureSerializedNoId & {\n    start: number\n    end: number\n    strand: number\n    refName: string\n    __jbrowsefmt: {\n      start?: number\n      end?: number\n      refName?: string\n      name?: string\n    }\n  }\n\n  // eslint-disable-next-line no-underscore-dangle\n  const formattedFeat = { ...obj, ...obj.__jbrowsefmt }\n  const { start, strand, end, refName } = formattedFeat\n\n  const strandMap: Record<string, string> = {\n    '-1': '-',\n    '0': '',\n    '1': '+',\n  }\n  const str = strandMap[strand as number] ? `(${strandMap[strand]})` : ''\n  const displayedDetails: Record<string, any> = {\n    ...formattedFeat,\n    length: toLocale(end - start),\n    position: `${refName}:${toLocale(start + 1)}..${toLocale(end)} ${str}`,\n  }\n\n  const coreRenderedDetails = {\n    position: 'Position',\n    description: 'Description',\n    name: 'Name',\n    length: 'Length',\n    type: 'Type',\n    assemblyName: 'Assembly name',\n  }\n  return (\n    <>\n      {Object.entries(coreRenderedDetails)\n        .map(([key, name]) => [name, displayedDetails[key]])\n        .filter(([, value]) => value !== null && value !== undefined)\n        .map(([name, value]) => (\n          <SimpleValue key={name} name={name} value={value} />\n        ))}\n    </>\n  )\n}\n\nexport const BaseCoreDetails = (props: BaseProps) => {\n  return (\n    <BaseCard {...props} title=\"Primary data\">\n      <CoreDetails {...props} />\n    </BaseCard>\n  )\n}\n\ninterface AttributeProps {\n  attributes: Record<string, any>\n  omit?: string[]\n  formatter?: (val: unknown, key: string) => React.ReactNode\n  descriptions?: Record<string, React.ReactNode>\n  prefix?: string[]\n  hideUris?: boolean\n}\n\nexport function UriLink({\n  value,\n}: {\n  value: { uri: string; baseUri?: string }\n}) {\n  const href = getUriLink(value)\n  return <SanitizedHTML html={`<a href=\"${href}\">${href}</a>`} />\n}\n\nconst DataGridDetails = ({\n  value,\n  prefix,\n  name,\n}: {\n  name: string\n  prefix?: string[]\n  value: Record<string, any>\n}) => {\n  const keys = Object.keys(value[0]).sort()\n  const unionKeys = new Set(keys)\n  value.forEach((val: any) => Object.keys(val).forEach(k => unionKeys.add(k)))\n  if (unionKeys.size < keys.length + 5) {\n    // avoids key 'id' from being used in row data\n    const rows = Object.entries(value).map(([k, val]) => {\n      const { id, ...rest } = val\n      return {\n        id: k, // used by material UI\n        identifier: id, // renamed from id to identifier\n        ...rest,\n      }\n    })\n\n    // avoids key 'id' from being used in column names, and tries\n    // to make it at the start of the colNames array\n    let colNames\n    if (unionKeys.has('id')) {\n      unionKeys.delete('id')\n      colNames = ['identifier', ...unionKeys]\n    } else {\n      colNames = [...unionKeys]\n    }\n\n    const columns = colNames.map(val => ({\n      field: val,\n      renderCell: (params: GridCellParams) => {\n        const { value } = params\n        return isUriLocation(value) ? <UriLink value={value} /> : getStr(value)\n      },\n      width: measureGridWidth(rows.map(r => r[val])),\n    }))\n\n    const rowHeight = 25\n    const hideFooter = rows.length < 100\n    const headerHeight = 80\n    // disableSelection on click helps avoid\n    // https://github.com/mui-org/material-ui-x/issues/1197\n    return (\n      <>\n        <FieldName prefix={prefix} name={name} />\n        <div\n          style={{\n            height:\n              Math.min(rows.length, 100) * rowHeight +\n              headerHeight +\n              (hideFooter ? 0 : 50),\n            width: '100%',\n          }}\n        >\n          <DataGrid\n            disableSelectionOnClick\n            rowHeight={rowHeight}\n            rows={rows}\n            rowsPerPageOptions={[]}\n            hideFooterSelectedRowCount\n            columns={columns}\n            hideFooter={hideFooter}\n          />\n        </div>\n      </>\n    )\n  }\n  return null\n}\n\n// arr = ['a','b'], obj = {a:{b:'hello}}, returns hello (with special addition to grab description also)\nfunction accessNested(arr: string[], obj: Record<string, any> = {}) {\n  arr.forEach(elt => {\n    if (obj) {\n      obj = obj[elt]\n    }\n  })\n  return typeof obj === 'string'\n    ? obj\n    : typeof obj?.Description === 'string'\n    ? obj.Description\n    : undefined\n}\n\nfunction generateMaxWidth(array: any, prefix: any) {\n  // @ts-ignore\n  const arr = []\n  array.forEach((key: any, value: any) => {\n    const val = [...prefix, key[0]].join('.')\n    arr.push(measureText(val, 12))\n  })\n\n  // @ts-ignore\n  return Math.ceil(Math.max(...arr)) + 10\n}\n\nfunction UriAttribute({\n  value,\n  prefix,\n  name,\n}: {\n  value: { uri: string; baseUri?: string }\n  name: string\n  prefix: string[]\n}) {\n  const { classes } = useStyles()\n  const { uri, baseUri = '' } = value\n  let href\n  try {\n    href = new URL(uri, baseUri).href\n  } catch (e) {\n    href = uri\n  }\n  return (\n    <div className={classes.field}>\n      <FieldName prefix={prefix} name={name} />\n      <BasicValue value={href} />\n    </div>\n  )\n}\n\nexport function Attributes(props: AttributeProps) {\n  const {\n    attributes,\n    omit = [],\n    descriptions,\n    formatter = val => val,\n    hideUris,\n    prefix = [],\n  } = props\n  const omits = [...omit, ...globalOmit]\n  const { __jbrowsefmt, ...rest } = attributes\n  const formattedAttributes = { ...rest, ...__jbrowsefmt }\n\n  const maxLabelWidth = generateMaxWidth(\n    Object.entries(formattedAttributes).filter(\n      ([k, v]) => v !== undefined && !omits.includes(k),\n    ),\n    prefix,\n  )\n\n  return (\n    <>\n      {Object.entries(formattedAttributes)\n        .filter(([k, v]) => v !== undefined && !omits.includes(k))\n        .map(([key, value]) => {\n          const description = accessNested([...prefix, key], descriptions)\n          if (Array.isArray(value)) {\n            // check if it looks like an array of objects, which could be used\n            // in data grid\n            return value.length > 1 && value.every(val => isObject(val)) ? (\n              <DataGridDetails\n                key={key}\n                name={key}\n                prefix={prefix}\n                value={value}\n              />\n            ) : (\n              <ArrayValue\n                key={key}\n                name={key}\n                value={value}\n                description={description}\n                prefix={prefix}\n              />\n            )\n          } else if (isObject(value)) {\n            return isUriLocation(value) ? (\n              hideUris ? null : (\n                <UriAttribute\n                  key={key}\n                  name={key}\n                  prefix={prefix}\n                  value={value}\n                />\n              )\n            ) : (\n              <Attributes\n                {...props}\n                omit={omits}\n                key={key}\n                attributes={value}\n                descriptions={descriptions}\n                prefix={[...prefix, key]}\n              />\n            )\n          } else {\n            return (\n              <SimpleValue\n                key={key}\n                name={key}\n                value={formatter(value, key)}\n                description={description}\n                prefix={prefix}\n                width={Math.min(maxLabelWidth, MAX_FIELD_NAME_WIDTH)}\n              />\n            )\n          }\n        })}\n    </>\n  )\n}\n\nexport const BaseAttributes = (props: BaseProps) => {\n  const { feature } = props\n  return (\n    <BaseCard {...props} title=\"Attributes\">\n      <Attributes {...props} attributes={feature} />\n    </BaseCard>\n  )\n}\n\nexport interface BaseInputProps extends BaseCardProps {\n  omit?: string[]\n  model: any\n  descriptions?: Record<string, React.ReactNode>\n  formatter?: (val: unknown, key: string) => React.ReactNode\n}\n\nfunction isEmpty(obj: Record<string, unknown>) {\n  return Object.keys(obj).length === 0\n}\n\nfunction generateTitle(name: unknown, id: unknown, type: unknown) {\n  return [ellipses(`${name}` || `${id}`), `${type}`]\n    .filter(f => !!f)\n    .join(' - ')\n}\n\nexport const FeatureDetails = (props: {\n  model: IAnyStateTreeNode\n  feature: SimpleFeatureSerializedNoId\n  depth?: number\n  omit?: string[]\n  formatter?: (val: unknown, key: string) => React.ReactNode\n}) => {\n  const { omit = [], model, feature, depth = 0 } = props\n  const { name = '', id = '', type = '', subfeatures } = feature\n  const { pluginManager } = getEnv(model)\n  const session = getSession(model)\n\n  const ExtraPanel = pluginManager?.evaluateExtensionPoint(\n    'Core-extraFeaturePanel',\n    null,\n    { session, feature, model },\n  ) as { name: string; Component: React.FC<any> } | undefined\n  return (\n    <BaseCard title={generateTitle(name, id, type)}>\n      <Typography>Core details</Typography>\n      <CoreDetails {...props} />\n      <Divider />\n\n      <Typography>Attributes</Typography>\n\n      <Attributes\n        attributes={feature}\n        {...props}\n        omit={[...omit, ...coreDetails]}\n      />\n\n      <ErrorBoundary\n        FallbackComponent={({ error }) => <ErrorMessage error={error} />}\n      >\n        <SequenceFeatureDetails {...props} />\n      </ErrorBoundary>\n\n      {ExtraPanel ? (\n        <>\n          <Divider />\n          <BaseCard title={ExtraPanel.name}>\n            <ExtraPanel.Component {...props} />\n          </BaseCard>\n        </>\n      ) : null}\n\n      {subfeatures?.length ? (\n        <BaseCard title=\"Subfeatures\" defaultExpanded={depth < 1}>\n          {subfeatures.map(sub => (\n            <FeatureDetails\n              key={JSON.stringify(sub)}\n              feature={sub}\n              model={model}\n              depth={depth + 1}\n            />\n          ))}\n        </BaseCard>\n      ) : null}\n    </BaseCard>\n  )\n}\n\nconst BaseFeatureDetails = observer(({ model }: BaseInputProps) => {\n  const { featureData } = model\n\n  if (!featureData) {\n    return null\n  }\n\n  // replacing undefined with null helps with allowing fields to be hidden,\n  // setting null is not allowed by jexl so we set it to undefined to hide. see\n  // config guide. this replacement happens both here and when snapshotting the\n  // featureData\n  const feature = JSON.parse(\n    JSON.stringify(featureData, (_, v) =>\n      typeof v === 'undefined' ? null : v,\n    ),\n  )\n  return isEmpty(feature) ? null : (\n    <FeatureDetails model={model} feature={feature} />\n  )\n})\n\nexport default BaseFeatureDetails\n"],"names":["useStyles","makeStyles","theme","formElt","margin","spacing","width","closeButton","position","right","top","color","palette","grey","dialogContent","SequenceFeatureSettingsDialog","handleClose","intronBpArg","intronBp","upDownBpArg","upDownBp","classes","useState","setIntronBp","setUpDownBp","intronBpValid","Number","isNaN","upDownBpValid","Dialog","maxWidth","open","onClose","DialogTitle","IconButton","className","onClick","Close","Divider","DialogContent","TextField","label","value","helperText","error","onChange","event","target","DialogActions","Button","disabled","variant","autoFocus","HelpDialog","Typography","paragraph","Settings","stitch","subfeats","sequence","map","sub","slice","start","end","join","getItemId","feat","dedupe","list","filter","item","pos","ary","revlist","seqlen","sort","a","b","cdsColor","updownstreamColor","GeneCDS","cds","style","background","GeneProtein","codonTable","str","protein","i","length","GenecDNA","utr","exons","upstream","downstream","includeIntrons","collapseIntron","chunks","f","chunk","index","intron","type","undefined","JSON","stringify","Genomic","React","props","ref","feature","mode","seq","subfeatures","children","match","firstCds","lastCds","firstCdsIdx","findIndex","exon","lastCdsIdx","lastCdsExon","firstCdsExon","fiveUTRs","elt","threeUTRs","calculateUTRs","parentFeat","calculateUTRs2","strand","revcom","generateCodonTable","defaultCodonTable","fontFamily","wordWrap","overflow","fontSize","maxHeight","name","id","refName","button","formControl","container","container2","marginTop","BPLIMIT","SequenceFeatureDetails","model","parentFeature","hasCDS","find","isGene","seqPanelRef","useRef","settingsDlgOpen","setSettingsDlgOpen","shown","setShown","helpShown","setHelpShown","setSequence","setError","copied","setCopied","copiedHtml","setCopiedHtml","useLocalStorage","uniqueId","force","forceLoad","setForceLoad","useEffect","finished","getSession","assemblyManager","rpcManager","view","assemblyNames","assemblyName","fetchSeq","waitForAssembly","assembly","Error","sessionId","call","adapterConfig","getConf","regions","getCanonicalRefName","feats","get","Math","max","up","down","console","loading","session","sequenceTypes","attemptGeneType","includes","parentId","val","setMode","rest","gene","gene_collapsed_intron","gene_updownstream","gene_updownstream_collapsed_intron","cdna","arg","genomic","genomic_sequence_updown","FormControl","Help","Select","Object","entries","key","MenuItem","current","copy","textContent","format","setTimeout","Tooltip","title","innerHTML","globalOmit","coreDetails","expansionPanelDetails","display","padding","expandIcon","field","flexWrap","fieldDescription","fieldName","wordBreak","minWidth","borderBottom","marginRight","fieldValue","fieldSubvalue","border","boxSizing","BaseCard","defaultExpanded","expanded","setExpanded","Accordion","s","TransitionProps","unmountOnExit","AccordionSummary","ExpandMore","AccordionDetails","FieldName","description","prefix","cx","placement","BasicValue","isLink","SanitizedHTML","html","isObject","String","SimpleValue","ArrayValue","Attributes","attributes","every","toLocale","n","toLocaleString","CoreDetails","obj","formattedFeat","__jbrowsefmt","strandMap","displayedDetails","BaseCoreDetails","UriLink","href","getUriLink","DataGridDetails","keys","unionKeys","Set","forEach","k","add","size","colNames","rows","identifier","has","delete","columns","renderCell","params","isUriLocation","getStr","measureGridWidth","r","hideFooter","height","min","DataGrid","disableSelectionOnClick","rowHeight","rowsPerPageOptions","hideFooterSelectedRowCount","UriAttribute","uri","baseUri","URL","e","omit","descriptions","formatter","hideUris","omits","formattedAttributes","maxLabelWidth","array","arr","push","measureText","ceil","generateMaxWidth","Description","accessNested","Array","isArray","BaseAttributes","generateTitle","slug","FeatureDetails","depth","pluginManager","getEnv","ExtraPanel","evaluateExtensionPoint","ErrorBoundary","FallbackComponent","ErrorMessage","Component","observer","featureData","parse","_","v"],"sourceRoot":""}