{"version":3,"sources":["../../../plugins/linear-genome-view/src/LinearBasicDisplay/components/SetMaxHeight.tsx"],"names":["useStyles","makeStyles","theme","root","width","closeButton","position","right","spacing","top","color","palette","grey","field","margin","observer","props","model","handleClose","classes","maxHeight","useState","max","setMax","open","onClose","id","className","onClick","value","onChange","event","target","placeholder","variant","type","style","marginLeft","setMaxHeight","Number","isNaN","undefined"],"mappings":"iQAeMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,MAAO,KAETC,YAAa,CACXC,SAAU,WACVC,MAAOL,EAAMM,QAAQ,GACrBC,IAAKP,EAAMM,QAAQ,GACnBE,MAAOR,EAAMS,QAAQC,KAAK,MAE5BC,MAAO,CACLC,OAAQZ,EAAMM,QAAQ,QA+DXO,8BA3Df,SAAyBC,GAOvB,IAAQC,EAAuBD,EAAvBC,MAAOC,EAAgBF,EAAhBE,YACTC,EAAUnB,IAChB,EAA2BiB,EAAnBG,iBAAR,MAAoB,GAApB,EACA,EAAsBC,mBAAS,GAAD,OAAID,IAAlC,mBAAOE,EAAP,KAAYC,EAAZ,KAEA,OACE,kBAAC,IAAD,CACEC,MAAI,EACJC,QAASP,EACT,kBAAgB,qBAChB,mBAAiB,4BAEjB,kBAAC,IAAD,CAAaQ,GAAG,sBAAhB,iBAEE,kBAAC,IAAD,CACE,aAAW,QACXC,UAAWR,EAAQd,YACnBuB,QAASV,GAET,kBAAC,IAAD,QAGJ,kBAAC,IAAD,KACE,yBAAKS,UAAWR,EAAQhB,MACtB,kBAAC,IAAD,qCACA,kBAAC,IAAD,CACE0B,MAAOP,EACPQ,SAAU,SAAAC,GACRR,EAAOQ,EAAMC,OAAOH,QAEtBI,YAAY,oBAEd,kBAAC,IAAD,CACEC,QAAQ,YACRxB,MAAM,UACNyB,KAAK,SACLC,MAAO,CAAEC,WAAY,IACrBT,QAAS,WACPX,EAAMqB,aACI,KAARhB,GAAeiB,OAAOC,OAAOlB,QAAcmB,GAANnB,GAEvCJ,MATJ","file":"static/js/72.b4f695b2.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  Typography,\n  TextField,\n  makeStyles,\n} from '@material-ui/core'\n\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 500,\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  field: {\n    margin: theme.spacing(2),\n  },\n}))\n\nfunction SetMaxHeightDlg(props: {\n  model: {\n    maxHeight?: number\n    setMaxHeight: Function\n  }\n  handleClose: () => void\n}) {\n  const { model, handleClose } = props\n  const classes = useStyles()\n  const { maxHeight = '' } = model\n  const [max, setMax] = useState(`${maxHeight}`)\n\n  return (\n    <Dialog\n      open\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        Filter options\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <div className={classes.root}>\n          <Typography>Set max height for the track</Typography>\n          <TextField\n            value={max}\n            onChange={event => {\n              setMax(event.target.value)\n            }}\n            placeholder=\"Enter max score\"\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            style={{ marginLeft: 20 }}\n            onClick={() => {\n              model.setMaxHeight(\n                max !== '' && !Number.isNaN(+max) ? +max : undefined,\n              )\n              handleClose()\n            }}\n          >\n            Submit\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default observer(SetMaxHeightDlg)\n"],"sourceRoot":""}