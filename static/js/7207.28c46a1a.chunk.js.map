{"version":3,"file":"static/js/7207.28c46a1a.chunk.js","mappings":"uQASMA,EAAW,OAEXC,EACJ,uNAEIC,GAAYC,EAAAA,EAAAA,IAAW,SAAAC,GAAK,MAAK,CACrCC,eAAgB,CACdJ,WAAAA,EACAD,SAAAA,EACAM,WAAYF,EAAMG,QAAQD,WAAWE,QACrCC,UAAW,OACXC,UAAW,OACXC,OAAQ,8BAEVC,kBAAmB,CACjBC,OAAQ,EACRZ,WAAAA,EACAD,SAAAA,OAKW,SAASc,EAAT,GAAgD,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YACvCC,EAAUf,IACVE,GAAQc,EAAAA,EAAAA,KAKd,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,iBAAmC,OAAQC,EAAAA,KAC1C,KAGD,SAAC,IAAD,CACEC,UAAWL,EAAQZ,eACnBkB,MAAOR,EACPS,cAAeR,EACfS,UAAW,SAAAC,GAAO,OAChB,SAAC,IAAD,CACEC,SAAS,OACTC,MAA8B,SAAvBxB,EAAMG,QAAQsB,KAAkBC,EAAAA,EAAWC,EAAAA,EAClDT,UAAWL,EAAQL,kBAGnBoB,YAAa,CAAE1B,WAAY,OAAQ2B,QAAS,GAN9C,SAQGP,KAGLO,QAAS,GACTL,MAAO","sources":["../../../plugins/config/src/ConfigurationEditorWidget/components/CodeEditor.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport Editor from 'react-simple-code-editor'\nimport { Light as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport json from 'react-syntax-highlighter/dist/cjs/languages/hljs/json'\nimport a11yDark from 'react-syntax-highlighter/dist/cjs/styles/hljs/a11y-dark'\nimport a11yLight from 'react-syntax-highlighter/dist/cjs/styles/hljs/a11y-light'\nimport { useTheme, makeStyles } from '@material-ui/core'\n\n// fontSize and fontFamily have to match between Editor and SyntaxHighlighter\nconst fontSize = '12px'\n// Optimize by using system default fonts: https://css-tricks.com/snippets/css/font-stacks/\nconst fontFamily =\n  'Consolas, \"Andale Mono WT\", \"Andale Mono\", \"Lucida Console\", \"Lucida Sans Typewriter\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Liberation Mono\", \"Nimbus Mono L\", Monaco, \"Courier New\", Courier, monospace'\n\nconst useStyles = makeStyles(theme => ({\n  callbackEditor: {\n    fontFamily,\n    fontSize,\n    background: theme.palette.background.default,\n    overflowX: 'auto',\n    marginTop: '16px',\n    border: '1px solid rgba(0,0,0,0.42)',\n  },\n  syntaxHighlighter: {\n    margin: 0,\n    fontFamily,\n    fontSize,\n  },\n}))\n\n// eslint-disable-next-line react/prop-types\nexport default function CodeEditor({ contents, setContents }) {\n  const classes = useStyles()\n  const theme = useTheme()\n  useEffect(() => {\n    SyntaxHighlighter.registerLanguage('json', json)\n  }, [])\n\n  return (\n    <Editor\n      className={classes.callbackEditor}\n      value={contents}\n      onValueChange={setContents}\n      highlight={newCode => (\n        <SyntaxHighlighter\n          language=\"json\"\n          style={theme.palette.type === 'dark' ? a11yDark : a11yLight}\n          className={classes.syntaxHighlighter}\n          // override some inline style stuff that's higher specificity\n          // than className\n          customStyle={{ background: 'none', padding: 0 }}\n        >\n          {newCode}\n        </SyntaxHighlighter>\n      )}\n      padding={10}\n      style={{}}\n    />\n  )\n}\n"],"names":["fontSize","fontFamily","useStyles","makeStyles","theme","callbackEditor","background","palette","default","overflowX","marginTop","border","syntaxHighlighter","margin","CodeEditor","contents","setContents","classes","useTheme","useEffect","SyntaxHighlighter","json","className","value","onValueChange","highlight","newCode","language","style","type","a11yDark","a11yLight","customStyle","padding"],"sourceRoot":""}