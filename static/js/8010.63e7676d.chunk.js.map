{"version":3,"file":"static/js/8010.63e7676d.chunk.js","mappings":"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","sources":["../../../plugins/breakpoint-split-view/src/BreakpointSplitView/components/util.ts","../../../plugins/breakpoint-split-view/src/BreakpointSplitView/components/AlignmentConnections.tsx","../../../plugins/breakpoint-split-view/src/BreakpointSplitView/components/Breakends.tsx","../../../plugins/breakpoint-split-view/src/BreakpointSplitView/components/Translocations.tsx","../../../plugins/breakpoint-split-view/src/BreakpointSplitView/components/Overlay.tsx","../../../plugins/breakpoint-split-view/src/BreakpointSplitView/svgcomponents/SVGBackground.tsx","../../../plugins/breakpoint-split-view/src/BreakpointSplitView/svgcomponents/SVGBreakpointSplitView.tsx"],"sourcesContent":["import { Feature, notEmpty } from '@jbrowse/core/util'\n\nimport { parseBreakend } from '@gmod/vcf'\n\n// this finds candidate alignment features, aimed at plotting split reads from\n// BAM/CRAM files\nexport function getBadlyPairedAlignments(features: Map<string, Feature>) {\n  const candidates = new Map<string, Feature[]>()\n  const alreadySeen = new Set<string>()\n\n  // this finds candidate features that share the same name\n  for (const feature of features.values()) {\n    const flags = feature.get('flags')\n    const id = feature.id()\n    const unmapped = flags & 4\n    const correctlyPaired = flags & 2\n\n    if (!alreadySeen.has(id) && !correctlyPaired && !unmapped) {\n      const n = feature.get('name')\n      let val = candidates.get(n)\n      if (!val) {\n        val = []\n        candidates.set(n, val)\n      }\n      val.push(feature)\n    }\n    alreadySeen.add(feature.id())\n  }\n\n  return [...candidates.values()].filter(v => v.length > 1)\n}\n\nfunction getTag(f: Feature, tag: string) {\n  const tags = f.get('tags')\n  return tags ? tags[tag] : f.get(tag)\n}\n\n// this finds candidate alignment features, aimed at plotting split reads from\n// BAM/CRAM files\nexport function getMatchedAlignmentFeatures(features: Map<string, Feature>) {\n  const candidates = new Map<string, Feature[]>()\n  const alreadySeen = new Set<string>()\n\n  // this finds candidate features that share the same name\n  for (const feature of features.values()) {\n    const id = feature.id()\n    const unmapped = feature.get('flags') & 4\n    const hasSA = !!getTag(feature, 'SA')\n    if (!alreadySeen.has(id) && !unmapped && hasSA) {\n      const n = feature.get('name')\n      let val = candidates.get(n)\n      if (!val) {\n        val = []\n        candidates.set(n, val)\n      }\n      val.push(feature)\n    }\n    alreadySeen.add(feature.id())\n  }\n\n  return [...candidates.values()].filter(v => v.length > 1)\n}\n\nexport function hasPairedReads(features: Map<string, Feature>) {\n  for (const f of features.values()) {\n    if (f.get('flags') & 1) {\n      return true\n    }\n  }\n  return false\n}\n\nexport function findMatchingAlt(feat1: Feature, feat2: Feature) {\n  const alts = feat1.get('ALT') as string[] | undefined\n  if (alts) {\n    return new Map(\n      alts\n        ?.map(alt => parseBreakend(alt))\n        .filter(notEmpty)\n        .map(bnd => [bnd.MatePosition, bnd]),\n    ).get(`${feat2.get('refName')}:${feat2.get('start') + 1}`)\n  }\n  return undefined\n}\n\n// Returns paired BND features across multiple views by inspecting the ALT\n// field to get exact coordinate matches\nexport function getMatchedBreakendFeatures(feats: Map<string, Feature>) {\n  const candidates = new Map<string, Feature[]>()\n  const alreadySeen = new Set<string>()\n\n  for (const f of feats.values()) {\n    if (!alreadySeen.has(f.id()) && f.get('type') === 'breakend') {\n      const alts = f.get('ALT') as string[] | undefined\n      alts?.forEach(a => {\n        const cur = `${f.get('refName')}:${f.get('start') + 1}`\n        const bnd = parseBreakend(a)\n        if (bnd) {\n          const val = candidates.get(cur)\n          if (!val) {\n            candidates.set(bnd.MatePosition || 'none', [f])\n          } else {\n            val.push(f)\n          }\n        }\n      })\n    }\n    alreadySeen.add(f.id())\n  }\n\n  return [...candidates.values()].filter(v => v.length > 1)\n}\n\n// Getting \"matched\" TRA means just return all TRA\nexport function getMatchedTranslocationFeatures(feats: Map<string, Feature>) {\n  const ret: Feature[][] = []\n  const alreadySeen = new Set<string>()\n\n  for (const f of feats.values()) {\n    if (!alreadySeen.has(f.id()) && f.get('ALT')[0] === '<TRA>') {\n      ret.push([f])\n    }\n    alreadySeen.add(f.id())\n  }\n\n  return ret\n}\n","import React, { useMemo, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { getSnapshot } from 'mobx-state-tree'\nimport { useTheme } from '@mui/material'\nimport { getSession } from '@jbrowse/core/util'\n\n// locals\nimport {\n  getBadlyPairedAlignments,\n  getMatchedAlignmentFeatures,\n  hasPairedReads,\n} from './util'\nimport { yPos, useNextFrame, getPxFromCoordinate } from '../util'\nimport { BreakpointViewModel } from '../model'\n\nconst [LEFT, , RIGHT] = [0, 1, 2, 3]\n\nconst AlignmentConnections = observer(function ({\n  model,\n  trackId,\n  parentRef,\n  getTrackYPosOverride,\n}: {\n  model: BreakpointViewModel\n  trackId: string\n  parentRef: React.RefObject<SVGSVGElement>\n  getTrackYPosOverride?: (trackId: string, level: number) => number\n}) {\n  const { views, showIntraviewLinks } = model\n  const theme = useTheme()\n  const session = getSession(model)\n  const snap = getSnapshot(model)\n  const { assemblyManager } = session\n  const assembly = assemblyManager.get(views[0].assemblyNames[0])\n  useNextFrame(snap)\n  const allFeatures = model.getTrackFeatures(trackId)\n  const hasPaired = useMemo(() => hasPairedReads(allFeatures), [allFeatures])\n\n  const layoutMatches = useMemo(() => {\n    const layoutMatches = model.getMatchedFeaturesInLayout(\n      trackId,\n      hasPaired\n        ? getBadlyPairedAlignments(allFeatures)\n        : getMatchedAlignmentFeatures(allFeatures),\n    )\n    if (!hasPaired) {\n      layoutMatches.forEach(m => {\n        m.sort((a, b) => a.feature.get('clipPos') - b.feature.get('clipPos'))\n      })\n    }\n    return layoutMatches\n  }, [allFeatures, trackId, hasPaired, model])\n\n  const [mouseoverElt, setMouseoverElt] = useState<string>()\n\n  let yOffset = 0\n  if (parentRef.current) {\n    const rect = parentRef.current.getBoundingClientRect()\n    yOffset = rect.top\n  }\n\n  if (!assembly) {\n    return null\n  }\n\n  return (\n    <g\n      stroke={theme.palette.text.disabled}\n      fill=\"none\"\n      data-testid={layoutMatches.length ? `${trackId}-loaded` : trackId}\n    >\n      {layoutMatches.map(chunk => {\n        const ret = []\n        // we follow a path in the list of chunks, not from top to bottom, just in series\n        // following x1,y1 -> x2,y2\n        for (let i = 0; i < chunk.length - 1; i++) {\n          const { layout: c1, feature: f1, level: level1 } = chunk[i]\n          const { layout: c2, feature: f2, level: level2 } = chunk[i + 1]\n\n          if (!c1 || !c2) {\n            console.warn('received null layout for a overlay feature')\n            return null\n          }\n\n          // disable rendering connections in a single level\n          if (!showIntraviewLinks && level1 === level2) {\n            return null\n          }\n          const f1ref = assembly.getCanonicalRefName(f1.get('refName'))\n          const f2ref = assembly.getCanonicalRefName(f2.get('refName'))\n\n          if (!f1ref || !f2ref) {\n            throw new Error(`unable to find ref for ${f1ref || f2ref}`)\n          }\n\n          const s1 = f1.get('strand')\n          const s2 = f2.get('strand')\n          const p1 = c1[s1 === -1 ? LEFT : RIGHT]\n          const sn1 = s2 === -1\n          const p2 = hasPaired ? c2[sn1 ? LEFT : RIGHT] : c2[sn1 ? RIGHT : LEFT]\n          const x1 = getPxFromCoordinate(views[level1], f1ref, p1)\n          const x2 = getPxFromCoordinate(views[level2], f2ref, p2)\n          const reversed1 = views[level1].pxToBp(x1).reversed\n          const reversed2 = views[level2].pxToBp(x2).reversed\n          const tracks = views.map(v => v.getTrack(trackId))\n          const y1 =\n            yPos(trackId, level1, views, tracks, c1, getTrackYPosOverride) -\n            yOffset\n          const y2 =\n            yPos(trackId, level2, views, tracks, c2, getTrackYPosOverride) -\n            yOffset\n\n          // possible todo: use totalCurveHeight to possibly make alternative\n          // squiggle if the S is too small\n          const path = [\n            'M',\n            x1,\n            y1,\n            'C',\n            x1 + 200 * f1.get('strand') * (reversed1 ? -1 : 1),\n            y1,\n            x2 -\n              200 *\n                f2.get('strand') *\n                (reversed2 ? -1 : 1) *\n                (hasPaired ? -1 : 1),\n            y2,\n            x2,\n            y2,\n          ].join(' ')\n          const id = `${f1.id()}-${f2.id()}`\n          ret.push(\n            <path\n              d={path}\n              key={id}\n              data-testid=\"r1\"\n              strokeWidth={mouseoverElt === id ? 5 : 1}\n              onClick={() => {\n                const featureWidget = session.addWidget?.(\n                  'BreakpointAlignmentsWidget',\n                  'breakpointAlignments',\n                  {\n                    featureData: {\n                      feature1: (\n                        allFeatures.get(f1.id()) || { toJSON: () => {} }\n                      ).toJSON(),\n                      feature2: (\n                        allFeatures.get(f2.id()) || { toJSON: () => {} }\n                      ).toJSON(),\n                    },\n                  },\n                )\n                session.showWidget?.(featureWidget)\n              }}\n              onMouseOver={() => setMouseoverElt(id)}\n              onMouseOut={() => setMouseoverElt(undefined)}\n            />,\n          )\n        }\n        return ret\n      })}\n    </g>\n  )\n})\n\nexport default AlignmentConnections\n","import React, { useState, useMemo } from 'react'\nimport { getSession } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\nimport { getSnapshot } from 'mobx-state-tree'\n\n// locals\nimport { findMatchingAlt, getMatchedBreakendFeatures } from './util'\nimport { yPos, getPxFromCoordinate, useNextFrame } from '../util'\nimport { BreakpointViewModel } from '../model'\n\nconst [LEFT] = [0, 1, 2, 3]\n\nconst Breakends = observer(function ({\n  model,\n  trackId,\n  parentRef: ref,\n  getTrackYPosOverride,\n}: {\n  model: BreakpointViewModel\n  trackId: string\n  parentRef: React.RefObject<SVGSVGElement>\n  getTrackYPosOverride?: (trackId: string, level: number) => number\n}) {\n  const { views } = model\n  const session = getSession(model)\n  const { assemblyManager } = session\n  const totalFeatures = model.getTrackFeatures(trackId)\n  const layoutMatches = useMemo(\n    () =>\n      model.getMatchedFeaturesInLayout(\n        trackId,\n        getMatchedBreakendFeatures(totalFeatures),\n      ),\n    [totalFeatures, trackId, model],\n  )\n\n  const [mouseoverElt, setMouseoverElt] = useState<string>()\n  const snap = getSnapshot(model)\n  useNextFrame(snap)\n  const assembly = assemblyManager.get(views[0].assemblyNames[0])\n\n  if (!assembly) {\n    return null\n  }\n\n  let yoff = 0\n  if (ref.current) {\n    const rect = ref.current.getBoundingClientRect()\n    yoff = rect.top\n  }\n\n  return (\n    <g\n      stroke=\"green\"\n      strokeWidth={5}\n      fill=\"none\"\n      data-testid={layoutMatches.length ? `${trackId}-loaded` : trackId}\n    >\n      {layoutMatches.map(chunk => {\n        const ret = []\n        // we follow a path in the list of chunks, not from top to bottom, just\n        // in series following x1,y1 -> x2,y2\n        for (let i = 0; i < chunk.length - 1; i += 1) {\n          const { layout: c1, feature: f1, level: level1 } = chunk[i]\n          const { layout: c2, feature: f2, level: level2 } = chunk[i + 1]\n          const id = f1.id()\n\n          const relevantAlt = findMatchingAlt(f1, f2)\n          if (!c1 || !c2) {\n            return null\n          }\n          const f1origref = f1.get('refName')\n          const f2origref = f2.get('refName')\n          const f1ref = assembly.getCanonicalRefName(f1origref)\n          const f2ref = assembly.getCanonicalRefName(f2origref)\n          if (!f1ref || !f2ref) {\n            throw new Error(`unable to find ref for ${f1ref || f2ref}`)\n          }\n          const x1 = getPxFromCoordinate(views[level1], f1ref, c1[LEFT])\n          const x2 = getPxFromCoordinate(views[level2], f2ref, c2[LEFT])\n          const reversed1 = views[level1].pxToBp(x1).reversed\n          const reversed2 = views[level2].pxToBp(x2).reversed\n\n          const tracks = views.map(v => v.getTrack(trackId))\n          const y1 =\n            yPos(trackId, level1, views, tracks, c1, getTrackYPosOverride) -\n            yoff\n          const y2 =\n            yPos(trackId, level2, views, tracks, c2, getTrackYPosOverride) -\n            yoff\n          if (!relevantAlt) {\n            console.warn('the relevant ALT allele was not found, cannot render')\n          } else {\n            const path = [\n              'M', // move to\n              x1 -\n                20 *\n                  (relevantAlt.Join === 'left' ? -1 : 1) *\n                  (reversed1 ? -1 : 1),\n              y1,\n              'L', // line to\n              x1,\n              y1,\n              'L', // line to\n              x2,\n              y2,\n              'L', // line to\n              x2 -\n                20 *\n                  (relevantAlt.MateDirection === 'left' ? 1 : -1) *\n                  (reversed2 ? -1 : 1),\n              y2,\n            ].join(' ')\n            ret.push(\n              <path\n                d={path}\n                key={JSON.stringify(path)}\n                strokeWidth={id === mouseoverElt ? 10 : 5}\n                onClick={() => {\n                  const featureWidget = session.addWidget?.(\n                    'VariantFeatureWidget',\n                    'variantFeature',\n                    {\n                      featureData: totalFeatures.get(id)?.toJSON(),\n                    },\n                  )\n                  session.showWidget?.(featureWidget)\n                }}\n                onMouseOver={() => setMouseoverElt(id)}\n                onMouseOut={() => setMouseoverElt(undefined)}\n              />,\n            )\n          }\n        }\n        return ret\n      })}\n    </g>\n  )\n})\n\nexport default Breakends\n","import React, { useState, useMemo } from 'react'\nimport { getSession } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\nimport { getSnapshot } from 'mobx-state-tree'\n\n// locals\nimport { getMatchedTranslocationFeatures } from './util'\nimport { yPos, getPxFromCoordinate, useNextFrame } from '../util'\nimport { BreakpointViewModel, LayoutRecord } from '../model'\n\nconst [LEFT] = [0, 1, 2, 3]\n\nconst Translocations = observer(function ({\n  model,\n  trackId,\n  parentRef: ref,\n  getTrackYPosOverride,\n}: {\n  model: BreakpointViewModel\n  trackId: string\n  parentRef: React.RefObject<SVGSVGElement>\n  getTrackYPosOverride?: (trackId: string, level: number) => number\n}) {\n  const { views } = model\n  const session = getSession(model)\n  const { assemblyManager } = session\n  const totalFeatures = model.getTrackFeatures(trackId)\n  const layoutMatches = useMemo(\n    () =>\n      model.getMatchedFeaturesInLayout(\n        trackId,\n        getMatchedTranslocationFeatures(totalFeatures),\n      ),\n\n    [totalFeatures, trackId, model],\n  )\n\n  const [mouseoverElt, setMouseoverElt] = useState<string>()\n  const snap = getSnapshot(model)\n  useNextFrame(snap)\n\n  const assembly = assemblyManager.get(views[0].assemblyNames[0])\n  if (!assembly) {\n    return null\n  }\n\n  let yOffset = 0\n  if (ref.current) {\n    const rect = ref.current.getBoundingClientRect()\n    yOffset = rect.top\n  }\n\n  // we hardcode the TRA to go to the \"other view\" and if there is none, we\n  // just return null here note: would need to do processing of the INFO\n  // CHR2/END and see which view could contain those coordinates to really do\n  // it properly\n  if (views.length < 2) {\n    return null\n  }\n  return (\n    <g\n      fill=\"none\"\n      stroke=\"green\"\n      strokeWidth={5}\n      data-testid={layoutMatches.length ? `${trackId}-loaded` : trackId}\n    >\n      {layoutMatches.map(chunk => {\n        // we follow a path in the list of chunks, not from top to bottom,\n        // just in series following x1,y1 -> x2,y2\n        const ret = []\n        for (let i = 0; i < chunk.length; i += 1) {\n          const { layout: c1, feature: f1, level: level1 } = chunk[i]\n          const level2 = level1 === 0 ? 1 : 0\n          const id = f1.id()\n          if (!c1) {\n            return null\n          }\n\n          const info = f1.get('INFO')\n          const chr2 = info.CHR2[0]\n          const end2 = info.END[0]\n          const [myDirection, mateDirection] = info.STRANDS[0].split('')\n\n          const r = getPxFromCoordinate(views[level2], chr2, end2)\n          if (r) {\n            const c2: LayoutRecord = [r, 0, r + 1, 0]\n            const x1 = getPxFromCoordinate(\n              views[level1],\n              f1.get('refName'),\n              c1[LEFT],\n            )\n            const x2 = r\n            const reversed1 = views[level1].pxToBp(x1).reversed\n            const reversed2 = views[level2].pxToBp(x2).reversed\n\n            const tracks = views.map(v => v.getTrack(trackId))\n            const y1 =\n              yPos(trackId, level1, views, tracks, c1, getTrackYPosOverride) -\n              yOffset\n            const y2 =\n              yPos(trackId, level2, views, tracks, c2, getTrackYPosOverride) -\n              yOffset\n\n            const path = [\n              'M', // move to\n              x1 - 20 * (myDirection === '+' ? 1 : -1) * (reversed1 ? -1 : 1),\n              y1,\n              'L', // line to\n              x1,\n              y1,\n              'L', // line to\n              x2,\n              y2,\n              'L', // line to\n              x2 - 20 * (mateDirection === '+' ? 1 : -1) * (reversed2 ? -1 : 1),\n              y2,\n            ].join(' ')\n            ret.push(\n              <path\n                d={path}\n                key={JSON.stringify(path)}\n                strokeWidth={id === mouseoverElt ? 10 : 5}\n                onClick={() => {\n                  const featureWidget = session.addWidget?.(\n                    'VariantFeatureWidget',\n                    'variantFeature',\n                    {\n                      featureData: (\n                        totalFeatures.get(id) || { toJSON: () => {} }\n                      ).toJSON(),\n                    },\n                  )\n                  session.showWidget?.(featureWidget)\n                }}\n                onMouseOver={() => setMouseoverElt(id)}\n                onMouseOut={() => setMouseoverElt(undefined)}\n              />,\n            )\n          }\n        }\n        return ret\n      })}\n    </g>\n  )\n})\n\nexport default Translocations\n","import React from 'react'\nimport { observer } from 'mobx-react'\n\n// locals\nimport { BreakpointViewModel } from '../model'\nimport AlignmentConnections from './AlignmentConnections'\nimport Breakends from './Breakends'\nimport Translocations from './Translocations'\n\nexport default observer(function (props: {\n  parentRef: React.RefObject<SVGSVGElement>\n  model: BreakpointViewModel\n  trackId: string\n  getTrackYPosOverride?: (trackId: string, level: number) => number\n}) {\n  const { model, trackId } = props\n  const tracks = model.getMatchedTracks(trackId)\n  if (tracks[0]?.type === 'AlignmentsTrack') {\n    return <AlignmentConnections {...props} />\n  }\n  if (tracks[0]?.type === 'VariantTrack') {\n    return model.hasTranslocations(trackId) ? (\n      <Translocations {...props} />\n    ) : (\n      <Breakends {...props} />\n    )\n  }\n  return null\n})\n","import React from 'react'\nimport { useTheme } from '@mui/material'\nimport Color from 'color'\n\nexport default function SVGBackground({\n  width,\n  height,\n  shift,\n}: {\n  width: number\n  height: number\n  shift: number\n}) {\n  const theme = useTheme()\n  return (\n    <rect\n      width={width + shift * 2}\n      height={height}\n      fill={Color(theme.palette.background.default).hex()}\n    />\n  )\n}\n","import React from 'react'\nimport { renderToStaticMarkup } from 'react-dom/server'\nimport { when } from 'mobx'\nimport {\n  AbstractSessionModel,\n  getSession,\n  max,\n  measureText,\n  sum,\n} from '@jbrowse/core/util'\nimport { ThemeProvider } from '@mui/material'\nimport { createJBrowseTheme } from '@jbrowse/core/ui'\n\n// locals\nimport {\n  SVGTracks,\n  SVGRuler,\n  totalHeight,\n  LinearGenomeViewModel,\n} from '@jbrowse/plugin-linear-genome-view'\n\n// locals\nimport SVGBackground from './SVGBackground'\nimport { ExportSvgOptions, BreakpointViewModel } from '../model'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport Overlay from '../components/Overlay'\n\ntype BSV = BreakpointViewModel\n\nfunction getTrackNameMaxLen(\n  views: LinearGenomeViewModel[],\n  fontSize: number,\n  session: AbstractSessionModel,\n) {\n  return max(\n    views.flatMap(view =>\n      view.tracks.map(t =>\n        measureText(getTrackName(t.configuration, session), fontSize),\n      ),\n    ),\n    0,\n  )\n}\nfunction getTrackOffsets(\n  view: LinearGenomeViewModel,\n  textOffset: number,\n  extra = 0,\n) {\n  const offsets = {} as { [key: string]: number }\n  let curr = textOffset\n  for (let i = 0; i < view.tracks.length; i++) {\n    const track = view.tracks[i]\n    offsets[track.configuration.trackId] = curr + extra\n    curr += track.displays[0].height + textOffset\n  }\n  return offsets\n}\n\n// render LGV to SVG\nexport async function renderToSvg(model: BSV, opts: ExportSvgOptions) {\n  const {\n    textHeight = 18,\n    headerHeight = 30,\n    rulerHeight = 30,\n    fontSize = 13,\n    trackLabels = 'offset',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Wrapper = ({ children }: any) => <>{children}</>,\n    themeName = 'default',\n  } = opts\n  const session = getSession(model)\n  const theme = session.allThemes?.()[themeName]\n  const { width, views } = model\n  const shift = 50\n  const offset = headerHeight + rulerHeight\n\n  const heights = views.map(\n    v => totalHeight(v.tracks, textHeight, trackLabels) + offset,\n  )\n  const totalHeightSvg = sum(heights) + 100\n  const displayResults = await Promise.all(\n    views.map(\n      async view =>\n        ({\n          view,\n          data: await Promise.all(\n            view.tracks.map(async track => {\n              const d = track.displays[0]\n              await when(() => (d.ready !== undefined ? d.ready : true))\n              return { track, result: await d.renderSvg({ ...opts, theme }) }\n            }),\n          ),\n        }) as const,\n    ),\n  )\n\n  const trackLabelMaxLen = getTrackNameMaxLen(views, fontSize, session) + 40\n  const trackLabelOffset = trackLabels === 'left' ? trackLabelMaxLen : 0\n  const textOffset = trackLabels === 'offset' ? textHeight : 0\n  const trackOffsets = [\n    getTrackOffsets(views[0], textOffset, fontSize + offset),\n    getTrackOffsets(views[1], textOffset, fontSize + heights[0] + offset),\n  ]\n  const w = width + trackLabelOffset\n  const t = createJBrowseTheme(theme)\n\n  // the xlink namespace is used for rendering <image> tag\n  return renderToStaticMarkup(\n    <ThemeProvider theme={t}>\n      <Wrapper>\n        <svg\n          width={width}\n          height={totalHeightSvg}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n          viewBox={[0, 0, w + shift * 2, totalHeightSvg].toString()}\n        >\n          <SVGBackground width={w} height={totalHeightSvg} shift={shift} />\n          <g transform={`translate(${shift} ${fontSize})`}>\n            <g transform={`translate(${trackLabelOffset})`}>\n              <text x={0} fontSize={fontSize} fill={t.palette.text.primary}>\n                {views[0].assemblyNames.join(', ')}\n              </text>\n\n              <SVGRuler model={displayResults[0].view} fontSize={fontSize} />\n            </g>\n            <SVGTracks\n              textHeight={textHeight}\n              trackLabels={trackLabels}\n              fontSize={fontSize}\n              model={displayResults[0].view}\n              displayResults={displayResults[0].data}\n              offset={offset}\n              trackLabelOffset={trackLabelOffset}\n            />\n          </g>\n\n          <g transform={`translate(${shift} ${fontSize + heights[0]})`}>\n            <g transform={`translate(${trackLabelOffset})`}>\n              <text x={0} fontSize={fontSize} fill={t.palette.text.primary}>\n                {views[1].assemblyNames.join(', ')}\n              </text>\n              <SVGRuler model={displayResults[1].view} fontSize={fontSize} />\n            </g>\n            <SVGTracks\n              textHeight={textHeight}\n              trackLabels={trackLabels}\n              fontSize={fontSize}\n              model={displayResults[1].view}\n              displayResults={displayResults[1].data}\n              offset={offset}\n              trackLabelOffset={trackLabelOffset}\n            />\n          </g>\n\n          <defs>\n            <clipPath id=\"clip-bsv\">\n              <rect x={0} y={0} width={width} height={totalHeightSvg} />\n            </clipPath>\n          </defs>\n          <g\n            transform={`translate(${trackLabelOffset + shift})`}\n            clipPath=\"url(#clip-bsv)\"\n          >\n            {model.matchedTracks.map(track => (\n              <Overlay\n                parentRef={{ current: null }}\n                key={track.configuration.trackId}\n                model={model}\n                trackId={track.configuration.trackId}\n                getTrackYPosOverride={(id, level) => trackOffsets[level][id]}\n              />\n            ))}\n          </g>\n        </svg>\n      </Wrapper>\n    </ThemeProvider>,\n  )\n}\n"],"names":["getTag","f","tag","tags","get","_ref","LEFT","RIGHT","observer","_ref2","model","trackId","parentRef","getTrackYPosOverride","views","showIntraviewLinks","theme","useTheme","session","getSession","snap","getSnapshot","assembly","assemblyManager","assemblyNames","useNextFrame","allFeatures","getTrackFeatures","hasPaired","useMemo","features","_step3","_iterator3","_createForOfIteratorHelper","values","s","n","done","value","err","e","hasPairedReads","layoutMatches","getMatchedFeaturesInLayout","_step","candidates","Map","alreadySeen","Set","_iterator","feature","flags","id","unmapped","correctlyPaired","has","val","set","push","add","_toConsumableArray","filter","v","length","getBadlyPairedAlignments","_step2","_iterator2","hasSA","getMatchedAlignmentFeatures","forEach","m","sort","a","b","_useState","useState","_useState2","_slicedToArray","mouseoverElt","setMouseoverElt","yOffset","current","rect","getBoundingClientRect","top","_jsx","stroke","palette","text","disabled","fill","concat","children","map","chunk","_ret","ret","_loop","_chunk$i","i","c1","layout","f1","level1","level","_chunk","c2","f2","level2","console","warn","f1ref","getCanonicalRefName","f2ref","Error","s1","s2","p1","sn1","p2","x1","getPxFromCoordinate","x2","reversed1","pxToBp","reversed","reversed2","tracks","getTrack","y1","yPos","y2","path","join","d","strokeWidth","onClick","_session$addWidget","_session$showWidget","featureWidget","addWidget","call","featureData","feature1","toJSON","feature2","showWidget","onMouseOver","onMouseOut","undefined","ref","totalFeatures","feats","_step4","_iterator4","alts","cur","bnd","parseBreakend","MatePosition","getMatchedBreakendFeatures","yoff","relevantAlt","feat1","feat2","alt","notEmpty","findMatchingAlt","f1origref","f2origref","Join","MateDirection","_totalFeatures$get","JSON","stringify","_step5","_iterator5","getMatchedTranslocationFeatures","info","chr2","CHR2","end2","END","_info$STRANDS$0$split","STRANDS","split","_info$STRANDS$0$split2","myDirection","mateDirection","r","props","_tracks$","_tracks$2","getMatchedTracks","type","AlignmentConnections","_objectSpread","hasTranslocations","Translocations","Breakends","SVGBackground","width","height","shift","Color","background","default","hex","getTrackNameMaxLen","fontSize","max","flatMap","view","t","measureText","getTrackName","configuration","getTrackOffsets","textOffset","extra","arguments","offsets","curr","track","displays","renderToSvg","_x","_x2","_renderToSvg","apply","_asyncToGenerator","_regeneratorRuntime","mark","_callee3","opts","_session$allThemes","_opts$textHeight","textHeight","_opts$headerHeight","headerHeight","_opts$rulerHeight","rulerHeight","_opts$fontSize","_opts$trackLabels","trackLabels","_opts$Wrapper","Wrapper","_opts$themeName","themeName","offset","heights","totalHeightSvg","displayResults","trackLabelMaxLen","trackLabelOffset","trackOffsets","w","wrap","_context3","prev","next","_Fragment","allThemes","totalHeight","sum","Promise","all","_callee2","_context2","t0","_ref3","_callee","_context","when","ready","renderSvg","t1","sent","abrupt","result","stop","_x4","data","_x3","createJBrowseTheme","renderToStaticMarkup","ThemeProvider","_jsxs","xmlns","xmlnsXlink","viewBox","toString","transform","x","primary","SVGRuler","SVGTracks","y","clipPath","matchedTracks","Overlay"],"sourceRoot":""}