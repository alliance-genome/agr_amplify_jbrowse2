{"version":3,"file":"static/js/7554.bd24f107.chunk.js","mappings":"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","sources":["../../../plugins/linear-comparative-view/src/LinearComparativeView/components/Rubberband.tsx","../../../plugins/linear-comparative-view/src/LinearComparativeView/components/Header.tsx","../../../plugins/linear-comparative-view/src/LinearComparativeView/components/LinearComparativeView.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { Popover, Tooltip, Typography, alpha } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { stringify } from '@jbrowse/core/util'\nimport { Menu } from '@jbrowse/core/ui'\nimport { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\nimport { LinearComparativeViewModel } from '../model'\n\ntype LCV = LinearComparativeViewModel\ntype LGV = LinearGenomeViewModel\n\nconst useStyles = makeStyles()(theme => {\n  const { tertiary, primary } = theme.palette\n  const background = tertiary\n    ? alpha(tertiary.main, 0.7)\n    : alpha(primary.main, 0.7)\n  return {\n    rubberband: {\n      height: '100%',\n      background,\n      position: 'absolute',\n      zIndex: 10,\n      textAlign: 'center',\n      overflow: 'hidden',\n    },\n    rubberbandControl: {\n      cursor: 'crosshair',\n      width: '100%',\n      minHeight: 8,\n    },\n    rubberbandText: {\n      color: tertiary ? tertiary.contrastText : primary.contrastText,\n    },\n    popover: {\n      mouseEvents: 'none',\n      cursor: 'crosshair',\n    },\n    paper: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n    },\n    guide: {\n      pointerEvents: 'none',\n      height: '100%',\n      width: 1,\n      position: 'absolute',\n      zIndex: 10,\n    },\n    sm: {\n      fontSize: 10,\n    },\n  }\n})\n\nconst VerticalGuide = observer(\n  ({ model, coordX }: { model: LCV; coordX: number }) => {\n    const { classes } = useStyles()\n    return (\n      <Tooltip\n        open\n        placement=\"top\"\n        title={model.views\n          .map(view => view.pxToBp(coordX))\n          .map(elt => (\n            <Typography className={classes.sm} key={JSON.stringify(elt)}>\n              {stringify(elt)}\n            </Typography>\n          ))}\n        arrow\n      >\n        <div\n          className={classes.guide}\n          style={{\n            left: coordX,\n            background: 'red',\n          }}\n        />\n      </Tooltip>\n    )\n  },\n)\n\nfunction Rubberband({\n  model,\n  ControlComponent = <div />,\n}: {\n  model: LCV\n  ControlComponent?: React.ReactElement\n}) {\n  const [startX, setStartX] = useState<number>()\n  const [currentX, setCurrentX] = useState<number>()\n\n  // clientX and clientY used for anchorPosition for menu\n  // offsetX used for calculations about width of selection\n  const [anchorPosition, setAnchorPosition] = useState<{\n    offsetX: number\n    clientX: number\n    clientY: number\n  }>()\n  const [guideX, setGuideX] = useState<number>()\n  const controlsRef = useRef<HTMLDivElement>(null)\n  const rubberbandRef = useRef(null)\n  const { classes } = useStyles()\n  const mouseDragging = startX !== undefined && anchorPosition === undefined\n\n  useEffect(() => {\n    function computeOffsets(offsetX: number, view: LGV) {\n      if (startX === undefined) {\n        return\n      }\n      let leftPx = startX\n      let rightPx = offsetX\n      // handles clicking and dragging to the left\n      if (rightPx < leftPx) {\n        ;[leftPx, rightPx] = [rightPx, leftPx]\n      }\n      const leftOffset = view.pxToBp(leftPx)\n      const rightOffset = view.pxToBp(rightPx)\n\n      return { leftOffset, rightOffset }\n    }\n\n    function globalMouseMove(event: MouseEvent) {\n      if (controlsRef.current && mouseDragging) {\n        const relativeX =\n          event.clientX - controlsRef.current.getBoundingClientRect().left\n        setCurrentX(relativeX)\n      }\n    }\n\n    function globalMouseUp(event: MouseEvent) {\n      if (startX !== undefined && controlsRef.current) {\n        const { clientX, clientY } = event\n        const ref = controlsRef.current\n        const offsetX = clientX - ref.getBoundingClientRect().left\n        // as stated above, store both clientX/Y and offsetX for different\n        // purposes\n        setAnchorPosition({\n          offsetX,\n          clientX,\n          clientY,\n        })\n        model.views.forEach(view => {\n          const args = computeOffsets(offsetX, view)\n          if (args) {\n            const { leftOffset, rightOffset } = args\n            view.setOffsets(leftOffset, rightOffset)\n          }\n        })\n        setGuideX(undefined)\n      }\n    }\n    if (mouseDragging) {\n      window.addEventListener('mousemove', globalMouseMove)\n      window.addEventListener('mouseup', globalMouseUp)\n      return () => {\n        window.removeEventListener('mousemove', globalMouseMove)\n        window.removeEventListener('mouseup', globalMouseUp)\n      }\n    }\n    return () => {}\n  }, [startX, mouseDragging, anchorPosition, model])\n\n  useEffect(() => {\n    if (\n      !mouseDragging &&\n      currentX !== undefined &&\n      startX !== undefined &&\n      Math.abs(currentX - startX) <= 3\n    ) {\n      handleClose()\n    }\n  }, [mouseDragging, currentX, startX])\n\n  function mouseDown(event: React.MouseEvent<HTMLDivElement>) {\n    event.preventDefault()\n    event.stopPropagation()\n    const relativeX =\n      event.clientX -\n      (event.target as HTMLDivElement).getBoundingClientRect().left\n    setStartX(relativeX)\n    setCurrentX(relativeX)\n  }\n\n  function mouseMove(event: React.MouseEvent<HTMLDivElement>) {\n    const target = event.target as HTMLDivElement\n    setGuideX(event.clientX - target.getBoundingClientRect().left)\n  }\n\n  function mouseOut() {\n    setGuideX(undefined)\n    model.views.forEach(view => view.setOffsets(undefined, undefined))\n  }\n\n  function handleClose() {\n    setAnchorPosition(undefined)\n    setStartX(undefined)\n    setCurrentX(undefined)\n  }\n\n  const open = Boolean(anchorPosition)\n\n  function handleMenuItemClick(_: unknown, callback: Function) {\n    callback()\n    handleClose()\n  }\n\n  if (startX === undefined) {\n    return (\n      <>\n        {guideX !== undefined ? (\n          <VerticalGuide model={model} coordX={guideX} />\n        ) : null}\n        <div\n          data-testid=\"rubberband_controls\"\n          className={classes.rubberbandControl}\n          role=\"presentation\"\n          ref={controlsRef}\n          onMouseDown={mouseDown}\n          onMouseOut={mouseOut}\n          onMouseMove={mouseMove}\n        >\n          {ControlComponent}\n        </div>\n      </>\n    )\n  }\n\n  /* Calculating Pixels for Mouse Dragging */\n  const right = anchorPosition ? anchorPosition.offsetX : currentX || 0\n  const left = right < startX ? right : startX\n  const width = Math.abs(right - startX)\n  const { views } = model\n  const leftBpOffset = views.map(view => view.pxToBp(left))\n  const rightBpOffset = views.map(view => view.pxToBp(left + width))\n  const numOfBpSelected = views.map(view => Math.ceil(width * view.bpPerPx))\n  return (\n    <>\n      {rubberbandRef.current ? (\n        <>\n          <Popover\n            className={classes.popover}\n            classes={{\n              paper: classes.paper,\n            }}\n            open\n            anchorEl={rubberbandRef.current}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'left',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right',\n            }}\n            keepMounted\n            disableRestoreFocus\n          >\n            {leftBpOffset.map(l => (\n              <Typography key={JSON.stringify(l)}>{stringify(l)}</Typography>\n            ))}\n          </Popover>\n          <Popover\n            className={classes.popover}\n            classes={{\n              paper: classes.paper,\n            }}\n            open\n            anchorEl={rubberbandRef.current}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left',\n            }}\n            keepMounted\n            disableRestoreFocus\n          >\n            {rightBpOffset.map(l => (\n              <Typography key={JSON.stringify(l)}>{stringify(l)}</Typography>\n            ))}\n          </Popover>\n        </>\n      ) : null}\n      <div\n        ref={rubberbandRef}\n        className={classes.rubberband}\n        style={{ left, width }}\n      >\n        <Typography variant=\"h6\" className={classes.rubberbandText}>\n          {numOfBpSelected.map((n, i) => (\n            <Typography key={`${n}_${i}`}>{`${n.toLocaleString(\n              'en-US',\n            )}bp`}</Typography>\n          ))}\n        </Typography>\n      </div>\n      <div\n        data-testid=\"rubberband_controls\"\n        className={classes.rubberbandControl}\n        role=\"presentation\"\n        ref={controlsRef}\n        onMouseDown={mouseDown}\n        onMouseOut={mouseOut}\n        onMouseMove={mouseMove}\n      >\n        {ControlComponent}\n      </div>\n      {anchorPosition ? (\n        <Menu\n          anchorReference=\"anchorPosition\"\n          anchorPosition={{\n            left: anchorPosition.clientX,\n            top: anchorPosition.clientY,\n          }}\n          onMenuItemClick={handleMenuItemClick}\n          open={open}\n          onClose={handleClose}\n          menuItems={model.rubberBandMenuItems()}\n        />\n      ) : null}\n    </>\n  )\n}\n\nexport default observer(Rubberband)\n","import React, { useState } from 'react'\nimport { IconButton, Typography } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { SearchBox } from '@jbrowse/plugin-linear-genome-view'\nimport { observer } from 'mobx-react'\nimport { Menu } from '@jbrowse/core/ui'\n\n// icons\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\n\n// locals\nimport { LinearComparativeViewModel } from '../model'\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\n\ntype LCV = LinearComparativeViewModel\n\nconst useStyles = makeStyles()(() => ({\n  headerBar: {\n    gridArea: '1/1/auto/span 2',\n    display: 'flex',\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  iconButton: {\n    margin: 5,\n  },\n  bp: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 10,\n  },\n  searchContainer: {\n    marginLeft: 5,\n  },\n  searchBox: {\n    display: 'flex',\n  },\n}))\n\nconst TrackSelector = observer(({ model }: { model: LCV }) => {\n  return (\n    <IconButton\n      onClick={model.activateTrackSelector}\n      title=\"Open track selector\"\n    >\n      <TrackSelectorIcon />\n    </IconButton>\n  )\n})\n\nconst Header = observer(function ({ model }: { model: LCV }) {\n  const { classes } = useStyles()\n  const [menuAnchorEl, setMenuAnchorEl] = useState<HTMLElement>()\n  const anyShowHeaders = model.views.some(view => !view.hideHeader)\n  return (\n    <div className={classes.headerBar}>\n      <TrackSelector model={model} />\n\n      <IconButton\n        onClick={event => setMenuAnchorEl(event.currentTarget)}\n        className={classes.iconButton}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      {!anyShowHeaders\n        ? model.views.map(view => (\n            <div key={view.id} className={classes.searchBox}>\n              <div className={classes.searchContainer}>\n                <SearchBox model={view} showHelp={false} />\n              </div>\n              <div className={classes.bp}>\n                <Typography\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                  className={classes.bp}\n                >\n                  {Math.round(view.coarseTotalBp).toLocaleString('en-US')} bp\n                </Typography>\n              </div>\n            </div>\n          ))\n        : null}\n\n      <div className={classes.spacer} />\n\n      {menuAnchorEl ? (\n        <Menu\n          anchorEl={menuAnchorEl}\n          open\n          onMenuItemClick={(_event, callback) => {\n            callback()\n            setMenuAnchorEl(undefined)\n          }}\n          menuItems={model.headerMenuItems()}\n          onClose={() => setMenuAnchorEl(undefined)}\n        />\n      ) : null}\n    </div>\n  )\n})\n\nexport default Header\n","import React from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { getConf, AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { getEnv } from '@jbrowse/core/util'\nimport { ResizeHandle } from '@jbrowse/core/ui'\n\n// locals\nimport { LinearComparativeViewModel } from '../model'\nimport Rubberband from './Rubberband'\nimport Header from './Header'\n\nconst useStyles = makeStyles()(theme => ({\n  container: {\n    display: 'grid',\n  },\n  overlay: {\n    zIndex: 100,\n    gridArea: '1/1',\n  },\n  content: {\n    gridArea: '1/1',\n    position: 'relative',\n  },\n  grid: {\n    display: 'grid',\n  },\n  relative: {\n    position: 'relative',\n  },\n\n  // this helps keep the vertical guide inside the parent view container,\n  // similar style exists in the single LGV's trackscontainer\n  rubberbandContainer: {\n    position: 'relative',\n    overflow: 'hidden',\n  },\n\n  rubberbandDiv: {\n    width: '100%',\n    background: theme.palette.action.disabledBackground,\n    height: 15,\n    '&:hover': {\n      background: theme.palette.action.selected,\n    },\n  },\n}))\n\ntype LCV = LinearComparativeViewModel\n\nconst Overlays = observer(({ model }: { model: LCV }) => {\n  const { classes } = useStyles()\n  return (\n    <>\n      {model.tracks.map(track => {\n        const [display] = track.displays\n        const { RenderingComponent } = display\n        const trackId = getConf(track, 'trackId')\n        return RenderingComponent ? (\n          <div\n            className={classes.overlay}\n            key={trackId}\n            style={{\n              height: model.middleComparativeHeight,\n              overflow: 'hidden',\n            }}\n          >\n            <RenderingComponent model={display} />\n          </div>\n        ) : null\n      })}\n    </>\n  )\n})\n\n// The comparative is in the middle of the views\nconst MiddleComparativeView = observer(({ model }: { model: LCV }) => {\n  const { classes } = useStyles()\n  const { views } = model\n  const { pluginManager } = getEnv(model)\n  const { ReactComponent } = pluginManager.getViewType(views[0].type)\n\n  return (\n    <div className={classes.rubberbandContainer}>\n      <Header model={model} />\n      <Rubberband\n        model={model}\n        ControlComponent={<div className={classes.rubberbandDiv} />}\n      />\n      <div className={classes.container}>\n        <ReactComponent model={views[0]} />\n        <div className={classes.grid}>\n          <Overlays model={model} />\n        </div>\n        <ResizeHandle\n          onDrag={n =>\n            model.setMiddleComparativeHeight(model.middleComparativeHeight + n)\n          }\n          style={{\n            height: 4,\n            background: '#ccc',\n          }}\n        />\n        <ReactComponent model={views[1]} />\n      </div>\n    </div>\n  )\n})\nconst OverlayComparativeView = observer(({ model }: { model: LCV }) => {\n  const { classes } = useStyles()\n  const { views } = model\n  const { pluginManager } = getEnv(model)\n  return (\n    <div className={classes.rubberbandContainer}>\n      <Header model={model} />\n      <Rubberband\n        model={model}\n        ControlComponent={<div className={classes.rubberbandDiv} />}\n      />\n\n      <div className={classes.container}>\n        <div className={classes.content}>\n          <div className={classes.relative}>\n            {views.map(view => {\n              const { ReactComponent } = pluginManager.getViewType(view.type)\n              return <ReactComponent key={view.id} model={view} />\n            })}\n          </div>\n          <Overlays model={model} />\n        </div>\n      </div>\n    </div>\n  )\n})\n\nexport default observer(function (props: {\n  ExtraButtons?: React.ReactNode\n  model: LCV\n}) {\n  const { model } = props\n\n  const middle = model.tracks.some(({ displays }) =>\n    displays.some((d: AnyConfigurationModel) => getConf(d, 'middle')),\n  )\n  return middle ? (\n    <MiddleComparativeView {...props} />\n  ) : (\n    <OverlayComparativeView {...props} />\n  )\n})\n"],"names":["useStyles","makeStyles","theme","_theme$palette","palette","tertiary","primary","rubberband","height","background","alpha","main","position","zIndex","textAlign","overflow","rubberbandControl","cursor","width","minHeight","rubberbandText","color","contrastText","popover","mouseEvents","paper","paddingLeft","spacing","paddingRight","guide","pointerEvents","sm","fontSize","VerticalGuide","observer","_ref","model","coordX","classes","_jsx","Tooltip","open","placement","title","views","map","view","pxToBp","elt","Typography","className","children","stringify","JSON","arrow","style","left","_ref2","_ref2$ControlComponen","ControlComponent","_useState","useState","_useState2","_slicedToArray","startX","setStartX","_useState3","_useState4","currentX","setCurrentX","_useState5","_useState6","anchorPosition","setAnchorPosition","_useState7","_useState8","guideX","setGuideX","controlsRef","useRef","rubberbandRef","mouseDragging","undefined","mouseDown","event","preventDefault","stopPropagation","relativeX","clientX","target","getBoundingClientRect","mouseMove","mouseOut","forEach","setOffsets","handleClose","useEffect","globalMouseMove","current","globalMouseUp","clientY","offsetX","args","leftPx","rightPx","_ref3","leftOffset","rightOffset","computeOffsets","window","addEventListener","removeEventListener","Math","abs","Boolean","_jsxs","_Fragment","role","ref","onMouseDown","onMouseOut","onMouseMove","right","leftBpOffset","rightBpOffset","numOfBpSelected","ceil","bpPerPx","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","keepMounted","disableRestoreFocus","l","variant","n","i","concat","toLocaleString","Menu","anchorReference","top","onMenuItemClick","_","callback","onClose","menuItems","rubberBandMenuItems","headerBar","gridArea","display","spacer","flexGrow","iconButton","margin","bp","alignItems","marginLeft","searchContainer","searchBox","TrackSelector","IconButton","onClick","activateTrackSelector","TrackSelectorIcon","menuAnchorEl","setMenuAnchorEl","anyShowHeaders","some","hideHeader","currentTarget","MoreVertIcon","SearchBox","showHelp","round","coarseTotalBp","id","_event","headerMenuItems","container","overlay","content","grid","relative","rubberbandContainer","rubberbandDiv","action","disabledBackground","selected","Overlays","tracks","track","displays","RenderingComponent","trackId","getConf","middleComparativeHeight","MiddleComparativeView","ReactComponent","getEnv","pluginManager","getViewType","type","Header","Rubberband","ResizeHandle","onDrag","setMiddleComparativeHeight","OverlayComparativeView","props","_ref4","d","_objectSpread"],"sourceRoot":""}