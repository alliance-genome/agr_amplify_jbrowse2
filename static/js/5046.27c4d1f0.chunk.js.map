{"version":3,"file":"static/js/5046.27c4d1f0.chunk.js","mappings":"yTAKMA,EAAW,CAAEC,QAAS,UAEtBC,EAAW,CAAEC,OAAQ,WAKNC,EAAAA,WAMnB,WAAoBC,EAAgBC,EAAkBC,IAAc,oBAAhDF,UAAAA,EAA+C,KAL3DG,kBAK2D,OAH3DC,cAG2D,EACjEC,KAAKD,SAAWF,GAAMF,EAAUE,KAChCG,KAAKF,aAAeF,EAyErB,OAxEA,2BAED,WACE,MAAM,IAAIK,MAAM,qBACjB,4BAED,SAAeC,GAGb,OADeZ,EAASY,IAAQA,GAClBC,gBACf,4BAED,SAAeD,GACb,IAAME,EAAIF,EAAIC,cAGd,OADeX,EAASY,IAAMA,I,iBAKhC,SAAIC,GAAwB,IAAD,OACnBC,EAAON,KAAKL,UAAUY,IAAIP,KAAKQ,eAAeH,IACpD,OAAIC,GAAqB,gBAAbD,EAEHC,EAAKG,KAAI,SAACC,GAAD,OAAqB,IAAIhB,EAAcgB,EAAY,MAE9DJ,IAKX,kBACE,WAAkB,IAAD,OACf,OAAON,KAAKL,UAAUgB,OAAOF,KAAI,SAACL,GAAD,OAAe,EAAKQ,eAAeR,QAKxE,gBACE,WACE,OAAOJ,KAAKD,WAKhB,oBACE,WACE,OAAOC,KAAKF,eAKhB,sBACE,WACE,OAAOE,KAAKO,IAAI,iBACjB,oBAED,WAAmC,IAAD,OAC1BM,EAAgC,CAAEd,SAAUC,KAAKH,MAavD,OAZAG,KAAKL,UAAUgB,OAAOG,SAAQ,SAACZ,GAC7B,IAAMa,EAAY,EAAKH,eAAeV,GAChCc,EAAQ,EAAKrB,UAAUY,IAAIL,GACf,gBAAda,EACFF,EAAKI,aAAeD,GAAS,IAAIP,KAAI,SAACS,GAEpC,OAAO,IAAIxB,EAAcwB,EAAG,GAAMC,YAGpCN,EAAKE,GAAaC,KAGfH,MACR,EAjFkBnB,GCKA0B,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAMnB,WACEC,EACAC,EACAC,GACC,IAAD,mBACA,cAAMF,EAAQC,EAAeC,IATvBC,YAQN,IANMC,oBAMN,EAEA,IAAMC,GAAWC,EAAAA,EAAAA,gBAAeN,EAAQ,YAClCO,GAAkBD,EAAAA,EAAAA,gBAAeN,EAAQ,mBAH/C,OAIA,EAAKI,eAAiBC,EAEtB,EAAKF,OAAS,IAAIK,EAAAA,EAAY,CAC5BC,QAAS,GACTC,YAAaH,EAAgBI,IAC7BC,SAAU,SAACC,GAAD,OACR,IAAIC,EAAAA,WACFC,OACER,EAAgBS,QACZ,IAAIC,IAAIJ,EAAKN,EAAgBS,SAASE,WACtCL,IAEND,cAhBN,EAkEgB,OAvCf,EAAL,iCACE,SAAYO,GAAyC,IAAD,OAAxBC,EAAwB,uDAAJ,GAC9C,OAAOC,EAAAA,EAAAA,kBAAgB,mCAAU,WAAMC,GAAN,mFACvBC,EAAWH,EAAXG,OADuB,6BAEH,EAAKpB,OAAOqB,YAAYL,EAAQC,IAF7B,iFAEdK,EAFc,SAG7BC,EAAAA,EAAAA,kBAAiBH,GACjBD,EAASK,KAAK,EAAKC,YAAYH,IAJF,kTAM/BH,EAASO,WANsB,4EAAV,yD,yBAWzB,SAAYvD,GACV,OAAO,IAAID,EACTC,OACAwD,EAFK,UAGFnD,KAAKH,GAHH,YAGSF,EAAUE,SAE3B,kEAED,WAAwBN,GAAxB,uFACqBS,KAAKwB,OAAO4B,YAAY7D,GAD7C,cACQ8D,EADR,4BAEYA,GAAQA,EAAKC,OAASD,EAAKC,MAAMC,eAF7C,mGAFC,IAUH,yBACE,WACE,OAAOC,QAAQC,QAAQzD,KAAKyB,gBAAkB,MAOlD,2BACE,gBAAkB,EA5ECL,CAAsBsC,EAAAA","sources":["../../../plugins/legacy-jbrowse/src/NCListAdapter/NCListFeature.ts","../../../plugins/legacy-jbrowse/src/NCListAdapter/NCListAdapter.ts"],"sourcesContent":["import {\n  Feature,\n  SimpleFeatureSerialized,\n} from '@jbrowse/core/util/simpleFeature'\n\nconst jb2ToJb1 = { refName: 'seq_id' }\n\nconst jb1ToJb2 = { seq_id: 'refName' }\n\n/**\n * wrapper to adapt nclist features to act like jbrowse 2 features\n */\nexport default class NCListFeature implements Feature {\n  private parentHandle?: Feature\n\n  private uniqueId: string\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(private ncFeature: any, parent?: Feature, id?: string) {\n    this.uniqueId = id || ncFeature.id()\n    this.parentHandle = parent\n  }\n\n  set(): void {\n    throw new Error('not implemented')\n  }\n\n  jb2TagToJb1Tag(tag: string): string {\n    // @ts-ignore\n    const mapped = jb2ToJb1[tag] || tag\n    return mapped.toLowerCase()\n  }\n\n  jb1TagToJb2Tag(tag: string): string {\n    const t = tag.toLowerCase()\n    // @ts-ignore\n    const mapped = jb1ToJb2[t] || t\n    return mapped\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  get(attrName: string): any {\n    const attr = this.ncFeature.get(this.jb2TagToJb1Tag(attrName))\n    if (attr && attrName === 'subfeatures') {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return attr.map((subfeature: any) => new NCListFeature(subfeature, this))\n    }\n    return attr\n  }\n\n  /**\n   * Get an array listing which data keys are present in this feature.\n   */\n  tags(): string[] {\n    return this.ncFeature.tags().map((t: string) => this.jb1TagToJb2Tag(t))\n  }\n\n  /**\n   * Get the unique ID of this feature.\n   */\n  id(): string {\n    return this.uniqueId\n  }\n\n  /**\n   * Get this feature's parent feature, or undefined if none.\n   */\n  parent(): Feature | undefined {\n    return this.parentHandle\n  }\n\n  /**\n   * Get an array of child features, or undefined if none.\n   */\n  children(): Feature[] | undefined {\n    return this.get('subfeatures')\n  }\n\n  toJSON(): SimpleFeatureSerialized {\n    const data: SimpleFeatureSerialized = { uniqueId: this.id() }\n    this.ncFeature.tags().forEach((tag: string) => {\n      const mappedTag = this.jb1TagToJb2Tag(tag)\n      const value = this.ncFeature.get(tag)\n      if (mappedTag === 'subfeatures') {\n        data.subfeatures = (value || []).map((f: Feature) => {\n          // note: was new NCListFeature(f, `${this.id()}-${i}`, this).toJSON()\n          return new NCListFeature(f, this).toJSON()\n        })\n      } else {\n        data[mappedTag] = value\n      }\n    })\n    return data\n  }\n}\n","import NCListStore from '@gmod/nclist'\nimport { Region } from '@jbrowse/core/util/types'\nimport {\n  BaseFeatureDataAdapter,\n  BaseOptions,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport { checkAbortSignal } from '@jbrowse/core/util'\nimport { RemoteFile } from 'generic-filehandle'\nimport { Instance } from 'mobx-state-tree'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport NCListFeature from './NCListFeature'\nimport MyConfigSchema from './configSchema'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { getSubAdapterType } from '@jbrowse/core/data_adapters/dataAdapterCache'\n\nexport default class NCListAdapter extends BaseFeatureDataAdapter {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private nclist: any\n\n  private configRefNames?: string[]\n\n  constructor(\n    config: Instance<typeof MyConfigSchema>,\n    getSubAdapter?: getSubAdapterType,\n    pluginManager?: PluginManager,\n  ) {\n    super(config, getSubAdapter, pluginManager)\n    const refNames = readConfObject(config, 'refNames')\n    const rootUrlTemplate = readConfObject(config, 'rootUrlTemplate')\n    this.configRefNames = refNames\n\n    this.nclist = new NCListStore({\n      baseUrl: '',\n      urlTemplate: rootUrlTemplate.uri,\n      readFile: (url: string) =>\n        new RemoteFile(\n          String(\n            rootUrlTemplate.baseUri\n              ? new URL(url, rootUrlTemplate.baseUri).toString()\n              : url,\n          ),\n        ).readFile(),\n    })\n  }\n\n  /**\n   * Fetch features for a certain region. Use getFeaturesInRegion() if you also\n   * want to verify that the store has features for the given reference sequence\n   * before fetching.\n   * @param region -\n   * @param opts - [signal] optional signalling object for aborting the fetch\n   * @returns Observable of Feature objects in the region\n   */\n  getFeatures(region: Region, opts: BaseOptions = {}) {\n    return ObservableCreate<Feature>(async observer => {\n      const { signal } = opts\n      for await (const feature of this.nclist.getFeatures(region, opts)) {\n        checkAbortSignal(signal)\n        observer.next(this.wrapFeature(feature))\n      }\n      observer.complete()\n    })\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  wrapFeature(ncFeature: any): NCListFeature {\n    return new NCListFeature(\n      ncFeature,\n      undefined,\n      `${this.id}-${ncFeature.id()}`,\n    )\n  }\n\n  async hasDataForRefName(refName: string) {\n    const root = await this.nclist.getDataRoot(refName)\n    return !!(root && root.stats && root.stats.featureCount)\n  }\n\n  /*\n   * NCList is unable to get list of ref names so returns empty\n   * @return Promise<string[]> of empty list\n   */\n  getRefNames() {\n    return Promise.resolve(this.configRefNames || [])\n  }\n\n  /**\n   * called to provide a hint that data tied to a certain region\n   * will not be needed for the forseeable future and can be purged\n   * from caches, etc\n   */\n  freeResources() {}\n}\n"],"names":["jb2ToJb1","refName","jb1ToJb2","seq_id","NCListFeature","ncFeature","parent","id","parentHandle","uniqueId","this","Error","tag","toLowerCase","t","attrName","attr","get","jb2TagToJb1Tag","map","subfeature","tags","jb1TagToJb2Tag","data","forEach","mappedTag","value","subfeatures","f","toJSON","NCListAdapter","config","getSubAdapter","pluginManager","nclist","configRefNames","refNames","readConfObject","rootUrlTemplate","NCListStore","baseUrl","urlTemplate","uri","readFile","url","RemoteFile","String","baseUri","URL","toString","region","opts","ObservableCreate","observer","signal","getFeatures","feature","checkAbortSignal","next","wrapFeature","complete","undefined","getDataRoot","root","stats","featureCount","Promise","resolve","BaseFeatureDataAdapter"],"sourceRoot":""}