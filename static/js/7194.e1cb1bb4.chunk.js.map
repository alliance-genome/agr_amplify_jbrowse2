{"version":3,"file":"static/js/7194.e1cb1bb4.chunk.js","mappings":"sPAYMA,GAAYC,EAAAA,EAAAA,KAAAA,CAAa,CAC7BC,KAAM,CACJC,MAAO,OA0DX,WAAeC,EAAAA,EAAAA,WAtDf,SAAwBC,GASpB,IARFC,EAAKD,EAALC,MACAC,EAAWF,EAAXE,YAQQC,EAAYR,IAAZQ,QACRC,EAA2BH,EAAnBI,UAAAA,OAAS,IAAAD,EAAG,GAAEA,EACtBE,GAAsBC,EAAAA,EAAAA,UAAS,GAADC,OAAIH,IAAYI,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAvCK,EAAGF,EAAA,GAAEG,EAAMH,EAAA,GAElB,OACEI,EAAAA,EAAAA,KAACC,EAAAA,OAAM,CAACC,MAAI,EAACC,QAASd,EAAae,MAAM,iBAAgBC,UACvDC,EAAAA,EAAAA,MAACC,EAAAA,EAAa,CAACC,UAAWlB,EAAQN,KAAKqB,SAAA,EACrCL,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAAAJ,SAAC,8GAIZL,EAAAA,EAAAA,KAACU,EAAAA,EAAS,CACRC,MAAOb,EACPc,SAAU,SAAAC,GAAK,OAAId,EAAOc,EAAMC,OAAOH,MAAM,EAC7CI,YAAY,qBAEdT,EAAAA,EAAAA,MAACU,EAAAA,EAAa,CAAAX,SAAA,EACZL,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CACLC,QAAQ,YACRC,MAAM,UACNC,KAAK,SACLC,WAAS,EACTC,QAAS,WACPlC,EAAMmC,aACI,KAARzB,GAAe0B,OAAOC,OAAO3B,QAAc4B,GAAN5B,GAEvCT,GACF,EAAEgB,SACH,YAGDL,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CACLC,QAAQ,YACRC,MAAM,YACNG,QAAS,kBAAMjC,GAAa,EAACgB,SAC9B,kBAOX,G","sources":["../../../plugins/linear-genome-view/src/LinearBasicDisplay/components/SetMaxHeight.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { Dialog } from '@jbrowse/core/ui'\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  Typography,\n  TextField,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()({\n  root: {\n    width: 500,\n  },\n})\n\nfunction SetMaxHeightDlg({\n  model,\n  handleClose,\n}: {\n  model: {\n    maxHeight?: number\n    setMaxHeight: (arg?: number) => void\n  }\n  handleClose: () => void\n}) {\n  const { classes } = useStyles()\n  const { maxHeight = '' } = model\n  const [max, setMax] = useState(`${maxHeight}`)\n\n  return (\n    <Dialog open onClose={handleClose} title=\"Set max height\">\n      <DialogContent className={classes.root}>\n        <Typography>\n          Set max height for the track. For example, you can increase this if\n          the layout says &quot;Max height reached&quot;\n        </Typography>\n        <TextField\n          value={max}\n          onChange={event => setMax(event.target.value)}\n          placeholder=\"Enter max score\"\n        />\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            autoFocus\n            onClick={() => {\n              model.setMaxHeight(\n                max !== '' && !Number.isNaN(+max) ? +max : undefined,\n              )\n              handleClose()\n            }}\n          >\n            Submit\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => handleClose()}\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default observer(SetMaxHeightDlg)\n"],"names":["useStyles","makeStyles","root","width","observer","_ref","model","handleClose","classes","_model$maxHeight","maxHeight","_useState","useState","concat","_useState2","_slicedToArray","max","setMax","_jsx","Dialog","open","onClose","title","children","_jsxs","DialogContent","className","Typography","TextField","value","onChange","event","target","placeholder","DialogActions","Button","variant","color","type","autoFocus","onClick","setMaxHeight","Number","isNaN","undefined"],"sourceRoot":""}