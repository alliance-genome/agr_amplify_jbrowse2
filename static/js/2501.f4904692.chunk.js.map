{"version":3,"file":"static/js/2501.f4904692.chunk.js","mappings":"iQAoEA,WAAeA,EAAAA,EAAAA,WAvDf,SAA8BC,GAU1B,IAADC,EAAAD,EATDE,UAAAA,OAAS,IAAAD,EAAG,CAAC,EAACA,EACdE,EAAYH,EAAZG,aASQC,EAAsDF,EAAtDE,KAAMC,EAAgDH,EAAhDG,qBAAsBC,EAA0BJ,EAA1BI,sBACpC,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAACC,MAAI,EAAAC,SAAA,EACVH,EAAAA,EAAAA,MAACI,EAAAA,EAAW,CAAAD,SAAA,CAAC,qBAAwBN,EAAK,QAC1CG,EAAAA,EAAAA,MAACK,EAAAA,EAAa,CAAAF,SAAA,CACXL,GACCE,EAAAA,EAAAA,MAAAM,EAAAA,SAAA,CAAAH,SAAA,EACEI,EAAAA,EAAAA,KAACC,EAAAA,EAAiB,CAAAL,SAAC,yCAGnBI,EAAAA,EAAAA,KAACE,EAAAA,EAAI,CAAAN,SACFO,OAAOC,QAAQb,GAAsBc,KAAI,SAAAC,GAAA,IAAAC,GAAAC,EAAAA,EAAAA,GAAAF,EAAA,GAAEG,EAAGF,EAAA,GAAEG,EAAKH,EAAA,UACpDP,EAAAA,EAAAA,KAACW,EAAAA,GAAQ,CAAAf,SAAA,GAAAgB,OAAeF,EAAK,KAAAE,OAAIH,IAAlBA,EAAmC,SAItD,MACJT,EAAAA,EAAAA,KAACC,EAAAA,EAAiB,CAAAL,SAAC,wDAIrBH,EAAAA,EAAAA,MAACoB,EAAAA,EAAa,CAAAjB,SAAA,EACZI,EAAAA,EAAAA,KAACc,EAAAA,EAAM,CAACC,QAAS,kBAAM1B,GAAc,EAAE2B,MAAM,UAASpB,SAAC,YAGvDI,EAAAA,EAAAA,KAACc,EAAAA,EAAM,CACLG,QAAQ,YACRF,QACE3B,EACI,WACuB,OAArBI,QAAqB,IAArBA,GAAAA,IACAH,GACF,EACA,WAAO,EAEb2B,MAAM,UAASpB,SAChB,YAMT,G","sources":["../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/dialogs/CloseConnectionDialog.tsx"],"sourcesContent":["import React from 'react'\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  Button,\n  List,\n  ListItem,\n  DialogActions,\n} from '@mui/material'\nimport { observer } from 'mobx-react'\n\nfunction CloseConnectionDialog({\n  modalInfo = {},\n  setModalInfo,\n}: {\n  modalInfo?: {\n    name?: string\n    dereferenceTypeCount?: { [key: string]: number }\n    safelyBreakConnection?: Function\n  }\n  setModalInfo: Function\n}) {\n  const { name, dereferenceTypeCount, safelyBreakConnection } = modalInfo\n  return (\n    <Dialog open>\n      <DialogTitle>Close connection &quot;{name}&quot;</DialogTitle>\n      <DialogContent>\n        {dereferenceTypeCount ? (\n          <>\n            <DialogContentText>\n              Closing this connection will close:\n            </DialogContentText>\n            <List>\n              {Object.entries(dereferenceTypeCount).map(([key, value]) => (\n                <ListItem key={key}>{`${value} ${key}`}</ListItem>\n              ))}\n            </List>\n          </>\n        ) : null}\n        <DialogContentText>\n          Are you sure you want to close this connection?\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => setModalInfo()} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={\n            modalInfo\n              ? () => {\n                  safelyBreakConnection?.()\n                  setModalInfo()\n                }\n              : () => {}\n          }\n          color=\"primary\"\n        >\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default observer(CloseConnectionDialog)\n"],"names":["observer","_ref","_ref$modalInfo","modalInfo","setModalInfo","name","dereferenceTypeCount","safelyBreakConnection","_jsxs","Dialog","open","children","DialogTitle","DialogContent","_Fragment","_jsx","DialogContentText","List","Object","entries","map","_ref2","_ref3","_slicedToArray","key","value","ListItem","concat","DialogActions","Button","onClick","color","variant"],"sourceRoot":""}