{"version":3,"file":"static/js/2501.f4904692.chunk.js","mappings":"iQAoEA,WAAeA,EAAAA,EAAAA,WAvDf,SAA+B,GAU3B,IAAD,IATDC,UAAAA,OAAS,MAAG,CAAC,EAAC,EACdC,EAAY,EAAZA,aASQC,EAAsDF,EAAtDE,KAAMC,EAAgDH,EAAhDG,qBAAsBC,EAA0BJ,EAA1BI,sBACpC,OACE,UAAC,IAAM,CAACC,MAAI,aACV,UAAC,IAAW,WAAC,qBAAwBH,EAAK,QAC1C,UAAC,IAAa,WACXC,GACC,iCACE,SAAC,IAAiB,UAAC,yCAGnB,SAAC,IAAI,UACFG,OAAOC,QAAQJ,GAAsBK,KAAI,+BAAEC,EAAG,KAAEC,EAAK,YACpD,SAAC,KAAQ,oBAAeA,EAAK,YAAID,IAAlBA,EAAmC,SAItD,MACJ,SAAC,IAAiB,UAAC,wDAIrB,UAAC,IAAa,YACZ,SAAC,IAAM,CAACE,QAAS,kBAAMV,GAAc,EAAEW,MAAM,UAAS,SAAC,YAGvD,SAAC,IAAM,CACLC,QAAQ,YACRF,QACEX,EACI,WACuB,OAArBI,QAAqB,IAArBA,GAAAA,IACAH,GACF,EACA,WAAO,EAEbW,MAAM,UAAS,SAChB,YAMT,G","sources":["../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/dialogs/CloseConnectionDialog.tsx"],"sourcesContent":["import React from 'react'\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  Button,\n  List,\n  ListItem,\n  DialogActions,\n} from '@mui/material'\nimport { observer } from 'mobx-react'\n\nfunction CloseConnectionDialog({\n  modalInfo = {},\n  setModalInfo,\n}: {\n  modalInfo?: {\n    name?: string\n    dereferenceTypeCount?: { [key: string]: number }\n    safelyBreakConnection?: Function\n  }\n  setModalInfo: Function\n}) {\n  const { name, dereferenceTypeCount, safelyBreakConnection } = modalInfo\n  return (\n    <Dialog open>\n      <DialogTitle>Close connection &quot;{name}&quot;</DialogTitle>\n      <DialogContent>\n        {dereferenceTypeCount ? (\n          <>\n            <DialogContentText>\n              Closing this connection will close:\n            </DialogContentText>\n            <List>\n              {Object.entries(dereferenceTypeCount).map(([key, value]) => (\n                <ListItem key={key}>{`${value} ${key}`}</ListItem>\n              ))}\n            </List>\n          </>\n        ) : null}\n        <DialogContentText>\n          Are you sure you want to close this connection?\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => setModalInfo()} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={\n            modalInfo\n              ? () => {\n                  safelyBreakConnection?.()\n                  setModalInfo()\n                }\n              : () => {}\n          }\n          color=\"primary\"\n        >\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default observer(CloseConnectionDialog)\n"],"names":["observer","modalInfo","setModalInfo","name","dereferenceTypeCount","safelyBreakConnection","open","Object","entries","map","key","value","onClick","color","variant"],"sourceRoot":""}