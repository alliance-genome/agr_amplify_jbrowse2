{"version":3,"file":"static/js/741.704a65cd.chunk.js","mappings":"4RAqBA,MAAMA,GAAYC,EAAAA,EAAAA,KAAAA,EAAaC,IAAS,CACtCC,oBAAqB,CACnBC,OAAQF,EAAMG,QAAQ,GACtBC,MAAO,SA2DX,GAvDgCC,EAAAA,EAAAA,WAAS,UAAU,QACjDC,EAAO,YACPC,EAAW,gBACXC,IAMA,MAAM,QAAEC,GAAYX,KACd,UAAEY,EAAS,YAAEC,EAAW,mBAAEC,GAAuBN,EACvD,OACEO,EAAAA,cAACC,EAAAA,OAAM,CAACC,MAAI,EAACC,QAAST,EAAaU,SAAS,KAAKC,MAAM,sBACrDL,EAAAA,cAACM,EAAAA,EAAa,KACZN,EAAAA,cAACO,EAAAA,EAAU,KAAC,yEAGZP,EAAAA,cAAA,OAAKQ,UAAWZ,EAAQR,qBACrBU,EAAYW,KAAIC,IACf,MAAMC,GAAOC,EAAAA,EAAAA,gBAAeF,EAAM,QAClC,OACEV,EAAAA,cAACO,EAAAA,EAAU,CAACM,IAAM,QAAOF,KACtBd,GAAaE,GAAoBe,SAASJ,GACzCV,EAAAA,cAACe,EAAAA,EAAU,CAACC,QAASA,IAAMrB,EAAgBe,GAAM,IAC/CV,EAAAA,cAACiB,EAAAA,EAAS,CAACC,MAAM,WAGnBlB,EAAAA,cAACmB,EAAAA,EAAO,CAACd,MAAM,gEACbL,EAAAA,cAACe,EAAAA,EAAU,KACTf,EAAAA,cAACiB,EAAAA,EAAS,CAACC,MAAM,eAItBP,EACU,IAGfb,EAAYsB,OAEV,KADFpB,EAAAA,cAACO,EAAAA,EAAU,KAAC,0BAIlBP,EAAAA,cAACqB,EAAAA,EAAa,KACZrB,EAAAA,cAACsB,EAAAA,EAAM,CACLN,QAASA,IAAMtB,IACf6B,QAAQ,YACRL,MAAM,WACP,UAMT,G","sources":["../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/dialogs/ManageConnectionsDialog.tsx"],"sourcesContent":["import React from 'react'\nimport {\n  Button,\n  DialogContent,\n  DialogActions,\n  IconButton,\n  Tooltip,\n  Typography,\n} from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { AbstractSessionModel } from '@jbrowse/core/util'\n\n// icons\nimport CloseIcon from '@mui/icons-material/Close'\n\nconst useStyles = makeStyles()(theme => ({\n  connectionContainer: {\n    margin: theme.spacing(4),\n    width: 500,\n  },\n}))\n\nconst ManageConnectionsDialog = observer(function ({\n  session,\n  handleClose,\n  breakConnection,\n}: {\n  handleClose: () => void\n  session: AbstractSessionModel\n  breakConnection: (conf: AnyConfigurationModel, arg: boolean) => void\n}) {\n  const { classes } = useStyles()\n  const { adminMode, connections, sessionConnections } = session\n  return (\n    <Dialog open onClose={handleClose} maxWidth=\"lg\" title=\"Delete connections\">\n      <DialogContent>\n        <Typography>\n          Click the X icon to delete the connection from your config completely\n        </Typography>\n        <div className={classes.connectionContainer}>\n          {connections.map(conf => {\n            const name = readConfObject(conf, 'name')\n            return (\n              <Typography key={`conn-${name}`}>\n                {adminMode || sessionConnections?.includes(conf) ? (\n                  <IconButton onClick={() => breakConnection(conf, true)}>\n                    <CloseIcon color=\"error\" />\n                  </IconButton>\n                ) : (\n                  <Tooltip title=\"Unable to delete connection in config file as non-admin user\">\n                    <IconButton>\n                      <CloseIcon color=\"disabled\" />\n                    </IconButton>\n                  </Tooltip>\n                )}\n                {name}\n              </Typography>\n            )\n          })}\n          {!connections.length ? (\n            <Typography>No connections found</Typography>\n          ) : null}\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => handleClose()}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n\nexport default ManageConnectionsDialog\n"],"names":["useStyles","makeStyles","theme","connectionContainer","margin","spacing","width","observer","session","handleClose","breakConnection","classes","adminMode","connections","sessionConnections","React","Dialog","open","onClose","maxWidth","title","DialogContent","Typography","className","map","conf","name","readConfObject","key","includes","IconButton","onClick","CloseIcon","color","Tooltip","length","DialogActions","Button","variant"],"sourceRoot":""}