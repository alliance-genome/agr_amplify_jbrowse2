{"version":3,"file":"static/js/6524.cac9d4a5.chunk.js","mappings":"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","sources":["../../../plugins/alignments/src/AlignmentsFeatureDetail/AlignmentsFeatureDetail.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  Typography,\n  Link,\n  Paper,\n  Checkbox,\n  FormControlLabel,\n  FormGroup,\n  makeStyles,\n} from '@material-ui/core'\nimport { observer } from 'mobx-react'\nimport { getSession } from '@jbrowse/core/util'\nimport copy from 'copy-to-clipboard'\nimport {\n  FeatureDetails,\n  BaseCard,\n  SimpleValue,\n} from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\nimport { parseCigar } from '../BamAdapter/MismatchParser'\n\nconst useStyles = makeStyles(() => ({\n  compact: {\n    paddingRight: 0,\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n}))\n\nconst omit = ['clipPos', 'flags']\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction AlignmentFlags(props: { feature: any }) {\n  const classes = useStyles()\n  const { feature } = props\n  const { flags } = feature\n  const flagNames = [\n    'read paired',\n    'read mapped in proper pair',\n    'read unmapped',\n    'mate unmapped',\n    'read reverse strand',\n    'mate reverse strand',\n    'first in pair',\n    'second in pair',\n    'not primary alignment',\n    'read fails platform/vendor quality checks',\n    'read is PCR or optical duplicate',\n    'supplementary alignment',\n  ]\n  return (\n    <BaseCard {...props} title=\"Flags\">\n      <SimpleValue name={'Flag'} value={flags} />\n\n      <FormGroup>\n        {flagNames.map((name, index) => {\n          const val = flags & (1 << index)\n          const key = `${name}_${val}`\n          return (\n            <FormControlLabel\n              key={key}\n              control={\n                <Checkbox\n                  className={classes.compact}\n                  checked={Boolean(val)}\n                  name={name}\n                  readOnly\n                />\n              }\n              label={name}\n            />\n          )\n        })}\n      </FormGroup>\n    </BaseCard>\n  )\n}\n\nfunction Formatter({ value }: { value: unknown }) {\n  const [show, setShow] = useState(false)\n  const display = String(value)\n  if (display.length > 100) {\n    return (\n      <>\n        <button type=\"button\" onClick={() => copy(display)}>\n          Copy\n        </button>\n        <button type=\"button\" onClick={() => setShow(val => !val)}>\n          {show ? 'Show less' : 'Show more'}\n        </button>\n        <div>{show ? display : `${display.slice(0, 100)}...`}</div>\n      </>\n    )\n  }\n  return <div>{display}</div>\n}\n\n// utility function to get length of alignment from cigar\nfunction getLengthOnRef(cigar: string) {\n  const cigarOps = parseCigar(cigar)\n  let lengthOnRef = 0\n  for (let i = 0; i < cigarOps.length; i += 2) {\n    const len = +cigarOps[i]\n    const op = cigarOps[i + 1]\n    if (op !== 'H' && op !== 'S' && op !== 'I') {\n      lengthOnRef += len\n    }\n  }\n  return lengthOnRef\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction SupplementaryAlignments(props: { tag: string; model: any }) {\n  const { tag, model } = props\n  const session = getSession(model)\n  return (\n    <BaseCard {...props} title=\"Supplementary alignments\">\n      <Typography>List of supplementary alignment locations</Typography>\n      <ul>\n        {tag\n          .split(';')\n          .filter(SA => !!SA)\n          .map((SA, index) => {\n            const [saRef, saStart, saStrand, saCigar] = SA.split(',')\n            const saLength = getLengthOnRef(saCigar)\n            const extra = Math.floor(saLength / 5)\n            const start = +saStart\n            const end = +saStart + saLength\n            const locString = `${saRef}:${Math.max(1, start - extra)}-${\n              end + extra\n            }`\n            const displayStart = start.toLocaleString('en-US')\n            const displayEnd = end.toLocaleString('en-US')\n            const displayString = `${saRef}:${displayStart}-${displayEnd} (${saStrand})`\n            return (\n              <li key={`${locString}-${index}`}>\n                <Link\n                  onClick={() => {\n                    const { view } = model\n                    try {\n                      if (view) {\n                        view.navToLocString(locString)\n                      } else {\n                        throw new Error(\n                          'No view associated with this view anymore',\n                        )\n                      }\n                    } catch (e) {\n                      console.error(e)\n                      session.notify(`${e}`)\n                    }\n                  }}\n                  href=\"#\"\n                >\n                  {displayString}\n                </Link>\n              </li>\n            )\n          })}\n      </ul>\n    </BaseCard>\n  )\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction PairLink({ locString, model }: { locString: string; model: any }) {\n  const session = getSession(model)\n  return (\n    <Link\n      onClick={() => {\n        const { view } = model\n        try {\n          if (view) {\n            view.navToLocString(locString)\n          } else {\n            session.notify(\n              'No view associated with this feature detail panel anymore',\n              'warning',\n            )\n          }\n        } catch (e) {\n          console.error(e)\n          session.notify(`${e}`)\n        }\n      }}\n      href=\"#\"\n    >\n      {locString}\n    </Link>\n  )\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction AlignmentFeatureDetails(props: { model: any }) {\n  const { model } = props\n  const feat = JSON.parse(JSON.stringify(model.featureData))\n  const SA = (feat.tags && feat.tags.SA) || feat.SA\n  return (\n    <Paper data-testid=\"alignment-side-drawer\">\n      <FeatureDetails\n        {...props}\n        omit={omit}\n        feature={feat}\n        formatter={(value: unknown, key: string) => {\n          return key === 'next_segment_position' ? (\n            <PairLink model={model} locString={value as string} />\n          ) : (\n            <Formatter value={value} />\n          )\n        }}\n      />\n      {SA ? <SupplementaryAlignments model={model} tag={SA} /> : null}\n      <AlignmentFlags feature={feat} {...props} />\n    </Paper>\n  )\n}\n\nexport default observer(AlignmentFeatureDetails)\n"],"names":["useStyles","makeStyles","compact","paddingRight","paddingTop","paddingBottom","omit","AlignmentFlags","props","classes","flags","feature","BaseCard","title","SimpleValue","name","value","map","index","val","key","control","className","checked","Boolean","readOnly","label","Formatter","useState","show","setShow","display","String","length","type","onClick","copy","slice","SupplementaryAlignments","tag","model","session","getSession","split","filter","SA","saRef","saStart","saStrand","saLength","cigar","cigarOps","parseCigar","lengthOnRef","i","len","op","getLengthOnRef","extra","Math","floor","start","end","locString","max","displayStart","toLocaleString","displayEnd","displayString","view","Error","navToLocString","e","console","error","notify","href","PairLink","observer","feat","JSON","parse","stringify","featureData","tags","FeatureDetails","formatter"],"sourceRoot":""}