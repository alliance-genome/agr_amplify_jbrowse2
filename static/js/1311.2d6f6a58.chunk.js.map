{"version":3,"file":"static/js/1311.2d6f6a58.chunk.js","mappings":"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","sources":["../../../plugins/config/src/ConfigurationEditorWidget/components/StringArrayEditor.tsx","../../../plugins/config/src/ConfigurationEditorWidget/components/CallbackEditor.js","../../../plugins/config/src/ConfigurationEditorWidget/components/ColorEditor.tsx","../../../plugins/config/src/ConfigurationEditorWidget/components/SlotEditor.js","../../../plugins/config/src/ConfigurationEditorWidget/components/TypeSelector.js","../../../plugins/config/src/ConfigurationEditorWidget/components/ConfigurationEditor.js","../../../node_modules/pluralize/pluralize.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\n\nimport {\n  Button,\n  FormHelperText,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  List,\n  ListItem,\n  TextField,\n} from '@material-ui/core'\n\n// icons\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nconst StringArrayEditor = observer(\n  ({\n    slot,\n  }: {\n    slot: {\n      name: string\n      value: string[]\n      setAtIndex: Function\n      removeAtIndex: Function\n      add: Function\n      description: string\n    }\n  }) => {\n    const [value, setValue] = useState('')\n    const [addNew, setAddNew] = useState(false)\n    return (\n      <>\n        {slot.name ? <InputLabel>{slot.name}</InputLabel> : null}\n        <List disablePadding>\n          {slot.value.map((val, idx) => (\n            <ListItem key={idx} disableGutters>\n              <TextField\n                value={val}\n                onChange={evt => slot.setAtIndex(idx, evt.target.value)}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        color=\"secondary\"\n                        onClick={() => slot.removeAtIndex(idx)}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </ListItem>\n          ))}\n\n          {addNew ? (\n            <ListItem disableGutters>\n              <TextField\n                value={value}\n                placeholder=\"add new\"\n                onChange={event => setValue(event.target.value)}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <>\n                        <Button\n                          color=\"primary\"\n                          variant=\"contained\"\n                          style={{ margin: 2 }}\n                          data-testid={`stringArrayAdd-${slot.name}`}\n                          onClick={() => {\n                            setAddNew(false)\n                            slot.add(value)\n                            setValue('')\n                          }}\n                        >\n                          OK\n                        </Button>\n                        <Button\n                          color=\"primary\"\n                          variant=\"contained\"\n                          style={{ margin: 2 }}\n                          onClick={() => {\n                            setAddNew(false)\n                            setValue('')\n                          }}\n                        >\n                          Cancel\n                        </Button>\n                      </>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </ListItem>\n          ) : null}\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            style={{ margin: 4 }}\n            disabled={addNew}\n            onClick={() => setAddNew(true)}\n          >\n            Add item\n          </Button>\n        </List>\n        <FormHelperText>{slot.description}</FormHelperText>\n      </>\n    )\n  },\n)\n\nexport default StringArrayEditor\n","import React, { useEffect, useState } from 'react'\nimport { useDebounce } from '@jbrowse/core/util'\nimport { stringToJexlExpression } from '@jbrowse/core/util/jexlStrings'\nimport {\n  FormControl,\n  FormHelperText,\n  InputLabel,\n  Tooltip,\n  IconButton,\n  makeStyles,\n} from '@material-ui/core'\nimport HelpIcon from '@material-ui/icons/Help'\nimport { getEnv } from 'mobx-state-tree'\nimport { observer, PropTypes } from 'mobx-react'\nimport Editor from 'react-simple-code-editor'\n\n// fontSize and fontFamily have to match between Editor and SyntaxHighlighter\nconst fontSize = '12px'\n\n// Optimize by using system default fonts:\n// https://css-tricks.com/snippets/css/font-stacks/\nconst fontFamily =\n  'Consolas, \"Andale Mono WT\", \"Andale Mono\", \"Lucida Console\", \"Lucida Sans Typewriter\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Liberation Mono\", \"Nimbus Mono L\", Monaco, \"Courier New\", Courier, monospace'\n\nconst useStyles = makeStyles(theme => ({\n  callbackEditor: {\n    marginTop: '16px',\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    fontFamily,\n    fontSize,\n  },\n}))\n\nfunction CallbackEditor({ slot }) {\n  const classes = useStyles()\n\n  const [code, setCode] = useState(slot.value)\n  const [error, setCodeError] = useState()\n  const debouncedCode = useDebounce(code, 400)\n\n  useEffect(() => {\n    try {\n      const jexlDebouncedCode = debouncedCode.startsWith('jexl:')\n        ? debouncedCode\n        : `jexl:${debouncedCode}`\n      stringToJexlExpression(\n        jexlDebouncedCode,\n        getEnv(slot).pluginManager?.jexl,\n      )\n      slot.set(jexlDebouncedCode)\n      setCodeError(null)\n    } catch (e) {\n      console.error({ e })\n      setCodeError(e)\n    }\n  }, [debouncedCode, slot])\n\n  // if default value is a callback, will have to remove jexl:\n  // do this last\n  return (\n    <>\n      <FormControl>\n        <InputLabel shrink htmlFor=\"callback-editor\">\n          {slot.name}\n        </InputLabel>\n        <Editor\n          className={classes.callbackEditor}\n          value={code.startsWith('jexl:') ? code.split('jexl:')[1] : code}\n          onValueChange={newCode => setCode(newCode)}\n          highlight={newCode => newCode}\n          padding={10}\n          style={{ background: error ? '#fdd' : undefined }}\n        />\n        {error ? (\n          <FormHelperText\n            style={{ color: '#f00' }}\n          >{`${error}`}</FormHelperText>\n        ) : null}\n        <FormHelperText>{slot.description}</FormHelperText>\n      </FormControl>\n      <Tooltip\n        title={\n          <div>\n            Callbacks are written in Jexl format. Click to learn more.\n            <br /> Names of available context items: {slot.contextVariable}\n          </div>\n        }\n        arrow\n      >\n        <IconButton\n          color=\"primary\"\n          onClick={() => {\n            const newWindow = window.open(\n              'https://github.com/TomFrost/Jexl',\n              '_blank',\n              'noopener,noreferrer',\n            )\n            if (newWindow) {\n              newWindow.opener = null\n            }\n          }}\n        >\n          <HelpIcon />\n        </IconButton>\n      </Tooltip>\n    </>\n  )\n}\nCallbackEditor.propTypes = {\n  slot: PropTypes.objectOrObservableObject.isRequired,\n}\nexport default observer(CallbackEditor)\n","import React, { lazy, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport ReactPropTypes from 'prop-types'\nimport TextField from '@material-ui/core/TextField'\nimport { Color, RGBColor } from 'react-color'\n\nconst ColorPicker = lazy(() => import('./ColorPicker'))\n\n// this is needed because passing a entire color object into the react-color\n// for alpha, can't pass in an rgba string for example\nfunction serializeColor(color: Color) {\n  if (color instanceof Object) {\n    const { r, g, b, a } = color as RGBColor\n    return a === undefined ? `rgb(${r},${g},${b})` : `rgba(${r},${g},${b},${a})`\n  }\n  return color\n}\n\nexport const ColorSlot = (props: {\n  value: string\n  label: string\n  TextFieldProps: {\n    helperText: string\n    fullWidth: boolean\n  }\n  onChange: (arg: string) => void\n}) => {\n  const { value, label, TextFieldProps, onChange } = props\n  const [displayed, setDisplayed] = useState(false)\n\n  return (\n    <>\n      <TextField\n        value={value}\n        label={label}\n        InputProps={{\n          style: {\n            color: value,\n            borderRightWidth: '25px',\n            borderRightStyle: 'solid',\n            borderRightColor: value,\n          },\n        }}\n        onClick={() => setDisplayed(!displayed)}\n        onChange={event => {\n          onChange(event.target.value)\n        }}\n        {...TextFieldProps}\n      />\n      {displayed ? (\n        <React.Suspense fallback={<div />}>\n          <ColorPicker\n            color={value}\n            onChange={event => {\n              onChange(serializeColor(event.rgb))\n            }}\n          />\n        </React.Suspense>\n      ) : null}\n    </>\n  )\n}\nColorSlot.propTypes = {\n  onChange: ReactPropTypes.func.isRequired,\n  label: ReactPropTypes.string,\n  TextFieldProps: ReactPropTypes.shape({}),\n  value: ReactPropTypes.string,\n}\nColorSlot.defaultProps = {\n  label: '',\n  value: '#000',\n  TextFieldProps: {},\n}\n\nfunction ColorEditorSlot(props: {\n  slot: {\n    name: string\n    value: string\n    description: string\n    set: (arg: string) => void\n  }\n}) {\n  const { slot } = props\n  return (\n    <ColorSlot\n      label={slot.name}\n      value={slot.value}\n      onChange={(color: string) => {\n        slot.set(color)\n      }}\n      TextFieldProps={{\n        helperText: slot.description,\n        fullWidth: true,\n      }}\n    />\n  )\n}\nColorEditorSlot.propTypes = {\n  slot: ReactPropTypes.shape({\n    name: ReactPropTypes.string.isRequired,\n    description: ReactPropTypes.string,\n    value: ReactPropTypes.string.isRequired,\n    set: ReactPropTypes.func.isRequired,\n  }).isRequired,\n}\nexport default observer(ColorEditorSlot)\n","import React, { useEffect, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { getPropertyMembers, getEnv } from 'mobx-state-tree'\nimport { FileSelector, SanitizedHTML } from '@jbrowse/core/ui'\nimport {\n  getPropertyType,\n  getSubType,\n  getUnionSubTypes,\n} from '@jbrowse/core/util/mst-reflection'\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  FormHelperText,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  MenuItem,\n  Paper,\n  SvgIcon,\n  TextField,\n  makeStyles,\n} from '@material-ui/core'\n\n// icons\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport AddIcon from '@material-ui/icons/Add'\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked'\n\n// locals\nimport StringArrayEditor from './StringArrayEditor'\nimport CallbackEditor from './CallbackEditor'\nimport ColorEditor from './ColorEditor'\nimport JsonEditor from './JsonEditor'\n\n// adds ability to have html in helperText. note that FormHelperTextProps is\n// div because the default is p which does not like div children\nconst MyTextField = props => {\n  // eslint-disable-next-line react/prop-types\n  const { helperText } = props\n  return (\n    <TextField\n      {...props}\n      helperText={<SanitizedHTML html={helperText} />}\n      FormHelperTextProps={{\n        component: 'div',\n      }}\n      fullWidth\n    />\n  )\n}\n\nconst StringEditor = observer(({ slot }) => (\n  <MyTextField\n    label={slot.name}\n    helperText={slot.description}\n    value={slot.value}\n    onChange={evt => slot.set(evt.target.value)}\n  />\n))\n\nconst TextEditor = observer(({ slot }) => (\n  <TextField\n    label={slot.name}\n    helperText={slot.description}\n    multiline\n    value={slot.value}\n    onChange={evt => slot.set(evt.target.value)}\n  />\n))\n\n// checked checkbox, looks like a styled (x)\nconst SvgCheckbox = () => (\n  <SvgIcon>\n    <path d=\"M20.41,3C21.8,5.71 22.35,8.84 22,12C21.8,15.16 20.7,18.29 18.83,21L17.3,20C18.91,17.57 19.85,14.8 20,12C20.34,9.2 19.89,6.43 18.7,4L20.41,3M5.17,3L6.7,4C5.09,6.43 4.15,9.2 4,12C3.66,14.8 4.12,17.57 5.3,20L3.61,21C2.21,18.29 1.65,15.17 2,12C2.2,8.84 3.3,5.71 5.17,3M12.08,10.68L14.4,7.45H16.93L13.15,12.45L15.35,17.37H13.09L11.71,14L9.28,17.33H6.76L10.66,12.21L8.53,7.45H10.8L12.08,10.68Z\" />\n  </SvgIcon>\n)\n\nconst useMapEditorStyles = makeStyles(theme => ({\n  card: {\n    marginTop: theme.spacing(1),\n  },\n}))\n\nconst StringArrayMapEditor = observer(({ slot }) => {\n  const classes = useMapEditorStyles()\n  const [value, setValue] = useState('')\n  return (\n    <>\n      <InputLabel>{slot.name}</InputLabel>\n      {Array.from(slot.value, ([key, val]) => (\n        <Card raised key={key} className={classes.card}>\n          <CardHeader\n            title={key}\n            action={\n              <IconButton color=\"secondary\" onClick={() => slot.remove(key)}>\n                <DeleteIcon />\n              </IconButton>\n            }\n          />\n          <CardContent>\n            <StringArrayEditor\n              slot={{\n                value: val,\n                description: `Values associated with entry ${key}`,\n                setAtIndex: (idx, strValue) => {\n                  slot.setAtKeyIndex(key, idx, strValue)\n                },\n                removeAtIndex: idx => {\n                  slot.removeAtKeyIndex(key, idx)\n                },\n                add: strValue => {\n                  slot.addToKey(key, strValue)\n                },\n              }}\n            />\n          </CardContent>\n        </Card>\n      ))}\n      <Card raised className={classes.card}>\n        <CardHeader\n          disableTypography\n          title={\n            <TextField\n              fullWidth\n              value={value}\n              placeholder=\"add new\"\n              onChange={event => setValue(event.target.value)}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      disabled={value === ''}\n                      onClick={() => {\n                        slot.add(value, [])\n                        setValue('')\n                      }}\n                      color=\"secondary\"\n                    >\n                      <AddIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          }\n        />\n      </Card>\n      <FormHelperText>{slot.description}</FormHelperText>\n    </>\n  )\n})\n\nconst NumberMapEditor = observer(({ slot }) => {\n  const classes = useMapEditorStyles()\n  const [value, setValue] = useState('')\n  return (\n    <>\n      <InputLabel>{slot.name}</InputLabel>\n      {Array.from(slot.value, ([key, val]) => (\n        <Card raised key={key} className={classes.card}>\n          <CardHeader\n            title={key}\n            action={\n              <IconButton color=\"secondary\" onClick={() => slot.remove(key)}>\n                <DeleteIcon />\n              </IconButton>\n            }\n          />\n          <CardContent>\n            <NumberEditor\n              slot={{\n                value: val,\n                set: numValue => slot.add(key, numValue),\n              }}\n            />\n          </CardContent>\n        </Card>\n      ))}\n      <Card raised className={classes.card}>\n        <CardHeader\n          disableTypography\n          title={\n            <TextField\n              fullWidth\n              value={value}\n              placeholder=\"add new\"\n              onChange={event => setValue(event.target.value)}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      disabled={value === ''}\n                      onClick={() => {\n                        slot.add(value, 0)\n                        setValue('')\n                      }}\n                      color=\"secondary\"\n                    >\n                      <AddIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          }\n        />\n      </Card>\n      <FormHelperText>{slot.description}</FormHelperText>\n    </>\n  )\n})\n\nconst NumberEditor = observer(({ slot }) => {\n  const [val, setVal] = useState(slot.value)\n  useEffect(() => {\n    const num = parseFloat(val, 10)\n    if (!Number.isNaN(num)) {\n      slot.set(num)\n    } else {\n      slot.reset()\n    }\n  }, [slot, val])\n  return (\n    <MyTextField\n      label={slot.name}\n      helperText={slot.description}\n      value={val}\n      type=\"number\"\n      onChange={evt => setVal(evt.target.value)}\n    />\n  )\n})\n\nconst IntegerEditor = observer(({ slot }) => {\n  const [val, setVal] = useState(slot.value)\n  useEffect(() => {\n    const num = parseInt(val, 10)\n    if (!Number.isNaN(num)) {\n      slot.set(num)\n    }\n  }, [slot, val])\n  return (\n    <MyTextField\n      label={slot.name}\n      helperText={slot.description}\n      value={val}\n      type=\"number\"\n      onChange={evt => setVal(evt.target.value)}\n    />\n  )\n})\n\nconst BooleanEditor = observer(({ slot }) => (\n  <FormControl>\n    <FormControlLabel\n      label={slot.name}\n      control={\n        <Checkbox\n          checked={slot.value}\n          onChange={evt => slot.set(evt.target.checked)}\n        />\n      }\n    />\n    <FormHelperText>{slot.description}</FormHelperText>\n  </FormControl>\n))\n\nconst StringEnumEditor = observer(({ slot, slotSchema }) => {\n  const p = getPropertyMembers(getSubType(slotSchema))\n  const choices = getUnionSubTypes(\n    getUnionSubTypes(getSubType(getPropertyType(p, 'value')))[1],\n  ).map(t => t.value)\n\n  return (\n    <MyTextField\n      value={slot.value}\n      label={slot.name}\n      select\n      helperText={slot.description}\n      onChange={evt => slot.set(evt.target.value)}\n    >\n      {choices.map(str => (\n        <MenuItem key={str} value={str}>\n          {str}\n        </MenuItem>\n      ))}\n    </MyTextField>\n  )\n})\n\nconst FileSelectorWrapper = observer(({ slot }) => {\n  return (\n    <FileSelector\n      location={slot.value}\n      setLocation={location => slot.set(location)}\n      name={slot.name}\n      description={slot.description}\n      rootModel={getEnv(slot).pluginManager?.rootModel}\n    />\n  )\n})\n\nconst valueComponents = {\n  string: StringEditor,\n  text: TextEditor,\n  fileLocation: FileSelectorWrapper,\n  stringArray: StringArrayEditor,\n  stringArrayMap: StringArrayMapEditor,\n  numberMap: NumberMapEditor,\n  number: NumberEditor,\n  integer: IntegerEditor,\n  color: ColorEditor,\n  stringEnum: StringEnumEditor,\n  boolean: BooleanEditor,\n  frozen: JsonEditor,\n  configRelationships: JsonEditor,\n}\n\nexport const useSlotEditorStyles = makeStyles(theme => ({\n  paper: {\n    display: 'flex',\n    marginBottom: theme.spacing(2),\n    position: 'relative',\n  },\n  paperContent: {\n    width: '100%',\n  },\n  slotModeSwitch: {\n    width: 24,\n    background: theme.palette.secondary.light,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}))\n\nconst SlotEditor = observer(({ slot, slotSchema }) => {\n  const classes = useSlotEditorStyles()\n  const { type } = slot\n  let ValueComponent = slot.isCallback ? CallbackEditor : valueComponents[type]\n  if (!ValueComponent) {\n    console.warn(`no slot editor defined for ${type}, editing as string`)\n    ValueComponent = StringEditor\n  }\n  if (!(type in valueComponents)) {\n    console.warn(`SlotEditor needs to implement ${type}`)\n  }\n  return (\n    <Paper className={classes.paper}>\n      <div className={classes.paperContent}>\n        <ValueComponent slot={slot} slotSchema={slotSchema} />\n      </div>\n      <div className={classes.slotModeSwitch}>\n        {slot.contextVariable.length ? (\n          <IconButton\n            className={classes.slotModeIcon}\n            onClick={() =>\n              slot.isCallback ? slot.convertToValue() : slot.convertToCallback()\n            }\n            title={`convert to ${\n              slot.isCallback ? 'regular value' : 'callback'\n            }`}\n            color=\"secondary\"\n          >\n            {!slot.isCallback ? <RadioButtonUncheckedIcon /> : <SvgCheckbox />}\n          </IconButton>\n        ) : null}\n      </div>\n    </Paper>\n  )\n})\n\nexport default SlotEditor\n","import MenuItem from '@material-ui/core/MenuItem'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport { observer } from 'mobx-react'\nimport React from 'react'\nimport { useSlotEditorStyles } from './SlotEditor'\n\nconst TypeSelector = observer(\n  ({ typeNameChoices, slot, slotName, onChange }) => {\n    const classes = useSlotEditorStyles()\n    return (\n      <Paper className={classes.paper}>\n        <div className={classes.paperContent}>\n          <TextField\n            value={slot.type}\n            label=\"Type\"\n            select\n            // error={filterError}\n            helperText={`Type of ${slotName} to use`}\n            fullWidth\n            onChange={onChange}\n          >\n            {typeNameChoices.map(str => (\n              <MenuItem key={str} value={str}>\n                {str}\n              </MenuItem>\n            ))}\n          </TextField>\n        </div>\n      </Paper>\n    )\n  },\n)\n\nexport default TypeSelector\n","import React from 'react'\nimport {\n  readConfObject,\n  getTypeNamesFromExplicitlyTypedUnion,\n  isConfigurationSchemaType,\n  isConfigurationSlotType,\n} from '@jbrowse/core/configuration'\nimport {\n  FormGroup,\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { observer } from 'mobx-react'\nimport { getMembers } from 'mobx-state-tree'\nimport { singular } from 'pluralize'\n\n// icons\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\n\n// locals\nimport SlotEditor from './SlotEditor'\nimport TypeSelector from './TypeSelector'\n\nconst useStyles = makeStyles(theme => ({\n  expandIcon: {\n    color: '#fff',\n  },\n  root: {\n    padding: theme.spacing(1, 3, 1, 1),\n  },\n  expansionPanelDetails: {\n    display: 'block',\n    padding: theme.spacing(1),\n  },\n\n  accordion: {\n    border: `1px solid ${theme.palette.text.primary}`,\n  },\n}))\n\nconst Member = observer(props => {\n  const classes = useStyles()\n  const {\n    slotName,\n    slotSchema,\n    schema,\n    slot = schema[slotName],\n    path = [],\n  } = props\n  let typeSelector\n  if (isConfigurationSchemaType(slotSchema)) {\n    if (slot.length) {\n      return slot.map((subslot, slotIndex) => {\n        const key = `${singular(slotName)} ${slotIndex + 1}`\n        return <Member {...props} key={key} slot={subslot} slotName={key} />\n      })\n    }\n    // if this is an explicitly typed schema, make a type-selecting dropdown\n    // that can be used to change its type\n    const typeNameChoices = getTypeNamesFromExplicitlyTypedUnion(slotSchema)\n    if (typeNameChoices.length) {\n      typeSelector = (\n        <TypeSelector\n          typeNameChoices={typeNameChoices}\n          slotName={slotName}\n          slot={slot}\n          onChange={evt => {\n            if (evt.target.value !== slot.type) {\n              schema.setSubschema(slotName, { type: evt.target.value })\n            }\n          }}\n        />\n      )\n    }\n    return (\n      <Accordion\n        defaultExpanded\n        className={classes.accordion}\n        TransitionProps={{ unmountOnExit: true, timeout: 150 }}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon className={classes.expandIcon} />}\n        >\n          <Typography>{[...path, slotName].join('🡒')}</Typography>\n        </AccordionSummary>\n        <AccordionDetails className={classes.expansionPanelDetails}>\n          {typeSelector}\n          <FormGroup>\n            <Schema schema={slot} path={[...path, slotName]} />\n          </FormGroup>\n        </AccordionDetails>\n      </Accordion>\n    )\n  }\n\n  if (isConfigurationSlotType(slotSchema)) {\n    // this is a regular config slot\n    return <SlotEditor key={slotName} slot={slot} slotSchema={slotSchema} />\n  }\n\n  return null\n})\n\nconst Schema = observer(({ schema, path = [] }) => {\n  const properties = getMembers(schema).properties\n  return Object.entries(properties).map(([slotName, slotSchema]) => (\n    <Member\n      key={slotName}\n      slotName={slotName}\n      slotSchema={slotSchema}\n      path={path}\n      schema={schema}\n    />\n  ))\n})\n\nconst ConfigurationEditor = observer(({ model }) => {\n  const classes = useStyles()\n  // key forces a re-render, otherwise the same field can end up being used\n  // for different tracks since only the backing model changes for example\n  // see pr #804\n  const key = model.target && readConfObject(model.target, 'trackId')\n  const name = model.target && readConfObject(model.target, 'name')\n  return (\n    <>\n      <Accordion\n        key={key}\n        defaultExpanded\n        className={classes.accordion}\n        TransitionProps={{ unmountOnExit: true, timeout: 150 }}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon className={classes.expandIcon} />}\n        >\n          <Typography>{name ? name : 'Configuration'}</Typography>\n        </AccordionSummary>\n        <AccordionDetails\n          className={classes.expansionPanelDetails}\n          data-testid=\"configEditor\"\n        >\n          {!model.target ? 'no target set' : <Schema schema={model.target} />}\n        </AccordionDetails>\n      </Accordion>\n\n      {/* blank space at the bottom of screen allows scroll */}\n      <div style={{ height: 300 }} />\n    </>\n  )\n})\n\nexport default ConfigurationEditor\n","/* global define */\n\n(function (root, pluralize) {\n  /* istanbul ignore else */\n  if (typeof require === 'function' && typeof exports === 'object' && typeof module === 'object') {\n    // Node.\n    module.exports = pluralize();\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD, registers as an anonymous module.\n    define(function () {\n      return pluralize();\n    });\n  } else {\n    // Browser global.\n    root.pluralize = pluralize();\n  }\n})(this, function () {\n  // Rule storage - pluralize and singularize need to be run sequentially,\n  // while other rules can be optimized using an object for instant lookups.\n  var pluralRules = [];\n  var singularRules = [];\n  var uncountables = {};\n  var irregularPlurals = {};\n  var irregularSingles = {};\n\n  /**\n   * Sanitize a pluralization rule to a usable regular expression.\n   *\n   * @param  {(RegExp|string)} rule\n   * @return {RegExp}\n   */\n  function sanitizeRule (rule) {\n    if (typeof rule === 'string') {\n      return new RegExp('^' + rule + '$', 'i');\n    }\n\n    return rule;\n  }\n\n  /**\n   * Pass in a word token to produce a function that can replicate the case on\n   * another word.\n   *\n   * @param  {string}   word\n   * @param  {string}   token\n   * @return {Function}\n   */\n  function restoreCase (word, token) {\n    // Tokens are an exact match.\n    if (word === token) return token;\n\n    // Lower cased words. E.g. \"hello\".\n    if (word === word.toLowerCase()) return token.toLowerCase();\n\n    // Upper cased words. E.g. \"WHISKY\".\n    if (word === word.toUpperCase()) return token.toUpperCase();\n\n    // Title cased words. E.g. \"Title\".\n    if (word[0] === word[0].toUpperCase()) {\n      return token.charAt(0).toUpperCase() + token.substr(1).toLowerCase();\n    }\n\n    // Lower cased words. E.g. \"test\".\n    return token.toLowerCase();\n  }\n\n  /**\n   * Interpolate a regexp string.\n   *\n   * @param  {string} str\n   * @param  {Array}  args\n   * @return {string}\n   */\n  function interpolate (str, args) {\n    return str.replace(/\\$(\\d{1,2})/g, function (match, index) {\n      return args[index] || '';\n    });\n  }\n\n  /**\n   * Replace a word using a rule.\n   *\n   * @param  {string} word\n   * @param  {Array}  rule\n   * @return {string}\n   */\n  function replace (word, rule) {\n    return word.replace(rule[0], function (match, index) {\n      var result = interpolate(rule[1], arguments);\n\n      if (match === '') {\n        return restoreCase(word[index - 1], result);\n      }\n\n      return restoreCase(match, result);\n    });\n  }\n\n  /**\n   * Sanitize a word by passing in the word and sanitization rules.\n   *\n   * @param  {string}   token\n   * @param  {string}   word\n   * @param  {Array}    rules\n   * @return {string}\n   */\n  function sanitizeWord (token, word, rules) {\n    // Empty string or doesn't need fixing.\n    if (!token.length || uncountables.hasOwnProperty(token)) {\n      return word;\n    }\n\n    var len = rules.length;\n\n    // Iterate over the sanitization rules and use the first one to match.\n    while (len--) {\n      var rule = rules[len];\n\n      if (rule[0].test(word)) return replace(word, rule);\n    }\n\n    return word;\n  }\n\n  /**\n   * Replace a word with the updated word.\n   *\n   * @param  {Object}   replaceMap\n   * @param  {Object}   keepMap\n   * @param  {Array}    rules\n   * @return {Function}\n   */\n  function replaceWord (replaceMap, keepMap, rules) {\n    return function (word) {\n      // Get the correct token and case restoration functions.\n      var token = word.toLowerCase();\n\n      // Check against the keep object map.\n      if (keepMap.hasOwnProperty(token)) {\n        return restoreCase(word, token);\n      }\n\n      // Check against the replacement map for a direct word replacement.\n      if (replaceMap.hasOwnProperty(token)) {\n        return restoreCase(word, replaceMap[token]);\n      }\n\n      // Run all the rules against the word.\n      return sanitizeWord(token, word, rules);\n    };\n  }\n\n  /**\n   * Check if a word is part of the map.\n   */\n  function checkWord (replaceMap, keepMap, rules, bool) {\n    return function (word) {\n      var token = word.toLowerCase();\n\n      if (keepMap.hasOwnProperty(token)) return true;\n      if (replaceMap.hasOwnProperty(token)) return false;\n\n      return sanitizeWord(token, token, rules) === token;\n    };\n  }\n\n  /**\n   * Pluralize or singularize a word based on the passed in count.\n   *\n   * @param  {string}  word      The word to pluralize\n   * @param  {number}  count     How many of the word exist\n   * @param  {boolean} inclusive Whether to prefix with the number (e.g. 3 ducks)\n   * @return {string}\n   */\n  function pluralize (word, count, inclusive) {\n    var pluralized = count === 1\n      ? pluralize.singular(word) : pluralize.plural(word);\n\n    return (inclusive ? count + ' ' : '') + pluralized;\n  }\n\n  /**\n   * Pluralize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.plural = replaceWord(\n    irregularSingles, irregularPlurals, pluralRules\n  );\n\n  /**\n   * Check if a word is plural.\n   *\n   * @type {Function}\n   */\n  pluralize.isPlural = checkWord(\n    irregularSingles, irregularPlurals, pluralRules\n  );\n\n  /**\n   * Singularize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.singular = replaceWord(\n    irregularPlurals, irregularSingles, singularRules\n  );\n\n  /**\n   * Check if a word is singular.\n   *\n   * @type {Function}\n   */\n  pluralize.isSingular = checkWord(\n    irregularPlurals, irregularSingles, singularRules\n  );\n\n  /**\n   * Add a pluralization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addPluralRule = function (rule, replacement) {\n    pluralRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add a singularization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addSingularRule = function (rule, replacement) {\n    singularRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add an uncountable word rule.\n   *\n   * @param {(string|RegExp)} word\n   */\n  pluralize.addUncountableRule = function (word) {\n    if (typeof word === 'string') {\n      uncountables[word.toLowerCase()] = true;\n      return;\n    }\n\n    // Set singular and plural references for the word.\n    pluralize.addPluralRule(word, '$0');\n    pluralize.addSingularRule(word, '$0');\n  };\n\n  /**\n   * Add an irregular word definition.\n   *\n   * @param {string} single\n   * @param {string} plural\n   */\n  pluralize.addIrregularRule = function (single, plural) {\n    plural = plural.toLowerCase();\n    single = single.toLowerCase();\n\n    irregularSingles[single] = plural;\n    irregularPlurals[plural] = single;\n  };\n\n  /**\n   * Irregular rules.\n   */\n  [\n    // Pronouns.\n    ['I', 'we'],\n    ['me', 'us'],\n    ['he', 'they'],\n    ['she', 'they'],\n    ['them', 'them'],\n    ['myself', 'ourselves'],\n    ['yourself', 'yourselves'],\n    ['itself', 'themselves'],\n    ['herself', 'themselves'],\n    ['himself', 'themselves'],\n    ['themself', 'themselves'],\n    ['is', 'are'],\n    ['was', 'were'],\n    ['has', 'have'],\n    ['this', 'these'],\n    ['that', 'those'],\n    // Words ending in with a consonant and `o`.\n    ['echo', 'echoes'],\n    ['dingo', 'dingoes'],\n    ['volcano', 'volcanoes'],\n    ['tornado', 'tornadoes'],\n    ['torpedo', 'torpedoes'],\n    // Ends with `us`.\n    ['genus', 'genera'],\n    ['viscus', 'viscera'],\n    // Ends with `ma`.\n    ['stigma', 'stigmata'],\n    ['stoma', 'stomata'],\n    ['dogma', 'dogmata'],\n    ['lemma', 'lemmata'],\n    ['schema', 'schemata'],\n    ['anathema', 'anathemata'],\n    // Other irregular rules.\n    ['ox', 'oxen'],\n    ['axe', 'axes'],\n    ['die', 'dice'],\n    ['yes', 'yeses'],\n    ['foot', 'feet'],\n    ['eave', 'eaves'],\n    ['goose', 'geese'],\n    ['tooth', 'teeth'],\n    ['quiz', 'quizzes'],\n    ['human', 'humans'],\n    ['proof', 'proofs'],\n    ['carve', 'carves'],\n    ['valve', 'valves'],\n    ['looey', 'looies'],\n    ['thief', 'thieves'],\n    ['groove', 'grooves'],\n    ['pickaxe', 'pickaxes'],\n    ['passerby', 'passersby']\n  ].forEach(function (rule) {\n    return pluralize.addIrregularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Pluralization rules.\n   */\n  [\n    [/s?$/i, 's'],\n    [/[^\\u0000-\\u007F]$/i, '$0'],\n    [/([^aeiou]ese)$/i, '$1'],\n    [/(ax|test)is$/i, '$1es'],\n    [/(alias|[^aou]us|t[lm]as|gas|ris)$/i, '$1es'],\n    [/(e[mn]u)s?$/i, '$1s'],\n    [/([^l]ias|[aeiou]las|[ejzr]as|[iu]am)$/i, '$1'],\n    [/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1i'],\n    [/(alumn|alg|vertebr)(?:a|ae)$/i, '$1ae'],\n    [/(seraph|cherub)(?:im)?$/i, '$1im'],\n    [/(her|at|gr)o$/i, '$1oes'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|automat|quor)(?:a|um)$/i, '$1a'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)(?:a|on)$/i, '$1a'],\n    [/sis$/i, 'ses'],\n    [/(?:(kni|wi|li)fe|(ar|l|ea|eo|oa|hoo)f)$/i, '$1$2ves'],\n    [/([^aeiouy]|qu)y$/i, '$1ies'],\n    [/([^ch][ieo][ln])ey$/i, '$1ies'],\n    [/(x|ch|ss|sh|zz)$/i, '$1es'],\n    [/(matr|cod|mur|sil|vert|ind|append)(?:ix|ex)$/i, '$1ices'],\n    [/\\b((?:tit)?m|l)(?:ice|ouse)$/i, '$1ice'],\n    [/(pe)(?:rson|ople)$/i, '$1ople'],\n    [/(child)(?:ren)?$/i, '$1ren'],\n    [/eaux$/i, '$0'],\n    [/m[ae]n$/i, 'men'],\n    ['thou', 'you']\n  ].forEach(function (rule) {\n    return pluralize.addPluralRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Singularization rules.\n   */\n  [\n    [/s$/i, ''],\n    [/(ss)$/i, '$1'],\n    [/(wi|kni|(?:after|half|high|low|mid|non|night|[^\\w]|^)li)ves$/i, '$1fe'],\n    [/(ar|(?:wo|[ae])l|[eo][ao])ves$/i, '$1f'],\n    [/ies$/i, 'y'],\n    [/\\b([pl]|zomb|(?:neck|cross)?t|coll|faer|food|gen|goon|group|lass|talk|goal|cut)ies$/i, '$1ie'],\n    [/\\b(mon|smil)ies$/i, '$1ey'],\n    [/\\b((?:tit)?m|l)ice$/i, '$1ouse'],\n    [/(seraph|cherub)im$/i, '$1'],\n    [/(x|ch|ss|sh|zz|tto|go|cho|alias|[^aou]us|t[lm]as|gas|(?:her|at|gr)o|[aeiou]ris)(?:es)?$/i, '$1'],\n    [/(analy|diagno|parenthe|progno|synop|the|empha|cri|ne)(?:sis|ses)$/i, '$1sis'],\n    [/(movie|twelve|abuse|e[mn]u)s$/i, '$1'],\n    [/(test)(?:is|es)$/i, '$1is'],\n    [/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1us'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|quor)a$/i, '$1um'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)a$/i, '$1on'],\n    [/(alumn|alg|vertebr)ae$/i, '$1a'],\n    [/(cod|mur|sil|vert|ind)ices$/i, '$1ex'],\n    [/(matr|append)ices$/i, '$1ix'],\n    [/(pe)(rson|ople)$/i, '$1rson'],\n    [/(child)ren$/i, '$1'],\n    [/(eau)x?$/i, '$1'],\n    [/men$/i, 'man']\n  ].forEach(function (rule) {\n    return pluralize.addSingularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Uncountable rules.\n   */\n  [\n    // Singular words with no plurals.\n    'adulthood',\n    'advice',\n    'agenda',\n    'aid',\n    'aircraft',\n    'alcohol',\n    'ammo',\n    'analytics',\n    'anime',\n    'athletics',\n    'audio',\n    'bison',\n    'blood',\n    'bream',\n    'buffalo',\n    'butter',\n    'carp',\n    'cash',\n    'chassis',\n    'chess',\n    'clothing',\n    'cod',\n    'commerce',\n    'cooperation',\n    'corps',\n    'debris',\n    'diabetes',\n    'digestion',\n    'elk',\n    'energy',\n    'equipment',\n    'excretion',\n    'expertise',\n    'firmware',\n    'flounder',\n    'fun',\n    'gallows',\n    'garbage',\n    'graffiti',\n    'hardware',\n    'headquarters',\n    'health',\n    'herpes',\n    'highjinks',\n    'homework',\n    'housework',\n    'information',\n    'jeans',\n    'justice',\n    'kudos',\n    'labour',\n    'literature',\n    'machinery',\n    'mackerel',\n    'mail',\n    'media',\n    'mews',\n    'moose',\n    'music',\n    'mud',\n    'manga',\n    'news',\n    'only',\n    'personnel',\n    'pike',\n    'plankton',\n    'pliers',\n    'police',\n    'pollution',\n    'premises',\n    'rain',\n    'research',\n    'rice',\n    'salmon',\n    'scissors',\n    'series',\n    'sewage',\n    'shambles',\n    'shrimp',\n    'software',\n    'species',\n    'staff',\n    'swine',\n    'tennis',\n    'traffic',\n    'transportation',\n    'trout',\n    'tuna',\n    'wealth',\n    'welfare',\n    'whiting',\n    'wildebeest',\n    'wildlife',\n    'you',\n    /pok[eé]mon$/i,\n    // Regexes.\n    /[^aeiou]ese$/i, // \"chinese\", \"japanese\"\n    /deer$/i, // \"deer\", \"reindeer\"\n    /fish$/i, // \"fish\", \"blowfish\", \"angelfish\"\n    /measles$/i,\n    /o[iu]s$/i, // \"carnivorous\"\n    /pox$/i, // \"chickpox\", \"smallpox\"\n    /sheep$/i\n  ].forEach(pluralize.addUncountableRule);\n\n  return pluralize;\n});\n"],"names":["observer","slot","useState","value","setValue","addNew","setAddNew","name","InputLabel","List","disablePadding","map","val","idx","ListItem","disableGutters","TextField","onChange","evt","setAtIndex","target","InputProps","endAdornment","InputAdornment","position","IconButton","color","onClick","removeAtIndex","Delete","placeholder","event","Button","variant","style","margin","add","disabled","FormHelperText","description","useStyles","makeStyles","theme","callbackEditor","marginTop","borderBottom","palette","divider","fontFamily","fontSize","classes","code","setCode","error","setCodeError","debouncedCode","useDebounce","useEffect","jexlDebouncedCode","startsWith","stringToJexlExpression","getEnv","pluginManager","jexl","set","e","console","FormControl","shrink","htmlFor","className","split","onValueChange","newCode","highlight","padding","background","undefined","Tooltip","title","contextVariable","arrow","newWindow","window","open","opener","Help","ColorPicker","lazy","ColorSlot","props","label","TextFieldProps","displayed","setDisplayed","borderRightWidth","borderRightStyle","borderRightColor","fallback","Object","r","g","b","a","serializeColor","rgb","defaultProps","helperText","fullWidth","MyTextField","SanitizedHTML","html","FormHelperTextProps","component","StringEditor","TextEditor","multiline","SvgCheckbox","SvgIcon","d","useMapEditorStyles","card","spacing","StringArrayMapEditor","Array","from","key","Card","raised","CardHeader","action","remove","CardContent","strValue","setAtKeyIndex","removeAtKeyIndex","addToKey","disableTypography","Add","NumberMapEditor","NumberEditor","numValue","setVal","num","parseFloat","Number","isNaN","reset","type","IntegerEditor","parseInt","BooleanEditor","FormControlLabel","control","Checkbox","checked","StringEnumEditor","slotSchema","p","getPropertyMembers","getSubType","choices","getUnionSubTypes","getPropertyType","t","select","str","MenuItem","FileSelectorWrapper","FileSelector","location","setLocation","rootModel","valueComponents","string","text","fileLocation","stringArray","StringArrayEditor","stringArrayMap","numberMap","number","integer","ColorEditor","stringEnum","boolean","frozen","JsonEditor","configRelationships","useSlotEditorStyles","paper","display","marginBottom","paperContent","width","slotModeSwitch","secondary","light","justifyContent","alignItems","ValueComponent","isCallback","CallbackEditor","warn","Paper","length","slotModeIcon","convertToValue","convertToCallback","RadioButtonUnchecked","typeNameChoices","slotName","expandIcon","root","expansionPanelDetails","accordion","border","primary","Member","typeSelector","schema","path","isConfigurationSchemaType","subslot","slotIndex","singular","getTypeNamesFromExplicitlyTypedUnion","setSubschema","Accordion","defaultExpanded","TransitionProps","unmountOnExit","timeout","AccordionSummary","ExpandMore","Typography","join","AccordionDetails","FormGroup","Schema","isConfigurationSlotType","properties","getMembers","entries","model","readConfObject","height","module","exports","pluralRules","singularRules","uncountables","irregularPlurals","irregularSingles","sanitizeRule","rule","RegExp","restoreCase","word","token","toLowerCase","toUpperCase","charAt","substr","interpolate","args","replace","match","index","result","arguments","sanitizeWord","rules","hasOwnProperty","len","test","replaceWord","replaceMap","keepMap","checkWord","bool","pluralize","count","inclusive","plural","isPlural","isSingular","addPluralRule","replacement","push","addSingularRule","addUncountableRule","addIrregularRule","single","forEach"],"sourceRoot":""}