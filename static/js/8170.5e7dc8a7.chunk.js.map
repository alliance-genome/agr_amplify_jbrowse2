{"version":3,"file":"static/js/8170.5e7dc8a7.chunk.js","mappings":"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","sources":["../../../packages/core/ui/AboutDialog.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport copy from 'copy-to-clipboard'\nimport { Button, DialogContent, Typography } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport {\n  getConf,\n  readConfObject,\n  AnyConfigurationModel,\n} from '../configuration'\nimport Dialog from './Dialog'\nimport LoadingEllipses from './LoadingEllipses'\nimport { getSession, getEnv } from '../util'\nimport { getTrackName } from '../util/tracks'\nimport { BaseCard, Attributes } from '../BaseFeatureWidget/BaseFeatureDetail'\n\ntype FileInfo = Record<string, unknown> | string\n\nconst useStyles = makeStyles()({\n  content: {\n    minWidth: 800,\n  },\n})\n\nexport function FileInfoPanel({ config }: { config: AnyConfigurationModel }) {\n  const [error, setError] = useState<unknown>()\n  const [info, setInfo] = useState<FileInfo>()\n  const session = getSession(config)\n  const { rpcManager } = session\n\n  useEffect(() => {\n    const aborter = new AbortController()\n    const { signal } = aborter\n    let cancelled = false\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      try {\n        const adapterConfig = readConfObject(config, 'adapter')\n        const result = await rpcManager.call(config.trackId, 'CoreGetInfo', {\n          adapterConfig,\n          signal,\n        })\n        if (!cancelled) {\n          setInfo(result as FileInfo)\n        }\n      } catch (e) {\n        if (!cancelled) {\n          console.error(e)\n          setError(e)\n        }\n      }\n    })()\n\n    return () => {\n      aborter.abort()\n      cancelled = true\n    }\n  }, [config, rpcManager])\n\n  const details =\n    typeof info === 'string'\n      ? {\n          header: `<pre>${info\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')}</pre>`,\n        }\n      : info || {}\n\n  return info !== null ? (\n    <BaseCard title=\"File info\">\n      {error ? (\n        <Typography color=\"error\">{`${error}`}</Typography>\n      ) : info === undefined ? (\n        <LoadingEllipses message=\"Loading file data\" />\n      ) : (\n        <Attributes attributes={details} />\n      )}\n    </BaseCard>\n  ) : null\n}\n\nexport function AboutContents({ config }: { config: AnyConfigurationModel }) {\n  const [copied, setCopied] = useState(false)\n  const conf = readConfObject(config)\n  const session = getSession(config)\n\n  const hideUris =\n    getConf(session, ['formatAbout', 'hideUris']) ||\n    readConfObject(config, ['formatAbout', 'hideUris'])\n\n  const { pluginManager } = getEnv(session)\n\n  const confPostExt = pluginManager.evaluateExtensionPoint(\n    'Core-customizeAbout',\n    {\n      config: {\n        ...conf,\n        ...getConf(session, ['formatAbout', 'config'], { config: conf }),\n        ...readConfObject(config, ['formatAbout', 'config'], { config: conf }),\n      },\n    },\n    { session, config },\n  ) as Record<string, unknown>\n\n  const ExtraPanel = pluginManager.evaluateExtensionPoint(\n    'Core-extraAboutPanel',\n    null,\n    { session, config },\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ) as { name: string; Component: React.FC<any> }\n\n  return (\n    <>\n      <BaseCard title=\"Configuration\">\n        {!hideUris ? (\n          <Button\n            variant=\"contained\"\n            style={{ float: 'right' }}\n            onClick={() => {\n              copy(JSON.stringify(conf, null, 2))\n              setCopied(true)\n              setTimeout(() => setCopied(false), 1000)\n            }}\n          >\n            {copied ? 'Copied to clipboard!' : 'Copy config'}\n          </Button>\n        ) : null}\n        <Attributes\n          attributes={confPostExt}\n          omit={['displays', 'baseUri', 'refNames', 'formatAbout']}\n          hideUris={hideUris}\n        />\n      </BaseCard>\n      {ExtraPanel ? (\n        <BaseCard title={ExtraPanel.name}>\n          <ExtraPanel.Component config={config} />\n        </BaseCard>\n      ) : null}\n      <FileInfoPanel config={config} />\n    </>\n  )\n}\n\nexport default function AboutDialog({\n  config,\n  handleClose,\n}: {\n  config: AnyConfigurationModel\n  handleClose: () => void\n}) {\n  const { classes } = useStyles()\n  const session = getSession(config)\n  const trackName = getTrackName(config, session)\n  const { pluginManager } = getEnv(session)\n\n  const AboutComponent = pluginManager.evaluateExtensionPoint(\n    'Core-replaceAbout',\n    AboutContents,\n    { session, config },\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ) as React.FC<any>\n\n  return (\n    <Dialog open onClose={handleClose} title={trackName} maxWidth=\"xl\">\n      <DialogContent className={classes.content}>\n        <AboutComponent config={config} />\n      </DialogContent>\n    </Dialog>\n  )\n}\n"],"names":["useStyles","makeStyles","content","minWidth","FileInfoPanel","config","useState","error","setError","info","setInfo","rpcManager","getSession","useEffect","aborter","AbortController","signal","cancelled","adapterConfig","readConfObject","call","trackId","result","console","abort","details","header","replace","BaseCard","title","color","undefined","message","Attributes","attributes","AboutContents","copied","setCopied","conf","session","hideUris","getConf","pluginManager","getEnv","confPostExt","evaluateExtensionPoint","ExtraPanel","variant","style","float","onClick","copy","JSON","stringify","setTimeout","omit","name","Component","AboutDialog","handleClose","classes","trackName","getTrackName","AboutComponent","open","onClose","maxWidth","className"],"sourceRoot":""}