{"version":3,"file":"static/js/4824.847ea861.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/icons-material/MoreHoriz.js","../../../node_modules/@mui/icons-material/ShoppingCart.js","../../../node_modules/@mui/material/Badge/Badge.js","../../../node_modules/@mui/base/BadgeUnstyled/useBadge.js","../../../node_modules/@mui/material/Badge/badgeClasses.js","../../../node_modules/react-virtualized-auto-sizer/dist/index.esm.js","../../../node_modules/react-merge-refs/src/index.tsx","../../../node_modules/react-vtree/dist/es/utils.js","../../../node_modules/react-vtree/dist/es/Tree.js","../../../node_modules/react-vtree/dist/es/FixedSizeTree.js","../../../node_modules/memoize-one/dist/memoize-one.esm.js","../../../node_modules/react-window/src/timer.js","../../../node_modules/react-window/src/domHelpers.js","../../../node_modules/react-window/src/createGridComponent.js","../../../node_modules/react-window/src/createListComponent.js","../../../node_modules/react-window/src/VariableSizeList.js","../../../node_modules/react-vtree/dist/es/VariableSizeTree.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zM1 2v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.14 0-.25-.11-.25-.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.58-6.49c.08-.14.12-.31.12-.48 0-.55-.45-1-1-1H5.21l-.94-2H1zm16 16c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2z\"\n}), 'ShoppingCart');\nexports.default = _default;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchorOrigin\", \"className\", \"classes\", \"component\", \"components\", \"componentsProps\", \"children\", \"overlap\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"slots\", \"slotProps\", \"showZero\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { usePreviousProps } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport { useBadge } from '@mui/base/BadgeUnstyled';\nimport { useSlotProps } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  })\n}, ownerState.color !== 'default' && {\n  backgroundColor: (theme.vars || theme).palette[ownerState.color].main,\n  color: (theme.vars || theme).palette[ownerState.color].contrastText\n}, ownerState.variant === 'dot' && {\n  borderRadius: RADIUS_DOT,\n  height: RADIUS_DOT * 2,\n  minWidth: RADIUS_DOT * 2,\n  padding: 0\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.invisible && {\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.leavingScreen\n  })\n}));\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  var _ref, _slots$root, _ref2, _slots$badge, _slotProps$root, _slotProps$badge;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n  const {\n      anchorOrigin: anchorOriginProp = {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      className,\n      component,\n      components = {},\n      componentsProps = {},\n      children,\n      overlap: overlapProp = 'rectangular',\n      color: colorProp = 'default',\n      invisible: invisibleProp = false,\n      max: maxProp = 99,\n      badgeContent: badgeContentProp,\n      slots,\n      slotProps,\n      showZero = false,\n      variant: variantProp = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    badgeContent,\n    invisible: invisibleFromHook,\n    max,\n    displayValue: displayValueFromHook\n  } = useBadge({\n    max: maxProp,\n    invisible: invisibleProp,\n    badgeContent: badgeContentProp,\n    showZero\n  });\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp,\n    badgeContent: badgeContentProp\n  });\n  const invisible = invisibleFromHook || badgeContent == null && variantProp !== 'dot';\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const displayValue = variant !== 'dot' ? displayValueFromHook : undefined;\n  const ownerState = _extends({}, props, {\n    badgeContent,\n    invisible,\n    max,\n    displayValue,\n    showZero,\n    anchorOrigin,\n    color,\n    overlap,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n\n  // support both `slots` and `components` for backward compatibility\n  const RootSlot = (_ref = (_slots$root = slots == null ? void 0 : slots.root) != null ? _slots$root : components.Root) != null ? _ref : BadgeRoot;\n  const BadgeSlot = (_ref2 = (_slots$badge = slots == null ? void 0 : slots.badge) != null ? _slots$badge : components.Badge) != null ? _ref2 : BadgeBadge;\n  const rootSlotProps = (_slotProps$root = slotProps == null ? void 0 : slotProps.root) != null ? _slotProps$root : componentsProps.root;\n  const badgeSlotProps = (_slotProps$badge = slotProps == null ? void 0 : slotProps.badge) != null ? _slotProps$badge : componentsProps.badge;\n  const rootProps = useSlotProps({\n    elementType: RootSlot,\n    externalSlotProps: rootSlotProps,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref,\n      as: component\n    },\n    ownerState,\n    className: clsx(rootSlotProps == null ? void 0 : rootSlotProps.className, classes.root, className)\n  });\n  const badgeProps = useSlotProps({\n    elementType: BadgeSlot,\n    externalSlotProps: badgeSlotProps,\n    ownerState,\n    className: clsx(classes.badge, badgeSlotProps == null ? void 0 : badgeSlotProps.className)\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, _extends({}, rootProps, {\n    children: [children, /*#__PURE__*/_jsx(BadgeSlot, _extends({}, badgeProps, {\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","import { usePreviousProps } from '@mui/utils';\n/**\n *\n * Demos:\n *\n * - [Unstyled badge](https://mui.com/base/react-badge/#hook)\n *\n * API:\n *\n * - [useBadge API](https://mui.com/base/api/use-badge/)\n */\nexport default function useBadge(parameters) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = parameters;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : parameters;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft', 'invisible', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'overlapRectangular', 'overlapCircular',\n// TODO: v6 remove the overlap value from these class keys\n'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular']);\nexport default badgeClasses;","import { createElement, PureComponent } from 'react';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n **/\n\n// Check `document` and `window` in case of server-side rendering\nvar windowObject = void 0;\nif (typeof window !== 'undefined') {\n  windowObject = window;\n\n  // eslint-disable-next-line no-restricted-globals\n} else if (typeof self !== 'undefined') {\n  // eslint-disable-next-line no-restricted-globals\n  windowObject = self;\n} else {\n  windowObject = global;\n}\n\nvar cancelFrame = null;\nvar requestFrame = null;\n\nvar TIMEOUT_DURATION = 20;\n\nvar clearTimeoutFn = windowObject.clearTimeout;\nvar setTimeoutFn = windowObject.setTimeout;\n\nvar cancelAnimationFrameFn = windowObject.cancelAnimationFrame || windowObject.mozCancelAnimationFrame || windowObject.webkitCancelAnimationFrame;\n\nvar requestAnimationFrameFn = windowObject.requestAnimationFrame || windowObject.mozRequestAnimationFrame || windowObject.webkitRequestAnimationFrame;\n\nif (cancelAnimationFrameFn == null || requestAnimationFrameFn == null) {\n  // For environments that don't support animation frame,\n  // fallback to a setTimeout based approach.\n  cancelFrame = clearTimeoutFn;\n  requestFrame = function requestAnimationFrameViaSetTimeout(callback) {\n    return setTimeoutFn(callback, TIMEOUT_DURATION);\n  };\n} else {\n  // Counter intuitively, environments that support animation frames can be trickier.\n  // Chrome's \"Throttle non-visible cross-origin iframes\" flag can prevent rAFs from being called.\n  // In this case, we should fallback to a setTimeout() implementation.\n  cancelFrame = function cancelFrame(_ref) {\n    var _ref2 = slicedToArray(_ref, 2),\n        animationFrameID = _ref2[0],\n        timeoutID = _ref2[1];\n\n    cancelAnimationFrameFn(animationFrameID);\n    clearTimeoutFn(timeoutID);\n  };\n  requestFrame = function requestAnimationFrameWithSetTimeoutFallback(callback) {\n    var animationFrameID = requestAnimationFrameFn(function animationFrameCallback() {\n      clearTimeoutFn(timeoutID);\n      callback();\n    });\n\n    var timeoutID = setTimeoutFn(function timeoutCallback() {\n      cancelAnimationFrameFn(animationFrameID);\n      callback();\n    }, TIMEOUT_DURATION);\n\n    return [animationFrameID, timeoutID];\n  };\n}\n\nfunction createDetectElementResize(nonce) {\n  var animationKeyframes = void 0;\n  var animationName = void 0;\n  var animationStartEvent = void 0;\n  var animationStyle = void 0;\n  var checkTriggers = void 0;\n  var resetTriggers = void 0;\n  var scrollListener = void 0;\n\n  var attachEvent = typeof document !== 'undefined' && document.attachEvent;\n  if (!attachEvent) {\n    resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth !== element.__resizeLast__.width || element.offsetHeight !== element.__resizeLast__.height;\n    };\n\n    scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n      this.__resizeRAF__ = requestFrame(function animationFrame() {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n          element.__resizeListeners__.forEach(function forEachResizeListener(fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n\n    /* Detect CSS Animations support to detect element display/re-attach */\n    var animation = false;\n    var keyframeprefix = '';\n    animationStartEvent = 'animationstart';\n    var domPrefixes = 'Webkit Moz O ms'.split(' ');\n    var startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' ');\n    var pfx = '';\n    {\n      var elm = document.createElement('fakeelement');\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationStartEvent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n\n    animationName = 'resizeanim';\n    animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n        var elementStyle = windowObject.getComputedStyle(element);\n        if (elementStyle && elementStyle.position === 'static') {\n          element.style.position = 'relative';\n        }\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        var expandTrigger = doc.createElement('div');\n        expandTrigger.className = 'expand-trigger';\n        expandTrigger.appendChild(doc.createElement('div'));\n        var contractTrigger = doc.createElement('div');\n        contractTrigger.className = 'contract-trigger';\n        element.__resizeTriggers__.appendChild(expandTrigger);\n        element.__resizeTriggers__.appendChild(contractTrigger);\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n\n        /* Listen for a css animation to detect element display/re-attach */\n        if (animationStartEvent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName === animationName) {\n              resetTriggers(element);\n            }\n          };\n          element.__resizeTriggers__.addEventListener(animationStartEvent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationStartEvent, element.__resizeTriggers__.__animationListener__);\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {\n          // Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}\n\nvar AutoSizer = function (_React$PureComponent) {\n  inherits(AutoSizer, _React$PureComponent);\n\n  function AutoSizer() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = AutoSizer.__proto__ || Object.getPrototypeOf(AutoSizer)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    }, _this._onResize = function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n\n        var _height = _this._parentNode.offsetHeight || 0;\n        var _width = _this._parentNode.offsetWidth || 0;\n\n        var _style = window.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(_style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(_style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(_style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(_style.paddingBottom, 10) || 0;\n\n        var newHeight = _height - paddingTop - paddingBottom;\n        var newWidth = _width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: _height - paddingTop - paddingBottom,\n            width: _width - paddingLeft - paddingRight\n          });\n\n          onResize({ height: _height, width: _width });\n        }\n      }\n    }, _this._setRef = function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(AutoSizer, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n\n        // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n        this._detectElementResize = createDetectElementResize(nonce);\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          className = _props.className,\n          disableHeight = _props.disableHeight,\n          disableWidth = _props.disableWidth,\n          style = _props.style;\n      var _state = this.state,\n          height = _state.height,\n          width = _state.width;\n\n      // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = { overflow: 'visible' };\n      var childParams = {};\n\n      // Avoid rendering children before the initial measurements have been collected.\n      // At best this would just be wasting cycles.\n      var bailoutOnChildren = false;\n\n      if (!disableHeight) {\n        if (height === 0) {\n          bailoutOnChildren = true;\n        }\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        if (width === 0) {\n          bailoutOnChildren = true;\n        }\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n\n      return createElement(\n        'div',\n        {\n          className: className,\n          ref: this._setRef,\n          style: _extends({}, outerStyle, style)\n        },\n        !bailoutOnChildren && children(childParams)\n      );\n    }\n  }]);\n  return AutoSizer;\n}(PureComponent);\n\nAutoSizer.defaultProps = {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n};\n\nexport default AutoSizer;\n","import * as React from \"react\";\n\nexport default function mergeRefs<T = any>(\n  refs: Array<React.MutableRefObject<T> | React.LegacyRef<T>>\n): React.RefCallback<T> {\n  return (value) => {\n    refs.forEach((ref) => {\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref != null) {\n        (ref as React.MutableRefObject<T | null>).current = value;\n      }\n    });\n  };\n}\n","// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport var noop = function noop() {};\nexport var identity = function identity(value) {\n  return value;\n};\nexport var createBasicRecord = function createBasicRecord(pub, parent) {\n  if (parent === void 0) {\n    parent = null;\n  }\n\n  return {\n    child: null,\n    isShown: parent ? parent.public.isOpen && parent.isShown : true,\n    parent: parent,\n    public: pub,\n    sibling: null,\n    visited: false\n  };\n};\nexport var getIdByIndex = function getIdByIndex(index, _ref) {\n  var getRecordData = _ref.getRecordData;\n\n  var _getRecordData = getRecordData(index),\n      id = _getRecordData.data.id;\n\n  return id;\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\n\n/* eslint-disable no-labels,max-depth,complexity */\nimport React, { createRef, PureComponent } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport { noop } from './utils';\n// eslint-disable-next-line @typescript-eslint/naming-convention,@typescript-eslint/prefer-readonly-parameter-types\nexport var Row = function Row(_ref) {\n  var index = _ref.index,\n      _ref$data = _ref.data,\n      Node = _ref$data.component,\n      getRecordData = _ref$data.getRecordData,\n      treeData = _ref$data.treeData,\n      style = _ref.style,\n      isScrolling = _ref.isScrolling;\n  var data = getRecordData(index);\n  return /*#__PURE__*/React.createElement(Node, Object.assign({\n    isScrolling: isScrolling,\n    style: style,\n    treeData: treeData\n  }, data));\n};\n\n// If refresh is required, we will run the TreeWalker. It will completely\n// update all requests and reset every state to default.\nvar generateNewTree = function generateNewTree(_ref2, _ref3, state) {\n  var createRecord = _ref2.createRecord;\n  var buildingTaskTimeout = _ref3.buildingTaskTimeout,\n      placeholder = _ref3.placeholder,\n      _ref3$async = _ref3.async,\n      async = _ref3$async === void 0 ? false : _ref3$async,\n      treeWalker = _ref3.treeWalker;\n  var shouldPreservePreviousState = // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  async && state.records !== undefined;\n  var previousRecords = state.records;\n  var order = [];\n  var records = new Map();\n  var requestIdleCallbackOptions = buildingTaskTimeout ? {\n    timeout: buildingTaskTimeout\n  } : undefined;\n  var meta = new WeakMap();\n  var iter = treeWalker();\n\n  var _iter$next = iter.next(),\n      root = _iter$next.value; // Each record has a link to a parent, the next sibling and the next child.\n  // Having this info, we can perform a depth-first traverse.\n\n\n  var rootRecord = createRecord(root.data, state, undefined, shouldPreservePreviousState ? previousRecords.get(root.data.id) : undefined);\n  records.set(rootRecord.public.data.id, rootRecord);\n  meta.set(rootRecord, root);\n  var currentRecord = rootRecord;\n  var isTraversingRoot = true;\n  var tempRecord = rootRecord;\n  var useIdleCallback = typeof 'requestIdleCallback' !== 'undefined' && placeholder !== undefined && // If placeholder is set to null and this is the first build, idle callback\n  // won't be used. It is necessary for trees with async data which can be\n  // extremely complex but the first build is quite easy. During the following\n  // idle callbacks the old tree will be shown.\n  !(placeholder === null && !state.order);\n  var hasTime = useIdleCallback ? function (deadline) {\n    return deadline.timeRemaining() > 0;\n  } : function () {\n    return true;\n  };\n\n  var task = function task(deadline) {\n    while (currentRecord !== null) {\n      if (!hasTime(deadline)) {\n        requestIdleCallback(task, requestIdleCallbackOptions);\n        return;\n      }\n\n      if (!currentRecord.visited) {\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n        var _iter$next2 = iter.next(meta.get(currentRecord)),\n            child = _iter$next2.value; // When the generator returns the undefined value we consider that all\n        // children are already sent and we need to select the new parent\n        // element to get its children.\n\n\n        if (child === undefined) {\n          if (isTraversingRoot) {\n            isTraversingRoot = false;\n          } else {\n            if (currentRecord.isShown) {\n              order.push(currentRecord.public.data.id);\n            }\n\n            currentRecord.visited = currentRecord.child !== null;\n            currentRecord = currentRecord.child !== null ? currentRecord.child : currentRecord.sibling !== null ? currentRecord.sibling : currentRecord.parent;\n          }\n\n          tempRecord = currentRecord;\n          continue;\n        }\n\n        var childRecord = createRecord(child.data, state, isTraversingRoot ? undefined : currentRecord, shouldPreservePreviousState ? previousRecords.get(child.data.id) : undefined);\n        records.set(childRecord.public.data.id, childRecord);\n        meta.set(childRecord, child);\n\n        if (!isTraversingRoot && tempRecord === currentRecord) {\n          tempRecord.child = childRecord;\n        } else {\n          tempRecord.sibling = childRecord;\n        }\n\n        tempRecord = childRecord;\n      } else {\n        currentRecord.visited = false;\n        currentRecord = currentRecord.sibling !== null ? currentRecord.sibling : currentRecord.parent;\n        tempRecord = currentRecord;\n      }\n    }\n\n    if (useIdleCallback) {\n      state.setState({\n        order: order,\n        records: records,\n        updateRequest: {}\n      });\n    }\n  };\n\n  if (useIdleCallback) {\n    requestIdleCallback(task, requestIdleCallbackOptions);\n  } else {\n    task();\n  } // If we want to preserve the previous state and use the requestIdleCallback,\n  // we need to return the old state.\n\n\n  return placeholder !== undefined && async && state.order ? state : {\n    order: order,\n    records: records\n  };\n};\n\nvar MAX_FUNCTION_ARGUMENTS = 32768;\nvar SPLICE_DEFAULT_ARGUMENTS_NUMBER = 2; // If we need to perform only the update, treeWalker won't be used. Update will\n// work internally, traversing only the subtree of elements that require\n// update through the opennessState option.\n\nvar updateExistingTree = function updateExistingTree(_ref4, _ref5) {\n  var order = _ref4.order,\n      records = _ref4.records;\n  var opennessState = _ref5.opennessState;\n\n  if (typeof opennessState !== 'object') {\n    return null;\n  }\n\n  for (var id in opennessState) {\n    if (!records.has(id)) {\n      continue;\n    }\n\n    var opts = opennessState[id];\n    var ownerRecord = records.get(id); // Here we unify the shape of openness state options\n\n    var _ref6 = typeof opts === 'boolean' ? {\n      open: opts\n    } : opts,\n        open = _ref6.open,\n        _ref6$subtreeCallback = _ref6.subtreeCallback,\n        subtreeCallback = _ref6$subtreeCallback === void 0 ? noop : _ref6$subtreeCallback;\n\n    var update = noop;\n    var apply = noop;\n\n    if (ownerRecord.isShown) {\n      if (open) {\n        (function () {\n          // If received rules require us to open the subtree, we have 2 cases:\n          // 1. The node is not opened yet. In this case we simply have to\n          // calculate and add new ids.\n          // 2. The node is opened already. In this case we have to remove all\n          // existing ids and replace them with new ids.\n          var index = order.indexOf(id); // Here we calculate a count of visible subtree nodes to remove from\n          // `order`. Then we will replace the gap with the updated list of\n          // subtree nodes.\n\n          var recordNextToSubtree = ownerRecord;\n\n          while (recordNextToSubtree !== null) {\n            if (recordNextToSubtree.sibling !== null) {\n              recordNextToSubtree = recordNextToSubtree.sibling;\n              break;\n            }\n\n            recordNextToSubtree = recordNextToSubtree.parent;\n          }\n\n          var countToRemove = recordNextToSubtree === null ? order.length - 1 - index : order.indexOf(recordNextToSubtree.public.data.id) - 1 - index;\n          var orderParts = [[index + 1, countToRemove]]; // Unfortunately, splice cannot work with big arrays. If array exceeds\n          // some length it may fire an exception. The length is specific for\n          // each engine; e.g., MDN says about 65536 for Webkit. So, to avoid this\n          // overflow, I split `order` parts to chunks by 32768 elements in each\n          // one. These chunks will be sent as arguments to the `splice` method.\n          //\n          // To avoid array concatenations which may cause Major GC, I set two\n          // first arguments as `splice`'s `start` and `deleteCount` arguments.\n\n          update = function update(record) {\n            // We have to consider only the newly shown elements that are not in\n            // the order list yet. We should do it AFTER the visibility update\n            // happens because otherwise we won't be able to distinguish if the\n            // element should be included in the order list.\n            // Update record visibility\n            record.isShown = record.parent ? record.parent.public.isOpen && record.parent.isShown : true;\n\n            if (record.isShown) {\n              var currentOrderPart = orderParts[orderParts.length - 1];\n              currentOrderPart.push(record.public.data.id);\n\n              if (currentOrderPart.length === MAX_FUNCTION_ARGUMENTS + SPLICE_DEFAULT_ARGUMENTS_NUMBER) {\n                orderParts.push([index + 1 + MAX_FUNCTION_ARGUMENTS * orderParts.length, 0]);\n              }\n            }\n          };\n\n          apply = function apply() {\n            for (var i = 0; i < orderParts.length; i++) {\n              var _ref7;\n\n              // @ts-expect-error: too generic for TS\n              (_ref7 = order).splice.apply(_ref7, orderParts[i]);\n            }\n          };\n        })();\n      } else if (ownerRecord.public.isOpen) {\n        (function () {\n          // If received rules require us to close the subtree, we have to remove\n          // all subtree ids from the order list.\n          var index = order.indexOf(id);\n          var count = 0;\n\n          update = function update(record) {\n            // We have to consider only currently visible subtree nodes BEFORE\n            // their visibility is updated. Otherwise we will have incorrect\n            // number of items to remove: we cannot remove elements that are not\n            // in the order list.\n            //\n            // If we do it after the visibility update, we will be unable to\n            // understand if the element is still in the order list.\n            if (record.isShown) {\n              count += 1;\n            } // Update record visibility\n\n\n            record.isShown = record.parent ? record.parent.public.isOpen && record.parent.isShown : true;\n          };\n\n          apply = function apply() {\n            // Remove data after element with index\n            order.splice(index + 1, count);\n          };\n        })();\n      }\n    }\n\n    var currentRecord = ownerRecord;\n\n    while (currentRecord !== null) {\n      if (!currentRecord.visited) {\n        currentRecord.public.isOpen = currentRecord === ownerRecord ? open : currentRecord.public.isOpen;\n        subtreeCallback(currentRecord.public, ownerRecord.public);\n\n        if (currentRecord !== ownerRecord) {\n          update(currentRecord);\n        }\n\n        currentRecord.visited = currentRecord.child !== null; // This algorithm is a bit different from the visit algorithm in the\n        // tree generator. We are restricted with the bounds of a subtree and\n        // shouldn't go over it. So we cannot search for the ownerRecord's\n        // parent or sibling because it will lead us out of the subtree.\n\n        currentRecord = // Look for child in any case\n        currentRecord.child !== null ? currentRecord.child : // Stop looking for next element if currentRecord is root.\n        currentRecord === ownerRecord ? null : // Otherwise, look for sibling or parent\n        currentRecord.sibling !== null ? currentRecord.sibling : currentRecord.parent;\n      } else {\n        currentRecord.visited = false;\n        currentRecord = currentRecord === ownerRecord ? null : currentRecord.sibling !== null ? currentRecord.sibling : currentRecord.parent;\n      }\n    }\n\n    apply();\n  }\n\n  return {\n    order: order,\n    records: records,\n    updateRequest: {}\n  };\n};\n\nexport var createTreeComputer = function createTreeComputer(creatorOptions) {\n  return function (props, state, options) {\n    return options.refresh ? generateNewTree(creatorOptions, props, state) : updateExistingTree(state, options);\n  };\n};\n\nvar Tree = /*#__PURE__*/function (_PureComponent) {\n  _inheritsLoose(Tree, _PureComponent);\n\n  Tree.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n    var _props$listRef = props.listRef,\n        listRef = _props$listRef === void 0 ? null : _props$listRef,\n        treeWalker = props.treeWalker;\n    var computeTree = state.computeTree,\n        list = state.list,\n        order = state.order,\n        oldTreeWalker = state.treeWalker;\n    return _extends({\n      attachRefs: mergeRefs([list, listRef])\n    }, treeWalker !== oldTreeWalker || !order ? computeTree(props, state, {\n      refresh: true\n    }) : null, {\n      treeWalker: treeWalker\n    });\n  };\n\n  function Tree(props, context) {\n    var _this;\n\n    _this = _PureComponent.call(this, props, context) || this;\n    _this.getRecordData = _this.getRecordData.bind(_assertThisInitialized(_this));\n    /* eslint-disable react/no-unused-state,@typescript-eslint/consistent-type-assertions */\n\n    _this.state = {\n      list: /*#__PURE__*/createRef(),\n      recomputeTree: _this.recomputeTree.bind(_assertThisInitialized(_this)),\n      setState: _this.setState.bind(_assertThisInitialized(_this))\n    };\n    /* eslint-enable react/no-unused-state,@typescript-eslint/consistent-type-assertions */\n\n    return _this;\n  }\n\n  var _proto = Tree.prototype;\n\n  _proto.getItemData = function getItemData() {\n    var _this$props = this.props,\n        component = _this$props.children,\n        treeData = _this$props.itemData;\n    return {\n      component: component,\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      getRecordData: this.getRecordData,\n      treeData: treeData\n    };\n  };\n\n  _proto.getRecordData = function getRecordData(index) {\n    var _this$state = this.state,\n        order = _this$state.order,\n        records = _this$state.records;\n    return records.get(order[index]).public;\n  };\n\n  _proto.recomputeTree = function recomputeTree(state) {\n    var _this2 = this;\n\n    return new Promise(function (resolve) {\n      _this2.setState(function (prevState) {\n        return prevState.computeTree(_this2.props, prevState, {\n          opennessState: state\n        });\n      }, resolve);\n    });\n  };\n\n  _proto.scrollTo = function scrollTo(scrollOffset) {\n    var _this$state$list$curr;\n\n    // eslint-disable-next-line react/destructuring-assignment\n    (_this$state$list$curr = this.state.list.current) == null ? void 0 : _this$state$list$curr.scrollTo(scrollOffset);\n  };\n\n  _proto.scrollToItem = function scrollToItem(id, align) {\n    var _this$state$list$curr2;\n\n    // eslint-disable-next-line react/destructuring-assignment\n    (_this$state$list$curr2 = this.state.list.current) == null ? void 0 : _this$state$list$curr2.scrollToItem(this.state.order.indexOf(id), align);\n  };\n\n  return Tree;\n}(PureComponent);\n\nTree.defaultProps = {\n  rowComponent: Row\n};\nexport default Tree;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport React from 'react';\nimport { FixedSizeList } from 'react-window';\nimport Tree, { createTreeComputer } from './Tree';\nimport { createBasicRecord, getIdByIndex } from './utils';\nvar computeTree = createTreeComputer({\n  createRecord: function createRecord(data, _ref, parent, previousRecord) {\n    var recomputeTree = _ref.recomputeTree;\n    return createBasicRecord({\n      data: data,\n      isOpen: previousRecord ? previousRecord.public.isOpen : data.isOpenByDefault,\n      setOpen: function setOpen(state) {\n        var _recomputeTree;\n\n        return recomputeTree((_recomputeTree = {}, _recomputeTree[data.id] = state, _recomputeTree));\n      }\n    }, parent);\n  }\n});\nexport var FixedSizeTree = /*#__PURE__*/function (_Tree) {\n  _inheritsLoose(FixedSizeTree, _Tree);\n\n  function FixedSizeTree(props, context) {\n    var _this;\n\n    _this = _Tree.call(this, props, context) || this;\n    _this.state = _extends({}, _this.state, {\n      computeTree: computeTree\n    });\n    return _this;\n  }\n\n  var _proto = FixedSizeTree.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        listRef = _this$props.listRef,\n        placeholder = _this$props.placeholder,\n        treeWalker = _this$props.treeWalker,\n        rowComponent = _this$props.rowComponent,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"listRef\", \"placeholder\", \"treeWalker\", \"rowComponent\"]);\n\n    var _this$state = this.state,\n        attachRefs = _this$state.attachRefs,\n        order = _this$state.order;\n    return placeholder && order.length === 0 ? placeholder : /*#__PURE__*/React.createElement(FixedSizeList, Object.assign({}, rest, {\n      itemCount: order.length,\n      itemData: this.getItemData() // eslint-disable-next-line @typescript-eslint/unbound-method\n      ,\n      itemKey: getIdByIndex // eslint-disable-next-line @typescript-eslint/unbound-method\n      ,\n      ref: attachRefs\n    }), rowComponent);\n  };\n\n  return FixedSizeTree;\n}(Tree);","var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var lastThis;\n    var lastArgs = [];\n    var lastResult;\n    var calledOnce = false;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n            return lastResult;\n        }\n        lastResult = resultFn.apply(this, newArgs);\n        calledOnce = true;\n        lastThis = this;\n        lastArgs = newArgs;\n        return lastResult;\n    }\n    return memoized;\n}\n\nexport default memoizeOne;\n","// @flow\n\n// Animation frame based implementation of setTimeout.\n// Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js\n\nconst hasNativePerformanceNow =\n  typeof performance === 'object' && typeof performance.now === 'function';\n\nconst now = hasNativePerformanceNow\n  ? () => performance.now()\n  : () => Date.now();\n\nexport type TimeoutID = {|\n  id: AnimationFrameID,\n|};\n\nexport function cancelTimeout(timeoutID: TimeoutID) {\n  cancelAnimationFrame(timeoutID.id);\n}\n\nexport function requestTimeout(callback: Function, delay: number): TimeoutID {\n  const start = now();\n\n  function tick() {\n    if (now() - start >= delay) {\n      callback.call(null);\n    } else {\n      timeoutID.id = requestAnimationFrame(tick);\n    }\n  }\n\n  const timeoutID: TimeoutID = {\n    id: requestAnimationFrame(tick),\n  };\n\n  return timeoutID;\n}\n","// @flow\n\nlet size: number = -1;\n\n// This utility copied from \"dom-helpers\" package.\nexport function getScrollbarSize(recalculate?: boolean = false): number {\n  if (size === -1 || recalculate) {\n    const div = document.createElement('div');\n    const style = div.style;\n    style.width = '50px';\n    style.height = '50px';\n    style.overflow = 'scroll';\n\n    ((document.body: any): HTMLBodyElement).appendChild(div);\n\n    size = div.offsetWidth - div.clientWidth;\n\n    ((document.body: any): HTMLBodyElement).removeChild(div);\n  }\n\n  return size;\n}\n\nexport type RTLOffsetType =\n  | 'negative'\n  | 'positive-descending'\n  | 'positive-ascending';\n\nlet cachedRTLResult: RTLOffsetType | null = null;\n\n// TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n// Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\n// Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\n// The safest way to check this is to intentionally set a negative offset,\n// and then verify that the subsequent \"scroll\" event matches the negative offset.\n// If it does not match, then we can assume a non-standard RTL scroll implementation.\nexport function getRTLOffsetType(recalculate?: boolean = false): RTLOffsetType {\n  if (cachedRTLResult === null || recalculate) {\n    const outerDiv = document.createElement('div');\n    const outerStyle = outerDiv.style;\n    outerStyle.width = '50px';\n    outerStyle.height = '50px';\n    outerStyle.overflow = 'scroll';\n    outerStyle.direction = 'rtl';\n\n    const innerDiv = document.createElement('div');\n    const innerStyle = innerDiv.style;\n    innerStyle.width = '100px';\n    innerStyle.height = '100px';\n\n    outerDiv.appendChild(innerDiv);\n\n    ((document.body: any): HTMLBodyElement).appendChild(outerDiv);\n\n    if (outerDiv.scrollLeft > 0) {\n      cachedRTLResult = 'positive-descending';\n    } else {\n      outerDiv.scrollLeft = 1;\n      if (outerDiv.scrollLeft === 0) {\n        cachedRTLResult = 'negative';\n      } else {\n        cachedRTLResult = 'positive-ascending';\n      }\n    }\n\n    ((document.body: any): HTMLBodyElement).removeChild(outerDiv);\n\n    return cachedRTLResult;\n  }\n\n  return cachedRTLResult;\n}\n","// @flow\n\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport { cancelTimeout, requestTimeout } from './timer';\nimport { getScrollbarSize, getRTLOffsetType } from './domHelpers';\n\nimport type { TimeoutID } from './timer';\n\ntype Direction = 'ltr' | 'rtl';\nexport type ScrollToAlign = 'auto' | 'smart' | 'center' | 'start' | 'end';\n\ntype itemSize = number | ((index: number) => number);\n\ntype RenderComponentProps<T> = {|\n  columnIndex: number,\n  data: T,\n  isScrolling?: boolean,\n  rowIndex: number,\n  style: Object,\n|};\nexport type RenderComponent<T> = React$ComponentType<\n  $Shape<RenderComponentProps<T>>\n>;\n\ntype ScrollDirection = 'forward' | 'backward';\n\ntype OnItemsRenderedCallback = ({\n  overscanColumnStartIndex: number,\n  overscanColumnStopIndex: number,\n  overscanRowStartIndex: number,\n  overscanRowStopIndex: number,\n  visibleColumnStartIndex: number,\n  visibleColumnStopIndex: number,\n  visibleRowStartIndex: number,\n  visibleRowStopIndex: number,\n}) => void;\ntype OnScrollCallback = ({\n  horizontalScrollDirection: ScrollDirection,\n  scrollLeft: number,\n  scrollTop: number,\n  scrollUpdateWasRequested: boolean,\n  verticalScrollDirection: ScrollDirection,\n}) => void;\n\ntype ScrollEvent = SyntheticEvent<HTMLDivElement>;\ntype ItemStyleCache = { [key: string]: Object };\n\ntype OuterProps = {|\n  children: React$Node,\n  className: string | void,\n  onScroll: ScrollEvent => void,\n  style: {\n    [string]: mixed,\n  },\n|};\n\ntype InnerProps = {|\n  children: React$Node,\n  style: {\n    [string]: mixed,\n  },\n|};\n\nexport type Props<T> = {|\n  children: RenderComponent<T>,\n  className?: string,\n  columnCount: number,\n  columnWidth: itemSize,\n  direction: Direction,\n  height: number,\n  initialScrollLeft?: number,\n  initialScrollTop?: number,\n  innerRef?: any,\n  innerElementType?: string | React$AbstractComponent<InnerProps, any>,\n  innerTagName?: string, // deprecated\n  itemData: T,\n  itemKey?: (params: {|\n    columnIndex: number,\n    data: T,\n    rowIndex: number,\n  |}) => any,\n  onItemsRendered?: OnItemsRenderedCallback,\n  onScroll?: OnScrollCallback,\n  outerRef?: any,\n  outerElementType?: string | React$AbstractComponent<OuterProps, any>,\n  outerTagName?: string, // deprecated\n  overscanColumnCount?: number,\n  overscanColumnsCount?: number, // deprecated\n  overscanCount?: number, // deprecated\n  overscanRowCount?: number,\n  overscanRowsCount?: number, // deprecated\n  rowCount: number,\n  rowHeight: itemSize,\n  style?: Object,\n  useIsScrolling: boolean,\n  width: number,\n|};\n\ntype State = {|\n  instance: any,\n  isScrolling: boolean,\n  horizontalScrollDirection: ScrollDirection,\n  scrollLeft: number,\n  scrollTop: number,\n  scrollUpdateWasRequested: boolean,\n  verticalScrollDirection: ScrollDirection,\n|};\n\ntype getItemOffset = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype getItemSize = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype getEstimatedTotalSize = (props: Props<any>, instanceProps: any) => number;\ntype GetOffsetForItemAndAlignment = (\n  props: Props<any>,\n  index: number,\n  align: ScrollToAlign,\n  scrollOffset: number,\n  instanceProps: any,\n  scrollbarSize: number\n) => number;\ntype GetStartIndexForOffset = (\n  props: Props<any>,\n  offset: number,\n  instanceProps: any\n) => number;\ntype GetStopIndexForStartIndex = (\n  props: Props<any>,\n  startIndex: number,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype InitInstanceProps = (props: Props<any>, instance: any) => any;\ntype ValidateProps = (props: Props<any>) => void;\n\nconst IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nconst defaultItemKey = ({ columnIndex, data, rowIndex }) =>\n  `${rowIndex}:${columnIndex}`;\n\n// In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\nlet devWarningsOverscanCount = null;\nlet devWarningsOverscanRowsColumnsCount = null;\nlet devWarningsTagName = null;\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsOverscanCount = new WeakSet();\n    devWarningsOverscanRowsColumnsCount = new WeakSet();\n    devWarningsTagName = new WeakSet();\n  }\n}\n\nexport default function createGridComponent({\n  getColumnOffset,\n  getColumnStartIndexForOffset,\n  getColumnStopIndexForStartIndex,\n  getColumnWidth,\n  getEstimatedTotalHeight,\n  getEstimatedTotalWidth,\n  getOffsetForColumnAndAlignment,\n  getOffsetForRowAndAlignment,\n  getRowHeight,\n  getRowOffset,\n  getRowStartIndexForOffset,\n  getRowStopIndexForStartIndex,\n  initInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange,\n  validateProps,\n}: {|\n  getColumnOffset: getItemOffset,\n  getColumnStartIndexForOffset: GetStartIndexForOffset,\n  getColumnStopIndexForStartIndex: GetStopIndexForStartIndex,\n  getColumnWidth: getItemSize,\n  getEstimatedTotalHeight: getEstimatedTotalSize,\n  getEstimatedTotalWidth: getEstimatedTotalSize,\n  getOffsetForColumnAndAlignment: GetOffsetForItemAndAlignment,\n  getOffsetForRowAndAlignment: GetOffsetForItemAndAlignment,\n  getRowOffset: getItemOffset,\n  getRowHeight: getItemSize,\n  getRowStartIndexForOffset: GetStartIndexForOffset,\n  getRowStopIndexForStartIndex: GetStopIndexForStartIndex,\n  initInstanceProps: InitInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange: boolean,\n  validateProps: ValidateProps,\n|}) {\n  return class Grid<T> extends PureComponent<Props<T>, State> {\n    _instanceProps: any = initInstanceProps(this.props, this);\n    _resetIsScrollingTimeoutId: TimeoutID | null = null;\n    _outerRef: ?HTMLDivElement;\n\n    static defaultProps = {\n      direction: 'ltr',\n      itemData: undefined,\n      useIsScrolling: false,\n    };\n\n    state: State = {\n      instance: this,\n      isScrolling: false,\n      horizontalScrollDirection: 'forward',\n      scrollLeft:\n        typeof this.props.initialScrollLeft === 'number'\n          ? this.props.initialScrollLeft\n          : 0,\n      scrollTop:\n        typeof this.props.initialScrollTop === 'number'\n          ? this.props.initialScrollTop\n          : 0,\n      scrollUpdateWasRequested: false,\n      verticalScrollDirection: 'forward',\n    };\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props: Props<T>) {\n      super(props);\n    }\n\n    static getDerivedStateFromProps(\n      nextProps: Props<T>,\n      prevState: State\n    ): $Shape<State> | null {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    }\n\n    scrollTo({\n      scrollLeft,\n      scrollTop,\n    }: {\n      scrollLeft: number,\n      scrollTop: number,\n    }): void {\n      if (scrollLeft !== undefined) {\n        scrollLeft = Math.max(0, scrollLeft);\n      }\n      if (scrollTop !== undefined) {\n        scrollTop = Math.max(0, scrollTop);\n      }\n\n      this.setState(prevState => {\n        if (scrollLeft === undefined) {\n          scrollLeft = prevState.scrollLeft;\n        }\n        if (scrollTop === undefined) {\n          scrollTop = prevState.scrollTop;\n        }\n\n        if (\n          prevState.scrollLeft === scrollLeft &&\n          prevState.scrollTop === scrollTop\n        ) {\n          return null;\n        }\n\n        return {\n          horizontalScrollDirection:\n            prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          scrollUpdateWasRequested: true,\n          verticalScrollDirection:\n            prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n        };\n      }, this._resetIsScrollingDebounced);\n    }\n\n    scrollToItem({\n      align = 'auto',\n      columnIndex,\n      rowIndex,\n    }: {\n      align: ScrollToAlign,\n      columnIndex?: number,\n      rowIndex?: number,\n    }): void {\n      const { columnCount, height, rowCount, width } = this.props;\n      const { scrollLeft, scrollTop } = this.state;\n      const scrollbarSize = getScrollbarSize();\n\n      if (columnIndex !== undefined) {\n        columnIndex = Math.max(0, Math.min(columnIndex, columnCount - 1));\n      }\n      if (rowIndex !== undefined) {\n        rowIndex = Math.max(0, Math.min(rowIndex, rowCount - 1));\n      }\n\n      const estimatedTotalHeight = getEstimatedTotalHeight(\n        this.props,\n        this._instanceProps\n      );\n      const estimatedTotalWidth = getEstimatedTotalWidth(\n        this.props,\n        this._instanceProps\n      );\n\n      // The scrollbar size should be considered when scrolling an item into view,\n      // to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n      const horizontalScrollbarSize =\n        estimatedTotalWidth > width ? scrollbarSize : 0;\n      const verticalScrollbarSize =\n        estimatedTotalHeight > height ? scrollbarSize : 0;\n\n      this.scrollTo({\n        scrollLeft:\n          columnIndex !== undefined\n            ? getOffsetForColumnAndAlignment(\n                this.props,\n                columnIndex,\n                align,\n                scrollLeft,\n                this._instanceProps,\n                verticalScrollbarSize\n              )\n            : scrollLeft,\n        scrollTop:\n          rowIndex !== undefined\n            ? getOffsetForRowAndAlignment(\n                this.props,\n                rowIndex,\n                align,\n                scrollTop,\n                this._instanceProps,\n                horizontalScrollbarSize\n              )\n            : scrollTop,\n      });\n    }\n\n    componentDidMount() {\n      const { initialScrollLeft, initialScrollTop } = this.props;\n\n      if (this._outerRef != null) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        if (typeof initialScrollLeft === 'number') {\n          outerRef.scrollLeft = initialScrollLeft;\n        }\n        if (typeof initialScrollTop === 'number') {\n          outerRef.scrollTop = initialScrollTop;\n        }\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentDidUpdate() {\n      const { direction } = this.props;\n      const { scrollLeft, scrollTop, scrollUpdateWasRequested } = this.state;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // So we need to determine which browser behavior we're dealing with, and mimic it.\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        if (direction === 'rtl') {\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              outerRef.scrollLeft = -scrollLeft;\n              break;\n            case 'positive-ascending':\n              outerRef.scrollLeft = scrollLeft;\n              break;\n            default:\n              const { clientWidth, scrollWidth } = outerRef;\n              outerRef.scrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        } else {\n          outerRef.scrollLeft = Math.max(0, scrollLeft);\n        }\n\n        outerRef.scrollTop = Math.max(0, scrollTop);\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    }\n\n    render() {\n      const {\n        children,\n        className,\n        columnCount,\n        direction,\n        height,\n        innerRef,\n        innerElementType,\n        innerTagName,\n        itemData,\n        itemKey = defaultItemKey,\n        outerElementType,\n        outerTagName,\n        rowCount,\n        style,\n        useIsScrolling,\n        width,\n      } = this.props;\n      const { isScrolling } = this.state;\n\n      const [\n        columnStartIndex,\n        columnStopIndex,\n      ] = this._getHorizontalRangeToRender();\n      const [rowStartIndex, rowStopIndex] = this._getVerticalRangeToRender();\n\n      const items = [];\n      if (columnCount > 0 && rowCount) {\n        for (\n          let rowIndex = rowStartIndex;\n          rowIndex <= rowStopIndex;\n          rowIndex++\n        ) {\n          for (\n            let columnIndex = columnStartIndex;\n            columnIndex <= columnStopIndex;\n            columnIndex++\n          ) {\n            items.push(\n              createElement(children, {\n                columnIndex,\n                data: itemData,\n                isScrolling: useIsScrolling ? isScrolling : undefined,\n                key: itemKey({ columnIndex, data: itemData, rowIndex }),\n                rowIndex,\n                style: this._getItemStyle(rowIndex, columnIndex),\n              })\n            );\n          }\n        }\n      }\n\n      // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n      const estimatedTotalHeight = getEstimatedTotalHeight(\n        this.props,\n        this._instanceProps\n      );\n      const estimatedTotalWidth = getEstimatedTotalWidth(\n        this.props,\n        this._instanceProps\n      );\n\n      return createElement(\n        outerElementType || outerTagName || 'div',\n        {\n          className,\n          onScroll: this._onScroll,\n          ref: this._outerRefSetter,\n          style: {\n            position: 'relative',\n            height,\n            width,\n            overflow: 'auto',\n            WebkitOverflowScrolling: 'touch',\n            willChange: 'transform',\n            direction,\n            ...style,\n          },\n        },\n        createElement(innerElementType || innerTagName || 'div', {\n          children: items,\n          ref: innerRef,\n          style: {\n            height: estimatedTotalHeight,\n            pointerEvents: isScrolling ? 'none' : undefined,\n            width: estimatedTotalWidth,\n          },\n        })\n      );\n    }\n\n    _callOnItemsRendered: (\n      overscanColumnStartIndex: number,\n      overscanColumnStopIndex: number,\n      overscanRowStartIndex: number,\n      overscanRowStopIndex: number,\n      visibleColumnStartIndex: number,\n      visibleColumnStopIndex: number,\n      visibleRowStartIndex: number,\n      visibleRowStopIndex: number\n    ) => void;\n    _callOnItemsRendered = memoizeOne(\n      (\n        overscanColumnStartIndex: number,\n        overscanColumnStopIndex: number,\n        overscanRowStartIndex: number,\n        overscanRowStopIndex: number,\n        visibleColumnStartIndex: number,\n        visibleColumnStopIndex: number,\n        visibleRowStartIndex: number,\n        visibleRowStopIndex: number\n      ) =>\n        ((this.props.onItemsRendered: any): OnItemsRenderedCallback)({\n          overscanColumnStartIndex,\n          overscanColumnStopIndex,\n          overscanRowStartIndex,\n          overscanRowStopIndex,\n          visibleColumnStartIndex,\n          visibleColumnStopIndex,\n          visibleRowStartIndex,\n          visibleRowStopIndex,\n        })\n    );\n\n    _callOnScroll: (\n      scrollLeft: number,\n      scrollTop: number,\n      horizontalScrollDirection: ScrollDirection,\n      verticalScrollDirection: ScrollDirection,\n      scrollUpdateWasRequested: boolean\n    ) => void;\n    _callOnScroll = memoizeOne(\n      (\n        scrollLeft: number,\n        scrollTop: number,\n        horizontalScrollDirection: ScrollDirection,\n        verticalScrollDirection: ScrollDirection,\n        scrollUpdateWasRequested: boolean\n      ) =>\n        ((this.props.onScroll: any): OnScrollCallback)({\n          horizontalScrollDirection,\n          scrollLeft,\n          scrollTop,\n          verticalScrollDirection,\n          scrollUpdateWasRequested,\n        })\n    );\n\n    _callPropsCallbacks() {\n      const { columnCount, onItemsRendered, onScroll, rowCount } = this.props;\n\n      if (typeof onItemsRendered === 'function') {\n        if (columnCount > 0 && rowCount > 0) {\n          const [\n            overscanColumnStartIndex,\n            overscanColumnStopIndex,\n            visibleColumnStartIndex,\n            visibleColumnStopIndex,\n          ] = this._getHorizontalRangeToRender();\n          const [\n            overscanRowStartIndex,\n            overscanRowStopIndex,\n            visibleRowStartIndex,\n            visibleRowStopIndex,\n          ] = this._getVerticalRangeToRender();\n          this._callOnItemsRendered(\n            overscanColumnStartIndex,\n            overscanColumnStopIndex,\n            overscanRowStartIndex,\n            overscanRowStopIndex,\n            visibleColumnStartIndex,\n            visibleColumnStopIndex,\n            visibleRowStartIndex,\n            visibleRowStopIndex\n          );\n        }\n      }\n\n      if (typeof onScroll === 'function') {\n        const {\n          horizontalScrollDirection,\n          scrollLeft,\n          scrollTop,\n          scrollUpdateWasRequested,\n          verticalScrollDirection,\n        } = this.state;\n        this._callOnScroll(\n          scrollLeft,\n          scrollTop,\n          horizontalScrollDirection,\n          verticalScrollDirection,\n          scrollUpdateWasRequested\n        );\n      }\n    }\n\n    // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    _getItemStyle: (rowIndex: number, columnIndex: number) => Object;\n    _getItemStyle = (rowIndex: number, columnIndex: number): Object => {\n      const { columnWidth, direction, rowHeight } = this.props;\n\n      const itemStyleCache = this._getItemStyleCache(\n        shouldResetStyleCacheOnItemSizeChange && columnWidth,\n        shouldResetStyleCacheOnItemSizeChange && direction,\n        shouldResetStyleCacheOnItemSizeChange && rowHeight\n      );\n\n      const key = `${rowIndex}:${columnIndex}`;\n\n      let style;\n      if (itemStyleCache.hasOwnProperty(key)) {\n        style = itemStyleCache[key];\n      } else {\n        const offset = getColumnOffset(\n          this.props,\n          columnIndex,\n          this._instanceProps\n        );\n        const isRtl = direction === 'rtl';\n        itemStyleCache[key] = style = {\n          position: 'absolute',\n          left: isRtl ? undefined : offset,\n          right: isRtl ? offset : undefined,\n          top: getRowOffset(this.props, rowIndex, this._instanceProps),\n          height: getRowHeight(this.props, rowIndex, this._instanceProps),\n          width: getColumnWidth(this.props, columnIndex, this._instanceProps),\n        };\n      }\n\n      return style;\n    };\n\n    _getItemStyleCache: (_: any, __: any, ___: any) => ItemStyleCache;\n    _getItemStyleCache = memoizeOne((_: any, __: any, ___: any) => ({}));\n\n    _getHorizontalRangeToRender(): [number, number, number, number] {\n      const {\n        columnCount,\n        overscanColumnCount,\n        overscanColumnsCount,\n        overscanCount,\n        rowCount,\n      } = this.props;\n      const { horizontalScrollDirection, isScrolling, scrollLeft } = this.state;\n\n      const overscanCountResolved: number =\n        overscanColumnCount || overscanColumnsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getColumnStartIndexForOffset(\n        this.props,\n        scrollLeft,\n        this._instanceProps\n      );\n      const stopIndex = getColumnStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollLeft,\n        this._instanceProps\n      );\n\n      // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n      const overscanBackward =\n        !isScrolling || horizontalScrollDirection === 'backward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n      const overscanForward =\n        !isScrolling || horizontalScrollDirection === 'forward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(columnCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _getVerticalRangeToRender(): [number, number, number, number] {\n      const {\n        columnCount,\n        overscanCount,\n        overscanRowCount,\n        overscanRowsCount,\n        rowCount,\n      } = this.props;\n      const { isScrolling, verticalScrollDirection, scrollTop } = this.state;\n\n      const overscanCountResolved: number =\n        overscanRowCount || overscanRowsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getRowStartIndexForOffset(\n        this.props,\n        scrollTop,\n        this._instanceProps\n      );\n      const stopIndex = getRowStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollTop,\n        this._instanceProps\n      );\n\n      // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n      const overscanBackward =\n        !isScrolling || verticalScrollDirection === 'backward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n      const overscanForward =\n        !isScrolling || verticalScrollDirection === 'forward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(rowCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _onScroll = (event: ScrollEvent): void => {\n      const {\n        clientHeight,\n        clientWidth,\n        scrollLeft,\n        scrollTop,\n        scrollHeight,\n        scrollWidth,\n      } = event.currentTarget;\n      this.setState(prevState => {\n        if (\n          prevState.scrollLeft === scrollLeft &&\n          prevState.scrollTop === scrollTop\n        ) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        const { direction } = this.props;\n\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n        // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n        let calculatedScrollLeft = scrollLeft;\n        if (direction === 'rtl') {\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              calculatedScrollLeft = -scrollLeft;\n              break;\n            case 'positive-descending':\n              calculatedScrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        }\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        calculatedScrollLeft = Math.max(\n          0,\n          Math.min(calculatedScrollLeft, scrollWidth - clientWidth)\n        );\n        const calculatedScrollTop = Math.max(\n          0,\n          Math.min(scrollTop, scrollHeight - clientHeight)\n        );\n\n        return {\n          isScrolling: true,\n          horizontalScrollDirection:\n            prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: calculatedScrollTop,\n          verticalScrollDirection:\n            prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _outerRefSetter = (ref: any): void => {\n      const { outerRef } = this.props;\n\n      this._outerRef = ((ref: any): HTMLDivElement);\n\n      if (typeof outerRef === 'function') {\n        outerRef(ref);\n      } else if (\n        outerRef != null &&\n        typeof outerRef === 'object' &&\n        outerRef.hasOwnProperty('current')\n      ) {\n        outerRef.current = ref;\n      }\n    };\n\n    _resetIsScrollingDebounced = () => {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n\n      this._resetIsScrollingTimeoutId = requestTimeout(\n        this._resetIsScrolling,\n        IS_SCROLLING_DEBOUNCE_INTERVAL\n      );\n    };\n\n    _resetIsScrolling = () => {\n      this._resetIsScrollingTimeoutId = null;\n\n      this.setState({ isScrolling: false }, () => {\n        // Clear style cache after state update has been committed.\n        // This way we don't break pure sCU for items that don't use isScrolling param.\n        this._getItemStyleCache(-1);\n      });\n    };\n  };\n}\n\nconst validateSharedProps = (\n  {\n    children,\n    direction,\n    height,\n    innerTagName,\n    outerTagName,\n    overscanColumnsCount,\n    overscanCount,\n    overscanRowsCount,\n    width,\n  }: Props<any>,\n  { instance }: State\n): void => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof overscanCount === 'number') {\n      if (devWarningsOverscanCount && !devWarningsOverscanCount.has(instance)) {\n        devWarningsOverscanCount.add(instance);\n        console.warn(\n          'The overscanCount prop has been deprecated. ' +\n            'Please use the overscanColumnCount and overscanRowCount props instead.'\n        );\n      }\n    }\n\n    if (\n      typeof overscanColumnsCount === 'number' ||\n      typeof overscanRowsCount === 'number'\n    ) {\n      if (\n        devWarningsOverscanRowsColumnsCount &&\n        !devWarningsOverscanRowsColumnsCount.has(instance)\n      ) {\n        devWarningsOverscanRowsColumnsCount.add(instance);\n        console.warn(\n          'The overscanColumnsCount and overscanRowsCount props have been deprecated. ' +\n            'Please use the overscanColumnCount and overscanRowCount props instead.'\n        );\n      }\n    }\n\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn(\n          'The innerTagName and outerTagName props have been deprecated. ' +\n            'Please use the innerElementType and outerElementType props instead.'\n        );\n      }\n    }\n\n    if (children == null) {\n      throw Error(\n        'An invalid \"children\" prop has been specified. ' +\n          'Value should be a React component. ' +\n          `\"${children === null ? 'null' : typeof children}\" was specified.`\n      );\n    }\n\n    switch (direction) {\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"direction\" prop has been specified. ' +\n            'Value should be either \"ltr\" or \"rtl\". ' +\n            `\"${direction}\" was specified.`\n        );\n    }\n\n    if (typeof width !== 'number') {\n      throw Error(\n        'An invalid \"width\" prop has been specified. ' +\n          'Grids must specify a number for width. ' +\n          `\"${width === null ? 'null' : typeof width}\" was specified.`\n      );\n    }\n\n    if (typeof height !== 'number') {\n      throw Error(\n        'An invalid \"height\" prop has been specified. ' +\n          'Grids must specify a number for height. ' +\n          `\"${height === null ? 'null' : typeof height}\" was specified.`\n      );\n    }\n  }\n};\n","// @flow\n\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport { cancelTimeout, requestTimeout } from './timer';\nimport { getScrollbarSize, getRTLOffsetType } from './domHelpers';\n\nimport type { TimeoutID } from './timer';\n\nexport type ScrollToAlign = 'auto' | 'smart' | 'center' | 'start' | 'end';\n\ntype itemSize = number | ((index: number) => number);\n// TODO Deprecate directions \"horizontal\" and \"vertical\"\ntype Direction = 'ltr' | 'rtl' | 'horizontal' | 'vertical';\ntype Layout = 'horizontal' | 'vertical';\n\ntype RenderComponentProps<T> = {|\n  data: T,\n  index: number,\n  isScrolling?: boolean,\n  style: Object,\n|};\ntype RenderComponent<T> = React$ComponentType<$Shape<RenderComponentProps<T>>>;\n\ntype ScrollDirection = 'forward' | 'backward';\n\ntype onItemsRenderedCallback = ({\n  overscanStartIndex: number,\n  overscanStopIndex: number,\n  visibleStartIndex: number,\n  visibleStopIndex: number,\n}) => void;\ntype onScrollCallback = ({\n  scrollDirection: ScrollDirection,\n  scrollOffset: number,\n  scrollUpdateWasRequested: boolean,\n}) => void;\n\ntype ScrollEvent = SyntheticEvent<HTMLDivElement>;\ntype ItemStyleCache = { [index: number]: Object };\n\ntype OuterProps = {|\n  children: React$Node,\n  className: string | void,\n  onScroll: ScrollEvent => void,\n  style: {\n    [string]: mixed,\n  },\n|};\n\ntype InnerProps = {|\n  children: React$Node,\n  style: {\n    [string]: mixed,\n  },\n|};\n\nexport type Props<T> = {|\n  children: RenderComponent<T>,\n  className?: string,\n  direction: Direction,\n  height: number | string,\n  initialScrollOffset?: number,\n  innerRef?: any,\n  innerElementType?: string | React$AbstractComponent<InnerProps, any>,\n  innerTagName?: string, // deprecated\n  itemCount: number,\n  itemData: T,\n  itemKey?: (index: number, data: T) => any,\n  itemSize: itemSize,\n  layout: Layout,\n  onItemsRendered?: onItemsRenderedCallback,\n  onScroll?: onScrollCallback,\n  outerRef?: any,\n  outerElementType?: string | React$AbstractComponent<OuterProps, any>,\n  outerTagName?: string, // deprecated\n  overscanCount: number,\n  style?: Object,\n  useIsScrolling: boolean,\n  width: number | string,\n|};\n\ntype State = {|\n  instance: any,\n  isScrolling: boolean,\n  scrollDirection: ScrollDirection,\n  scrollOffset: number,\n  scrollUpdateWasRequested: boolean,\n|};\n\ntype GetItemOffset = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype GetItemSize = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype GetEstimatedTotalSize = (props: Props<any>, instanceProps: any) => number;\ntype GetOffsetForIndexAndAlignment = (\n  props: Props<any>,\n  index: number,\n  align: ScrollToAlign,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype GetStartIndexForOffset = (\n  props: Props<any>,\n  offset: number,\n  instanceProps: any\n) => number;\ntype GetStopIndexForStartIndex = (\n  props: Props<any>,\n  startIndex: number,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype InitInstanceProps = (props: Props<any>, instance: any) => any;\ntype ValidateProps = (props: Props<any>) => void;\n\nconst IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nconst defaultItemKey = (index: number, data: any) => index;\n\n// In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\nlet devWarningsDirection = null;\nlet devWarningsTagName = null;\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsDirection = new WeakSet();\n    devWarningsTagName = new WeakSet();\n  }\n}\n\nexport default function createListComponent({\n  getItemOffset,\n  getEstimatedTotalSize,\n  getItemSize,\n  getOffsetForIndexAndAlignment,\n  getStartIndexForOffset,\n  getStopIndexForStartIndex,\n  initInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange,\n  validateProps,\n}: {|\n  getItemOffset: GetItemOffset,\n  getEstimatedTotalSize: GetEstimatedTotalSize,\n  getItemSize: GetItemSize,\n  getOffsetForIndexAndAlignment: GetOffsetForIndexAndAlignment,\n  getStartIndexForOffset: GetStartIndexForOffset,\n  getStopIndexForStartIndex: GetStopIndexForStartIndex,\n  initInstanceProps: InitInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange: boolean,\n  validateProps: ValidateProps,\n|}) {\n  return class List<T> extends PureComponent<Props<T>, State> {\n    _instanceProps: any = initInstanceProps(this.props, this);\n    _outerRef: ?HTMLDivElement;\n    _resetIsScrollingTimeoutId: TimeoutID | null = null;\n\n    static defaultProps = {\n      direction: 'ltr',\n      itemData: undefined,\n      layout: 'vertical',\n      overscanCount: 2,\n      useIsScrolling: false,\n    };\n\n    state: State = {\n      instance: this,\n      isScrolling: false,\n      scrollDirection: 'forward',\n      scrollOffset:\n        typeof this.props.initialScrollOffset === 'number'\n          ? this.props.initialScrollOffset\n          : 0,\n      scrollUpdateWasRequested: false,\n    };\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props: Props<T>) {\n      super(props);\n    }\n\n    static getDerivedStateFromProps(\n      nextProps: Props<T>,\n      prevState: State\n    ): $Shape<State> | null {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    }\n\n    scrollTo(scrollOffset: number): void {\n      scrollOffset = Math.max(0, scrollOffset);\n\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollOffset) {\n          return null;\n        }\n        return {\n          scrollDirection:\n            prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: true,\n        };\n      }, this._resetIsScrollingDebounced);\n    }\n\n    scrollToItem(index: number, align: ScrollToAlign = 'auto'): void {\n      const { itemCount, layout } = this.props;\n      const { scrollOffset } = this.state;\n\n      index = Math.max(0, Math.min(index, itemCount - 1));\n\n      // The scrollbar size should be considered when scrolling an item into view, to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n      // This is an edge case for lists; normally they only scroll in the dominant direction.\n      let scrollbarSize = 0;\n      if (this._outerRef) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        if (layout === 'vertical') {\n          scrollbarSize =\n            outerRef.scrollWidth > outerRef.clientWidth\n              ? getScrollbarSize()\n              : 0;\n        } else {\n          scrollbarSize =\n            outerRef.scrollHeight > outerRef.clientHeight\n              ? getScrollbarSize()\n              : 0;\n        }\n      }\n\n      this.scrollTo(\n        getOffsetForIndexAndAlignment(\n          this.props,\n          index,\n          align,\n          scrollOffset,\n          this._instanceProps,\n          scrollbarSize\n        )\n      );\n    }\n\n    componentDidMount() {\n      const { direction, initialScrollOffset, layout } = this.props;\n\n      if (typeof initialScrollOffset === 'number' && this._outerRef != null) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        // TODO Deprecate direction \"horizontal\"\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          outerRef.scrollLeft = initialScrollOffset;\n        } else {\n          outerRef.scrollTop = initialScrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentDidUpdate() {\n      const { direction, layout } = this.props;\n      const { scrollOffset, scrollUpdateWasRequested } = this.state;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n\n        // TODO Deprecate direction \"horizontal\"\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // So we need to determine which browser behavior we're dealing with, and mimic it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                outerRef.scrollLeft = -scrollOffset;\n                break;\n              case 'positive-ascending':\n                outerRef.scrollLeft = scrollOffset;\n                break;\n              default:\n                const { clientWidth, scrollWidth } = outerRef;\n                outerRef.scrollLeft = scrollWidth - clientWidth - scrollOffset;\n                break;\n            }\n          } else {\n            outerRef.scrollLeft = scrollOffset;\n          }\n        } else {\n          outerRef.scrollTop = scrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    }\n\n    render() {\n      const {\n        children,\n        className,\n        direction,\n        height,\n        innerRef,\n        innerElementType,\n        innerTagName,\n        itemCount,\n        itemData,\n        itemKey = defaultItemKey,\n        layout,\n        outerElementType,\n        outerTagName,\n        style,\n        useIsScrolling,\n        width,\n      } = this.props;\n      const { isScrolling } = this.state;\n\n      // TODO Deprecate direction \"horizontal\"\n      const isHorizontal =\n        direction === 'horizontal' || layout === 'horizontal';\n\n      const onScroll = isHorizontal\n        ? this._onScrollHorizontal\n        : this._onScrollVertical;\n\n      const [startIndex, stopIndex] = this._getRangeToRender();\n\n      const items = [];\n      if (itemCount > 0) {\n        for (let index = startIndex; index <= stopIndex; index++) {\n          items.push(\n            createElement(children, {\n              data: itemData,\n              key: itemKey(index, itemData),\n              index,\n              isScrolling: useIsScrolling ? isScrolling : undefined,\n              style: this._getItemStyle(index),\n            })\n          );\n        }\n      }\n\n      // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n      const estimatedTotalSize = getEstimatedTotalSize(\n        this.props,\n        this._instanceProps\n      );\n\n      return createElement(\n        outerElementType || outerTagName || 'div',\n        {\n          className,\n          onScroll,\n          ref: this._outerRefSetter,\n          style: {\n            position: 'relative',\n            height,\n            width,\n            overflow: 'auto',\n            WebkitOverflowScrolling: 'touch',\n            willChange: 'transform',\n            direction,\n            ...style,\n          },\n        },\n        createElement(innerElementType || innerTagName || 'div', {\n          children: items,\n          ref: innerRef,\n          style: {\n            height: isHorizontal ? '100%' : estimatedTotalSize,\n            pointerEvents: isScrolling ? 'none' : undefined,\n            width: isHorizontal ? estimatedTotalSize : '100%',\n          },\n        })\n      );\n    }\n\n    _callOnItemsRendered: (\n      overscanStartIndex: number,\n      overscanStopIndex: number,\n      visibleStartIndex: number,\n      visibleStopIndex: number\n    ) => void;\n    _callOnItemsRendered = memoizeOne(\n      (\n        overscanStartIndex: number,\n        overscanStopIndex: number,\n        visibleStartIndex: number,\n        visibleStopIndex: number\n      ) =>\n        ((this.props.onItemsRendered: any): onItemsRenderedCallback)({\n          overscanStartIndex,\n          overscanStopIndex,\n          visibleStartIndex,\n          visibleStopIndex,\n        })\n    );\n\n    _callOnScroll: (\n      scrollDirection: ScrollDirection,\n      scrollOffset: number,\n      scrollUpdateWasRequested: boolean\n    ) => void;\n    _callOnScroll = memoizeOne(\n      (\n        scrollDirection: ScrollDirection,\n        scrollOffset: number,\n        scrollUpdateWasRequested: boolean\n      ) =>\n        ((this.props.onScroll: any): onScrollCallback)({\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested,\n        })\n    );\n\n    _callPropsCallbacks() {\n      if (typeof this.props.onItemsRendered === 'function') {\n        const { itemCount } = this.props;\n        if (itemCount > 0) {\n          const [\n            overscanStartIndex,\n            overscanStopIndex,\n            visibleStartIndex,\n            visibleStopIndex,\n          ] = this._getRangeToRender();\n          this._callOnItemsRendered(\n            overscanStartIndex,\n            overscanStopIndex,\n            visibleStartIndex,\n            visibleStopIndex\n          );\n        }\n      }\n\n      if (typeof this.props.onScroll === 'function') {\n        const {\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested,\n        } = this.state;\n        this._callOnScroll(\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested\n        );\n      }\n    }\n\n    // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    _getItemStyle: (index: number) => Object;\n    _getItemStyle = (index: number): Object => {\n      const { direction, itemSize, layout } = this.props;\n\n      const itemStyleCache = this._getItemStyleCache(\n        shouldResetStyleCacheOnItemSizeChange && itemSize,\n        shouldResetStyleCacheOnItemSizeChange && layout,\n        shouldResetStyleCacheOnItemSizeChange && direction\n      );\n\n      let style;\n      if (itemStyleCache.hasOwnProperty(index)) {\n        style = itemStyleCache[index];\n      } else {\n        const offset = getItemOffset(this.props, index, this._instanceProps);\n        const size = getItemSize(this.props, index, this._instanceProps);\n\n        // TODO Deprecate direction \"horizontal\"\n        const isHorizontal =\n          direction === 'horizontal' || layout === 'horizontal';\n\n        const isRtl = direction === 'rtl';\n        const offsetHorizontal = isHorizontal ? offset : 0;\n        itemStyleCache[index] = style = {\n          position: 'absolute',\n          left: isRtl ? undefined : offsetHorizontal,\n          right: isRtl ? offsetHorizontal : undefined,\n          top: !isHorizontal ? offset : 0,\n          height: !isHorizontal ? size : '100%',\n          width: isHorizontal ? size : '100%',\n        };\n      }\n\n      return style;\n    };\n\n    _getItemStyleCache: (_: any, __: any, ___: any) => ItemStyleCache;\n    _getItemStyleCache = memoizeOne((_: any, __: any, ___: any) => ({}));\n\n    _getRangeToRender(): [number, number, number, number] {\n      const { itemCount, overscanCount } = this.props;\n      const { isScrolling, scrollDirection, scrollOffset } = this.state;\n\n      if (itemCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getStartIndexForOffset(\n        this.props,\n        scrollOffset,\n        this._instanceProps\n      );\n      const stopIndex = getStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollOffset,\n        this._instanceProps\n      );\n\n      // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n      const overscanBackward =\n        !isScrolling || scrollDirection === 'backward'\n          ? Math.max(1, overscanCount)\n          : 1;\n      const overscanForward =\n        !isScrolling || scrollDirection === 'forward'\n          ? Math.max(1, overscanCount)\n          : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(itemCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _onScrollHorizontal = (event: ScrollEvent): void => {\n      const { clientWidth, scrollLeft, scrollWidth } = event.currentTarget;\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollLeft) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        const { direction } = this.props;\n\n        let scrollOffset = scrollLeft;\n        if (direction === 'rtl') {\n          // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n          // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n          // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n          // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              scrollOffset = -scrollLeft;\n              break;\n            case 'positive-descending':\n              scrollOffset = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        }\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        scrollOffset = Math.max(\n          0,\n          Math.min(scrollOffset, scrollWidth - clientWidth)\n        );\n\n        return {\n          isScrolling: true,\n          scrollDirection:\n            prevState.scrollOffset < scrollLeft ? 'forward' : 'backward',\n          scrollOffset,\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _onScrollVertical = (event: ScrollEvent): void => {\n      const { clientHeight, scrollHeight, scrollTop } = event.currentTarget;\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollTop) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        const scrollOffset = Math.max(\n          0,\n          Math.min(scrollTop, scrollHeight - clientHeight)\n        );\n\n        return {\n          isScrolling: true,\n          scrollDirection:\n            prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset,\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _outerRefSetter = (ref: any): void => {\n      const { outerRef } = this.props;\n\n      this._outerRef = ((ref: any): HTMLDivElement);\n\n      if (typeof outerRef === 'function') {\n        outerRef(ref);\n      } else if (\n        outerRef != null &&\n        typeof outerRef === 'object' &&\n        outerRef.hasOwnProperty('current')\n      ) {\n        outerRef.current = ref;\n      }\n    };\n\n    _resetIsScrollingDebounced = () => {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n\n      this._resetIsScrollingTimeoutId = requestTimeout(\n        this._resetIsScrolling,\n        IS_SCROLLING_DEBOUNCE_INTERVAL\n      );\n    };\n\n    _resetIsScrolling = () => {\n      this._resetIsScrollingTimeoutId = null;\n\n      this.setState({ isScrolling: false }, () => {\n        // Clear style cache after state update has been committed.\n        // This way we don't break pure sCU for items that don't use isScrolling param.\n        this._getItemStyleCache(-1, null);\n      });\n    };\n  };\n}\n\n// NOTE: I considered further wrapping individual items with a pure ListItem component.\n// This would avoid ever calling the render function for the same index more than once,\n// But it would also add the overhead of a lot of components/fibers.\n// I assume people already do this (render function returning a class component),\n// So my doing it would just unnecessarily double the wrappers.\n\nconst validateSharedProps = (\n  {\n    children,\n    direction,\n    height,\n    layout,\n    innerTagName,\n    outerTagName,\n    width,\n  }: Props<any>,\n  { instance }: State\n): void => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn(\n          'The innerTagName and outerTagName props have been deprecated. ' +\n            'Please use the innerElementType and outerElementType props instead.'\n        );\n      }\n    }\n\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n\n    switch (direction) {\n      case 'horizontal':\n      case 'vertical':\n        if (devWarningsDirection && !devWarningsDirection.has(instance)) {\n          devWarningsDirection.add(instance);\n          console.warn(\n            'The direction prop should be either \"ltr\" (default) or \"rtl\". ' +\n              'Please use the layout prop to specify \"vertical\" (default) or \"horizontal\" orientation.'\n          );\n        }\n        break;\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"direction\" prop has been specified. ' +\n            'Value should be either \"ltr\" or \"rtl\". ' +\n            `\"${direction}\" was specified.`\n        );\n    }\n\n    switch (layout) {\n      case 'horizontal':\n      case 'vertical':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"layout\" prop has been specified. ' +\n            'Value should be either \"horizontal\" or \"vertical\". ' +\n            `\"${layout}\" was specified.`\n        );\n    }\n\n    if (children == null) {\n      throw Error(\n        'An invalid \"children\" prop has been specified. ' +\n          'Value should be a React component. ' +\n          `\"${children === null ? 'null' : typeof children}\" was specified.`\n      );\n    }\n\n    if (isHorizontal && typeof width !== 'number') {\n      throw Error(\n        'An invalid \"width\" prop has been specified. ' +\n          'Horizontal lists must specify a number for width. ' +\n          `\"${width === null ? 'null' : typeof width}\" was specified.`\n      );\n    } else if (!isHorizontal && typeof height !== 'number') {\n      throw Error(\n        'An invalid \"height\" prop has been specified. ' +\n          'Vertical lists must specify a number for height. ' +\n          `\"${height === null ? 'null' : typeof height}\" was specified.`\n      );\n    }\n  }\n};\n","// @flow\n\nimport createListComponent from './createListComponent';\n\nimport type { Props, ScrollToAlign } from './createListComponent';\n\nconst DEFAULT_ESTIMATED_ITEM_SIZE = 50;\n\ntype VariableSizeProps = {|\n  estimatedItemSize: number,\n  ...Props<any>,\n|};\n\ntype itemSizeGetter = (index: number) => number;\n\ntype ItemMetadata = {|\n  offset: number,\n  size: number,\n|};\ntype InstanceProps = {|\n  itemMetadataMap: { [index: number]: ItemMetadata },\n  estimatedItemSize: number,\n  lastMeasuredIndex: number,\n|};\n\nconst getItemMetadata = (\n  props: Props<any>,\n  index: number,\n  instanceProps: InstanceProps\n): ItemMetadata => {\n  const { itemSize } = ((props: any): VariableSizeProps);\n  const { itemMetadataMap, lastMeasuredIndex } = instanceProps;\n\n  if (index > lastMeasuredIndex) {\n    let offset = 0;\n    if (lastMeasuredIndex >= 0) {\n      const itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (let i = lastMeasuredIndex + 1; i <= index; i++) {\n      let size = ((itemSize: any): itemSizeGetter)(i);\n\n      itemMetadataMap[i] = {\n        offset,\n        size,\n      };\n\n      offset += size;\n    }\n\n    instanceProps.lastMeasuredIndex = index;\n  }\n\n  return itemMetadataMap[index];\n};\n\nconst findNearestItem = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  offset: number\n) => {\n  const { itemMetadataMap, lastMeasuredIndex } = instanceProps;\n\n  const lastMeasuredItemOffset =\n    lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch(\n      props,\n      instanceProps,\n      lastMeasuredIndex,\n      0,\n      offset\n    );\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch(\n      props,\n      instanceProps,\n      Math.max(0, lastMeasuredIndex),\n      offset\n    );\n  }\n};\n\nconst findNearestItemBinarySearch = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  high: number,\n  low: number,\n  offset: number\n): number => {\n  while (low <= high) {\n    const middle = low + Math.floor((high - low) / 2);\n    const currentOffset = getItemMetadata(props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nconst findNearestItemExponentialSearch = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  index: number,\n  offset: number\n): number => {\n  const { itemCount } = props;\n  let interval = 1;\n\n  while (\n    index < itemCount &&\n    getItemMetadata(props, index, instanceProps).offset < offset\n  ) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch(\n    props,\n    instanceProps,\n    Math.min(index, itemCount - 1),\n    Math.floor(index / 2),\n    offset\n  );\n};\n\nconst getEstimatedTotalSize = (\n  { itemCount }: Props<any>,\n  { itemMetadataMap, estimatedItemSize, lastMeasuredIndex }: InstanceProps\n) => {\n  let totalSizeOfMeasuredItems = 0;\n\n  // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n  if (lastMeasuredIndex >= itemCount) {\n    lastMeasuredIndex = itemCount - 1;\n  }\n\n  if (lastMeasuredIndex >= 0) {\n    const itemMetadata = itemMetadataMap[lastMeasuredIndex];\n    totalSizeOfMeasuredItems = itemMetadata.offset + itemMetadata.size;\n  }\n\n  const numUnmeasuredItems = itemCount - lastMeasuredIndex - 1;\n  const totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedItemSize;\n\n  return totalSizeOfMeasuredItems + totalSizeOfUnmeasuredItems;\n};\n\nconst VariableSizeList = createListComponent({\n  getItemOffset: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => getItemMetadata(props, index, instanceProps).offset,\n\n  getItemSize: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => instanceProps.itemMetadataMap[index].size,\n\n  getEstimatedTotalSize,\n\n  getOffsetForIndexAndAlignment: (\n    props: Props<any>,\n    index: number,\n    align: ScrollToAlign,\n    scrollOffset: number,\n    instanceProps: InstanceProps,\n    scrollbarSize: number\n  ): number => {\n    const { direction, height, layout, width } = props;\n\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const size = (((isHorizontal ? width : height): any): number);\n    const itemMetadata = getItemMetadata(props, index, instanceProps);\n\n    // Get estimated total size after ItemMetadata is computed,\n    // To ensure it reflects actual measurements instead of just estimates.\n    const estimatedTotalSize = getEstimatedTotalSize(props, instanceProps);\n\n    const maxOffset = Math.max(\n      0,\n      Math.min(estimatedTotalSize - size, itemMetadata.offset)\n    );\n    const minOffset = Math.max(\n      0,\n      itemMetadata.offset - size + itemMetadata.size + scrollbarSize\n    );\n\n    if (align === 'smart') {\n      if (\n        scrollOffset >= minOffset - size &&\n        scrollOffset <= maxOffset + size\n      ) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n      case 'end':\n        return minOffset;\n      case 'center':\n        return Math.round(minOffset + (maxOffset - minOffset) / 2);\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n    }\n  },\n\n  getStartIndexForOffset: (\n    props: Props<any>,\n    offset: number,\n    instanceProps: InstanceProps\n  ): number => findNearestItem(props, instanceProps, offset),\n\n  getStopIndexForStartIndex: (\n    props: Props<any>,\n    startIndex: number,\n    scrollOffset: number,\n    instanceProps: InstanceProps\n  ): number => {\n    const { direction, height, itemCount, layout, width } = props;\n\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const size = (((isHorizontal ? width : height): any): number);\n    const itemMetadata = getItemMetadata(props, startIndex, instanceProps);\n    const maxOffset = scrollOffset + size;\n\n    let offset = itemMetadata.offset + itemMetadata.size;\n    let stopIndex = startIndex;\n\n    while (stopIndex < itemCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata(props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n\n  initInstanceProps(props: Props<any>, instance: any): InstanceProps {\n    const { estimatedItemSize } = ((props: any): VariableSizeProps);\n\n    const instanceProps = {\n      itemMetadataMap: {},\n      estimatedItemSize: estimatedItemSize || DEFAULT_ESTIMATED_ITEM_SIZE,\n      lastMeasuredIndex: -1,\n    };\n\n    instance.resetAfterIndex = (\n      index: number,\n      shouldForceUpdate?: boolean = true\n    ) => {\n      instanceProps.lastMeasuredIndex = Math.min(\n        instanceProps.lastMeasuredIndex,\n        index - 1\n      );\n\n      // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n\n  shouldResetStyleCacheOnItemSizeChange: false,\n\n  validateProps: ({ itemSize }: Props<any>): void => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'function') {\n        throw Error(\n          'An invalid \"itemSize\" prop has been specified. ' +\n            'Value should be a function. ' +\n            `\"${itemSize === null ? 'null' : typeof itemSize}\" was specified.`\n        );\n      }\n    }\n  },\n});\n\nexport default VariableSizeList;\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport React from 'react';\nimport { VariableSizeList } from 'react-window';\nimport Tree, { createTreeComputer } from './Tree';\nimport { createBasicRecord, getIdByIndex } from './utils';\nvar computeTree = createTreeComputer({\n  createRecord: function createRecord(data, _ref, parent, previousRecord) {\n    var recomputeTree = _ref.recomputeTree,\n        resetAfterId = _ref.resetAfterId;\n    var record = createBasicRecord({\n      data: data,\n      height: previousRecord ? previousRecord.public.height : data.defaultHeight,\n      isOpen: previousRecord ? previousRecord.public.isOpen : data.isOpenByDefault,\n      resize: function resize(height, shouldForceUpdate) {\n        record.public.height = height;\n        resetAfterId(record.public.data.id, shouldForceUpdate);\n      },\n      setOpen: function setOpen(state) {\n        var _recomputeTree;\n\n        return recomputeTree((_recomputeTree = {}, _recomputeTree[data.id] = state, _recomputeTree));\n      }\n    }, parent);\n    return record;\n  }\n});\nexport var VariableSizeTree = /*#__PURE__*/function (_Tree) {\n  _inheritsLoose(VariableSizeTree, _Tree);\n\n  function VariableSizeTree(props, context) {\n    var _this;\n\n    _this = _Tree.call(this, props, context) || this;\n    _this.getItemSize = _this.getItemSize.bind(_assertThisInitialized(_this));\n    _this.state = _extends({}, _this.state, {\n      computeTree: computeTree,\n      resetAfterId: _this.resetAfterId.bind(_assertThisInitialized(_this))\n    });\n    return _this;\n  }\n\n  var _proto = VariableSizeTree.prototype;\n\n  _proto.resetAfterId = function resetAfterId(id, shouldForceUpdate) {\n    var _list$current;\n\n    if (shouldForceUpdate === void 0) {\n      shouldForceUpdate = false;\n    }\n\n    var _this$state = this.state,\n        list = _this$state.list,\n        order = _this$state.order;\n    (_list$current = list.current) == null ? void 0 : _list$current.resetAfterIndex(order.indexOf(id), shouldForceUpdate);\n  };\n\n  _proto.recomputeTree = function recomputeTree(state) {\n    var _this2 = this;\n\n    return _Tree.prototype.recomputeTree.call(this, state).then(function () {\n      var _this2$state$list$cur;\n\n      (_this2$state$list$cur = _this2.state.list.current) == null ? void 0 : _this2$state$list$cur.resetAfterIndex(0, true);\n    });\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        placeholder = _this$props.placeholder,\n        itemSize = _this$props.itemSize,\n        rowComponent = _this$props.rowComponent,\n        treeWalker = _this$props.treeWalker,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"placeholder\", \"itemSize\", \"rowComponent\", \"treeWalker\"]);\n\n    var _this$state2 = this.state,\n        attachRefs = _this$state2.attachRefs,\n        order = _this$state2.order;\n    return placeholder && order.length === 0 ? placeholder : /*#__PURE__*/React.createElement(VariableSizeList, Object.assign({}, rest, {\n      itemCount: order.length,\n      itemData: this.getItemData() // eslint-disable-next-line @typescript-eslint/unbound-method\n      ,\n      itemKey: getIdByIndex // eslint-disable-next-line @typescript-eslint/unbound-method\n      ,\n      itemSize: itemSize != null ? itemSize : this.getItemSize // eslint-disable-next-line @typescript-eslint/unbound-method\n      ,\n      ref: attachRefs\n    }), rowComponent);\n  };\n\n  _proto.getItemSize = function getItemSize(index) {\n    return this.getRecordData(index).height;\n  };\n\n  return VariableSizeTree;\n}(Tree);"],"names":["_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","_excluded","BadgeRoot","styled","name","slot","overridesResolver","props","styles","root","position","display","verticalAlign","flexShrink","BadgeBadge","ownerState","badge","variant","concat","capitalize","anchorOrigin","vertical","horizontal","overlap","color","invisible","_ref3","theme","_extends","flexDirection","flexWrap","justifyContent","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","RADIUS_STANDARD","lineHeight","padding","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","backgroundColor","vars","palette","main","contrastText","RADIUS_DOT","_defineProperty","top","right","transform","transformOrigin","badgeClasses","bottom","left","leavingScreen","React","inProps","ref","_ref","_slots$root","_ref2","_slots$badge","_slotProps$root","_slotProps$badge","useThemeProps","_props$anchorOrigin","anchorOriginProp","className","component","_props$components","components","_props$componentsProp","componentsProps","children","_props$overlap","overlapProp","_props$color","colorProp","_props$invisible","invisibleProp","_props$max","max","maxProp","badgeContentProp","badgeContent","slots","slotProps","_props$showZero","showZero","_props$variant","variantProp","other","_objectWithoutPropertiesLoose","_useBadge","parameters","_parameters$invisible","_parameters$max","_parameters$showZero","prevProps","usePreviousProps","_ref$max","displayValue","Number","useBadge","invisibleFromHook","displayValueFromHook","_ref12","_ref12$color","_ref12$overlap","_ref12$anchorOrigin","_ref12$variant","undefined","classes","_ownerState$classes","composeClasses","getBadgeUtilityClass","useUtilityClasses","RootSlot","Root","BadgeSlot","Badge","rootSlotProps","badgeSlotProps","rootProps","useSlotProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","as","clsx","badgeProps","_jsxs","_jsx","generateUtilityClass","generateUtilityClasses","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","assign","arguments","source","hasOwnProperty","call","possibleConstructorReturn","self","ReferenceError","slicedToArray","arr","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","push","value","err","sliceIterator","windowObject","window","global","cancelFrame","requestFrame","clearTimeoutFn","clearTimeout","setTimeoutFn","setTimeout","cancelAnimationFrameFn","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","requestAnimationFrameFn","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","createDetectElementResize","nonce","animationKeyframes","animationName","animationStartEvent","animationStyle","checkTriggers","resetTriggers","scrollListener","attachEvent","document","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollLeft","scrollWidth","scrollTop","scrollHeight","style","width","offsetWidth","offsetHeight","__resizeLast__","e","indexOf","this","__resizeRAF__","__resizeListeners__","forEach","fn","animation","keyframeprefix","domPrefixes","split","startEvents","elm","createElement","toLowerCase","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","getElementById","css","head","getElementsByTagName","id","type","setAttribute","styleSheet","cssText","appendChild","createTextNode","createStyles","expandTrigger","contractTrigger","addEventListener","__animationListener__","removeResizeListener","detachEvent","splice","removeEventListener","removeChild","callback","animationFrameID","timeoutID","AutoSizer","_React$PureComponent","_temp","_this","_len","args","_key","__proto__","getPrototypeOf","apply","state","defaultHeight","defaultWidth","_onResize","_this$props","disableHeight","disableWidth","onResize","_parentNode","_height","_width","_style","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","setState","_setRef","autoSizer","_autoSizer","subClass","superClass","constructor","setPrototypeOf","inherits","parentNode","defaultView","HTMLElement","_detectElementResize","_props","_state","outerStyle","overflow","childParams","bailoutOnChildren","PureComponent","defaultProps","refs","current","noop","createBasicRecord","pub","parent","child","isShown","public","isOpen","sibling","visited","getIdByIndex","index","getRecordData","data","createTreeComputer","creatorOptions","options","refresh","createRecord","buildingTaskTimeout","placeholder","_ref3$async","async","treeWalker","shouldPreservePreviousState","records","previousRecords","order","Map","requestIdleCallbackOptions","timeout","meta","WeakMap","iter","rootRecord","get","set","currentRecord","isTraversingRoot","tempRecord","useIdleCallback","hasTime","deadline","timeRemaining","task","requestIdleCallback","childRecord","updateRequest","generateNewTree","_ref4","_ref5","opennessState","has","opts","ownerRecord","_ref6","open","_ref6$subtreeCallback","subtreeCallback","update","recordNextToSubtree","countToRemove","orderParts","record","currentOrderPart","MAX_FUNCTION_ARGUMENTS","_ref7","count","updateExistingTree","Tree","_PureComponent","context","bind","_assertThisInitialized","list","createRef","recomputeTree","_inheritsLoose","getDerivedStateFromProps","_props$listRef","listRef","computeTree","oldTreeWalker","attachRefs","mergeRefs","_proto","getItemData","treeData","itemData","_this$state","_this2","Promise","resolve","prevState","scrollTo","scrollOffset","_this$state$list$curr","scrollToItem","align","_this$state$list$curr2","rowComponent","_ref$data","Node","isScrolling","previousRecord","isOpenByDefault","setOpen","_recomputeTree","safeIsNaN","isNaN","areInputsEqual","newInputs","lastInputs","first","second","resultFn","isEqual","lastThis","lastResult","lastArgs","calledOnce","newArgs","now","performance","Date","cancelTimeout","requestTimeout","delay","start","tick","size","getScrollbarSize","recalculate","div","body","clientWidth","cachedRTLResult","getRTLOffsetType","outerDiv","direction","innerDiv","innerStyle","IS_SCROLLING_DEBOUNCE_INTERVAL$1","defaultItemKey$1","createListComponent","_class","getItemOffset","getEstimatedTotalSize","getItemSize","getOffsetForIndexAndAlignment","getStartIndexForOffset","getStopIndexForStartIndex","initInstanceProps","shouldResetStyleCacheOnItemSizeChange","validateProps","List","_instanceProps","_outerRef","_resetIsScrollingTimeoutId","scrollDirection","initialScrollOffset","scrollUpdateWasRequested","_callOnItemsRendered","memoizeOne","overscanStartIndex","overscanStopIndex","visibleStartIndex","visibleStopIndex","onItemsRendered","_callOnScroll","onScroll","_getItemStyle","itemSize","layout","itemStyleCache","_getItemStyleCache","_offset","isHorizontal","isRtl","offsetHorizontal","_","__","___","_onScrollHorizontal","event","_event$currentTarget","currentTarget","Math","min","_resetIsScrollingDebounced","_onScrollVertical","_event$currentTarget2","clientHeight","_outerRefSetter","outerRef","_resetIsScrolling","nextProps","validateSharedProps$1","_this$props2","itemCount","scrollbarSize","componentDidMount","_this$props3","_callPropsCallbacks","componentDidUpdate","_this$props4","componentWillUnmount","render","_this$props5","innerRef","innerElementType","innerTagName","_this$props5$itemKey","itemKey","outerElementType","outerTagName","useIsScrolling","_this$_getRangeToRend","_getRangeToRender","startIndex","stopIndex","items","_index","estimatedTotalSize","WebkitOverflowScrolling","willChange","pointerEvents","_this$_getRangeToRend2","_overscanStartIndex","_overscanStopIndex","_visibleStartIndex","_visibleStopIndex","_this$state2","_scrollDirection","_scrollOffset","_scrollUpdateWasRequested","_this$props6","overscanCount","_this$state3","overscanBackward","overscanForward","getItemMetadata$1","instanceProps","itemMetadataMap","lastMeasuredIndex","offset","itemMetadata","findNearestItemBinarySearch$1","high","low","middle","floor","currentOffset","findNearestItemExponentialSearch$1","interval","estimatedItemSize","totalSizeOfMeasuredItems","VariableSizeList","maxOffset","minOffset","round","findNearestItem$1","resetAfterIndex","shouldForceUpdate","forceUpdate","resetAfterId","resize","VariableSizeTree","_Tree","_list$current","then","_this2$state$list$cur","rest"],"sourceRoot":""}