{"version":3,"file":"static/js/3692.8ebe8952.chunk.js","mappings":"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","sources":["../../../plugins/data-management/src/AddTrackWidget/components/ConfirmTrack.tsx","../../../plugins/data-management/src/AddTrackWidget/components/TrackSourceSelect.tsx","../../../plugins/data-management/src/AddTrackWidget/components/DefaultAddTrackWorkflow.tsx","../../../plugins/data-management/src/AddTrackWidget/components/AddTrackWidget.tsx","../../../node_modules/@mui/material/esm/Card/Card.js","../../../node_modules/@mui/material/esm/Card/cardClasses.js","../../../node_modules/@mui/material/esm/CardContent/CardContent.js","../../../node_modules/@mui/material/esm/CardContent/cardContentClasses.js","../../../node_modules/@mui/material/esm/Link/getTextDecoration.js","../../../node_modules/@mui/material/esm/Link/Link.js","../../../node_modules/@mui/material/esm/Link/linkClasses.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  Card,\n  CardContent,\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  IconButton,\n  InputLabel,\n  InputAdornment,\n  ListSubheader,\n  Link,\n  List,\n  ListItem,\n  MenuItem,\n  Paper,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport {\n  supportedIndexingAdapters,\n  getSession,\n  getEnv,\n  isElectron,\n} from '@jbrowse/core/util'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { observer } from 'mobx-react'\nimport { UNKNOWN } from '@jbrowse/core/util/tracks'\nimport { AdapterMetadata } from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\n// icons\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport AddIcon from '@mui/icons-material//Add'\n// locals\nimport { AddTrackModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  spacing: {\n    marginBottom: theme.spacing(3),\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: theme.spacing(1),\n  },\n  spacer: {\n    height: theme.spacing(8),\n  },\n  card: {\n    marginTop: theme.spacing(1),\n  },\n}))\n\nfunction StatusMessage({\n  trackAdapter,\n  trackType,\n}: {\n  trackAdapter: { type: string; subadapter?: { type: string } }\n  trackType: string\n}) {\n  const { classes } = useStyles()\n  return trackAdapter.type === 'SNPCoverageAdapter' ? (\n    <Typography className={classes.spacing}>\n      Selected <code>{trackType}</code>. Using adapter{' '}\n      <code>{trackAdapter.type}</code> with subadapter{' '}\n      <code>{trackAdapter.subadapter?.type}</code>. Please enter a track name\n      and, if necessary, update the track type.\n    </Typography>\n  ) : (\n    <Typography className={classes.spacing}>\n      Using adapter <code>{trackAdapter.type}</code> and guessing track type{' '}\n      <code>{trackType}</code>. Please enter a track name and, if necessary,\n      update the track type.\n    </Typography>\n  )\n}\n\n/**\n * categorizeAdapters takes a list of adapters and sorts their menu item elements under an appropriate ListSubheader\n *  element. In this way, adapters that are from external plugins can have headers that differentiate them from the\n *  out-of-the-box plugins.\n * @param adaptersList - a list of adapters found in the PluginManager\n * @returns a series of JSX elements that are ListSubheaders followed by the adapters\n *   found under that subheader\n */\nfunction categorizeAdapters(\n  adaptersList: { name: string; adapterMetadata: AdapterMetadata }[],\n) {\n  let currentCategory = ''\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items: any = []\n  adaptersList.forEach(adapter => {\n    if (adapter.adapterMetadata?.category) {\n      if (currentCategory !== adapter.adapterMetadata?.category) {\n        currentCategory = adapter.adapterMetadata?.category\n        items.push(\n          <ListSubheader\n            key={adapter.adapterMetadata?.category}\n            value={adapter.adapterMetadata?.category}\n          >\n            {adapter.adapterMetadata?.category}\n          </ListSubheader>,\n        )\n      }\n      items.push(\n        <MenuItem key={adapter.name} value={adapter.name}>\n          {adapter.adapterMetadata?.displayName\n            ? adapter.adapterMetadata?.displayName\n            : adapter.name}\n        </MenuItem>,\n      )\n    }\n  })\n  return items\n}\n\nfunction getAdapterTypes(pluginManager: PluginManager) {\n  return pluginManager.getElementTypesInGroup('adapter') as {\n    name: string\n    adapterMetadata: AdapterMetadata\n  }[]\n}\n\nfunction getTrackTypes(pluginManager: PluginManager) {\n  return pluginManager.getElementTypesInGroup('track') as { name: string }[]\n}\n\nconst TextIndexingConfig = observer(({ model }: { model: AddTrackModel }) => {\n  const { classes } = useStyles()\n  const [value1, setValue1] = useState('')\n  const [value2, setValue2] = useState('')\n  const [attributes, setAttributes] = useState(['Name', 'ID'])\n  const [exclude, setExclude] = useState(['CDS', 'exon'])\n  const sections = [\n    {\n      label: 'Indexing attributes',\n      values: attributes,\n    },\n    {\n      label: 'Feature types to exclude',\n      values: exclude,\n    },\n  ]\n  useEffect(() => {\n    model.setTextIndexingConf({ attributes, exclude })\n  }, [model, attributes, exclude])\n\n  return (\n    <Paper className={classes.paper}>\n      <InputLabel>Indexing configuration</InputLabel>\n      {sections.map((section, index) => (\n        <Card raised key={section.label} className={classes.card}>\n          <CardContent>\n            <InputLabel>{section.label}</InputLabel>\n            <List disablePadding>\n              {section.values.map((val: string, idx: number) => (\n                <ListItem key={idx} disableGutters>\n                  <TextField\n                    value={val}\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            color=\"secondary\"\n                            onClick={() => {\n                              const newAttr = section.values.filter((a, i) => {\n                                return i !== idx\n                              })\n                              index === 0\n                                ? setAttributes(newAttr)\n                                : setExclude(newAttr)\n                            }}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                </ListItem>\n              ))}\n              <ListItem disableGutters>\n                <TextField\n                  value={index === 0 ? value1 : value2}\n                  placeholder=\"add new\"\n                  onChange={event => {\n                    index === 0\n                      ? setValue1(event.target.value)\n                      : setValue2(event.target.value)\n                  }}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          onClick={() => {\n                            if (index === 0) {\n                              const newAttr: string[] = attributes\n                              newAttr.push(value1)\n                              setAttributes(newAttr)\n                              setValue1('')\n                            } else {\n                              const newFeat: string[] = exclude\n                              newFeat.push(value2)\n                              setExclude(newFeat)\n                              setValue2('')\n                            }\n                          }}\n                          disabled={index === 0 ? value1 === '' : value2 === ''}\n                          color=\"secondary\"\n                          data-testid={`stringArrayAdd-Feat`}\n                        >\n                          <AddIcon />\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </ListItem>\n            </List>\n          </CardContent>\n        </Card>\n      ))}\n    </Paper>\n  )\n})\n\nconst TrackAdapterSelector = observer(({ model }: { model: AddTrackModel }) => {\n  const { classes } = useStyles()\n  const { trackAdapter } = model\n  const { pluginManager } = getEnv(model)\n  const adapters = getAdapterTypes(pluginManager)\n  return (\n    <TextField\n      className={classes.spacing}\n      value={trackAdapter?.type !== 'UNKNOWN' ? trackAdapter?.type : ''}\n      label=\"adapterType\"\n      helperText=\"Select an adapter type\"\n      select\n      fullWidth\n      onChange={event => model.setAdapterHint(event.target.value)}\n      SelectProps={{\n        // @ts-ignore\n        SelectDisplayProps: { 'data-testid': 'adapterTypeSelect' },\n      }}\n    >\n      {adapters\n        // Excludes any adapter with the 'adapterMetadata.hiddenFromGUI' property, and anything with the 'adapterMetadata.category' property\n        .filter(\n          elt =>\n            !elt.adapterMetadata?.hiddenFromGUI &&\n            !elt.adapterMetadata?.category,\n        )\n        .map(elt => (\n          <MenuItem key={elt.name} value={elt.name}>\n            {elt.adapterMetadata?.displayName\n              ? elt.adapterMetadata?.displayName\n              : elt.name}\n          </MenuItem>\n        ))}\n      {\n        // adapters with the 'adapterMetadata.category' property are categorized\n        // by the value of the property here\n        categorizeAdapters(\n          adapters.filter(elt => !elt.adapterMetadata?.hiddenFromGUI),\n        )\n      }\n    </TextField>\n  )\n})\n\nfunction UnknownAdapterPrompt({ model }: { model: AddTrackModel }) {\n  const { classes } = useStyles()\n  return (\n    <>\n      <Typography className={classes.spacing}>\n        JBrowse was not able to guess the adapter type for this data, but it may\n        be in the list below. If not, you can{' '}\n        <Link\n          href=\"https://github.com/GMOD/jbrowse-components/releases\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          check for new releases\n        </Link>{' '}\n        of JBrowse to see if they support this data type or{' '}\n        <Link\n          href=\"https://github.com/GMOD/jbrowse-components/issues/new\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          file an issue\n        </Link>{' '}\n        and add a feature request for this data type.\n      </Typography>\n      <TrackAdapterSelector model={model} />\n    </>\n  )\n}\n\nconst TrackTypeSelector = observer(({ model }: { model: AddTrackModel }) => {\n  const { classes } = useStyles()\n  const session = getSession(model)\n  const { trackType } = model\n  const trackTypes = getTrackTypes(getEnv(session).pluginManager)\n\n  return (\n    <TextField\n      className={classes.spacing}\n      value={trackType}\n      label=\"trackType\"\n      helperText=\"Select a track type\"\n      select\n      fullWidth\n      onChange={event => {\n        model.setTrackType(event.target.value)\n      }}\n      SelectProps={{\n        // @ts-ignore\n        SelectDisplayProps: { 'data-testid': 'trackTypeSelect' },\n      }}\n    >\n      {trackTypes.map(({ name }) => (\n        <MenuItem key={name} value={name}>\n          {name}\n        </MenuItem>\n      ))}\n    </TextField>\n  )\n})\n\nconst TrackAssemblySelector = observer(\n  ({ model }: { model: AddTrackModel }) => {\n    const session = getSession(model)\n    const { assembly } = model\n    return (\n      <TextField\n        value={assembly}\n        label=\"assemblyName\"\n        helperText=\"Assembly to which the track will be added\"\n        select\n        fullWidth\n        onChange={event => model.setAssembly(event.target.value)}\n        SelectProps={{\n          // @ts-ignore\n          SelectDisplayProps: { 'data-testid': 'assemblyNameSelect' },\n        }}\n      >\n        {session.assemblies\n          .map(conf => readConfObject(conf, 'name'))\n          .map(name => (\n            <MenuItem key={name} value={name}>\n              {name}\n            </MenuItem>\n          ))}\n      </TextField>\n    )\n  },\n)\n\nfunction ConfirmTrack({ model }: { model: AddTrackModel }) {\n  const { classes } = useStyles()\n  const [check, setCheck] = useState(true)\n  const { trackName, trackAdapter, trackType, warningMessage, adapterHint } =\n    model\n\n  if (model.unsupported) {\n    return (\n      <Typography className={classes.spacing}>\n        This version of JBrowse cannot display data of this type. It is\n        possible, however, that there is a newer version that can display them.\n        You can{' '}\n        <Link\n          href=\"https://github.com/GMOD/jbrowse-components/releases\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          check for new releases\n        </Link>{' '}\n        of JBrowse or{' '}\n        <Link\n          href=\"https://github.com/GMOD/jbrowse-components/issues/new\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          file an issue\n        </Link>{' '}\n        and add a feature request for this data type.\n      </Typography>\n    )\n  }\n  if (trackAdapter?.type === UNKNOWN) {\n    return <UnknownAdapterPrompt model={model} />\n  }\n\n  if (adapterHint === '' && trackAdapter) {\n    model.setAdapterHint(trackAdapter.type)\n  }\n\n  if (!trackAdapter?.type) {\n    return <Typography>Could not recognize this data type.</Typography>\n  }\n\n  const supportedForIndexing = supportedIndexingAdapters(trackAdapter?.type)\n  return (\n    <div>\n      {trackAdapter ? (\n        <StatusMessage trackAdapter={trackAdapter} trackType={trackType} />\n      ) : null}\n      {warningMessage ? (\n        <Typography style={{ color: 'orange' }}>{warningMessage}</Typography>\n      ) : null}\n      <TextField\n        className={classes.spacing}\n        label=\"trackName\"\n        helperText=\"A name for this track\"\n        fullWidth\n        value={trackName}\n        onChange={event => model.setTrackName(event.target.value)}\n        inputProps={{ 'data-testid': 'trackNameInput' }}\n      />\n      <TrackAdapterSelector model={model} />\n      <TrackTypeSelector model={model} />\n      <TrackAssemblySelector model={model} />\n      {isElectron && supportedForIndexing && (\n        <FormControl>\n          <FormControlLabel\n            label={'Index track for text searching?'}\n            control={\n              <Checkbox\n                checked={check}\n                onChange={e => {\n                  setCheck(e.target.checked)\n                  model.setTextIndexTrack(e.target.checked)\n                }}\n              />\n            }\n          />\n        </FormControl>\n      )}\n      {isElectron && check && supportedForIndexing ? (\n        <TextIndexingConfig model={model} />\n      ) : null}\n    </div>\n  )\n}\n\nexport default observer(ConfirmTrack)\n","import React from 'react'\nimport { FileSelector } from '@jbrowse/core/ui'\nimport { Paper } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { getRoot } from 'mobx-state-tree'\nimport { observer } from 'mobx-react'\n\n// locals\nimport { AddTrackModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: theme.spacing(1),\n  },\n  spacer: {\n    height: theme.spacing(8),\n  },\n}))\n\nfunction TrackSourceSelect({ model }: { model: AddTrackModel }) {\n  const { classes } = useStyles()\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const rootModel = getRoot<any>(model)\n\n  return (\n    <Paper className={classes.paper}>\n      <FileSelector\n        name=\"Main file\"\n        description=\"\"\n        location={model.trackData}\n        setLocation={model.setTrackData}\n        setName={model.setTrackName}\n        rootModel={rootModel}\n      />\n      <div className={classes.spacer} />\n      <FileSelector\n        name=\"Index file\"\n        description=\"(Optional) The URL of the index file is automatically inferred from the URL of the main file if it is not supplied.\"\n        location={model.indexTrackData}\n        setLocation={model.setIndexTrackData}\n        setName={model.setTrackName}\n        rootModel={rootModel}\n      />\n    </Paper>\n  )\n}\n\nexport default observer(TrackSourceSelect)\n","import React, { useState } from 'react'\nimport {\n  Alert,\n  Button,\n  Step,\n  StepContent,\n  StepLabel,\n  Stepper,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { getRoot } from 'mobx-state-tree'\n\nimport {\n  getSession,\n  isElectron,\n  supportedIndexingAdapters,\n} from '@jbrowse/core/util'\nimport { getConf } from '@jbrowse/core/configuration'\nimport { observer } from 'mobx-react'\n\n// locals\nimport ConfirmTrack from './ConfirmTrack'\nimport TrackSourceSelect from './TrackSourceSelect'\n\nimport { AddTrackModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  root: {\n    marginTop: theme.spacing(1),\n  },\n  stepper: {\n    backgroundColor: theme.palette.background.default,\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  stepContent: {\n    margin: theme.spacing(1),\n  },\n  alertContainer: {\n    padding: `${theme.spacing(2)}px 0px ${theme.spacing(2)}px 0px`,\n  },\n}))\n\nconst steps = ['Enter track data', 'Confirm track type']\n\nfunction AddTrackWorkflow({ model }: { model: AddTrackModel }) {\n  const [activeStep, setActiveStep] = useState(0)\n  const { classes } = useStyles()\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const { jobsManager } = getRoot<any>(model)\n  const session = getSession(model)\n  const {\n    assembly,\n    trackAdapter,\n    trackData,\n    trackName,\n    trackType,\n    textIndexTrack,\n    textIndexingConf,\n  } = model\n  const [trackErrorMessage, setTrackErrorMessage] = useState<string>()\n\n  function getStepContent(step: number) {\n    switch (step) {\n      case 0:\n        return <TrackSourceSelect model={model} />\n      case 1:\n        return <ConfirmTrack model={model} />\n      default:\n        return <Typography>Unknown step</Typography>\n    }\n  }\n\n  async function handleNext() {\n    if (activeStep !== steps.length - 1) {\n      setActiveStep(activeStep + 1)\n      return\n    }\n\n    const trackId = [\n      `${trackName.toLowerCase().replace(/ /g, '_')}-${Date.now()}`,\n      `${session.adminMode ? '' : '-sessionTrack'}`,\n    ].join('')\n\n    const assemblyInstance = session.assemblyManager.get(assembly)\n\n    if (trackAdapter && trackAdapter.type !== 'UNKNOWN') {\n      session.addTrackConf({\n        trackId,\n        type: trackType,\n        name: trackName,\n        assemblyNames: [assembly],\n        adapter: {\n          ...trackAdapter,\n          sequenceAdapter: getConf(assemblyInstance, ['sequence', 'adapter']),\n        },\n      })\n      if (model.view) {\n        model.view.showTrack(trackId)\n        if (\n          isElectron &&\n          textIndexTrack &&\n          supportedIndexingAdapters(trackAdapter.type)\n        ) {\n          const attr = textIndexingConf || {\n            attributes: ['Name', 'ID'],\n            exclude: ['CDS', 'exon'],\n          }\n          const indexName = trackName + '-index'\n          const newEntry = {\n            indexingParams: {\n              ...attr,\n              assemblies: [assembly],\n              tracks: [trackId],\n              indexType: 'perTrack',\n              name: indexName,\n              timestamp: new Date().toISOString(),\n            },\n            name: indexName,\n            cancelCallback: () => jobsManager.abortJob(),\n          }\n          jobsManager.queueJob(newEntry)\n        }\n      } else {\n        session.notify(\n          'Open a new view, or use the track selector in an existing view, to view this track',\n          'info',\n        )\n      }\n      model.clearData()\n      session.hideWidget(model)\n    } else {\n      setTrackErrorMessage(\n        'Failed to add track.\\nThe configuration of this file is not currently supported.',\n      )\n    }\n  }\n\n  function handleBack() {\n    setTrackErrorMessage(undefined)\n    setActiveStep(activeStep - 1)\n  }\n\n  function isNextDisabled() {\n    switch (activeStep) {\n      case 0:\n        return !trackData\n      case 1:\n        return !(trackName && trackType && trackAdapter?.type && assembly)\n      default:\n        return true\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Stepper\n        className={classes.stepper}\n        activeStep={activeStep}\n        orientation=\"vertical\"\n      >\n        {steps.map((label, idx) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n            <StepContent>\n              {getStepContent(idx)}\n              <div className={classes.actionsContainer}>\n                <Button\n                  disabled={activeStep === 0}\n                  onClick={handleBack}\n                  className={classes.button}\n                >\n                  Back\n                </Button>\n                <Button\n                  disabled={isNextDisabled()}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleNext}\n                  className={classes.button}\n                  data-testid=\"addTrackNextButton\"\n                >\n                  {activeStep === steps.length - 1 ? 'Add' : 'Next'}\n                </Button>\n              </div>\n              {trackErrorMessage ? (\n                <div className={classes.alertContainer}>\n                  <Alert severity=\"error\">{trackErrorMessage}</Alert>\n                </div>\n              ) : null}\n            </StepContent>\n          </Step>\n        ))}\n      </Stepper>\n    </div>\n  )\n}\nexport default observer(AddTrackWorkflow)\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { FormControl, FormHelperText, Select, MenuItem } from '@mui/material'\nimport { AddTrackWorkflowType } from '@jbrowse/core/pluggableElementTypes'\nimport { getEnv, useLocalStorage } from '@jbrowse/core/util'\n\n// locals\nimport { AddTrackModel } from '../model'\nimport DefaultAddTrackWorkflow from './DefaultAddTrackWorkflow'\n\nfunction AddTrackSelector({ model }: { model: AddTrackModel }) {\n  const [val, setVal] = useLocalStorage('trackSelector-choice', 'Default')\n  const { pluginManager } = getEnv(model)\n  const widgets = pluginManager.getElementTypesInGroup(\n    'add track workflow',\n  ) as AddTrackWorkflowType[]\n  const ComponentMap = {\n    Default: DefaultAddTrackWorkflow,\n    ...Object.fromEntries(widgets.map(w => [w.name, w.ReactComponent])),\n  } as { [key: string]: React.FC<{ model: AddTrackModel }> }\n\n  // make sure the selected value is in the list\n  const val2 = ComponentMap[val] ? val : 'Default'\n  const Component = ComponentMap[val2]\n  return (\n    <>\n      <FormControl>\n        <Select value={val2} onChange={event => setVal(event.target.value)}>\n          {Object.keys(ComponentMap).map(e => (\n            <MenuItem key={e} value={e}>\n              {e}\n            </MenuItem>\n          ))}\n        </Select>\n        <FormHelperText>Type of add track workflow</FormHelperText>\n      </FormControl>\n\n      <br />\n      <Component model={model} />\n    </>\n  )\n}\n\nexport default observer(AddTrackSelector)\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\n\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n\n  const {\n    className,\n    raised = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    raised\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\n\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import { alpha, getPath } from '@mui/system';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n\n  return alpha(color, 0.4);\n};\n\nexport default getTextDecoration;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\n\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    component = 'a',\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = 'always',\n    variant = 'inherit',\n    sx\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  const handleFocus = event => {\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;"],"names":["useStyles","makeStyles","theme","spacing","marginBottom","paper","display","flexDirection","padding","spacer","height","card","marginTop","StatusMessage","trackAdapter","trackType","classes","type","Typography","className","subadapter","categorizeAdapters","adaptersList","currentCategory","items","forEach","adapter","adapterMetadata","category","push","ListSubheader","value","MenuItem","name","displayName","TextIndexingConfig","observer","model","useState","value1","setValue1","value2","setValue2","attributes","setAttributes","exclude","setExclude","sections","label","values","useEffect","setTextIndexingConf","Paper","InputLabel","map","section","index","Card","raised","CardContent","List","disablePadding","val","idx","ListItem","disableGutters","TextField","InputProps","endAdornment","InputAdornment","position","IconButton","color","onClick","newAttr","filter","a","i","Delete","placeholder","onChange","event","target","newFeat","disabled","Add","TrackAdapterSelector","adapters","pluginManager","getElementTypesInGroup","getAdapterTypes","getEnv","helperText","select","fullWidth","setAdapterHint","SelectProps","SelectDisplayProps","elt","hiddenFromGUI","UnknownAdapterPrompt","Link","href","rel","TrackTypeSelector","session","getSession","trackTypes","setTrackType","TrackAssemblySelector","assembly","setAssembly","assemblies","conf","readConfObject","check","setCheck","trackName","warningMessage","adapterHint","unsupported","UNKNOWN","supportedForIndexing","supportedIndexingAdapters","style","setTrackName","inputProps","isElectron","FormControl","FormControlLabel","control","Checkbox","checked","e","setTextIndexTrack","rootModel","getRoot","FileSelector","description","location","trackData","setLocation","setTrackData","setName","indexTrackData","setIndexTrackData","root","stepper","backgroundColor","palette","background","default","button","marginRight","actionsContainer","stepContent","margin","alertContainer","steps","activeStep","setActiveStep","jobsManager","textIndexTrack","textIndexingConf","trackErrorMessage","setTrackErrorMessage","getStepContent","step","handleNext","length","trackId","toLowerCase","replace","Date","now","adminMode","join","assemblyInstance","assemblyManager","get","addTrackConf","assemblyNames","sequenceAdapter","getConf","view","showTrack","attr","indexName","newEntry","indexingParams","tracks","indexType","timestamp","toISOString","cancelCallback","abortJob","queueJob","notify","clearData","hideWidget","handleBack","undefined","isNextDisabled","Stepper","orientation","Step","StepLabel","StepContent","Button","variant","Alert","severity","useLocalStorage","setVal","widgets","ComponentMap","Default","DefaultAddTrackWorkflow","Object","fromEntries","w","ReactComponent","val2","Component","Select","keys","FormHelperText","_excluded","CardRoot","styled","slot","overridesResolver","props","styles","overflow","React","inProps","ref","useThemeProps","other","_objectWithoutPropertiesLoose","ownerState","_extends","composeClasses","getCardUtilityClass","useUtilityClasses","_jsx","clsx","elevation","generateUtilityClass","cardClasses","generateUtilityClasses","CardContentRoot","paddingBottom","component","getCardContentUtilityClass","as","cardContentClasses","colorTransformations","primary","textPrimary","secondary","textSecondary","error","transformedColor","transformDeprecatedColors","getPath","channelColor","alpha","LinkRoot","capitalize","underline","textDecoration","textDecorationColor","getTextDecoration","WebkitTapHighlightColor","outline","border","borderRadius","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","onBlur","onFocus","TypographyClasses","sx","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","focusVisible","setFocusVisible","handlerRef","useForkRef","slots","getLinkUtilityClass","current","includes","Array","isArray"],"sourceRoot":""}