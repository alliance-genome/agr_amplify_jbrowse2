{"version":3,"file":"static/js/4902.81137959.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/material/internal/svg-icons/Person.js","../../../node_modules/@mui/material/Avatar/Avatar.js","../../../node_modules/@mui/material/Avatar/avatarClasses.js","../../../node_modules/@mui/material/AvatarGroup/avatarGroupClasses.js","../../../node_modules/@mui/material/AvatarGroup/AvatarGroup.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"alt\", \"children\", \"className\", \"component\", \"slots\", \"slotProps\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled, createUseThemeProps } from '../zero-styled';\nimport Person from '../internal/svg-icons/Person';\nimport { getAvatarUtilityClass } from './avatarClasses';\nimport useSlot from '../utils/useSlot';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useThemeProps = createUseThemeProps('MuiAvatar');\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, colorDefault && 'colorDefault'],\n    img: ['img'],\n    fallback: ['fallback']\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\nconst AvatarRoot = styled('div', {\n  name: 'MuiAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];\n  }\n})(({\n  theme\n}) => ({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: '50%',\n  overflow: 'hidden',\n  userSelect: 'none',\n  variants: [{\n    props: {\n      variant: 'rounded'\n    },\n    style: {\n      borderRadius: (theme.vars || theme).shape.borderRadius\n    }\n  }, {\n    props: {\n      variant: 'square'\n    },\n    style: {\n      borderRadius: 0\n    }\n  }, {\n    props: {\n      colorDefault: true\n    },\n    style: _extends({\n      color: (theme.vars || theme).palette.background.default\n    }, theme.vars ? {\n      backgroundColor: theme.vars.palette.Avatar.defaultBg\n    } : _extends({\n      backgroundColor: theme.palette.grey[400]\n    }, theme.applyStyles('dark', {\n      backgroundColor: theme.palette.grey[600]\n    })))\n  }]\n}));\nconst AvatarImg = styled('img', {\n  name: 'MuiAvatar',\n  slot: 'Img',\n  overridesResolver: (props, styles) => styles.img\n})({\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  // Handle non-square image. The property isn't supported by IE11.\n  objectFit: 'cover',\n  // Hide alt text.\n  color: 'transparent',\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 10000\n});\nconst AvatarFallback = styled(Person, {\n  name: 'MuiAvatar',\n  slot: 'Fallback',\n  overridesResolver: (props, styles) => styles.fallback\n})({\n  width: '75%',\n  height: '75%'\n});\nfunction useLoaded({\n  crossOrigin,\n  referrerPolicy,\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('loaded');\n    };\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('error');\n    };\n    image.crossOrigin = crossOrigin;\n    image.referrerPolicy = referrerPolicy;\n    image.src = src;\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n    return () => {\n      active = false;\n    };\n  }, [crossOrigin, referrerPolicy, src, srcSet]);\n  return loaded;\n}\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatar'\n  });\n  const {\n      alt,\n      children: childrenProp,\n      className,\n      component = 'div',\n      slots = {},\n      slotProps = {},\n      imgProps,\n      sizes,\n      src,\n      srcSet,\n      variant = 'circular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  let children = null;\n\n  // Use a hook instead of onError on the img element to support server-side rendering.\n  const loaded = useLoaded(_extends({}, imgProps, {\n    src,\n    srcSet\n  }));\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n  const ownerState = _extends({}, props, {\n    colorDefault: !hasImgNotFailing,\n    component,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const [ImgSlot, imgSlotProps] = useSlot('img', {\n    className: classes.img,\n    elementType: AvatarImg,\n    externalForwardedProps: {\n      slots,\n      slotProps: {\n        img: _extends({}, imgProps, slotProps.img)\n      }\n    },\n    additionalProps: {\n      alt,\n      src,\n      srcSet,\n      sizes\n    },\n    ownerState\n  });\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/_jsx(ImgSlot, _extends({}, imgSlotProps));\n    // We only render valid children, non valid children are rendered with a fallback\n    // We consider that invalid children are all falsy values, except 0, which is valid.\n  } else if (!!childrenProp || childrenProp === 0) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/_jsx(AvatarFallback, {\n      ownerState: ownerState,\n      className: classes.fallback\n    });\n  }\n  return /*#__PURE__*/_jsx(AvatarRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   * @deprecated Use `slotProps.img` instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).\n   */\n  imgProps: PropTypes.object,\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    img: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    img: PropTypes.elementType\n  }),\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default Avatar;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatar', slot);\n}\nconst avatarClasses = generateUtilityClasses('MuiAvatar', ['root', 'colorDefault', 'circular', 'rounded', 'square', 'img', 'fallback']);\nexport default avatarClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAvatarGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatarGroup', slot);\n}\nconst avatarGroupClasses = generateUtilityClasses('MuiAvatarGroup', ['root', 'avatar']);\nexport default avatarGroupClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"componentsProps\", \"max\", \"renderSurplus\", \"slotProps\", \"spacing\", \"total\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Avatar, { avatarClasses } from '../Avatar';\nimport avatarGroupClasses, { getAvatarGroupUtilityClass } from './avatarGroupClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst SPACINGS = {\n  small: -16,\n  medium: null\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar']\n  };\n  return composeClasses(slots, getAvatarGroupUtilityClass, classes);\n};\nconst AvatarGroupRoot = styled('div', {\n  name: 'MuiAvatarGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${avatarGroupClasses.avatar}`]: styles.avatar\n  }, styles.root)\n})(({\n  theme,\n  ownerState\n}) => {\n  const marginValue = ownerState.spacing && SPACINGS[ownerState.spacing] !== undefined ? SPACINGS[ownerState.spacing] : -ownerState.spacing;\n  return {\n    [`& .${avatarClasses.root}`]: {\n      border: `2px solid ${(theme.vars || theme).palette.background.default}`,\n      boxSizing: 'content-box',\n      marginLeft: marginValue != null ? marginValue : -8,\n      '&:last-child': {\n        marginLeft: 0\n      }\n    },\n    display: 'flex',\n    flexDirection: 'row-reverse'\n  };\n});\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(inProps, ref) {\n  var _slotProps$additional;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatarGroup'\n  });\n  const {\n      children: childrenProp,\n      className,\n      component = 'div',\n      componentsProps = {},\n      max = 5,\n      renderSurplus,\n      slotProps = {},\n      spacing = 'medium',\n      total,\n      variant = 'circular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  let clampedMax = max < 2 ? 2 : max;\n  const ownerState = _extends({}, props, {\n    max,\n    spacing,\n    component,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const children = React.Children.toArray(childrenProp).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  const totalAvatars = total || children.length;\n  if (totalAvatars === clampedMax) {\n    clampedMax += 1;\n  }\n  clampedMax = Math.min(totalAvatars + 1, clampedMax);\n  const maxAvatars = Math.min(children.length, clampedMax - 1);\n  const extraAvatars = Math.max(totalAvatars - clampedMax, totalAvatars - maxAvatars, 0);\n  const extraAvatarsElement = renderSurplus ? renderSurplus(extraAvatars) : `+${extraAvatars}`;\n  const additionalAvatarSlotProps = (_slotProps$additional = slotProps.additionalAvatar) != null ? _slotProps$additional : componentsProps.additionalAvatar;\n  return /*#__PURE__*/_jsxs(AvatarGroupRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [extraAvatars ? /*#__PURE__*/_jsx(Avatar, _extends({\n      variant: variant\n    }, additionalAvatarSlotProps, {\n      className: clsx(classes.avatar, additionalAvatarSlotProps == null ? void 0 : additionalAvatarSlotProps.className),\n      children: extraAvatarsElement\n    })) : null, children.slice(0, maxAvatars).reverse().map(child => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(child.props.className, classes.avatar),\n        variant: child.props.variant || variant\n      });\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n  /**\n   * Max avatars to show before +x.\n   * @default 5\n   */\n  max: chainPropTypes(PropTypes.number, props => {\n    if (props.max < 2) {\n      return new Error(['MUI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * custom renderer of extraAvatars\n   * @param {number} surplus number of extra avatars\n   * @returns {React.ReactNode} custom element to display\n   */\n  renderSurplus: PropTypes.func,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n  /**\n   * Spacing between avatars.\n   * @default 'medium'\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The total number of avatars. Used for calculating the number of extra avatars.\n   * @default children.length\n   */\n  total: PropTypes.number,\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default AvatarGroup;"],"names":["createSvgIcon","d","_excluded","useThemeProps","AvatarRoot","styled","name","slot","overridesResolver","props","styles","ownerState","root","variant","colorDefault","theme","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","variants","style","vars","shape","color","palette","background","default","backgroundColor","Avatar","defaultBg","grey","applyStyles","AvatarImg","img","textAlign","objectFit","textIndent","AvatarFallback","Person","fallback","inProps","ref","alt","children","childrenProp","className","component","slots","slotProps","imgProps","sizes","src","srcSet","other","loaded","crossOrigin","referrerPolicy","setLoaded","active","image","Image","onload","onerror","srcset","useLoaded","hasImg","hasImgNotFailing","classes","composeClasses","useUtilityClasses","ImgSlot","imgSlotProps","useSlot","elementType","externalForwardedProps","additionalProps","as","clsx","getAvatarUtilityClass","getAvatarGroupUtilityClass","generateUtilityClass","generateUtilityClasses","SPACINGS","small","medium","AvatarGroupRoot","avatar","marginValue","spacing","undefined","avatarClasses","border","boxSizing","marginLeft","flexDirection","_slotProps$additional","componentsProps","max","renderSurplus","total","clampedMax","toArray","filter","child","totalAvatars","length","Math","min","maxAvatars","extraAvatars","extraAvatarsElement","additionalAvatarSlotProps","additionalAvatar","A","slice","reverse","map"],"sourceRoot":""}