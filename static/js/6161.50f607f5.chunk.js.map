{"version":3,"file":"static/js/6161.50f607f5.chunk.js","mappings":"uRAgBMA,GAAYC,EAAAA,EAAAA,KAAAA,EAAa,SAAAC,GAAK,MAAK,CACvCC,KAAM,CACJC,MAAO,KAETC,YAAa,CACXC,SAAU,WACVC,MAAOL,EAAMM,QAAQ,GACrBC,IAAKP,EAAMM,QAAQ,GACnBE,MAAOR,EAAMS,QAAQC,KAAK,MAE5BC,MAAO,CACLC,OAAQZ,EAAMM,QAAQ,IAXU,IAqFpC,WAAeO,EAAAA,EAAAA,WAtEf,YASI,IARFC,EAQC,EARDA,MACAC,EAOC,EAPDA,YAQQC,EAAYlB,IAAZkB,QACR,EAA2BF,EAAnBG,UAAAA,OAAR,MAAoB,GAApB,EACA,GAAsBC,EAAAA,EAAAA,UAAS,GAAD,OAAID,IAAlC,eAAOE,EAAP,KAAYC,EAAZ,KAEA,OACE,UAAC,IAAD,CACEC,MAAI,EACJC,QAASP,EACT,kBAAgB,qBAChB,mBAAiB,2BAJnB,WAME,UAAC,IAAD,CAAaQ,GAAG,qBAAhB,4BAEE,SAAC,IAAD,CACE,aAAW,QACXC,UAAWR,EAAQb,YACnBsB,QAASV,EACTW,KAAK,QAJP,UAME,SAAC,IAAD,UAGJ,UAAC,IAAD,CAAeF,UAAWR,EAAQf,KAAlC,WACE,SAAC,IAAD,wHAIA,SAAC,IAAD,CACE0B,MAAOR,EACPS,SAAU,SAAAC,GAAK,OAAIT,EAAOS,EAAMC,OAAOH,MAAxB,EACfI,YAAY,qBAEd,UAAC,IAAD,YACE,SAAC,IAAD,CACEC,QAAQ,YACRxB,MAAM,UACNyB,KAAK,SACLC,WAAS,EACTT,QAAS,WACPX,EAAMqB,aACI,KAARhB,GAAeiB,OAAOC,OAAOlB,QAAcmB,GAANnB,GAEvCJ,GACD,EAVH,qBAcA,SAAC,IAAD,CACEiB,QAAQ,YACRxB,MAAM,YACNiB,QAAS,kBAAMV,GAAN,EAHX,4BAWT,G","sources":["../../../plugins/linear-genome-view/src/LinearBasicDisplay/components/SetMaxHeight.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  Typography,\n  TextField,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nimport CloseIcon from '@mui/icons-material/Close'\n\nconst useStyles = makeStyles()(theme => ({\n  root: {\n    width: 500,\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  field: {\n    margin: theme.spacing(2),\n  },\n}))\n\nfunction SetMaxHeightDlg({\n  model,\n  handleClose,\n}: {\n  model: {\n    maxHeight?: number\n    setMaxHeight: Function\n  }\n  handleClose: () => void\n}) {\n  const { classes } = useStyles()\n  const { maxHeight = '' } = model\n  const [max, setMax] = useState(`${maxHeight}`)\n\n  return (\n    <Dialog\n      open\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        Filter options\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={handleClose}\n          size=\"large\"\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent className={classes.root}>\n        <Typography>\n          Set max height for the track. For example, you can increase this if\n          the layout says &quot;Max height reached&quot;\n        </Typography>\n        <TextField\n          value={max}\n          onChange={event => setMax(event.target.value)}\n          placeholder=\"Enter max score\"\n        />\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            autoFocus\n            onClick={() => {\n              model.setMaxHeight(\n                max !== '' && !Number.isNaN(+max) ? +max : undefined,\n              )\n              handleClose()\n            }}\n          >\n            Submit\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => handleClose()}\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default observer(SetMaxHeightDlg)\n"],"names":["useStyles","makeStyles","theme","root","width","closeButton","position","right","spacing","top","color","palette","grey","field","margin","observer","model","handleClose","classes","maxHeight","useState","max","setMax","open","onClose","id","className","onClick","size","value","onChange","event","target","placeholder","variant","type","autoFocus","setMaxHeight","Number","isNaN","undefined"],"sourceRoot":""}