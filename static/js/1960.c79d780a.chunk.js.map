{"version":3,"file":"static/js/1960.c79d780a.chunk.js","mappings":"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","sources":["../../../packages/core/ui/ResizeBar.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/faceted/FacetedHeader.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/faceted/FacetFilters.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/faceted/FacetedSelector.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/faceted/util.ts","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/faceted/FacetedDialog.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport ResizeHandle from './ResizeHandle'\n\nconst useStyles = makeStyles()(theme => ({\n  resizeBar: {\n    background: theme.palette.action.disabledBackground,\n    height: 12,\n    position: 'relative',\n    overflow: 'hidden',\n  },\n  tick: {\n    position: 'absolute',\n    height: '100%',\n    pointerEvents: 'none',\n    background: theme.palette.divider,\n    width: 1,\n  },\n  hiddenTick: {\n    position: 'absolute',\n    height: '100%',\n    width: 5,\n  },\n}))\n\nexport function useResizeBar() {\n  const ref = useRef<HTMLDivElement>(null)\n  const [scrollLeft, setScrollLeft] = useState(0)\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const elt = ref.current?.querySelector('.MuiDataGrid-virtualScroller')\n      if (elt) {\n        setScrollLeft(elt.scrollLeft)\n      }\n    }, 100)\n    return () => {\n      clearInterval(timer)\n    }\n  }, [])\n  return { ref, scrollLeft }\n}\n\nfunction Tick({\n  left,\n  scrollLeft,\n  idx,\n  onDrag,\n}: {\n  idx: number\n  left: number\n  scrollLeft: number\n  onDrag: (arg: number, idx: number) => void\n}) {\n  const { classes } = useStyles()\n  const cb = useCallback(\n    (d: number) => {\n      onDrag(d, idx)\n    },\n    [idx, onDrag],\n  )\n\n  // has an invisible wider than tick mark (1px) clickable area (5px)\n  return (\n    <>\n      <ResizeHandle\n        onDrag={cb}\n        vertical\n        className={classes.hiddenTick}\n        style={{ left: left - scrollLeft - 2.5 }}\n      />\n      <div style={{ left: left - scrollLeft }} className={classes.tick} />\n    </>\n  )\n}\n\nexport default function ResizeBar({\n  widths,\n  setWidths,\n  checkbox,\n  scrollLeft = 0,\n}: {\n  widths: number[]\n  setWidths: (arg: number[]) => void\n  checkbox?: boolean\n  scrollLeft?: number\n}) {\n  const { classes } = useStyles()\n  const offsets = [] as number[]\n  widths.reduce((a, b, i) => (offsets[i] = a + b), checkbox ? 52 : 0)\n\n  const onDrag = useCallback(\n    (distance: number, idx: number) => {\n      const newWidths = [...widths]\n      // mui doesn't allow columns smaller than 50\n      newWidths[idx] = Math.max(newWidths[idx] + distance, 50)\n      setWidths(newWidths)\n    },\n    [widths, setWidths],\n  )\n  return (\n    <div className={classes.resizeBar}>\n      {offsets.map((left, i) => (\n        <Tick\n          key={i}\n          left={i === offsets.length - 1 ? left - 3 : left}\n          onDrag={onDrag}\n          idx={i}\n          scrollLeft={scrollLeft}\n        />\n      ))}\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { Grid, IconButton, InputAdornment, TextField } from '@mui/material'\nimport { Menu } from '@jbrowse/core/ui'\n\n// icons\nimport ClearIcon from '@mui/icons-material/Clear'\nimport MoreVert from '@mui/icons-material/MoreVert'\n\n// locals\nimport ShoppingCart from '../ShoppingCart'\nimport { HierarchicalTrackSelectorModel } from '../../model'\n\nexport default function FacetedHeader({\n  setFilterText,\n  setUseShoppingCart,\n  setHideSparse,\n  hideSparse,\n  useShoppingCart,\n  filterText,\n  model,\n}: {\n  setFilterText: (arg: string) => void\n  setUseShoppingCart: (arg: boolean) => void\n  setHideSparse: (arg: boolean) => void\n  filterText: string\n  useShoppingCart: boolean\n  hideSparse: boolean\n  model: HierarchicalTrackSelectorModel\n}) {\n  const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null)\n\n  return (\n    <>\n      <Grid container spacing={4} alignItems=\"center\">\n        <Grid item>\n          <TextField\n            label=\"Search...\"\n            value={filterText}\n            onChange={event => setFilterText(event.target.value)}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton onClick={() => setFilterText('')}>\n                    <ClearIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Grid>\n\n        <Grid item>\n          <IconButton onClick={event => setAnchorEl(event.currentTarget)}>\n            <MoreVert />\n          </IconButton>\n        </Grid>\n        <Grid item>\n          <ShoppingCart model={model} />\n        </Grid>\n      </Grid>\n      <Menu\n        anchorEl={anchorEl}\n        open={!!anchorEl}\n        onClose={() => setAnchorEl(null)}\n        onMenuItemClick={(_event, callback) => {\n          callback()\n          setAnchorEl(null)\n        }}\n        menuItems={[\n          {\n            label: 'Add tracks to selection instead of turning them on/off',\n            onClick: () => setUseShoppingCart(!useShoppingCart),\n            type: 'checkbox',\n            checked: useShoppingCart,\n          },\n          {\n            label: 'Hide sparse metadata columns',\n            onClick: () => setHideSparse(!hideSparse),\n            checked: hideSparse,\n            type: 'checkbox',\n          },\n        ]}\n      />\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport {\n  Typography,\n  FormControl,\n  Select,\n  IconButton,\n  Tooltip,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\n// icon\nimport ClearIcon from '@mui/icons-material/Clear'\nimport MinimizeIcon from '@mui/icons-material/Minimize'\nimport AddIcon from '@mui/icons-material/Add'\n\nconst useStyles = makeStyles()(theme => ({\n  facet: {\n    margin: 0,\n    marginLeft: theme.spacing(2),\n  },\n  select: {\n    marginBottom: theme.spacing(2),\n  },\n}))\n\nfunction FacetFilter({\n  column,\n  vals,\n  width,\n  dispatch,\n  filters,\n}: {\n  column: { field: string }\n  vals: [string, number][]\n  width: number\n  dispatch: (arg: { key: string; val: string[] }) => void\n  filters: Record<string, string[]>\n}) {\n  const { classes } = useStyles()\n  const [visible, setVisible] = useState(true)\n  return (\n    <FormControl key={column.field} className={classes.facet} style={{ width }}>\n      <div style={{ display: 'flex' }}>\n        <Typography>{column.field}</Typography>\n        <Tooltip title=\"Clear selection on this facet filter\">\n          <IconButton\n            onClick={() => {\n              dispatch({ key: column.field, val: [] })\n            }}\n            size=\"small\"\n          >\n            <ClearIcon />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Minimize/expand this facet filter\">\n          <IconButton onClick={() => setVisible(!visible)} size=\"small\">\n            {visible ? <MinimizeIcon /> : <AddIcon />}\n          </IconButton>\n        </Tooltip>\n      </div>\n      {visible ? (\n        <Select\n          multiple\n          native\n          className={classes.select}\n          value={filters[column.field]}\n          onChange={event => {\n            // @ts-ignore\n            const { options } = event.target\n            const val: string[] = []\n            const len = options.length\n            for (let i = 0; i < len; i++) {\n              if (options[i].selected) {\n                val.push(options[i].value)\n              }\n            }\n            dispatch({ key: column.field, val })\n          }}\n        >\n          {vals\n            .sort((a, b) => a[0].localeCompare(b[0]))\n            .map(([name, count]) => (\n              <option key={name} value={name}>\n                {name} ({count})\n              </option>\n            ))}\n        </Select>\n      ) : null}\n    </FormControl>\n  )\n}\n\nexport default function FacetFilters({\n  rows,\n  columns,\n  dispatch,\n  filters,\n  width,\n}: {\n  rows: Record<string, unknown>[]\n  filters: Record<string, string[]>\n  columns: { field: string }[]\n  dispatch: (arg: { key: string; val: string[] }) => void\n  width: number\n}) {\n  const facets = columns.slice(1)\n  const uniqs = facets.map(() => new Map<string, number>())\n  rows.forEach(row => {\n    facets.forEach((column, index) => {\n      const elt = uniqs[index]\n      const key = `${row[column.field] || ''}`\n      const val = elt.get(key)\n      // we don't allow filtering on empty yet\n      if (key) {\n        if (val !== undefined) {\n          elt.set(key, val + 1)\n        } else {\n          elt.set(key, 1)\n        }\n      }\n    })\n  })\n\n  return (\n    <div>\n      {facets.map((column, index) => (\n        <FacetFilter\n          key={column.field}\n          vals={Array.from(uniqs[index])}\n          column={column}\n          width={width}\n          dispatch={dispatch}\n          filters={filters}\n        />\n      ))}\n    </div>\n  )\n}\n","import React, { useMemo, useState, useEffect, useReducer } from 'react'\nimport { IconButton } from '@mui/material'\nimport { transaction } from 'mobx'\nimport { observer } from 'mobx-react'\nimport { getRoot, resolveIdentifier } from 'mobx-state-tree'\nimport { DataGrid, GridCellParams } from '@mui/x-data-grid'\n\n// jbrowse\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport { ResizeHandle, SanitizedHTML } from '@jbrowse/core/ui'\nimport JBrowseMenu from '@jbrowse/core/ui/Menu'\nimport ResizeBar, { useResizeBar } from '@jbrowse/core/ui/ResizeBar'\nimport {\n  getEnv,\n  getSession,\n  measureGridWidth,\n  useDebounce,\n} from '@jbrowse/core/util'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\n\n// icons\nimport MoreHoriz from '@mui/icons-material/MoreHoriz'\n\n// locals\nimport { matches, HierarchicalTrackSelectorModel } from '../../model'\nimport FacetedHeader from './FacetedHeader'\nimport FacetFilters from './FacetFilters'\nimport { getRootKeys } from './util'\n\nconst nonMetadataKeys = ['category', 'adapter', 'description'] as const\n\nexport interface InfoArgs {\n  target: HTMLElement\n  id: string\n  conf: AnyConfigurationModel\n}\n\nconst frac = 0.75\n\nexport default observer(function FacetedSelector({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { assemblyNames, view, selection } = model\n  const { pluginManager } = getEnv(model)\n  const { ref, scrollLeft } = useResizeBar()\n\n  const [filterText, setFilterText] = useState('')\n  const [info, setInfo] = useState<InfoArgs>()\n  const [useShoppingCart, setUseShoppingCart] = useState(false)\n  const [hideSparse, setHideSparse] = useState(true)\n  const [panelWidth, setPanelWidth] = useState(400)\n\n  const assemblyName = assemblyNames[0]\n  const session = getSession(model)\n  const filterDebounced = useDebounce(filterText, 400)\n  const [filters, dispatch] = useReducer(\n    (\n      state: Record<string, string[]>,\n      update: { key: string; val: string[] },\n    ) => {\n      return { ...state, [update.key]: update.val }\n    },\n    {},\n  )\n\n  const rows = useMemo(() => {\n    // metadata is spread onto the object for easier access and sorting\n    // by the mui data grid (it's unable to sort by nested objects)\n    return model\n      .trackConfigurations(assemblyName)\n      .filter(conf => matches(filterDebounced, conf, session))\n      .map(track => {\n        const metadata = readConfObject(track, 'metadata')\n        return {\n          id: track.trackId,\n          conf: track,\n          name: getTrackName(track, session),\n          category: readConfObject(track, 'category')?.join(', '),\n          adapter: readConfObject(track, 'adapter')?.type,\n          description: readConfObject(track, 'description'),\n          metadata,\n          ...metadata,\n        }\n      })\n  }, [assemblyName, model, filterDebounced, session])\n\n  const filteredNonMetadataKeys = useMemo(\n    () =>\n      nonMetadataKeys.filter(f =>\n        !hideSparse ? true : rows.map(r => r[f]).filter(f => !!f).length > 5,\n      ),\n    [hideSparse, rows],\n  )\n\n  const filteredMetadataKeys = useMemo(\n    () =>\n      [...new Set(rows.map(row => getRootKeys(row.metadata)).flat())].filter(\n        f =>\n          !hideSparse\n            ? true\n            : rows.map(r => r.metadata[f]).filter(f => !!f).length > 5,\n      ),\n    [hideSparse, rows],\n  )\n\n  const fields = useMemo(() => {\n    return ['name', ...filteredNonMetadataKeys, ...filteredMetadataKeys]\n  }, [filteredNonMetadataKeys, filteredMetadataKeys])\n\n  const [widths, setWidths] = useState({\n    name:\n      measureGridWidth(\n        rows.map(r => r.name),\n        { maxWidth: 500, stripHTML: true },\n      ) + 15,\n    ...Object.fromEntries(\n      filteredNonMetadataKeys.map(e => [\n        e,\n        measureGridWidth(\n          rows.map(r => r[e]),\n          { maxWidth: 400, stripHTML: true },\n        ),\n      ]),\n    ),\n    ...Object.fromEntries(\n      filteredMetadataKeys.map(e => [\n        e,\n        measureGridWidth(\n          rows.map(r => r.metadata[e]),\n          { maxWidth: 400, stripHTML: true },\n        ),\n      ]),\n    ),\n  } as { [key: string]: number })\n\n  const [visible, setVisible] = useState(\n    Object.fromEntries(fields.map(c => [c, true])),\n  )\n  useEffect(() => {\n    setVisible(visible => ({\n      ...Object.fromEntries(fields.map(c => [c, true])),\n      ...visible,\n    }))\n  }, [fields])\n\n  useEffect(() => {\n    setWidths(widths => ({\n      name: widths.name,\n      ...Object.fromEntries(\n        filteredNonMetadataKeys\n          .filter(f => visible[f])\n          .map(e => [\n            e,\n            measureGridWidth(\n              rows.map(r => r[e]),\n              { stripHTML: true, maxWidth: 400 },\n            ),\n          ]),\n      ),\n      ...Object.fromEntries(\n        filteredMetadataKeys\n          .filter(f => visible[f])\n          .map(e => [\n            e,\n            measureGridWidth(\n              rows.map(r => r.metadata[e]),\n              { stripHTML: true, maxWidth: 400 },\n            ),\n          ]),\n      ),\n    }))\n  }, [filteredMetadataKeys, visible, filteredNonMetadataKeys, hideSparse, rows])\n\n  const widthsDebounced = useDebounce(widths, 400)\n\n  const columns = [\n    {\n      field: 'name',\n      hideable: false,\n      renderCell: (params: GridCellParams) => {\n        const { value, id, row } = params\n        return (\n          <>\n            <SanitizedHTML html={value} />\n            <IconButton\n              onClick={e =>\n                setInfo({\n                  target: e.currentTarget,\n                  id: id as string,\n                  conf: row.conf,\n                })\n              }\n            >\n              <MoreHoriz />\n            </IconButton>\n          </>\n        )\n      },\n      width: widthsDebounced.name || 100, // can be undefined before useEffect update\n    },\n    ...filteredNonMetadataKeys.map(e => ({\n      field: e,\n      width: widthsDebounced[e] || 100, // can be undefined before useEffect update\n      renderCell: (params: GridCellParams) => {\n        const { value } = params\n        return value ? <SanitizedHTML html={value} /> : ''\n      },\n    })),\n    ...filteredMetadataKeys.map(e => ({\n      field: e,\n      width: widthsDebounced[e] || 100, // can be undefined before useEffect update\n      renderCell: (params: GridCellParams) => {\n        const { value } = params\n        return value ? <SanitizedHTML html={value} /> : ''\n      },\n    })),\n  ]\n\n  const shownTrackIds = view.tracks.map(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (t: any) => t.configuration.trackId,\n  ) as string[]\n\n  const arrFilters = Object.entries(filters).filter(f => f[1].length > 0)\n  return (\n    <>\n      {info ? (\n        <JBrowseMenu\n          anchorEl={info?.target}\n          menuItems={session.getTrackActionMenuItems?.(info.conf) || []}\n          onMenuItemClick={(_event, callback) => {\n            callback()\n            setInfo(undefined)\n          }}\n          open={!!info}\n          onClose={() => setInfo(undefined)}\n        />\n      ) : null}\n      <FacetedHeader\n        setHideSparse={setHideSparse}\n        setFilterText={setFilterText}\n        setUseShoppingCart={setUseShoppingCart}\n        hideSparse={hideSparse}\n        filterText={filterText}\n        useShoppingCart={useShoppingCart}\n        model={model}\n      />\n\n      <div\n        ref={ref}\n        style={{\n          display: 'flex',\n          overflow: 'hidden',\n          height: window.innerHeight * frac,\n          width: window.innerWidth * frac,\n        }}\n      >\n        <div\n          style={{\n            height: window.innerHeight * frac,\n            width: window.innerWidth * frac - panelWidth,\n          }}\n        >\n          <ResizeBar\n            checkbox\n            widths={Object.values(widths)}\n            setWidths={newWidths =>\n              setWidths(\n                Object.fromEntries(\n                  Object.entries(widths).map((entry, idx) => [\n                    entry[0],\n                    newWidths[idx],\n                  ]),\n                ),\n              )\n            }\n            scrollLeft={scrollLeft}\n          />\n          <DataGrid\n            rows={rows.filter(row =>\n              arrFilters.every(([key, val]) => val.includes(row[key])),\n            )}\n            columnVisibilityModel={visible}\n            onColumnVisibilityModelChange={newModel => setVisible(newModel)}\n            headerHeight={35}\n            checkboxSelection\n            disableSelectionOnClick\n            keepNonExistentRowsSelected\n            onSelectionModelChange={userSelectedIds => {\n              if (!useShoppingCart) {\n                const a1 = shownTrackIds\n                const a2 = userSelectedIds as string[]\n                // synchronize the user selection with the view\n                // see share https://stackoverflow.com/a/33034768/2129219\n                transaction(() => {\n                  a1.filter(x => !a2.includes(x)).map(t => view.hideTrack(t))\n                  a2.filter(x => !a1.includes(x)).map(t => view.showTrack(t))\n                })\n              } else {\n                const root = getRoot(model)\n                const schema = pluginManager.pluggableConfigSchemaType('track')\n                const tracks = userSelectedIds.map(id =>\n                  resolveIdentifier(schema, root, id),\n                )\n                model.setSelection(tracks)\n              }\n            }}\n            selectionModel={\n              useShoppingCart ? selection.map(s => s.trackId) : shownTrackIds\n            }\n            columns={columns}\n            rowHeight={25}\n          />\n        </div>\n        <ResizeHandle\n          vertical\n          onDrag={dist => setPanelWidth(panelWidth - dist)}\n          style={{ background: 'grey', width: 5 }}\n        />\n        <div\n          style={{ width: panelWidth, overflowY: 'auto', overflowX: 'hidden' }}\n        >\n          <FacetFilters\n            width={panelWidth - 10}\n            rows={rows}\n            columns={columns}\n            dispatch={dispatch}\n            filters={filters}\n          />\n        </div>\n      </div>\n    </>\n  )\n})\n","export function getRootKeys(obj: Record<string, unknown>) {\n  return Object.entries(obj)\n    .map(([key, val]) => (typeof val === 'string' ? key : ''))\n    .filter(f => !!f)\n}\n","import React from 'react'\nimport { DialogContent } from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\n\n// locals\nimport { HierarchicalTrackSelectorModel } from '../../model'\nimport FacetedSelector from './FacetedSelector'\n\nfunction FacetedDlg(props: {\n  handleClose: () => void\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { handleClose } = props\n  return (\n    <Dialog\n      open\n      onClose={handleClose}\n      maxWidth=\"xl\"\n      title=\"Faceted track selector\"\n    >\n      <DialogContent>\n        <FacetedSelector {...props} />\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default observer(FacetedDlg)\n"],"names":["useStyles","makeStyles","theme","resizeBar","background","palette","action","disabledBackground","height","position","overflow","tick","pointerEvents","divider","width","hiddenTick","useResizeBar","ref","useRef","_useState","useState","_useState2","_slicedToArray","scrollLeft","setScrollLeft","useEffect","timer","setInterval","_ref$current","elt","current","querySelector","clearInterval","Tick","_ref","left","idx","onDrag","classes","cb","useCallback","d","_jsxs","_Fragment","children","_jsx","ResizeHandle","vertical","className","style","ResizeBar","_ref2","widths","setWidths","checkbox","_ref2$scrollLeft","offsets","reduce","a","b","i","distance","newWidths","_toConsumableArray","Math","max","map","length","FacetedHeader","setFilterText","setUseShoppingCart","setHideSparse","hideSparse","useShoppingCart","filterText","model","anchorEl","setAnchorEl","Grid","container","spacing","alignItems","item","TextField","label","value","onChange","event","target","InputProps","endAdornment","InputAdornment","IconButton","onClick","ClearIcon","currentTarget","MoreVert","ShoppingCart","Menu","open","onClose","onMenuItemClick","_event","callback","menuItems","type","checked","facet","margin","marginLeft","select","marginBottom","FacetFilter","column","vals","dispatch","filters","visible","setVisible","FormControl","display","Typography","field","Tooltip","title","key","val","size","MinimizeIcon","AddIcon","Select","multiple","native","options","len","selected","push","sort","localeCompare","_ref3","name","count","FacetFilters","_ref4","rows","columns","facets","slice","uniqs","Map","forEach","row","index","concat","get","undefined","set","Array","from","nonMetadataKeys","frac","observer","_session$getTrackActi","assemblyNames","view","selection","pluginManager","getEnv","_useResizeBar","_useState3","_useState4","info","setInfo","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","panelWidth","setPanelWidth","assemblyName","session","getSession","filterDebounced","useDebounce","_useReducer","useReducer","state","update","_objectSpread","_defineProperty","_useReducer2","useMemo","trackConfigurations","filter","conf","matches","track","_readConfObject","_readConfObject2","metadata","readConfObject","id","trackId","getTrackName","category","join","adapter","description","filteredNonMetadataKeys","f","r","filteredMetadataKeys","Set","obj","Object","entries","flat","fields","_useState11","measureGridWidth","maxWidth","stripHTML","fromEntries","e","_useState12","_useState13","c","_useState14","widthsDebounced","hideable","renderCell","params","SanitizedHTML","html","MoreHoriz","shownTrackIds","tracks","t","configuration","arrFilters","JBrowseMenu","getTrackActionMenuItems","call","window","innerHeight","innerWidth","values","entry","DataGrid","every","includes","columnVisibilityModel","onColumnVisibilityModelChange","newModel","headerHeight","checkboxSelection","disableSelectionOnClick","keepNonExistentRowsSelected","onSelectionModelChange","userSelectedIds","root","getRoot","schema","pluggableConfigSchemaType","resolveIdentifier","setSelection","a1","a2","transaction","x","hideTrack","showTrack","selectionModel","s","rowHeight","dist","overflowY","overflowX","props","handleClose","Dialog","DialogContent","FacetedSelector"],"sourceRoot":""}