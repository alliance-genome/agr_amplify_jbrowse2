{"version":3,"file":"static/js/1960.c79d780a.chunk.js","mappings":"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","sources":["../../../packages/core/ui/ResizeBar.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/faceted/FacetedHeader.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/faceted/FacetFilters.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/faceted/FacetedSelector.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/faceted/util.ts","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/faceted/FacetedDialog.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport ResizeHandle from './ResizeHandle'\n\nconst useStyles = makeStyles()(theme => ({\n  resizeBar: {\n    background: theme.palette.action.disabledBackground,\n    height: 12,\n    position: 'relative',\n    overflow: 'hidden',\n  },\n  tick: {\n    position: 'absolute',\n    height: '100%',\n    pointerEvents: 'none',\n    background: theme.palette.divider,\n    width: 1,\n  },\n  hiddenTick: {\n    position: 'absolute',\n    height: '100%',\n    width: 5,\n  },\n}))\n\nexport function useResizeBar() {\n  const ref = useRef<HTMLDivElement>(null)\n  const [scrollLeft, setScrollLeft] = useState(0)\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const elt = ref.current?.querySelector('.MuiDataGrid-virtualScroller')\n      if (elt) {\n        setScrollLeft(elt.scrollLeft)\n      }\n    }, 100)\n    return () => {\n      clearInterval(timer)\n    }\n  }, [])\n  return { ref, scrollLeft }\n}\n\nfunction Tick({\n  left,\n  scrollLeft,\n  idx,\n  onDrag,\n}: {\n  idx: number\n  left: number\n  scrollLeft: number\n  onDrag: (arg: number, idx: number) => void\n}) {\n  const { classes } = useStyles()\n  const cb = useCallback(\n    (d: number) => {\n      onDrag(d, idx)\n    },\n    [idx, onDrag],\n  )\n\n  // has an invisible wider than tick mark (1px) clickable area (5px)\n  return (\n    <>\n      <ResizeHandle\n        onDrag={cb}\n        vertical\n        className={classes.hiddenTick}\n        style={{ left: left - scrollLeft - 2.5 }}\n      />\n      <div style={{ left: left - scrollLeft }} className={classes.tick} />\n    </>\n  )\n}\n\nexport default function ResizeBar({\n  widths,\n  setWidths,\n  checkbox,\n  scrollLeft = 0,\n}: {\n  widths: number[]\n  setWidths: (arg: number[]) => void\n  checkbox?: boolean\n  scrollLeft?: number\n}) {\n  const { classes } = useStyles()\n  const offsets = [] as number[]\n  widths.reduce((a, b, i) => (offsets[i] = a + b), checkbox ? 52 : 0)\n\n  const onDrag = useCallback(\n    (distance: number, idx: number) => {\n      const newWidths = [...widths]\n      // mui doesn't allow columns smaller than 50\n      newWidths[idx] = Math.max(newWidths[idx] + distance, 50)\n      setWidths(newWidths)\n    },\n    [widths, setWidths],\n  )\n  return (\n    <div className={classes.resizeBar}>\n      {offsets.map((left, i) => (\n        <Tick\n          key={i}\n          left={i === offsets.length - 1 ? left - 3 : left}\n          onDrag={onDrag}\n          idx={i}\n          scrollLeft={scrollLeft}\n        />\n      ))}\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { Grid, IconButton, InputAdornment, TextField } from '@mui/material'\nimport { Menu } from '@jbrowse/core/ui'\n\n// icons\nimport ClearIcon from '@mui/icons-material/Clear'\nimport MoreVert from '@mui/icons-material/MoreVert'\n\n// locals\nimport ShoppingCart from '../ShoppingCart'\nimport { HierarchicalTrackSelectorModel } from '../../model'\n\nexport default function FacetedHeader({\n  setFilterText,\n  setUseShoppingCart,\n  setHideSparse,\n  hideSparse,\n  useShoppingCart,\n  filterText,\n  model,\n}: {\n  setFilterText: (arg: string) => void\n  setUseShoppingCart: (arg: boolean) => void\n  setHideSparse: (arg: boolean) => void\n  filterText: string\n  useShoppingCart: boolean\n  hideSparse: boolean\n  model: HierarchicalTrackSelectorModel\n}) {\n  const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null)\n\n  return (\n    <>\n      <Grid container spacing={4} alignItems=\"center\">\n        <Grid item>\n          <TextField\n            label=\"Search...\"\n            value={filterText}\n            onChange={event => setFilterText(event.target.value)}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton onClick={() => setFilterText('')}>\n                    <ClearIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Grid>\n\n        <Grid item>\n          <IconButton onClick={event => setAnchorEl(event.currentTarget)}>\n            <MoreVert />\n          </IconButton>\n        </Grid>\n        <Grid item>\n          <ShoppingCart model={model} />\n        </Grid>\n      </Grid>\n      <Menu\n        anchorEl={anchorEl}\n        open={!!anchorEl}\n        onClose={() => setAnchorEl(null)}\n        onMenuItemClick={(_event, callback) => {\n          callback()\n          setAnchorEl(null)\n        }}\n        menuItems={[\n          {\n            label: 'Add tracks to selection instead of turning them on/off',\n            onClick: () => setUseShoppingCart(!useShoppingCart),\n            type: 'checkbox',\n            checked: useShoppingCart,\n          },\n          {\n            label: 'Hide sparse metadata columns',\n            onClick: () => setHideSparse(!hideSparse),\n            checked: hideSparse,\n            type: 'checkbox',\n          },\n        ]}\n      />\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport {\n  Typography,\n  FormControl,\n  Select,\n  IconButton,\n  Tooltip,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\n// icon\nimport ClearIcon from '@mui/icons-material/Clear'\nimport MinimizeIcon from '@mui/icons-material/Minimize'\nimport AddIcon from '@mui/icons-material/Add'\n\nconst useStyles = makeStyles()(theme => ({\n  facet: {\n    margin: 0,\n    marginLeft: theme.spacing(2),\n  },\n  select: {\n    marginBottom: theme.spacing(2),\n  },\n}))\n\nfunction FacetFilter({\n  column,\n  vals,\n  width,\n  dispatch,\n  filters,\n}: {\n  column: { field: string }\n  vals: [string, number][]\n  width: number\n  dispatch: (arg: { key: string; val: string[] }) => void\n  filters: Record<string, string[]>\n}) {\n  const { classes } = useStyles()\n  const [visible, setVisible] = useState(true)\n  return (\n    <FormControl key={column.field} className={classes.facet} style={{ width }}>\n      <div style={{ display: 'flex' }}>\n        <Typography>{column.field}</Typography>\n        <Tooltip title=\"Clear selection on this facet filter\">\n          <IconButton\n            onClick={() => {\n              dispatch({ key: column.field, val: [] })\n            }}\n            size=\"small\"\n          >\n            <ClearIcon />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Minimize/expand this facet filter\">\n          <IconButton onClick={() => setVisible(!visible)} size=\"small\">\n            {visible ? <MinimizeIcon /> : <AddIcon />}\n          </IconButton>\n        </Tooltip>\n      </div>\n      {visible ? (\n        <Select\n          multiple\n          native\n          className={classes.select}\n          value={filters[column.field]}\n          onChange={event => {\n            // @ts-ignore\n            const { options } = event.target\n            const val: string[] = []\n            const len = options.length\n            for (let i = 0; i < len; i++) {\n              if (options[i].selected) {\n                val.push(options[i].value)\n              }\n            }\n            dispatch({ key: column.field, val })\n          }}\n        >\n          {vals\n            .sort((a, b) => a[0].localeCompare(b[0]))\n            .map(([name, count]) => (\n              <option key={name} value={name}>\n                {name} ({count})\n              </option>\n            ))}\n        </Select>\n      ) : null}\n    </FormControl>\n  )\n}\n\nexport default function FacetFilters({\n  rows,\n  columns,\n  dispatch,\n  filters,\n  width,\n}: {\n  rows: Record<string, unknown>[]\n  filters: Record<string, string[]>\n  columns: { field: string }[]\n  dispatch: (arg: { key: string; val: string[] }) => void\n  width: number\n}) {\n  const facets = columns.slice(1)\n  const uniqs = facets.map(() => new Map<string, number>())\n  rows.forEach(row => {\n    facets.forEach((column, index) => {\n      const elt = uniqs[index]\n      const key = `${row[column.field] || ''}`\n      const val = elt.get(key)\n      // we don't allow filtering on empty yet\n      if (key) {\n        if (val !== undefined) {\n          elt.set(key, val + 1)\n        } else {\n          elt.set(key, 1)\n        }\n      }\n    })\n  })\n\n  return (\n    <div>\n      {facets.map((column, index) => (\n        <FacetFilter\n          key={column.field}\n          vals={Array.from(uniqs[index])}\n          column={column}\n          width={width}\n          dispatch={dispatch}\n          filters={filters}\n        />\n      ))}\n    </div>\n  )\n}\n","import React, { useMemo, useState, useEffect, useReducer } from 'react'\nimport { IconButton } from '@mui/material'\nimport { transaction } from 'mobx'\nimport { observer } from 'mobx-react'\nimport { getRoot, resolveIdentifier } from 'mobx-state-tree'\nimport { DataGrid, GridCellParams } from '@mui/x-data-grid'\n\n// jbrowse\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport { ResizeHandle, SanitizedHTML } from '@jbrowse/core/ui'\nimport JBrowseMenu from '@jbrowse/core/ui/Menu'\nimport ResizeBar, { useResizeBar } from '@jbrowse/core/ui/ResizeBar'\nimport {\n  getEnv,\n  getSession,\n  measureGridWidth,\n  useDebounce,\n} from '@jbrowse/core/util'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\n\n// icons\nimport MoreHoriz from '@mui/icons-material/MoreHoriz'\n\n// locals\nimport { matches, HierarchicalTrackSelectorModel } from '../../model'\nimport FacetedHeader from './FacetedHeader'\nimport FacetFilters from './FacetFilters'\nimport { getRootKeys } from './util'\n\nconst nonMetadataKeys = ['category', 'adapter', 'description'] as const\n\nexport interface InfoArgs {\n  target: HTMLElement\n  id: string\n  conf: AnyConfigurationModel\n}\n\nconst frac = 0.75\n\nexport default observer(function FacetedSelector({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { assemblyNames, view, selection } = model\n  const { pluginManager } = getEnv(model)\n  const { ref, scrollLeft } = useResizeBar()\n\n  const [filterText, setFilterText] = useState('')\n  const [info, setInfo] = useState<InfoArgs>()\n  const [useShoppingCart, setUseShoppingCart] = useState(false)\n  const [hideSparse, setHideSparse] = useState(true)\n  const [panelWidth, setPanelWidth] = useState(400)\n\n  const assemblyName = assemblyNames[0]\n  const session = getSession(model)\n  const filterDebounced = useDebounce(filterText, 400)\n  const [filters, dispatch] = useReducer(\n    (\n      state: Record<string, string[]>,\n      update: { key: string; val: string[] },\n    ) => {\n      return { ...state, [update.key]: update.val }\n    },\n    {},\n  )\n\n  const rows = useMemo(() => {\n    // metadata is spread onto the object for easier access and sorting\n    // by the mui data grid (it's unable to sort by nested objects)\n    return model\n      .trackConfigurations(assemblyName)\n      .filter(conf => matches(filterDebounced, conf, session))\n      .map(track => {\n        const metadata = readConfObject(track, 'metadata')\n        return {\n          id: track.trackId,\n          conf: track,\n          name: getTrackName(track, session),\n          category: readConfObject(track, 'category')?.join(', '),\n          adapter: readConfObject(track, 'adapter')?.type,\n          description: readConfObject(track, 'description'),\n          metadata,\n          ...metadata,\n        }\n      })\n  }, [assemblyName, model, filterDebounced, session])\n\n  const filteredNonMetadataKeys = useMemo(\n    () =>\n      nonMetadataKeys.filter(f =>\n        !hideSparse ? true : rows.map(r => r[f]).filter(f => !!f).length > 5,\n      ),\n    [hideSparse, rows],\n  )\n\n  const filteredMetadataKeys = useMemo(\n    () =>\n      [...new Set(rows.map(row => getRootKeys(row.metadata)).flat())].filter(\n        f =>\n          !hideSparse\n            ? true\n            : rows.map(r => r.metadata[f]).filter(f => !!f).length > 5,\n      ),\n    [hideSparse, rows],\n  )\n\n  const fields = useMemo(() => {\n    return ['name', ...filteredNonMetadataKeys, ...filteredMetadataKeys]\n  }, [filteredNonMetadataKeys, filteredMetadataKeys])\n\n  const [widths, setWidths] = useState({\n    name:\n      measureGridWidth(\n        rows.map(r => r.name),\n        { maxWidth: 500, stripHTML: true },\n      ) + 15,\n    ...Object.fromEntries(\n      filteredNonMetadataKeys.map(e => [\n        e,\n        measureGridWidth(\n          rows.map(r => r[e]),\n          { maxWidth: 400, stripHTML: true },\n        ),\n      ]),\n    ),\n    ...Object.fromEntries(\n      filteredMetadataKeys.map(e => [\n        e,\n        measureGridWidth(\n          rows.map(r => r.metadata[e]),\n          { maxWidth: 400, stripHTML: true },\n        ),\n      ]),\n    ),\n  } as { [key: string]: number })\n\n  const [visible, setVisible] = useState(\n    Object.fromEntries(fields.map(c => [c, true])),\n  )\n  useEffect(() => {\n    setVisible(visible => ({\n      ...Object.fromEntries(fields.map(c => [c, true])),\n      ...visible,\n    }))\n  }, [fields])\n\n  useEffect(() => {\n    setWidths(widths => ({\n      name: widths.name,\n      ...Object.fromEntries(\n        filteredNonMetadataKeys\n          .filter(f => visible[f])\n          .map(e => [\n            e,\n            measureGridWidth(\n              rows.map(r => r[e]),\n              { stripHTML: true, maxWidth: 400 },\n            ),\n          ]),\n      ),\n      ...Object.fromEntries(\n        filteredMetadataKeys\n          .filter(f => visible[f])\n          .map(e => [\n            e,\n            measureGridWidth(\n              rows.map(r => r.metadata[e]),\n              { stripHTML: true, maxWidth: 400 },\n            ),\n          ]),\n      ),\n    }))\n  }, [filteredMetadataKeys, visible, filteredNonMetadataKeys, hideSparse, rows])\n\n  const widthsDebounced = useDebounce(widths, 400)\n\n  const columns = [\n    {\n      field: 'name',\n      hideable: false,\n      renderCell: (params: GridCellParams) => {\n        const { value, id, row } = params\n        return (\n          <>\n            <SanitizedHTML html={value} />\n            <IconButton\n              onClick={e =>\n                setInfo({\n                  target: e.currentTarget,\n                  id: id as string,\n                  conf: row.conf,\n                })\n              }\n            >\n              <MoreHoriz />\n            </IconButton>\n          </>\n        )\n      },\n      width: widthsDebounced.name || 100, // can be undefined before useEffect update\n    },\n    ...filteredNonMetadataKeys.map(e => ({\n      field: e,\n      width: widthsDebounced[e] || 100, // can be undefined before useEffect update\n      renderCell: (params: GridCellParams) => {\n        const { value } = params\n        return value ? <SanitizedHTML html={value} /> : ''\n      },\n    })),\n    ...filteredMetadataKeys.map(e => ({\n      field: e,\n      width: widthsDebounced[e] || 100, // can be undefined before useEffect update\n      renderCell: (params: GridCellParams) => {\n        const { value } = params\n        return value ? <SanitizedHTML html={value} /> : ''\n      },\n    })),\n  ]\n\n  const shownTrackIds = view.tracks.map(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (t: any) => t.configuration.trackId,\n  ) as string[]\n\n  const arrFilters = Object.entries(filters).filter(f => f[1].length > 0)\n  return (\n    <>\n      {info ? (\n        <JBrowseMenu\n          anchorEl={info?.target}\n          menuItems={session.getTrackActionMenuItems?.(info.conf) || []}\n          onMenuItemClick={(_event, callback) => {\n            callback()\n            setInfo(undefined)\n          }}\n          open={!!info}\n          onClose={() => setInfo(undefined)}\n        />\n      ) : null}\n      <FacetedHeader\n        setHideSparse={setHideSparse}\n        setFilterText={setFilterText}\n        setUseShoppingCart={setUseShoppingCart}\n        hideSparse={hideSparse}\n        filterText={filterText}\n        useShoppingCart={useShoppingCart}\n        model={model}\n      />\n\n      <div\n        ref={ref}\n        style={{\n          display: 'flex',\n          overflow: 'hidden',\n          height: window.innerHeight * frac,\n          width: window.innerWidth * frac,\n        }}\n      >\n        <div\n          style={{\n            height: window.innerHeight * frac,\n            width: window.innerWidth * frac - panelWidth,\n          }}\n        >\n          <ResizeBar\n            checkbox\n            widths={Object.values(widths)}\n            setWidths={newWidths =>\n              setWidths(\n                Object.fromEntries(\n                  Object.entries(widths).map((entry, idx) => [\n                    entry[0],\n                    newWidths[idx],\n                  ]),\n                ),\n              )\n            }\n            scrollLeft={scrollLeft}\n          />\n          <DataGrid\n            rows={rows.filter(row =>\n              arrFilters.every(([key, val]) => val.includes(row[key])),\n            )}\n            columnVisibilityModel={visible}\n            onColumnVisibilityModelChange={newModel => setVisible(newModel)}\n            headerHeight={35}\n            checkboxSelection\n            disableSelectionOnClick\n            keepNonExistentRowsSelected\n            onSelectionModelChange={userSelectedIds => {\n              if (!useShoppingCart) {\n                const a1 = shownTrackIds\n                const a2 = userSelectedIds as string[]\n                // synchronize the user selection with the view\n                // see share https://stackoverflow.com/a/33034768/2129219\n                transaction(() => {\n                  a1.filter(x => !a2.includes(x)).map(t => view.hideTrack(t))\n                  a2.filter(x => !a1.includes(x)).map(t => view.showTrack(t))\n                })\n              } else {\n                const root = getRoot(model)\n                const schema = pluginManager.pluggableConfigSchemaType('track')\n                const tracks = userSelectedIds.map(id =>\n                  resolveIdentifier(schema, root, id),\n                )\n                model.setSelection(tracks)\n              }\n            }}\n            selectionModel={\n              useShoppingCart ? selection.map(s => s.trackId) : shownTrackIds\n            }\n            columns={columns}\n            rowHeight={25}\n          />\n        </div>\n        <ResizeHandle\n          vertical\n          onDrag={dist => setPanelWidth(panelWidth - dist)}\n          style={{ background: 'grey', width: 5 }}\n        />\n        <div\n          style={{ width: panelWidth, overflowY: 'auto', overflowX: 'hidden' }}\n        >\n          <FacetFilters\n            width={panelWidth - 10}\n            rows={rows}\n            columns={columns}\n            dispatch={dispatch}\n            filters={filters}\n          />\n        </div>\n      </div>\n    </>\n  )\n})\n","export function getRootKeys(obj: Record<string, unknown>) {\n  return Object.entries(obj)\n    .map(([key, val]) => (typeof val === 'string' ? key : ''))\n    .filter(f => !!f)\n}\n","import React from 'react'\nimport { DialogContent } from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\n\n// locals\nimport { HierarchicalTrackSelectorModel } from '../../model'\nimport FacetedSelector from './FacetedSelector'\n\nfunction FacetedDlg(props: {\n  handleClose: () => void\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { handleClose } = props\n  return (\n    <Dialog\n      open\n      onClose={handleClose}\n      maxWidth=\"xl\"\n      title=\"Faceted track selector\"\n    >\n      <DialogContent>\n        <FacetedSelector {...props} />\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default observer(FacetedDlg)\n"],"names":["useStyles","makeStyles","theme","resizeBar","background","palette","action","disabledBackground","height","position","overflow","tick","pointerEvents","divider","width","hiddenTick","useResizeBar","ref","useRef","useState","scrollLeft","setScrollLeft","useEffect","timer","setInterval","elt","current","querySelector","clearInterval","Tick","left","idx","onDrag","classes","cb","useCallback","d","vertical","className","style","ResizeBar","widths","setWidths","checkbox","offsets","reduce","a","b","i","distance","newWidths","Math","max","map","length","FacetedHeader","setFilterText","setUseShoppingCart","setHideSparse","hideSparse","useShoppingCart","filterText","model","anchorEl","setAnchorEl","Grid","container","spacing","alignItems","item","TextField","label","value","onChange","event","target","InputProps","endAdornment","InputAdornment","IconButton","onClick","Clear","currentTarget","MoreVert","ShoppingCart","Menu","open","onClose","onMenuItemClick","_event","callback","menuItems","type","checked","facet","margin","marginLeft","select","marginBottom","FacetFilter","column","vals","dispatch","filters","visible","setVisible","FormControl","display","Typography","field","Tooltip","title","key","val","size","Minimize","Add","Select","multiple","native","options","len","selected","push","sort","localeCompare","name","count","FacetFilters","rows","columns","facets","slice","uniqs","Map","forEach","row","index","get","undefined","set","Array","from","nonMetadataKeys","frac","observer","assemblyNames","view","selection","pluginManager","getEnv","info","setInfo","panelWidth","setPanelWidth","assemblyName","session","getSession","filterDebounced","useDebounce","useReducer","state","update","useMemo","trackConfigurations","filter","conf","matches","track","metadata","readConfObject","id","trackId","getTrackName","category","join","adapter","description","filteredNonMetadataKeys","f","r","filteredMetadataKeys","Set","obj","Object","entries","flat","fields","measureGridWidth","maxWidth","stripHTML","fromEntries","e","c","widthsDebounced","hideable","renderCell","params","SanitizedHTML","html","MoreHoriz","shownTrackIds","tracks","t","configuration","arrFilters","getTrackActionMenuItems","window","innerHeight","innerWidth","values","entry","DataGrid","every","includes","columnVisibilityModel","onColumnVisibilityModelChange","newModel","headerHeight","checkboxSelection","disableSelectionOnClick","keepNonExistentRowsSelected","onSelectionModelChange","userSelectedIds","root","getRoot","schema","pluggableConfigSchemaType","resolveIdentifier","setSelection","a1","a2","transaction","x","hideTrack","showTrack","selectionModel","s","rowHeight","ResizeHandle","dist","overflowY","overflowX","props","handleClose","Dialog","DialogContent","FacetedSelector"],"sourceRoot":""}