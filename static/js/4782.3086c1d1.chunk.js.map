{"version":3,"file":"static/js/4782.3086c1d1.chunk.js","mappings":"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","sources":["../../../node_modules/@gmod/nclist/src/util.ts","../../../node_modules/@gmod/nclist/src/nclist.ts","../../../node_modules/@gmod/nclist/src/array_representation.ts","../../../node_modules/@gmod/nclist/src/lazy_array.ts","../../../node_modules/@gmod/nclist/src/feature_store.ts","../../../node_modules/@gmod/nclist/src/index.ts","../../../node_modules/@babel/runtime/helpers/esm/OverloadYield.js","../../../node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js","../../../node_modules/@babel/runtime/helpers/esm/asyncIterator.js","../../../node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js","../../../node_modules/@babel/runtime/helpers/esm/AsyncGenerator.js","../../../node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js"],"sourcesContent":["//@ts-nocheck\nexport async function readJSON(url, readFile, options = {}) {\n  const { defaultContent = {} } = options\n  let str\n  try {\n    str = await readFile(url, { encoding: 'utf8' })\n    return JSON.parse(str)\n  } catch (error) {\n    if (error.code === 'ENOENT' || error.status === 404) {\n      return defaultContent\n    }\n    throw error\n  }\n}\n\nexport function foo() {}\n","//@ts-nocheck\nimport nodeUrl from 'url'\nimport QuickLRU from 'quick-lru'\nimport AbortablePromiseCache from 'abortable-promise-cache'\nimport { readJSON } from './util'\n\nexport default class NCList {\n  constructor({ readFile, cacheSize = 100 }) {\n    this.topList = []\n    this.chunkCache = new AbortablePromiseCache({\n      cache: new QuickLRU({ maxSize: cacheSize }),\n      fill: this.readChunkItems.bind(this),\n    })\n    this.readFile = readFile\n    if (!this.readFile) {\n      throw new Error(`must provide a \"readFile\" function`)\n    }\n  }\n\n  importExisting(nclist, attrs, baseURL, lazyUrlTemplate, lazyClass) {\n    this.topList = nclist\n    this.attrs = attrs\n    this.start = attrs.makeFastGetter('Start')\n    this.end = attrs.makeFastGetter('End')\n    this.lazyClass = lazyClass\n    this.baseURL = baseURL\n    this.lazyUrlTemplate = lazyUrlTemplate\n  }\n\n  binarySearch(arr, item, getter) {\n    let low = -1\n    let high = arr.length\n    let mid\n\n    while (high - low > 1) {\n      mid = (low + high) >>> 1\n      if (getter(arr[mid]) >= item) {\n        high = mid\n      } else {\n        low = mid\n      }\n    }\n\n    // if we're iterating rightward, return the high index;\n    // if leftward, the low index\n    if (getter === this.end) {\n      return high\n    }\n    return low\n  }\n\n  readChunkItems(chunkNum) {\n    const url = nodeUrl.resolve(\n      this.baseURL,\n      this.lazyUrlTemplate.replace(/\\{Chunk\\}/gi, chunkNum),\n    )\n    return readJSON(url, this.readFile, { defaultContent: [] })\n  }\n\n  async *iterateSublist(arr, from, to, inc, searchGet, testGet, path) {\n    const getChunk = this.attrs.makeGetter('Chunk')\n    const getSublist = this.attrs.makeGetter('Sublist')\n\n    const pendingPromises = []\n    for (\n      let i = this.binarySearch(arr, from, searchGet);\n      i < arr.length && i >= 0 && inc * testGet(arr[i]) < inc * to;\n      i += inc\n    ) {\n      if (arr[i][0] === this.lazyClass) {\n        // this is a lazily-loaded chunk of the nclist\n        const chunkNum = getChunk(arr[i])\n        const chunkItemsP = this.chunkCache\n          .get(chunkNum, chunkNum)\n          .then(item => [item, chunkNum])\n        pendingPromises.push(chunkItemsP)\n      } else {\n        // this is just a regular feature\n        yield [arr[i], path.concat(i)]\n      }\n\n      // if this node has a contained sublist, process that too\n      const sublist = getSublist(arr[i])\n      if (sublist) {\n        yield* this.iterateSublist(\n          sublist,\n          from,\n          to,\n          inc,\n          searchGet,\n          testGet,\n          path.concat(i),\n        )\n      }\n    }\n\n    for (let i = 0; i < pendingPromises.length; i += 1) {\n      const [item, chunkNum] = await pendingPromises[i]\n      if (item) {\n        yield* this.iterateSublist(item, from, to, inc, searchGet, testGet, [\n          ...path,\n          chunkNum,\n        ])\n      }\n    }\n  }\n\n  async *iterate(from, to) {\n    // calls the given function once for each of the\n    // intervals that overlap the given interval\n    // if from <= to, iterates left-to-right, otherwise iterates right-to-left\n\n    // inc: iterate leftward or rightward\n    const inc = from > to ? -1 : 1\n    // searchGet: search on start or end\n    const searchGet = from > to ? this.start : this.end\n    // testGet: test on start or end\n    const testGet = from > to ? this.end : this.start\n\n    if (this.topList.length > 0) {\n      yield* this.iterateSublist(\n        this.topList,\n        from,\n        to,\n        inc,\n        searchGet,\n        testGet,\n        [0],\n      )\n    }\n  }\n\n  async histogram(from, to, numBins) {\n    // calls callback with a histogram of the feature density\n    // in the given interval\n\n    const result = new Array(numBins)\n    result.fill(0)\n    const binWidth = (to - from) / numBins\n    for await (const feat of this.iterate(from, to)) {\n      const firstBin = Math.max(0, ((this.start(feat) - from) / binWidth) | 0)\n      const lastBin = Math.min(\n        numBins,\n        ((this.end(feat) - from) / binWidth) | 0,\n      )\n      for (let bin = firstBin; bin <= lastBin; bin += 1) {\n        result[bin] += 1\n      }\n    }\n    return result\n  }\n}\n","//@ts-nocheck\n/**\n * @class ArrayRepr\n *\n * Class for operating on indexed array representations of objects.\n *\n * For example, if we have a lot of objects with similar attrbutes, e.g.:\n *\n * <pre class=\"code\">\n *     [\n *         {start: 1, end: 2, strand: -1},\n *         {start: 5, end: 6, strand: 1},\n *         ...\n *     ]\n * </pre>\n *\n * @description\n * we can represent them more compactly (e.g., in JSON) something like this:\n *\n * <pre class=\"code\">\n *     class = [\"start\", \"end\", \"strand\"]\n *     [\n *         [1, 2, -1],\n *         [5, 6, 1],\n *         ...\n *     ]\n * </pre>\n *\n * If we want to represent a few different kinds of objects in our big list,\n * we can have multiple \"class\" arrays, and tag each object to identify\n * which \"class\" array describes it.\n *\n * For example, if we have a lot of instances of a few types of objects,\n * like this:\n *\n * <pre class=\"code\">\n *     [\n *         {start: 1, end: 2, strand: 1, id: 1},\n *         {start: 5, end: 6, strand: 1, id: 2},\n *         ...\n *         {start: 10, end: 20, chunk: 1},\n *         {start: 30, end: 40, chunk: 2},\n *         ...\n *     ]\n * </pre>\n *\n * We could use the first array position to indicate the \"class\" for the\n * object, like this:\n *\n * <pre class=\"code\">\n *     classes = [[\"start\", \"end\", \"strand\", \"id\"], [\"start\", \"end\", \"chunk\"]]\n *     [\n *         [0, 1, 2, 1, 1],\n *         [0, 5, 6, 1, 2],\n *         ...\n *         [1, 10, 20, 1],\n *         [1, 30, 40, 1]\n *     ]\n * </pre>\n *\n * Also, if we occasionally want to add an ad-hoc attribute, we could just\n * stick an optional dictionary onto the end:\n *\n * <pre class=\"code\">\n *     classes = [[\"start\", \"end\", \"strand\", \"id\"], [\"start\", \"end\", \"chunk\"]]\n *     [\n *         [0, 1, 2, 1, 1],\n *         [0, 5, 6, 1, 2, {foo: 1}]\n *     ]\n * </pre>\n *\n * Given that individual objects are being represented by arrays, generic\n * code needs some way to differentiate arrays that are meant to be objects\n * from arrays that are actually meant to be arrays.\n * So for each class, we include a dict with <attribute name>: true mappings\n * for each attribute that is meant to be an array.\n *\n * Also, in cases where some attribute values are the same for all objects\n * in a particular set, it may be convenient to define a \"prototype\"\n * with default values for all objects in the set\n *\n * In the end, we get something like this:\n *\n * <pre class=\"code\">\n *     classes=[\n *         {'attributes': ['Start', 'End', 'Subfeatures'],\n *          'proto': {'Chrom': 'chr1'},\n *          'isArrayAttr': {Subfeatures: true}}\n *         ]\n * </pre>\n *\n * That's what this class facilitates.\n */\nclass ArrayRepr {\n  constructor(classes) {\n    this.classes = classes\n    this.fields = []\n    for (let cl = 0; cl < classes.length; cl += 1) {\n      this.fields[cl] = {}\n      for (let f = 0; f < classes[cl].attributes.length; f += 1) {\n        this.fields[cl][classes[cl].attributes[f]] = f + 1\n      }\n      if (classes[cl].proto === undefined) {\n        classes[cl].proto = {}\n      }\n      if (classes[cl].isArrayAttr === undefined) {\n        classes[cl].isArrayAttr = {}\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  attrIndices(attr) {\n    return this.classes.map(\n      x =>\n        x.attributes.indexOf(attr) + 1 ||\n        x.attributes.indexOf(attr.toLowerCase()) + 1 ||\n        undefined,\n    )\n  }\n\n  get(obj, attr) {\n    if (attr in this.fields[obj[0]]) {\n      return obj[this.fields[obj[0]][attr]]\n    }\n\n    // try lowercase\n    const lcattr = attr.toLowerCase()\n    if (lcattr in this.fields[obj[0]]) {\n      return obj[this.fields[obj[0]][lcattr]]\n    }\n\n    const adhocIndex = this.classes[obj[0]].attributes.length + 1\n    if (adhocIndex >= obj.length || !(attr in obj[adhocIndex])) {\n      if (attr in this.classes[obj[0]].proto) {\n        return this.classes[obj[0]].proto[attr]\n      }\n      return undefined\n    }\n    return obj[adhocIndex][attr]\n  }\n\n  makeSetter(attr) {\n    return (obj, val) => {\n      this.set(obj, attr, val)\n    }\n  }\n\n  makeGetter(attr) {\n    return obj => {\n      return this.get(obj, attr)\n    }\n  }\n\n  makeFastGetter(attr) {\n    // can be used only if attr is guaranteed to be in\n    // the \"classes\" array for this object\n    const indices = this.attrIndices(attr)\n    return function get(obj) {\n      if (indices[obj[0]] !== undefined) {\n        return obj[indices[obj[0]]]\n      }\n      return undefined\n    }\n  }\n\n  // construct(self, obj, klass) {\n  //   const result = new Array(self.classes[klass].length)\n  //   Object.keys(obj).forEach(attr => {\n  //     this.set(result, attr, obj[attr])\n  //   })\n  //   return result\n  // }\n\n  /**\n   * Returns fast pre-compiled getter and setter functions for use with\n   * Arrays that use this representation.\n   * When the returned <code>get</code> and <code>set</code> functions are\n   * added as methods to an Array that contains data in this\n   * representation, they provide fast access by name to the data.\n   *\n   * @returns {Object} <code>{ get: function() {...}, set: function(val) {...} }</code>\n   *\n   * @example\n   * var accessors = attrs.accessors();\n   * var feature = get_feature_from_someplace();\n   * feature.get = accessors.get;\n   * // print out the feature start and end\n   * console.log( feature.get('start') + ',' + feature.get('end') );\n   */\n  accessors() {\n    if (!this._accessors) {\n      this._accessors = this._makeAccessors()\n    }\n    return this._accessors\n  }\n\n  /**\n   * @private\n   */\n  _makeAccessors() {\n    const indices = {}\n\n    const accessors = {\n      get(field) {\n        const f = this.get.field_accessors[field.toLowerCase()]\n        if (f) {\n          return f.call(this)\n        }\n        return undefined\n      },\n      set(field, val) {\n        const f = this.set.field_accessors[field]\n        if (f) {\n          return f.call(this, val)\n        }\n        return undefined\n      },\n      tags() {\n        return tags[this[0]] || []\n      },\n    }\n    accessors.get.field_accessors = {}\n    accessors.set.field_accessors = {}\n\n    // make a data structure as: { attr_name: [offset,offset,offset], }\n    // that will be convenient for finding the location of the attr\n    // for a given class like: indexForAttr{attrname}[classnum]\n    this.classes.forEach((cdef, classnum) => {\n      ;(cdef.attributes || []).forEach((attrname, offset) => {\n        indices[attrname] = indices[attrname] || []\n        indices[attrname][classnum] = offset + 1\n\n        attrname = attrname.toLowerCase()\n\n        indices[attrname] = indices[attrname] || []\n        indices[attrname][classnum] = offset + 1\n      })\n    })\n\n    // lowercase all the class attributes\n    const tags = this.classes.map(c => c.attributes)\n\n    // use that to make precalculated get and set accessors for each field\n    Object.keys(indices).forEach(attrname => {\n      const attrIndices = indices[attrname]\n      // get\n      accessors.get.field_accessors[attrname] = !attrIndices\n        ? function get() {\n            return undefined\n          }\n        : function get() {\n            return this[attrIndices[this[0]]]\n          }\n\n      // // set\n      // accessors.set.field_accessors[attrname] = !attrIndices\n      //   ? () => undefined\n      //   : v => {\n      //       this[attrIndices[this[0]]] = v\n      //       return v\n      //     }\n    })\n\n    return accessors\n  }\n}\nexport default ArrayRepr\n\n/*\n\nCopyright (c) 2007-2010 The Evolutionary Software Foundation\n\nCreated by Mitchell Skinner <mitch_skinner@berkeley.edu>\n\nThis package and its accompanying libraries are free software; you can\nredistribute it and/or modify it under the terms of the LGPL (either\nversion 2.1, or at your option, any later version) or the Artistic\nLicense 2.0.  Refer to LICENSE for the full license text.\n\n*/\n","//@ts-nocheck\nimport nodeUrl from 'url'\nimport QuickLRU from 'quick-lru'\nimport AbortablePromiseCache from 'abortable-promise-cache'\nimport { readJSON } from './util'\n\n/**\n * For a JSON array that gets too large to load in one go, this class\n * helps break it up into chunks and provides an\n * async API for using the information in the array.\n */\nexport default class LazyArray {\n  constructor(\n    { urlTemplate, chunkSize, length, cacheSize = 100, readFile },\n    baseUrl,\n  ) {\n    this.urlTemplate = urlTemplate\n    this.chunkSize = chunkSize\n    this.length = length\n    this.baseUrl = baseUrl === undefined ? '' : baseUrl\n    this.readFile = readFile\n    if (!readFile) {\n      throw new Error('must provide readFile callback')\n    }\n    this.chunkCache = new AbortablePromiseCache({\n      cache: new QuickLRU({ maxSize: cacheSize }),\n      fill: this.getChunk.bind(this),\n    })\n  }\n\n  /**\n   * call the callback on one element of the array\n   * @param i index\n   * @param callback callback, gets called with (i, value, param)\n   * @param param (optional) callback will get this as its last parameter\n   */\n  index(i, callback, param) {\n    this.range(i, i, callback, undefined, param)\n  }\n\n  /**\n   * async generator for the elements in the range [start,end]\n   *\n   * @param start index of first element to call the callback on\n   * @param end index of last element to call the callback on\n   */\n  async *range(start, end) {\n    start = Math.max(0, start)\n    end = Math.min(end, this.length - 1)\n\n    const firstChunk = Math.floor(start / this.chunkSize)\n    const lastChunk = Math.floor(end / this.chunkSize)\n\n    const chunkreadFiles = []\n    for (let chunk = firstChunk; chunk <= lastChunk; chunk += 1) {\n      chunkreadFiles.push(this.chunkCache.get(chunk, chunk))\n    }\n    for (let i = 0; i < chunkreadFiles.length; i += 1) {\n      const [chunkNumber, chunkData] = await chunkreadFiles[i]\n      yield* this.filterChunkData(start, end, chunkNumber, chunkData)\n    }\n  }\n\n  async getChunk(chunkNumber) {\n    let url = this.urlTemplate.replace(/\\{Chunk\\}/gi, chunkNumber)\n    if (this.baseUrl) {\n      url = nodeUrl.resolve(this.baseUrl, url)\n    }\n    const data = await readJSON(url, this.readFile)\n    return [chunkNumber, data]\n  }\n\n  *filterChunkData(queryStart, queryEnd, chunkNumber, chunkData) {\n    // index (in the overall lazy array) of the first position in this chunk\n    const firstIndex = chunkNumber * this.chunkSize\n    const chunkStart = Math.max(0, queryStart - firstIndex)\n    const chunkEnd = Math.min(queryEnd - firstIndex, this.chunkSize - 1)\n    for (let i = chunkStart; i <= chunkEnd; i += 1) {\n      yield [i + firstIndex, chunkData[i]]\n    }\n  }\n}\n","//@ts-nocheck\nimport nodeUrl from 'url'\nimport QuickLRU from 'quick-lru'\nimport AbortablePromiseCache from 'abortable-promise-cache'\n\nimport GenericNCList from './nclist'\nimport ArrayRepr from './array_representation'\nimport LazyArray from './lazy_array'\nimport { readJSON } from './util'\n\nfunction idfunc() {\n  return this._uniqueID\n}\nfunction parentfunc() {\n  return this._parent\n}\nfunction childrenfunc() {\n  return this.get('subfeatures')\n}\n\n/**\n * Sequence feature store using nested containment\n * lists held in JSON files that are lazily read.\n *\n * @param {object} args constructor args\n * @param {string} args.baseUrl base URL for resolving relative URLs\n * @param {string} args.urlTemplate Template string for\n *  the root file of each reference sequence. The reference sequence\n *  name will be interpolated into this string where `{refseq}` appears.\n * @param {function} args.readFile function to use for reading remote from URLs.\n */\nexport default class NCListStore {\n  constructor({ baseUrl, urlTemplate, readFile, cacheSize = 10 }) {\n    this.baseUrl = baseUrl\n    this.urlTemplates = { root: urlTemplate }\n\n    this.readFile = readFile\n    if (!this.readFile) {\n      throw new Error(`must provide a \"readFile\" function argument`)\n    }\n\n    this.dataRootCache = new AbortablePromiseCache({\n      cache: new QuickLRU({ maxSize: cacheSize }),\n      fill: this.fetchDataRoot.bind(this),\n    })\n  }\n\n  makeNCList() {\n    return new GenericNCList({ readFile: this.readFile })\n  }\n\n  loadNCList(refData, trackInfo, listUrl) {\n    refData.nclist.importExisting(\n      trackInfo.intervals.nclist,\n      refData.attrs,\n      listUrl,\n      trackInfo.intervals.urlTemplate,\n      trackInfo.intervals.lazyClass,\n    )\n  }\n\n  getDataRoot(refName) {\n    return this.dataRootCache.get(refName, refName)\n  }\n\n  fetchDataRoot(refName) {\n    const url = nodeUrl.resolve(\n      this.baseUrl,\n      this.urlTemplates.root.replace(/{\\s*refseq\\s*}/g, refName),\n    )\n\n    // fetch the trackdata\n    return readJSON(url, this.readFile).then(trackInfo =>\n      // trackInfo = JSON.parse( trackInfo );\n      this.parseTrackInfo(trackInfo, url),\n    )\n  }\n\n  parseTrackInfo(trackInfo, url) {\n    const refData = {\n      nclist: this.makeNCList(),\n      stats: {\n        featureCount: trackInfo.featureCount || 0,\n      },\n    }\n\n    if (trackInfo.intervals) {\n      refData.attrs = new ArrayRepr(trackInfo.intervals.classes)\n      this.loadNCList(refData, trackInfo, url)\n    }\n\n    const { histograms } = trackInfo\n    if (histograms && histograms.meta) {\n      for (let i = 0; i < histograms.meta.length; i += 1) {\n        histograms.meta[i].lazyArray = new LazyArray(\n          { ...histograms.meta[i].arrayParams, readFile: this.readFile },\n          url,\n        )\n      }\n      refData._histograms = histograms\n    }\n\n    // parse any strings in the histogram data that look like numbers\n    if (refData._histograms) {\n      Object.keys(refData._histograms).forEach(key => {\n        const entries = refData._histograms[key]\n        entries.forEach(entry => {\n          Object.keys(entry).forEach(key2 => {\n            if (\n              typeof entry[key2] === 'string' &&\n              String(Number(entry[key2])) === entry[key2]\n            ) {\n              entry[key2] = Number(entry[key2])\n            }\n          })\n        })\n      })\n    }\n\n    return refData\n  }\n\n  async getRegionStats(query) {\n    const data = await this.getDataRoot(query.ref)\n    return data.stats\n  }\n\n  /**\n   * fetch binned counts of feature coverage in the given region.\n   *\n   * @param {object} query\n   * @param {string} query.refName reference sequence name\n   * @param {number} query.start region start\n   * @param {number} query.end region end\n   * @param {number} query.numBins number of bins desired in the feature counts\n   * @param {number} query.basesPerBin number of bp desired in each feature counting bin\n   * @returns {object} as:\n   *    `{ bins: hist, stats: statEntry }`\n   */\n  async getRegionFeatureDensities({\n    refName,\n    start,\n    end,\n    numBins,\n    basesPerBin,\n  }) {\n    const data = await this.getDataRoot(refName)\n    if (numBins) {\n      basesPerBin = (end - start) / numBins\n    } else if (basesPerBin) {\n      numBins = Math.ceil((end - start) / basesPerBin)\n    } else {\n      throw new TypeError(\n        'numBins or basesPerBin arg required for getRegionFeatureDensities',\n      )\n    }\n\n    // pick the relevant entry in our pre-calculated stats\n    const stats = data._histograms.stats || []\n    const statEntry = stats.find(entry => entry.basesPerBin >= basesPerBin)\n\n    // The histogramMeta array describes multiple levels of histogram detail,\n    // going from the finest (smallest number of bases per bin) to the\n    // coarsest (largest number of bases per bin).\n    // We want to use coarsest histogramMeta that's at least as fine as the\n    // one we're currently rendering.\n    // TODO: take into account that the histogramMeta chosen here might not\n    // fit neatly into the current histogram (e.g., if the current histogram\n    // is at 50,000 bases/bin, and we have server histograms at 20,000\n    // and 2,000 bases/bin, then we should choose the 2,000 histogramMeta\n    // rather than the 20,000)\n    let histogramMeta = data._histograms.meta[0]\n    for (let i = 0; i < data._histograms.meta.length; i += 1) {\n      if (basesPerBin >= data._histograms.meta[i].basesPerBin) {\n        histogramMeta = data._histograms.meta[i]\n      }\n    }\n\n    // number of bins in the server-supplied histogram for each current bin\n    let binRatio = basesPerBin / histogramMeta.basesPerBin\n\n    // if the server-supplied histogram fits neatly into our requested\n    if (binRatio > 0.9 && Math.abs(binRatio - Math.round(binRatio)) < 0.0001) {\n      // console.log('server-supplied',query);\n      // we can use the server-supplied counts\n      const firstServerBin = Math.floor(start / histogramMeta.basesPerBin)\n      binRatio = Math.round(binRatio)\n      const histogram = []\n      for (let bin = 0; bin < numBins; bin += 1) {\n        histogram[bin] = 0\n      }\n\n      for await (const [i, val] of histogramMeta.lazyArray.range(\n        firstServerBin,\n        firstServerBin + binRatio * numBins - 1,\n      )) {\n        // this will count features that span the boundaries of\n        // the original histogram multiple times, so it's not\n        // perfectly quantitative.  Hopefully it's still useful, though.\n        histogram[Math.floor((i - firstServerBin) / binRatio)] += val\n      }\n      return { bins: histogram, stats: statEntry }\n    }\n    // console.log('make own',query);\n    // make our own counts\n    const hist = await data.nclist.histogram(start, end, numBins)\n    return { bins: hist, stats: statEntry }\n  }\n\n  /**\n   * Fetch features in a given region. This method is an asynchronous generator\n   * yielding feature objects.\n   *\n   * @param {object} args\n   * @param {string} args.refName reference sequence name\n   * @param {number} args.start start of region. 0-based half-open.\n   * @param {number} args.end end of region. 0-based half-open.\n   * @yields {object}\n   */\n  async *getFeatures({ refName, start, end }) {\n    const data = await this.getDataRoot(refName)\n    const accessors = data.attrs && data.attrs.accessors()\n    for await (const [feature, path] of data.nclist.iterate(start, end)) {\n      // the unique ID is a stringification of the path in the\n      // NCList where the feature lives; it's unique across the\n      // top-level NCList (the top-level NCList covers a\n      // track/chromosome combination)\n\n      // only need to decorate a feature once\n      if (!feature.decorated) {\n        const uniqueID = path.join(',')\n        this.decorateFeature(accessors, feature, `${refName},${uniqueID}`)\n      }\n      yield feature\n    }\n  }\n\n  // helper method to recursively add .get and .tags methods to a feature and its\n  // subfeatures\n  decorateFeature(accessors, feature, id, parent) {\n    feature.get = accessors.get\n    feature.tags = accessors.tags\n    feature._uniqueID = id\n    feature.id = idfunc\n    feature._parent = parent\n    feature.parent = parentfunc\n    feature.children = childrenfunc\n    ;(feature.get('subfeatures') || []).forEach((f, i) => {\n      this.decorateFeature(accessors, f, `${id}-${i}`, feature)\n    })\n    feature.decorated = true\n  }\n}\n","//@ts-nocheck\nimport NCListStore from './feature_store'\n\nexport default NCListStore\n","export default function _OverloadYield(value, kind) {\n  this.v = value, this.k = kind;\n}","import OverloadYield from \"./OverloadYield.js\";\nexport default function _asyncGeneratorDelegate(inner) {\n  var iter = {},\n    waiting = !1;\n  function pump(key, value) {\n    return waiting = !0, value = new Promise(function (resolve) {\n      resolve(inner[key](value));\n    }), {\n      done: !1,\n      value: new OverloadYield(value, 1)\n    };\n  }\n  return iter[\"undefined\" != typeof Symbol && Symbol.iterator || \"@@iterator\"] = function () {\n    return this;\n  }, iter.next = function (value) {\n    return waiting ? (waiting = !1, value) : pump(\"next\", value);\n  }, \"function\" == typeof inner[\"throw\"] && (iter[\"throw\"] = function (value) {\n    if (waiting) throw waiting = !1, value;\n    return pump(\"throw\", value);\n  }), \"function\" == typeof inner[\"return\"] && (iter[\"return\"] = function (value) {\n    return waiting ? (waiting = !1, value) : pump(\"return\", value);\n  }), iter;\n}","export default function _asyncIterator(iterable) {\n  var method,\n    async,\n    sync,\n    retry = 2;\n  for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) {\n    if (async && null != (method = iterable[async])) return method.call(iterable);\n    if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable));\n    async = \"@@asyncIterator\", sync = \"@@iterator\";\n  }\n  throw new TypeError(\"Object is not async iterable\");\n}\nfunction AsyncFromSyncIterator(s) {\n  function AsyncFromSyncIteratorContinuation(r) {\n    if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\"));\n    var done = r.done;\n    return Promise.resolve(r.value).then(function (value) {\n      return {\n        value: value,\n        done: done\n      };\n    });\n  }\n  return AsyncFromSyncIterator = function AsyncFromSyncIterator(s) {\n    this.s = s, this.n = s.next;\n  }, AsyncFromSyncIterator.prototype = {\n    s: null,\n    n: null,\n    next: function next() {\n      return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));\n    },\n    \"return\": function _return(value) {\n      var ret = this.s[\"return\"];\n      return void 0 === ret ? Promise.resolve({\n        value: value,\n        done: !0\n      }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments));\n    },\n    \"throw\": function _throw(value) {\n      var thr = this.s[\"return\"];\n      return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments));\n    }\n  }, new AsyncFromSyncIterator(s);\n}","import OverloadYield from \"./OverloadYield.js\";\nexport default function _awaitAsyncGenerator(value) {\n  return new OverloadYield(value, 0);\n}","import OverloadYield from \"./OverloadYield.js\";\nexport default function AsyncGenerator(gen) {\n  var front, back;\n  function resume(key, arg) {\n    try {\n      var result = gen[key](arg),\n        value = result.value,\n        overloaded = value instanceof OverloadYield;\n      Promise.resolve(overloaded ? value.v : value).then(function (arg) {\n        if (overloaded) {\n          var nextKey = \"return\" === key ? \"return\" : \"next\";\n          if (!value.k || arg.done) return resume(nextKey, arg);\n          arg = gen[nextKey](arg).value;\n        }\n        settle(result.done ? \"return\" : \"normal\", arg);\n      }, function (err) {\n        resume(\"throw\", err);\n      });\n    } catch (err) {\n      settle(\"throw\", err);\n    }\n  }\n  function settle(type, value) {\n    switch (type) {\n      case \"return\":\n        front.resolve({\n          value: value,\n          done: !0\n        });\n        break;\n      case \"throw\":\n        front.reject(value);\n        break;\n      default:\n        front.resolve({\n          value: value,\n          done: !1\n        });\n    }\n    (front = front.next) ? resume(front.key, front.arg) : back = null;\n  }\n  this._invoke = function (key, arg) {\n    return new Promise(function (resolve, reject) {\n      var request = {\n        key: key,\n        arg: arg,\n        resolve: resolve,\n        reject: reject,\n        next: null\n      };\n      back ? back = back.next = request : (front = back = request, resume(key, arg));\n    });\n  }, \"function\" != typeof gen[\"return\"] && (this[\"return\"] = void 0);\n}\nAsyncGenerator.prototype[\"function\" == typeof Symbol && Symbol.asyncIterator || \"@@asyncIterator\"] = function () {\n  return this;\n}, AsyncGenerator.prototype.next = function (arg) {\n  return this._invoke(\"next\", arg);\n}, AsyncGenerator.prototype[\"throw\"] = function (arg) {\n  return this._invoke(\"throw\", arg);\n}, AsyncGenerator.prototype[\"return\"] = function (arg) {\n  return this._invoke(\"return\", arg);\n};","import AsyncGenerator from \"./AsyncGenerator.js\";\nexport default function _wrapAsyncGenerator(fn) {\n  return function () {\n    return new AsyncGenerator(fn.apply(this, arguments));\n  };\n}"],"names":["readJSON","_x","_x2","_readJSON","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","readFile","_options$defaultConte","defaultContent","str","_args","wrap","_context","prev","next","length","undefined","encoding","sent","abrupt","JSON","parse","t0","code","status","stop","NCList","_ref","_ref$cacheSize","cacheSize","_classCallCheck","this","topList","chunkCache","AbortablePromiseCache","cache","QuickLRU","maxSize","fill","readChunkItems","bind","Error","_createClass","key","value","nclist","attrs","baseURL","lazyUrlTemplate","lazyClass","start","makeFastGetter","end","arr","item","getter","mid","low","high","chunkNum","nodeUrl","replace","from","to","inc","searchGet","testGet","path","_this","_wrapAsyncGenerator","getChunk","getSublist","pendingPromises","_loop","i","_i","_yield$_awaitAsyncGen","_yield$_awaitAsyncGen2","_context2","makeGetter","_chunkNum","chunkItemsP","sublist","get","then","push","concat","delegateYield","_asyncGeneratorDelegate","_asyncIterator","iterateSublist","_awaitAsyncGenerator","binarySearch","_slicedToArray","_toConsumableArray","_this2","_callee2","_context3","_histogram","_callee3","numBins","result","binWidth","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","feat","firstBin","lastBin","bin","_context4","Array","iterate","done","Math","max","min","return","finish","_x3","ArrayRepr","classes","fields","cl","f","attributes","proto","isArrayAttr","attr","map","x","indexOf","toLowerCase","obj","lcattr","adhocIndex","val","set","indices","attrIndices","_accessors","_makeAccessors","accessors","field","field_accessors","call","tags","forEach","cdef","classnum","attrname","offset","c","Object","keys","LazyArray","baseUrl","urlTemplate","chunkSize","callback","param","range","firstChunk","lastChunk","chunkreadFiles","chunk","chunkNumber","chunkData","floor","filterChunkData","_getChunk","data","queryStart","queryEnd","firstIndex","chunkStart","chunkEnd","idfunc","_uniqueID","parentfunc","_parent","childrenfunc","NCListStore","urlTemplates","root","dataRootCache","fetchDataRoot","GenericNCList","refData","trackInfo","listUrl","importExisting","intervals","refName","parseTrackInfo","makeNCList","stats","featureCount","loadNCList","histograms","meta","lazyArray","_objectSpread","arrayParams","_histograms","entry","key2","String","Number","_getRegionStats","query","getDataRoot","ref","_getRegionFeatureDensities","_ref2","basesPerBin","statEntry","histogramMeta","binRatio","firstServerBin","histogram","_step$value","hist","ceil","TypeError","find","abs","round","bins","_ref3","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_step2$value","feature","uniqueID","decorated","join","decorateFeature","id","parent","_this3","children","_OverloadYield","kind","v","k","inner","iter","waiting","pump","Promise","resolve","Symbol","iterator","iterable","method","async","sync","retry","asyncIterator","AsyncFromSyncIterator","s","AsyncFromSyncIteratorContinuation","r","reject","n","prototype","ret","thr","AsyncGenerator","gen","front","back","resume","arg","overloaded","OverloadYield","nextKey","settle","err","type","_invoke","request","fn"],"sourceRoot":""}