{"version":3,"file":"static/js/5058.bfa74f18.chunk.js","mappings":"kSAgBMA,GAAYC,EAAAA,EAAAA,KAAAA,EAAa,SAAAC,GAAK,MAAK,CACvCC,YAAa,CACXC,SAAU,WACVC,MAAOH,EAAMI,QAAQ,GACrBC,IAAKL,EAAMI,QAAQ,GACnBE,MAAON,EAAMO,QAAQC,KAAK,MAE5BC,MAAO,CACLC,OAAQ,iBACRC,OAAQX,EAAMI,QAAQ,GACtB,OAAQ,CACNQ,QAASZ,EAAMI,QAAQ,KAXO,IAgBpC,SAASS,EAAT,GAII,IAHFC,EAGC,EAHDA,cAIQC,EAAYjB,IAAZiB,QACR,OACE,kBAAOC,UAAWD,EAAQN,MAA1B,UACE,2BACGK,EAAcG,KAAI,+BAAEC,EAAF,KAAOC,EAAP,YACjB,2BACE,wBAAKD,KACL,wBAAKC,KACL,eACEC,MAAO,CACLC,MAAO,MACPC,WAAYH,OANTD,EADQ,OAe1B,CA8GD,WAAeK,EAAAA,EAAAA,WA5Gf,SAAuBC,GAQrB,IAAQT,EAAYjB,IAAZiB,QACAU,EAAuBD,EAAvBC,MAAOC,EAAgBF,EAAhBE,YACPC,EAAgCF,EAAhCE,QAASC,EAAuBH,EAAvBG,mBAEXd,GAAa,OAAOc,EAAmBC,WAE7C,OACE,UAAC,IAAD,CAAQC,MAAI,EAACC,QAASL,EAAtB,WACE,UAAC,IAAD,qCAEE,SAAC,IAAD,CACE,aAAW,QACXV,UAAWD,EAAQd,YACnB+B,QAASN,EAHX,UAKE,SAAC,IAAD,UAGJ,UAAC,IAAD,YACE,SAAC,IAAD,yRAMA,SAAC,IAAD,8IAIA,iBAAKN,MAAO,CAAET,OAAQ,IAAtB,UACqB,mBAAX,OAAPgB,QAAO,IAAPA,OAAA,EAAAA,EAASM,OACR,yBACGnB,EAAcoB,QACb,8EAEE,SAACrB,EAAD,CACEC,eAAa,OAAMc,EAAmBC,iBAI1C,4BACE,SAAC,IAAD,iGAIA,SAAC,IAAD,CAAkBM,KAAM,UAI5B,KACe,iBAAX,OAAPR,QAAO,IAAPA,OAAA,EAAAA,EAASM,OACR,SAACpB,EAAD,CACEC,cAAe,CACb,CAAC,aAAc,OACf,CAAC,eAAgB,WAGnB,SAEN,UAAC,IAAD,YACE,SAAC,IAAD,CACEsB,QAAQ,YACR9B,MAAM,UACNc,MAAO,CAAET,OAAQ,GACjBqB,QAAS,WACPP,EAAMY,eAAe,CACnBJ,KAAM,kBAERP,GACD,EATH,4BAaA,SAAC,IAAD,CACEU,QAAQ,YACR9B,MAAM,UACNc,MAAO,CAAET,OAAQ,GACjBqB,QAAS,WACPP,EAAMY,eAAe,CACnBJ,KAAM,gBAERP,GACD,EATH,0BAaA,SAAC,IAAD,CACEU,QAAQ,YACR9B,MAAM,YACNc,MAAO,CAAET,OAAQ,GACjBqB,QAAS,kBAAMN,GAAN,EAJX,4BAYT,G","sources":["../../../plugins/alignments/src/LinearPileupDisplay/components/ColorByModifications.tsx"],"sourcesContent":["import React from 'react'\nimport { observer } from 'mobx-react'\nimport { ObservableMap } from 'mobx'\nimport {\n  Button,\n  CircularProgress,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport CloseIcon from '@mui/icons-material/Close'\n\nconst useStyles = makeStyles()(theme => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  table: {\n    border: '1px solid #888',\n    margin: theme.spacing(4),\n    '& td': {\n      padding: theme.spacing(1),\n    },\n  },\n}))\n\nfunction ModificationTable({\n  modifications,\n}: {\n  modifications: [string, string][]\n}) {\n  const { classes } = useStyles()\n  return (\n    <table className={classes.table}>\n      <tbody>\n        {modifications.map(([key, value]) => (\n          <tr key={key}>\n            <td>{key}</td>\n            <td>{value}</td>\n            <td\n              style={{\n                width: '1em',\n                background: value,\n              }}\n            />\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  )\n}\n\nfunction ColorByTagDlg(props: {\n  model: {\n    setColorScheme: Function\n    modificationTagMap: ObservableMap<string, string>\n    colorBy?: { type: string }\n  }\n  handleClose: () => void\n}) {\n  const { classes } = useStyles()\n  const { model, handleClose } = props\n  const { colorBy, modificationTagMap } = model\n\n  const modifications = [...modificationTagMap.entries()]\n\n  return (\n    <Dialog open onClose={handleClose}>\n      <DialogTitle>\n        Color by modifications\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <Typography>\n          You can choose to color the modifications in the BAM/CRAM MM/ML\n          specification using this dialog. Choosing modifications colors the\n          modified positions and can color multiple modification types. Choosing\n          the methylation setting colors methylated and unmethylated CpG.\n        </Typography>\n        <Typography>\n          Note: you can revisit this dialog to see the current mapping of colors\n          to modification type for the modification coloring mode\n        </Typography>\n        <div style={{ margin: 20 }}>\n          {colorBy?.type === 'modifications' ? (\n            <div>\n              {modifications.length ? (\n                <>\n                  Current modification-type-to-color mapping\n                  <ModificationTable\n                    modifications={[...modificationTagMap.entries()]}\n                  />\n                </>\n              ) : (\n                <div>\n                  <Typography>\n                    Note: color by modifications is already enabled. Loading\n                    current modifications...\n                  </Typography>\n                  <CircularProgress size={15} />\n                </div>\n              )}\n            </div>\n          ) : null}\n          {colorBy?.type === 'methylation' ? (\n            <ModificationTable\n              modifications={[\n                ['methylated', 'red'],\n                ['unmethylated', 'blue'],\n              ]}\n            />\n          ) : null}\n        </div>\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ margin: 5 }}\n            onClick={() => {\n              model.setColorScheme({\n                type: 'modifications',\n              })\n              handleClose()\n            }}\n          >\n            Modifications\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ margin: 5 }}\n            onClick={() => {\n              model.setColorScheme({\n                type: 'methylation',\n              })\n              handleClose()\n            }}\n          >\n            Methylation\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            style={{ margin: 5 }}\n            onClick={() => handleClose()}\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default observer(ColorByTagDlg)\n"],"names":["useStyles","makeStyles","theme","closeButton","position","right","spacing","top","color","palette","grey","table","border","margin","padding","ModificationTable","modifications","classes","className","map","key","value","style","width","background","observer","props","model","handleClose","colorBy","modificationTagMap","entries","open","onClose","onClick","type","length","size","variant","setColorScheme"],"sourceRoot":""}