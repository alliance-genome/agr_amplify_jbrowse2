{"version":3,"file":"static/js/1014.4b393ebf.chunk.js","mappings":"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","sources":["../../../plugins/data-management/src/ucsc-trackhub/ucscAssemblies.ts","../../../plugins/data-management/src/ucsc-trackhub/ucscTrackHub.ts"],"sourcesContent":["// These are the assemblies for which there is a sequence file located at\n// http://hgdownload.soe.ucsc.edu/goldenPath/${assemblyName}/bigZips/${assemblyName}.2bit\n// This list was generated by `getUcscAssemblies.js`\n\nexport default `ailMel1\nallMis1\nanoCar1\nanoCar2\nanoGam1\nanoGam3\napiMel1\napiMel2\naplCal1\naptMan1\naquChr2\nbalAcu1\nbisBis1\nbosTau2\nbosTau3\nbosTau4\nbosTau6\nbosTau7\nbosTau8\nbraFlo1\ncaeJap1\ncaePb1\ncaePb2\ncaeRem2\ncaeRem3\ncalJac1\ncalJac3\ncalMil1\ncanFam1\ncanFam3\ncavPor3\ncb3\nce10\nce11\nce2\nce4\nce6\ncerSim1\nchlSab2\nchoHof1\nchrPic1\nci1\nci2\nci3\ncriGri1\ncriGriChoV1\ndanRer10\ndanRer11\ndanRer3\ndanRer4\ndanRer5\ndanRer6\ndanRer7\ndasNov3\ndipOrd1\ndm1\ndm2\ndm3\ndm6\ndp2\ndp3\ndroAna1\ndroAna2\ndroEre1\ndroGri1\ndroMoj1\ndroMoj2\ndroPer1\ndroSec1\ndroSim1\ndroVir1\ndroVir2\ndroYak1\ndroYak2\neboVir3\nechTel1\nechTel2\nequCab1\nequCab2\neriEur1\neriEur2\nfelCat3\nfelCat4\nfelCat5\nfelCat8\nfr1\nfr2\nfr3\ngadMor1\ngalGal2\ngalGal3\ngalGal4\ngalGal5\ngalGal6\ngalVar1\ngasAcu1\ngeoFor1\ngorGor3\ngorGor4\ngorGor5\nhetGla1\nhetGla2\nhg16\nhg18\nhg19\nhg38\nlatCha1\nloxAfr3\nmacEug2\nmacFas5\nmanPen1\nmelGal1\nmelGal5\nmelUnd1\nmicMur1\nmicMur2\nmm10\nmm7\nmm8\nmm9\nmonDom2\nmonDom4\nmonDom5\nmusFur1\nmyoLuc2\nnanPar1\nnasLar1\nnomLeu1\nnomLeu2\nnomLeu3\nochPri2\nochPri3\noreNil2\nornAna1\nornAna2\noryCun2\noryLat2\notoGar3\noviAri1\noviAri3\noviAri4\npanPan1\npanPan2\npanTro1\npanTro2\npanTro3\npanTro4\npanTro5\npanTro6\npapAnu2\npapHam1\npetMar1\npetMar2\nponAbe2\nponAbe3\npriPac1\nproCap1\npteVam1\nrheMac2\nrheMac3\nrheMac8\nrhiRox1\nrn4\nrn5\nrn6\nsacCer1\nsacCer2\nsacCer3\nsaiBol1\nsarHar1\nsorAra1\nsorAra2\nspeTri2\nstrPur1\nstrPur2\nsusScr11\nsusScr2\nsusScr3\ntaeGut1\ntaeGut2\ntarSyr1\ntarSyr2\ntetNig1\ntetNig2\nthaSir1\ntriMan1\ntupBel1\nturTru2\nventer1\nvicPac1\nvicPac2\nxenLae2\nxenTro1\nxenTro2\nxenTro3\nxenTro7\nxenTro9`.split(/\\r?\\n/)\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { RaStanza, TrackDbFile } from '@gmod/ucsc-hub'\nimport { FileLocation, isUriLocation, objectHash } from '@jbrowse/core/util'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport {\n  generateUnsupportedTrackConf,\n  generateUnknownTrackConf,\n} from '@jbrowse/core/util/tracks'\n\nexport async function fetchHubFile(hubLocation: FileLocation) {\n  try {\n    const hubFileText = await openLocation(hubLocation).readFile('utf8')\n    const { HubFile } = await import('@gmod/ucsc-hub')\n    return new HubFile(hubFileText)\n  } catch (error) {\n    throw new Error(`Not a valid hub.txt file, got error: '${error}'`)\n  }\n}\n\nexport async function fetchGenomesFile(genomesLoc: FileLocation) {\n  const genomesFileText = await openLocation(genomesLoc).readFile('utf8')\n  const { GenomesFile } = await import('@gmod/ucsc-hub')\n  return new GenomesFile(genomesFileText)\n}\n\nexport async function fetchTrackDbFile(trackDbLoc: FileLocation) {\n  const text = await openLocation(trackDbLoc).readFile('utf8')\n  const { TrackDbFile } = await import('@gmod/ucsc-hub')\n  return new TrackDbFile(text)\n}\n\nexport function makeLoc(first: string, base: { uri: string }) {\n  return {\n    uri: new URL(first, base.uri).href,\n    locationType: 'UriLocation',\n  }\n}\n\nexport function makeLocAlt(first: string, alt: string, base: { uri: string }) {\n  return first ? makeLoc(first, base) : makeLoc(alt, base)\n}\n\nexport function makeLoc2(first: string, alt?: string) {\n  return first\n    ? {\n        uri: first,\n        locationType: 'LocalPath',\n      }\n    : {\n        uri: alt,\n        locationType: 'UriLocation',\n      }\n}\n\nexport function generateTracks(\n  trackDb: TrackDbFile,\n  trackDbLoc: FileLocation,\n  assemblyName: string,\n  sequenceAdapter: any,\n) {\n  const tracks: any = []\n\n  for (const [trackName, track] of trackDb.entries()) {\n    const trackKeys = [...track.keys()]\n    const parentTrackKeys = new Set([\n      'superTrack',\n      'compositeTrack',\n      'container',\n      'view',\n    ])\n    if (trackKeys.some(key => parentTrackKeys.has(key))) {\n      continue\n    }\n    const parentTracks = []\n    let currentTrackName = trackName\n    do {\n      currentTrackName = trackDb.get(currentTrackName)?.get('parent') || ''\n      if (currentTrackName) {\n        ;[currentTrackName] = currentTrackName.split(' ')\n        parentTracks.push(trackDb.get(currentTrackName))\n      }\n    } while (currentTrackName)\n    parentTracks.reverse()\n    const categories = parentTracks\n      .map(p => p?.get('shortLabel'))\n      .filter((f): f is string => !!f)\n    const res = makeTrackConfig(\n      track,\n      categories,\n      trackDbLoc,\n      trackDb,\n      sequenceAdapter,\n    )\n    tracks.push({\n      ...res,\n      trackId: `ucsc-trackhub-${objectHash(res)}`,\n      assemblyNames: [assemblyName],\n    })\n  }\n\n  return tracks\n}\n\nfunction makeTrackConfig(\n  track: RaStanza,\n  categories: string[],\n  trackDbLoc: FileLocation,\n  trackDb: TrackDbFile,\n  sequenceAdapter: any,\n) {\n  let trackType = track.get('type')\n  const name = track.get('shortLabel') || ''\n  const bigDataUrl = track.get('bigDataUrl') || ''\n  const bigDataIdx = track.get('bigDataIndex') || ''\n  const isUri = isUriLocation(trackDbLoc)\n  if (!trackType) {\n    trackType = trackDb.get(track.get('parent') || '')?.get('type')\n  }\n  let baseTrackType = trackType?.split(' ')[0] || ''\n  if (baseTrackType === 'bam' && bigDataUrl.toLowerCase().endsWith('cram')) {\n    baseTrackType = 'cram'\n  }\n  const bigDataLocation = isUri\n    ? makeLoc(bigDataUrl, trackDbLoc)\n    : makeLoc2(bigDataUrl)\n\n  switch (baseTrackType) {\n    case 'bam':\n      return {\n        type: 'AlignmentsTrack',\n        name: track.get('shortLabel'),\n        description: track.get('longLabel'),\n        category: categories,\n        adapter: {\n          type: 'BamAdapter',\n          bamLocation: bigDataLocation,\n          index: {\n            location: isUri\n              ? makeLocAlt(bigDataIdx, bigDataUrl + '.bai', trackDbLoc)\n              : makeLoc2(bigDataIdx, bigDataUrl + '.bai'),\n          },\n        },\n      }\n\n    case 'bigBarChart':\n      return {\n        type: 'FeatureTrack',\n        name,\n        description: track.get('longLabel'),\n        category: categories,\n        adapter: {\n          type: 'BigBedAdapter',\n          bigBedLocation: bigDataLocation,\n        },\n        renderer: {\n          type: 'SvgFeatureRenderer',\n        },\n      }\n    case 'bigBed':\n      return {\n        type: 'FeatureTrack',\n        name,\n        description: track.get('longLabel'),\n        category: categories,\n        adapter: {\n          type: 'BigBedAdapter',\n          bigBedLocation: bigDataLocation,\n        },\n      }\n    case 'bigGenePred':\n      return {\n        type: 'FeatureTrack',\n        name,\n        description: track.get('longLabel'),\n        category: categories,\n        adapter: {\n          type: 'BigBedAdapter',\n          bigBedLocation: bigDataLocation,\n        },\n      }\n    case 'bigChain':\n      return {\n        type: 'FeatureTrack',\n        name,\n        description: track.get('longLabel'),\n        category: categories,\n        adapter: {\n          type: 'BigBedAdapter',\n          bigBedLocation: bigDataLocation,\n        },\n        renderer: {\n          type: 'SvgFeatureRenderer',\n        },\n      }\n    case 'bigInteract':\n      return {\n        type: 'FeatureTrack',\n        name,\n        description: track.get('longLabel'),\n        category: categories,\n        adapter: {\n          type: 'BigBedAdapter',\n          bigBedLocation: bigDataLocation,\n        },\n        renderer: {\n          type: 'SvgFeatureRenderer',\n        },\n      }\n    case 'bigMaf':\n      return {\n        type: 'FeatureTrack',\n        name,\n        description: track.get('longLabel'),\n        category: categories,\n        adapter: {\n          type: 'BigBedAdapter',\n          bigBedLocation: bigDataLocation,\n        },\n        renderer: {\n          type: 'SvgFeatureRenderer',\n        },\n      }\n    case 'bigPsl':\n      return {\n        type: 'FeatureTrack',\n        name,\n        description: track.get('longLabel'),\n        category: categories,\n        adapter: {\n          type: 'BigBedAdapter',\n          bigBedLocation: bigDataLocation,\n        },\n        renderer: {\n          type: 'SvgFeatureRenderer',\n        },\n      }\n    case 'bigWig':\n      return {\n        type: 'QuantitativeTrack',\n        name,\n        description: track.get('longLabel'),\n        category: categories,\n        adapter: {\n          type: 'BigWigAdapter',\n          bigWigLocation: bigDataLocation,\n        },\n      }\n\n    case 'cram':\n      return {\n        type: 'AlignmentsTrack',\n        name,\n        description: track.get('longLabel'),\n        category: categories,\n        adapter: {\n          type: 'CramAdapter',\n          cramLocation: bigDataLocation,\n          craiLocation: isUri\n            ? makeLocAlt(bigDataIdx, bigDataUrl + '.crai', trackDbLoc)\n            : makeLoc2(bigDataIdx, bigDataUrl + '.crai'),\n          sequenceAdapter,\n        },\n      }\n\n    case 'bigNarrowPeak':\n      return {\n        type: 'FeatureTrack',\n        name,\n        description: track.get('longLabel'),\n        category: categories,\n        adapter: {\n          type: 'BigBedAdapter',\n          bigBedLocation: bigDataLocation,\n        },\n      }\n    case 'peptideMapping':\n      return generateUnsupportedTrackConf(name, baseTrackType, categories)\n    case 'vcfTabix':\n      return {\n        type: 'VariantTrack',\n        name,\n        description: track.get('longLabel'),\n        category: categories,\n        adapter: {\n          type: 'VcfTabixAdapter',\n          vcfGzLocation: bigDataLocation,\n          index: {\n            location: isUri\n              ? makeLocAlt(bigDataIdx, bigDataUrl + '.tbi', trackDbLoc)\n              : makeLoc2(bigDataIdx, bigDataUrl + '.tbi'),\n          },\n        },\n      }\n\n    case 'hic':\n      return {\n        type: 'HicTrack',\n        name,\n        description: track.get('longLabel'),\n        category: categories,\n        adapter: {\n          type: 'HicAdapter',\n          hicLocation: bigDataLocation,\n        },\n      }\n\n    // unsupported types\n    //     case 'gvf':\n    //     case 'ld2':\n    //     case 'narrowPeak':\n    //     case 'wig':\n    //     case 'wigMaf':\n    //     case 'halSnake':\n    //     case 'bed':\n    //     case 'bed5FloatScore':\n    //     case 'bedGraph':\n    //     case 'bedRnaElements':\n    //     case 'broadPeak':\n    //     case 'coloredExon':\n    default:\n      return generateUnknownTrackConf(name, baseTrackType, categories)\n  }\n}\n\nexport { default as ucscAssemblies } from './ucscAssemblies'\n"],"names":["split","fetchHubFile","_x","_fetchHubFile","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","hubLocation","hubFileText","_yield$import","HubFile","wrap","_context","prev","next","openLocation","readFile","sent","abrupt","t0","Error","concat","stop","fetchGenomesFile","_x2","_fetchGenomesFile","_callee2","genomesLoc","genomesFileText","_yield$import2","GenomesFile","_context2","fetchTrackDbFile","_x3","_fetchTrackDbFile","_callee3","trackDbLoc","text","_yield$import3","TrackDbFile","_context3","makeLoc","first","base","uri","URL","href","locationType","makeLocAlt","alt","makeLoc2","generateTracks","trackDb","assemblyName","sequenceAdapter","_step","tracks","_iterator","_createForOfIteratorHelper","entries","_loop","_step$value","_slicedToArray","value","trackName","track","trackKeys","_toConsumableArray","keys","parentTrackKeys","Set","some","key","has","parentTracks","currentTrackName","_trackDb$get","get","_currentTrackName$spl","push","reverse","res","makeTrackConfig","map","p","filter","f","_objectSpread","trackId","objectHash","assemblyNames","s","n","done","err","e","categories","_trackType","_trackDb$get2","trackType","name","bigDataUrl","bigDataIdx","isUri","isUriLocation","baseTrackType","toLowerCase","endsWith","bigDataLocation","type","description","category","adapter","bamLocation","index","location","bigBedLocation","renderer","bigWigLocation","cramLocation","craiLocation","generateUnsupportedTrackConf","vcfGzLocation","hicLocation","generateUnknownTrackConf"],"sourceRoot":""}