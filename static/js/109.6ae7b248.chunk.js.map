{"version":3,"file":"static/js/109.6ae7b248.chunk.js","mappings":"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","sources":["../../../plugins/dotplot-view/src/DotplotView/components/Axes.tsx","../../../plugins/dotplot-view/src/DotplotView/components/ImportCustomTrack.tsx","../../../plugins/dotplot-view/src/DotplotView/components/ImportSyntenyTrackSelector.tsx","../../../plugins/dotplot-view/src/DotplotView/components/ImportForm.tsx","../../../plugins/dotplot-view/src/DotplotView/components/CursorIcon.tsx","../../../plugins/dotplot-view/src/DotplotView/components/DotplotWarnings.tsx","../../../plugins/dotplot-view/src/DotplotView/components/PanButtons.tsx","../../../plugins/dotplot-view/src/DotplotView/components/Header.tsx","../../../plugins/dotplot-view/src/DotplotView/components/DotplotTooltip.tsx","../../../plugins/dotplot-view/src/DotplotView/components/DotplotView.tsx","../../../plugins/dotplot-view/src/DotplotView/components/Grid.tsx","../../../node_modules/@mui/icons-material/ArrowDropUp.js","../../../node_modules/@mui/icons-material/ArrowLeft.js"],"sourcesContent":["import React from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { getSnapshot } from 'mobx-state-tree'\nimport { getTickDisplayStr } from '@jbrowse/core/util'\nimport { bpToPx } from '@jbrowse/core/util/Base1DUtils'\nimport { useTheme } from '@mui/material'\n\n// locals\nimport { getBlockLabelKeysToHide } from './util'\nimport { DotplotViewModel } from '../model'\n\nconst useStyles = makeStyles()(() => ({\n  vtext: {\n    gridColumn: '1/2',\n    gridRow: '1/2',\n    pointerEvents: 'none',\n    userSelect: 'none',\n  },\n  htext: {\n    gridColumn: '2/2',\n    gridRow: '2/2',\n    pointerEvents: 'none',\n    userSelect: 'none',\n  },\n}))\n\nexport const HorizontalAxis = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { viewWidth, borderY } = model\n  const { classes } = useStyles()\n  return (\n    <svg width={viewWidth} height={borderY} className={classes.htext}>\n      <HorizontalAxisRaw model={model} />\n    </svg>\n  )\n})\n\nexport const HorizontalAxisRaw = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { viewWidth, borderX, borderY, hview, htextRotation, hticks } = model\n  const { offsetPx, width, dynamicBlocks, bpPerPx } = hview\n  const dblocks = dynamicBlocks.contentBlocks\n  const hide = getBlockLabelKeysToHide(dblocks, viewWidth, offsetPx)\n  const theme = useTheme()\n  const hviewSnap = {\n    ...getSnapshot(hview),\n    width,\n    staticBlocks: hview.staticBlocks,\n  }\n\n  return (\n    <>\n      {dblocks\n        .filter(region => !hide.has(region.key))\n        .map(region => {\n          const x = region.offsetPx\n          const y = 0\n          const xoff = Math.floor(x - hview.offsetPx)\n\n          return (\n            <text\n              transform={`rotate(${htextRotation},${xoff},${y})`}\n              key={JSON.stringify(region)}\n              x={xoff}\n              y={y + 1}\n              fill={theme.palette.text.primary}\n              fontSize={11}\n              dominantBaseline=\"hanging\"\n              textAnchor=\"end\"\n            >\n              {region.refName}\n            </text>\n          )\n        })}\n      {hticks.map(tick => {\n        const x =\n          (bpToPx({\n            refName: tick.refName,\n            coord: tick.base,\n            self: hviewSnap,\n          })?.offsetPx || 0) - offsetPx\n        return (\n          <line\n            key={`line-${JSON.stringify(tick)}`}\n            x1={x}\n            x2={x}\n            y1={0}\n            y2={tick.type === 'major' ? 6 : 4}\n            strokeWidth={1}\n            stroke={theme.palette.divider}\n          />\n        )\n      })}\n      {hticks\n        .filter(tick => tick.type === 'major')\n        .map(tick => {\n          const x =\n            (bpToPx({\n              refName: tick.refName,\n              coord: tick.base,\n              self: hviewSnap,\n            })?.offsetPx || 0) - offsetPx\n          const y = 0\n          return x > 10 ? (\n            <text\n              x={x - 7}\n              y={y}\n              transform={`rotate(${htextRotation},${x},${y})`}\n              key={`text-${JSON.stringify(tick)}`}\n              fill={theme.palette.text.primary}\n              fontSize={11}\n              dominantBaseline=\"middle\"\n              textAnchor=\"end\"\n            >\n              {getTickDisplayStr(tick.base + 1, bpPerPx)}\n            </text>\n          ) : null\n        })}\n      <text\n        y={borderY - 12}\n        x={(viewWidth - borderX) / 2}\n        fill={theme.palette.text.primary}\n        textAnchor=\"middle\"\n        fontSize={11}\n        dominantBaseline=\"hanging\"\n      >\n        {hview.assemblyNames.join(',')}\n      </text>\n    </>\n  )\n})\n\nexport const VerticalAxis = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { borderX, viewHeight } = model\n  const { classes } = useStyles()\n  return (\n    <svg className={classes.vtext} width={borderX} height={viewHeight}>\n      <VerticalAxisRaw model={model} />\n    </svg>\n  )\n})\n\nexport const VerticalAxisRaw = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { viewHeight, borderX, borderY, vview, vtextRotation, vticks } = model\n  const { offsetPx, width, dynamicBlocks, bpPerPx } = vview\n  const dblocks = dynamicBlocks.contentBlocks\n  const hide = getBlockLabelKeysToHide(dblocks, viewHeight, offsetPx)\n  const theme = useTheme()\n  const vviewSnap = {\n    ...getSnapshot(vview),\n    width,\n    staticBlocks: vview.staticBlocks,\n  }\n  return (\n    <>\n      {dblocks\n        .filter(region => !hide.has(region.key))\n        .map(region => {\n          const y = region.offsetPx\n          const x = borderX\n          const yoff = Math.floor(viewHeight - y + offsetPx)\n\n          return (\n            <text\n              transform={`rotate(${vtextRotation},${x},${y})`}\n              key={JSON.stringify(region)}\n              x={x}\n              y={yoff}\n              fill={theme.palette.text.primary}\n              fontSize={11}\n              textAnchor=\"end\"\n            >\n              {region.refName}\n            </text>\n          )\n        })}\n      {vticks.map(tick => {\n        const y =\n          (bpToPx({\n            refName: tick.refName,\n            coord: tick.base,\n            self: vviewSnap,\n          })?.offsetPx || 0) - offsetPx\n        return (\n          <line\n            key={`line-${JSON.stringify(tick)}`}\n            y1={viewHeight - y}\n            y2={viewHeight - y}\n            x1={borderX}\n            x2={borderX - (tick.type === 'major' ? 6 : 4)}\n            strokeWidth={1}\n            stroke={theme.palette.divider}\n          />\n        )\n      })}\n      {vticks\n        .filter(tick => tick.type === 'major')\n        .map(tick => {\n          const y =\n            (bpToPx({\n              refName: tick.refName,\n              coord: tick.base,\n              self: vviewSnap,\n            })?.offsetPx || 0) - offsetPx\n          return y > 10 ? (\n            <text\n              y={viewHeight - y - 3}\n              x={borderX - 7}\n              key={`text-${JSON.stringify(tick)}`}\n              textAnchor=\"end\"\n              fill={theme.palette.text.primary}\n              dominantBaseline=\"hanging\"\n              fontSize={11}\n            >\n              {getTickDisplayStr(tick.base + 1, bpPerPx)}\n            </text>\n          ) : null\n        })}\n      <text\n        y={(viewHeight - borderY) / 2}\n        x={12}\n        fill={theme.palette.text.primary}\n        transform={`rotate(-90,12,${(viewHeight - borderY) / 2})`}\n        textAnchor=\"middle\"\n        fontSize={11}\n      >\n        {vview.assemblyNames.join(',')}\n      </text>\n    </>\n  )\n})\n","import React, { useState, useEffect } from 'react'\nimport { SnapshotIn } from 'mobx-state-tree'\nimport path from 'path'\nimport {\n  FormControlLabel,\n  Grid,\n  Paper,\n  Radio,\n  RadioGroup,\n  Typography,\n} from '@mui/material'\nimport { ErrorMessage, FileSelector } from '@jbrowse/core/ui'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport { observer } from 'mobx-react'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\nfunction getName(\n  sessionTrackData?: { uri: string } | { localPath: string } | { name: string },\n) {\n  return sessionTrackData\n    ? // @ts-expect-error\n      sessionTrackData.uri ||\n        // @ts-expect-error\n        sessionTrackData.localPath ||\n        // @ts-expect-error\n        sessionTrackData.name\n    : undefined\n}\n\nfunction stripGz(fileName: string) {\n  return fileName.endsWith('.gz') ? fileName.slice(0, -3) : fileName\n}\n\nfunction getAdapter({\n  radioOption,\n  assembly1,\n  assembly2,\n  fileLocation,\n  bed1Location,\n  bed2Location,\n}: {\n  radioOption: string\n  assembly1: string\n  assembly2: string\n  fileLocation?: FileLocation\n  bed1Location?: FileLocation\n  bed2Location?: FileLocation\n}) {\n  if (radioOption === '.paf') {\n    return {\n      type: 'PAFAdapter',\n      pafLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.out') {\n    return {\n      type: 'MashMapAdapter',\n      outLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.delta') {\n    return {\n      type: 'DeltaAdapter',\n      deltaLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.chain') {\n    return {\n      type: 'ChainAdapter',\n      chainLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.anchors') {\n    return {\n      type: 'MCScanAnchorsAdapter',\n      mcscanAnchorsLocation: fileLocation,\n      bed1Location,\n      bed2Location,\n      assemblyNames: [assembly1, assembly2],\n    }\n  } else if (radioOption === '.anchors.simple') {\n    return {\n      type: 'MCScanSimpleAnchorsAdapter',\n      mcscanSimpleAnchorsLocation: fileLocation,\n      bed1Location,\n      bed2Location,\n      assemblyNames: [assembly1, assembly2],\n    }\n  } else {\n    throw new Error('Unknown type')\n  }\n}\n\ntype Conf = SnapshotIn<AnyConfigurationModel>\n\nconst OpenTrack = observer(\n  ({\n    sessionTrackData,\n    assembly1,\n    assembly2,\n    setSessionTrackData,\n  }: {\n    sessionTrackData: Conf\n    assembly1: string\n    assembly2: string\n    setSessionTrackData: (arg: Conf) => void\n  }) => {\n    const [bed2Location, setBed2Location] = useState<FileLocation>()\n    const [bed1Location, setBed1Location] = useState<FileLocation>()\n    const [fileLocation, setFileLocation] = useState<FileLocation>()\n    const [value, setValue] = useState('')\n    const [error, setError] = useState<unknown>()\n    const fileName = getName(fileLocation)\n\n    const radioOption =\n      value || (fileName ? path.extname(stripGz(fileName)) : '')\n\n    useEffect(() => {\n      try {\n        if (fileLocation) {\n          const fn = fileName ? path.basename(fileName) : 'MyTrack'\n          const trackId = `${fn}-${Date.now()}`\n          setError(undefined)\n\n          setSessionTrackData({\n            trackId,\n            name: fn,\n            assemblyNames: [assembly2, assembly1],\n            type: 'SyntenyTrack',\n            adapter: getAdapter({\n              radioOption,\n              assembly1,\n              assembly2,\n              fileLocation,\n              bed1Location,\n              bed2Location,\n            }),\n          })\n        }\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    }, [\n      fileName,\n      assembly1,\n      assembly2,\n      bed1Location,\n      bed2Location,\n      fileLocation,\n      radioOption,\n      setSessionTrackData,\n    ])\n    return (\n      <Paper style={{ padding: 12 }}>\n        {error ? <ErrorMessage error={error} /> : null}\n        <Typography style={{ textAlign: 'center' }}>\n          Add a .paf, .out (MashMap), .delta (Mummer), .chain, .anchors or\n          .anchors.simple (MCScan) file to view in the dotplot. These file types\n          can also be gzipped. The first assembly should be the query sequence\n          (e.g. left column of the PAF) and the second assembly should be the\n          target sequence (e.g. right column of the PAF)\n        </Typography>\n        <RadioGroup\n          value={radioOption}\n          onChange={event => setValue(event.target.value)}\n        >\n          <Grid container justifyContent=\"center\">\n            <Grid item>\n              <FormControlLabel value=\".paf\" control={<Radio />} label=\".paf\" />\n            </Grid>\n            <Grid item>\n              <FormControlLabel value=\".out\" control={<Radio />} label=\".out\" />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".delta\"\n                control={<Radio />}\n                label=\".delta\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".chain\"\n                control={<Radio />}\n                label=\".chain\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".anchors\"\n                control={<Radio />}\n                label=\".anchors\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".anchors.simple\"\n                control={<Radio />}\n                label=\".anchors.simple\"\n              />\n            </Grid>\n          </Grid>\n        </RadioGroup>\n        <Grid container justifyContent=\"center\">\n          <Grid item>\n            {value === '.anchors' || value === '.anchors.simple' ? (\n              <div>\n                <div style={{ margin: 20 }}>\n                  Open the {value} and .bed files for both genome assemblies\n                  from the MCScan (Python version) pipeline{' '}\n                  <a href=\"https://github.com/tanghaibao/jcvi/wiki/MCscan-(Python-version)\">\n                    (more info)\n                  </a>\n                </div>\n                <div style={{ display: 'flex' }}>\n                  <div>\n                    <FileSelector\n                      name=\".anchors file\"\n                      description=\"\"\n                      location={fileLocation}\n                      setLocation={loc => setFileLocation(loc)}\n                    />\n                  </div>\n                  <div>\n                    <FileSelector\n                      name=\"genome 1 .bed (left column of anchors file)\"\n                      description=\"\"\n                      location={bed1Location}\n                      setLocation={loc => setBed1Location(loc)}\n                    />\n                  </div>\n                  <div>\n                    <FileSelector\n                      name=\"genome 2 .bed (right column of anchors file)\"\n                      description=\"\"\n                      location={bed2Location}\n                      setLocation={loc => setBed2Location(loc)}\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <FileSelector\n                name={value ? value + ' location' : ''}\n                description=\"\"\n                location={fileLocation}\n                setLocation={loc => setFileLocation(loc)}\n              />\n            )}\n          </Grid>\n        </Grid>\n      </Paper>\n    )\n  },\n)\n\nexport default OpenTrack\n","import React, { useState, useEffect } from 'react'\nimport { Select, MenuItem, Paper, Typography } from '@mui/material'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport { getSession } from '@jbrowse/core/util'\nimport { ErrorMessage } from '@jbrowse/core/ui'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { observer } from 'mobx-react'\n\n// icons\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\n\n// locals\nimport { DotplotViewModel } from '../model'\n\nfunction f(track: AnyConfigurationModel, assembly1: string, assembly2: string) {\n  const assemblyNames = readConfObject(track, 'assemblyNames')\n  return (\n    assemblyNames.includes(assembly1) &&\n    assemblyNames.includes(assembly2) &&\n    track.type.includes('Synteny')\n  )\n}\n\nconst Selector = observer(\n  ({\n    model,\n    assembly1,\n    assembly2,\n    setShowTrackId,\n  }: {\n    model: DotplotViewModel\n    assembly1: string\n    assembly2: string\n    setShowTrackId: (arg: string) => void\n  }) => {\n    const session = getSession(model)\n    const { tracks, sessionTracks } = session\n    const allTracks = [...tracks, ...sessionTracks] as AnyConfigurationModel[]\n    const filteredTracks = allTracks.filter(t => f(t, assembly2, assembly1))\n    const resetTrack = filteredTracks[0]?.trackId || ''\n    const [value, setValue] = useState(resetTrack)\n    useEffect(() => {\n      // if assembly1/assembly2 changes, then we will want to use this effect to change\n      // the state of the useState because it otherwise gets locked to a stale value\n      setValue(resetTrack)\n    }, [resetTrack])\n\n    useEffect(() => {\n      // sets track data in a useEffect because the initial load is needed as well as\n      // onChange's to the select box\n      setShowTrackId(value)\n    }, [value, setShowTrackId])\n\n    return (\n      <Paper style={{ padding: 12 }}>\n        <Typography paragraph>\n          Select a track from the select box below, the track will be shown when\n          you hit \"Launch\".\n        </Typography>\n\n        <Typography paragraph>\n          Note: there is a track selector <i>inside</i> the DotplotView, which\n          can turn on one or more SyntenyTracks (more than one can be displayed\n          at once). Look for the track selector icon <TrackSelectorIcon />\n        </Typography>\n        {filteredTracks.length ? (\n          <Select\n            value={value}\n            onChange={event => setValue(event.target.value)}\n          >\n            {filteredTracks.map(track => (\n              <MenuItem key={track.trackId} value={track.trackId}>\n                {getTrackName(track, session)}\n              </MenuItem>\n            ))}\n          </Select>\n        ) : (\n          <ErrorMessage\n            error={`No synteny tracks found for ${assembly1},${assembly2}`}\n          />\n        )}\n      </Paper>\n    )\n  },\n)\n\nexport default Selector\n","import React, { useState, useEffect } from 'react'\nimport {\n  Button,\n  Container,\n  FormControl,\n  FormLabel,\n  FormControlLabel,\n  Grid,\n  Paper,\n  Radio,\n  RadioGroup,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { transaction } from 'mobx'\nimport { SnapshotIn } from 'mobx-state-tree'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { getSession, isSessionWithAddTracks } from '@jbrowse/core/util'\nimport { ErrorMessage, AssemblySelector } from '@jbrowse/core/ui'\n\n// locals\nimport { DotplotViewModel } from '../model'\nimport ImportCustomTrack from './ImportCustomTrack'\nimport ImportSyntenyTrackSelector from './ImportSyntenyTrackSelector'\n\nconst useStyles = makeStyles()(theme => ({\n  importFormContainer: {\n    padding: theme.spacing(4),\n    margin: '0 auto',\n  },\n  assemblySelector: {\n    width: '75%',\n    margin: '0 auto',\n  },\n}))\n\ntype Conf = SnapshotIn<AnyConfigurationModel>\n\nfunction TrackSelector({\n  setSessionTrackData,\n  setShowTrackId,\n  sessionTrackData,\n  assembly1,\n  assembly2,\n  model,\n}: {\n  sessionTrackData: Conf\n  setSessionTrackData: (arg: Conf) => void\n  setShowTrackId: (arg?: string) => void\n  model: DotplotViewModel\n  assembly1: string\n  assembly2: string\n}) {\n  const [choice, setChoice] = useState('none')\n\n  useEffect(() => {\n    if (choice === 'none') {\n      setSessionTrackData(undefined)\n      setShowTrackId(undefined)\n    }\n  }, [choice, setSessionTrackData, setShowTrackId])\n  return (\n    <>\n      <FormControl>\n        <FormLabel id=\"group-label\">\n          (Optional) Select or add a synteny track\n        </FormLabel>\n        <RadioGroup\n          row\n          value={choice}\n          onChange={event => setChoice(event.target.value)}\n          aria-labelledby=\"group-label\"\n        >\n          <FormControlLabel value=\"none\" control={<Radio />} label=\"None\" />\n          <FormControlLabel\n            value=\"tracklist\"\n            control={<Radio />}\n            label=\"Existing track\"\n          />\n          <FormControlLabel\n            value=\"custom\"\n            control={<Radio />}\n            label=\"New track\"\n          />\n        </RadioGroup>\n      </FormControl>\n      {choice === 'custom' ? (\n        <ImportCustomTrack\n          setSessionTrackData={setSessionTrackData}\n          sessionTrackData={sessionTrackData}\n          assembly2={assembly2}\n          assembly1={assembly1}\n        />\n      ) : null}\n      {choice === 'tracklist' ? (\n        <ImportSyntenyTrackSelector\n          model={model}\n          assembly1={assembly1}\n          assembly2={assembly2}\n          setShowTrackId={setShowTrackId}\n        />\n      ) : null}\n    </>\n  )\n}\n\nconst DotplotImportForm = observer(({ model }: { model: DotplotViewModel }) => {\n  const { classes } = useStyles()\n  const session = getSession(model)\n  const { assemblyNames } = session\n  const [assembly2, setAssembly2] = useState(assemblyNames[0] || '')\n  const [assembly1, setAssembly1] = useState(assemblyNames[0] || '')\n  const [error, setError] = useState<unknown>()\n  const [sessionTrackData, setSessionTrackData] = useState<Conf>()\n  const [showTrackId, setShowTrackId] = useState<string>()\n\n  function onOpenClick() {\n    try {\n      if (!isSessionWithAddTracks(session)) {\n        return\n      }\n      setError(undefined)\n      model.setError(undefined)\n      transaction(() => {\n        if (sessionTrackData) {\n          session.addTrackConf(sessionTrackData)\n          model.toggleTrack(sessionTrackData.trackId)\n        } else if (showTrackId) {\n          model.showTrack(showTrackId)\n        }\n\n        model.setViews([\n          { bpPerPx: 0.1, offsetPx: 0 },\n          { bpPerPx: 0.1, offsetPx: 0 },\n        ])\n        model.setAssemblyNames(assembly2, assembly1)\n      })\n    } catch (e) {\n      console.error(e)\n      setError(e)\n    }\n  }\n\n  // this is a combination of any displayed error message we have\n  const displayError = error || model.error\n  return (\n    <Container className={classes.importFormContainer}>\n      {displayError ? <ErrorMessage error={displayError} /> : null}\n      <Grid\n        container\n        spacing={1}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        className={classes.assemblySelector}\n      >\n        <Grid item>\n          <Paper style={{ padding: 12 }}>\n            <Typography style={{ textAlign: 'center' }}>\n              Select assemblies for dotplot view\n            </Typography>\n            <Grid\n              container\n              spacing={1}\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <AssemblySelector\n                  selected={assembly1}\n                  onChange={val => setAssembly1(val)}\n                  session={session}\n                />\n              </Grid>\n              <Grid item>\n                <AssemblySelector\n                  selected={assembly2}\n                  onChange={val => setAssembly2(val)}\n                  session={session}\n                />\n              </Grid>\n              <Grid item>\n                <FormControl>\n                  <Button\n                    onClick={onOpenClick}\n                    variant=\"contained\"\n                    color=\"primary\"\n                  >\n                    Launch\n                  </Button>\n                </FormControl>\n              </Grid>\n            </Grid>\n          </Paper>\n          <TrackSelector\n            setShowTrackId={setShowTrackId}\n            assembly2={assembly2}\n            assembly1={assembly1}\n            setSessionTrackData={setSessionTrackData}\n            sessionTrackData={sessionTrackData}\n            model={model}\n          />\n        </Grid>\n      </Grid>\n    </Container>\n  )\n})\n\nexport default DotplotImportForm\n","import SvgIcon, { SvgIconProps } from '@mui/material/SvgIcon'\nimport React from 'react'\n\nexport function CursorMove(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M13,6V11H18V7.75L22.25,12L18,16.25V13H13V18H16.25L12,22.25L7.75,18H11V13H6V16.25L1.75,12L6,7.75V11H11V6H7.75L12,1.75L16.25,6H13Z\"\n      />\n    </SvgIcon>\n  )\n}\n\nexport function CursorMouse(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M10.07,14.27C10.57,14.03 11.16,14.25 11.4,14.75L13.7,19.74L15.5,18.89L13.19,13.91C12.95,13.41 13.17,12.81 13.67,12.58L13.95,12.5L16.25,12.05L8,5.12V15.9L9.82,14.43L10.07,14.27M13.64,21.97C13.14,22.21 12.54,22 12.31,21.5L10.13,16.76L7.62,18.78C7.45,18.92 7.24,19 7,19A1,1 0 0,1 6,18V3A1,1 0 0,1 7,2C7.24,2 7.47,2.09 7.64,2.23L7.65,2.22L19.14,11.86C19.57,12.22 19.62,12.85 19.27,13.27C19.12,13.45 18.91,13.57 18.7,13.61L15.54,14.23L17.74,18.96C18,19.46 17.76,20.05 17.26,20.28L13.64,21.97Z\"\n      />\n    </SvgIcon>\n  )\n}\n","import React, { lazy, useState } from 'react'\nimport { Alert, Button } from '@mui/material'\nimport { observer } from 'mobx-react'\n\n// locals\nimport { DotplotViewModel } from '../model'\n\n// lazy components\nconst WarningDialog = lazy(() => import('./WarningDialog'))\n\nexport default observer(function ({ model }: { model: DotplotViewModel }) {\n  const trackWarnings = model.tracks.filter(t => t.displays[0].warnings?.length)\n  const [shown, setShown] = useState(false)\n  return trackWarnings.length ? (\n    <Alert severity=\"warning\">\n      Warnings during render{' '}\n      <Button onClick={() => setShown(true)}>More info</Button>\n      {shown ? (\n        <WarningDialog\n          trackWarnings={trackWarnings}\n          handleClose={() => setShown(false)}\n        />\n      ) : null}\n    </Alert>\n  ) : null\n})\n","import React from 'react'\nimport { IconButton, Paper } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\n\n// icons\nimport ArrowDropDown from '@mui/icons-material/ArrowDropDown'\nimport ArrowDropUp from '@mui/icons-material/ArrowDropUp'\nimport ArrowLeft from '@mui/icons-material/ArrowLeft'\nimport ArrowRight from '@mui/icons-material/ArrowRight'\nimport ZoomIn from '@mui/icons-material/ZoomIn'\nimport ZoomOut from '@mui/icons-material/ZoomOut'\n\n// locals\nimport { DotplotViewModel } from '../model'\n\nconst useStyles = makeStyles()({\n  dpad: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, 1fr)',\n    margin: 0,\n    position: 'absolute',\n    right: 50,\n    zIndex: 1000,\n    top: 50,\n  },\n  icon: {\n    padding: 0,\n    margin: 0,\n  },\n})\n\nexport default observer(function PanButtons({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { classes } = useStyles()\n  return (\n    <Paper className={classes.dpad} elevation={6}>\n      <div />\n      <IconButton\n        className={classes.icon}\n        onClick={() => model.vview.scroll(100)}\n      >\n        <ArrowDropUp />\n      </IconButton>\n      <div />\n\n      <IconButton\n        className={classes.icon}\n        onClick={() => model.hview.scroll(-100)}\n      >\n        <ArrowLeft />\n      </IconButton>\n      <div />\n      <IconButton\n        className={classes.icon}\n        onClick={() => model.hview.scroll(100)}\n      >\n        <ArrowRight />\n      </IconButton>\n\n      <div />\n      <IconButton\n        className={classes.icon}\n        onClick={() => model.vview.scroll(-100)}\n      >\n        <ArrowDropDown />\n      </IconButton>\n      <div />\n      <IconButton\n        className={classes.icon}\n        onClick={() => {\n          model.hview.zoomIn()\n          model.vview.zoomIn()\n        }}\n      >\n        <ZoomIn />\n      </IconButton>\n      <div />\n      <IconButton\n        className={classes.icon}\n        onClick={() => {\n          model.hview.zoomOut()\n          model.vview.zoomOut()\n        }}\n      >\n        <ZoomOut />\n      </IconButton>\n    </Paper>\n  )\n})\n","import React, { useState } from 'react'\nimport { IconButton, Typography } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\nimport { getBpDisplayStr } from '@jbrowse/core/util'\nimport { Menu } from '@jbrowse/core/ui'\n\n// icons\nimport ZoomOut from '@mui/icons-material/ZoomOut'\nimport ZoomIn from '@mui/icons-material/ZoomIn'\nimport MoreVert from '@mui/icons-material/MoreVert'\nimport { CursorMouse, CursorMove } from './CursorIcon'\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\n\n// locals\nimport { DotplotViewModel } from '../model'\nimport DotplotWarnings from './DotplotWarnings'\nimport PanButtons from './PanButtons'\n\nconst useStyles = makeStyles()({\n  iconButton: {\n    margin: 5,\n  },\n  bp: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 10,\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  headerBar: {\n    display: 'flex',\n    position: 'relative',\n  },\n})\n\nconst DotplotControls = observer(({ model }: { model: DotplotViewModel }) => {\n  const { classes } = useStyles()\n  const [menuAnchorEl, setMenuAnchorEl] = useState<HTMLElement>()\n  return (\n    <div>\n      <IconButton onClick={model.zoomOutButton} className={classes.iconButton}>\n        <ZoomOut />\n      </IconButton>\n\n      <IconButton onClick={model.zoomInButton} className={classes.iconButton}>\n        <ZoomIn />\n      </IconButton>\n\n      <IconButton\n        onClick={() => model.activateTrackSelector()}\n        className={classes.iconButton}\n        title=\"Open track selector\"\n        data-testid=\"circular_track_select\"\n      >\n        <TrackSelectorIcon />\n      </IconButton>\n\n      <IconButton\n        onClick={event => setMenuAnchorEl(event.currentTarget)}\n        className={classes.iconButton}\n      >\n        <MoreVert />\n      </IconButton>\n\n      {menuAnchorEl ? (\n        <Menu\n          anchorEl={menuAnchorEl}\n          open\n          onMenuItemClick={(_event, callback) => {\n            callback()\n            setMenuAnchorEl(undefined)\n          }}\n          menuItems={[\n            {\n              onClick: () => model.squareView(),\n              label: 'Square view - same base pairs per pixel',\n            },\n            {\n              onClick: () => model.squareViewProportional(),\n              label: 'Rectanglularize view - same total bp',\n            },\n            {\n              onClick: () => model.showAllRegions(),\n              label: 'Show all regions',\n            },\n            {\n              onClick: () => model.setDrawCigar(!model.drawCigar),\n              type: 'checkbox',\n              label: 'Draw CIGAR',\n              checked: model.drawCigar,\n            },\n            {\n              onClick: () => model.setShowPanButtons(!model.showPanButtons),\n              label: 'Show pan buttons',\n              type: 'checkbox',\n              checked: model.showPanButtons,\n            },\n            {\n              label: 'Click and drag mode',\n              subMenu: [\n                {\n                  onClick: () => model.setCursorMode('move'),\n                  label: 'Pan by default, select region when ctrl key is held',\n                  icon: CursorMove,\n                  type: 'radio',\n                  checked: model.cursorMode === 'move',\n                },\n                {\n                  onClick: () => model.setCursorMode('crosshair'),\n                  label: 'Select region by default, pan when ctrl key is held',\n                  icon: CursorMouse,\n                  type: 'radio',\n                  checked: model.cursorMode === 'crosshair',\n                },\n              ],\n            },\n            {\n              label: 'Wheel scroll mode',\n              subMenu: [\n                {\n                  onClick: () => model.setWheelMode('pan'),\n                  label: 'Pans view',\n                  type: 'radio',\n                  checked: model.wheelMode === 'pan',\n                },\n                {\n                  onClick: () => model.setWheelMode('zoom'),\n                  label: 'Zooms view',\n                  type: 'radio',\n                  checked: model.wheelMode === 'zoom',\n                },\n                {\n                  onClick: () => model.setWheelMode('none'),\n                  label: 'Disable',\n                  type: 'radio',\n                  checked: model.wheelMode === 'none',\n                },\n              ],\n            },\n          ]}\n          onClose={() => setMenuAnchorEl(undefined)}\n        />\n      ) : null}\n    </div>\n  )\n})\n\nexport default observer(function Header({\n  model,\n  selection,\n}: {\n  model: DotplotViewModel\n  selection?: { width: number; height: number }\n}) {\n  const { classes } = useStyles()\n  const { hview, vview, showPanButtons } = model\n  return (\n    <div className={classes.headerBar}>\n      <DotplotControls model={model} />\n      <Typography className={classes.bp} variant=\"body2\" color=\"textSecondary\">\n        x: {hview.assemblyNames.join(',')} {getBpDisplayStr(hview.currBp)}\n        <br />\n        y: {vview.assemblyNames.join(',')} {getBpDisplayStr(vview.currBp)}\n      </Typography>\n      {selection ? (\n        <Typography\n          className={classes.bp}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >\n          {`width:${getBpDisplayStr(hview.bpPerPx * selection.width)}`} <br />\n          {`height:${getBpDisplayStr(vview.bpPerPx * selection.height)}`}\n        </Typography>\n      ) : null}\n      <div className={classes.spacer} />\n      <DotplotWarnings model={model} />\n      {showPanButtons ? <PanButtons model={model} /> : null}\n    </div>\n  )\n})\n","import React, { useMemo, useRef, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport { DotplotViewModel } from '../model'\nimport { locstr } from './util'\nimport { Portal, alpha } from '@mui/material'\nimport { usePopper } from 'react-popper'\n\nexport function round(value: number) {\n  return Math.round(value * 1e5) / 1e5\n}\nconst useStyles = makeStyles()(theme => ({\n  // these styles come from\n  // https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/Tooltip/Tooltip.js\n  tooltip: {\n    position: 'absolute',\n    pointerEvents: 'none',\n    backgroundColor: alpha(theme.palette.grey[700], 0.9),\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.common.white,\n    fontFamily: theme.typography.fontFamily,\n    padding: '4px 8px',\n    fontSize: theme.typography.pxToRem(12),\n    lineHeight: `${round(14 / 10)}em`,\n    maxWidth: 300,\n    wordWrap: 'break-word',\n  },\n}))\n\ntype Coord = [number, number] | undefined\nconst blank = { left: 0, top: 0, width: 0, height: 0 }\n\nexport const TooltipWhereMouseovered = observer(function ({\n  model,\n  mouserect,\n  mouserectClient,\n  xdistance,\n  ydistance,\n}: {\n  model: DotplotViewModel\n  mouserect: Coord\n  mouserectClient: Coord\n  xdistance: number\n  ydistance: number\n}) {\n  const { classes } = useStyles()\n  const { hview, vview, viewHeight } = model\n  const [anchorEl, setAnchorEl] = useState<HTMLDivElement | null>(null)\n  const ref = useRef<HTMLDivElement>(null)\n  const rect = ref.current?.getBoundingClientRect() || blank\n  const offset = 6\n  const w = rect.height + offset * 2\n\n  // must be memoized a la https://github.com/popperjs/react-popper/issues/391\n  const virtElement = useMemo(\n    () => ({\n      getBoundingClientRect: () => {\n        const x = offset + (mouserectClient?.[0] || 0) - (xdistance < 0 ? w : 0)\n        const y = offset + (mouserectClient?.[1] || 0) - (ydistance < 0 ? w : 0)\n        return {\n          top: y,\n          left: x,\n          bottom: y,\n          right: x,\n          width: 0,\n          height: 0,\n          x,\n          y,\n          toJSON() {},\n        }\n      },\n    }),\n    [mouserectClient, xdistance, ydistance, w],\n  )\n  const { styles, attributes } = usePopper(virtElement, anchorEl, {\n    placement: xdistance < 0 ? 'left' : 'right',\n  })\n  return (\n    <>\n      {mouserect ? (\n        <Portal>\n          <div\n            ref={setAnchorEl}\n            className={classes.tooltip}\n            // zIndex needed to go over widget drawer\n            style={{ ...styles.popper, zIndex: 100000 }}\n            {...attributes.popper}\n          >\n            {`x - ${locstr(mouserect[0], hview)}`}\n            <br />\n            {`y - ${locstr(viewHeight - mouserect[1], vview)}`}\n            <br />\n          </div>\n        </Portal>\n      ) : null}\n    </>\n  )\n})\n\nexport const TooltipWhereClicked = observer(function ({\n  model,\n  mousedown,\n  mousedownClient,\n  xdistance,\n  ydistance,\n}: {\n  model: DotplotViewModel\n  mousedown: Coord\n  mousedownClient: Coord\n  xdistance: number\n  ydistance: number\n}) {\n  const { classes } = useStyles()\n  const { hview, vview, viewHeight } = model\n  const [anchorEl, setAnchorEl] = useState<HTMLDivElement | null>(null)\n\n  // must be memoized a la https://github.com/popperjs/react-popper/issues/391\n  const virtElement = useMemo(\n    () => ({\n      getBoundingClientRect: () => {\n        const x = (mousedownClient?.[0] || 0) - (xdistance < 0 ? 0 : 0)\n        const y = (mousedownClient?.[1] || 0) - (ydistance < 0 ? 0 : 0)\n        return {\n          top: y,\n          left: x,\n          bottom: y,\n          right: x,\n          width: 0,\n          height: 0,\n          x,\n          y,\n          toJSON() {},\n        }\n      },\n    }),\n    [mousedownClient, xdistance, ydistance],\n  )\n  const { styles, attributes } = usePopper(virtElement, anchorEl, {\n    placement: xdistance < 0 ? 'right' : 'left',\n  })\n  return (\n    <>\n      {mousedown && Math.abs(xdistance) > 3 && Math.abs(ydistance) > 3 ? (\n        <Portal>\n          <div\n            ref={setAnchorEl}\n            className={classes.tooltip}\n            // zIndex needed to go over widget drawer\n            style={{ ...styles.popper, zIndex: 100000 }}\n            {...attributes.popper}\n          >\n            {`x - ${locstr(mousedown[0], hview)}`}\n            <br />\n            {`y - ${locstr(viewHeight - mousedown[1], vview)}`}\n            <br />\n          </div>\n        </Portal>\n      ) : null}\n    </>\n  )\n})\n","import React, { useState, useEffect, useRef } from 'react'\nimport { LoadingEllipses, Menu, ResizeHandle } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\nimport { transaction } from 'mobx'\nimport { makeStyles } from 'tss-react/mui'\nimport normalizeWheel from 'normalize-wheel'\n\n// locals\nimport { DotplotViewModel } from '../model'\nimport ImportForm from './ImportForm'\nimport Header from './Header'\nimport Grid from './Grid'\nimport { HorizontalAxis, VerticalAxis } from './Axes'\nimport { TooltipWhereClicked, TooltipWhereMouseovered } from './DotplotTooltip'\n\nconst blank = { left: 0, top: 0, width: 0, height: 0 }\n\nconst useStyles = makeStyles()(theme => ({\n  spacer: {\n    gridColumn: '1/2',\n    gridRow: '2/2',\n  },\n  root: {\n    position: 'relative',\n    marginBottom: theme.spacing(1),\n    overflow: 'hidden',\n  },\n\n  container: {\n    display: 'grid',\n    padding: 5,\n    position: 'relative',\n  },\n  overlay: {\n    pointerEvents: 'none',\n    overflow: 'hidden',\n    display: 'flex',\n    width: '100%',\n    gridRow: '1/2',\n    gridColumn: '2/2',\n    zIndex: 100, // needs to be below controls\n    '& path': {\n      cursor: 'crosshair',\n      fill: 'none',\n    },\n  },\n\n  content: {\n    position: 'relative',\n    gridColumn: '2/2',\n    gridRow: '1/2',\n  },\n\n  resizeHandle: {\n    height: 4,\n    background: '#ccc',\n    boxSizing: 'border-box',\n    borderTop: '1px solid #fafafa',\n  },\n}))\n\ntype Coord = [number, number] | undefined\ntype Rect = { left: number; top: number }\n\n// produces offsetX/offsetY coordinates from a clientX and an element's\n// getBoundingClientRect\nfunction getOffset(coord: Coord, rect: Rect) {\n  return coord && ([coord[0] - rect.left, coord[1] - rect.top] as Coord)\n}\n\nconst RenderedComponent = observer(({ model }: { model: DotplotViewModel }) => {\n  const { classes } = useStyles()\n  return (\n    <div className={classes.overlay}>\n      {model.tracks.map(track => {\n        const [display] = track.displays\n        const { RenderingComponent } = display\n        return RenderingComponent ? (\n          <RenderingComponent\n            key={track.configuration.trackId}\n            model={display}\n          />\n        ) : null\n      })}\n    </div>\n  )\n})\n\nconst DotplotViewInternal = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { classes } = useStyles()\n  const [mousecurrClient, setMouseCurrClient] = useState<Coord>()\n  const [mousedownClient, setMouseDownClient] = useState<Coord>()\n  const [mouseOvered, setMouseOvered] = useState(false)\n  const [mouseupClient, setMouseUpClient] = useState<Coord>()\n  const ref = useRef<HTMLDivElement>(null)\n  const root = useRef<HTMLDivElement>(null)\n  const distanceX = useRef(0)\n  const distanceY = useRef(0)\n  const scheduled = useRef(false)\n  const [ctrlKeyWasUsed, setCtrlKeyWasUsed] = useState(false)\n  const svg = ref.current?.getBoundingClientRect() || blank\n  const rootRect = ref.current?.getBoundingClientRect() || blank\n  const mousedown = getOffset(mousedownClient, svg)\n  const mousecurr = getOffset(mousecurrClient, svg)\n  const mouseup = getOffset(mouseupClient, svg)\n  const mouserectClient = mouseupClient || mousecurrClient\n  const mouserect = mouseup || mousecurr\n  const xdistance = mousedown && mouserect ? mouserect[0] - mousedown[0] : 0\n  const ydistance = mousedown && mouserect ? mouserect[1] - mousedown[1] : 0\n  const { hview, vview, wheelMode, cursorMode } = model\n\n  const validPan =\n    (cursorMode === 'move' && !ctrlKeyWasUsed) ||\n    (cursorMode === 'crosshair' && ctrlKeyWasUsed)\n\n  const validSelect =\n    (cursorMode === 'move' && ctrlKeyWasUsed) ||\n    (cursorMode === 'crosshair' && !ctrlKeyWasUsed)\n\n  // use non-React wheel handler to properly prevent body scrolling\n  useEffect(() => {\n    function onWheel(origEvent: WheelEvent) {\n      const event = normalizeWheel(origEvent)\n      origEvent.preventDefault()\n\n      distanceX.current += event.pixelX\n      distanceY.current -= event.pixelY\n      if (!scheduled.current) {\n        scheduled.current = true\n\n        window.requestAnimationFrame(() => {\n          transaction(() => {\n            if (wheelMode === 'pan') {\n              hview.scroll(distanceX.current / 3)\n              vview.scroll(distanceY.current / 10)\n            } else if (wheelMode === 'zoom') {\n              if (\n                Math.abs(distanceY.current) > Math.abs(distanceX.current) * 2 &&\n                mousecurr\n              ) {\n                const val = distanceY.current < 0 ? 1.1 : 0.9\n                hview.zoomTo(hview.bpPerPx * val, mousecurr[0])\n                vview.zoomTo(\n                  vview.bpPerPx * val,\n                  rootRect.height - mousecurr[1],\n                )\n              }\n            }\n          })\n          scheduled.current = false\n          distanceX.current = 0\n          distanceY.current = 0\n        })\n      }\n    }\n    if (ref.current) {\n      const curr = ref.current\n      curr.addEventListener('wheel', onWheel)\n      return () => curr.removeEventListener('wheel', onWheel)\n    }\n    return () => {}\n  }, [hview, vview, wheelMode, mousecurr, rootRect.height])\n\n  useEffect(() => {\n    function globalMouseMove(event: MouseEvent) {\n      setMouseCurrClient([event.clientX, event.clientY])\n\n      if (mousecurrClient && mousedownClient && validPan && !mouseupClient) {\n        hview.scroll(-event.clientX + mousecurrClient[0])\n        vview.scroll(event.clientY - mousecurrClient[1])\n      }\n    }\n\n    window.addEventListener('mousemove', globalMouseMove)\n    return () => window.removeEventListener('mousemove', globalMouseMove)\n  }, [\n    validPan,\n    mousecurrClient,\n    mousedownClient,\n    cursorMode,\n    ctrlKeyWasUsed,\n    mouseupClient,\n    hview,\n    vview,\n  ])\n\n  // detect a mouseup after a mousedown was submitted, autoremoves mouseup\n  // once that single mouseup is set\n  useEffect(() => {\n    function globalMouseUp(event: MouseEvent) {\n      if (Math.abs(xdistance) > 3 && Math.abs(ydistance) > 3 && validSelect) {\n        setMouseUpClient([event.clientX, event.clientY])\n      } else {\n        setMouseDownClient(undefined)\n      }\n    }\n\n    if (mousedown && !mouseup) {\n      window.addEventListener('mouseup', globalMouseUp, true)\n      return () => window.removeEventListener('mouseup', globalMouseUp, true)\n    }\n    return () => {}\n  }, [\n    validSelect,\n    mousedown,\n    mousecurr,\n    mouseup,\n    xdistance,\n    ydistance,\n    ctrlKeyWasUsed,\n    cursorMode,\n  ])\n\n  return (\n    <div>\n      <Header\n        model={model}\n        selection={\n          !validSelect || !(mousedown && mouserect)\n            ? undefined\n            : {\n                width: Math.abs(xdistance),\n                height: Math.abs(ydistance),\n              }\n        }\n      />\n      <div\n        ref={root}\n        className={classes.root}\n        onMouseLeave={() => setMouseOvered(false)}\n        onMouseEnter={() => setMouseOvered(true)}\n      >\n        <div className={classes.container}>\n          <VerticalAxis model={model} />\n          <HorizontalAxis model={model} />\n          <div ref={ref} className={classes.content}>\n            {mouseOvered && validSelect ? (\n              <TooltipWhereMouseovered\n                model={model}\n                mouserect={mouserect}\n                mouserectClient={mouserectClient}\n                xdistance={xdistance}\n                ydistance={ydistance}\n              />\n            ) : null}\n            {validSelect ? (\n              <TooltipWhereClicked\n                model={model}\n                mousedown={mousedown}\n                mousedownClient={mousedownClient}\n                xdistance={xdistance}\n                ydistance={ydistance}\n              />\n            ) : null}\n            <div\n              style={{ cursor: ctrlKeyWasUsed ? 'pointer' : cursorMode }}\n              onMouseDown={event => {\n                if (event.button === 0) {\n                  const { clientX, clientY } = event\n                  setMouseDownClient([clientX, clientY])\n                  setMouseCurrClient([clientX, clientY])\n                  setCtrlKeyWasUsed(event.ctrlKey)\n                }\n              }}\n            >\n              <Grid model={model}>\n                {validSelect && mousedown && mouserect ? (\n                  <rect\n                    fill=\"rgba(255,0,0,0.3)\"\n                    x={Math.min(mouserect[0], mousedown[0])}\n                    y={Math.min(mouserect[1], mousedown[1])}\n                    width={Math.abs(xdistance)}\n                    height={Math.abs(ydistance)}\n                  />\n                ) : null}\n              </Grid>\n            </div>\n            <div className={classes.spacer} />\n          </div>\n          <RenderedComponent model={model} />\n          <Menu\n            open={Boolean(mouseup)}\n            onMenuItemClick={(_, callback) => {\n              callback()\n              setMouseUpClient(undefined)\n              setMouseDownClient(undefined)\n            }}\n            onClose={() => {\n              setMouseUpClient(undefined)\n              setMouseDownClient(undefined)\n            }}\n            anchorReference=\"anchorPosition\"\n            anchorPosition={\n              mouseupClient\n                ? {\n                    top: mouseupClient[1] + 50,\n                    left: mouseupClient[0] + 50,\n                  }\n                : undefined\n            }\n            style={{ zIndex: 10000 }}\n            menuItems={[\n              {\n                label: 'Zoom in',\n                onClick: () => {\n                  if (mousedown && mouseup) {\n                    model.zoomIn(mousedown, mouseup)\n                  }\n                },\n              },\n              {\n                label: 'Open linear synteny view',\n                onClick: () => {\n                  if (mousedown && mouseup) {\n                    model.onDotplotView(mousedown, mouseup)\n                  }\n                },\n              },\n            ]}\n          />\n        </div>\n        <ResizeHandle\n          onDrag={n => model.setHeight(model.height + n)}\n          className={classes.resizeHandle}\n        />\n      </div>\n    </div>\n  )\n})\nconst DotplotView = observer(({ model }: { model: DotplotViewModel }) => {\n  const { initialized, loading, error } = model\n\n  if ((!initialized && !loading) || error) {\n    return <ImportForm model={model} />\n  }\n\n  if (loading) {\n    return <LoadingEllipses variant=\"h6\" />\n  }\n\n  return <DotplotViewInternal model={model} />\n})\n\nexport default DotplotView\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { useTheme } from '@mui/material'\n\n// locals\nimport { DotplotViewModel } from '../model'\n\nexport const GridRaw = observer(function ({\n  model,\n  children,\n}: {\n  model: DotplotViewModel\n  children?: React.ReactNode\n}) {\n  const { viewWidth, viewHeight, hview, vview } = model\n  const hblocks = hview.dynamicBlocks.contentBlocks\n  const vblocks = vview.dynamicBlocks.contentBlocks\n  if (!hblocks.length || !vblocks.length) {\n    return null\n  }\n  const htop = hview.displayedRegionsTotalPx - hview.offsetPx\n  const vtop = vview.displayedRegionsTotalPx - vview.offsetPx\n  const hbottom = hblocks[0].offsetPx - hview.offsetPx\n  const vbottom = vblocks[0].offsetPx - vview.offsetPx\n  const theme = useTheme()\n  const stroke = theme.palette.divider\n\n  // Uses math.max/min avoid making very large SVG rect offscreen element,\n  // which can sometimes fail to draw\n  const rx = Math.max(hbottom, 0)\n  const ry = Math.max(viewHeight - vtop, 0)\n  const w = Math.min(htop - hbottom, viewWidth)\n  const h = Math.min(viewHeight - vbottom - ry, viewHeight)\n\n  let lastx = Infinity\n  let lasty = Infinity\n  return (\n    <>\n      <rect\n        x={rx}\n        y={ry}\n        width={w}\n        height={h}\n        fill={theme.palette.background.default}\n      />\n      <g>\n        {hblocks.map(region => {\n          const x = region.offsetPx - hview.offsetPx\n          const render = Math.floor(x) !== Math.floor(lastx)\n          if (render) {\n            lastx = x\n          }\n          return render ? (\n            <line\n              key={JSON.stringify(region)}\n              x1={x}\n              y1={0}\n              x2={x}\n              y2={viewHeight}\n              stroke={stroke}\n            />\n          ) : null\n        })}\n        {vblocks.map(region => {\n          const y = viewHeight - (region.offsetPx - vview.offsetPx)\n          const render = Math.floor(y) !== Math.floor(lasty)\n          if (render) {\n            lasty = y\n          }\n          return render ? (\n            <line\n              key={JSON.stringify(region)}\n              x1={0}\n              y1={y}\n              x2={viewWidth}\n              y2={y}\n              stroke={stroke}\n            />\n          ) : null\n        })}\n        <line x1={htop} y1={0} x2={htop} y2={viewHeight} stroke={stroke} />\n        <line\n          x1={0}\n          y1={viewHeight - vtop}\n          x2={viewWidth}\n          y2={viewHeight - vtop}\n          stroke={stroke}\n        />\n      </g>\n      {children}\n    </>\n  )\n})\n\nexport default function Grid({\n  model,\n  children,\n}: {\n  model: DotplotViewModel\n  children?: React.ReactNode\n}) {\n  const { viewWidth, viewHeight } = model\n  return (\n    <svg\n      width={viewWidth}\n      height={viewHeight}\n      style={{ background: 'rgba(0,0,0,0.12)' }}\n    >\n      <GridRaw model={model}>{children}</GridRaw>\n    </svg>\n  )\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m7 14 5-5 5 5z\"\n}), 'ArrowDropUp');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m14 7-5 5 5 5V7z\"\n}), 'ArrowLeft');\nexports.default = _default;"],"names":["useStyles","makeStyles","vtext","gridColumn","gridRow","pointerEvents","userSelect","htext","HorizontalAxis","observer","_ref","model","viewWidth","borderY","classes","_jsx","width","height","className","children","HorizontalAxisRaw","_ref2","borderX","hview","htextRotation","hticks","offsetPx","dynamicBlocks","bpPerPx","dblocks","contentBlocks","hide","getBlockLabelKeysToHide","theme","useTheme","hviewSnap","_objectSpread","getSnapshot","staticBlocks","_jsxs","_Fragment","filter","region","has","key","map","x","xoff","Math","floor","transform","concat","y","fill","palette","text","primary","fontSize","dominantBaseline","textAnchor","refName","JSON","stringify","tick","_bpToPx","bpToPx","coord","base","self","x1","x2","y1","y2","type","strokeWidth","stroke","divider","_bpToPx2","getTickDisplayStr","assemblyNames","join","VerticalAxis","_ref3","viewHeight","VerticalAxisRaw","_ref4","vview","vtextRotation","vticks","vviewSnap","yoff","_bpToPx3","_bpToPx4","getAdapter","radioOption","assembly1","assembly2","fileLocation","bed1Location","bed2Location","pafLocation","queryAssembly","targetAssembly","outLocation","deltaLocation","chainLocation","mcscanAnchorsLocation","mcscanSimpleAnchorsLocation","Error","sessionTrackData","setSessionTrackData","_useState","useState","_useState2","_slicedToArray","setBed2Location","_useState3","_useState4","setBed1Location","_useState5","_useState6","setFileLocation","_useState7","_useState8","value","setValue","_useState9","_useState10","error","setError","fileName","uri","localPath","name","undefined","getName","path","endsWith","slice","stripGz","useEffect","fn","trackId","Date","now","adapter","e","console","Paper","style","padding","ErrorMessage","Typography","textAlign","RadioGroup","onChange","event","target","Grid","container","justifyContent","item","FormControlLabel","control","Radio","label","margin","href","display","FileSelector","description","location","setLocation","loc","_filteredTracks$","setShowTrackId","session","getSession","tracks","sessionTracks","filteredTracks","_toConsumableArray","t","track","readConfObject","includes","f","resetTrack","paragraph","TrackSelectorIcon","length","Select","MenuItem","getTrackName","importFormContainer","spacing","assemblySelector","TrackSelector","choice","setChoice","FormControl","FormLabel","id","row","ImportCustomTrack","ImportSyntenyTrackSelector","setAssembly2","setAssembly1","_useState11","_useState12","showTrackId","displayError","Container","alignItems","AssemblySelector","selected","val","Button","onClick","isSessionWithAddTracks","transaction","addTrackConf","toggleTrack","showTrack","setViews","setAssemblyNames","variant","color","CursorMove","props","SvgIcon","d","CursorMouse","WarningDialog","lazy","trackWarnings","_t$displays$0$warning","displays","warnings","shown","setShown","Alert","severity","handleClose","dpad","gridTemplateColumns","position","right","zIndex","top","icon","elevation","IconButton","scroll","ArrowDropUp","ArrowLeft","ArrowRight","ArrowDropDown","zoomIn","ZoomIn","zoomOut","ZoomOut","iconButton","bp","marginLeft","spacer","flexGrow","headerBar","DotplotControls","menuAnchorEl","setMenuAnchorEl","zoomOutButton","zoomInButton","activateTrackSelector","title","currentTarget","MoreVert","Menu","anchorEl","open","onMenuItemClick","_event","callback","menuItems","squareView","squareViewProportional","showAllRegions","setDrawCigar","drawCigar","checked","setShowPanButtons","showPanButtons","subMenu","setCursorMode","cursorMode","setWheelMode","wheelMode","onClose","selection","getBpDisplayStr","currBp","DotplotWarnings","PanButtons","tooltip","backgroundColor","alpha","grey","borderRadius","shape","common","white","fontFamily","typography","pxToRem","lineHeight","round","maxWidth","wordWrap","blank","left","TooltipWhereMouseovered","_ref$current","mouserect","mouserectClient","xdistance","ydistance","setAnchorEl","rect","useRef","current","getBoundingClientRect","w","offset","virtElement","useMemo","bottom","toJSON","_usePopper","usePopper","placement","styles","attributes","Portal","ref","popper","locstr","TooltipWhereClicked","mousedown","mousedownClient","_usePopper2","abs","root","marginBottom","overflow","overlay","cursor","content","resizeHandle","background","boxSizing","borderTop","getOffset","RenderedComponent","RenderingComponent","configuration","DotplotViewInternal","_ref$current2","mousecurrClient","setMouseCurrClient","setMouseDownClient","mouseOvered","setMouseOvered","mouseupClient","setMouseUpClient","distanceX","distanceY","scheduled","ctrlKeyWasUsed","setCtrlKeyWasUsed","svg","rootRect","mousecurr","mouseup","validPan","validSelect","onWheel","origEvent","normalizeWheel","preventDefault","pixelX","pixelY","window","requestAnimationFrame","zoomTo","curr","addEventListener","removeEventListener","globalMouseMove","clientX","clientY","globalMouseUp","Header","onMouseLeave","onMouseEnter","onMouseDown","button","ctrlKey","min","Boolean","_","anchorReference","anchorPosition","onDotplotView","ResizeHandle","onDrag","n","setHeight","initialized","loading","ImportForm","LoadingEllipses","GridRaw","hblocks","vblocks","htop","displayedRegionsTotalPx","vtop","hbottom","vbottom","rx","max","ry","h","lastx","Infinity","lasty","default","render","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx"],"sourceRoot":""}