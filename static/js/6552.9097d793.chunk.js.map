{"version":3,"file":"static/js/6552.9097d793.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/base/ClickAwayListener/ClickAwayListener.js","../../../node_modules/@mui/material/Snackbar/Snackbar.js","../../../node_modules/@mui/base/useSnackbar/useSnackbar.js","../../../node_modules/@mui/material/Snackbar/snackbarClasses.js","../../../node_modules/@mui/material/SnackbarContent/SnackbarContent.js","../../../node_modules/@mui/material/SnackbarContent/snackbarContentClasses.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, exactProp, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\n\n// TODO: return `EventHandlerName extends `on${infer EventName}` ? Lowercase<EventName> : never` once generatePropTypes runs with TS 4.1\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\nfunction clickedRootScrollbar(event, doc) {\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n *\n * Demos:\n *\n * - [Click-Away Listener](https://mui.com/base-ui/react-click-away-listener/)\n *\n * API:\n *\n * - [ClickAwayListener API](https://mui.com/base-ui/react-click-away-listener/components-api/#click-away-listener)\n */\nfunction ClickAwayListener(props) {\n  const {\n    children,\n    disableReactTree = false,\n    mouseEvent = 'onClick',\n    onClickAway,\n    touchEvent = 'onTouchEnd'\n  } = props;\n  const movedRef = React.useRef(false);\n  const nodeRef = React.useRef(null);\n  const activatedRef = React.useRef(false);\n  const syntheticEventRef = React.useRef(false);\n  React.useEffect(() => {\n    // Ensure that this component is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n    setTimeout(() => {\n      activatedRef.current = true;\n    }, 0);\n    return () => {\n      activatedRef.current = false;\n    };\n  }, []);\n  const handleRef = useForkRef(\n  // @ts-expect-error TODO upstream fix\n  children.ref, nodeRef);\n\n  // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviors like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n  const handleClickAway = useEventCallback(event => {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false;\n    const doc = ownerDocument(nodeRef.current);\n\n    // 1. IE11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n    if (!activatedRef.current || !nodeRef.current || 'clientX' in event && clickedRootScrollbar(event, doc)) {\n      return;\n    }\n\n    // Do not act if user performed touchmove\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n    let insideDOM;\n\n    // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      insideDOM = !doc.documentElement.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target) || nodeRef.current.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target);\n    }\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\n      onClickAway(event);\n    }\n  });\n\n  // Keep track of mouse/touch events that bubbled up through the portal.\n  const createHandleSynthetic = handlerName => event => {\n    syntheticEventRef.current = true;\n    const childrenPropsHandler = children.props[handlerName];\n    if (childrenPropsHandler) {\n      childrenPropsHandler(event);\n    }\n  };\n  const childrenProps = {\n    ref: handleRef\n  };\n  if (touchEvent !== false) {\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n  }\n  React.useEffect(() => {\n    if (touchEvent !== false) {\n      const mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      const doc = ownerDocument(nodeRef.current);\n      const handleTouchMove = () => {\n        movedRef.current = true;\n      };\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return () => {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, touchEvent]);\n  if (mouseEvent !== false) {\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n  }\n  React.useEffect(() => {\n    if (mouseEvent !== false) {\n      const mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      const doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return () => {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: /*#__PURE__*/React.cloneElement(children, childrenProps)\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * If `true`, the React tree is ignored and only the DOM tree is considered.\n   * This prop changes how portaled elements are handled.\n   * @default false\n   */\n  disableReactTree: PropTypes.bool,\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   * @default 'onClick'\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', 'onPointerDown', 'onPointerUp', false]),\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   * @default 'onTouchEnd'\n   */\n  touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\nexport { ClickAwayListener };","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"onEnter\", \"onExited\"],\n  _excluded2 = [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onBlur\", \"onClose\", \"onFocus\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, useSlotProps } from '@mui/base';\nimport { ClickAwayListener } from '@mui/base/ClickAwayListener';\nimport { useSnackbar } from '@mui/base/useSnackbar';\nimport styled from '../styles/styled';\nimport useTheme from '../styles/useTheme';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nimport { getSnackbarUtilityClass } from './snackbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    anchorOrigin\n  } = ownerState;\n  const slots = {\n    root: ['root', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`]\n  };\n  return composeClasses(slots, getSnackbarUtilityClass, classes);\n};\nconst SnackbarRoot = styled('div', {\n  name: 'MuiSnackbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return _extends({\n    zIndex: (theme.vars || theme).zIndex.snackbar,\n    position: 'fixed',\n    display: 'flex',\n    left: 8,\n    right: 8,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }, ownerState.anchorOrigin.vertical === 'top' ? {\n    top: 8\n  } : {\n    bottom: 8\n  }, ownerState.anchorOrigin.horizontal === 'left' && {\n    justifyContent: 'flex-start'\n  }, ownerState.anchorOrigin.horizontal === 'right' && {\n    justifyContent: 'flex-end'\n  }, {\n    [theme.breakpoints.up('sm')]: _extends({}, ownerState.anchorOrigin.vertical === 'top' ? {\n      top: 24\n    } : {\n      bottom: 24\n    }, ownerState.anchorOrigin.horizontal === 'center' && center, ownerState.anchorOrigin.horizontal === 'left' && {\n      left: 24,\n      right: 'auto'\n    }, ownerState.anchorOrigin.horizontal === 'right' && {\n      right: 24,\n      left: 'auto'\n    })\n  });\n});\nconst Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSnackbar'\n  });\n  const theme = useTheme();\n  const defaultTransitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n      action,\n      anchorOrigin: {\n        vertical,\n        horizontal\n      } = {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      autoHideDuration = null,\n      children,\n      className,\n      ClickAwayListenerProps,\n      ContentProps,\n      disableWindowBlurListener = false,\n      message,\n      open,\n      TransitionComponent = Grow,\n      transitionDuration = defaultTransitionDuration,\n      TransitionProps: {\n        onEnter,\n        onExited\n      } = {}\n    } = props,\n    TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, _excluded),\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  const ownerState = _extends({}, props, {\n    anchorOrigin: {\n      vertical,\n      horizontal\n    },\n    autoHideDuration,\n    disableWindowBlurListener,\n    TransitionComponent,\n    transitionDuration\n  });\n  const classes = useUtilityClasses(ownerState);\n  const {\n    getRootProps,\n    onClickAway\n  } = useSnackbar(_extends({}, ownerState));\n  const [exited, setExited] = React.useState(true);\n  const rootProps = useSlotProps({\n    elementType: SnackbarRoot,\n    getSlotProps: getRootProps,\n    externalForwardedProps: other,\n    ownerState,\n    additionalProps: {\n      ref\n    },\n    className: [classes.root, className]\n  });\n  const handleExited = node => {\n    setExited(true);\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    setExited(false);\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n\n  // So we only render active snackbars.\n  if (!open && exited) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(ClickAwayListener, _extends({\n    onClickAway: onClickAway\n  }, ClickAwayListenerProps, {\n    children: /*#__PURE__*/_jsx(SnackbarRoot, _extends({}, rootProps, {\n      children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\n        appear: true,\n        in: open,\n        timeout: transitionDuration,\n        direction: vertical === 'top' ? 'down' : 'up',\n        onEnter: handleEnter,\n        onExited: handleExited\n      }, TransitionProps, {\n        children: children || /*#__PURE__*/_jsx(SnackbarContent, _extends({\n          message: message,\n          action: action\n        }, ContentProps))\n      }))\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n  /**\n   * The anchor of the `Snackbar`.\n   * On smaller screens, the component grows to occupy all the available width,\n   * the horizontal alignment is ignored.\n   * @default { vertical: 'bottom', horizontal: 'left' }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   * @default null\n   */\n  autoHideDuration: PropTypes.number,\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n  /**\n   * Props applied to the [`SnackbarContent`](/material-ui/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   * @default false\n   */\n  disableWindowBlurListener: PropTypes.bool,\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: () => null,\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`, or `\"escapeKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Snackbar;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\n\n/**\n * The basic building block for creating custom snackbar.\n *\n * Demos:\n *\n * - [Snackbar](https://mui.com/base-ui/react-snackbar/#hook)\n *\n * API:\n *\n * - [useSnackbar API](https://mui.com/base-ui/react-snackbar/hooks-api/#use-snackbar)\n */\nexport function useSnackbar(parameters) {\n  const {\n    autoHideDuration = null,\n    disableWindowBlurListener = false,\n    onClose,\n    open,\n    resumeHideDuration\n  } = parameters;\n  const timerAutoHide = React.useRef();\n  React.useEffect(() => {\n    if (!open) {\n      return undefined;\n    }\n\n    /**\n     * @param {KeyboardEvent} nativeEvent\n     */\n    function handleKeyDown(nativeEvent) {\n      if (!nativeEvent.defaultPrevented) {\n        // IE11, Edge (prior to using Blink?) use 'Esc'\n        if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {\n          // not calling `preventDefault` since we don't know if people may ignore this event e.g. a permanently open snackbar\n          onClose == null ? void 0 : onClose(nativeEvent, 'escapeKeyDown');\n        }\n      }\n    }\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [open, onClose]);\n  const handleClose = useEventCallback((event, reason) => {\n    onClose == null ? void 0 : onClose(event, reason);\n  });\n  const setAutoHideTimer = useEventCallback(autoHideDurationParam => {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(() => {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(() => {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n    return () => {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]);\n  const handleClickAway = event => {\n    onClose == null ? void 0 : onClose(event, 'clickaway');\n  };\n\n  // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n  const handlePause = () => {\n    clearTimeout(timerAutoHide.current);\n  };\n\n  // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n  const handleResume = React.useCallback(() => {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n  const createHandleBlur = otherHandlers => event => {\n    const onBlurCallback = otherHandlers.onBlur;\n    onBlurCallback == null ? void 0 : onBlurCallback(event);\n    handleResume();\n  };\n  const createHandleFocus = otherHandlers => event => {\n    const onFocusCallback = otherHandlers.onFocus;\n    onFocusCallback == null ? void 0 : onFocusCallback(event);\n    handlePause();\n  };\n  const createMouseEnter = otherHandlers => event => {\n    const onMouseEnterCallback = otherHandlers.onMouseEnter;\n    onMouseEnterCallback == null ? void 0 : onMouseEnterCallback(event);\n    handlePause();\n  };\n  const createMouseLeave = otherHandlers => event => {\n    const onMouseLeaveCallback = otherHandlers.onMouseLeave;\n    onMouseLeaveCallback == null ? void 0 : onMouseLeaveCallback(event);\n    handleResume();\n  };\n  React.useEffect(() => {\n    // TODO: window global should be refactored here\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return () => {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]);\n  const getRootProps = (otherHandlers = {}) => {\n    const propsEventHandlers = extractEventHandlers(parameters);\n    const externalEventHandlers = _extends({}, propsEventHandlers, otherHandlers);\n    return _extends({\n      // ClickAwayListener adds an `onClick` prop which results in the alert not being announced.\n      // See https://github.com/mui/material-ui/issues/29080\n      role: 'presentation'\n    }, externalEventHandlers, {\n      onBlur: createHandleBlur(externalEventHandlers),\n      onFocus: createHandleFocus(externalEventHandlers),\n      onMouseEnter: createMouseEnter(externalEventHandlers),\n      onMouseLeave: createMouseLeave(externalEventHandlers)\n    });\n  };\n  return {\n    getRootProps,\n    onClickAway: handleClickAway\n  };\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSnackbarUtilityClass(slot) {\n  return generateUtilityClass('MuiSnackbar', slot);\n}\nconst snackbarClasses = generateUtilityClasses('MuiSnackbar', ['root', 'anchorOriginTopCenter', 'anchorOriginBottomCenter', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft']);\nexport default snackbarClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"className\", \"message\", \"role\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getSnackbarContentUtilityClass } from './snackbarContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    action: ['action'],\n    message: ['message']\n  };\n  return composeClasses(slots, getSnackbarContentUtilityClass, classes);\n};\nconst SnackbarContentRoot = styled(Paper, {\n  name: 'MuiSnackbarContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => {\n  const emphasis = theme.palette.mode === 'light' ? 0.8 : 0.98;\n  const backgroundColor = emphasize(theme.palette.background.default, emphasis);\n  return _extends({}, theme.typography.body2, {\n    color: theme.vars ? theme.vars.palette.SnackbarContent.color : theme.palette.getContrastText(backgroundColor),\n    backgroundColor: theme.vars ? theme.vars.palette.SnackbarContent.bg : backgroundColor,\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    padding: '6px 16px',\n    borderRadius: (theme.vars || theme).shape.borderRadius,\n    flexGrow: 1,\n    [theme.breakpoints.up('sm')]: {\n      flexGrow: 'initial',\n      minWidth: 288\n    }\n  });\n});\nconst SnackbarContentMessage = styled('div', {\n  name: 'MuiSnackbarContent',\n  slot: 'Message',\n  overridesResolver: (props, styles) => styles.message\n})({\n  padding: '8px 0'\n});\nconst SnackbarContentAction = styled('div', {\n  name: 'MuiSnackbarContent',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  display: 'flex',\n  alignItems: 'center',\n  marginLeft: 'auto',\n  paddingLeft: 16,\n  marginRight: -8\n});\nconst SnackbarContent = /*#__PURE__*/React.forwardRef(function SnackbarContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSnackbarContent'\n  });\n  const {\n      action,\n      className,\n      message,\n      role = 'alert'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SnackbarContentRoot, _extends({\n    role: role,\n    square: true,\n    elevation: 6,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SnackbarContentMessage, {\n      className: classes.message,\n      ownerState: ownerState,\n      children: message\n    }), action ? /*#__PURE__*/_jsx(SnackbarContentAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? SnackbarContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n  /**\n   * The ARIA role attribute of the element.\n   * @default 'alert'\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default SnackbarContent;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSnackbarContentUtilityClass(slot) {\n  return generateUtilityClass('MuiSnackbarContent', slot);\n}\nconst snackbarContentClasses = generateUtilityClasses('MuiSnackbarContent', ['root', 'message', 'action']);\nexport default snackbarContentClasses;"],"names":["mapEventPropToEvent","eventProp","substring","toLowerCase","ClickAwayListener","props","children","_props$disableReactTr","disableReactTree","_props$mouseEvent","mouseEvent","onClickAway","_props$touchEvent","touchEvent","movedRef","React","nodeRef","activatedRef","syntheticEventRef","setTimeout","current","handleRef","useForkRef","ref","handleClickAway","useEventCallback","event","insideReactTree","doc","ownerDocument","documentElement","clientWidth","clientX","clientHeight","clientY","clickedRootScrollbar","composedPath","indexOf","contains","target","createHandleSynthetic","handlerName","childrenPropsHandler","childrenProps","mappedTouchEvent","handleTouchMove","addEventListener","removeEventListener","mappedMouseEvent","_jsx","_excluded","_excluded2","SnackbarRoot","styled","name","slot","overridesResolver","styles","ownerState","root","concat","capitalize","anchorOrigin","vertical","horizontal","_ref","theme","_extends","zIndex","vars","snackbar","position","display","left","right","justifyContent","alignItems","top","bottom","_defineProperty","breakpoints","up","transform","Snackbar","inProps","useThemeProps","useTheme","defaultTransitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","action","_props$anchorOrigin","_props$anchorOrigin2","_props$autoHideDurati","autoHideDuration","className","ClickAwayListenerProps","ContentProps","_props$disableWindowB","disableWindowBlurListener","message","open","_props$TransitionComp","TransitionComponent","Grow","_props$transitionDura","transitionDuration","_props$TransitionProp","TransitionProps","_props$TransitionProp2","onEnter","onExited","_objectWithoutPropertiesLoose","other","classes","slots","composeClasses","getSnackbarUtilityClass","useUtilityClasses","_useSnackbar","parameters","_parameters$autoHideD","_parameters$disableWi","onClose","resumeHideDuration","timerAutoHide","document","handleKeyDown","nativeEvent","defaultPrevented","key","handleClose","reason","setAutoHideTimer","autoHideDurationParam","clearTimeout","handlePause","handleResume","createHandleBlur","otherHandlers","onBlurCallback","onBlur","createHandleFocus","onFocusCallback","onFocus","createMouseEnter","onMouseEnterCallback","onMouseEnter","createMouseLeave","onMouseLeaveCallback","onMouseLeave","window","getRootProps","arguments","length","undefined","propsEventHandlers","extractEventHandlers","externalEventHandlers","role","useSnackbar","_React$useState","_React$useState2","_slicedToArray","exited","setExited","rootProps","useSlotProps","elementType","getSlotProps","externalForwardedProps","additionalProps","appear","in","timeout","direction","node","isAppearing","SnackbarContent","generateUtilityClass","snackbarClasses","generateUtilityClasses","SnackbarContentRoot","Paper","emphasis","palette","mode","backgroundColor","emphasize","background","default","typography","body2","color","getContrastText","bg","flexWrap","padding","borderRadius","shape","flexGrow","minWidth","SnackbarContentMessage","SnackbarContentAction","marginLeft","paddingLeft","marginRight","_props$role","getSnackbarContentUtilityClass","_jsxs","square","elevation","clsx","snackbarContentClasses"],"sourceRoot":""}