{"version":3,"file":"static/js/7554.98251f28.chunk.js","mappings":"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","sources":["../../../plugins/linear-comparative-view/src/LinearComparativeView/components/Rubberband.tsx","../../../plugins/linear-comparative-view/src/LinearComparativeView/components/Header.tsx","../../../plugins/linear-comparative-view/src/LinearComparativeView/components/LinearComparativeView.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { Popover, Tooltip, Typography, alpha } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { stringify } from '@jbrowse/core/util'\nimport { Menu } from '@jbrowse/core/ui'\nimport { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\nimport { LinearComparativeViewModel } from '../model'\n\ntype LCV = LinearComparativeViewModel\ntype LGV = LinearGenomeViewModel\n\nconst useStyles = makeStyles()(theme => {\n  const { tertiary, primary } = theme.palette\n  const background = tertiary\n    ? alpha(tertiary.main, 0.7)\n    : alpha(primary.main, 0.7)\n  return {\n    rubberband: {\n      height: '100%',\n      background,\n      position: 'absolute',\n      zIndex: 10,\n      textAlign: 'center',\n      overflow: 'hidden',\n    },\n    rubberbandControl: {\n      cursor: 'crosshair',\n      width: '100%',\n      minHeight: 8,\n    },\n    rubberbandText: {\n      color: tertiary ? tertiary.contrastText : primary.contrastText,\n    },\n    popover: {\n      mouseEvents: 'none',\n      cursor: 'crosshair',\n    },\n    paper: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n    },\n    guide: {\n      pointerEvents: 'none',\n      height: '100%',\n      width: 1,\n      position: 'absolute',\n      zIndex: 10,\n    },\n    sm: {\n      fontSize: 10,\n    },\n  }\n})\n\nconst VerticalGuide = observer(\n  ({ model, coordX }: { model: LCV; coordX: number }) => {\n    const { classes } = useStyles()\n    return (\n      <Tooltip\n        open\n        placement=\"top\"\n        title={model.views\n          .map(view => view.pxToBp(coordX))\n          .map(elt => (\n            <Typography className={classes.sm} key={JSON.stringify(elt)}>\n              {stringify(elt)}\n            </Typography>\n          ))}\n        arrow\n      >\n        <div\n          className={classes.guide}\n          style={{\n            left: coordX,\n            background: 'red',\n          }}\n        />\n      </Tooltip>\n    )\n  },\n)\n\nfunction Rubberband({\n  model,\n  ControlComponent = <div />,\n}: {\n  model: LCV\n  ControlComponent?: React.ReactElement\n}) {\n  const [startX, setStartX] = useState<number>()\n  const [currentX, setCurrentX] = useState<number>()\n\n  // clientX and clientY used for anchorPosition for menu\n  // offsetX used for calculations about width of selection\n  const [anchorPosition, setAnchorPosition] = useState<{\n    offsetX: number\n    clientX: number\n    clientY: number\n  }>()\n  const [guideX, setGuideX] = useState<number>()\n  const controlsRef = useRef<HTMLDivElement>(null)\n  const rubberbandRef = useRef(null)\n  const { classes } = useStyles()\n  const mouseDragging = startX !== undefined && anchorPosition === undefined\n\n  useEffect(() => {\n    function computeOffsets(offsetX: number, view: LGV) {\n      if (startX === undefined) {\n        return\n      }\n      let leftPx = startX\n      let rightPx = offsetX\n      // handles clicking and dragging to the left\n      if (rightPx < leftPx) {\n        ;[leftPx, rightPx] = [rightPx, leftPx]\n      }\n      const leftOffset = view.pxToBp(leftPx)\n      const rightOffset = view.pxToBp(rightPx)\n\n      return { leftOffset, rightOffset }\n    }\n\n    function globalMouseMove(event: MouseEvent) {\n      if (controlsRef.current && mouseDragging) {\n        const relativeX =\n          event.clientX - controlsRef.current.getBoundingClientRect().left\n        setCurrentX(relativeX)\n      }\n    }\n\n    function globalMouseUp(event: MouseEvent) {\n      if (startX !== undefined && controlsRef.current) {\n        const { clientX, clientY } = event\n        const ref = controlsRef.current\n        const offsetX = clientX - ref.getBoundingClientRect().left\n        // as stated above, store both clientX/Y and offsetX for different\n        // purposes\n        setAnchorPosition({\n          offsetX,\n          clientX,\n          clientY,\n        })\n        model.views.forEach(view => {\n          const args = computeOffsets(offsetX, view)\n          if (args) {\n            const { leftOffset, rightOffset } = args\n            view.setOffsets(leftOffset, rightOffset)\n          }\n        })\n        setGuideX(undefined)\n      }\n    }\n    if (mouseDragging) {\n      window.addEventListener('mousemove', globalMouseMove)\n      window.addEventListener('mouseup', globalMouseUp)\n      return () => {\n        window.removeEventListener('mousemove', globalMouseMove)\n        window.removeEventListener('mouseup', globalMouseUp)\n      }\n    }\n    return () => {}\n  }, [startX, mouseDragging, anchorPosition, model])\n\n  useEffect(() => {\n    if (\n      !mouseDragging &&\n      currentX !== undefined &&\n      startX !== undefined &&\n      Math.abs(currentX - startX) <= 3\n    ) {\n      handleClose()\n    }\n  }, [mouseDragging, currentX, startX])\n\n  function mouseDown(event: React.MouseEvent<HTMLDivElement>) {\n    event.preventDefault()\n    event.stopPropagation()\n    const relativeX =\n      event.clientX -\n      (event.target as HTMLDivElement).getBoundingClientRect().left\n    setStartX(relativeX)\n    setCurrentX(relativeX)\n  }\n\n  function mouseMove(event: React.MouseEvent<HTMLDivElement>) {\n    const target = event.target as HTMLDivElement\n    setGuideX(event.clientX - target.getBoundingClientRect().left)\n  }\n\n  function mouseOut() {\n    setGuideX(undefined)\n    model.views.forEach(view => view.setOffsets(undefined, undefined))\n  }\n\n  function handleClose() {\n    setAnchorPosition(undefined)\n    setStartX(undefined)\n    setCurrentX(undefined)\n  }\n\n  const open = Boolean(anchorPosition)\n\n  function handleMenuItemClick(_: unknown, callback: Function) {\n    callback()\n    handleClose()\n  }\n\n  if (startX === undefined) {\n    return (\n      <>\n        {guideX !== undefined ? (\n          <VerticalGuide model={model} coordX={guideX} />\n        ) : null}\n        <div\n          data-testid=\"rubberband_controls\"\n          className={classes.rubberbandControl}\n          role=\"presentation\"\n          ref={controlsRef}\n          onMouseDown={mouseDown}\n          onMouseOut={mouseOut}\n          onMouseMove={mouseMove}\n        >\n          {ControlComponent}\n        </div>\n      </>\n    )\n  }\n\n  /* Calculating Pixels for Mouse Dragging */\n  const right = anchorPosition ? anchorPosition.offsetX : currentX || 0\n  const left = right < startX ? right : startX\n  const width = Math.abs(right - startX)\n  const { views } = model\n  const leftBpOffset = views.map(view => view.pxToBp(left))\n  const rightBpOffset = views.map(view => view.pxToBp(left + width))\n  const numOfBpSelected = views.map(view => Math.ceil(width * view.bpPerPx))\n  return (\n    <>\n      {rubberbandRef.current ? (\n        <>\n          <Popover\n            className={classes.popover}\n            classes={{\n              paper: classes.paper,\n            }}\n            open\n            anchorEl={rubberbandRef.current}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'left',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right',\n            }}\n            keepMounted\n            disableRestoreFocus\n          >\n            {leftBpOffset.map(l => (\n              <Typography key={JSON.stringify(l)}>{stringify(l)}</Typography>\n            ))}\n          </Popover>\n          <Popover\n            className={classes.popover}\n            classes={{\n              paper: classes.paper,\n            }}\n            open\n            anchorEl={rubberbandRef.current}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left',\n            }}\n            keepMounted\n            disableRestoreFocus\n          >\n            {rightBpOffset.map(l => (\n              <Typography key={JSON.stringify(l)}>{stringify(l)}</Typography>\n            ))}\n          </Popover>\n        </>\n      ) : null}\n      <div\n        ref={rubberbandRef}\n        className={classes.rubberband}\n        style={{ left, width }}\n      >\n        <Typography variant=\"h6\" className={classes.rubberbandText}>\n          {numOfBpSelected.map((n, i) => (\n            <Typography key={`${n}_${i}`}>{`${n.toLocaleString(\n              'en-US',\n            )}bp`}</Typography>\n          ))}\n        </Typography>\n      </div>\n      <div\n        data-testid=\"rubberband_controls\"\n        className={classes.rubberbandControl}\n        role=\"presentation\"\n        ref={controlsRef}\n        onMouseDown={mouseDown}\n        onMouseOut={mouseOut}\n        onMouseMove={mouseMove}\n      >\n        {ControlComponent}\n      </div>\n      {anchorPosition ? (\n        <Menu\n          anchorReference=\"anchorPosition\"\n          anchorPosition={{\n            left: anchorPosition.clientX,\n            top: anchorPosition.clientY,\n          }}\n          onMenuItemClick={handleMenuItemClick}\n          open={open}\n          onClose={handleClose}\n          menuItems={model.rubberBandMenuItems()}\n        />\n      ) : null}\n    </>\n  )\n}\n\nexport default observer(Rubberband)\n","import React, { useState } from 'react'\nimport { IconButton, Typography } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { SearchBox } from '@jbrowse/plugin-linear-genome-view'\nimport { observer } from 'mobx-react'\nimport { Menu } from '@jbrowse/core/ui'\n\n// icons\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\n\n// locals\nimport { LinearComparativeViewModel } from '../model'\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\n\ntype LCV = LinearComparativeViewModel\n\nconst useStyles = makeStyles()(() => ({\n  headerBar: {\n    gridArea: '1/1/auto/span 2',\n    display: 'flex',\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  iconButton: {\n    margin: 5,\n  },\n  bp: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 10,\n  },\n  searchContainer: {\n    marginLeft: 5,\n  },\n  searchBox: {\n    display: 'flex',\n  },\n}))\n\nconst TrackSelector = observer(({ model }: { model: LCV }) => {\n  return (\n    <IconButton\n      onClick={model.activateTrackSelector}\n      title=\"Open track selector\"\n    >\n      <TrackSelectorIcon color=\"primary\" />\n    </IconButton>\n  )\n})\n\nconst Header = observer(function ({ model }: { model: LCV }) {\n  const { classes } = useStyles()\n  const [menuAnchorEl, setMenuAnchorEl] = useState<HTMLElement>()\n  const anyShowHeaders = model.views.some(view => !view.hideHeader)\n  return (\n    <div className={classes.headerBar}>\n      <TrackSelector model={model} />\n\n      <IconButton\n        onClick={event => setMenuAnchorEl(event.currentTarget)}\n        className={classes.iconButton}\n        color=\"secondary\"\n      >\n        <MoreVertIcon />\n      </IconButton>\n      {!anyShowHeaders\n        ? model.views.map(view => (\n            <div key={view.id} className={classes.searchBox}>\n              <div className={classes.searchContainer}>\n                <SearchBox model={view} showHelp={false} />\n              </div>\n              <div className={classes.bp}>\n                <Typography\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                  className={classes.bp}\n                >\n                  {Math.round(view.coarseTotalBp).toLocaleString('en-US')} bp\n                </Typography>\n              </div>\n            </div>\n          ))\n        : null}\n\n      <div className={classes.spacer} />\n\n      {menuAnchorEl ? (\n        <Menu\n          anchorEl={menuAnchorEl}\n          open\n          onMenuItemClick={(_event, callback) => {\n            callback()\n            setMenuAnchorEl(undefined)\n          }}\n          menuItems={model.headerMenuItems()}\n          onClose={() => setMenuAnchorEl(undefined)}\n        />\n      ) : null}\n    </div>\n  )\n})\n\nexport default Header\n","import React, { useState } from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { getConf, AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { getEnv } from '@jbrowse/core/util'\nimport { ResizeHandle } from '@jbrowse/core/ui'\n\n// locals\nimport { LinearComparativeViewModel } from '../model'\nimport Rubberband from './Rubberband'\nimport Header from './Header'\n\nconst useStyles = makeStyles()(() => ({\n  container: {\n    display: 'grid',\n  },\n  overlay: {\n    zIndex: 100,\n    gridArea: '1/1',\n  },\n  content: {\n    gridArea: '1/1',\n    position: 'relative',\n  },\n  grid: {\n    display: 'grid',\n  },\n  relative: {\n    position: 'relative',\n  },\n\n  // this helps keep the vertical guide inside the parent view container,\n  // similar style exists in the single LGV's trackscontainer\n  rubberbandContainer: {\n    position: 'relative',\n    overflow: 'hidden',\n  },\n}))\n\ntype LCV = LinearComparativeViewModel\n\nconst Overlays = observer(({ model }: { model: LCV }) => {\n  const { classes } = useStyles()\n  return (\n    <>\n      {model.tracks.map(track => {\n        const [display] = track.displays\n        const { RenderingComponent } = display\n        const trackId = getConf(track, 'trackId')\n        return RenderingComponent ? (\n          <div\n            className={classes.overlay}\n            key={trackId}\n            style={{\n              height: model.middleComparativeHeight,\n              overflow: 'hidden',\n            }}\n          >\n            <RenderingComponent model={display} />\n          </div>\n        ) : null\n      })}\n    </>\n  )\n})\n\n// The comparative is in the middle of the views\nconst MiddleComparativeView = observer(({ model }: { model: LCV }) => {\n  const { classes } = useStyles()\n  const { views } = model\n  const { pluginManager } = getEnv(model)\n  const { ReactComponent } = pluginManager.getViewType(views[0].type)\n  const [rubberbandMouseOver, setRubberbandMouseOver] = useState(false)\n\n  return (\n    <div className={classes.rubberbandContainer}>\n      <Header model={model} />\n      <Rubberband\n        model={model}\n        ControlComponent={\n          <div\n            style={{\n              width: '100%',\n              background: rubberbandMouseOver ? '#999' : '#ccc',\n              height: 15,\n            }}\n            onMouseOver={() => setRubberbandMouseOver(true)}\n            onMouseLeave={() => setRubberbandMouseOver(false)}\n          />\n        }\n      />\n      <div className={classes.container}>\n        <ReactComponent model={views[0]} />\n        <div className={classes.grid}>\n          <Overlays model={model} />\n        </div>\n        <ResizeHandle\n          onDrag={n =>\n            model.setMiddleComparativeHeight(model.middleComparativeHeight + n)\n          }\n          style={{\n            height: 4,\n            background: '#ccc',\n          }}\n        />\n        <ReactComponent model={views[1]} />\n      </div>\n    </div>\n  )\n})\nconst OverlayComparativeView = observer(({ model }: { model: LCV }) => {\n  const { classes } = useStyles()\n  const { views } = model\n  const { pluginManager } = getEnv(model)\n  const [rubberbandMouseOver, setRubberbandMouseOver] = useState(false)\n  return (\n    <div className={classes.rubberbandContainer}>\n      <Header model={model} />\n      <Rubberband\n        model={model}\n        ControlComponent={\n          <div\n            style={{\n              width: '100%',\n              background: rubberbandMouseOver ? '#aaa' : '#ccc',\n              height: 15,\n            }}\n            onMouseOver={() => setRubberbandMouseOver(true)}\n            onMouseLeave={() => setRubberbandMouseOver(false)}\n          />\n        }\n      />\n\n      <div className={classes.container}>\n        <div className={classes.content}>\n          <div className={classes.relative}>\n            {views.map(view => {\n              const { ReactComponent } = pluginManager.getViewType(view.type)\n              return <ReactComponent key={view.id} model={view} />\n            })}\n          </div>\n          <Overlays model={model} />\n        </div>\n      </div>\n    </div>\n  )\n})\n\nconst LinearComparativeView = observer(\n  (props: { ExtraButtons?: React.ReactNode; model: LCV }) => {\n    const { model } = props\n\n    const middle = model.tracks.some(({ displays }) =>\n      displays.some((d: AnyConfigurationModel) => getConf(d, 'middle')),\n    )\n    return middle ? (\n      <MiddleComparativeView {...props} />\n    ) : (\n      <OverlayComparativeView {...props} />\n    )\n  },\n)\n\nexport default LinearComparativeView\n"],"names":["useStyles","makeStyles","theme","palette","tertiary","primary","rubberband","height","background","alpha","main","position","zIndex","textAlign","overflow","rubberbandControl","cursor","width","minHeight","rubberbandText","color","contrastText","popover","mouseEvents","paper","paddingLeft","spacing","paddingRight","guide","pointerEvents","sm","fontSize","VerticalGuide","observer","model","coordX","classes","Tooltip","open","placement","title","views","map","view","pxToBp","elt","Typography","className","stringify","JSON","arrow","style","left","ControlComponent","useState","startX","setStartX","currentX","setCurrentX","anchorPosition","setAnchorPosition","guideX","setGuideX","controlsRef","useRef","rubberbandRef","mouseDragging","undefined","mouseDown","event","preventDefault","stopPropagation","relativeX","clientX","target","getBoundingClientRect","mouseMove","mouseOut","forEach","setOffsets","handleClose","useEffect","globalMouseMove","current","globalMouseUp","clientY","offsetX","args","leftPx","rightPx","leftOffset","rightOffset","computeOffsets","window","addEventListener","removeEventListener","Math","abs","Boolean","role","ref","onMouseDown","onMouseOut","onMouseMove","right","leftBpOffset","rightBpOffset","numOfBpSelected","ceil","bpPerPx","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","keepMounted","disableRestoreFocus","l","variant","n","i","toLocaleString","Menu","anchorReference","top","onMenuItemClick","_","callback","onClose","menuItems","rubberBandMenuItems","headerBar","gridArea","display","spacer","flexGrow","iconButton","margin","bp","alignItems","marginLeft","searchContainer","searchBox","TrackSelector","IconButton","onClick","activateTrackSelector","menuAnchorEl","setMenuAnchorEl","anyShowHeaders","some","hideHeader","currentTarget","MoreVert","showHelp","round","coarseTotalBp","id","_event","headerMenuItems","container","overlay","content","grid","relative","rubberbandContainer","Overlays","tracks","track","displays","RenderingComponent","trackId","getConf","middleComparativeHeight","MiddleComparativeView","ReactComponent","getEnv","pluginManager","getViewType","type","rubberbandMouseOver","setRubberbandMouseOver","onMouseOver","onMouseLeave","ResizeHandle","onDrag","setMiddleComparativeHeight","OverlayComparativeView","props","d"],"sourceRoot":""}