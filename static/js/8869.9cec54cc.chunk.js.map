{"version":3,"file":"static/js/8869.9cec54cc.chunk.js","mappings":"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","sources":["../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/ExportSvgDialog.tsx","../../../node_modules/@mui/material/CircularProgress/CircularProgress.js","../../../node_modules/@mui/material/CircularProgress/circularProgressClasses.js"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  Button,\n  Checkbox,\n  CircularProgress,\n  DialogActions,\n  DialogContent,\n  FormControlLabel,\n  MenuItem,\n  TextField,\n  TextFieldProps,\n  Typography,\n} from '@mui/material'\nimport { Dialog, ErrorMessage } from '@jbrowse/core/ui'\nimport { ExportSvgOptions } from '../model'\nimport { getSession, useLocalStorage } from '@jbrowse/core/util'\n\nfunction LoadingMessage() {\n  return (\n    <div>\n      <CircularProgress size={20} style={{ marginRight: 20 }} />\n      <Typography display=\"inline\">Creating SVG</Typography>\n    </div>\n  )\n}\n\nfunction useSvgLocal<T>(key: string, val: T) {\n  return useLocalStorage('svg-' + key, val)\n}\n\nfunction TextField2({ children, ...rest }: TextFieldProps) {\n  return (\n    <div>\n      <TextField {...rest}>{children}</TextField>\n    </div>\n  )\n}\nexport default function ExportSvgDialog({\n  model,\n  handleClose,\n}: {\n  model: { exportSvg(opts: ExportSvgOptions): Promise<void> }\n  handleClose: () => void\n}) {\n  const session = getSession(model)\n  const offscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n  const [rasterizeLayers, setRasterizeLayers] = useState(offscreenCanvas)\n  const [loading, setLoading] = useState(false)\n  const [filename, setFilename] = useSvgLocal('file', 'jbrowse.svg')\n  const [trackLabels, setTrackLabels] = useSvgLocal('tracklabels', 'offset')\n  const [themeName, setThemeName] = useSvgLocal(\n    'theme',\n    session.themeName || 'default',\n  )\n  const [error, setError] = useState<unknown>()\n  return (\n    <Dialog open onClose={handleClose} title=\"Export SVG\">\n      <DialogContent>\n        {error ? (\n          <ErrorMessage error={error} />\n        ) : loading ? (\n          <LoadingMessage />\n        ) : null}\n        <TextField2\n          helperText=\"filename\"\n          value={filename}\n          onChange={event => setFilename(event.target.value)}\n        />\n\n        <TextField2\n          select\n          label=\"Track label positioning\"\n          variant=\"outlined\"\n          value={trackLabels}\n          style={{ width: 150 }}\n          onChange={event => setTrackLabels(event.target.value)}\n        >\n          <MenuItem value=\"offset\">Offset</MenuItem>\n          <MenuItem value=\"overlay\">Overlay</MenuItem>\n          <MenuItem value=\"left\">Left</MenuItem>\n          <MenuItem value=\"none\">None</MenuItem>\n        </TextField2>\n        <br />\n        {session.allThemes ? (\n          <TextField2\n            select\n            label=\"Theme\"\n            variant=\"outlined\"\n            value={themeName}\n            onChange={event => setThemeName(event.target.value)}\n          >\n            {Object.entries(session.allThemes()).map(([key, val]) => (\n              <MenuItem key={key} value={key}>\n                {\n                  // @ts-expect-error\n                  val.name || '(Unknown name)'\n                }\n              </MenuItem>\n            ))}\n          </TextField2>\n        ) : null}\n        {offscreenCanvas ? (\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={rasterizeLayers}\n                onChange={() => setRasterizeLayers(val => !val)}\n              />\n            }\n            label=\"Rasterize canvas based tracks? File may be much larger if this is turned off\"\n          />\n        ) : (\n          <Typography>\n            Note: rasterizing layers not yet supported in this browser, so SVG\n            size may be large\n          </Typography>\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => handleClose()}\n        >\n          Cancel\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={async () => {\n            setLoading(true)\n            setError(undefined)\n            try {\n              await model.exportSvg({\n                rasterizeLayers,\n                filename,\n                themeName,\n                trackLabels,\n              })\n              handleClose()\n            } catch (e) {\n              console.error(e)\n              setError(e)\n            } finally {\n              setLoading(false)\n            }\n          }}\n        >\n          Submit\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      disableShrink = false,\n      size = 40,\n      style,\n      thickness = 3.6,\n      value = 0,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, for example '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;"],"names":["LoadingMessage","React","CircularProgress","size","style","marginRight","Typography","display","useSvgLocal","key","val","useLocalStorage","TextField2","children","rest","TextField","ExportSvgDialog","model","handleClose","session","getSession","offscreenCanvas","OffscreenCanvas","rasterizeLayers","setRasterizeLayers","useState","loading","setLoading","filename","setFilename","trackLabels","setTrackLabels","themeName","setThemeName","error","setError","Dialog","open","onClose","title","DialogContent","ErrorMessage","helperText","value","onChange","event","target","select","label","variant","width","MenuItem","allThemes","Object","entries","map","name","FormControlLabel","control","Checkbox","checked","DialogActions","Button","color","onClick","type","async","undefined","exportSvg","e","console","_excluded","_t","_t2","_t3","_t4","_","t","circularRotateKeyframe","circularDashKeyframe","CircularProgressRoot","slot","overridesResolver","props","styles","ownerState","root","theme","transition","transitions","create","vars","palette","main","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","stroke","strokeDasharray","strokeDashoffset","inProps","ref","className","thickness","other","classes","slots","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","height","role","viewBox","cx","cy","r","fill","strokeWidth","getCircularProgressUtilityClass"],"sourceRoot":""}