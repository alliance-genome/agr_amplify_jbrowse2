{"version":3,"file":"static/js/3722.6b6f1869.chunk.js","mappings":"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","sources":["../../../plugins/dotplot-view/src/DotplotView/components/ImportCustomTrack.tsx","../../../plugins/dotplot-view/src/DotplotView/components/ImportSyntenyTrackSelector.tsx","../../../plugins/dotplot-view/src/DotplotView/components/ImportForm.tsx","../../../plugins/dotplot-view/src/DotplotView/components/CursorIcon.tsx","../../../plugins/dotplot-view/src/DotplotView/components/Header.tsx","../../../plugins/dotplot-view/src/DotplotView/components/DotplotTooltip.tsx","../../../plugins/dotplot-view/src/DotplotView/components/DotplotView.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { SnapshotIn } from 'mobx-state-tree'\nimport path from 'path'\nimport {\n  FormControlLabel,\n  Grid,\n  Paper,\n  Radio,\n  RadioGroup,\n  Typography,\n} from '@mui/material'\nimport { ErrorMessage, FileSelector } from '@jbrowse/core/ui'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport { observer } from 'mobx-react'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\nfunction getName(\n  sessionTrackData?: { uri: string } | { localPath: string } | { name: string },\n) {\n  return sessionTrackData\n    ? // @ts-ignore\n      sessionTrackData.uri ||\n        // @ts-ignore\n        sessionTrackData.localPath ||\n        // @ts-ignore\n        sessionTrackData.name\n    : undefined\n}\n\nfunction stripGz(fileName: string) {\n  return fileName.endsWith('.gz')\n    ? fileName.slice(0, fileName.length - 3)\n    : fileName\n}\n\nfunction getAdapter({\n  radioOption,\n  assembly1,\n  assembly2,\n  fileLocation,\n  bed1Location,\n  bed2Location,\n}: {\n  radioOption: string\n  assembly1: string\n  assembly2: string\n  fileLocation?: FileLocation\n  bed1Location?: FileLocation\n  bed2Location?: FileLocation\n}) {\n  if (radioOption === '.paf') {\n    return {\n      type: 'PAFAdapter',\n      pafLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.out') {\n    return {\n      type: 'MashMapAdapter',\n      outLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.delta') {\n    return {\n      type: 'DeltaAdapter',\n      deltaLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.chain') {\n    return {\n      type: 'ChainAdapter',\n      chainLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.anchors') {\n    return {\n      type: 'MCScanAnchorsAdapter',\n      mcscanAnchorsLocation: fileLocation,\n      bed1Location,\n      bed2Location,\n      assemblyNames: [assembly1, assembly2],\n    }\n  } else if (radioOption === '.anchors.simple') {\n    return {\n      type: 'MCScanSimpleAnchorsAdapter',\n      mcscanSimpleAnchorsLocation: fileLocation,\n      bed1Location,\n      bed2Location,\n      assemblyNames: [assembly1, assembly2],\n    }\n  } else {\n    throw new Error('Unknown type')\n  }\n}\n\ntype Conf = SnapshotIn<AnyConfigurationModel>\n\nconst OpenTrack = observer(\n  ({\n    sessionTrackData,\n    assembly1,\n    assembly2,\n    setSessionTrackData,\n  }: {\n    sessionTrackData: Conf\n    assembly1: string\n    assembly2: string\n    setSessionTrackData: (arg: Conf) => void\n  }) => {\n    const [bed2Location, setBed2Location] = useState<FileLocation>()\n    const [bed1Location, setBed1Location] = useState<FileLocation>()\n    const [fileLocation, setFileLocation] = useState<FileLocation>()\n    const [value, setValue] = useState('')\n    const [error, setError] = useState<unknown>()\n    const fileName = getName(fileLocation)\n\n    const radioOption =\n      value || (fileName ? path.extname(stripGz(fileName)) : '')\n\n    useEffect(() => {\n      try {\n        if (fileLocation) {\n          const fn = fileName ? path.basename(fileName) : 'MyTrack'\n          const trackId = `${fn}-${Date.now()}`\n          setError(undefined)\n\n          setSessionTrackData({\n            trackId,\n            name: fn,\n            assemblyNames: [assembly2, assembly1],\n            type: 'SyntenyTrack',\n            adapter: getAdapter({\n              radioOption,\n              assembly1,\n              assembly2,\n              fileLocation,\n              bed1Location,\n              bed2Location,\n            }),\n          })\n        }\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    }, [\n      fileName,\n      assembly1,\n      assembly2,\n      bed1Location,\n      bed2Location,\n      fileLocation,\n      radioOption,\n      setSessionTrackData,\n    ])\n    return (\n      <Paper style={{ padding: 12 }}>\n        {error ? <ErrorMessage error={error} /> : null}\n        <Typography style={{ textAlign: 'center' }}>\n          Add a .paf, .out (MashMap), .delta (Mummer), .chain, .anchors or\n          .anchors.simple (MCScan) file to view in the dotplot. These file types\n          can also be gzipped. The first assembly should be the query sequence\n          (e.g. left column of the PAF) and the second assembly should be the\n          target sequence (e.g. right column of the PAF)\n        </Typography>\n        <RadioGroup\n          value={radioOption}\n          onChange={event => setValue(event.target.value)}\n        >\n          <Grid container justifyContent=\"center\">\n            <Grid item>\n              <FormControlLabel value=\".paf\" control={<Radio />} label=\".paf\" />\n            </Grid>\n            <Grid item>\n              <FormControlLabel value=\".out\" control={<Radio />} label=\".out\" />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".delta\"\n                control={<Radio />}\n                label=\".delta\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".chain\"\n                control={<Radio />}\n                label=\".chain\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".anchors\"\n                control={<Radio />}\n                label=\".anchors\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".anchors.simple\"\n                control={<Radio />}\n                label=\".anchors.simple\"\n              />\n            </Grid>\n          </Grid>\n        </RadioGroup>\n        <Grid container justifyContent=\"center\">\n          <Grid item>\n            {value === '.anchors' || value === '.anchors.simple' ? (\n              <div>\n                <div style={{ margin: 20 }}>\n                  Open the {value} and .bed files for both genome assemblies\n                  from the MCScan (Python version) pipeline{' '}\n                  <a href=\"https://github.com/tanghaibao/jcvi/wiki/MCscan-(Python-version)\">\n                    (more info)\n                  </a>\n                </div>\n                <div style={{ display: 'flex' }}>\n                  <div>\n                    <FileSelector\n                      name=\".anchors file\"\n                      description=\"\"\n                      location={fileLocation}\n                      setLocation={loc => setFileLocation(loc)}\n                    />\n                  </div>\n                  <div>\n                    <FileSelector\n                      name=\"genome 1 .bed (left column of anchors file)\"\n                      description=\"\"\n                      location={bed1Location}\n                      setLocation={loc => setBed1Location(loc)}\n                    />\n                  </div>\n                  <div>\n                    <FileSelector\n                      name=\"genome 2 .bed (right column of anchors file)\"\n                      description=\"\"\n                      location={bed2Location}\n                      setLocation={loc => setBed2Location(loc)}\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <FileSelector\n                name={value ? value + ' location' : ''}\n                description=\"\"\n                location={fileLocation}\n                setLocation={loc => setFileLocation(loc)}\n              />\n            )}\n          </Grid>\n        </Grid>\n      </Paper>\n    )\n  },\n)\n\nexport default OpenTrack\n","import React, { useState, useEffect } from 'react'\nimport { Select, MenuItem, Paper, Typography } from '@mui/material'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport { getSession } from '@jbrowse/core/util'\nimport { ErrorMessage } from '@jbrowse/core/ui'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { observer } from 'mobx-react'\n\n// icons\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\n\n// locals\nimport { DotplotViewModel } from '../model'\n\nfunction f(track: AnyConfigurationModel, assembly1: string, assembly2: string) {\n  const assemblyNames = readConfObject(track, 'assemblyNames')\n  return (\n    assemblyNames.includes(assembly1) &&\n    assemblyNames.includes(assembly2) &&\n    track.type.includes('Synteny')\n  )\n}\n\nconst Selector = observer(\n  ({\n    model,\n    assembly1,\n    assembly2,\n    setShowTrackId,\n  }: {\n    model: DotplotViewModel\n    assembly1: string\n    assembly2: string\n    setShowTrackId: (arg: string) => void\n  }) => {\n    const session = getSession(model)\n    const { tracks, sessionTracks } = session\n    const allTracks = [...tracks, ...sessionTracks] as AnyConfigurationModel[]\n    const filteredTracks = allTracks.filter(t => f(t, assembly2, assembly1))\n    const resetTrack = filteredTracks[0]?.trackId || ''\n    const [value, setValue] = useState(resetTrack)\n    useEffect(() => {\n      // if assembly1/assembly2 changes, then we will want to use this effect to change\n      // the state of the useState because it otherwise gets locked to a stale value\n      setValue(resetTrack)\n    }, [resetTrack])\n\n    useEffect(() => {\n      // sets track data in a useEffect because the initial load is needed as well as\n      // onChange's to the select box\n      setShowTrackId(value)\n    }, [value, setShowTrackId])\n\n    return (\n      <Paper style={{ padding: 12 }}>\n        <Typography paragraph>\n          Select a track from the select box below, the track will be shown when\n          you hit \"Launch\".\n        </Typography>\n\n        <Typography paragraph>\n          Note: there is a track selector <i>inside</i> the DotplotView, which\n          can turn on one or more SyntenyTracks (more than one can be displayed\n          at once). Look for the track selector icon <TrackSelectorIcon />\n        </Typography>\n        {filteredTracks.length ? (\n          <Select\n            value={value}\n            onChange={event => setValue(event.target.value)}\n          >\n            {filteredTracks.map(track => (\n              <MenuItem key={track.trackId} value={track.trackId}>\n                {getTrackName(track, session)}\n              </MenuItem>\n            ))}\n          </Select>\n        ) : (\n          <ErrorMessage\n            error={`No synteny tracks found for ${assembly1},${assembly2}`}\n          />\n        )}\n      </Paper>\n    )\n  },\n)\n\nexport default Selector\n","import React, { useState, useEffect } from 'react'\nimport {\n  Button,\n  Container,\n  FormControl,\n  FormLabel,\n  FormControlLabel,\n  Grid,\n  Paper,\n  Radio,\n  RadioGroup,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { transaction } from 'mobx'\nimport { SnapshotIn } from 'mobx-state-tree'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { getSession, isSessionWithAddTracks } from '@jbrowse/core/util'\nimport { ErrorMessage, AssemblySelector } from '@jbrowse/core/ui'\n\n// locals\nimport { DotplotViewModel } from '../model'\nimport ImportCustomTrack from './ImportCustomTrack'\nimport ImportSyntenyTrackSelector from './ImportSyntenyTrackSelector'\n\nconst useStyles = makeStyles()(theme => ({\n  importFormContainer: {\n    padding: theme.spacing(4),\n    margin: '0 auto',\n  },\n  assemblySelector: {\n    width: '75%',\n    margin: '0 auto',\n  },\n}))\n\ntype Conf = SnapshotIn<AnyConfigurationModel>\n\nfunction TrackSelector({\n  setSessionTrackData,\n  setShowTrackId,\n  sessionTrackData,\n  assembly1,\n  assembly2,\n  model,\n}: {\n  sessionTrackData: Conf\n  setSessionTrackData: (arg: Conf) => void\n  setShowTrackId: (arg?: string) => void\n  model: DotplotViewModel\n  assembly1: string\n  assembly2: string\n}) {\n  const [choice, setChoice] = useState('none')\n\n  useEffect(() => {\n    if (choice === 'none') {\n      setSessionTrackData(undefined)\n      setShowTrackId(undefined)\n    }\n  }, [choice, setSessionTrackData, setShowTrackId])\n  return (\n    <>\n      <FormControl>\n        <FormLabel id=\"group-label\">\n          (Optional) Select or add a synteny track\n        </FormLabel>\n        <RadioGroup\n          row\n          value={choice}\n          onChange={event => setChoice(event.target.value)}\n          aria-labelledby=\"group-label\"\n        >\n          <FormControlLabel value=\"none\" control={<Radio />} label=\"None\" />\n          <FormControlLabel\n            value=\"tracklist\"\n            control={<Radio />}\n            label=\"Existing track\"\n          />\n          <FormControlLabel\n            value=\"custom\"\n            control={<Radio />}\n            label=\"New track\"\n          />\n        </RadioGroup>\n      </FormControl>\n      {choice === 'custom' ? (\n        <ImportCustomTrack\n          setSessionTrackData={setSessionTrackData}\n          sessionTrackData={sessionTrackData}\n          assembly2={assembly2}\n          assembly1={assembly1}\n        />\n      ) : null}\n      {choice === 'tracklist' ? (\n        <ImportSyntenyTrackSelector\n          model={model}\n          assembly1={assembly1}\n          assembly2={assembly2}\n          setShowTrackId={setShowTrackId}\n        />\n      ) : null}\n    </>\n  )\n}\n\nconst DotplotImportForm = observer(({ model }: { model: DotplotViewModel }) => {\n  const { classes } = useStyles()\n  const session = getSession(model)\n  const { assemblyNames } = session\n  const [assembly2, setAssembly2] = useState(assemblyNames[0] || '')\n  const [assembly1, setAssembly1] = useState(assemblyNames[0] || '')\n  const [error, setError] = useState<unknown>()\n  const [sessionTrackData, setSessionTrackData] = useState<Conf>()\n  const [showTrackId, setShowTrackId] = useState<string>()\n\n  function onOpenClick() {\n    try {\n      if (!isSessionWithAddTracks(session)) {\n        return\n      }\n      setError(undefined)\n      model.setError(undefined)\n      transaction(() => {\n        if (sessionTrackData) {\n          session.addTrackConf(sessionTrackData)\n          model.toggleTrack(sessionTrackData.trackId)\n        } else if (showTrackId) {\n          model.showTrack(showTrackId)\n        }\n\n        model.setViews([\n          { bpPerPx: 0.1, offsetPx: 0 },\n          { bpPerPx: 0.1, offsetPx: 0 },\n        ])\n        model.setAssemblyNames(assembly2, assembly1)\n      })\n    } catch (e) {\n      console.error(e)\n      setError(e)\n    }\n  }\n\n  // this is a combination of any displayed error message we have\n  const displayError = error || model.error\n  return (\n    <Container className={classes.importFormContainer}>\n      {displayError ? <ErrorMessage error={displayError} /> : null}\n      <Grid\n        container\n        spacing={1}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        className={classes.assemblySelector}\n      >\n        <Grid item>\n          <Paper style={{ padding: 12 }}>\n            <p style={{ textAlign: 'center' }}>\n              Select assemblies for dotplot view\n            </p>\n            <Grid\n              container\n              spacing={1}\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <AssemblySelector\n                  selected={assembly1}\n                  onChange={val => setAssembly1(val)}\n                  session={session}\n                />\n              </Grid>\n              <Grid item>\n                <AssemblySelector\n                  selected={assembly2}\n                  onChange={val => setAssembly2(val)}\n                  session={session}\n                />\n              </Grid>\n              <Grid item>\n                <FormControl>\n                  <Button\n                    onClick={onOpenClick}\n                    variant=\"contained\"\n                    color=\"primary\"\n                  >\n                    Launch\n                  </Button>\n                </FormControl>\n              </Grid>\n            </Grid>\n          </Paper>\n          <TrackSelector\n            setShowTrackId={setShowTrackId}\n            assembly2={assembly2}\n            assembly1={assembly1}\n            setSessionTrackData={setSessionTrackData}\n            sessionTrackData={sessionTrackData}\n            model={model}\n          />\n        </Grid>\n      </Grid>\n    </Container>\n  )\n})\n\nexport default DotplotImportForm\n","import SvgIcon, { SvgIconProps } from '@mui/material/SvgIcon'\nimport React from 'react'\n\nexport function CursorMove(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M13,6V11H18V7.75L22.25,12L18,16.25V13H13V18H16.25L12,22.25L7.75,18H11V13H6V16.25L1.75,12L6,7.75V11H11V6H7.75L12,1.75L16.25,6H13Z\"\n      />\n    </SvgIcon>\n  )\n}\n\nexport function CursorMouse(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M10.07,14.27C10.57,14.03 11.16,14.25 11.4,14.75L13.7,19.74L15.5,18.89L13.19,13.91C12.95,13.41 13.17,12.81 13.67,12.58L13.95,12.5L16.25,12.05L8,5.12V15.9L9.82,14.43L10.07,14.27M13.64,21.97C13.14,22.21 12.54,22 12.31,21.5L10.13,16.76L7.62,18.78C7.45,18.92 7.24,19 7,19A1,1 0 0,1 6,18V3A1,1 0 0,1 7,2C7.24,2 7.47,2.09 7.64,2.23L7.65,2.22L19.14,11.86C19.57,12.22 19.62,12.85 19.27,13.27C19.12,13.45 18.91,13.57 18.7,13.61L15.54,14.23L17.74,18.96C18,19.46 17.76,20.05 17.26,20.28L13.64,21.97Z\"\n      />\n    </SvgIcon>\n  )\n}\n","import React, { lazy, useState } from 'react'\nimport { Alert, Button, IconButton, Typography } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\nimport { getBpDisplayStr } from '@jbrowse/core/util'\nimport { Menu } from '@jbrowse/core/ui'\n\n// icons\nimport ZoomOut from '@mui/icons-material/ZoomOut'\nimport ZoomIn from '@mui/icons-material/ZoomIn'\nimport MoreVert from '@mui/icons-material/MoreVert'\nimport { CursorMouse, CursorMove } from './CursorIcon'\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\n\n// locals\nimport { DotplotViewModel } from '../model'\n\n// lazy components\nconst WarningDialog = lazy(() => import('./WarningDialog'))\n\nconst useStyles = makeStyles()({\n  iconButton: {\n    margin: 5,\n  },\n  bp: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 10,\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  headerBar: {\n    display: 'flex',\n  },\n})\n\nconst DotplotControls = observer(({ model }: { model: DotplotViewModel }) => {\n  const { classes } = useStyles()\n  const [menuAnchorEl, setMenuAnchorEl] = useState<HTMLElement>()\n  return (\n    <div>\n      <IconButton onClick={model.zoomOutButton} className={classes.iconButton}>\n        <ZoomOut />\n      </IconButton>\n\n      <IconButton\n        onClick={model.zoomInButton}\n        className={classes.iconButton}\n        title=\"zoom in\"\n      >\n        <ZoomIn />\n      </IconButton>\n\n      <IconButton\n        onClick={model.activateTrackSelector}\n        className={classes.iconButton}\n        title=\"Open track selector\"\n        data-testid=\"circular_track_select\"\n      >\n        <TrackSelectorIcon />\n      </IconButton>\n\n      <IconButton\n        onClick={event => setMenuAnchorEl(event.currentTarget)}\n        className={classes.iconButton}\n      >\n        <MoreVert />\n      </IconButton>\n\n      {menuAnchorEl ? (\n        <Menu\n          anchorEl={menuAnchorEl}\n          open\n          onMenuItemClick={(_event, callback) => {\n            callback()\n            setMenuAnchorEl(undefined)\n          }}\n          menuItems={[\n            {\n              onClick: () => model.squareView(),\n              label: 'Square view - same base pairs per pixel',\n            },\n            {\n              onClick: () => model.squareViewProportional(),\n              label: 'Rectanglular view - same total bp',\n            },\n            {\n              onClick: () => model.showAllRegions(),\n              label: 'Show all regions',\n            },\n            {\n              onClick: () => model.setDrawCigar(!model.drawCigar),\n              type: 'checkbox',\n              label: 'Draw CIGAR',\n              checked: model.drawCigar,\n            },\n            {\n              onClick: () => model.setCursorMode('move'),\n              label: 'Cursor mode - click and drag to move',\n              icon: CursorMove,\n              type: 'radio',\n              checked: model.cursorMode === 'move',\n            },\n            {\n              onClick: () => model.setCursorMode('crosshair'),\n              label: 'Cursor mode - select region',\n              icon: CursorMouse,\n              type: 'radio',\n              checked: model.cursorMode === 'crosshair',\n            },\n          ]}\n          onClose={() => setMenuAnchorEl(undefined)}\n        />\n      ) : null}\n    </div>\n  )\n})\nconst Warnings = observer(({ model }: { model: DotplotViewModel }) => {\n  const tracksWithWarnings = model.tracks.filter(\n    t => t.displays[0].warnings?.length,\n  )\n  const [shown, setShown] = useState(false)\n  return tracksWithWarnings.length ? (\n    <Alert severity=\"warning\">\n      Warnings during render{' '}\n      <Button onClick={() => setShown(true)}>More info</Button>\n      {shown ? (\n        <WarningDialog\n          tracksWithWarnings={tracksWithWarnings}\n          handleClose={() => setShown(false)}\n        />\n      ) : null}\n    </Alert>\n  ) : null\n})\n\nconst Header = observer(\n  ({\n    model,\n    selection,\n  }: {\n    model: DotplotViewModel\n    selection?: { width: number; height: number }\n  }) => {\n    const { classes } = useStyles()\n    const { hview, vview } = model\n    return (\n      <div className={classes.headerBar}>\n        <DotplotControls model={model} />\n        <Typography\n          className={classes.bp}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >\n          x: {hview.assemblyNames.join(',')} {getBpDisplayStr(hview.currBp)}\n          <br />\n          y: {vview.assemblyNames.join(',')} {getBpDisplayStr(vview.currBp)}\n        </Typography>\n        {selection ? (\n          <Typography\n            className={classes.bp}\n            variant=\"body2\"\n            color=\"textSecondary\"\n          >\n            {`width:${getBpDisplayStr(hview.bpPerPx * selection.width)}`} <br />\n            {`height:${getBpDisplayStr(vview.bpPerPx * selection.height)}`}\n          </Typography>\n        ) : null}\n        <div className={classes.spacer} />\n        <Warnings model={model} />\n      </div>\n    )\n  },\n)\nexport default Header\n","import React, { useRef } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport { DotplotViewModel } from '../model'\nimport { locstr } from './util'\n\nconst useStyles = makeStyles()(theme => ({\n  popover: {\n    background: theme.palette.background.paper,\n    maxWidth: 400,\n    wordBreak: 'break-all',\n    zIndex: 1000,\n    border: `1px solid ${theme.palette.action.active}`,\n    pointerEvents: 'none',\n    position: 'absolute',\n  },\n}))\n\ntype Coord = [number, number] | undefined\nconst blank = { left: 0, top: 0, width: 0, height: 0 }\n\nexport const TooltipWhereMouseovered = observer(function ({\n  model,\n  mouserect,\n  xdistance,\n  ydistance,\n}: {\n  model: DotplotViewModel\n  mouserect: Coord\n  xdistance: number\n  ydistance: number\n}) {\n  const { classes } = useStyles()\n  const { hview, vview, viewHeight } = model\n  const ref = useRef<HTMLDivElement>(null)\n  const rect = ref.current?.getBoundingClientRect() || blank\n  const offset = 6\n  const w = rect.height + offset * 2\n  return (\n    <>\n      {mouserect ? (\n        <div\n          ref={ref}\n          className={classes.popover}\n          style={{\n            left: offset + mouserect[0] - (xdistance < 0 ? w : 0),\n            top: offset + mouserect[1] - (ydistance < 0 ? w : 0),\n          }}\n        >\n          {`x - ${locstr(mouserect[0], hview)}`}\n          <br />\n          {`y - ${locstr(viewHeight - mouserect[1], vview)}`}\n          <br />\n        </div>\n      ) : null}\n    </>\n  )\n})\n\nexport const TooltipWhereClicked = observer(function ({\n  model,\n  mousedown,\n  xdistance,\n  ydistance,\n}: {\n  model: DotplotViewModel\n  mousedown: Coord\n  xdistance: number\n  ydistance: number\n}) {\n  const { classes } = useStyles()\n  const { hview, vview, viewHeight } = model\n  const ref = useRef<HTMLDivElement>(null)\n  const rect = ref.current?.getBoundingClientRect() || blank\n  return (\n    <>\n      {mousedown && Math.abs(xdistance) > 3 && Math.abs(ydistance) > 3 ? (\n        <div\n          ref={ref}\n          className={classes.popover}\n          style={{\n            left: mousedown[0] - (xdistance < 0 ? 0 : rect.width),\n            top: mousedown[1] - (ydistance < 0 ? 0 : rect.height),\n          }}\n        >\n          {`x - ${locstr(mousedown[0], hview)}`}\n          <br />\n          {`y - ${locstr(viewHeight - mousedown[1], vview)}`}\n          <br />\n        </div>\n      ) : null}\n    </>\n  )\n})\n","import React, { useState, useEffect, useRef } from 'react'\nimport { LoadingEllipses, Menu, ResizeHandle } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\nimport { transaction } from 'mobx'\nimport { makeStyles } from 'tss-react/mui'\nimport normalizeWheel from 'normalize-wheel'\n\n// locals\nimport { DotplotViewModel } from '../model'\nimport ImportForm from './ImportForm'\nimport Header from './Header'\nimport Grid from './Grid'\nimport { HorizontalAxis, VerticalAxis } from './Axes'\nimport { TooltipWhereClicked, TooltipWhereMouseovered } from './DotplotTooltip'\n\nconst blank = { left: 0, top: 0, width: 0, height: 0 }\n\nconst useStyles = makeStyles()(theme => ({\n  spacer: {\n    gridColumn: '1/2',\n    gridRow: '2/2',\n  },\n  root: {\n    position: 'relative',\n    marginBottom: theme.spacing(1),\n    overflow: 'hidden',\n  },\n\n  container: {\n    display: 'grid',\n    padding: 5,\n    position: 'relative',\n  },\n  overlay: {\n    pointerEvents: 'none',\n    overflow: 'hidden',\n    display: 'flex',\n    width: '100%',\n    gridRow: '1/2',\n    gridColumn: '2/2',\n    zIndex: 100, // needs to be below controls\n    '& path': {\n      cursor: 'crosshair',\n      fill: 'none',\n    },\n  },\n\n  content: {\n    position: 'relative',\n    gridColumn: '2/2',\n    gridRow: '1/2',\n  },\n}))\n\ntype Coord = [number, number] | undefined\ntype Rect = { left: number; top: number }\n\n// produces offsetX/offsetY coordinates from a clientX and an element's\n// getBoundingClientRect\nfunction getOffset(coord: Coord, rect: Rect) {\n  return coord && ([coord[0] - rect.left, coord[1] - rect.top] as Coord)\n}\n\nconst RenderedComponent = observer(({ model }: { model: DotplotViewModel }) => {\n  const { classes } = useStyles()\n  return (\n    <div className={classes.overlay}>\n      {model.tracks.map(track => {\n        const [display] = track.displays\n        const { RenderingComponent } = display\n        return RenderingComponent ? (\n          <RenderingComponent\n            key={track.configuration.trackId}\n            model={display}\n          />\n        ) : null\n      })}\n    </div>\n  )\n})\n\nconst DotplotViewInternal = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { cursorMode } = model\n  const { classes } = useStyles()\n  const [mousecurrClient, setMouseCurrClient] = useState<Coord>()\n  const [mousedownClient, setMouseDownClient] = useState<Coord>()\n  const [mouseOvered, setMouseOvered] = useState(false)\n  const [mouseupClient, setMouseUpClient] = useState<Coord>()\n  const ref = useRef<HTMLDivElement>(null)\n  const root = useRef<HTMLDivElement>(null)\n  const distanceX = useRef(0)\n  const distanceY = useRef(0)\n  const scheduled = useRef(false)\n  const svg = ref.current?.getBoundingClientRect() || blank\n  const mousedown = getOffset(mousedownClient, svg)\n  const mousecurr = getOffset(mousecurrClient, svg)\n  const mouseup = getOffset(mouseupClient, svg)\n  const mouserect = mouseup || mousecurr\n  const xdistance = mousedown && mouserect ? mouserect[0] - mousedown[0] : 0\n  const ydistance = mousedown && mouserect ? mouserect[1] - mousedown[1] : 0\n  const { hview, vview } = model\n\n  // use non-React wheel handler to properly prevent body scrolling\n  useEffect(() => {\n    function onWheel(origEvent: WheelEvent) {\n      const event = normalizeWheel(origEvent)\n      origEvent.preventDefault()\n\n      distanceX.current += event.pixelX\n      distanceY.current -= event.pixelY\n      if (!scheduled.current) {\n        scheduled.current = true\n\n        window.requestAnimationFrame(() => {\n          transaction(() => {\n            hview.scroll(distanceX.current)\n            vview.scroll(distanceY.current)\n          })\n          scheduled.current = false\n          distanceX.current = 0\n          distanceY.current = 0\n        })\n      }\n    }\n    if (ref.current) {\n      const curr = ref.current\n      curr.addEventListener('wheel', onWheel)\n      return () => curr.removeEventListener('wheel', onWheel)\n    }\n    return () => {}\n  }, [hview, vview])\n\n  useEffect(() => {\n    function globalMouseMove(event: MouseEvent) {\n      setMouseCurrClient([event.clientX, event.clientY])\n\n      if (mousecurrClient && mousedownClient && cursorMode === 'move') {\n        hview.scroll(-event.clientX + mousecurrClient[0])\n        vview.scroll(event.clientY - mousecurrClient[1])\n      }\n    }\n\n    window.addEventListener('mousemove', globalMouseMove)\n    return () => window.removeEventListener('mousemove', globalMouseMove)\n  }, [mousecurrClient, mousedownClient, cursorMode, hview, vview])\n\n  // detect a mouseup after a mousedown was submitted, autoremoves mouseup\n  // once that single mouseup is set\n  useEffect(() => {\n    let cleanup = () => {}\n\n    function globalMouseUp(event: MouseEvent) {\n      if (\n        Math.abs(xdistance) > 3 &&\n        Math.abs(ydistance) > 3 &&\n        cursorMode === 'crosshair'\n      ) {\n        setMouseUpClient([event.clientX, event.clientY])\n      } else {\n        setMouseDownClient(undefined)\n      }\n    }\n\n    if (mousedown && !mouseup) {\n      window.addEventListener('mouseup', globalMouseUp, true)\n      cleanup = () => window.removeEventListener('mouseup', globalMouseUp, true)\n    }\n    return cleanup\n  }, [mousedown, mousecurr, mouseup, xdistance, ydistance, cursorMode])\n\n  return (\n    <div>\n      <Header\n        model={model}\n        selection={\n          cursorMode === 'move' || !(mousedown && mouserect)\n            ? undefined\n            : {\n                width: Math.abs(xdistance),\n                height: Math.abs(ydistance),\n              }\n        }\n      />\n      <div\n        ref={root}\n        className={classes.root}\n        onMouseLeave={() => setMouseOvered(false)}\n        onMouseEnter={() => setMouseOvered(true)}\n      >\n        <div\n          className={classes.container}\n          style={{\n            transform: `scaleX(${hview.scaleFactor}) scaleY(${vview.scaleFactor})`,\n          }}\n        >\n          <VerticalAxis model={model} />\n          <HorizontalAxis model={model} />\n          <div ref={ref} className={classes.content}>\n            {mouseOvered && cursorMode === 'crosshair' ? (\n              <TooltipWhereMouseovered\n                model={model}\n                mouserect={mouserect}\n                xdistance={xdistance}\n                ydistance={ydistance}\n              />\n            ) : null}\n            {cursorMode === 'crosshair' ? (\n              <TooltipWhereClicked\n                model={model}\n                mousedown={mousedown}\n                xdistance={xdistance}\n                ydistance={ydistance}\n              />\n            ) : null}\n            <div\n              style={{ cursor: cursorMode }}\n              onMouseDown={event => {\n                if (event.button === 0) {\n                  const { clientX, clientY } = event\n                  setMouseDownClient([clientX, clientY])\n                  setMouseCurrClient([clientX, clientY])\n                }\n              }}\n            >\n              <Grid model={model}>\n                {cursorMode === 'crosshair' && mousedown && mouserect ? (\n                  <rect\n                    fill=\"rgba(255,0,0,0.3)\"\n                    x={Math.min(mouserect[0], mousedown[0])}\n                    y={Math.min(mouserect[1], mousedown[1])}\n                    width={Math.abs(xdistance)}\n                    height={Math.abs(ydistance)}\n                  />\n                ) : null}\n              </Grid>\n            </div>\n            <div className={classes.spacer} />\n          </div>\n          <RenderedComponent model={model} />\n          <Menu\n            open={Boolean(mouseup)}\n            onMenuItemClick={(_, callback) => {\n              callback()\n              setMouseUpClient(undefined)\n              setMouseDownClient(undefined)\n            }}\n            onClose={() => {\n              setMouseUpClient(undefined)\n              setMouseDownClient(undefined)\n            }}\n            anchorReference=\"anchorPosition\"\n            anchorPosition={\n              mouseupClient\n                ? {\n                    top: mouseupClient[1] + 30,\n                    left: mouseupClient[0] + 30,\n                  }\n                : undefined\n            }\n            style={{ zIndex: 10000 }}\n            menuItems={[\n              {\n                label: 'Zoom in',\n                onClick: () => {\n                  if (mousedown && mouseup) {\n                    model.zoomIn(mousedown, mouseup)\n                  }\n                },\n              },\n              {\n                label: 'Open linear synteny view',\n                onClick: () => {\n                  if (mousedown && mouseup) {\n                    model.onDotplotView(mousedown, mouseup)\n                  }\n                },\n              },\n            ]}\n          />\n        </div>\n        <ResizeHandle\n          onDrag={n => model.setHeight(model.height + n)}\n          style={{\n            height: 4,\n            background: '#ccc',\n            boxSizing: 'border-box',\n            borderTop: '1px solid #fafafa',\n          }}\n        />\n      </div>\n    </div>\n  )\n})\nconst DotplotView = observer(({ model }: { model: DotplotViewModel }) => {\n  const { initialized, loading, error } = model\n\n  if ((!initialized && !loading) || error) {\n    return <ImportForm model={model} />\n  }\n\n  if (loading) {\n    return <LoadingEllipses variant=\"h6\" />\n  }\n\n  return <DotplotViewInternal model={model} />\n})\n\nexport default DotplotView\n"],"names":["getAdapter","_ref","radioOption","assembly1","assembly2","fileLocation","bed1Location","bed2Location","type","pafLocation","queryAssembly","targetAssembly","outLocation","deltaLocation","chainLocation","mcscanAnchorsLocation","assemblyNames","mcscanSimpleAnchorsLocation","Error","observer","_ref2","sessionTrackData","setSessionTrackData","_useState","useState","_useState2","_slicedToArray","setBed2Location","_useState3","_useState4","setBed1Location","_useState5","_useState6","setFileLocation","_useState7","_useState8","value","setValue","_useState9","_useState10","error","setError","fileName","uri","localPath","name","undefined","getName","path","endsWith","slice","length","stripGz","useEffect","fn","trackId","concat","Date","now","adapter","e","console","_jsxs","Paper","style","padding","children","_jsx","ErrorMessage","Typography","textAlign","RadioGroup","onChange","event","target","Grid","container","justifyContent","item","FormControlLabel","control","Radio","label","margin","href","display","FileSelector","description","location","setLocation","loc","_filteredTracks$","model","setShowTrackId","session","getSession","tracks","sessionTracks","filteredTracks","_toConsumableArray","filter","t","track","readConfObject","includes","f","resetTrack","paragraph","TrackSelectorIcon","Select","map","MenuItem","getTrackName","useStyles","makeStyles","theme","importFormContainer","spacing","assemblySelector","width","TrackSelector","choice","setChoice","_Fragment","FormControl","FormLabel","id","row","ImportCustomTrack","ImportSyntenyTrackSelector","classes","setAssembly2","setAssembly1","_useState11","_useState12","showTrackId","displayError","Container","className","alignItems","AssemblySelector","selected","val","Button","onClick","isSessionWithAddTracks","transaction","addTrackConf","toggleTrack","showTrack","setViews","bpPerPx","offsetPx","setAssemblyNames","variant","color","CursorMove","props","SvgIcon","_objectSpread","fill","d","CursorMouse","WarningDialog","lazy","iconButton","bp","marginLeft","spacer","flexGrow","headerBar","DotplotControls","menuAnchorEl","setMenuAnchorEl","IconButton","zoomOutButton","ZoomOut","zoomInButton","title","ZoomIn","activateTrackSelector","currentTarget","MoreVert","Menu","anchorEl","open","onMenuItemClick","_event","callback","menuItems","squareView","squareViewProportional","showAllRegions","setDrawCigar","drawCigar","checked","setCursorMode","icon","cursorMode","onClose","Warnings","tracksWithWarnings","_t$displays$0$warning","displays","warnings","shown","setShown","Alert","severity","handleClose","_ref3","selection","hview","vview","join","getBpDisplayStr","currBp","height","popover","background","palette","paper","maxWidth","wordBreak","zIndex","border","action","active","pointerEvents","position","blank","left","top","TooltipWhereMouseovered","_ref$current","mouserect","xdistance","ydistance","viewHeight","ref","useRef","w","current","getBoundingClientRect","offset","locstr","TooltipWhereClicked","_ref$current2","mousedown","rect","Math","abs","gridColumn","gridRow","root","marginBottom","overflow","overlay","cursor","content","getOffset","coord","RenderedComponent","RenderingComponent","configuration","DotplotViewInternal","mousecurrClient","setMouseCurrClient","mousedownClient","setMouseDownClient","mouseOvered","setMouseOvered","mouseupClient","setMouseUpClient","distanceX","distanceY","scheduled","svg","mousecurr","mouseup","onWheel","origEvent","normalizeWheel","preventDefault","pixelX","pixelY","window","requestAnimationFrame","scroll","curr","addEventListener","removeEventListener","globalMouseMove","clientX","clientY","cleanup","globalMouseUp","Header","onMouseLeave","onMouseEnter","transform","scaleFactor","VerticalAxis","HorizontalAxis","onMouseDown","button","x","min","y","Boolean","_","anchorReference","anchorPosition","zoomIn","onDotplotView","ResizeHandle","onDrag","n","setHeight","boxSizing","borderTop","initialized","loading","ImportForm","LoadingEllipses"],"sourceRoot":""}