{"version":3,"file":"static/js/2526.cf4d6ad8.chunk.js","mappings":"01BAKMA,GAAYC,EAAAA,EAAAA,KAAAA,EAAa,SAAAC,GAAK,MAAK,CACvCC,QAAS,CACPC,OAAQF,EAAMG,QAAQ,GACtBC,MAAO,KAETC,cAAe,CACbD,MAAO,QAEV,IAEc,SAASE,EAA8B,GAQlD,IAPFC,EAAW,EAAXA,YACUC,EAAW,EAArBC,SACUC,EAAW,EAArBC,SAMQC,EAAYd,IAAZc,QACR,GAAgCC,EAAAA,EAAAA,UAAS,GAAD,OAAIL,IAAc,eAAnDC,EAAQ,KAAEK,EAAW,KAC5B,GAAgCD,EAAAA,EAAAA,UAAS,GAAD,OAAIH,IAAc,eAAnDC,EAAQ,KAAEI,EAAW,KACtBC,GAAiBC,OAAOC,OAAOT,GAC/BU,GAAiBF,OAAOC,OAAOP,GACrC,OACE,UAAC,EAAAS,OAAM,CACLC,SAAS,KACTC,MAAI,EACJC,QAAS,kBAAMhB,GAAa,EAC5BiB,MAAO,4BAA4B,WAEnC,UAACC,EAAA,EAAa,CAACC,UAAWd,EAAQP,cAAc,WAC9C,SAACsB,EAAA,EAAS,CACRC,MAAM,yDACNF,UAAWd,EAAQX,QACnB4B,MAAOpB,EACPqB,WAAad,EAAiC,GAAjB,eAC7Be,OAAQf,EACRgB,SAAU,SAAAC,GAAK,OAAInB,EAAYmB,EAAMC,OAAOL,MAAM,KAEpD,SAACF,EAAA,EAAS,CACRC,MAAM,uDACNF,UAAWd,EAAQX,QACnB4B,MAAOlB,EACPmB,WAAaX,EAAiC,GAAjB,eAC7BY,OAAQZ,EACRa,SAAU,SAAAC,GAAK,OAAIlB,EAAYkB,EAAMC,OAAOL,MAAM,QAItD,UAACM,EAAA,EAAa,YACZ,SAACC,EAAA,EAAM,CACLC,QAAS,kBACP9B,EAAY,CACVI,UAAWA,EACXF,UAAWA,GACX,EAEJ6B,UAAWtB,IAAkBG,EAC7BoB,MAAM,UACNC,QAAQ,YAAW,SACpB,YAGD,SAACJ,EAAA,EAAM,CACLC,QAAS,kBAAM9B,GAAa,EAC5BgC,MAAM,YACNE,WAAS,EACTD,QAAQ,YAAW,SACpB,gBAMT,C,eCzEe,SAASE,EAAW,GAI/B,IAHFnC,EAAW,EAAXA,YAIA,OACE,UAAC,EAAAa,OAAM,CACLC,SAAS,KACTC,MAAI,EACJC,QAAS,kBAAMhB,GAAa,EAC5BiB,MAAM,8BAA6B,WAEnC,UAACC,EAAA,EAAa,YACZ,SAACkB,EAAA,EAAU,CAACC,WAAS,WAAC,gIAItB,SAACD,EAAA,EAAU,UAAC,2HAIZ,2BACE,wBAAI,qDACJ,wBAAI,gFAIJ,wBAAI,+DACJ,wBAAI,yHAIJ,wBAAI,6GAIJ,wBAAI,2GAIJ,wBAAI,wJAMN,SAACA,EAAA,EAAU,CAACC,WAAS,WAAC,+CAGtB,2BACE,wBAAI,6EAIJ,wBAAI,4IAKN,UAACD,EAAA,EAAU,WAAC,sCACwB,SAACE,EAAA,EAAY,IAAG,oFAKtD,SAACV,EAAA,EAAa,WACZ,SAACC,EAAA,EAAM,CAACC,QAAS,kBAAM9B,GAAa,EAAEkC,WAAS,EAACD,QAAQ,YAAW,SAAC,cAM5E,CCvDO,SAASM,EAAOC,EAAkBC,GACvC,OAAOD,EAASE,KAAI,SAAAC,GAAG,OAAIF,EAASG,MAAMD,EAAIE,MAAOF,EAAIG,IAAI,IAAEC,KAAK,GACtE,CAGA,SAASC,EAAUC,GACjB,MAAM,GAAN,OAAUA,EAAKJ,MAAK,YAAII,EAAKH,IAC/B,CAGO,SAASI,EAAOC,GACrB,OAAOA,EAAKC,QACV,SAACC,EAAMC,EAAKC,GAAG,OAAMD,GAAON,EAAUK,KAAUL,EAAUO,EAAID,EAAM,GAAG,GAE3E,CAEO,SAASE,EAAQL,EAAcM,GACpC,OAAON,EACJT,KAAI,SAAAC,GAAG,yBACHA,GAAG,IACNE,MAAOY,EAASd,EAAIG,IACpBA,IAAKW,EAASd,EAAIE,OAAK,IAExBa,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEd,MAAQe,EAAEf,KAAK,GACrC,CC3CA,IAEMgB,EAAW,mBACXC,EAAoB,oBAInB,SAASC,EAAQ,GAAuD,IAArDC,EAAG,EAAHA,IAAKvB,EAAQ,EAARA,SAC7B,OAAO,iBAAMwB,MAAO,CAAEC,WAAYL,GAAW,SAAEtB,EAAOyB,EAAKvB,IAC7D,CAEO,SAAS0B,EAAY,GAW1B,IAHE,IAPFH,EAAG,EAAHA,IACAvB,EAAQ,EAARA,SACA2B,EAAU,EAAVA,WAMMC,EAAM9B,EAAOyB,EAAKvB,GACpB6B,EAAU,GACLC,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,GAAK,EAEnCD,GAAWF,EAAWC,EAAIzB,MAAM2B,EAAGA,EAAI,KAAO,IAGhD,OAAO,iBAAMN,MAAO,CAAEC,WA3BH,oBA2B8B,SAAEI,GACrD,CAEO,SAASG,EAAS,GAoBrB,IAnBFC,EAAG,EAAHA,IACAV,EAAG,EAAHA,IACAW,EAAK,EAALA,MACAlC,EAAQ,EAARA,SACAmC,EAAQ,EAARA,SACAC,EAAU,EAAVA,WACAC,EAAc,EAAdA,eACAC,EAAc,EAAdA,eACA7E,EAAQ,EAARA,SAYM8E,GACJhB,EAAIQ,OAAS,kBAAIR,IAAG,OAAKU,IAAKhB,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEd,MAAQe,EAAEf,KAAK,IAAI8B,GAClEvB,QAAO,SAAA6B,GAAC,OAAIA,EAAEpC,QAAUoC,EAAEnC,GAAG,IAC/B,OACE,gCACG8B,GACC,iBAAMX,MAAO,CAAEC,WAAYJ,GAAoB,SAAEc,IAC/C,KAEHI,EAAOtC,KAAI,SAACwC,EAAOC,GAAS,IAAD,EACpBC,EAAS3C,EAASG,MAAMsC,EAAMpC,IAAoB,QAAjB,EAAEkC,EAAOG,EAAM,UAAE,aAAf,EAAiBtC,OAE1D,OACE,UAAC,WAAc,YACb,iBACEoB,MAAO,CACLC,WAA2B,QAAfgB,EAAMG,KAAiBxB,EA/DlC,oBAgED,SAEDpB,EAASG,MAAMsC,EAAMrC,MAAOqC,EAAMpC,OAEpCgC,GAAkBK,EAAMH,EAAOR,OAAS,GACvC,iBAAMP,MAAO,CAAEC,WAxEToB,WAwEmC,SACtCP,GAAkBK,EAAOZ,OAAoB,EAAXtE,EAAY,UACxCkF,EAAOxC,MAAM,EAAG1C,GAAS,cAAMkF,EAAOxC,OAAO1C,IAChDkF,IAEJ,OAdeG,KAAKC,UAAUN,GAiBxC,IAECL,GACC,iBAAMZ,MAAO,CAAEC,WAAYJ,GAAoB,SAAEe,IAC/C,OAGV,CAEO,SAASY,EAAQ,GAQpB,IAPFhD,EAAQ,EAARA,SACAmC,EAAQ,EAARA,SACAC,EAAU,EAAVA,WAMA,OACE,gCACGD,GACC,iBAAMX,MAAO,CAAEC,WAAYJ,GAAoB,SAAEc,IAC/C,MAEJ,iBACEX,MAAO,CACLC,WAtGU,oBAuGV,SAEDzB,IAGFoC,GACC,iBAAMZ,MAAO,CAAEC,WAAYJ,GAAoB,SAAEe,IAC/C,OAGV,CCxGA,IAgJA,EAhJsBa,EAAAA,YACpB,SAACC,EAAOC,GACN,IAAQC,EAAiCF,EAAjCE,QAASC,EAAwBH,EAAxBG,KAAK,EAAmBH,EAAlBzF,SAAAA,OAAQ,MAAG,GAAE,EACpC,EAEIyF,EADFlD,SAAYsD,EAAG,EAAHA,IAAI,EAAD,EAAEnB,SAAAA,OAAQ,MAAG,GAAE,MAAEC,WAAAA,OAAU,MAAG,GAAE,EAEjD,EAA6BgB,EAArBG,YAEFC,QAFa,MAAG,GAAE,GAGrBvC,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEd,MAAQe,EAAEf,KAAK,IAChCH,KAAI,SAAAC,GAAG,yBACHA,GAAG,IACNE,MAAOF,EAAIE,MAAQgD,EAAQhD,MAC3BC,IAAKH,EAAIG,IAAM+C,EAAQhD,OAAK,IAa5BmB,EAAMd,EAAO+C,EAAS7C,QAAO,SAAAT,GAAG,MAAiB,QAAbA,EAAI0C,IAAc,KACtDX,EAAMxB,EAAO+C,EAAS7C,QAAO,SAAAT,GAAG,OAAIA,EAAI0C,KAAKa,MAAM,OAAO,KAC1DvB,EAAQzB,EAAO+C,EAAS7C,QAAO,SAAAT,GAAG,MAAiB,SAAbA,EAAI0C,IAAe,KAa7D,IAXKX,EAAIF,QAAUR,EAAIQ,QAAUG,EAAMH,SACrCE,EFCC,SAAuBV,EAAaW,GACzC,IAAMwB,EAAWnC,EAAI,GACfoC,EAAUpC,EAAIA,EAAIQ,OAAS,GAC3B6B,EAAc1B,EAAM2B,WACxB,SAAAC,GAAI,OAAIA,EAAKzD,KAAOqD,EAAStD,OAAS0D,EAAK1D,OAASsD,EAAStD,KAAK,IAE9D2D,EAAa7B,EAAM2B,WACvB,SAAAC,GAAI,OAAIA,EAAKzD,KAAOsD,EAAQtD,KAAOyD,EAAK1D,OAASuD,EAAQtD,GAAG,IAExD2D,EAAc9B,EAAM6B,GACpBE,EAAe/B,EAAM0B,GAErBM,EAAW,kBACZhC,EAAM/B,MAAM,EAAGyD,IAAY,CAC9B,CAAExD,MAAO6D,EAAa7D,MAAOC,IAAKqD,EAAStD,SAC3CH,KAAI,SAAAkE,GAAG,yBAAUA,GAAG,IAAEvB,KAAM,kBAAgB,IAExCwB,EAAY,CAChB,CAAEhE,MAAOuD,EAAQtD,IAAKA,IAAK2D,EAAY3D,MAAK,eACzC6B,EAAM/B,MAAM4D,EAAa,KAC5B9D,KAAI,SAAAkE,GAAG,yBAAUA,GAAG,IAAEvB,KAAM,mBAAiB,IAE/C,MAAM,GAAN,eAAWsB,IAAQ,OAAKE,GAC1B,CExBYC,CAAc9C,EAAKW,IAEtBD,EAAIF,SAAUR,EAAIQ,QAAWG,EAAMH,SACtCE,EFwBC,SAAwBV,EAAa+C,GAC1C,IAAMZ,EAAWnC,EAAI,GACfoC,EAAUpC,EAAIA,EAAIQ,OAAS,GAE3BmC,EAAW,CAAC,CAAE9D,MAAOkE,EAAWlE,MAAOC,IAAKqD,EAAStD,QAASH,KAClE,SAAAkE,GAAG,yBAAUA,GAAG,IAAEvB,KAAM,kBAAgB,IAGpCwB,EAAY,CAAC,CAAEhE,MAAOuD,EAAQtD,IAAKA,IAAKiE,EAAWjE,MAAOJ,KAAI,SAAAkE,GAAG,yBAClEA,GAAG,IACNvB,KAAM,mBAAiB,IAGzB,MAAM,GAAN,eAAWsB,IAAQ,OAAKE,GAC1B,CEtCYG,CAAehD,EAAK,CACxBnB,MAAO,EACPC,IAAK+C,EAAQ/C,IAAM+C,EAAQhD,MAC3BwC,KAAM,WAIc,IAApBQ,EAAQoB,OAAe,CAGxB,MAA8B,EAC7BC,EAAAA,EAAAA,QAAOnB,IACPmB,EAAAA,EAAAA,QAAOrC,IACPqC,EAAAA,EAAAA,QAAOtC,IAHFA,EAAQ,KAAEC,EAAU,KAK3Bb,EAAMR,EAAQQ,GALZ+B,EAAG,MAKkBvB,QACvBG,EAAQnB,EAAQmB,EAAOoB,EAAIvB,QAC3BE,EAAMlB,EAAQkB,EAAKqB,EAAIvB,OACzB,CACA,IAAMJ,GAAa+C,EAAAA,EAAAA,oBAAmBC,EAAAA,mBAEtC,OACE,gBAAKxB,IAAKA,EAAK,cAAY,iBAAgB,UACzC,iBACE3B,MAAO,CACLoD,WAAY,YACZC,SAAU,aACVC,SAAU,OACVC,SAAU,GACV1G,SAAU,IACV2G,UAAW,KACX,qBAGA5B,EAAQ6B,MACR7B,EAAQ8B,IACR9B,EAAQ+B,QAAU,KAAO/B,EAAQhD,MAAQ,GAAK,IAAMgD,EAAQ/C,IAAG,YAC7DgD,EAAI,OACR,kBACU,YAATA,GACC,SAACL,EAAO,CAAChD,SAAUsD,IACR,4BAATD,GACF,SAACL,EAAO,CACNhD,SAAUsD,EACVnB,SAAUA,EACVC,WAAYA,IAEH,QAATiB,GACF,SAAC/B,EAAO,CAACC,IAAKA,EAAKvB,SAAUsD,IAClB,SAATD,GACF,SAACrB,EAAQ,CACPE,MAAOA,EACPX,IAAKA,EACLU,IAAKA,EACLjC,SAAUsD,EACV7F,SAAUA,IAED,YAAT4F,GACF,SAAC3B,EAAW,CAACH,IAAKA,EAAKI,WAAYA,EAAY3B,SAAUsD,IAC9C,SAATD,GACF,SAACrB,EAAQ,CACPE,MAAOA,EACPX,IAAKA,EACLU,IAAKA,EACLjC,SAAUsD,EACVjB,gBAAc,EACd5E,SAAUA,IAED,0BAAT4F,GACF,SAACrB,EAAQ,CACPE,MAAOA,EACPX,IAAKA,EACLvB,SAAUsD,EACVrB,IAAKA,EACLI,gBAAc,EACdC,gBAAc,EACd7E,SAAUA,IAED,sBAAT4F,GACF,SAACrB,EAAQ,CACPE,MAAOA,EACPX,IAAKA,EACLvB,SAAUsD,EACVrB,IAAKA,EACLE,SAAUA,EACVC,WAAYA,EACZC,gBAAc,EACd5E,SAAUA,IAED,uCAAT4F,GACF,SAACrB,EAAQ,CACPE,MAAOA,EACPX,IAAKA,EACLvB,SAAUsD,EACVrB,IAAKA,EACLE,SAAUA,EACVC,WAAYA,EACZC,gBAAc,EACdC,gBAAc,EACd7E,SAAUA,KAGZ,yBAAK,qBAKf,I,sBC9HIX,GAAYC,EAAAA,EAAAA,KAAAA,EAAa,SAAAC,GAAK,MAAK,CACvCoI,OAAQ,CACNlI,OAAQF,EAAMG,QAAQ,IAExBkI,YAAa,CACXnI,OAAQ,GAEVoI,UAAW,CACTpI,OAAQF,EAAMG,QAAQ,IAExBoI,WAAY,CACVC,UAAWxI,EAAMG,QAAQ,IAE5B,IAEKsI,GAAU,IAKD,SAASC,GAAuB,GAAgC,IAAD,EAA7BC,EAAK,EAALA,MAAOvC,EAAO,EAAPA,QAC9CxF,EAAYd,IAAZc,QACFgI,EAAgBxC,EAChByC,IAAoC,QAA1B,EAACD,EAAcrC,mBAAW,QAAzB,EAA2BuC,MAAK,SAAA5F,GAAG,MAAiB,QAAbA,EAAI0C,IAAc,KACpEmD,EAA0B,SAAjB3C,EAAQR,KACjBoD,GAAcC,EAAAA,EAAAA,QAAuB,MAC3C,GAA8CpI,EAAAA,EAAAA,WAAS,GAAM,eAAtDqI,EAAe,KAAEC,EAAkB,KAE1C,GAA0BtI,EAAAA,EAAAA,WAAS,GAAM,eAAlCuI,EAAK,KAAEC,EAAQ,KACtB,GAAkCxI,EAAAA,EAAAA,WAAS,GAAM,eAA1CyI,EAAS,KAAEC,EAAY,KAC9B,GAAgC1I,EAAAA,EAAAA,YAAiC,eAA1DmC,EAAQ,KAAEwG,EAAW,KAC5B,GAA0B3I,EAAAA,EAAAA,YAAmB,eAAtCkB,EAAK,KAAE0H,EAAQ,KACtB,GAA4B5I,EAAAA,EAAAA,WAAS,GAAM,eAApC6I,GAAM,KAAEC,GAAS,KACxB,IAAoC9I,EAAAA,EAAAA,WAAS,GAAM,iBAA5C+I,GAAU,MAAEC,GAAa,MAChC,IAAgCC,EAAAA,EAAAA,iBAAgB,WAAY,IAAG,iBAAxDrJ,GAAQ,MAAEK,GAAW,MAC5B,IAAgCgJ,EAAAA,EAAAA,iBAAgB,WAAY,KAAI,iBAAzDnJ,GAAQ,MAAEI,GAAW,MAC5B,IAAkCF,EAAAA,EAAAA,UAAS,CACzCqH,GAAI9B,EAAQ2D,SACZC,OAAO,IACP,iBAHKC,GAAS,MAAEC,GAAY,OAK9BC,EAAAA,EAAAA,YAAU,WACRD,GAAa,CAAEhC,GAAI9B,EAAQ2D,SAAUC,OAAO,GAC9C,GAAG,CAAC5D,KAEJ+D,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACVC,GAAW,EACf,IAAKzB,IAAUS,EACb,OAAO,WAAO,EAEhB,OAAwCiB,EAAAA,EAAAA,YAAW1B,GAA3C2B,EAAe,EAAfA,gBAAiBC,EAAU,EAAVA,WACzB,GAAiC,QAAV,EAAA5B,EAAM6B,YAAI,aAAV,EAAYC,gBAAiB,GAA7CC,GAA+C,YAAnC,GAAmC,SACvCC,EAAS,EAAD,oCAuBvB,aAFC,OAED,0BAvBA,WAAwBvH,EAAeC,EAAa8E,GAAe,sGAC1CmC,EAAgBM,gBAAgBF,GAAa,OAAtD,GAARG,EAAQ,OACA,CAAD,qBACL,IAAIC,MAAM,sBAAqB,OAER,OAAzBC,EAAY,cAAa,SAEXR,EAAWS,KAAKD,EAAW,kBAAmB,CAChEE,eAAeC,EAAAA,EAAAA,SAAQL,EAAU,CAAC,WAAY,YAC9CE,UAAAA,EACAI,QAAS,CACP,CACE/H,MAAAA,EACAC,IAAAA,EACA8E,QAAS0C,EAASO,oBAAoBjD,OAG1C,OAES,OAZLkD,EAAK,SAYIA,EAAK,eAAb7H,EAAI,wBACC,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM8H,IAAI,SAAqB,IAAE,6CAC1C,sBA8BD,OA3BC,uBAAC,qGAG6B,GAH7B,SAEE7B,OAAS5D,GACDzC,GADW,EACagD,GAAxBhD,MAAOC,EAAG,EAAHA,IAAK8E,EAAO,EAAPA,QAEf8B,GAAUD,SAAS3G,EAAMD,EAAQqF,IAAO,gBAC3Ce,EAAY,CACVzH,MAAM,gCAAD,OAAkC0G,GAAO,4CAC9C,uCAEgBkC,EAASvH,EAAOC,EAAK8E,GAAQ,OAAtC,OAAH7B,EAAG,iBACQqE,EACfY,KAAKC,IAAI,EAAGpI,EAAQzC,IACpByC,EACA+E,GACD,QAJO,OAAFsD,EAAE,iBAKWd,EAAStH,EAAKA,EAAM1C,GAAUwH,GAAQ,QAAnDuD,EAAI,OACLtB,GACHZ,EAAY,CAAElD,IAAAA,EAAKnB,SAAUsG,EAAIrG,WAAYsG,IAC9C,0DAGHC,QAAQ5J,MAAM,EAAD,IACb0H,EAAS,EAAD,IAAG,yDAvBd,GA2BM,WACLW,GAAW,CACb,CACF,GAAG,CAAChE,EAASgD,EAAOT,EAAOhI,GAAUsJ,KAErC,IAAM2B,IAAW5I,EAEX6I,IAAUxB,EAAAA,EAAAA,YAAW1B,GAErBmD,IACJZ,EAAAA,EAAAA,SAAQW,GAAS,CAAC,iBAAkB,mBAFd,CAAC,OAAQ,aAAc,QAKzCE,GACa,QAAjB3F,EAAQR,KACJkG,GAAcE,SAAS,SAAW5F,EAAQ6F,SAC1CH,GAAcE,SAAS5F,EAAQR,MAC/BsG,GAAMH,GAAmBlD,EAAS,MAAQ,OAAU,WAG1DsB,EAAAA,EAAAA,YAAU,WACRgC,GAAQD,GACV,GAAG,CAACH,GAAiBG,KAErB,QAAwBrL,EAAAA,EAAAA,UACtBkL,GAAmBlD,EAAS,MAAQ,OAAU,WAC/C,iBAFMxC,GAAI,MAAE8F,GAAO,MAIdC,GAAO,CACXC,KAAM,kBACNC,sBAAsB,WAAD,OAAa7L,GAAQ,gBAC1C8L,kBAAkB,WAAD,OAAa5L,GAAQ,qBACtC6L,mCAAmC,WAAD,OAAa7L,GAAQ,gCAAwBF,GAAQ,aACvFgM,KAAM,QAGFC,GAAMX,GACRlD,GAAM,QAEFtE,IAAK,MACLM,QAAS,WACNuH,IAELA,GACF,CACEO,QAAS,cACTC,wBAAwB,kBAAD,OAAoBjM,GAAQ,sBAGzD,OAAQoI,IAAWF,IAAYF,EAAQ,MACrC,iBAAKjH,UAAWd,EAAQ2H,WAAW,WACjC,SAACnG,EAAA,EAAM,CAACI,QAAQ,YAAYH,QAAS,kBAAMgH,GAAUD,EAAM,EAAC,SACzDA,EAAQ,wBAA0B,2BAErC,SAACyD,EAAA,EAAW,CAACnL,UAAWd,EAAQyH,YAAY,UAC1C,SAACyE,EAAA,EAAU,CAACzK,QAAS,kBAAMkH,GAAa,EAAK,EAAC,UAC5C,SAACwD,EAAA,EAAQ,SAGb,kBACC3D,GACC,iBAAK1H,UAAWd,EAAQ2H,WAAW,WACjC,SAACsE,EAAA,EAAW,CAACnL,UAAWd,EAAQyH,YAAY,UAC1C,SAAC2E,EAAA,EAAM,CACLnL,MAAOwE,GACPrE,SAAU,SAAAC,GAAK,OAAIkK,GAAQlK,EAAMC,OAAOL,MAAM,EAAC,SAE9CoL,OAAOC,QAAQR,IAAKzJ,KAAI,+BAAEkK,EAAG,KAAEjB,EAAG,YACjC,SAACkB,EAAA,EAAQ,CAAWvL,MAAOsL,EAAI,SAC5BjB,GADYiB,EAEJ,SAKjB,SAACN,EAAA,EAAW,CAACnL,UAAWd,EAAQyH,YAAY,UAC1C,SAACjG,EAAA,EAAM,CACLV,UAAWd,EAAQwH,OACnB5F,QAAQ,YACRD,MAAM,UACNF,QAAS,WACP,IAAM8D,EAAM6C,EAAYqE,QACpBlH,IACFmH,IAAKnH,EAAIoH,aAAe,GAAI,CAAEC,OAAQ,eACtC7D,IAAU,GACV8D,YAAW,kBAAM9D,IAAU,EAAM,GAAE,KAEvC,EAAE,SAEDD,GAAS,uBAAyB,sBAGvC,SAACmD,EAAA,EAAW,CAACnL,UAAWd,EAAQyH,YAAY,UAC1C,SAACqF,EAAA,EAAO,CAAClM,MAAM,uJAAsJ,UACnK,SAACY,EAAA,EAAM,CACLV,UAAWd,EAAQwH,OACnB5F,QAAQ,YACRD,MAAM,UACNF,QAAS,WACP,IAAM8D,EAAM6C,EAAYqE,QACpBlH,IACFmH,IAAKnH,EAAIwH,UAAW,CAAEH,OAAQ,cAC9B3D,IAAc,GACd4D,YAAW,kBAAM5D,IAAc,EAAM,GAAE,KAE3C,EAAE,SAEDD,GAAa,uBAAyB,mBAI7C,SAACiD,EAAA,EAAW,CAACnL,UAAWd,EAAQyH,YAAY,UAC1C,SAACyE,EAAA,EAAU,CAACzK,QAAS,kBAAM8G,GAAmB,EAAK,EAAC,UAClD,SAACtG,EAAA,EAAY,SAIjB,mBACA,8BACGd,GACC,SAACY,EAAA,EAAU,CAACJ,MAAM,QAAO,mBAAKR,KAC5B6J,IACF,SAAC,EAAAgC,gBAAe,IACd5K,EACF,UAAWA,GACT,iCACE,SAACL,EAAA,EAAU,CAACJ,MAAM,QAAO,SAAES,EAASjB,SACpC,SAACK,EAAA,EAAM,CACLI,QAAQ,YACRD,MAAM,UACNF,QAAS,kBAAM6H,IAAa,kBAAKD,IAAS,IAAED,OAAO,IAAO,EAAC,SAC5D,mBAKH,SAAC,EAAa,CACZ7D,IAAK6C,EACL5C,QAASwC,EACTvC,KAAMA,GACNrD,SAAUA,EACVvC,SAAUA,MAId,SAACkC,EAAA,EAAU,UAAC,2BAIhB,KAEHuG,GACC,SAAC,EAAW,CACV3I,YAAa,SAAAmM,GACX,GAAIA,EAAK,CACP,IAAQ/L,EAAuB+L,EAAvB/L,SAAUF,EAAaiM,EAAbjM,SAClBK,GAAYL,GACZM,GAAYJ,EACd,CACAwI,GAAmB,EACrB,EACAxI,SAAUA,GACVF,SAAUA,KAEV,KAEH6I,GAAY,SAAC,EAAO,CAAC/I,YAAa,kBAAMgJ,GAAa,EAAM,IAAO,OAGzE,C,yDC3QMsE,GAAa,CACjB,eACA,SACA,WACA,cACA,WACA,aACA,WACA,aACA,YAIIC,GAAc,CAClB,OACA,QACA,MACA,SACA,UACA,cACA,QAGWhO,IAAYC,EAAAA,EAAAA,KAAAA,EAAa,SAAAC,GAAK,MAAK,CAC9C+N,sBAAuB,CACrBC,QAAS,QACTC,QAASjO,EAAMG,QAAQ,IAEzB+N,WAAY,CACV3L,MAAO,WAET4L,MAAO,CACLH,QAAS,OACTI,SAAU,QAEZC,iBAAkB,CAChB,UAAW,CACT5J,WAAY,WAGhB6J,UAAW,CACTC,UAAW,YACXC,SAAU,GACVC,aAAc,kBACd1G,SAAU,GACVtD,WAAYzE,EAAM0O,QAAQC,KAAK,KAC/BC,YAAa5O,EAAMG,QAAQ,GAC3B8N,QAASjO,EAAMG,QAAQ,KAEzB0O,WAAY,CACVN,UAAW,aACXvG,UAAW,IACXD,SAAU,GACVkG,QAASjO,EAAMG,QAAQ,IACvB2H,SAAU,QAEZgH,cAAe,CACbP,UAAW,aACXvG,UAAW,IACXiG,QAASjO,EAAMG,QAAQ,IACvBsE,WAAYzE,EAAM0O,QAAQC,KAAK,KAC/BI,OAAO,aAAD,OAAe/O,EAAM0O,QAAQC,KAAK,MACxCK,UAAW,aACXlH,SAAU,QAEb,IAEM,SAASmH,GAAS,GAIN,IAHjBzI,EAAQ,EAARA,SACAhF,EAAK,EAALA,MAAM,EAAD,EACL0N,gBAAAA,OAAe,OAAO,EAEdtO,EAAYd,KAAZc,QACR,GAAgCC,EAAAA,EAAAA,UAASqO,GAAgB,eAAlDC,EAAQ,KAAEC,EAAW,KAC5B,OACE,UAACC,EAAA,EAAS,CACRF,SAAUA,EACVnN,SAAU,kBAAMoN,GAAY,SAAAE,GAAC,OAAKA,CAAC,GAAC,EACpCC,gBAAiB,CAAEC,eAAe,GAAO,WAEzC,SAACC,EAAA,EAAgB,CACfvB,YAAY,SAACwB,EAAA,EAAU,CAAChO,UAAWd,EAAQsN,aAAe,UAE1D,UAACvL,EAAA,EAAU,CAACH,QAAQ,SAAQ,UAAC,IAAEhB,QAEjC,SAACmO,EAAA,EAAgB,CAACjO,UAAWd,EAAQmN,sBAAsB,SACxDvH,MAIT,CAEO,IAAMoJ,GAAY,SAAH,GAUf,IATLC,EAAW,EAAXA,YACA5H,EAAI,EAAJA,KACA7H,EAAK,EAALA,MAAM,EAAD,EACL0P,OAAAA,OAAM,MAAG,GAAE,EAOX,EAAwBhQ,KAAhBc,EAAO,EAAPA,QAASmP,EAAE,EAAFA,GACX7D,EAAM,kBAAI4D,GAAM,CAAE7H,IAAM3E,KAAK,KACnC,OAAOuM,GACL,SAACnC,EAAA,EAAO,CAAClM,MAAOqO,EAAaG,UAAU,OAAM,UAC3C,gBAAKtO,UAAWqO,EAAGnP,EAAQyN,iBAAkBzN,EAAQ0N,WAAW,SAC7DpC,OAIL,gBAAKxK,UAAWd,EAAQ0N,UAAW9J,MAAO,CAAEpE,MAAOA,GAAQ,SACxD8L,GAGP,EAEa+D,GAAa,SAAH,GAAwD,IAAlDpO,EAAK,EAALA,MACnBjB,EAAYd,KAAZc,QACFsP,EAAS,UAAGrO,GAAQ4E,MAAM,gBAChC,OACE,gBAAK/E,UAAWd,EAAQiO,WAAW,SAChC5I,EAAAA,eAAqBpE,GACpBA,EACEqO,GACF,SAAC,EAAAC,cAAa,CAACC,KAAI,mBAAcvO,EAAK,aAAKA,EAAK,WAEhD,SAAC,EAAAsO,cAAa,CACZC,KAAMC,IAASxO,GAASiE,KAAKC,UAAUlE,GAASyO,OAAOzO,MAKjE,EAEa0O,GAAc,SAAH,GAYjB,IAXLtI,EAAI,EAAJA,KACApG,EAAK,EAALA,MACAgO,EAAW,EAAXA,YACAC,EAAM,EAANA,OACA1P,EAAK,EAALA,MAQQQ,EAAYd,KAAZc,QACR,OAAiB,OAAViB,QAA4BgE,IAAVhE,GACvB,iBAAKH,UAAWd,EAAQuN,MAAM,WAC5B,SAACyB,GAAS,CACRE,OAAQA,EACRD,YAAaA,EACb5H,KAAMA,EACN7H,MAAOA,KAET,SAAC6P,GAAU,CAACpO,MAAOA,OAEnB,IACN,EAEM2O,GAAa,SAAH,GAUT,IATLvI,EAAI,EAAJA,KACApG,EAAK,EAALA,MACAgO,EAAW,EAAXA,YAAY,EAAD,EACXC,OAAAA,OAAM,MAAG,GAAE,EAOHlP,EAAYd,KAAZc,QACR,OAAqB,IAAjBiB,EAAMkD,OACDsL,IAASxO,EAAM,KACpB,SAAC4O,GAAU,CAACC,WAAY7O,EAAM,GAAIiO,OAAM,kBAAMA,GAAM,CAAE7H,OAEtD,iBAAKvG,UAAWd,EAAQuN,MAAM,WAC5B,SAACyB,GAAS,CAACE,OAAQA,EAAQD,YAAaA,EAAa5H,KAAMA,KAC3D,SAACgI,GAAU,CAACpO,MAAOA,EAAM,QAGpBA,EAAM8O,OAAM,SAAAzE,GAAG,OAAImE,IAASnE,EAAI,KAEvC,8BACGrK,EAAMoB,KAAI,SAACiJ,EAAKpH,GAAC,OAChB,SAAC2L,GAAU,CAETC,WAAYxE,EACZ4D,OAAM,kBAAMA,GAAM,CAAE7H,EAAO,IAAMnD,KAF5BgB,KAAKC,UAAUmG,GAAO,IAAMpH,EAGjC,OAMN,iBAAKpD,UAAWd,EAAQuN,MAAM,WAC5B,SAACyB,GAAS,CAACE,OAAQA,EAAQD,YAAaA,EAAa5H,KAAMA,IAC1DpG,EAAMoB,KAAI,SAACiJ,EAAKpH,GAAC,OAChB,gBAEEpD,UAAWd,EAAQkO,cAAc,UAEjC,SAACmB,GAAU,CAACpO,MAAOqK,KAHdpG,KAAKC,UAAUmG,GAAO,IAAMpH,EAI7B,MAKhB,EAGA,SAAS8L,GAAS1K,GAChB,IAAQE,EAAYF,EAAZE,QACFoB,EAASpB,EAAQoB,OACjBqJ,EAAoC,CACxC,KAAM,IACN,EAAK,GACL,EAAK,KAEDjM,EAAMiM,EAAUrJ,GAAO,WAAOqJ,EAAUrJ,GAAO,KAAM,GAErDsJ,GAAMC,EAAAA,EAAAA,mBAAkB3K,GAC9B,OAAO,wCAAM0K,EAAG,YAAIlM,IACtB,CAEA,SAASoM,GAAY9K,GACnB,IAjBgB+K,EAkBVC,EADchL,EAAZE,QAiBF+K,GAAa,kBAAQD,GAAQA,EAAIE,cAC/BhO,EAAe+N,EAAf/N,MAAOC,EAAQ8N,EAAR9N,IAETgO,GAAqC,kBACtCF,GAAa,IAChBpM,QAvCckM,EAuCG5N,EAAMD,EAvCK6N,EAAEK,eAAe,YAgD/C,OACE,iCACE,SAACf,GAAW,CACVtI,KAAK,WACLpG,OAAO,SAAC+O,IAAQ,kBAAK1K,GAAK,IAAEE,QAAS+K,OAEtClE,OAAOC,QAZgB,CAC1B2C,YAAa,cACb5H,KAAM,OACNlD,OAAQ,SACRa,KAAM,SASD3C,KAAI,+BAAEkK,EAAG,KAAM,MAAM,CAAN,KAAakE,EAAiBlE,GAAK,IAClDxJ,QAAO,YAAS,OAAe,OAAxB,YAAS,EAAmB,IACnCV,KAAI,+BAAEgF,EAAI,KAAEpG,EAAK,YAChB,SAAC0O,GAAW,CAAYtI,KAAMA,EAAMpG,MAAOA,GAAzBoG,EAAkC,MAI9D,CAEO,IAAMsJ,GAAkB,SAACrL,GAC9B,OACE,SAAC+I,IAAQ,kBAAK/I,GAAK,IAAE1E,MAAM,eAAc,UACvC,SAACwP,IAAW,UAAK9K,MAGvB,EAYO,SAASsL,GAAQ,GAIpB,IAHF3P,EAAK,EAALA,MAIM4P,GAAOC,EAAAA,EAAAA,YAAW7P,GACxB,OAAO,SAAC,EAAAsO,cAAa,CAACC,KAAI,mBAAcqB,EAAI,aAAKA,EAAI,SACvD,CAEA,IAAME,GAAkB,SAAH,GAQd,IAPL9P,EAAK,EAALA,MACAiO,EAAM,EAANA,OACA7H,EAAI,EAAJA,KAMM2J,EAAO3E,OAAO2E,KAAK/P,EAAM,IAAIoC,OAC7B4N,EAAY,IAAIC,IAAIF,GAE1B,GADA/P,EAAMkQ,SAAQ,SAAC7F,GAAQ,OAAKe,OAAO2E,KAAK1F,GAAK6F,SAAQ,SAAAC,GAAC,OAAIH,EAAUI,IAAID,EAAE,GAAC,IACvEH,EAAUK,KAAON,EAAK7M,OAAS,EAAG,CAEpC,IAWIoN,EAXEC,EAAOnF,OAAOC,QAAQrL,GAAOoB,KAAI,YAAe,IAAD,eAAZ+O,EAAC,KAAE9F,EAAG,KACrChE,EAAgBgE,EAAhBhE,GAAOkE,GAAI,OAAKF,EAAG,IAC3B,OAAO,QACLhE,GAAI8J,EACJK,WAAYnK,GACTkE,EAEP,IAKIyF,EAAUS,IAAI,OAChBT,EAAUU,OAAO,MACjBJ,EAAQ,CAAI,cAAY,eAAKN,KAE7BM,GAAQ,OAAON,GAGjB,IAAMW,EAAUL,EAASlP,KAAI,SAAAiJ,GAAG,MAAK,CACnCiC,MAAOjC,EACPuG,WAAY,SAACC,GACX,IAAQ7Q,EAAU6Q,EAAV7Q,MACR,OAAO8Q,EAAAA,EAAAA,eAAc9Q,IAAS,SAAC2P,GAAO,CAAC3P,MAAOA,KAAY+Q,EAAAA,EAAAA,QAAO/Q,EACnE,EACAzB,OAAOyS,EAAAA,EAAAA,kBAAiBT,EAAKnP,KAAI,SAAA6P,GAAC,OAAIA,EAAE5G,EAAI,KAC7C,IAGK6G,EAAWX,EAAKrN,OAAS,IAEzBiO,EAHY,GAIhBzH,KAAK0H,IAAIb,EAAKrN,OAAQ,KAFL,IAEsCgO,EAAW,EAAI,IAGxE,OACE,iCACE,SAACnD,GAAS,CAACE,OAAQA,EAAQ7H,KAAMA,KACjC,gBACEzD,MAAO,CACLwO,OAAAA,EACA5S,MAAO,QACP,UAEF,SAAC8S,EAAA,EAAQ,CACPC,yBAAuB,EACvBC,UAlBU,GAmBVhB,KAAMA,EACNiB,4BAA0B,EAC1Bb,QAASA,EACTc,WAAYP,QAKtB,CACA,OAAO,IACT,EA6BA,SAASQ,GAAa,GAQlB,IAGE9B,EAVJ5P,EAAK,EAALA,MACAiO,EAAM,EAANA,OACA7H,EAAI,EAAJA,KAMQrH,EAAYd,KAAZc,QACA4S,EAAsB3R,EAAtB2R,IAAI,EAAkB3R,EAAjB4R,QAAAA,OAAO,MAAG,GAAE,EAEzB,IACEhC,EAAO,IAAIiC,IAAIF,EAAKC,GAAShC,IAG/B,CAFE,MAAOkC,GACPlC,EAAO+B,CACT,CACA,OACE,iBAAK9R,UAAWd,EAAQuN,MAAM,WAC5B,SAACyB,GAAS,CAACE,OAAQA,EAAQ7H,KAAMA,KACjC,SAACgI,GAAU,CAACpO,MAAO4P,MAGzB,CAEO,SAAShB,GAAWvK,GACzB,IACEwK,EAOExK,EAPFwK,WAAW,EAOTxK,EANF0N,KAAAA,OAAI,MAAG,GAAE,IAMP1N,EALF2N,gBAAAA,OAAe,MAAG,GAAE,EACpBC,EAIE5N,EAJF4N,aAAa,EAIX5N,EAHF6N,UAAAA,OAAS,MAAG,SAAA7H,GAAG,OAAIA,CAAG,IACtB8H,EAEE9N,EAFF8N,SAAS,EAEP9N,EADF4J,OAAAA,OAAM,MAAG,GAAE,EAGPmE,EAAK,kBAAOL,GAAS/F,IAAW,OAAIgG,IAClCzC,EAA0BV,EAA1BU,aAAiBhF,GAAI,OAAKsE,EAAU,IACtCwD,GAAmB,kBAAQ9H,GAASgF,GAEpC+C,EAlDR,SAA0BC,EAAoBtE,GAC5C,IAAMuE,EAAM,GAMZ,OALAD,EAAMrC,SAAQ,SAAA5E,GACZ,IAAMjB,EAAM,kBAAI4D,GAAM,CAAE3C,EAAI,KAAI7J,KAAK,KACrC+Q,EAAIC,MAAKC,EAAAA,EAAAA,aAAYrI,EAAK,IAC5B,IAEOX,KAAKiJ,KAAKjJ,KAAKC,IAAG,MAARD,KAAY8I,IAAQ,EACvC,CA0CwBI,CACpBxH,OAAOC,QAAQgH,GAAqBvQ,QAClC,+BAAEqO,EAAC,KAAG,YAAYnM,IAAZ,OAA0BoO,EAAMjI,SAASgG,EAAE,IAEnDlC,GAGF,OACE,8BACG7C,OAAOC,QAAQgH,GACbvQ,QAAO,+BAAEqO,EAAC,KAAG,YAAYnM,IAAZ,OAA0BoO,EAAMjI,SAASgG,EAAE,IACxD/O,KAAI,YAAmB,IAAD,eAAhBkK,EAAG,KAAEtL,EAAK,KACTgO,EA3EhB,SAAsBwE,GAA+C,IAAD,EAA/BnD,EAAwB,uDAAG,CAAC,EAM/D,OALAmD,EAAItC,SAAQ,SAAA5K,GACN+J,IACFA,EAAMA,EAAI/J,GAEd,IACsB,kBAAR+J,EACVA,EAC4B,kBAAlB,QAAV,EAAOA,SAAG,aAAH,EAAKwD,aACZxD,EAAIwD,iBACJ7O,CACN,CAgE8B8O,CAAa,GAAD,eAAK7E,GAAM,CAAE3C,IAAM2G,GACnD,GAAIc,MAAMC,QAAQhT,GAGhB,OAAOA,EAAMkD,OAAS,GAAKlD,EAAM8O,OAAM,SAAAzE,GAAG,OAAImE,IAASnE,EAAI,KACzD,SAACyF,GAAe,CAEd1J,KAAMkF,EACN2C,OAAQA,EACRjO,MAAOA,GAHFsL,IAMP,SAACqD,GAAU,CAETvI,KAAMkF,EACNtL,MAAOA,EACPgO,YAAaA,EACbC,OAAQA,GAJH3C,GAOJ,GAAIkD,IAASxO,GAAQ,CACWqE,EAA7B2N,gBAAR,IAA4BzH,GAAI,OAAKlG,EAAK,IAC1C,OAAOyM,EAAAA,EAAAA,eAAc9Q,GACnBmS,EAAW,MACT,SAACT,GAAY,CAEXtL,KAAMkF,EACN2C,OAAQA,EACRjO,MAAOA,GAHFsL,IAOT,mBAACsD,IAAU,kBACLrE,GAAI,IACRe,IAAKA,EACLuD,WAAY7O,EACZiS,aAAcA,EACdhE,OAAM,kBAAMA,GAAM,CAAE3C,MAG1B,CACE,OACE,SAACoD,GAAW,CAEVtI,KAAMkF,EACNtL,MAAOkS,EAAUlS,EAAOsL,GACxB0C,YAAaA,EACbC,OAAQA,EACR1P,MAAOmL,KAAK0H,IAAIkB,EA1fH,MAqfRhH,EASb,KAGR,CAEO,IAAM2H,GAAiB,SAAC5O,GAC7B,IAAQE,EAAYF,EAAZE,QACR,OACE,SAAC6I,IAAQ,kBAAK/I,GAAK,IAAE1E,MAAM,aAAY,UACrC,SAACiP,IAAU,kBAAKvK,GAAK,IAAEwK,WAAYtK,OAGzC,EAaA,SAAS2O,GAAc9M,EAAeC,EAAatC,GACjD,MAAO,EJ/dgBoP,EI+dN,UAAG/M,IAAI,UAASC,GJ9d1B8M,EAAKjQ,OAAS,GAAE,UAAMiQ,EAAK7R,MAAM,EAAG,IAAG,OAAQ6R,GI8df,GAAD,OAAKpP,IACxCjC,QAAO,SAAA6B,GAAC,QAAMA,CAAC,IACflC,KAAK,OJjeH,IAAkB0R,CIkezB,CAOO,IAAMC,GAAiB,SAAjBA,EAAkB/O,GAO7B,MAAiDA,EAAzC0N,KAAAA,OAAI,MAAG,GAAE,EAAEjL,EAA8BzC,EAA9ByC,MAAOvC,EAAuBF,EAAvBE,QAAQ,EAAeF,EAAdgP,MAAAA,OAAK,MAAG,EAAC,EAC5C,EAAuD9O,EAA/C6B,KAAAA,OAAI,MAAG,GAAE,IAAsC7B,EAApC8B,GAAAA,OAAE,MAAG,GAAE,IAA6B9B,EAA3BR,KAAAA,OAAI,MAAG,GAAE,EAAEW,EAAgBH,EAAhBG,YACjC4O,GAAKC,EAAAA,EAAAA,QAAOzM,GAAO0M,cACnBxJ,GAAUxB,EAAAA,EAAAA,YAAW1B,GAErB2M,EAAaH,EAAGI,uBAAuB,yBAA0B,KAAM,CAC3E1J,QAAAA,EACAzF,QAAAA,EACAuC,MAAAA,IAEF,OACE,UAACsG,GAAQ,CAACzN,MAAOuT,GAAc9M,EAAMC,EAAItC,GAAM,WAC7C,SAACjD,EAAA,EAAU,UAAC,kBACZ,SAACqO,IAAW,UAAK9K,IAChBE,EAAQoP,MACP,iCACE,SAACC,EAAA,EAAO,KACR,SAAC9S,EAAA,EAAU,UAAC,kBAEZ,SAACqO,IAAW,kBAAK9K,GAAK,IAAEE,QAASA,EAAQoP,WAEzC,MACJ,SAACC,EAAA,EAAO,KAER,SAAC9S,EAAA,EAAU,UAAC,gBAEZ,SAAC8N,IAAU,gBACTC,WAAYtK,GACRF,GAAK,IACT0N,KAAMA,EACNC,gBAAiB/F,OAGnB,SAAC,EAAA4H,cAAa,CACZC,kBAAmB,gBAAG5T,EAAK,EAALA,MAAK,OAAO,SAAC,EAAA6T,aAAY,CAAC7T,MAAOA,GAAS,EAAC,UAEjE,SAAC2G,IAAsB,UAAKxC,MAG7BoP,GACC,iCACE,SAACG,EAAA,EAAO,KACR,SAACxG,GAAQ,CAACzN,MAAO8T,EAAWrN,KAAK,UAC/B,SAACqN,EAAWO,WAAS,UAAK3P,SAG5B,KAEQ,OAAXK,QAAW,IAAXA,GAAAA,EAAaxB,QACZ,SAACkK,GAAQ,CAACzN,MAAM,cAAc0N,gBAAiBgG,EAAQ,EAAE,SACtD3O,EAAYtD,KAAI,SAAAC,GAAG,OAClB,SAAC+R,EAAc,CAEb7O,QAASlD,EACTyF,MAAOA,EACPuM,MAAOA,EAAQ,GAHVpP,KAAKC,UAAU7C,GAIpB,MAGJ,OAGV,EAuBA,IArB2B4S,EAAAA,EAAAA,WAAS,YAAgC,IAA7BnN,EAAK,EAALA,MAC7BoN,EAAgBpN,EAAhBoN,YAER,IAAKA,EACH,OAAO,KAOT,IAjGe7E,EAiGT9K,EAAUN,KAAKkQ,MACnBlQ,KAAKC,UAAUgQ,GAAa,SAACE,EAAGC,GAAC,MAClB,qBAANA,EAAoB,KAAOA,CAAC,KAGvC,OAtGehF,EAsGA9K,EArGoB,IAA5B6G,OAAO2E,KAAKV,GAAKnM,OAqGE,MACxB,SAACkQ,GAAc,CAACtM,MAAOA,EAAOvC,QAASA,GAE3C,G","sources":["../../../packages/core/BaseFeatureWidget/SequenceFeatureSettingsDialog.tsx","../../../packages/core/BaseFeatureWidget/SequenceHelpDialog.tsx","../../../packages/core/BaseFeatureWidget/util.tsx","../../../packages/core/BaseFeatureWidget/SequenceBox.tsx","../../../packages/core/BaseFeatureWidget/SequencePanel.tsx","../../../packages/core/BaseFeatureWidget/SequenceFeatureDetails.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Button, DialogContent, DialogActions, TextField } from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()(theme => ({\n  formElt: {\n    margin: theme.spacing(3),\n    width: 400,\n  },\n  dialogContent: {\n    width: '80em',\n  },\n}))\n\nexport default function SequenceFeatureSettingsDialog({\n  handleClose,\n  intronBp: intronBpArg,\n  upDownBp: upDownBpArg,\n}: {\n  handleClose: (arg?: { intronBp: number; upDownBp: number }) => void\n  intronBp: number\n  upDownBp: number\n}) {\n  const { classes } = useStyles()\n  const [intronBp, setIntronBp] = useState(`${intronBpArg}`)\n  const [upDownBp, setUpDownBp] = useState(`${upDownBpArg}`)\n  const intronBpValid = !Number.isNaN(+intronBp)\n  const upDownBpValid = !Number.isNaN(+upDownBp)\n  return (\n    <Dialog\n      maxWidth=\"xl\"\n      open\n      onClose={() => handleClose()}\n      title={'Feature sequence settings'}\n    >\n      <DialogContent className={classes.dialogContent}>\n        <TextField\n          label=\"Number of intronic bases around splice site to display\"\n          className={classes.formElt}\n          value={intronBp}\n          helperText={!intronBpValid ? 'Not a number' : ''}\n          error={!intronBpValid}\n          onChange={event => setIntronBp(event.target.value)}\n        />\n        <TextField\n          label=\"Number of bases up/down stream of feature to display\"\n          className={classes.formElt}\n          value={upDownBp}\n          helperText={!upDownBpValid ? 'Not a number' : ''}\n          error={!upDownBpValid}\n          onChange={event => setUpDownBp(event.target.value)}\n        />\n      </DialogContent>\n\n      <DialogActions>\n        <Button\n          onClick={() =>\n            handleClose({\n              upDownBp: +upDownBp,\n              intronBp: +intronBp,\n            })\n          }\n          disabled={!intronBpValid || !upDownBpValid}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Submit\n        </Button>\n        <Button\n          onClick={() => handleClose()}\n          color=\"secondary\"\n          autoFocus\n          variant=\"contained\"\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React from 'react'\nimport { Button, DialogContent, DialogActions, Typography } from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\n\n// icons\nimport SettingsIcon from '@mui/icons-material/Settings'\n\nexport default function HelpDialog({\n  handleClose,\n}: {\n  handleClose: () => void\n}) {\n  return (\n    <Dialog\n      maxWidth=\"xl\"\n      open\n      onClose={() => handleClose()}\n      title=\"Feature sequence panel help\"\n    >\n      <DialogContent>\n        <Typography paragraph>\n          The \"Feature sequence\" panel shows the underlying genomic sequence for\n          a given feature, fetched from the reference genome.\n        </Typography>\n        <Typography>\n          For gene features, this panel does special calculations to e.g. stitch\n          together the coding sequence, the options are:\n        </Typography>\n        <ul>\n          <li>CDS - shows the stitched together CDS sequences</li>\n          <li>\n            Protein - the translated coding sequence, with the \"standard\"\n            genetic code\n          </li>\n          <li>cDNA - shows the UTRs and stitched together CDS sequences</li>\n          <li>\n            Gene w/ introns - the sequence underlying the entire gene including\n            including introns, with UTR and CDS highlighted\n          </li>\n          <li>\n            Gene w/ Nbp introns - same \"Gene w/ introns\", but limiting to a\n            subset of the intron sequence displayed\n          </li>\n          <li>\n            Gene +/- Nbp up+down stream - same as \"Gene w/ introns\" but with up\n            and downstream sequence displayed\n          </li>\n          <li>\n            Gene +/- Nbp up+down stream, Nbp introns - same as \"Gene w/\n            introns\", but with limited intron sequence displayed and up and\n            downstream sequence\n          </li>\n        </ul>\n        <Typography paragraph>\n          For other feature types, the options are:\n        </Typography>\n        <ul>\n          <li>\n            Feature sequence - the reference genome sequence underlying the\n            feature\n          </li>\n          <li>\n            Feature sequence +/- Nbp up+down stream - the reference genome\n            sequence underlying the feature, with the up and downstream sequence\n          </li>\n        </ul>\n        <Typography>\n          Note: you can use the \"gear icon\" <SettingsIcon /> to edit the number\n          of bp displayed up/downstream and in the intron region\n        </Typography>\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={() => handleClose()} autoFocus variant=\"contained\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","export interface Feat {\n  start: number\n  end: number\n  type: string\n  name?: string\n  id?: string\n}\nexport interface ParentFeat extends Feat {\n  uniqueId: string\n  strand?: number\n  refName: string\n  subfeatures?: Feat[]\n  parentId?: string\n}\nexport interface SeqState {\n  seq: string\n  upstream?: string\n  downstream?: string\n}\n\nexport interface ErrorState {\n  error: string\n}\n\nexport function stitch(subfeats: Feat[], sequence: string) {\n  return subfeats.map(sub => sequence.slice(sub.start, sub.end)).join('')\n}\n\n// filter items if they have the same \"ID\" or location\nfunction getItemId(feat: Feat) {\n  return `${feat.start}-${feat.end}`\n}\n\n// filters if successive elements share same start/end\nexport function dedupe(list: Feat[]) {\n  return list.filter(\n    (item, pos, ary) => !pos || getItemId(item) !== getItemId(ary[pos - 1]),\n  )\n}\n\nexport function revlist(list: Feat[], seqlen: number) {\n  return list\n    .map(sub => ({\n      ...sub,\n      start: seqlen - sub.end,\n      end: seqlen - sub.start,\n    }))\n    .sort((a, b) => a.start - b.start)\n}\n\n// calculates UTRs using impliedUTRs logic\nexport function calculateUTRs(cds: Feat[], exons: Feat[]) {\n  const firstCds = cds[0]\n  const lastCds = cds[cds.length - 1]\n  const firstCdsIdx = exons.findIndex(\n    exon => exon.end >= firstCds.start && exon.start <= firstCds.start,\n  )\n  const lastCdsIdx = exons.findIndex(\n    exon => exon.end >= lastCds.end && exon.start <= lastCds.end,\n  )\n  const lastCdsExon = exons[lastCdsIdx]\n  const firstCdsExon = exons[firstCdsIdx]\n\n  const fiveUTRs = [\n    ...exons.slice(0, firstCdsIdx),\n    { start: firstCdsExon.start, end: firstCds.start },\n  ].map(elt => ({ ...elt, type: 'five_prime_UTR' }))\n\n  const threeUTRs = [\n    { start: lastCds.end, end: lastCdsExon.end },\n    ...exons.slice(lastCdsIdx + 1),\n  ].map(elt => ({ ...elt, type: 'three_prime_UTR' }))\n\n  return [...fiveUTRs, ...threeUTRs]\n}\n\n// calculates UTRs using impliedUTRs logic, but there are no exon subfeatures\nexport function calculateUTRs2(cds: Feat[], parentFeat: Feat) {\n  const firstCds = cds[0]\n  const lastCds = cds[cds.length - 1]\n\n  const fiveUTRs = [{ start: parentFeat.start, end: firstCds.start }].map(\n    elt => ({ ...elt, type: 'five_prime_UTR' }),\n  )\n\n  const threeUTRs = [{ start: lastCds.end, end: parentFeat.end }].map(elt => ({\n    ...elt,\n    type: 'three_prime_UTR',\n  }))\n\n  return [...fiveUTRs, ...threeUTRs]\n}\n\nexport function ellipses(slug: string) {\n  return slug.length > 20 ? `${slug.slice(0, 20)}...` : slug\n}\n","import React from 'react'\nimport { Feat, stitch } from './util'\n\n// note that these are currently put into the style section instead of being\n// defined in classes to aid copy and paste to an external document e.g. word\nconst proteinColor = 'rgb(220,160,220)'\nconst intronColor = undefined\nconst cdsColor = 'rgb(220,220,180)'\nconst updownstreamColor = 'rgba(250,200,200)'\nconst utrColor = 'rgb(200,240,240)'\nconst genomeColor = 'rgb(200,280,200)'\n\nexport function GeneCDS({ cds, sequence }: { cds: Feat[]; sequence: string }) {\n  return <span style={{ background: cdsColor }}>{stitch(cds, sequence)}</span>\n}\n\nexport function GeneProtein({\n  cds,\n  sequence,\n  codonTable,\n}: {\n  cds: Feat[]\n  sequence: string\n  codonTable: { [key: string]: string }\n}) {\n  const str = stitch(cds, sequence)\n  let protein = ''\n  for (let i = 0; i < str.length; i += 3) {\n    // use & symbol for undefined codon, or partial slice\n    protein += codonTable[str.slice(i, i + 3)] || '&'\n  }\n\n  return <span style={{ background: proteinColor }}>{protein}</span>\n}\n\nexport function GenecDNA({\n  utr,\n  cds,\n  exons,\n  sequence,\n  upstream,\n  downstream,\n  includeIntrons,\n  collapseIntron,\n  intronBp,\n}: {\n  utr: Feat[]\n  cds: Feat[]\n  exons: Feat[]\n  sequence: string\n  upstream?: string\n  downstream?: string\n  includeIntrons?: boolean\n  collapseIntron?: boolean\n  intronBp: number\n}) {\n  const chunks = (\n    cds.length ? [...cds, ...utr].sort((a, b) => a.start - b.start) : exons\n  ).filter(f => f.start !== f.end)\n  return (\n    <>\n      {upstream ? (\n        <span style={{ background: updownstreamColor }}>{upstream}</span>\n      ) : null}\n\n      {chunks.map((chunk, idx) => {\n        const intron = sequence.slice(chunk.end, chunks[idx + 1]?.start)\n\n        return (\n          <React.Fragment key={JSON.stringify(chunk)}>\n            <span\n              style={{\n                background: chunk.type === 'CDS' ? cdsColor : utrColor,\n              }}\n            >\n              {sequence.slice(chunk.start, chunk.end)}\n            </span>\n            {includeIntrons && idx < chunks.length - 1 ? (\n              <span style={{ background: intronColor }}>\n                {collapseIntron && intron.length > intronBp * 2\n                  ? `${intron.slice(0, intronBp)}...${intron.slice(-intronBp)}`\n                  : intron}\n              </span>\n            ) : null}\n          </React.Fragment>\n        )\n      })}\n\n      {downstream ? (\n        <span style={{ background: updownstreamColor }}>{downstream}</span>\n      ) : null}\n    </>\n  )\n}\n\nexport function Genomic({\n  sequence,\n  upstream,\n  downstream,\n}: {\n  sequence: string\n  upstream?: string\n  downstream?: string\n}) {\n  return (\n    <>\n      {upstream ? (\n        <span style={{ background: updownstreamColor }}>{upstream}</span>\n      ) : null}\n\n      <span\n        style={{\n          background: genomeColor,\n        }}\n      >\n        {sequence}\n      </span>\n\n      {downstream ? (\n        <span style={{ background: updownstreamColor }}>{downstream}</span>\n      ) : null}\n    </>\n  )\n}\n","import React from 'react'\n\nimport { defaultCodonTable, generateCodonTable, revcom } from '../util'\nimport {\n  ParentFeat,\n  SeqState,\n  calculateUTRs,\n  calculateUTRs2,\n  dedupe,\n  revlist,\n} from './util'\nimport { GenecDNA, GeneProtein, GeneCDS, Genomic } from './SequenceBox'\n\ninterface SequencePanelProps {\n  sequence: SeqState\n  feature: ParentFeat\n  mode: string\n  intronBp?: number\n}\nconst SequencePanel = React.forwardRef<HTMLDivElement, SequencePanelProps>(\n  (props, ref) => {\n    const { feature, mode, intronBp = 10 } = props\n    let {\n      sequence: { seq, upstream = '', downstream = '' },\n    } = props\n    const { subfeatures = [] } = feature\n\n    const children = subfeatures\n      .sort((a, b) => a.start - b.start)\n      .map(sub => ({\n        ...sub,\n        start: sub.start - feature.start,\n        end: sub.end - feature.start,\n      }))\n\n    // we filter duplicate entries in cds and exon lists duplicate entries may be\n    // rare but was seen in Gencode v36 track NCList, likely a bug on GFF3 or\n    // probably worth ignoring here (produces broken protein translations if\n    // included)\n    //\n    // position 1:224,800,006..225,203,064 gene ENSG00000185842.15 first\n    // transcript ENST00000445597.6\n    //\n    // http://localhost:3000/?config=test_data%2Fconfig.json&session=share-FUl7G1isvF&password=HXh5Y\n\n    let cds = dedupe(children.filter(sub => sub.type === 'CDS'))\n    let utr = dedupe(children.filter(sub => sub.type.match(/utr/i)))\n    let exons = dedupe(children.filter(sub => sub.type === 'exon'))\n\n    if (!utr.length && cds.length && exons.length) {\n      utr = calculateUTRs(cds, exons)\n    }\n    if (!utr.length && cds.length && !exons.length) {\n      utr = calculateUTRs2(cds, {\n        start: 0,\n        end: feature.end - feature.start,\n        type: 'gene',\n      })\n    }\n\n    if (feature.strand === -1) {\n      // doing this in a single assignment is needed because downstream and\n      // upstream are swapped so this avoids a temp variable\n      ;[seq, upstream, downstream] = [\n        revcom(seq),\n        revcom(downstream),\n        revcom(upstream),\n      ]\n      cds = revlist(cds, seq.length)\n      exons = revlist(exons, seq.length)\n      utr = revlist(utr, seq.length)\n    }\n    const codonTable = generateCodonTable(defaultCodonTable)\n\n    return (\n      <div ref={ref} data-testid=\"sequence_panel\">\n        <div\n          style={{\n            fontFamily: 'monospace',\n            wordWrap: 'break-word',\n            overflow: 'auto',\n            fontSize: 12,\n            maxWidth: 600,\n            maxHeight: 500,\n          }}\n        >\n          {`>${\n            feature.name ||\n            feature.id ||\n            feature.refName + ':' + (feature.start + 1) + '-' + feature.end\n          }-${mode}\\n`}\n          <br />\n          {mode === 'genomic' ? (\n            <Genomic sequence={seq} />\n          ) : mode === 'genomic_sequence_updown' ? (\n            <Genomic\n              sequence={seq}\n              upstream={upstream}\n              downstream={downstream}\n            />\n          ) : mode === 'cds' ? (\n            <GeneCDS cds={cds} sequence={seq} />\n          ) : mode === 'cdna' ? (\n            <GenecDNA\n              exons={exons}\n              cds={cds}\n              utr={utr}\n              sequence={seq}\n              intronBp={intronBp}\n            />\n          ) : mode === 'protein' ? (\n            <GeneProtein cds={cds} codonTable={codonTable} sequence={seq} />\n          ) : mode === 'gene' ? (\n            <GenecDNA\n              exons={exons}\n              cds={cds}\n              utr={utr}\n              sequence={seq}\n              includeIntrons\n              intronBp={intronBp}\n            />\n          ) : mode === 'gene_collapsed_intron' ? (\n            <GenecDNA\n              exons={exons}\n              cds={cds}\n              sequence={seq}\n              utr={utr}\n              includeIntrons\n              collapseIntron\n              intronBp={intronBp}\n            />\n          ) : mode === 'gene_updownstream' ? (\n            <GenecDNA\n              exons={exons}\n              cds={cds}\n              sequence={seq}\n              utr={utr}\n              upstream={upstream}\n              downstream={downstream}\n              includeIntrons\n              intronBp={intronBp}\n            />\n          ) : mode === 'gene_updownstream_collapsed_intron' ? (\n            <GenecDNA\n              exons={exons}\n              cds={cds}\n              sequence={seq}\n              utr={utr}\n              upstream={upstream}\n              downstream={downstream}\n              includeIntrons\n              collapseIntron\n              intronBp={intronBp}\n            />\n          ) : (\n            <div>Unknown type</div>\n          )}\n        </div>\n      </div>\n    )\n  },\n)\n\nexport default SequencePanel\n","import React, { useRef, useState, useEffect } from 'react'\nimport {\n  Button,\n  FormControl,\n  IconButton,\n  MenuItem,\n  Select,\n  Typography,\n  Tooltip,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport copy from 'copy-to-clipboard'\n\n// locals\nimport SettingsDlg from './SequenceFeatureSettingsDialog'\nimport HelpDlg from './SequenceHelpDialog'\nimport SequencePanel from './SequencePanel'\nimport { getSession, useLocalStorage } from '../util'\nimport { BaseProps } from './types'\nimport { getConf } from '../configuration'\nimport { Feature, SimpleFeatureSerialized } from '../util/simpleFeature'\nimport { ParentFeat, SeqState, ErrorState } from './util'\nimport { LoadingEllipses } from '../ui'\n\n// icons\nimport SettingsIcon from '@mui/icons-material/Settings'\nimport HelpIcon from '@mui/icons-material/Help'\n\ninterface CoordFeat extends SimpleFeatureSerialized {\n  refName: string\n  start: number\n  end: number\n}\n\nconst useStyles = makeStyles()(theme => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n  formControl: {\n    margin: 0,\n  },\n  container: {\n    margin: theme.spacing(1),\n  },\n  container2: {\n    marginTop: theme.spacing(1),\n  },\n}))\n\nconst BPLIMIT = 500_000\n\n// display the stitched-together sequence of a gene's CDS, cDNA, or protein\n// sequence. this is a best effort and weird genomic phenomena could lead these\n// to not be 100% accurate\nexport default function SequenceFeatureDetails({ model, feature }: BaseProps) {\n  const { classes } = useStyles()\n  const parentFeature = feature as unknown as ParentFeat\n  const hasCDS = !!parentFeature.subfeatures?.find(sub => sub.type === 'CDS')\n  const isGene = feature.type === 'gene'\n  const seqPanelRef = useRef<HTMLDivElement>(null)\n  const [settingsDlgOpen, setSettingsDlgOpen] = useState(false)\n\n  const [shown, setShown] = useState(false)\n  const [helpShown, setHelpShown] = useState(false)\n  const [sequence, setSequence] = useState<SeqState | ErrorState>()\n  const [error, setError] = useState<unknown>()\n  const [copied, setCopied] = useState(false)\n  const [copiedHtml, setCopiedHtml] = useState(false)\n  const [intronBp, setIntronBp] = useLocalStorage('intronBp', 10)\n  const [upDownBp, setUpDownBp] = useLocalStorage('upDownBp', 500)\n  const [forceLoad, setForceLoad] = useState({\n    id: feature.uniqueId,\n    force: false,\n  })\n\n  useEffect(() => {\n    setForceLoad({ id: feature.uniqueId, force: false })\n  }, [feature])\n\n  useEffect(() => {\n    let finished = false\n    if (!model || !shown) {\n      return () => {}\n    }\n    const { assemblyManager, rpcManager } = getSession(model)\n    const [assemblyName] = model.view?.assemblyNames || []\n    async function fetchSeq(start: number, end: number, refName: string) {\n      const assembly = await assemblyManager.waitForAssembly(assemblyName)\n      if (!assembly) {\n        throw new Error('assembly not found')\n      }\n      const sessionId = 'getSequence'\n\n      const feats = await rpcManager.call(sessionId, 'CoreGetFeatures', {\n        adapterConfig: getConf(assembly, ['sequence', 'adapter']),\n        sessionId,\n        regions: [\n          {\n            start,\n            end,\n            refName: assembly.getCanonicalRefName(refName),\n          },\n        ],\n      })\n\n      const [feat] = feats as Feature[]\n      return (feat?.get('seq') as string) || ''\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      try {\n        setError(undefined)\n        const { start, end, refName } = feature as CoordFeat\n\n        if (!forceLoad.force && end - start > BPLIMIT) {\n          setSequence({\n            error: `Genomic sequence larger than ${BPLIMIT}bp, use \"force load\" button to display`,\n          })\n        } else {\n          const seq = await fetchSeq(start, end, refName)\n          const up = await fetchSeq(\n            Math.max(0, start - upDownBp),\n            start,\n            refName,\n          )\n          const down = await fetchSeq(end, end + upDownBp, refName)\n          if (!finished) {\n            setSequence({ seq, upstream: up, downstream: down })\n          }\n        }\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    })()\n\n    return () => {\n      finished = true\n    }\n  }, [feature, shown, model, upDownBp, forceLoad])\n\n  const loading = !sequence\n\n  const session = getSession(model)\n  const defaultSeqTypes = ['mRNA', 'transcript', 'gene']\n  const sequenceTypes =\n    getConf(session, ['featureDetails', 'sequenceTypes']) || defaultSeqTypes\n\n  // only attempt fetching gene type sequence on a bare CDS if it has no parent\n  const attemptGeneType =\n    feature.type === 'CDS'\n      ? sequenceTypes.includes('CDS') && !feature.parentId\n      : sequenceTypes.includes(feature.type)\n  const val = attemptGeneType ? (hasCDS ? 'cds' : 'cdna') : 'genomic'\n\n  // this useEffect is needed to reset the mode/setMode useState because the contents of the select box can completely change depending on whether we click on a gene feature or non-gene feature, so the current value in the select box must change accordingly\n  useEffect(() => {\n    setMode(val)\n  }, [attemptGeneType, val])\n\n  const [mode, setMode] = useState(\n    attemptGeneType ? (hasCDS ? 'cds' : 'cdna') : 'genomic',\n  )\n\n  const rest = {\n    gene: 'Gene w/ introns',\n    gene_collapsed_intron: `Gene w/ ${intronBp}bp of intron`,\n    gene_updownstream: `Gene w/ ${upDownBp}bp up+down stream`,\n    gene_updownstream_collapsed_intron: `Gene w/ ${upDownBp}bp up+down stream w/ ${intronBp}bp intron`,\n    cdna: 'cDNA',\n  }\n\n  const arg = attemptGeneType\n    ? hasCDS\n      ? {\n          cds: 'CDS',\n          protein: 'Protein',\n          ...rest,\n        }\n      : rest\n    : {\n        genomic: 'Genomic seq',\n        genomic_sequence_updown: `Genomic seq w/ ${upDownBp}bp up+down stream`,\n      }\n\n  return (isGene && !hasCDS) || !model ? null : (\n    <div className={classes.container2}>\n      <Button variant=\"contained\" onClick={() => setShown(!shown)}>\n        {shown ? 'Hide feature sequence' : 'Show feature sequence'}\n      </Button>\n      <FormControl className={classes.formControl}>\n        <IconButton onClick={() => setHelpShown(true)}>\n          <HelpIcon />\n        </IconButton>\n      </FormControl>\n      <br />\n      {shown ? (\n        <div className={classes.container2}>\n          <FormControl className={classes.formControl}>\n            <Select\n              value={mode}\n              onChange={event => setMode(event.target.value)}\n            >\n              {Object.entries(arg).map(([key, val]) => (\n                <MenuItem key={key} value={key}>\n                  {val}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <FormControl className={classes.formControl}>\n            <Button\n              className={classes.button}\n              variant=\"contained\"\n              color=\"inherit\"\n              onClick={() => {\n                const ref = seqPanelRef.current\n                if (ref) {\n                  copy(ref.textContent || '', { format: 'text/plain' })\n                  setCopied(true)\n                  setTimeout(() => setCopied(false), 1000)\n                }\n              }}\n            >\n              {copied ? 'Copied to clipboard!' : 'Copy plaintext'}\n            </Button>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <Tooltip title=\"The 'Copy HTML' function retains the colors from the sequence panel but cannot be pasted into some programs like notepad that only expect plain text\">\n              <Button\n                className={classes.button}\n                variant=\"contained\"\n                color=\"inherit\"\n                onClick={() => {\n                  const ref = seqPanelRef.current\n                  if (ref) {\n                    copy(ref.innerHTML, { format: 'text/html' })\n                    setCopiedHtml(true)\n                    setTimeout(() => setCopiedHtml(false), 1000)\n                  }\n                }}\n              >\n                {copiedHtml ? 'Copied to clipboard!' : 'Copy HTML'}\n              </Button>\n            </Tooltip>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <IconButton onClick={() => setSettingsDlgOpen(true)}>\n              <SettingsIcon />\n            </IconButton>\n          </FormControl>\n\n          <br />\n          <>\n            {error ? (\n              <Typography color=\"error\">{`${error}`}</Typography>\n            ) : loading ? (\n              <LoadingEllipses />\n            ) : sequence ? (\n              'error' in sequence ? (\n                <>\n                  <Typography color=\"error\">{sequence.error}</Typography>\n                  <Button\n                    variant=\"contained\"\n                    color=\"inherit\"\n                    onClick={() => setForceLoad({ ...forceLoad, force: true })}\n                  >\n                    Force load\n                  </Button>\n                </>\n              ) : (\n                <SequencePanel\n                  ref={seqPanelRef}\n                  feature={parentFeature}\n                  mode={mode}\n                  sequence={sequence}\n                  intronBp={intronBp}\n                />\n              )\n            ) : (\n              <Typography>No sequence found</Typography>\n            )}\n          </>\n        </div>\n      ) : null}\n\n      {settingsDlgOpen ? (\n        <SettingsDlg\n          handleClose={arg => {\n            if (arg) {\n              const { upDownBp, intronBp } = arg\n              setIntronBp(intronBp)\n              setUpDownBp(upDownBp)\n            }\n            setSettingsDlgOpen(false)\n          }}\n          upDownBp={upDownBp}\n          intronBp={intronBp}\n        />\n      ) : null}\n\n      {helpShown ? <HelpDlg handleClose={() => setHelpShown(false)} /> : null}\n    </div>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState } from 'react'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Divider,\n  Tooltip,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport ExpandMore from '@mui/icons-material/ExpandMore'\nimport { DataGrid, GridCellParams } from '@mui/x-data-grid'\nimport { observer } from 'mobx-react'\nimport isObject from 'is-object'\nimport { IAnyStateTreeNode } from 'mobx-state-tree'\n\n// locals\nimport {\n  measureText,\n  measureGridWidth,\n  getStr,\n  getEnv,\n  getSession,\n  getUriLink,\n  isUriLocation,\n  assembleLocString,\n  ParsedLocString,\n} from '../util'\nimport { ErrorMessage, SanitizedHTML } from '../ui'\nimport SequenceFeatureDetails from './SequenceFeatureDetails'\nimport { BaseCardProps, BaseProps } from './types'\nimport { SimpleFeatureSerializedNoId } from '../util/simpleFeature'\nimport { ellipses } from './util'\n\nconst MAX_FIELD_NAME_WIDTH = 170\n\n// these are always omitted as too detailed\nconst globalOmit = [\n  '__jbrowsefmt',\n  'length',\n  'position',\n  'subfeatures',\n  'uniqueId',\n  'exonFrames',\n  'parentId',\n  'thickStart',\n  'thickEnd',\n]\n\n// coreDetails are omitted in some circumstances\nconst coreDetails = [\n  'name',\n  'start',\n  'end',\n  'strand',\n  'refName',\n  'description',\n  'type',\n]\n\nexport const useStyles = makeStyles()(theme => ({\n  expansionPanelDetails: {\n    display: 'block',\n    padding: theme.spacing(1),\n  },\n  expandIcon: {\n    color: '#FFFFFF',\n  },\n  field: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  fieldDescription: {\n    '&:hover': {\n      background: 'yellow',\n    },\n  },\n  fieldName: {\n    wordBreak: 'break-all',\n    minWidth: 90,\n    borderBottom: '1px solid #0003',\n    fontSize: 12,\n    background: theme.palette.grey[200],\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(0.5),\n  },\n  fieldValue: {\n    wordBreak: 'break-word',\n    maxHeight: 300,\n    fontSize: 12,\n    padding: theme.spacing(0.5),\n    overflow: 'auto',\n  },\n  fieldSubvalue: {\n    wordBreak: 'break-word',\n    maxHeight: 300,\n    padding: theme.spacing(0.5),\n    background: theme.palette.grey[100],\n    border: `1px solid ${theme.palette.grey[300]}`,\n    boxSizing: 'border-box',\n    overflow: 'auto',\n  },\n}))\n\nexport function BaseCard({\n  children,\n  title,\n  defaultExpanded = true,\n}: BaseCardProps) {\n  const { classes } = useStyles()\n  const [expanded, setExpanded] = useState(defaultExpanded)\n  return (\n    <Accordion\n      expanded={expanded}\n      onChange={() => setExpanded(s => !s)}\n      TransitionProps={{ unmountOnExit: true }}\n    >\n      <AccordionSummary\n        expandIcon={<ExpandMore className={classes.expandIcon} />}\n      >\n        <Typography variant=\"button\"> {title}</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.expansionPanelDetails}>\n        {children}\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n\nexport const FieldName = ({\n  description,\n  name,\n  width,\n  prefix = [],\n}: {\n  description?: React.ReactNode\n  name: string\n  prefix?: string[]\n  width?: number\n}) => {\n  const { classes, cx } = useStyles()\n  const val = [...prefix, name].join('.')\n  return description ? (\n    <Tooltip title={description} placement=\"left\">\n      <div className={cx(classes.fieldDescription, classes.fieldName)}>\n        {val}\n      </div>\n    </Tooltip>\n  ) : (\n    <div className={classes.fieldName} style={{ width: width }}>\n      {val}\n    </div>\n  )\n}\n\nexport const BasicValue = ({ value }: { value: string | React.ReactNode }) => {\n  const { classes } = useStyles()\n  const isLink = `${value}`.match(/^https?:\\/\\//)\n  return (\n    <div className={classes.fieldValue}>\n      {React.isValidElement(value) ? (\n        value\n      ) : isLink ? (\n        <SanitizedHTML html={`<a href=\"${value}\">${value}</a>`} />\n      ) : (\n        <SanitizedHTML\n          html={isObject(value) ? JSON.stringify(value) : String(value)}\n        />\n      )}\n    </div>\n  )\n}\n\nexport const SimpleValue = ({\n  name,\n  value,\n  description,\n  prefix,\n  width,\n}: {\n  description?: React.ReactNode\n  name: string\n  value: any\n  prefix?: string[]\n  width?: number\n}) => {\n  const { classes } = useStyles()\n  return value !== null && value !== undefined ? (\n    <div className={classes.field}>\n      <FieldName\n        prefix={prefix}\n        description={description}\n        name={name}\n        width={width}\n      />\n      <BasicValue value={value} />\n    </div>\n  ) : null\n}\n\nconst ArrayValue = ({\n  name,\n  value,\n  description,\n  prefix = [],\n}: {\n  description?: React.ReactNode\n  name: string\n  value: any[]\n  prefix?: string[]\n}) => {\n  const { classes } = useStyles()\n  if (value.length === 1) {\n    return isObject(value[0]) ? (\n      <Attributes attributes={value[0]} prefix={[...prefix, name]} />\n    ) : (\n      <div className={classes.field}>\n        <FieldName prefix={prefix} description={description} name={name} />\n        <BasicValue value={value[0]} />\n      </div>\n    )\n  } else if (value.every(val => isObject(val))) {\n    return (\n      <>\n        {value.map((val, i) => (\n          <Attributes\n            key={JSON.stringify(val) + '-' + i}\n            attributes={val}\n            prefix={[...prefix, name + '-' + i]}\n          />\n        ))}\n      </>\n    )\n  } else {\n    return (\n      <div className={classes.field}>\n        <FieldName prefix={prefix} description={description} name={name} />\n        {value.map((val, i) => (\n          <div\n            key={JSON.stringify(val) + '-' + i}\n            className={classes.fieldSubvalue}\n          >\n            <BasicValue value={val} />\n          </div>\n        ))}\n      </div>\n    )\n  }\n}\nconst toLocale = (n: number) => n.toLocaleString('en-US')\n\nfunction Position(props: BaseProps) {\n  const { feature } = props\n  const strand = feature.strand as number\n  const strandMap: Record<string, string> = {\n    '-1': '-',\n    '0': '',\n    '1': '+',\n  }\n  const str = strandMap[strand] ? `(${strandMap[strand]})` : ''\n  // @ts-ignore\n  const loc = assembleLocString(feature as ParsedLocString)\n  return <>{`${loc} ${str}`}</>\n}\n\nfunction CoreDetails(props: BaseProps) {\n  const { feature } = props\n  const obj = feature as SimpleFeatureSerializedNoId & {\n    start: number\n    end: number\n    assemblyName?: string\n    strand: number\n    refName: string\n    __jbrowsefmt: {\n      start?: number\n      assemblyName?: string\n      end?: number\n      refName?: string\n      name?: string\n    }\n  }\n\n  // eslint-disable-next-line no-underscore-dangle\n  const formattedFeat = { ...obj, ...obj.__jbrowsefmt }\n  const { start, end } = formattedFeat\n\n  const displayedDetails: Record<string, any> = {\n    ...formattedFeat,\n    length: toLocale(end - start),\n  }\n\n  const coreRenderedDetails = {\n    description: 'Description',\n    name: 'Name',\n    length: 'Length',\n    type: 'Type',\n  }\n  return (\n    <>\n      <SimpleValue\n        name=\"Position\"\n        value={<Position {...props} feature={formattedFeat} />}\n      />\n      {Object.entries(coreRenderedDetails)\n        .map(([key, name]) => [name, displayedDetails[key]])\n        .filter(([, value]) => value != null)\n        .map(([name, value]) => (\n          <SimpleValue key={name} name={name} value={value} />\n        ))}\n    </>\n  )\n}\n\nexport const BaseCoreDetails = (props: BaseProps) => {\n  return (\n    <BaseCard {...props} title=\"Primary data\">\n      <CoreDetails {...props} />\n    </BaseCard>\n  )\n}\n\ninterface AttributeProps {\n  attributes: Record<string, any>\n  omit?: string[]\n  omitSingleLevel?: string[]\n  formatter?: (val: unknown, key: string) => React.ReactNode\n  descriptions?: Record<string, React.ReactNode>\n  prefix?: string[]\n  hideUris?: boolean\n}\n\nexport function UriLink({\n  value,\n}: {\n  value: { uri: string; baseUri?: string }\n}) {\n  const href = getUriLink(value)\n  return <SanitizedHTML html={`<a href=\"${href}\">${href}</a>`} />\n}\n\nconst DataGridDetails = ({\n  value,\n  prefix,\n  name,\n}: {\n  name: string\n  prefix?: string[]\n  value: Record<string, any>\n}) => {\n  const keys = Object.keys(value[0]).sort()\n  const unionKeys = new Set(keys)\n  value.forEach((val: any) => Object.keys(val).forEach(k => unionKeys.add(k)))\n  if (unionKeys.size < keys.length + 5) {\n    // avoids key 'id' from being used in row data\n    const rows = Object.entries(value).map(([k, val]) => {\n      const { id, ...rest } = val\n      return {\n        id: k, // used by material UI\n        identifier: id, // renamed from id to identifier\n        ...rest,\n      }\n    })\n\n    // avoids key 'id' from being used in column names, and tries\n    // to make it at the start of the colNames array\n    let colNames\n    if (unionKeys.has('id')) {\n      unionKeys.delete('id')\n      colNames = ['identifier', ...unionKeys]\n    } else {\n      colNames = [...unionKeys]\n    }\n\n    const columns = colNames.map(val => ({\n      field: val,\n      renderCell: (params: GridCellParams) => {\n        const { value } = params\n        return isUriLocation(value) ? <UriLink value={value} /> : getStr(value)\n      },\n      width: measureGridWidth(rows.map(r => r[val])),\n    }))\n\n    const rowHeight = 25\n    const hideFoot = rows.length < 100\n    const headHeight = 80\n    const height =\n      Math.min(rows.length, 100) * rowHeight + headHeight + (hideFoot ? 0 : 50)\n    // disableSelection on click helps avoid\n    // https://github.com/mui-org/material-ui-x/issues/1197\n    return (\n      <>\n        <FieldName prefix={prefix} name={name} />\n        <div\n          style={{\n            height,\n            width: '100%',\n          }}\n        >\n          <DataGrid\n            disableSelectionOnClick\n            rowHeight={rowHeight}\n            rows={rows}\n            hideFooterSelectedRowCount\n            columns={columns}\n            hideFooter={hideFoot}\n          />\n        </div>\n      </>\n    )\n  }\n  return null\n}\n\n// pick using a path from an object, similar to _.get from lodash with special logic\n// for Descriptions from e.g. VCF headers\n// @param arr  example ['a','b'], obj = {a:{b:'hello}}\n// @returns hello (with special addition to grab description also)\nfunction accessNested(arr: string[], obj: Record<string, any> = {}) {\n  arr.forEach(elt => {\n    if (obj) {\n      obj = obj[elt]\n    }\n  })\n  return typeof obj === 'string'\n    ? obj\n    : typeof obj?.Description === 'string'\n    ? obj.Description\n    : undefined\n}\n\nfunction generateMaxWidth(array: unknown[][], prefix: any) {\n  const arr = [] as number[]\n  array.forEach(key => {\n    const val = [...prefix, key[0]].join('.')\n    arr.push(measureText(val, 12))\n  })\n\n  return Math.ceil(Math.max(...arr)) + 10\n}\n\nfunction UriAttribute({\n  value,\n  prefix,\n  name,\n}: {\n  value: { uri: string; baseUri?: string }\n  name: string\n  prefix: string[]\n}) {\n  const { classes } = useStyles()\n  const { uri, baseUri = '' } = value\n  let href\n  try {\n    href = new URL(uri, baseUri).href\n  } catch (e) {\n    href = uri\n  }\n  return (\n    <div className={classes.field}>\n      <FieldName prefix={prefix} name={name} />\n      <BasicValue value={href} />\n    </div>\n  )\n}\n\nexport function Attributes(props: AttributeProps) {\n  const {\n    attributes,\n    omit = [],\n    omitSingleLevel = [],\n    descriptions,\n    formatter = val => val,\n    hideUris,\n    prefix = [],\n  } = props\n\n  const omits = [...omit, ...globalOmit, ...omitSingleLevel]\n  const { __jbrowsefmt, ...rest } = attributes\n  const formattedAttributes = { ...rest, ...__jbrowsefmt }\n\n  const maxLabelWidth = generateMaxWidth(\n    Object.entries(formattedAttributes).filter(\n      ([k, v]) => v !== undefined && !omits.includes(k),\n    ),\n    prefix,\n  )\n\n  return (\n    <>\n      {Object.entries(formattedAttributes)\n        .filter(([k, v]) => v !== undefined && !omits.includes(k))\n        .map(([key, value]) => {\n          const description = accessNested([...prefix, key], descriptions)\n          if (Array.isArray(value)) {\n            // check if it looks like an array of objects, which could be used\n            // in data grid\n            return value.length > 1 && value.every(val => isObject(val)) ? (\n              <DataGridDetails\n                key={key}\n                name={key}\n                prefix={prefix}\n                value={value}\n              />\n            ) : (\n              <ArrayValue\n                key={key}\n                name={key}\n                value={value}\n                description={description}\n                prefix={prefix}\n              />\n            )\n          } else if (isObject(value)) {\n            const { omitSingleLevel, ...rest } = props\n            return isUriLocation(value) ? (\n              hideUris ? null : (\n                <UriAttribute\n                  key={key}\n                  name={key}\n                  prefix={prefix}\n                  value={value}\n                />\n              )\n            ) : (\n              <Attributes\n                {...rest}\n                key={key}\n                attributes={value}\n                descriptions={descriptions}\n                prefix={[...prefix, key]}\n              />\n            )\n          } else {\n            return (\n              <SimpleValue\n                key={key}\n                name={key}\n                value={formatter(value, key)}\n                description={description}\n                prefix={prefix}\n                width={Math.min(maxLabelWidth, MAX_FIELD_NAME_WIDTH)}\n              />\n            )\n          }\n        })}\n    </>\n  )\n}\n\nexport const BaseAttributes = (props: BaseProps) => {\n  const { feature } = props\n  return (\n    <BaseCard {...props} title=\"Attributes\">\n      <Attributes {...props} attributes={feature} />\n    </BaseCard>\n  )\n}\n\nexport interface BaseInputProps extends BaseCardProps {\n  omit?: string[]\n  model: any\n  descriptions?: Record<string, React.ReactNode>\n  formatter?: (val: unknown, key: string) => React.ReactNode\n}\n\nfunction isEmpty(obj: Record<string, unknown>) {\n  return Object.keys(obj).length === 0\n}\n\nfunction generateTitle(name: unknown, id: unknown, type: unknown) {\n  return [ellipses(`${name}` || `${id}`), `${type}`]\n    .filter(f => !!f)\n    .join(' - ')\n}\n\ninterface PanelDescriptor {\n  name: string\n  Component: React.FC<any>\n}\n\nexport const FeatureDetails = (props: {\n  model: IAnyStateTreeNode\n  feature: SimpleFeatureSerializedNoId\n  depth?: number\n  omit?: string[]\n  formatter?: (val: unknown, key: string) => React.ReactNode\n}) => {\n  const { omit = [], model, feature, depth = 0 } = props\n  const { name = '', id = '', type = '', subfeatures } = feature\n  const pm = getEnv(model).pluginManager\n  const session = getSession(model)\n\n  const ExtraPanel = pm.evaluateExtensionPoint('Core-extraFeaturePanel', null, {\n    session,\n    feature,\n    model,\n  }) as PanelDescriptor | undefined\n  return (\n    <BaseCard title={generateTitle(name, id, type)}>\n      <Typography>Core details</Typography>\n      <CoreDetails {...props} />\n      {feature.mate ? (\n        <>\n          <Divider />\n          <Typography>Mate details</Typography>\n          {/* @ts-ignore */}\n          <CoreDetails {...props} feature={feature.mate} />\n        </>\n      ) : null}\n      <Divider />\n\n      <Typography>Attributes</Typography>\n\n      <Attributes\n        attributes={feature}\n        {...props}\n        omit={omit}\n        omitSingleLevel={coreDetails}\n      />\n\n      <ErrorBoundary\n        FallbackComponent={({ error }) => <ErrorMessage error={error} />}\n      >\n        <SequenceFeatureDetails {...props} />\n      </ErrorBoundary>\n\n      {ExtraPanel ? (\n        <>\n          <Divider />\n          <BaseCard title={ExtraPanel.name}>\n            <ExtraPanel.Component {...props} />\n          </BaseCard>\n        </>\n      ) : null}\n\n      {subfeatures?.length ? (\n        <BaseCard title=\"Subfeatures\" defaultExpanded={depth < 1}>\n          {subfeatures.map(sub => (\n            <FeatureDetails\n              key={JSON.stringify(sub)}\n              feature={sub}\n              model={model}\n              depth={depth + 1}\n            />\n          ))}\n        </BaseCard>\n      ) : null}\n    </BaseCard>\n  )\n}\n\nconst BaseFeatureDetails = observer(({ model }: BaseInputProps) => {\n  const { featureData } = model\n\n  if (!featureData) {\n    return null\n  }\n\n  // replacing undefined with null helps with allowing fields to be hidden,\n  // setting null is not allowed by jexl so we set it to undefined to hide. see\n  // config guide. this replacement happens both here and when snapshotting the\n  // featureData\n  const feature = JSON.parse(\n    JSON.stringify(featureData, (_, v) =>\n      typeof v === 'undefined' ? null : v,\n    ),\n  )\n  return isEmpty(feature) ? null : (\n    <FeatureDetails model={model} feature={feature} />\n  )\n})\n\nexport default BaseFeatureDetails\n"],"names":["useStyles","makeStyles","theme","formElt","margin","spacing","width","dialogContent","SequenceFeatureSettingsDialog","handleClose","intronBpArg","intronBp","upDownBpArg","upDownBp","classes","useState","setIntronBp","setUpDownBp","intronBpValid","Number","isNaN","upDownBpValid","Dialog","maxWidth","open","onClose","title","DialogContent","className","TextField","label","value","helperText","error","onChange","event","target","DialogActions","Button","onClick","disabled","color","variant","autoFocus","HelpDialog","Typography","paragraph","Settings","stitch","subfeats","sequence","map","sub","slice","start","end","join","getItemId","feat","dedupe","list","filter","item","pos","ary","revlist","seqlen","sort","a","b","cdsColor","updownstreamColor","GeneCDS","cds","style","background","GeneProtein","codonTable","str","protein","i","length","GenecDNA","utr","exons","upstream","downstream","includeIntrons","collapseIntron","chunks","f","chunk","idx","intron","type","undefined","JSON","stringify","Genomic","React","props","ref","feature","mode","seq","subfeatures","children","match","firstCds","lastCds","firstCdsIdx","findIndex","exon","lastCdsIdx","lastCdsExon","firstCdsExon","fiveUTRs","elt","threeUTRs","calculateUTRs","parentFeat","calculateUTRs2","strand","revcom","generateCodonTable","defaultCodonTable","fontFamily","wordWrap","overflow","fontSize","maxHeight","name","id","refName","button","formControl","container","container2","marginTop","BPLIMIT","SequenceFeatureDetails","model","parentFeature","hasCDS","find","isGene","seqPanelRef","useRef","settingsDlgOpen","setSettingsDlgOpen","shown","setShown","helpShown","setHelpShown","setSequence","setError","copied","setCopied","copiedHtml","setCopiedHtml","useLocalStorage","uniqueId","force","forceLoad","setForceLoad","useEffect","finished","getSession","assemblyManager","rpcManager","view","assemblyNames","assemblyName","fetchSeq","waitForAssembly","assembly","Error","sessionId","call","adapterConfig","getConf","regions","getCanonicalRefName","feats","get","Math","max","up","down","console","loading","session","sequenceTypes","attemptGeneType","includes","parentId","val","setMode","rest","gene","gene_collapsed_intron","gene_updownstream","gene_updownstream_collapsed_intron","cdna","arg","genomic","genomic_sequence_updown","FormControl","IconButton","Help","Select","Object","entries","key","MenuItem","current","copy","textContent","format","setTimeout","Tooltip","innerHTML","LoadingEllipses","globalOmit","coreDetails","expansionPanelDetails","display","padding","expandIcon","field","flexWrap","fieldDescription","fieldName","wordBreak","minWidth","borderBottom","palette","grey","marginRight","fieldValue","fieldSubvalue","border","boxSizing","BaseCard","defaultExpanded","expanded","setExpanded","Accordion","s","TransitionProps","unmountOnExit","AccordionSummary","ExpandMore","AccordionDetails","FieldName","description","prefix","cx","placement","BasicValue","isLink","SanitizedHTML","html","isObject","String","SimpleValue","ArrayValue","Attributes","attributes","every","Position","strandMap","loc","assembleLocString","CoreDetails","n","obj","formattedFeat","__jbrowsefmt","displayedDetails","toLocaleString","BaseCoreDetails","UriLink","href","getUriLink","DataGridDetails","keys","unionKeys","Set","forEach","k","add","size","colNames","rows","identifier","has","delete","columns","renderCell","params","isUriLocation","getStr","measureGridWidth","r","hideFoot","height","min","DataGrid","disableSelectionOnClick","rowHeight","hideFooterSelectedRowCount","hideFooter","UriAttribute","uri","baseUri","URL","e","omit","omitSingleLevel","descriptions","formatter","hideUris","omits","formattedAttributes","maxLabelWidth","array","arr","push","measureText","ceil","generateMaxWidth","Description","accessNested","Array","isArray","BaseAttributes","generateTitle","slug","FeatureDetails","depth","pm","getEnv","pluginManager","ExtraPanel","evaluateExtensionPoint","mate","Divider","ErrorBoundary","FallbackComponent","ErrorMessage","Component","observer","featureData","parse","_","v"],"sourceRoot":""}