{"version":3,"file":"static/js/3437.d0bcefc2.chunk.js","mappings":"mkBAsBMA,GAAYC,EAAAA,EAAAA,KAAAA,EAAa,SAAAC,GAAK,MAAK,CACvCC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,QAASJ,EAAMK,QAAQ,IAGzBC,KAAM,CACJC,UAAWP,EAAMK,QAAQ,IAE5B,IAmGD,GAjG2BG,EAAAA,EAAAA,WAAS,YAA0C,IAAvCC,EAAK,EAALA,MAC7BC,EAAYZ,IAAZY,QACR,GAA4BC,EAAAA,EAAAA,UAAS,IAAG,eAAjCC,EAAM,KAAEC,EAAS,KACxB,GAA4BF,EAAAA,EAAAA,UAAS,IAAG,eAAjCG,EAAM,KAAEC,EAAS,KACxB,GAAoCJ,EAAAA,EAAAA,UAAS,CAAC,OAAQ,OAAM,eAArDK,EAAU,KAAEC,EAAa,KAChC,GAA8BN,EAAAA,EAAAA,UAAS,CAAC,MAAO,SAAQ,eAAhDO,EAAO,KAAEC,EAAU,KACpBC,EAAW,CACf,CACEC,MAAO,sBACPC,OAAQN,GAEV,CACEK,MAAO,2BACPC,OAAQJ,IAOZ,OAJAK,EAAAA,EAAAA,YAAU,WACRd,EAAMe,oBAAoB,CAAER,WAAAA,EAAYE,QAAAA,GAC1C,GAAG,CAACT,EAAOO,EAAYE,KAGrB,UAACO,EAAA,EAAK,CAACC,UAAWhB,EAAQT,MAAM,WAC9B,SAAC0B,EAAA,EAAU,UAAC,2BACXP,EAASQ,KAAI,SAACC,EAASC,GAAK,OAC3B,SAACC,EAAA,EAAI,CAACC,QAAM,EAAqBN,UAAWhB,EAAQJ,KAAK,UACvD,UAAC2B,EAAA,EAAW,YACV,SAACN,EAAA,EAAU,UAAEE,EAAQR,SACrB,UAACa,EAAA,EAAI,CAACC,gBAAc,YACjBN,EAAQP,OAAOM,KAAI,SAACQ,EAAaC,GAAW,OAC3C,SAACC,EAAA,GAAQ,CAAWC,gBAAc,YAChC,SAACC,EAAA,EAAS,CACRC,MAAOL,EACPM,WAAY,CACVC,cACE,SAACC,EAAA,EAAc,CAACC,SAAS,MAAK,UAC5B,SAACC,EAAA,EAAU,CACTC,QAAS,WACP,IAAMC,EAAUnB,EAAQP,OAAO2B,QAAO,SAACC,EAAGC,GACxC,OAAOA,IAAMd,CACf,IACU,IAAVP,EACIb,EAAc+B,GACd7B,EAAW6B,EACjB,EAAE,UAEF,SAACI,EAAA,EAAU,YAhBRf,EAsBJ,KAEb,SAACC,EAAA,GAAQ,CAACC,gBAAc,YACtB,SAACC,EAAA,EAAS,CACRC,MAAiB,IAAVX,EAAclB,EAASE,EAC9BuC,YAAY,UACZC,SAAU,SAAAC,GACE,IAAVzB,EACIjB,EAAU0C,EAAMC,OAAOf,OACvB1B,EAAUwC,EAAMC,OAAOf,MAC7B,EACAC,WAAY,CACVC,cACE,SAACC,EAAA,EAAc,CAACC,SAAS,MAAK,UAC5B,SAACC,EAAA,EAAU,CACTC,QAAS,WACP,GAAc,IAAVjB,EAAa,CACf,IAAMkB,EAAoBhC,EAC1BgC,EAAQS,KAAK7C,GACbK,EAAc+B,GACdnC,EAAU,GACZ,KAAO,CACL,IAAM6C,EAAoBxC,EAC1BwC,EAAQD,KAAK3C,GACbK,EAAWuC,GACX3C,EAAU,GACZ,CACF,EACA4C,SAAoB,IAAV7B,EAAyB,KAAXlB,EAA2B,KAAXE,EACxC,oCAAmC,UAEnC,SAAC8C,EAAA,EAAO,oBA1DR/B,EAAQR,MAmEnB,MAIf,ICxHMvB,GAAYC,EAAAA,EAAAA,KAAAA,EAAa,SAAAC,GAAK,MAAK,CACvCK,QAAS,CACPwD,aAAc7D,EAAMK,QAAQ,IAE/B,IAgCD,GA9B0BG,EAAAA,EAAAA,WAAS,YAA0C,IAAvCC,EAAK,EAALA,MAC5BC,EAAYZ,IAAZY,QACAoD,GAAkBC,EAAAA,EAAAA,QAAOtD,GAAzBqD,cACAE,EAAcvD,EAAduD,UACFC,EAAaH,EAAcI,mBAEjC,OACE,SAAC1B,EAAA,EAAS,CACRd,UAAWhB,EAAQL,QACnBoC,MAAOuB,EACPG,QAAQ,WACR9C,MAAM,aACN+C,WAAW,oBACXC,QAAM,EACNC,WAAS,EACThB,SAAU,SAAAC,GAAK,OAAI9C,EAAM8D,aAAahB,EAAMC,OAAOf,MAAM,EACzD+B,YAAa,CAEXC,mBAAoB,CAAE,cAAe,oBACrC,SAEDR,EAAWrC,KAAI,gBAAG8C,EAAI,EAAJA,KAAMC,EAAW,EAAXA,YAAW,OAClC,SAACC,EAAA,EAAQ,CAAYnC,MAAOiC,EAAK,SAC9BC,GADYD,EAEJ,KAInB,I,WCjCM5E,GAAYC,EAAAA,EAAAA,KAAAA,EAAa,SAAAC,GAAK,MAAK,CACvCK,QAAS,CACPwD,aAAc7D,EAAMK,QAAQ,IAE/B,IAKD,SAASwE,EAAmBC,GAC1B,IAAMlD,EAAM,CAAC,EAQb,OAPAkD,EAAaC,SAAQ,SAAAC,GAAY,IAAD,EACxBC,GAA6B,QAAvB,EAAAD,EAAQE,uBAAe,aAAvB,EAAyBC,WAAY,UAC5CvD,EAAIqD,KACPrD,EAAIqD,GAAO,IAEbrD,EAAIqD,GAAKxB,KAAKuB,EAChB,IACOpD,CACT,CAEA,IAyCA,GAzC6BpB,EAAAA,EAAAA,WAAS,YAA0C,IAAvCC,EAAK,EAALA,MAC/BC,EAAYZ,IAAZY,QACA0E,EAAiB3E,EAAjB2E,aACAtB,GAAkBC,EAAAA,EAAAA,QAAOtD,GAAzBqD,cACR,OACE,SAACtB,EAAA,EAAS,CACRd,UAAWhB,EAAQL,QACnBoC,MAA8B,aAAX,OAAZ2C,QAAY,IAAZA,OAAY,EAAZA,EAAcC,MAAiC,OAAZD,QAAY,IAAZA,OAAY,EAAZA,EAAcC,KAAO,GAC/DhE,MAAM,eACN8C,QAAQ,WACRC,WAAW,yBACXC,QAAM,EACNC,WAAS,EACThB,SAAU,SAAAC,GAAK,OAAI9C,EAAM6E,eAAe/B,EAAMC,OAAOf,MAAM,EAC3D+B,YAAa,CAEXC,mBAAoB,CAAE,cAAe,sBACrC,SAEDc,OAAOC,QACNX,EACEf,EACG2B,qBACAxC,QAAO,SAAAyC,GAAC,cAAsB,QAAlB,EAACA,EAAER,uBAAe,OAAjB,EAAmBS,cAAa,MAElD/D,KAAI,YAAiB,IAAD,eAAdqD,EAAG,KAAE7C,EAAG,KAGd,MAAO,EACL,SAACwD,EAAA,EAAa,UAAEX,IAChB7C,EAAIR,KAAI,SAAAiE,GAAG,OACT,SAACjB,EAAA,EAAQ,CAAgBnC,MAAOoD,EAAInB,KAAK,SACtCmB,EAAIlB,aADQkB,EAAInB,KAER,IAGjB,KAGN,IC7CM5E,GAAYC,EAAAA,EAAAA,KAAAA,EAAa,SAAAC,GAAK,MAAK,CACvCK,QAAS,CACPwD,aAAc7D,EAAMK,QAAQ,IAE/B,IAED,SAASyF,EAAc,GAMnB,IALFV,EAAY,EAAZA,aACApB,EAAS,EAATA,UAKQtD,EAAYZ,IAAZY,QACA2E,EAAqBD,EAArBC,KAAMU,EAAeX,EAAfW,WACd,MAAgB,uBAATV,GACL,UAACW,EAAA,EAAU,CAACtE,UAAWhB,EAAQL,QAAQ,UAAC,aAC7B,0BAAO2D,IAAiB,oBAAgB,0BAAOqB,IAAY,qBACzD,0BAAiB,OAAVU,QAAU,IAAVA,OAAU,EAAVA,EAAYV,OAAY,4EAI5C,UAACW,EAAA,EAAU,CAACtE,UAAWhB,EAAQL,QAAQ,UAAC,kBACxB,0BAAOgF,IAAY,2BAAyB,KAC1D,0BAAOrB,IAAiB,0EAI9B,CAEA,SAASiC,EAAqB,GAAsC,IAApCxF,EAAK,EAALA,MACtBC,EAAYZ,IAAZY,QACR,OACE,iCACE,UAACsF,EAAA,EAAU,CAACtE,UAAWhB,EAAQL,QAAQ,UAAC,iHAEA,KACtC,SAAC6F,EAAA,EAAI,CACHC,KAAK,sDACL3C,OAAO,SACP4C,IAAI,sBAAqB,SAC1B,2BAEO,IAAI,sDACwC,KACpD,SAACF,EAAA,EAAI,CACHC,KAAK,wDACL3C,OAAO,SACP4C,IAAI,sBAAqB,SAC1B,kBAEO,IAAI,oDAGd,SAAC,EAAoB,CAAC3F,MAAOA,MAGnC,CAEA,OAAeD,EAAAA,EAAAA,WAAS,SAAsB,GAI1C,IAHFC,EAAK,EAALA,MAIQC,EAAYZ,IAAZY,QACR,GAA0BC,EAAAA,EAAAA,WAAS,GAAK,eAAjC0F,EAAK,KAAEC,EAAQ,KAChBC,GAAUC,EAAAA,EAAAA,YAAW/F,GACnBgG,EACNhG,EADMgG,UAAWrB,EACjB3E,EADiB2E,aAAcpB,EAC/BvD,EAD+BuD,UAAW0C,EAC1CjG,EAD0CiG,eAAgBC,EAC1DlG,EAD0DkG,YAS5D,IANApF,EAAAA,EAAAA,YAAU,WACY,KAAhBoF,GAAsBvB,GACxB3E,EAAM6E,eAAeF,EAAaC,KAEtC,GAAG,CAACsB,EAAavB,EAA0B,OAAZA,QAAY,IAAZA,OAAY,EAAZA,EAAcC,KAAM5E,IAE/CA,EAAMmG,YACR,OACE,UAACZ,EAAA,EAAU,CAACtE,UAAWhB,EAAQL,QAAQ,UAAC,kJAG9B,KACR,SAAC6F,EAAA,EAAI,CACHC,KAAK,sDACL3C,OAAO,SACP4C,IAAI,sBAAqB,SAC1B,2BAEO,IAAI,gBACE,KACd,SAACF,EAAA,EAAI,CACHC,KAAK,wDACL3C,OAAO,SACP4C,IAAI,sBAAqB,SAC1B,kBAEO,IAAI,mDAKlB,IAAgB,OAAZhB,QAAY,IAAZA,OAAY,EAAZA,EAAcC,QAASwB,EAAAA,QACzB,OAAO,SAACZ,EAAoB,CAACxF,MAAOA,IAGtC,GAAiB,OAAZ2E,QAAY,IAAZA,IAAAA,EAAcC,KACjB,OAAO,SAACW,EAAA,EAAU,UAAC,wCAGrB,IAAMc,GAAuBC,EAAAA,EAAAA,2BAAsC,OAAZ3B,QAAY,IAAZA,OAAY,EAAZA,EAAcC,MACrE,OACE,2BACGD,GACC,SAACU,EAAa,CAACV,aAAcA,EAAcpB,UAAWA,IACpD,KACH0C,GACC,SAACV,EAAA,EAAU,CAACgB,MAAO,CAAEC,MAAO,UAAW,SAAEP,IACvC,MACJ,SAAClE,EAAA,EAAS,CACRd,UAAWhB,EAAQL,QACnBgB,MAAM,YACN+C,WAAW,wBACXE,WAAS,EACT7B,MAAOgE,EACPnD,SAAU,SAAAC,GAAK,OAAI9C,EAAMyG,aAAa3D,EAAMC,OAAOf,MAAM,EACzD0E,WAAY,CAAE,cAAe,qBAE/B,SAAC,EAAoB,CAAC1G,MAAOA,KAC7B,SAAC,EAAiB,CAACA,MAAOA,KAC1B,SAAC,EAAA2G,iBAAgB,CACfb,QAASA,EACTnC,WAAW,kCACXiD,SAAU5G,EAAM6G,SAChBhE,SAAU,SAAAiE,GAAG,OAAI9G,EAAM+G,YAAYD,EAAI,EACvCE,eAAgB,CACdnD,WAAW,EACXE,YAAa,CAEXC,mBAAoB,CAAE,cAAe,0BAI1CiD,EAAAA,YAAcZ,IACb,SAACa,EAAA,EAAW,WACV,SAACC,EAAA,EAAgB,CACfvG,MAAO,kCACPwG,SACE,SAACC,EAAA,EAAQ,CACPC,QAAS1B,EACT/C,SAAU,SAAAoC,GACRY,EAASZ,EAAElC,OAAOuE,SAClBtH,EAAMuH,kBAAkBtC,EAAElC,OAAOuE,QACnC,QAMTL,EAAAA,YAAcrB,GAASS,GACtB,SAAC,EAAkB,CAACrG,MAAOA,IACzB,OAGV,ICjLMX,GAAYC,EAAAA,EAAAA,KAAAA,EAAa,SAAAC,GAAK,MAAK,CACvCC,MAAO,CACLG,QAASJ,EAAMK,QAAQ,IAEzB4H,OAAQ,CACNC,OAAQlI,EAAMK,QAAQ,IAEzB,IA6BD,QAAeG,EAAAA,EAAAA,WA3Bf,SAA2B,GAAsC,IAApCC,EAAK,EAALA,MACnBC,EAAYZ,IAAZY,QACFyH,GAAYC,EAAAA,EAAAA,SAA2B3H,GAE7C,OACE,UAACgB,EAAA,EAAK,CAACC,UAAWhB,EAAQT,MAAM,WAC9B,SAAC,EAAAoI,aAAY,CACX3D,KAAK,YACL4D,YAAY,GACZC,SAAU9H,EAAM+H,UAChBC,YAAahI,EAAMiI,aACnBC,QAASlI,EAAMyG,aACfiB,UAAWA,KAEb,gBAAKzG,UAAWhB,EAAQuH,UACxB,SAAC,EAAAI,aAAY,CACX3D,KAAK,aACL4D,YAAY,sHACZC,SAAU9H,EAAMmI,eAChBH,YAAahI,EAAMoI,kBACnBF,QAASlI,EAAMyG,aACfiB,UAAWA,MAInB,ICnBMrI,IAAYC,EAAAA,EAAAA,KAAAA,EAAa,SAAAC,GAAK,MAAK,CACvC8I,KAAM,CACJvI,UAAWP,EAAMK,QAAQ,IAE3B0I,QAAS,CACPC,gBAAiBhJ,EAAMiJ,QAAQC,WAAWC,SAE5CC,OAAQ,CACNC,YAAarJ,EAAMK,QAAQ,IAE7BiJ,iBAAkB,CAChB/I,UAAWP,EAAMK,QAAQ,IACzBwD,aAAc7D,EAAMK,QAAQ,IAE9BkJ,eAAgB,CACdnJ,QAAQ,GAAD,OAAKJ,EAAMK,QAAQ,GAAE,kBAAUL,EAAMK,QAAQ,GAAE,WAEzD,IAEKmJ,GAAQ,CAAC,mBAAoB,sBA2JnC,QAAehJ,EAAAA,EAAAA,WAzJf,SAA0B,GAAsC,IAApCC,EAAK,EAALA,MAC1B,GAAoCE,EAAAA,EAAAA,UAAS,GAAE,eAAxC8I,EAAU,KAAEC,EAAa,KACxBhJ,EAAYZ,KAAZY,QAGAiJ,GAAgBvB,EAAAA,EAAAA,SAAa3H,GAA7BkJ,YACFpD,GAAUC,EAAAA,EAAAA,YAAW/F,GAEzB6G,EAOE7G,EAPF6G,SACAlC,EAME3E,EANF2E,aACAoD,EAKE/H,EALF+H,UACA/B,EAIEhG,EAJFgG,UACAzC,EAGEvD,EAHFuD,UACA4F,EAEEnJ,EAFFmJ,eACAC,EACEpJ,EADFoJ,iBAEF,GAAkDlJ,EAAAA,EAAAA,YAAkB,eAA7DmJ,EAAiB,KAAEC,EAAoB,KAE9C,SAASC,EAAeC,GACtB,OAAQA,GACN,KAAK,EACH,OAAO,SAAC,GAAiB,CAACxJ,MAAOA,IACnC,KAAK,EACH,OAAO,SAACyJ,EAAY,CAACzJ,MAAOA,IAC9B,QACE,OAAO,SAACuF,EAAA,EAAU,UAAC,iBAEzB,CAAC,SAEcmE,IAAU,4CA+DxB,OA/DwB,0BAAzB,oGACMV,IAAeD,GAAMY,OAAS,EAAC,gBACJ,OAA7BV,EAAcD,EAAa,GAAE,0BAIzBY,EAAU,CAAC,GAAD,OACX5D,EAAU6D,cAAcC,QAAQ,KAAM,KAAI,YAAIC,KAAKC,OAAK,UACxDlE,EAAQmE,UAAY,GAAK,kBAC5BC,KAAK,IAEDC,EAAmBrE,EAAQsE,gBAAgBC,IAAIxD,GAEjDlC,GAAsC,YAAtBA,EAAaC,MAC/BkB,EAAQwE,aAAa,CACnBV,QAAAA,EACAhF,KAAMrB,EACNU,KAAM+B,EACNuE,cAAe,CAAC1D,GAChBtC,SAAQ,kBACHI,GAAY,IACf6F,iBAAiBC,EAAAA,EAAAA,SAAQN,EAAkB,CAAC,WAAY,gBAGxDnK,EAAM0K,MACR1K,EAAM0K,KAAKC,UAAUf,GAEnB3C,EAAAA,YACAkC,IACA7C,EAAAA,EAAAA,2BAA0B3B,EAAaC,QAEjCgG,EAAOxB,GAAoB,CAC/B7I,WAAY,CAAC,OAAQ,MACrBE,QAAS,CAAC,MAAO,SAEboK,EAAY7E,EAAY,SACxB8E,EAAW,CACfC,gBAAe,kBACVH,GAAI,IACPI,WAAY,CAACnE,GACboE,OAAQ,CAACrB,GACTsB,UAAW,WACXjH,KAAM4G,EACNM,WAAW,IAAIpB,MAAOqB,gBAExBnH,KAAM4G,EACNQ,eAAgB,kBAAMnC,EAAYoC,UAAU,GAE9CpC,EAAYqC,SAAST,KAGvBhF,EAAQ0F,OACN,qFACA,QAGJxL,EAAMyL,YACN3F,EAAQ4F,WAAW1L,IAEnBsJ,EACE,oFAEH,4CACF,sBAED,SAASqC,IACPrC,OAAqBsC,GACrB3C,EAAcD,EAAa,EAC7B,CAEA,SAAS6C,IACP,OAAQ7C,GACN,KAAK,EACH,OAAQjB,EACV,KAAK,EACH,QAAS/B,GAAazC,GAAyB,OAAZoB,QAAY,IAAZA,GAAAA,EAAcC,MAAQiC,GAC3D,QACE,OAAO,EAEb,CAEA,OACE,gBAAK5F,UAAWhB,EAAQoI,KAAK,UAC3B,SAACyD,EAAA,EAAO,CACN7K,UAAWhB,EAAQqI,QACnBU,WAAYA,EACZ+C,YAAY,WAAU,SAErBhD,GAAM5H,KAAI,SAACP,EAAOgB,GAAG,OACpB,UAACoK,EAAA,EAAI,YACH,SAACC,EAAA,EAAS,UAAErL,KACZ,UAACsL,EAAA,EAAW,WACT3C,EAAe3H,IAChB,iBAAKX,UAAWhB,EAAQ4I,iBAAiB,WACvC,SAACsD,EAAA,EAAM,CACLjJ,SAAyB,IAAf8F,EACV1G,QAASqJ,EACT1K,UAAWhB,EAAQ0I,OAAO,SAC3B,UAGD,SAACwD,EAAA,EAAM,CACLjJ,SAAU2I,IACVnI,QAAQ,YACR8C,MAAM,UACNlE,QAASoH,EACTzI,UAAWhB,EAAQ0I,OACnB,cAAY,qBAAoB,SAE/BK,IAAeD,GAAMY,OAAS,EAAI,MAAQ,YAG9CN,GACC,gBAAKpI,UAAWhB,EAAQ6I,eAAe,UACrC,SAACsD,EAAA,EAAK,CAACC,SAAS,QAAO,SAAEhD,MAEzB,UA3BGzI,EA6BJ,OAKjB,IC7LMvB,IAAYC,EAAAA,EAAAA,KAAAA,CAAa,CAC7BgN,QAAS,CACPC,MAAO,QAETC,OAAQ,CACN1M,UAAW,GACXsD,aAAc,IACd3D,QAAS,WA8Cb,QAAeM,EAAAA,EAAAA,WA1Cf,SAA0B,GAAsC,IAApCC,EAAK,EAALA,MAClBC,EAAYZ,KAAZY,QACR,GAAsBC,EAAAA,EAAAA,UAAS,IAAG,eAA3ByB,EAAG,KAAE8K,EAAM,KAClB,GAA0BvM,EAAAA,EAAAA,YAAmB,eAAtCwM,EAAK,KAAEC,EAAQ,KAEtB,OACE,2BACGD,GAAQ,SAAC,EAAAE,aAAY,CAACF,MAAOA,IAAY,MAC1C,SAAC3K,EAAA,EAAS,CACR8K,WAAS,EACTC,KAAM,GACN9K,MAAOL,EACPkB,SAAU,SAAAC,GAAK,OAAI2J,EAAO3J,EAAMC,OAAOf,MAAM,EAC7CY,YACE,8DAEFc,QAAQ,WACRzC,UAAWhB,EAAQqM,WAErB,SAACH,EAAA,EAAM,CACLzI,QAAQ,YACRzC,UAAWhB,EAAQuM,OACnBlK,QAAS,WACP,IACEqK,OAASf,GACT,IAAM9F,GAAUC,EAAAA,EAAAA,YAAW/F,GACrB+M,EAAOC,KAAKC,MAAMtL,GAClBuL,EAAQC,MAAMC,QAAQL,GAAQA,EAAO,CAACA,GAC5CG,EAAM5I,SAAQ,SAAA+I,GAAC,OAAIvH,EAAQwE,aAAa+C,EAAE,IAC1CH,EAAM5I,SAAQ,SAAA+I,GAAC,OAAIA,EAAEzD,OAAO,IAC5B5J,EAAMyL,YACN3F,EAAQ4F,WAAW1L,EAGrB,CAFE,MAAOiF,GACP0H,EAAS1H,EACX,CACF,EAAE,SACH,aAKP,ICpBA,QAAelF,EAAAA,EAAAA,WAhCf,SAA0B,GAAsC,IAApCC,EAAK,EAALA,MAC1B,GAAsBE,EAAAA,EAAAA,UAAS,8BAA6B,eAArDyB,EAAG,KAAE8K,EAAM,KAEZa,GADoBhK,EAAAA,EAAAA,QAAOtD,GAAzBqD,cACsBkK,8BACxBC,GAAY,QAChB,6BAA8BC,GAC9B,iBAAkBC,IACf5I,OAAO6I,YAAYL,EAAQnM,KAAI,SAAAyM,GAAC,MAAI,CAACA,EAAE3J,KAAM2J,EAAEC,eAAe,MAI7DC,EAAON,EAAa7L,GAAOA,EAAM,6BACjCoM,EAAYP,EAAaM,GAC/B,OACE,iCACE,UAAC5G,EAAA,EAAW,YACV,SAAC8G,EAAA,EAAM,CAAChM,MAAO8L,EAAMjL,SAAU,SAAAC,GAAK,OAAI2J,EAAO3J,EAAMC,OAAOf,MAAM,EAAC,SAChE8C,OAAOmJ,KAAKT,GAAcrM,KAAI,SAAA8D,GAAC,OAC9B,SAACd,EAAA,EAAQ,CAASnC,MAAOiD,EAAE,SACxBA,GADYA,EAEJ,OAGf,SAACiJ,EAAA,EAAc,UAAC,mCAGlB,mBACA,SAACH,EAAS,CAAC/N,MAAOA,MAGxB,G,sICtCMmO,EAAY,CAAC,YAAa,UAoB1BC,GAAWC,EAAAA,EAAAA,IAAOrN,EAAAA,EAAO,CAC7BiD,KAAM,UACNqK,KAAM,OACNC,kBAAmB,SAACC,EAAOC,GAAM,OAAKA,EAAOpG,IAAI,GAHlCgG,EAId,WACD,MAAO,CACLK,SAAU,SAEd,IACMpN,EAAoBqN,EAAAA,YAAiB,SAAcC,EAASC,GAChE,IAAML,GAAQM,EAAAA,EAAAA,GAAc,CAC1BN,MAAOI,EACP3K,KAAM,YAGJhD,EAEEuN,EAFFvN,UAAS,EAEPuN,EADFjN,OAAAA,OAAM,IAAG,GAAK,EAEhBwN,GAAQC,EAAAA,EAAAA,GAA8BR,EAAOL,GACzCc,GAAaC,EAAAA,EAAAA,GAAS,CAAC,EAAGV,EAAO,CACrCjN,OAAAA,IAEItB,EA/BkB,SAAAgP,GACxB,IACEhP,EACEgP,EADFhP,QAKF,OAAOkP,EAAAA,EAAAA,GAHO,CACZ9G,KAAM,CAAC,SAEoB+G,EAAAA,EAAqBnP,EACpD,CAuBkBoP,CAAkBJ,GAClC,OAAoBK,EAAAA,EAAAA,KAAKlB,GAAUc,EAAAA,EAAAA,GAAS,CAC1CjO,WAAWsO,EAAAA,EAAAA,SAAKtP,EAAQoI,KAAMpH,GAC9BuO,UAAWjO,EAAS,OAAIqK,EACxBiD,IAAKA,EACLI,WAAYA,GACXF,GACL,IAiCA,K,iFClFO,SAASK,EAAoBd,GAClC,OAAOmB,EAAAA,EAAAA,GAAqB,UAAWnB,EACzC,CACA,IAAMoB,GAAcC,EAAAA,EAAAA,GAAuB,UAAW,CAAC,SACvD,K,6HCJMxB,EAAY,CAAC,YAAa,aAkB1ByB,GAAkBvB,EAAAA,EAAAA,IAAO,MAAO,CACpCpK,KAAM,iBACNqK,KAAM,OACNC,kBAAmB,SAACC,EAAOC,GAAM,OAAKA,EAAOpG,IAAI,GAH3BgG,EAIrB,WACD,MAAO,CACL1O,QAAS,GACT,eAAgB,CACdkQ,cAAe,IAGrB,IACMrO,EAA2BmN,EAAAA,YAAiB,SAAqBC,EAASC,GAC9E,IAAML,GAAQM,EAAAA,EAAAA,GAAc,CAC1BN,MAAOI,EACP3K,KAAM,mBAGJhD,EAEEuN,EAFFvN,UAAS,EAEPuN,EADFsB,UAAAA,OAAS,IAAG,QAAK,EAEnBf,GAAQC,EAAAA,EAAAA,GAA8BR,EAAOL,GACzCc,GAAaC,EAAAA,EAAAA,GAAS,CAAC,EAAGV,EAAO,CACrCsB,UAAAA,IAEI7P,EAlCkB,SAAAgP,GACxB,IACEhP,EACEgP,EADFhP,QAKF,OAAOkP,EAAAA,EAAAA,GAHO,CACZ9G,KAAM,CAAC,SAEoB0H,EAAAA,EAA4B9P,EAC3D,CA0BkBoP,CAAkBJ,GAClC,OAAoBK,EAAAA,EAAAA,KAAKM,GAAiBV,EAAAA,EAAAA,GAAS,CACjDc,GAAIF,EACJ7O,WAAWsO,EAAAA,EAAAA,SAAKtP,EAAQoI,KAAMpH,GAC9BgO,WAAYA,EACZJ,IAAKA,GACJE,GACL,IA4BA,K,kFC9EO,SAASgB,EAA2BzB,GACzC,OAAOmB,EAAAA,EAAAA,GAAqB,iBAAkBnB,EAChD,CACA,IAAM2B,GAAqBN,EAAAA,EAAAA,GAAuB,iBAAkB,CAAC,SACrE,K,mPCLaO,EAAuB,CAClCC,QAAS,eACTC,YAAa,eACbC,UAAW,iBACXC,cAAe,iBACf5D,MAAO,cAiBT,EAZ0B,SAAH,GAGjB,IAFJnN,EAAK,EAALA,MACA0P,EAAU,EAAVA,WAEMsB,EAP0B,SAAA/J,GAChC,OAAO0J,EAAqB1J,IAAUA,CACxC,CAK2BgK,CAA0BvB,EAAWzI,OACxDA,GAAQiK,EAAAA,EAAAA,IAAQlR,EAAO,WAAF,OAAagR,IAAoB,IAAUtB,EAAWzI,MAC3EkK,GAAeD,EAAAA,EAAAA,IAAQlR,EAAO,WAAF,OAAagR,EAAgB,YAC/D,MAAI,SAAUhR,GAASmR,EACd,QAAP,OAAeA,EAAY,YAEtBC,EAAAA,EAAAA,IAAMnK,EAAO,GACtB,E,WCpBM2H,EAAY,CAAC,YAAa,QAAS,YAAa,SAAU,UAAW,oBAAqB,YAAa,UAAW,MA2BlHyC,GAAWvC,EAAAA,EAAAA,IAAO9I,EAAAA,EAAY,CAClCtB,KAAM,UACNqK,KAAM,OACNC,kBAAmB,SAACC,EAAOC,GACzB,IACEQ,EACET,EADFS,WAEF,MAAO,CAACR,EAAOpG,KAAMoG,EAAO,YAAD,QAAaoC,EAAAA,EAAAA,GAAW5B,EAAW6B,aAAwC,WAAzB7B,EAAWa,WAA0BrB,EAAO9F,OAC3H,GARe0F,EASd,YAGG,IAFJ9O,EAAK,EAALA,MACA0P,EAAU,EAAVA,WAEA,OAAOC,EAAAA,EAAAA,GAAS,CAAC,EAA4B,SAAzBD,EAAW6B,WAAwB,CACrDC,eAAgB,QACU,UAAzB9B,EAAW6B,WAAyB,CACrCC,eAAgB,OAChB,UAAW,CACTA,eAAgB,cAEQ,WAAzB9B,EAAW6B,YAA0B5B,EAAAA,EAAAA,GAAS,CAC/C6B,eAAgB,aACM,YAArB9B,EAAWzI,OAAuB,CACnCwK,oBAAqBC,EAAkB,CACrC1R,MAAAA,EACA0P,WAAAA,KAED,CACD,UAAW,CACT+B,oBAAqB,aAEI,WAAzB/B,EAAWa,YAA0B,QACvC1N,SAAU,WACV8O,wBAAyB,cACzB3I,gBAAiB,cAGjB4I,QAAS,EACTC,OAAQ,EACRC,OAAQ,EAERC,aAAc,EACd3R,QAAS,EAET4R,OAAQ,UACRC,WAAY,OACZC,cAAe,SACfC,cAAe,OAEfC,iBAAkB,OAElB,sBAAuB,CACrBC,YAAa,SACd,YAEKC,EAAAA,EAAAA,cAA6B,CACjCV,QAAS,SAGf,IAyHA,EAxH0BxC,EAAAA,YAAiB,SAAcC,EAASC,GAChE,IAAML,GAAQM,EAAAA,EAAAA,GAAc,CAC1BN,MAAOI,EACP3K,KAAM,YAGJhD,EASEuN,EATFvN,UAAS,EASPuN,EARFhI,MAAAA,OAAK,IAAG,YAAS,IAQfgI,EAPFsB,UAAAA,OAAS,IAAG,MAAG,EACfgC,EAMEtD,EANFsD,OACAC,EAKEvD,EALFuD,QACAC,EAIExD,EAJFwD,kBAAiB,EAIfxD,EAHFsC,UAAAA,OAAS,IAAG,WAAQ,IAGlBtC,EAFF9K,QAAAA,OAAO,IAAG,YAAS,EACnBuO,EACEzD,EADFyD,GAEFlD,GAAQC,EAAAA,EAAAA,GAA8BR,EAAOL,GAC/C,GAKI+D,EAAAA,EAAAA,KAJFC,EAAiB,EAAjBA,kBACQC,EAAiB,EAAzBN,OACSO,EAAkB,EAA3BN,QACKO,EAAe,EAApBzD,IAEF,EAAwCF,EAAAA,UAAe,GAAM,eAAtD4D,EAAY,KAAEC,EAAe,KAC9BC,GAAaC,EAAAA,EAAAA,GAAW7D,EAAKyD,GAmB7BrD,GAAaC,EAAAA,EAAAA,GAAS,CAAC,EAAGV,EAAO,CACrChI,MAAAA,EACAsJ,UAAAA,EACAyC,aAAAA,EACAzB,UAAAA,EACApN,QAAAA,IAEIzD,EA1HkB,SAAAgP,GACxB,IACEhP,EAIEgP,EAJFhP,QACA6P,EAGEb,EAHFa,UACAyC,EAEEtD,EAFFsD,aACAzB,EACE7B,EADF6B,UAEI6B,EAAQ,CACZtK,KAAM,CAAC,OAAQ,YAAF,QAAcwI,EAAAA,EAAAA,GAAWC,IAA4B,WAAdhB,GAA0B,SAAUyC,GAAgB,iBAE1G,OAAOpD,EAAAA,EAAAA,GAAewD,EAAOC,EAAAA,EAAqB3S,EACpD,CA+GkBoP,CAAkBJ,GAClC,OAAoBK,EAAAA,EAAAA,KAAKsB,GAAU1B,EAAAA,EAAAA,GAAS,CAC1C1I,MAAOA,EACPvF,WAAWsO,EAAAA,EAAAA,SAAKtP,EAAQoI,KAAMpH,GAC9BhB,QAAS+R,EACTlC,UAAWA,EACXgC,OA/BiB,SAAAhP,GACjBsP,EAAkBtP,IACgB,IAA9BqP,EAAkBU,SACpBL,GAAgB,GAEdV,GACFA,EAAOhP,EAEX,EAwBEiP,QAvBkB,SAAAjP,GAClBuP,EAAmBvP,IACe,IAA9BqP,EAAkBU,SACpBL,GAAgB,GAEdT,GACFA,EAAQjP,EAEZ,EAgBE+L,IAAK4D,EACLxD,WAAYA,EACZvL,QAASA,EACTuO,GAAI,GAAF,eAAQnN,OAAOmJ,KAAKiC,GAAsB4C,SAAStM,GAEhD,GAFyD,CAAC,CAC7DA,MAAAA,MACQ,OAAI2G,MAAMC,QAAQ6E,GAAMA,EAAK,CAACA,MACvClD,GACL,G,gFCxJO,SAAS6D,EAAoBtE,GAClC,OAAOmB,EAAAA,EAAAA,GAAqB,UAAWnB,EACzC,CACA,IAAMuD,GAAclC,EAAAA,EAAAA,GAAuB,UAAW,CAAC,OAAQ,gBAAiB,iBAAkB,kBAAmB,SAAU,iBAC/H,K","sources":["../../../plugins/data-management/src/AddTrackWidget/components/TextIndexingConfig.tsx","../../../plugins/data-management/src/AddTrackWidget/components/TrackTypeSelector.tsx","../../../plugins/data-management/src/AddTrackWidget/components/TrackAdapterSelector.tsx","../../../plugins/data-management/src/AddTrackWidget/components/ConfirmTrack.tsx","../../../plugins/data-management/src/AddTrackWidget/components/TrackSourceSelect.tsx","../../../plugins/data-management/src/AddTrackWidget/components/DefaultAddTrackWorkflow.tsx","../../../plugins/data-management/src/AddTrackWidget/components/PasteConfigWorkflow.tsx","../../../plugins/data-management/src/AddTrackWidget/components/AddTrackWidget.tsx","../../../node_modules/@mui/material/Card/Card.js","../../../node_modules/@mui/material/Card/cardClasses.js","../../../node_modules/@mui/material/CardContent/CardContent.js","../../../node_modules/@mui/material/CardContent/cardContentClasses.js","../../../node_modules/@mui/material/Link/getTextDecoration.js","../../../node_modules/@mui/material/Link/Link.js","../../../node_modules/@mui/material/Link/linkClasses.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  Card,\n  CardContent,\n  IconButton,\n  InputLabel,\n  InputAdornment,\n  List,\n  ListItem,\n  Paper,\n  TextField,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\n\n// icons\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport AddIcon from '@mui/icons-material/Add'\n\n// locals\nimport { AddTrackModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: theme.spacing(1),\n  },\n\n  card: {\n    marginTop: theme.spacing(1),\n  },\n}))\n\nconst TextIndexingConfig = observer(({ model }: { model: AddTrackModel }) => {\n  const { classes } = useStyles()\n  const [value1, setValue1] = useState('')\n  const [value2, setValue2] = useState('')\n  const [attributes, setAttributes] = useState(['Name', 'ID'])\n  const [exclude, setExclude] = useState(['CDS', 'exon'])\n  const sections = [\n    {\n      label: 'Indexing attributes',\n      values: attributes,\n    },\n    {\n      label: 'Feature types to exclude',\n      values: exclude,\n    },\n  ]\n  useEffect(() => {\n    model.setTextIndexingConf({ attributes, exclude })\n  }, [model, attributes, exclude])\n\n  return (\n    <Paper className={classes.paper}>\n      <InputLabel>Indexing configuration</InputLabel>\n      {sections.map((section, index) => (\n        <Card raised key={section.label} className={classes.card}>\n          <CardContent>\n            <InputLabel>{section.label}</InputLabel>\n            <List disablePadding>\n              {section.values.map((val: string, idx: number) => (\n                <ListItem key={idx} disableGutters>\n                  <TextField\n                    value={val}\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            onClick={() => {\n                              const newAttr = section.values.filter((a, i) => {\n                                return i !== idx\n                              })\n                              index === 0\n                                ? setAttributes(newAttr)\n                                : setExclude(newAttr)\n                            }}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                </ListItem>\n              ))}\n              <ListItem disableGutters>\n                <TextField\n                  value={index === 0 ? value1 : value2}\n                  placeholder=\"add new\"\n                  onChange={event => {\n                    index === 0\n                      ? setValue1(event.target.value)\n                      : setValue2(event.target.value)\n                  }}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          onClick={() => {\n                            if (index === 0) {\n                              const newAttr: string[] = attributes\n                              newAttr.push(value1)\n                              setAttributes(newAttr)\n                              setValue1('')\n                            } else {\n                              const newFeat: string[] = exclude\n                              newFeat.push(value2)\n                              setExclude(newFeat)\n                              setValue2('')\n                            }\n                          }}\n                          disabled={index === 0 ? value1 === '' : value2 === ''}\n                          data-testid={`stringArrayAdd-Feat`}\n                        >\n                          <AddIcon />\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </ListItem>\n            </List>\n          </CardContent>\n        </Card>\n      ))}\n    </Paper>\n  )\n})\n\nexport default TextIndexingConfig\n","import React from 'react'\nimport { MenuItem, TextField } from '@mui/material'\nimport { getEnv } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport { AddTrackModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  spacing: {\n    marginBottom: theme.spacing(3),\n  },\n}))\n\nconst TrackTypeSelector = observer(({ model }: { model: AddTrackModel }) => {\n  const { classes } = useStyles()\n  const { pluginManager } = getEnv(model)\n  const { trackType } = model\n  const trackTypes = pluginManager.getTrackElements()\n\n  return (\n    <TextField\n      className={classes.spacing}\n      value={trackType}\n      variant=\"outlined\"\n      label=\"Track type\"\n      helperText=\"Select track type\"\n      select\n      fullWidth\n      onChange={event => model.setTrackType(event.target.value)}\n      SelectProps={{\n        // @ts-ignore\n        SelectDisplayProps: { 'data-testid': 'trackTypeSelect' },\n      }}\n    >\n      {trackTypes.map(({ name, displayName }) => (\n        <MenuItem key={name} value={name}>\n          {displayName}\n        </MenuItem>\n      ))}\n    </TextField>\n  )\n})\n\nexport default TrackTypeSelector\n","import React from 'react'\nimport { ListSubheader, MenuItem, TextField } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { getEnv } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\n// locals\nimport { AddTrackModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  spacing: {\n    marginBottom: theme.spacing(3),\n  },\n}))\n\n// collate adapters into a map with\n// key: category\n// value: array of adapters with that category\nfunction categorizeAdapters(adaptersList: AdapterType[]) {\n  const map = {} as { [key: string]: AdapterType[] }\n  adaptersList.forEach(adapter => {\n    const key = adapter.adapterMetadata?.category || 'Default'\n    if (!map[key]) {\n      map[key] = []\n    }\n    map[key].push(adapter)\n  })\n  return map\n}\n\nconst TrackAdapterSelector = observer(({ model }: { model: AddTrackModel }) => {\n  const { classes } = useStyles()\n  const { trackAdapter } = model\n  const { pluginManager } = getEnv(model)\n  return (\n    <TextField\n      className={classes.spacing}\n      value={trackAdapter?.type !== 'UNKNOWN' ? trackAdapter?.type : ''}\n      label=\"Adapter type\"\n      variant=\"outlined\"\n      helperText=\"Select an adapter type\"\n      select\n      fullWidth\n      onChange={event => model.setAdapterHint(event.target.value)}\n      SelectProps={{\n        // @ts-ignore\n        SelectDisplayProps: { 'data-testid': 'adapterTypeSelect' },\n      }}\n    >\n      {Object.entries(\n        categorizeAdapters(\n          pluginManager\n            .getAdapterElements()\n            .filter(e => !e.adapterMetadata?.hiddenFromGUI),\n        ),\n      ).map(([key, val]) => {\n        // returning array avoids needing to use a react fragment which\n        // Select/TextField sub-elements disagree with\n        return [\n          <ListSubheader>{key}</ListSubheader>,\n          val.map(elt => (\n            <MenuItem key={elt.name} value={elt.name}>\n              {elt.displayName}\n            </MenuItem>\n          )),\n        ]\n      })}\n    </TextField>\n  )\n})\n\nexport default TrackAdapterSelector\n","import React, { useEffect, useState } from 'react'\nimport {\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  Link,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport {\n  supportedIndexingAdapters,\n  getSession,\n  isElectron,\n} from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\nimport { UNKNOWN } from '@jbrowse/core/util/tracks'\nimport { AssemblySelector } from '@jbrowse/core/ui'\n\n// locals\nimport { AddTrackModel } from '../model'\nimport TextIndexingConfig from './TextIndexingConfig'\nimport TrackTypeSelector from './TrackTypeSelector'\nimport TrackAdapterSelector from './TrackAdapterSelector'\n\nconst useStyles = makeStyles()(theme => ({\n  spacing: {\n    marginBottom: theme.spacing(3),\n  },\n}))\n\nfunction StatusMessage({\n  trackAdapter,\n  trackType,\n}: {\n  trackAdapter: { type: string; subadapter?: { type: string } }\n  trackType: string\n}) {\n  const { classes } = useStyles()\n  const { type, subadapter } = trackAdapter\n  return type === 'SNPCoverageAdapter' ? (\n    <Typography className={classes.spacing}>\n      Selected <code>{trackType}</code>. Using adapter <code>{type}</code> with\n      subadapter <code>{subadapter?.type}</code>. Please enter a track name and,\n      if necessary, update the track type.\n    </Typography>\n  ) : (\n    <Typography className={classes.spacing}>\n      Using adapter <code>{type}</code> and guessing track type{' '}\n      <code>{trackType}</code>. Please enter a track name and, if necessary,\n      update the track type.\n    </Typography>\n  )\n}\n\nfunction UnknownAdapterPrompt({ model }: { model: AddTrackModel }) {\n  const { classes } = useStyles()\n  return (\n    <>\n      <Typography className={classes.spacing}>\n        JBrowse was not able to guess the adapter type for this data, but it may\n        be in the list below. If not, you can{' '}\n        <Link\n          href=\"https://github.com/GMOD/jbrowse-components/releases\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          check for new releases\n        </Link>{' '}\n        of JBrowse to see if they support this data type or{' '}\n        <Link\n          href=\"https://github.com/GMOD/jbrowse-components/issues/new\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          file an issue\n        </Link>{' '}\n        and add a feature request for this data type.\n      </Typography>\n      <TrackAdapterSelector model={model} />\n    </>\n  )\n}\n\nexport default observer(function ConfirmTrack({\n  model,\n}: {\n  model: AddTrackModel\n}) {\n  const { classes } = useStyles()\n  const [check, setCheck] = useState(true)\n  const session = getSession(model)\n  const { trackName, trackAdapter, trackType, warningMessage, adapterHint } =\n    model\n\n  useEffect(() => {\n    if (adapterHint === '' && trackAdapter) {\n      model.setAdapterHint(trackAdapter.type)\n    }\n  }, [adapterHint, trackAdapter, trackAdapter?.type, model])\n\n  if (model.unsupported) {\n    return (\n      <Typography className={classes.spacing}>\n        This version of JBrowse cannot display data of this type. It is\n        possible, however, that there is a newer version that can display them.\n        You can{' '}\n        <Link\n          href=\"https://github.com/GMOD/jbrowse-components/releases\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          check for new releases\n        </Link>{' '}\n        of JBrowse or{' '}\n        <Link\n          href=\"https://github.com/GMOD/jbrowse-components/issues/new\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          file an issue\n        </Link>{' '}\n        and add a feature request for this data type.\n      </Typography>\n    )\n  }\n  if (trackAdapter?.type === UNKNOWN) {\n    return <UnknownAdapterPrompt model={model} />\n  }\n\n  if (!trackAdapter?.type) {\n    return <Typography>Could not recognize this data type.</Typography>\n  }\n\n  const supportedForIndexing = supportedIndexingAdapters(trackAdapter?.type)\n  return (\n    <div>\n      {trackAdapter ? (\n        <StatusMessage trackAdapter={trackAdapter} trackType={trackType} />\n      ) : null}\n      {warningMessage ? (\n        <Typography style={{ color: 'orange' }}>{warningMessage}</Typography>\n      ) : null}\n      <TextField\n        className={classes.spacing}\n        label=\"trackName\"\n        helperText=\"A name for this track\"\n        fullWidth\n        value={trackName}\n        onChange={event => model.setTrackName(event.target.value)}\n        inputProps={{ 'data-testid': 'trackNameInput' }}\n      />\n      <TrackAdapterSelector model={model} />\n      <TrackTypeSelector model={model} />\n      <AssemblySelector\n        session={session}\n        helperText=\"Select assembly to add track to\"\n        selected={model.assembly}\n        onChange={asm => model.setAssembly(asm)}\n        TextFieldProps={{\n          fullWidth: true,\n          SelectProps: {\n            // @ts-ignore\n            SelectDisplayProps: { 'data-testid': 'assemblyNameSelect' },\n          },\n        }}\n      />\n      {isElectron && supportedForIndexing && (\n        <FormControl>\n          <FormControlLabel\n            label={'Index track for text searching?'}\n            control={\n              <Checkbox\n                checked={check}\n                onChange={e => {\n                  setCheck(e.target.checked)\n                  model.setTextIndexTrack(e.target.checked)\n                }}\n              />\n            }\n          />\n        </FormControl>\n      )}\n      {isElectron && check && supportedForIndexing ? (\n        <TextIndexingConfig model={model} />\n      ) : null}\n    </div>\n  )\n})\n","import React from 'react'\nimport { FileSelector } from '@jbrowse/core/ui'\nimport { AbstractRootModel } from '@jbrowse/core/util'\nimport { Paper } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { getRoot } from 'mobx-state-tree'\nimport { observer } from 'mobx-react'\n\n// locals\nimport { AddTrackModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n  },\n  spacer: {\n    height: theme.spacing(8),\n  },\n}))\n\nfunction TrackSourceSelect({ model }: { model: AddTrackModel }) {\n  const { classes } = useStyles()\n  const rootModel = getRoot<AbstractRootModel>(model)\n\n  return (\n    <Paper className={classes.paper}>\n      <FileSelector\n        name=\"Main file\"\n        description=\"\"\n        location={model.trackData}\n        setLocation={model.setTrackData}\n        setName={model.setTrackName}\n        rootModel={rootModel}\n      />\n      <div className={classes.spacer} />\n      <FileSelector\n        name=\"Index file\"\n        description=\"(Optional) The URL of the index file is automatically inferred from the URL of the main file if it is not supplied.\"\n        location={model.indexTrackData}\n        setLocation={model.setIndexTrackData}\n        setName={model.setTrackName}\n        rootModel={rootModel}\n      />\n    </Paper>\n  )\n}\n\nexport default observer(TrackSourceSelect)\n","import React, { useState } from 'react'\nimport {\n  Alert,\n  Button,\n  Step,\n  StepContent,\n  StepLabel,\n  Stepper,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { getRoot } from 'mobx-state-tree'\n\nimport {\n  getSession,\n  isElectron,\n  supportedIndexingAdapters,\n} from '@jbrowse/core/util'\nimport { getConf } from '@jbrowse/core/configuration'\nimport { observer } from 'mobx-react'\n\n// locals\nimport ConfirmTrack from './ConfirmTrack'\nimport TrackSourceSelect from './TrackSourceSelect'\nimport { AddTrackModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  root: {\n    marginTop: theme.spacing(1),\n  },\n  stepper: {\n    backgroundColor: theme.palette.background.default,\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginTop: theme.spacing(10),\n    marginBottom: theme.spacing(2),\n  },\n  alertContainer: {\n    padding: `${theme.spacing(2)}px 0px ${theme.spacing(2)}px 0px`,\n  },\n}))\n\nconst steps = ['Enter track data', 'Confirm track type']\n\nfunction AddTrackWorkflow({ model }: { model: AddTrackModel }) {\n  const [activeStep, setActiveStep] = useState(0)\n  const { classes } = useStyles()\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const { jobsManager } = getRoot<any>(model)\n  const session = getSession(model)\n  const {\n    assembly,\n    trackAdapter,\n    trackData,\n    trackName,\n    trackType,\n    textIndexTrack,\n    textIndexingConf,\n  } = model\n  const [trackErrorMessage, setTrackErrorMessage] = useState<string>()\n\n  function getStepContent(step: number) {\n    switch (step) {\n      case 0:\n        return <TrackSourceSelect model={model} />\n      case 1:\n        return <ConfirmTrack model={model} />\n      default:\n        return <Typography>Unknown step</Typography>\n    }\n  }\n\n  async function handleNext() {\n    if (activeStep !== steps.length - 1) {\n      setActiveStep(activeStep + 1)\n      return\n    }\n\n    const trackId = [\n      `${trackName.toLowerCase().replace(/ /g, '_')}-${Date.now()}`,\n      `${session.adminMode ? '' : '-sessionTrack'}`,\n    ].join('')\n\n    const assemblyInstance = session.assemblyManager.get(assembly)\n\n    if (trackAdapter && trackAdapter.type !== 'UNKNOWN') {\n      session.addTrackConf({\n        trackId,\n        type: trackType,\n        name: trackName,\n        assemblyNames: [assembly],\n        adapter: {\n          ...trackAdapter,\n          sequenceAdapter: getConf(assemblyInstance, ['sequence', 'adapter']),\n        },\n      })\n      if (model.view) {\n        model.view.showTrack(trackId)\n        if (\n          isElectron &&\n          textIndexTrack &&\n          supportedIndexingAdapters(trackAdapter.type)\n        ) {\n          const attr = textIndexingConf || {\n            attributes: ['Name', 'ID'],\n            exclude: ['CDS', 'exon'],\n          }\n          const indexName = trackName + '-index'\n          const newEntry = {\n            indexingParams: {\n              ...attr,\n              assemblies: [assembly],\n              tracks: [trackId],\n              indexType: 'perTrack',\n              name: indexName,\n              timestamp: new Date().toISOString(),\n            },\n            name: indexName,\n            cancelCallback: () => jobsManager.abortJob(),\n          }\n          jobsManager.queueJob(newEntry)\n        }\n      } else {\n        session.notify(\n          'Open a new view, or use the track selector in an existing view, to view this track',\n          'info',\n        )\n      }\n      model.clearData()\n      session.hideWidget(model)\n    } else {\n      setTrackErrorMessage(\n        'Failed to add track.\\nThe configuration of this file is not currently supported.',\n      )\n    }\n  }\n\n  function handleBack() {\n    setTrackErrorMessage(undefined)\n    setActiveStep(activeStep - 1)\n  }\n\n  function isNextDisabled() {\n    switch (activeStep) {\n      case 0:\n        return !trackData\n      case 1:\n        return !(trackName && trackType && trackAdapter?.type && assembly)\n      default:\n        return true\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Stepper\n        className={classes.stepper}\n        activeStep={activeStep}\n        orientation=\"vertical\"\n      >\n        {steps.map((label, idx) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n            <StepContent>\n              {getStepContent(idx)}\n              <div className={classes.actionsContainer}>\n                <Button\n                  disabled={activeStep === 0}\n                  onClick={handleBack}\n                  className={classes.button}\n                >\n                  Back\n                </Button>\n                <Button\n                  disabled={isNextDisabled()}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleNext}\n                  className={classes.button}\n                  data-testid=\"addTrackNextButton\"\n                >\n                  {activeStep === steps.length - 1 ? 'Add' : 'Next'}\n                </Button>\n              </div>\n              {trackErrorMessage ? (\n                <div className={classes.alertContainer}>\n                  <Alert severity=\"error\">{trackErrorMessage}</Alert>\n                </div>\n              ) : null}\n            </StepContent>\n          </Step>\n        ))}\n      </Stepper>\n    </div>\n  )\n}\nexport default observer(AddTrackWorkflow)\n","import React, { useState } from 'react'\nimport { Button, TextField } from '@mui/material'\nimport { ErrorMessage } from '@jbrowse/core/ui'\nimport { makeStyles } from 'tss-react/mui'\nimport { getSession } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\n\n// locals\nimport { AddTrackModel } from '../model'\n\nconst useStyles = makeStyles()({\n  textbox: {\n    width: '100%',\n  },\n  submit: {\n    marginTop: 25,\n    marginBottom: 100,\n    display: 'block',\n  },\n})\n\nfunction AddTrackWorkflow({ model }: { model: AddTrackModel }) {\n  const { classes } = useStyles()\n  const [val, setVal] = useState('')\n  const [error, setError] = useState<unknown>()\n\n  return (\n    <div>\n      {error ? <ErrorMessage error={error} /> : null}\n      <TextField\n        multiline\n        rows={10}\n        value={val}\n        onChange={event => setVal(event.target.value)}\n        placeholder={\n          'Paste track config or array of track configs in JSON format'\n        }\n        variant=\"outlined\"\n        className={classes.textbox}\n      />\n      <Button\n        variant=\"contained\"\n        className={classes.submit}\n        onClick={() => {\n          try {\n            setError(undefined)\n            const session = getSession(model)\n            const conf = JSON.parse(val)\n            const confs = Array.isArray(conf) ? conf : [conf]\n            confs.forEach(c => session.addTrackConf(c))\n            confs.forEach(c => c.trackId)\n            model.clearData()\n            session.hideWidget(model)\n          } catch (e) {\n            setError(e)\n          }\n        }}\n      >\n        Submit\n      </Button>\n    </div>\n  )\n}\nexport default observer(AddTrackWorkflow)\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { FormControl, FormHelperText, Select, MenuItem } from '@mui/material'\nimport { getEnv } from '@jbrowse/core/util'\n\n// locals\nimport { AddTrackModel } from '../model'\nimport DefaultAddTrackWorkflow from './DefaultAddTrackWorkflow'\nimport PasteConfigWorkflow from './PasteConfigWorkflow'\n\nfunction AddTrackSelector({ model }: { model: AddTrackModel }) {\n  const [val, setVal] = useState('Default add track workflow')\n  const { pluginManager } = getEnv(model)\n  const widgets = pluginManager.getAddTrackWorkflowElements()\n  const ComponentMap = {\n    'Default add track workflow': DefaultAddTrackWorkflow,\n    'Add track JSON': PasteConfigWorkflow,\n    ...Object.fromEntries(widgets.map(w => [w.name, w.ReactComponent])),\n  } as { [key: string]: React.FC<{ model: AddTrackModel }> }\n\n  // make sure the selected value is in the list\n  const val2 = ComponentMap[val] ? val : 'Default add track workflow'\n  const Component = ComponentMap[val2]\n  return (\n    <>\n      <FormControl>\n        <Select value={val2} onChange={event => setVal(event.target.value)}>\n          {Object.keys(ComponentMap).map(e => (\n            <MenuItem key={e} value={e}>\n              {e}\n            </MenuItem>\n          ))}\n        </Select>\n        <FormHelperText>Type of add track workflow</FormHelperText>\n      </FormControl>\n\n      <br />\n      <Component model={model} />\n    </>\n  )\n}\n\nexport default observer(AddTrackSelector)\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import { alpha, getPath } from '@mui/system';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n    },\n\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const {\n      className,\n      color = 'primary',\n      component = 'a',\n      onBlur,\n      onFocus,\n      TypographyClasses,\n      underline = 'always',\n      variant = 'inherit',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n  const handleBlur = event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;"],"names":["useStyles","makeStyles","theme","paper","display","flexDirection","padding","spacing","card","marginTop","observer","model","classes","useState","value1","setValue1","value2","setValue2","attributes","setAttributes","exclude","setExclude","sections","label","values","useEffect","setTextIndexingConf","Paper","className","InputLabel","map","section","index","Card","raised","CardContent","List","disablePadding","val","idx","ListItem","disableGutters","TextField","value","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","newAttr","filter","a","i","Delete","placeholder","onChange","event","target","push","newFeat","disabled","Add","marginBottom","pluginManager","getEnv","trackType","trackTypes","getTrackElements","variant","helperText","select","fullWidth","setTrackType","SelectProps","SelectDisplayProps","name","displayName","MenuItem","categorizeAdapters","adaptersList","forEach","adapter","key","adapterMetadata","category","trackAdapter","type","setAdapterHint","Object","entries","getAdapterElements","e","hiddenFromGUI","ListSubheader","elt","StatusMessage","subadapter","Typography","UnknownAdapterPrompt","Link","href","rel","check","setCheck","session","getSession","trackName","warningMessage","adapterHint","unsupported","UNKNOWN","supportedForIndexing","supportedIndexingAdapters","style","color","setTrackName","inputProps","AssemblySelector","selected","assembly","asm","setAssembly","TextFieldProps","isElectron","FormControl","FormControlLabel","control","Checkbox","checked","setTextIndexTrack","spacer","height","rootModel","getRoot","FileSelector","description","location","trackData","setLocation","setTrackData","setName","indexTrackData","setIndexTrackData","root","stepper","backgroundColor","palette","background","default","button","marginRight","actionsContainer","alertContainer","steps","activeStep","setActiveStep","jobsManager","textIndexTrack","textIndexingConf","trackErrorMessage","setTrackErrorMessage","getStepContent","step","ConfirmTrack","handleNext","length","trackId","toLowerCase","replace","Date","now","adminMode","join","assemblyInstance","assemblyManager","get","addTrackConf","assemblyNames","sequenceAdapter","getConf","view","showTrack","attr","indexName","newEntry","indexingParams","assemblies","tracks","indexType","timestamp","toISOString","cancelCallback","abortJob","queueJob","notify","clearData","hideWidget","handleBack","undefined","isNextDisabled","Stepper","orientation","Step","StepLabel","StepContent","Button","Alert","severity","textbox","width","submit","setVal","error","setError","ErrorMessage","multiline","rows","conf","JSON","parse","confs","Array","isArray","c","widgets","getAddTrackWorkflowElements","ComponentMap","DefaultAddTrackWorkflow","PasteConfigWorkflow","fromEntries","w","ReactComponent","val2","Component","Select","keys","FormHelperText","_excluded","CardRoot","styled","slot","overridesResolver","props","styles","overflow","React","inProps","ref","useThemeProps","other","_objectWithoutPropertiesLoose","ownerState","_extends","composeClasses","getCardUtilityClass","useUtilityClasses","_jsx","clsx","elevation","generateUtilityClass","cardClasses","generateUtilityClasses","CardContentRoot","paddingBottom","component","getCardContentUtilityClass","as","cardContentClasses","colorTransformations","primary","textPrimary","secondary","textSecondary","transformedColor","transformDeprecatedColors","getPath","channelColor","alpha","LinkRoot","capitalize","underline","textDecoration","textDecorationColor","getTextDecoration","WebkitTapHighlightColor","outline","border","margin","borderRadius","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","onBlur","onFocus","TypographyClasses","sx","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","focusVisible","setFocusVisible","handlerRef","useForkRef","slots","getLinkUtilityClass","current","includes"],"sourceRoot":""}