{"version":3,"file":"static/js/9116.cc53e2b6.chunk.js","mappings":"sTAYMA,GAAYC,EAAAA,EAAAA,KAAAA,EAAa,SAAAC,GAC7B,MAA8BA,EAAMC,QAA5BC,EAAQ,EAARA,SAAUC,EAAO,EAAPA,QAIlB,MAAO,CACLC,WAAY,CACVC,OAAQ,OACRC,WANeJ,GACfK,EAAAA,EAAAA,IAAML,EAASM,KAAM,KACrBD,EAAAA,EAAAA,IAAMJ,EAAQK,KAAM,IAKpBC,SAAU,WACVC,OAAQ,GACRC,UAAW,SACXC,SAAU,UAEZC,kBAAmB,CACjBC,OAAQ,YACRC,MAAO,OACPC,UAAW,GAEbC,eAAgB,CACdC,MAAOhB,EAAWA,EAASiB,aAAehB,EAAQgB,cAEpDC,QAAS,CACPC,YAAa,OACbP,OAAQ,aAEVQ,MAAO,CACLC,YAAavB,EAAMwB,QAAQ,GAC3BC,aAAczB,EAAMwB,QAAQ,IAE9BE,MAAO,CACLC,cAAe,OACftB,OAAQ,OACRU,MAAO,EACPN,SAAU,WACVC,OAAQ,IAEVkB,GAAI,CACFC,SAAU,IAGhB,IAEMC,GAAgBC,EAAAA,EAAAA,WACpB,YAAwD,IAArDC,EAAK,EAALA,MAAOC,EAAM,EAANA,OACAC,EAAYpC,IAAZoC,QACR,OACE,SAACC,EAAA,EAAO,CACNC,MAAI,EACJC,UAAU,MACVC,MAAON,EAAMO,MACVC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,OAAOT,EAAO,IAC/BO,KAAI,SAAAG,GAAG,OACN,SAACC,EAAA,EAAU,CAACC,UAAWX,EAAQN,GAAG,UAC/BkB,EAAAA,EAAAA,WAAUH,IAD2BI,KAAKD,UAAUH,GAE1C,IAEjBK,OAAK,YAEL,gBACEH,UAAWX,EAAQR,MACnBuB,MAAO,CACLC,KAAMjB,EACN3B,WAAY,UAKtB,IAwPF,OAAeyB,EAAAA,EAAAA,WArPf,SAAoB,GAMhB,IALFC,EAAK,EAALA,MAAM,EAAD,EACLmB,iBAAAA,OAAgB,OAAG,mBAAO,EAK1B,GAA4BC,EAAAA,EAAAA,YAAkB,eAAvCC,EAAM,KAAEC,EAAS,KACxB,GAAgCF,EAAAA,EAAAA,YAAkB,eAA3CG,EAAQ,KAAEC,EAAW,KAI5B,GAA4CJ,EAAAA,EAAAA,YAIxC,eAJGK,EAAc,KAAEC,EAAiB,KAKxC,GAA4BN,EAAAA,EAAAA,YAAkB,eAAvCO,EAAM,KAAEC,EAAS,KAClBC,GAAcC,EAAAA,EAAAA,QAAuB,MACrCC,GAAgBD,EAAAA,EAAAA,QAAO,MACrB5B,EAAYpC,IAAZoC,QACF8B,OAA2BC,IAAXZ,QAA2CY,IAAnBR,EAuE9C,SAASS,EAAUC,GACjBA,EAAMC,iBACND,EAAME,kBACN,IAAMC,EACJH,EAAMI,QACLJ,EAAMK,OAA0BC,wBAAwBvB,KAC3DI,EAAUgB,GACVd,EAAYc,EACd,CAEA,SAASI,EAAUP,GACjB,IAAMK,EAASL,EAAMK,OACrBZ,EAAUO,EAAMI,QAAUC,EAAOC,wBAAwBvB,KAC3D,CAEA,SAASyB,IACPf,OAAUK,GACVjC,EAAMO,MAAMqC,SAAQ,SAAAnC,GAAI,OAAIA,EAAKoC,gBAAWZ,OAAWA,EAAU,GACnE,CAEA,SAASa,IACPpB,OAAkBO,GAClBX,OAAUW,GACVT,OAAYS,EACd,EA7FAc,EAAAA,EAAAA,YAAU,WAiBR,SAASC,EAAgBb,GACvB,GAAIN,EAAYoB,SAAWjB,EAAe,CACxC,IAAMM,EACJH,EAAMI,QAAUV,EAAYoB,QAAQR,wBAAwBvB,KAC9DM,EAAYc,EACd,CACF,CAEA,SAASY,EAAcf,GACrB,QAAeF,IAAXZ,GAAwBQ,EAAYoB,QAAS,CAC/C,IAAQV,EAAqBJ,EAArBI,QAASY,EAAYhB,EAAZgB,QAEXC,EAAUb,EADJV,EAAYoB,QACMR,wBAAwBvB,KAGtDQ,EAAkB,CAChB0B,QAAAA,EACAb,QAAAA,EACAY,QAAAA,IAEFnD,EAAMO,MAAMqC,SAAQ,SAAAnC,GAClB,IAAM4C,EArCZ,SAAwBD,EAAiB3C,GACvC,QAAewB,IAAXZ,EAAJ,CAGA,IAAIiC,EAASjC,EACTkC,EAAUH,EAEd,GAAIG,EAAUD,EAAQ,CACnB,MAAoB,CAACC,EAASD,GAA7BA,EAAM,KAAEC,EAAO,IACnB,CAIA,MAAO,CAAEC,WAHU/C,EAAKC,OAAO4C,GAGVG,YAFDhD,EAAKC,OAAO6C,GARhC,CAWF,CAuBmBG,CAAeN,EAAS3C,GACrC,GAAI4C,EAAM,CACR,IAAQG,EAA4BH,EAA5BG,WAAYC,EAAgBJ,EAAhBI,YACpBhD,EAAKoC,WAAWW,EAAYC,EAC9B,CACF,IACA7B,OAAUK,EACZ,CACF,CACA,OAAID,GACF2B,OAAOC,iBAAiB,YAAaZ,GACrCW,OAAOC,iBAAiB,UAAWV,GAC5B,WACLS,OAAOE,oBAAoB,YAAab,GACxCW,OAAOE,oBAAoB,UAAWX,EACxC,GAEK,WAAO,CAChB,GAAG,CAAC7B,EAAQW,EAAeP,EAAgBzB,KAE3C+C,EAAAA,EAAAA,YAAU,YAELf,QACYC,IAAbV,QACWU,IAAXZ,GACAyC,KAAKC,IAAIxC,EAAWF,IAAW,GAE/ByB,GAEJ,GAAG,CAACd,EAAeT,EAAUF,IA4B7B,IAAMjB,EAAO4D,QAAQvC,GAOrB,QAAeQ,IAAXZ,EACF,OACE,qCACcY,IAAXN,GACC,SAAC7B,EAAa,CAACE,MAAOA,EAAOC,OAAQ0B,IACnC,MACJ,gBACE,cAAY,sBACZd,UAAWX,EAAQrB,kBACnBoF,KAAK,eACLC,IAAKrC,EACLsC,YAAajC,EACbkC,WAAYzB,EACZ0B,YAAa3B,EAAU,SAEtBvB,OAOT,IAAMmD,EAAQ7C,EAAiBA,EAAe2B,QAAU7B,GAAY,EAC9DL,EAAOoD,EAAQjD,EAASiD,EAAQjD,EAChCtC,EAAQ+E,KAAKC,IAAIO,EAAQjD,GACvBd,EAAUP,EAAVO,MACFgE,EAAehE,EAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,OAAOQ,EAAK,IAClDsD,EAAgBjE,EAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,OAAOQ,EAAOnC,EAAM,IAC3D0F,EAAkBlE,EAAMC,KAAI,SAAAC,GAAI,OAAIqD,KAAKY,KAAK3F,EAAQ0B,EAAKkE,QAAQ,IACzE,OACE,gCACG5C,EAAckB,SACb,iCACE,SAAC2B,EAAA,GAAO,CACN/D,UAAWX,EAAQd,QACnBc,QAAS,CACPZ,MAAOY,EAAQZ,OAEjBc,MAAI,EACJyE,SAAU9C,EAAckB,QACxB6B,aAAc,CACZC,SAAU,MACVC,WAAY,QAEdC,gBAAiB,CACfF,SAAU,SACVC,WAAY,SAEdE,aAAW,EACXC,qBAAmB,WAElBZ,EAAa/D,KAAI,SAAA4E,GAAC,OACjB,SAACxE,EAAA,EAAU,WAA0BE,EAAAA,EAAAA,WAAUsE,IAA9BrE,KAAKD,UAAUsE,GAA+B,OAGnE,SAACR,EAAA,GAAO,CACN/D,UAAWX,EAAQd,QACnBc,QAAS,CACPZ,MAAOY,EAAQZ,OAEjBc,MAAI,EACJyE,SAAU9C,EAAckB,QACxB6B,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdC,gBAAiB,CACfF,SAAU,SACVC,WAAY,QAEdE,aAAW,EACXC,qBAAmB,WAElBX,EAAchE,KAAI,SAAA4E,GAAC,OAClB,SAACxE,EAAA,EAAU,WAA0BE,EAAAA,EAAAA,WAAUsE,IAA9BrE,KAAKD,UAAUsE,GAA+B,SAInE,MACJ,gBACElB,IAAKnC,EACLlB,UAAWX,EAAQ9B,WACnB6C,MAAO,CAAEC,KAAAA,EAAMnC,MAAAA,GAAQ,UAEvB,SAAC6B,EAAA,EAAU,CAACyE,QAAQ,KAAKxE,UAAWX,EAAQjB,eAAe,SACxDwF,EAAgBjE,KAAI,SAAC8E,EAAGC,GAAC,OACxB,SAAC3E,EAAA,EAAU,oBAAuB0E,EAAEE,eAClC,SACD,iBAFmBF,EAAC,YAAIC,GAEN,SAIzB,gBACE,cAAY,sBACZ1E,UAAWX,EAAQrB,kBACnBoF,KAAK,eACLC,IAAKrC,EACLsC,YAAajC,EACbkC,WAAYzB,EACZ0B,YAAa3B,EAAU,SAEtBvB,IAEFM,GACC,SAAC,EAAAgE,KAAI,CACHC,gBAAgB,iBAChBjE,eAAgB,CACdP,KAAMO,EAAec,QACrBoD,IAAKlE,EAAe0B,SAEtByC,gBAnHR,SAA6BC,EAAYC,GACvCA,IACAhD,GACF,EAiHQ1C,KAAMA,EACN2F,QAASjD,EACTkD,UAAWhG,EAAMiG,wBAEjB,OAGV,I,4CCtTMnI,GAAYC,EAAAA,EAAAA,KAAAA,EAAa,iBAAO,CACpCmI,UAAW,CACTC,SAAU,kBACVC,QAAS,QAEXC,OAAQ,CACNC,SAAU,GAEZC,WAAY,CACVC,OAAQ,GAEVC,GAAI,CACFL,QAAS,OACTM,WAAY,SACZC,WAAY,IAEdC,gBAAiB,CACfD,WAAY,GAEdE,UAAW,CACTT,QAAS,QAEZ,IAEKU,GAAgB/G,EAAAA,EAAAA,WAAS,YAAgC,IAA7BC,EAAK,EAALA,MAChC,OACE,SAAC+G,EAAA,EAAU,CACTC,QAAShH,EAAMiH,sBACf3G,MAAM,sBAAqB,UAE3B,SAAC,KAAiB,CAACpB,MAAM,aAG/B,IAsDA,GApDea,EAAAA,EAAAA,WAAS,YAAsC,IAA1BC,EAAK,EAALA,MAC1BE,EAAYpC,IAAZoC,QACR,GAAwCkB,EAAAA,EAAAA,YAAuB,eAAxD8F,EAAY,KAAEC,EAAe,KAC9BC,EAAiBpH,EAAMO,MAAM8G,MAAK,SAAA5G,GAAI,OAAKA,EAAK6G,UAAU,IAChE,OACE,iBAAKzG,UAAWX,EAAQgG,UAAU,WAChC,SAACY,EAAa,CAAC9G,MAAOA,KAEtB,SAAC+G,EAAA,EAAU,CACTC,QAAS,SAAA7E,GAAK,OAAIgF,EAAgBhF,EAAMoF,cAAc,EACtD1G,UAAWX,EAAQqG,WACnBrH,MAAM,YAAW,UAEjB,SAACsI,EAAA,EAAY,MAEbJ,EAiBE,KAhBApH,EAAMO,MAAMC,KAAI,SAAAC,GAAI,OAClB,iBAAmBI,UAAWX,EAAQ2G,UAAU,WAC9C,gBAAKhG,UAAWX,EAAQ0G,gBAAgB,UACtC,SAAC,KAAS,CAAC5G,MAAOS,EAAMgH,UAAU,OAEpC,gBAAK5G,UAAWX,EAAQuG,GAAG,UACzB,UAAC7F,EAAA,EAAU,CACTyE,QAAQ,QACRnG,MAAM,gBACN2B,UAAWX,EAAQuG,GAAG,UAErB3C,KAAK4D,MAAMjH,EAAKkH,eAAenC,eAAe,SAAS,aAVpD/E,EAAKmH,GAaT,KAIZ,gBAAK/G,UAAWX,EAAQmG,SAEvBa,GACC,SAAC,EAAAzB,KAAI,CACHZ,SAAUqC,EACV9G,MAAI,EACJwF,gBAAiB,SAACiC,EAAQ/B,GACxBA,IACAqB,OAAgBlF,EAClB,EACA+D,UAAWhG,EAAM8H,kBACjB/B,QAAS,kBAAMoB,OAAgBlF,EAAU,IAEzC,OAGV,ICzFMnE,GAAYC,EAAAA,EAAAA,KAAAA,EAAa,iBAAO,CACpCgK,UAAW,CACT3B,QAAS,QAEX4B,QAAS,CACPtJ,OAAQ,IACRyH,SAAU,OAEZ8B,QAAS,CACP9B,SAAU,MACV1H,SAAU,YAEZyJ,KAAM,CACJ9B,QAAS,QAEX+B,SAAU,CACR1J,SAAU,YAKZ2J,oBAAqB,CACnB3J,SAAU,WACVG,SAAU,UAEb,IAIKyJ,GAAWtI,EAAAA,EAAAA,WAAS,YAAgC,IAA7BC,EAAK,EAALA,MACnBE,EAAYpC,IAAZoC,QACR,OACE,8BACGF,EAAMsI,OAAO9H,KAAI,SAAA+H,GAChB,IAAOnC,GAAP,OAAkBmC,EAAMC,SAAQ,GAAlB,GACNC,EAAuBrC,EAAvBqC,mBACFC,GAAUC,EAAAA,EAAAA,SAAQJ,EAAO,WAC/B,OAAOE,GACL,gBACE5H,UAAWX,EAAQ8H,QAEnB/G,MAAO,CACL5C,OAAQ2B,EAAM4I,wBACdhK,SAAU,UACV,UAEF,SAAC6J,EAAkB,CAACzI,MAAOoG,KANtBsC,GAQL,IACN,KAGN,IAGMG,GAAwB9I,EAAAA,EAAAA,WAAS,YAAgC,IAA7BC,EAAK,EAALA,MAChCE,EAAYpC,IAAZoC,QACAK,EAAUP,EAAVO,MAEAuI,GADkBC,EAAAA,EAAAA,QAAO/I,GAAzBgJ,cACiCC,YAAY1I,EAAM,GAAG2I,MAAtDJ,eACR,GAAsD1H,EAAAA,EAAAA,WAAS,GAAM,eAA9D+H,EAAmB,KAAEC,EAAsB,KAElD,OACE,iBAAKvI,UAAWX,EAAQkI,oBAAoB,WAC1C,SAAC,EAAM,CAACpI,MAAOA,KACf,SAAC,EAAU,CACTA,MAAOA,EACPmB,kBACE,gBACEF,MAAO,CACLlC,MAAO,OACPT,WAAY6K,EAAsB,OAAS,OAC3C9K,OAAQ,IAEVgL,YAAa,kBAAMD,GAAuB,EAAK,EAC/CE,aAAc,kBAAMF,GAAuB,EAAM,OAIvD,iBAAKvI,UAAWX,EAAQ6H,UAAU,WAChC,SAACe,EAAc,CAAC9I,MAAOO,EAAM,MAC7B,gBAAKM,UAAWX,EAAQgI,KAAK,UAC3B,SAACG,EAAQ,CAACrI,MAAOA,OAEnB,SAAC,EAAAuJ,aAAY,CACXC,OAAQ,SAAAlE,GAAC,OACPtF,EAAMyJ,2BAA2BzJ,EAAM4I,wBAA0BtD,EAAE,EAErErE,MAAO,CACL5C,OAAQ,EACRC,WAAY,WAGhB,SAACwK,EAAc,CAAC9I,MAAOO,EAAM,UAIrC,IACMmJ,GAAyB3J,EAAAA,EAAAA,WAAS,YAAgC,IAA7BC,EAAK,EAALA,MACjCE,EAAYpC,IAAZoC,QACAK,EAAUP,EAAVO,MACAyI,GAAkBD,EAAAA,EAAAA,QAAO/I,GAAzBgJ,cACR,GAAsD5H,EAAAA,EAAAA,WAAS,GAAM,eAA9D+H,EAAmB,KAAEC,EAAsB,KAClD,OACE,iBAAKvI,UAAWX,EAAQkI,oBAAoB,WAC1C,SAAC,EAAM,CAACpI,MAAOA,KACf,SAAC,EAAU,CACTA,MAAOA,EACPmB,kBACE,gBACEF,MAAO,CACLlC,MAAO,OACPT,WAAY6K,EAAsB,OAAS,OAC3C9K,OAAQ,IAEVgL,YAAa,kBAAMD,GAAuB,EAAK,EAC/CE,aAAc,kBAAMF,GAAuB,EAAM,OAKvD,gBAAKvI,UAAWX,EAAQ6H,UAAU,UAChC,iBAAKlH,UAAWX,EAAQ+H,QAAQ,WAC9B,gBAAKpH,UAAWX,EAAQiI,SAAS,SAC9B5H,EAAMC,KAAI,SAAAC,GACT,IAAQqI,EAAmBE,EAAcC,YAAYxI,EAAKyI,MAAlDJ,eACR,OAAO,SAACA,EAAc,CAAe9I,MAAOS,GAAhBA,EAAKmH,GACnC,OAEF,SAACS,EAAQ,CAACrI,MAAOA,WAK3B,IAiBA,GAf8BD,EAAAA,EAAAA,WAC5B,SAAC4J,GAMC,OALkBA,EAAV3J,MAEasI,OAAOjB,MAAK,YAAW,SAARmB,SACzBnB,MAAK,SAACuC,GAAwB,OAAKjB,EAAAA,EAAAA,SAAQiB,EAAG,SAAS,GAAC,KAGjE,SAACf,GAAqB,UAAKc,KAE3B,SAACD,GAAsB,UAAKC,GAEhC,G,qTC7HF,SAASE,EAAW,GAchB,IAbFC,EAAW,EAAXA,YACAC,EAAS,EAATA,UACAC,EAAS,EAATA,UACAC,EAAY,EAAZA,aACAC,EAAY,EAAZA,aACAC,EAAY,EAAZA,aASA,GAAoB,SAAhBL,EACF,MAAO,CACLZ,KAAM,aACNkB,YAAaH,EACbI,cAAeN,EACfO,eAAgBN,GAEb,GAAoB,SAAhBF,EACT,MAAO,CACLZ,KAAM,iBACNqB,YAAaN,EACbI,cAAeN,EACfO,eAAgBN,GAEb,GAAoB,WAAhBF,EACT,MAAO,CACLZ,KAAM,eACNsB,cAAeP,EACfI,cAAeN,EACfO,eAAgBN,GAEb,GAAoB,WAAhBF,EACT,MAAO,CACLZ,KAAM,eACNuB,cAAeR,EACfI,cAAeN,EACfO,eAAgBN,GAEb,GAAoB,aAAhBF,EACT,MAAO,CACLZ,KAAM,uBACNwB,sBAAuBT,EACvBC,aAAAA,EACAC,aAAAA,EACAQ,cAAe,CAACZ,EAAWC,IAExB,GAAoB,oBAAhBF,EACT,MAAO,CACLZ,KAAM,6BACN0B,4BAA6BX,EAC7BC,aAAAA,EACAC,aAAAA,EACAQ,cAAe,CAACZ,EAAWC,IAG7B,MAAM,IAAIa,MAAM,eAEpB,CAIA,IAkKA,GAlKkB9K,EAAAA,EAAAA,WAChB,YACkB,EAAhB+K,iBASK,IARLf,EAAS,EAATA,UACAC,EAAS,EAATA,UACAe,EAAmB,EAAnBA,oBAOA,GAAwC3J,EAAAA,EAAAA,YAAwB,eAAzD+I,EAAY,KAAEa,EAAe,KACpC,GAAwC5J,EAAAA,EAAAA,YAAwB,eAAzD8I,EAAY,KAAEe,EAAe,KACpC,GAAwC7J,EAAAA,EAAAA,YAAwB,eAAzD6I,EAAY,KAAEiB,EAAe,KACpC,GAA0B9J,EAAAA,EAAAA,UAAS,IAAG,eAA/B+J,EAAK,KAAEC,EAAQ,KACtB,GAA0BhK,EAAAA,EAAAA,YAAmB,eAAtCiK,EAAK,KAAEC,EAAQ,KAChBC,EAtGV,SACET,GAEA,OAAOA,EAEHA,EAAiBU,KAEfV,EAAiBW,WAEjBX,EAAiBY,UACnBzJ,CACN,CA2FqB0J,CAAQ1B,GAEnBH,EACJqB,IAAUI,EAAWK,IAAAA,QA5F3B,SAAiBL,GACf,OAAOA,EAASM,SAAS,OACrBN,EAASO,MAAM,EAAGP,EAASQ,OAAS,GACpCR,CACN,CAwFwCS,CAAQT,IAAa,IAsCzD,OApCAxI,EAAAA,EAAAA,YAAU,WACR,IACE,GAAIkH,EAAc,CAChB,IAAMgC,EAAKV,EAAWK,IAAAA,SAAcL,GAAY,UAC1C7C,EAAO,UAAMuD,EAAE,YAAIC,KAAKC,OAC9Bb,OAASrJ,GAET8I,EAAoB,CAClBrC,QAAAA,EACAgD,KAAMO,EACNtB,cAAe,CAACX,EAAWD,GAC3Bb,KAAM,eACNkD,QAASvC,EAAW,CAClBC,YAAAA,EACAC,UAAAA,EACAC,UAAAA,EACAC,aAAAA,EACAC,aAAAA,EACAC,aAAAA,KAGN,CAIF,CAHE,MAAOkC,GACPC,QAAQjB,MAAMgB,GACdf,EAASe,EACX,CACF,GAAG,CACDd,EACAxB,EACAC,EACAE,EACAC,EACAF,EACAH,EACAiB,KAGA,UAACwB,EAAA,EAAK,CAACtL,MAAO,CAAEuL,QAAS,IAAK,UAC3BnB,GAAQ,SAAC,EAAAoB,aAAY,CAACpB,MAAOA,IAAY,MAC1C,SAACzK,EAAA,EAAU,CAACK,MAAO,CAAEtC,UAAW,UAAW,SAAC,qUAO5C,SAAC+N,EAAA,EAAU,CACTvB,MAAOrB,EACP6C,SAAU,SAAAxK,GAAK,OAAIiJ,EAASjJ,EAAMK,OAAO2I,MAAM,EAAC,UAEhD,UAACyB,EAAA,GAAI,CAAC7E,WAAS,EAAC8E,eAAe,SAAQ,WACrC,SAACD,EAAA,GAAI,CAACE,MAAI,YACR,SAACC,EAAA,EAAgB,CAAC5B,MAAM,OAAO6B,SAAS,SAACC,EAAA,EAAK,IAAKC,MAAM,YAE3D,SAACN,EAAA,GAAI,CAACE,MAAI,YACR,SAACC,EAAA,EAAgB,CAAC5B,MAAM,OAAO6B,SAAS,SAACC,EAAA,EAAK,IAAKC,MAAM,YAE3D,SAACN,EAAA,GAAI,CAACE,MAAI,YACR,SAACC,EAAA,EAAgB,CACf5B,MAAM,SACN6B,SAAS,SAACC,EAAA,EAAK,IACfC,MAAM,cAGV,SAACN,EAAA,GAAI,CAACE,MAAI,YACR,SAACC,EAAA,EAAgB,CACf5B,MAAM,SACN6B,SAAS,SAACC,EAAA,EAAK,IACfC,MAAM,cAGV,SAACN,EAAA,GAAI,CAACE,MAAI,YACR,SAACC,EAAA,EAAgB,CACf5B,MAAM,WACN6B,SAAS,SAACC,EAAA,EAAK,IACfC,MAAM,gBAGV,SAACN,EAAA,GAAI,CAACE,MAAI,YACR,SAACC,EAAA,EAAgB,CACf5B,MAAM,kBACN6B,SAAS,SAACC,EAAA,EAAK,IACfC,MAAM,4BAKd,SAACN,EAAA,GAAI,CAAC7E,WAAS,EAAC8E,eAAe,SAAQ,UACrC,SAACD,EAAA,GAAI,CAACE,MAAI,WACG,aAAV3B,GAAkC,oBAAVA,GACvB,4BACE,iBAAKlK,MAAO,CAAEuF,OAAQ,IAAK,UAAC,YAChB2E,EAAM,uFAC0B,KAC1C,cAAGgC,KAAK,kEAAiE,SAAC,oBAI5E,iBAAKlM,MAAO,CAAEmF,QAAS,QAAS,WAC9B,0BACE,SAAC,EAAAgH,aAAY,CACX1B,KAAK,gBACL2B,YAAY,GACZC,SAAUrD,EACVsD,YAAa,SAAAC,GAAG,OAAItC,EAAgBsC,EAAI,OAG5C,0BACE,SAAC,EAAAJ,aAAY,CACX1B,KAAK,8CACL2B,YAAY,GACZC,SAAUpD,EACVqD,YAAa,SAAAC,GAAG,OAAIvC,EAAgBuC,EAAI,OAG5C,0BACE,SAAC,EAAAJ,aAAY,CACX1B,KAAK,+CACL2B,YAAY,GACZC,SAAUnD,EACVoD,YAAa,SAAAC,GAAG,OAAIxC,EAAgBwC,EAAI,aAMhD,SAAC,EAAAJ,aAAY,CACX1B,KAAMP,EAAQA,EAAQ,YAAc,GACpCkC,YAAY,GACZC,SAAUrD,EACVsD,YAAa,SAAAC,GAAG,OAAItC,EAAgBsC,EAAI,UAOtD,I,uDC7OF,IA0DA,GA1DiBzN,EAAAA,EAAAA,WACf,YAUO,IAAD,EATJC,EAAK,EAALA,MACA+J,EAAS,EAATA,UACAC,EAAS,EAATA,UACAyD,EAAc,EAAdA,eAOMC,GAAUC,EAAAA,EAAAA,YAAW3N,GAC3B,EAA4C0N,EAApCpF,OAAAA,OAAM,MAAG,GAAE,IAAyBoF,EAAvBE,cAAAA,OAAa,MAAG,GAAE,EAEjCC,EADS,kBAAOvF,IAAM,OAAKsF,IACAE,QAAO,SAAAC,GAAC,OAxB7C,SAAWxF,EAA8BwB,EAAmBC,GAC1D,IAAMW,GAAgBqD,EAAAA,EAAAA,gBAAezF,EAAO,iBAC5C,OACEoC,EAAcsD,SAASlE,IACvBY,EAAcsD,SAASjE,IACvBzB,EAAMW,KAAK+E,SAAS,UAExB,CAiBiDC,CAAEH,EAAG/D,EAAWD,EAAU,IACjEoE,GAA8B,QAAjB,EAAAN,EAAe,UAAE,aAAjB,EAAmBnF,UAAW,GACjD,GAA0BtH,EAAAA,EAAAA,UAAS+M,GAAW,eAAvChD,EAAK,KAAEC,EAAQ,KAatB,OAZArI,EAAAA,EAAAA,YAAU,WAIRqI,EAAS+C,EACX,GAAG,CAACA,KAEJpL,EAAAA,EAAAA,YAAU,WAGR0K,EAAetC,EACjB,GAAG,CAACA,EAAOsC,KAET,UAAClB,EAAA,EAAK,CAACtL,MAAO,CAAEuL,QAAS,IAAK,WAC5B,SAAC5L,EAAA,EAAU,CAACwN,WAAS,WAAC,6FAKrBP,EAAe9B,QACd,SAACsC,EAAA,EAAM,CACLlD,MAAOA,EACPwB,SAAU,SAAAxK,GAAK,OAAIiJ,EAASjJ,EAAMK,OAAO2I,MAAM,EAAC,SAE/C0C,EAAerN,KAAI,SAAA+H,GAAK,OACvB,SAAC+F,EAAA,EAAQ,CAAqBnD,MAAO5C,EAAMG,QAAQ,UAChD6F,EAAAA,EAAAA,cAAahG,EAAOmF,IADRnF,EAAMG,QAEV,OAIf,SAAC,EAAA+D,aAAY,CACXpB,MAAK,sCAAiCtB,EAAS,YAAIC,OAK7D,ICtDIlM,GAAYC,EAAAA,EAAAA,KAAAA,EAAa,SAAAC,GAAK,MAAK,CACvCwQ,oBAAqB,CACnBhC,QAASxO,EAAMwB,QAAQ,GACvBgH,OAAQ,UAEViI,iBAAkB,CAChB1P,MAAO,MACPyH,OAAQ,UAEX,IAID,SAASM,EAAc,GAcnB,IAbFiE,EAAmB,EAAnBA,oBACA0C,EAAc,EAAdA,eACA3C,EAAgB,EAAhBA,iBACAf,EAAS,EAATA,UACAC,EAAS,EAATA,UACAhK,EAAK,EAALA,MASA,GAA4BoB,EAAAA,EAAAA,UAAS,QAAO,eAArCsN,EAAM,KAAEC,EAAS,KAQxB,OANA5L,EAAAA,EAAAA,YAAU,WACO,SAAX2L,IACF3D,OAAoB9I,GACpBwL,OAAexL,GAEnB,GAAG,CAACyM,EAAQ3D,EAAqB0C,KAE/B,iCACE,UAACmB,EAAA,EAAW,YACV,SAACC,EAAA,EAAS,CAACjH,GAAG,cAAa,SAAC,8CAG5B,UAAC8E,EAAA,EAAU,CACToC,KAAG,EACH3D,MAAOuD,EACP/B,SAAU,SAAAxK,GAAK,OAAIwM,EAAUxM,EAAMK,OAAO2I,MAAM,EAChD,kBAAgB,cAAa,WAE7B,SAAC4B,EAAA,EAAgB,CAAC5B,MAAM,OAAO6B,SAAS,SAACC,EAAA,EAAK,IAAKC,MAAM,UACzD,SAACH,EAAA,EAAgB,CACf5B,MAAM,YACN6B,SAAS,SAACC,EAAA,EAAK,IACfC,MAAM,oBAER,SAACH,EAAA,EAAgB,CACf5B,MAAM,SACN6B,SAAS,SAACC,EAAA,EAAK,IACfC,MAAM,oBAIA,WAAXwB,GACC,SAACK,EAAiB,CAChBhE,oBAAqBA,EACrBD,iBAAkBA,EAClBd,UAAWA,EACXD,UAAWA,IAEX,KACQ,cAAX2E,GACC,SAACM,EAA0B,CACzBhP,MAAOA,EACP+J,UAAWA,EACXC,UAAWA,EACXyD,eAAgBA,IAEhB,OAGV,CAEA,IAAMwB,GAA0BlP,EAAAA,EAAAA,WAC9B,YAAmD,IAAhDC,EAAK,EAALA,MACOE,EAAYpC,IAAZoC,QACFwN,GAAUC,EAAAA,EAAAA,YAAW3N,GACnB2K,EAAkB+C,EAAlB/C,cACR,GAAkCvJ,EAAAA,EAAAA,UAASuJ,EAAc,IAAM,IAAG,eAA3DX,EAAS,KAAEkF,EAAY,KAC9B,GAAkC9N,EAAAA,EAAAA,UAASuJ,EAAc,IAAM,IAAG,eAA3DZ,EAAS,KAAEoF,EAAY,KAC9B,GAA0B/N,EAAAA,EAAAA,YAAmB,eAAtCiK,EAAK,KAAEC,EAAQ,KACtB,GAAgDlK,EAAAA,EAAAA,YAAgB,eAAzD0J,EAAgB,KAAEC,EAAmB,KAC5C,GAAsC3J,EAAAA,EAAAA,YAAkB,eAAjDgO,EAAW,KAAE3B,EAAc,KAyClC,aAFC,OAED,0BAvCA,wGAES4B,EAAAA,EAAAA,wBAAuB3B,GAAS,CAAD,gDAO/B,OAJLpC,OAASrJ,GAEDqN,EAAoB5B,EAApB4B,gBACFC,EAAa,CAACxF,EAAWC,GAAU,KACzChK,EAAK,SACGwP,QAAQC,IACZF,EAAW/O,IAAG,yCAAC,WAAMkP,GAAG,4FACJJ,EAAgBK,gBAAgBD,GAAI,OAA7C,GAAHE,EAAG,OACA,CAAD,qBACA,IAAI/E,MAAM,YAAD,OAAa6E,EAAG,oBAAkB,gCAE5C,CACLxG,KAAM,mBACNvE,QAAS,EACTkL,SAAU,EACVvI,YAAY,EACZwI,iBAAkBF,EAAIG,UACvB,2CACF,mDAZa,KAaf,wBAfGC,SAAQ,gBAiBdhQ,EAAMO,MAAMqC,SAAQ,SAAAnC,GAAI,OAAIA,EAAKwP,SAASjQ,EAAMjB,MAAM,IAClD+L,GACF4C,EAAQwC,aAAapF,GACrB9K,EAAMmQ,YAAYrF,EAAiBpC,UAC1B0G,GACTpP,EAAMoQ,UAAUhB,GACjB,kDAED9C,QAAQjB,MAAM,EAAD,IACbC,EAAS,EAAD,IAAG,0DAEd,wBAGD,IAAM+E,EAAehF,EACrB,OACE,UAACiF,EAAA,EAAS,CAACzP,UAAWX,EAAQsO,oBAAoB,UAC/C6B,GAAe,SAAC,EAAA5D,aAAY,CAACpB,MAAOgF,IAAmB,MACxD,SAACzD,EAAA,GAAI,CACH7E,WAAS,EACTvI,QAAS,EACTqN,eAAe,SACfnG,WAAW,SACX7F,UAAWX,EAAQuO,iBAAiB,UAEpC,UAAC7B,EAAA,GAAI,CAACE,MAAI,aACR,UAACP,EAAA,EAAK,CAACtL,MAAO,CAAEuL,QAAS,IAAK,WAC5B,cAAGvL,MAAO,CAAEtC,UAAW,UAAW,SAAC,+CAGnC,UAACiO,EAAA,GAAI,CACH7E,WAAS,EACTvI,QAAS,EACTqN,eAAe,SACfnG,WAAW,SAAQ,WAEnB,SAACkG,EAAA,GAAI,CAACE,MAAI,YACR,SAAC,EAAAyD,iBAAgB,CACfC,SAAUzG,EACV4C,SAAU,SAAA8D,GAAG,OAAItB,EAAasB,EAAI,EAClC/C,QAASA,OAGb,SAACd,EAAA,GAAI,CAACE,MAAI,YACR,SAAC,EAAAyD,iBAAgB,CACfC,SAAUxG,EACV2C,SAAU,SAAA8D,GAAG,OAAIvB,EAAauB,EAAI,EAClC/C,QAASA,OAGb,SAACd,EAAA,GAAI,CAACE,MAAI,YACR,SAAC8B,EAAA,EAAW,WACV,SAAC8B,EAAA,EAAM,CACL1J,QAjFsC,WAE9B,gCAgFR3B,QAAQ,YACRnG,MAAM,UAAS,SAChB,sBAOT,SAAC4H,EAAa,CACZ2G,eAAgBA,EAChBzD,UAAWA,EACXD,UAAWA,EACXgB,oBAAqBA,EACrBD,iBAAkBA,EAClB9K,MAAOA,WAMnB,IAGF,IC1MA,GAR0BD,EAAAA,EAAAA,WAAS,YAAgC,IAA7BC,EAAK,EAALA,MACpC,OAAQA,EAAM2Q,aAGZ,SAACC,EAAA,QAA8B,CAAC5Q,MAAOA,KAFvC,SAAC6Q,EAAU,CAAC7Q,MAAOA,GAIvB,G","sources":["../../../plugins/linear-comparative-view/src/LinearComparativeView/components/Rubberband.tsx","../../../plugins/linear-comparative-view/src/LinearComparativeView/components/Header.tsx","../../../plugins/linear-comparative-view/src/LinearComparativeView/components/LinearComparativeView.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/ImportCustomTrack.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/ImportSyntenyTrackSelector.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/ImportForm.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/LinearSyntenyView.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { Popover, Tooltip, Typography, alpha } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { stringify } from '@jbrowse/core/util'\nimport { Menu } from '@jbrowse/core/ui'\nimport { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\nimport { LinearComparativeViewModel } from '../model'\n\ntype LCV = LinearComparativeViewModel\ntype LGV = LinearGenomeViewModel\n\nconst useStyles = makeStyles()(theme => {\n  const { tertiary, primary } = theme.palette\n  const background = tertiary\n    ? alpha(tertiary.main, 0.7)\n    : alpha(primary.main, 0.7)\n  return {\n    rubberband: {\n      height: '100%',\n      background,\n      position: 'absolute',\n      zIndex: 10,\n      textAlign: 'center',\n      overflow: 'hidden',\n    },\n    rubberbandControl: {\n      cursor: 'crosshair',\n      width: '100%',\n      minHeight: 8,\n    },\n    rubberbandText: {\n      color: tertiary ? tertiary.contrastText : primary.contrastText,\n    },\n    popover: {\n      mouseEvents: 'none',\n      cursor: 'crosshair',\n    },\n    paper: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n    },\n    guide: {\n      pointerEvents: 'none',\n      height: '100%',\n      width: 1,\n      position: 'absolute',\n      zIndex: 10,\n    },\n    sm: {\n      fontSize: 10,\n    },\n  }\n})\n\nconst VerticalGuide = observer(\n  ({ model, coordX }: { model: LCV; coordX: number }) => {\n    const { classes } = useStyles()\n    return (\n      <Tooltip\n        open\n        placement=\"top\"\n        title={model.views\n          .map(view => view.pxToBp(coordX))\n          .map(elt => (\n            <Typography className={classes.sm} key={JSON.stringify(elt)}>\n              {stringify(elt)}\n            </Typography>\n          ))}\n        arrow\n      >\n        <div\n          className={classes.guide}\n          style={{\n            left: coordX,\n            background: 'red',\n          }}\n        />\n      </Tooltip>\n    )\n  },\n)\n\nfunction Rubberband({\n  model,\n  ControlComponent = <div />,\n}: {\n  model: LCV\n  ControlComponent?: React.ReactElement\n}) {\n  const [startX, setStartX] = useState<number>()\n  const [currentX, setCurrentX] = useState<number>()\n\n  // clientX and clientY used for anchorPosition for menu\n  // offsetX used for calculations about width of selection\n  const [anchorPosition, setAnchorPosition] = useState<{\n    offsetX: number\n    clientX: number\n    clientY: number\n  }>()\n  const [guideX, setGuideX] = useState<number>()\n  const controlsRef = useRef<HTMLDivElement>(null)\n  const rubberbandRef = useRef(null)\n  const { classes } = useStyles()\n  const mouseDragging = startX !== undefined && anchorPosition === undefined\n\n  useEffect(() => {\n    function computeOffsets(offsetX: number, view: LGV) {\n      if (startX === undefined) {\n        return\n      }\n      let leftPx = startX\n      let rightPx = offsetX\n      // handles clicking and dragging to the left\n      if (rightPx < leftPx) {\n        ;[leftPx, rightPx] = [rightPx, leftPx]\n      }\n      const leftOffset = view.pxToBp(leftPx)\n      const rightOffset = view.pxToBp(rightPx)\n\n      return { leftOffset, rightOffset }\n    }\n\n    function globalMouseMove(event: MouseEvent) {\n      if (controlsRef.current && mouseDragging) {\n        const relativeX =\n          event.clientX - controlsRef.current.getBoundingClientRect().left\n        setCurrentX(relativeX)\n      }\n    }\n\n    function globalMouseUp(event: MouseEvent) {\n      if (startX !== undefined && controlsRef.current) {\n        const { clientX, clientY } = event\n        const ref = controlsRef.current\n        const offsetX = clientX - ref.getBoundingClientRect().left\n        // as stated above, store both clientX/Y and offsetX for different\n        // purposes\n        setAnchorPosition({\n          offsetX,\n          clientX,\n          clientY,\n        })\n        model.views.forEach(view => {\n          const args = computeOffsets(offsetX, view)\n          if (args) {\n            const { leftOffset, rightOffset } = args\n            view.setOffsets(leftOffset, rightOffset)\n          }\n        })\n        setGuideX(undefined)\n      }\n    }\n    if (mouseDragging) {\n      window.addEventListener('mousemove', globalMouseMove)\n      window.addEventListener('mouseup', globalMouseUp)\n      return () => {\n        window.removeEventListener('mousemove', globalMouseMove)\n        window.removeEventListener('mouseup', globalMouseUp)\n      }\n    }\n    return () => {}\n  }, [startX, mouseDragging, anchorPosition, model])\n\n  useEffect(() => {\n    if (\n      !mouseDragging &&\n      currentX !== undefined &&\n      startX !== undefined &&\n      Math.abs(currentX - startX) <= 3\n    ) {\n      handleClose()\n    }\n  }, [mouseDragging, currentX, startX])\n\n  function mouseDown(event: React.MouseEvent<HTMLDivElement>) {\n    event.preventDefault()\n    event.stopPropagation()\n    const relativeX =\n      event.clientX -\n      (event.target as HTMLDivElement).getBoundingClientRect().left\n    setStartX(relativeX)\n    setCurrentX(relativeX)\n  }\n\n  function mouseMove(event: React.MouseEvent<HTMLDivElement>) {\n    const target = event.target as HTMLDivElement\n    setGuideX(event.clientX - target.getBoundingClientRect().left)\n  }\n\n  function mouseOut() {\n    setGuideX(undefined)\n    model.views.forEach(view => view.setOffsets(undefined, undefined))\n  }\n\n  function handleClose() {\n    setAnchorPosition(undefined)\n    setStartX(undefined)\n    setCurrentX(undefined)\n  }\n\n  const open = Boolean(anchorPosition)\n\n  function handleMenuItemClick(_: unknown, callback: Function) {\n    callback()\n    handleClose()\n  }\n\n  if (startX === undefined) {\n    return (\n      <>\n        {guideX !== undefined ? (\n          <VerticalGuide model={model} coordX={guideX} />\n        ) : null}\n        <div\n          data-testid=\"rubberband_controls\"\n          className={classes.rubberbandControl}\n          role=\"presentation\"\n          ref={controlsRef}\n          onMouseDown={mouseDown}\n          onMouseOut={mouseOut}\n          onMouseMove={mouseMove}\n        >\n          {ControlComponent}\n        </div>\n      </>\n    )\n  }\n\n  /* Calculating Pixels for Mouse Dragging */\n  const right = anchorPosition ? anchorPosition.offsetX : currentX || 0\n  const left = right < startX ? right : startX\n  const width = Math.abs(right - startX)\n  const { views } = model\n  const leftBpOffset = views.map(view => view.pxToBp(left))\n  const rightBpOffset = views.map(view => view.pxToBp(left + width))\n  const numOfBpSelected = views.map(view => Math.ceil(width * view.bpPerPx))\n  return (\n    <>\n      {rubberbandRef.current ? (\n        <>\n          <Popover\n            className={classes.popover}\n            classes={{\n              paper: classes.paper,\n            }}\n            open\n            anchorEl={rubberbandRef.current}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'left',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right',\n            }}\n            keepMounted\n            disableRestoreFocus\n          >\n            {leftBpOffset.map(l => (\n              <Typography key={JSON.stringify(l)}>{stringify(l)}</Typography>\n            ))}\n          </Popover>\n          <Popover\n            className={classes.popover}\n            classes={{\n              paper: classes.paper,\n            }}\n            open\n            anchorEl={rubberbandRef.current}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left',\n            }}\n            keepMounted\n            disableRestoreFocus\n          >\n            {rightBpOffset.map(l => (\n              <Typography key={JSON.stringify(l)}>{stringify(l)}</Typography>\n            ))}\n          </Popover>\n        </>\n      ) : null}\n      <div\n        ref={rubberbandRef}\n        className={classes.rubberband}\n        style={{ left, width }}\n      >\n        <Typography variant=\"h6\" className={classes.rubberbandText}>\n          {numOfBpSelected.map((n, i) => (\n            <Typography key={`${n}_${i}`}>{`${n.toLocaleString(\n              'en-US',\n            )}bp`}</Typography>\n          ))}\n        </Typography>\n      </div>\n      <div\n        data-testid=\"rubberband_controls\"\n        className={classes.rubberbandControl}\n        role=\"presentation\"\n        ref={controlsRef}\n        onMouseDown={mouseDown}\n        onMouseOut={mouseOut}\n        onMouseMove={mouseMove}\n      >\n        {ControlComponent}\n      </div>\n      {anchorPosition ? (\n        <Menu\n          anchorReference=\"anchorPosition\"\n          anchorPosition={{\n            left: anchorPosition.clientX,\n            top: anchorPosition.clientY,\n          }}\n          onMenuItemClick={handleMenuItemClick}\n          open={open}\n          onClose={handleClose}\n          menuItems={model.rubberBandMenuItems()}\n        />\n      ) : null}\n    </>\n  )\n}\n\nexport default observer(Rubberband)\n","import React, { useState } from 'react'\nimport { IconButton, Typography } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { SearchBox } from '@jbrowse/plugin-linear-genome-view'\nimport { observer } from 'mobx-react'\nimport { Menu } from '@jbrowse/core/ui'\n\n// icons\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\n\n// locals\nimport { LinearComparativeViewModel } from '../model'\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\n\ntype LCV = LinearComparativeViewModel\n\nconst useStyles = makeStyles()(() => ({\n  headerBar: {\n    gridArea: '1/1/auto/span 2',\n    display: 'flex',\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  iconButton: {\n    margin: 5,\n  },\n  bp: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 10,\n  },\n  searchContainer: {\n    marginLeft: 5,\n  },\n  searchBox: {\n    display: 'flex',\n  },\n}))\n\nconst TrackSelector = observer(({ model }: { model: LCV }) => {\n  return (\n    <IconButton\n      onClick={model.activateTrackSelector}\n      title=\"Open track selector\"\n    >\n      <TrackSelectorIcon color=\"primary\" />\n    </IconButton>\n  )\n})\n\nconst Header = observer(function ({ model }: { model: LCV }) {\n  const { classes } = useStyles()\n  const [menuAnchorEl, setMenuAnchorEl] = useState<HTMLElement>()\n  const anyShowHeaders = model.views.some(view => !view.hideHeader)\n  return (\n    <div className={classes.headerBar}>\n      <TrackSelector model={model} />\n\n      <IconButton\n        onClick={event => setMenuAnchorEl(event.currentTarget)}\n        className={classes.iconButton}\n        color=\"secondary\"\n      >\n        <MoreVertIcon />\n      </IconButton>\n      {!anyShowHeaders\n        ? model.views.map(view => (\n            <div key={view.id} className={classes.searchBox}>\n              <div className={classes.searchContainer}>\n                <SearchBox model={view} showHelp={false} />\n              </div>\n              <div className={classes.bp}>\n                <Typography\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                  className={classes.bp}\n                >\n                  {Math.round(view.coarseTotalBp).toLocaleString('en-US')} bp\n                </Typography>\n              </div>\n            </div>\n          ))\n        : null}\n\n      <div className={classes.spacer} />\n\n      {menuAnchorEl ? (\n        <Menu\n          anchorEl={menuAnchorEl}\n          open\n          onMenuItemClick={(_event, callback) => {\n            callback()\n            setMenuAnchorEl(undefined)\n          }}\n          menuItems={model.headerMenuItems()}\n          onClose={() => setMenuAnchorEl(undefined)}\n        />\n      ) : null}\n    </div>\n  )\n})\n\nexport default Header\n","import React, { useState } from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { getConf, AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { getEnv } from '@jbrowse/core/util'\nimport { ResizeHandle } from '@jbrowse/core/ui'\n\n// locals\nimport { LinearComparativeViewModel } from '../model'\nimport Rubberband from './Rubberband'\nimport Header from './Header'\n\nconst useStyles = makeStyles()(() => ({\n  container: {\n    display: 'grid',\n  },\n  overlay: {\n    zIndex: 100,\n    gridArea: '1/1',\n  },\n  content: {\n    gridArea: '1/1',\n    position: 'relative',\n  },\n  grid: {\n    display: 'grid',\n  },\n  relative: {\n    position: 'relative',\n  },\n\n  // this helps keep the vertical guide inside the parent view container,\n  // similar style exists in the single LGV's trackscontainer\n  rubberbandContainer: {\n    position: 'relative',\n    overflow: 'hidden',\n  },\n}))\n\ntype LCV = LinearComparativeViewModel\n\nconst Overlays = observer(({ model }: { model: LCV }) => {\n  const { classes } = useStyles()\n  return (\n    <>\n      {model.tracks.map(track => {\n        const [display] = track.displays\n        const { RenderingComponent } = display\n        const trackId = getConf(track, 'trackId')\n        return RenderingComponent ? (\n          <div\n            className={classes.overlay}\n            key={trackId}\n            style={{\n              height: model.middleComparativeHeight,\n              overflow: 'hidden',\n            }}\n          >\n            <RenderingComponent model={display} />\n          </div>\n        ) : null\n      })}\n    </>\n  )\n})\n\n// The comparative is in the middle of the views\nconst MiddleComparativeView = observer(({ model }: { model: LCV }) => {\n  const { classes } = useStyles()\n  const { views } = model\n  const { pluginManager } = getEnv(model)\n  const { ReactComponent } = pluginManager.getViewType(views[0].type)\n  const [rubberbandMouseOver, setRubberbandMouseOver] = useState(false)\n\n  return (\n    <div className={classes.rubberbandContainer}>\n      <Header model={model} />\n      <Rubberband\n        model={model}\n        ControlComponent={\n          <div\n            style={{\n              width: '100%',\n              background: rubberbandMouseOver ? '#999' : '#ccc',\n              height: 15,\n            }}\n            onMouseOver={() => setRubberbandMouseOver(true)}\n            onMouseLeave={() => setRubberbandMouseOver(false)}\n          />\n        }\n      />\n      <div className={classes.container}>\n        <ReactComponent model={views[0]} />\n        <div className={classes.grid}>\n          <Overlays model={model} />\n        </div>\n        <ResizeHandle\n          onDrag={n =>\n            model.setMiddleComparativeHeight(model.middleComparativeHeight + n)\n          }\n          style={{\n            height: 4,\n            background: '#ccc',\n          }}\n        />\n        <ReactComponent model={views[1]} />\n      </div>\n    </div>\n  )\n})\nconst OverlayComparativeView = observer(({ model }: { model: LCV }) => {\n  const { classes } = useStyles()\n  const { views } = model\n  const { pluginManager } = getEnv(model)\n  const [rubberbandMouseOver, setRubberbandMouseOver] = useState(false)\n  return (\n    <div className={classes.rubberbandContainer}>\n      <Header model={model} />\n      <Rubberband\n        model={model}\n        ControlComponent={\n          <div\n            style={{\n              width: '100%',\n              background: rubberbandMouseOver ? '#aaa' : '#ccc',\n              height: 15,\n            }}\n            onMouseOver={() => setRubberbandMouseOver(true)}\n            onMouseLeave={() => setRubberbandMouseOver(false)}\n          />\n        }\n      />\n\n      <div className={classes.container}>\n        <div className={classes.content}>\n          <div className={classes.relative}>\n            {views.map(view => {\n              const { ReactComponent } = pluginManager.getViewType(view.type)\n              return <ReactComponent key={view.id} model={view} />\n            })}\n          </div>\n          <Overlays model={model} />\n        </div>\n      </div>\n    </div>\n  )\n})\n\nconst LinearComparativeView = observer(\n  (props: { ExtraButtons?: React.ReactNode; model: LCV }) => {\n    const { model } = props\n\n    const middle = model.tracks.some(({ displays }) =>\n      displays.some((d: AnyConfigurationModel) => getConf(d, 'middle')),\n    )\n    return middle ? (\n      <MiddleComparativeView {...props} />\n    ) : (\n      <OverlayComparativeView {...props} />\n    )\n  },\n)\n\nexport default LinearComparativeView\n","import React, { useState, useEffect } from 'react'\nimport { SnapshotIn } from 'mobx-state-tree'\nimport path from 'path'\nimport {\n  FormControlLabel,\n  Grid,\n  Paper,\n  Radio,\n  RadioGroup,\n  Typography,\n} from '@mui/material'\nimport { ErrorMessage, FileSelector } from '@jbrowse/core/ui'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport { observer } from 'mobx-react'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\nfunction getName(\n  sessionTrackData?: { uri: string } | { localPath: string } | { name: string },\n) {\n  return sessionTrackData\n    ? // @ts-ignore\n      sessionTrackData.uri ||\n        // @ts-ignore\n        sessionTrackData.localPath ||\n        // @ts-ignore\n        sessionTrackData.name\n    : undefined\n}\n\nfunction stripGz(fileName: string) {\n  return fileName.endsWith('.gz')\n    ? fileName.slice(0, fileName.length - 3)\n    : fileName\n}\n\nfunction getAdapter({\n  radioOption,\n  assembly1,\n  assembly2,\n  fileLocation,\n  bed1Location,\n  bed2Location,\n}: {\n  radioOption: string\n  assembly1: string\n  assembly2: string\n  fileLocation?: FileLocation\n  bed1Location?: FileLocation\n  bed2Location?: FileLocation\n}) {\n  if (radioOption === '.paf') {\n    return {\n      type: 'PAFAdapter',\n      pafLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.out') {\n    return {\n      type: 'MashMapAdapter',\n      outLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.delta') {\n    return {\n      type: 'DeltaAdapter',\n      deltaLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.chain') {\n    return {\n      type: 'ChainAdapter',\n      chainLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.anchors') {\n    return {\n      type: 'MCScanAnchorsAdapter',\n      mcscanAnchorsLocation: fileLocation,\n      bed1Location,\n      bed2Location,\n      assemblyNames: [assembly1, assembly2],\n    }\n  } else if (radioOption === '.anchors.simple') {\n    return {\n      type: 'MCScanSimpleAnchorsAdapter',\n      mcscanSimpleAnchorsLocation: fileLocation,\n      bed1Location,\n      bed2Location,\n      assemblyNames: [assembly1, assembly2],\n    }\n  } else {\n    throw new Error('Unknown type')\n  }\n}\n\ntype Conf = SnapshotIn<AnyConfigurationModel>\n\nconst OpenTrack = observer(\n  ({\n    sessionTrackData,\n    assembly1,\n    assembly2,\n    setSessionTrackData,\n  }: {\n    sessionTrackData: Conf\n    assembly1: string\n    assembly2: string\n    setSessionTrackData: (arg: Conf) => void\n  }) => {\n    const [bed2Location, setBed2Location] = useState<FileLocation>()\n    const [bed1Location, setBed1Location] = useState<FileLocation>()\n    const [fileLocation, setFileLocation] = useState<FileLocation>()\n    const [value, setValue] = useState('')\n    const [error, setError] = useState<unknown>()\n    const fileName = getName(fileLocation)\n\n    const radioOption =\n      value || (fileName ? path.extname(stripGz(fileName)) : '')\n\n    useEffect(() => {\n      try {\n        if (fileLocation) {\n          const fn = fileName ? path.basename(fileName) : 'MyTrack'\n          const trackId = `${fn}-${Date.now()}`\n          setError(undefined)\n\n          setSessionTrackData({\n            trackId,\n            name: fn,\n            assemblyNames: [assembly2, assembly1],\n            type: 'SyntenyTrack',\n            adapter: getAdapter({\n              radioOption,\n              assembly1,\n              assembly2,\n              fileLocation,\n              bed1Location,\n              bed2Location,\n            }),\n          })\n        }\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    }, [\n      fileName,\n      assembly1,\n      assembly2,\n      bed1Location,\n      bed2Location,\n      fileLocation,\n      radioOption,\n      setSessionTrackData,\n    ])\n    return (\n      <Paper style={{ padding: 12 }}>\n        {error ? <ErrorMessage error={error} /> : null}\n        <Typography style={{ textAlign: 'center' }}>\n          Add a .paf, .out (MashMap), .delta (Mummer), .chain, .anchors or\n          .anchors.simple (MCScan) file to view in the dotplot. These file types\n          can also be gzipped. The first assembly should be the query sequence\n          (e.g. left column of the PAF) and the second assembly should be the\n          target sequence (e.g. right column of the PAF)\n        </Typography>\n        <RadioGroup\n          value={radioOption}\n          onChange={event => setValue(event.target.value)}\n        >\n          <Grid container justifyContent=\"center\">\n            <Grid item>\n              <FormControlLabel value=\".paf\" control={<Radio />} label=\".paf\" />\n            </Grid>\n            <Grid item>\n              <FormControlLabel value=\".out\" control={<Radio />} label=\".out\" />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".delta\"\n                control={<Radio />}\n                label=\".delta\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".chain\"\n                control={<Radio />}\n                label=\".chain\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".anchors\"\n                control={<Radio />}\n                label=\".anchors\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".anchors.simple\"\n                control={<Radio />}\n                label=\".anchors.simple\"\n              />\n            </Grid>\n          </Grid>\n        </RadioGroup>\n        <Grid container justifyContent=\"center\">\n          <Grid item>\n            {value === '.anchors' || value === '.anchors.simple' ? (\n              <div>\n                <div style={{ margin: 20 }}>\n                  Open the {value} and .bed files for both genome assemblies\n                  from the MCScan (Python version) pipeline{' '}\n                  <a href=\"https://github.com/tanghaibao/jcvi/wiki/MCscan-(Python-version)\">\n                    (more info)\n                  </a>\n                </div>\n                <div style={{ display: 'flex' }}>\n                  <div>\n                    <FileSelector\n                      name=\".anchors file\"\n                      description=\"\"\n                      location={fileLocation}\n                      setLocation={loc => setFileLocation(loc)}\n                    />\n                  </div>\n                  <div>\n                    <FileSelector\n                      name=\"genome 1 .bed (left column of anchors file)\"\n                      description=\"\"\n                      location={bed1Location}\n                      setLocation={loc => setBed1Location(loc)}\n                    />\n                  </div>\n                  <div>\n                    <FileSelector\n                      name=\"genome 2 .bed (right column of anchors file)\"\n                      description=\"\"\n                      location={bed2Location}\n                      setLocation={loc => setBed2Location(loc)}\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <FileSelector\n                name={value ? value + ' location' : ''}\n                description=\"\"\n                location={fileLocation}\n                setLocation={loc => setFileLocation(loc)}\n              />\n            )}\n          </Grid>\n        </Grid>\n      </Paper>\n    )\n  },\n)\n\nexport default OpenTrack\n","import React, { useState, useEffect } from 'react'\nimport { Select, MenuItem, Paper, Typography } from '@mui/material'\nimport { getSession } from '@jbrowse/core/util'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport { ErrorMessage } from '@jbrowse/core/ui'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { observer } from 'mobx-react'\n\n// locals\nimport { LinearSyntenyViewModel } from '../model'\n\nfunction f(track: AnyConfigurationModel, assembly1: string, assembly2: string) {\n  const assemblyNames = readConfObject(track, 'assemblyNames')\n  return (\n    assemblyNames.includes(assembly1) &&\n    assemblyNames.includes(assembly2) &&\n    track.type.includes('Synteny')\n  )\n}\n\nconst Selector = observer(\n  ({\n    model,\n    assembly1,\n    assembly2,\n    setShowTrackId,\n  }: {\n    model: LinearSyntenyViewModel\n    assembly1: string\n    assembly2: string\n    setShowTrackId: (arg: string) => void\n  }) => {\n    const session = getSession(model)\n    const { tracks = [], sessionTracks = [] } = session\n    const allTracks = [...tracks, ...sessionTracks] as AnyConfigurationModel[]\n    const filteredTracks = allTracks.filter(t => f(t, assembly2, assembly1))\n    const resetTrack = filteredTracks[0]?.trackId || ''\n    const [value, setValue] = useState(resetTrack)\n    useEffect(() => {\n      // if assembly1/assembly2 changes, then we will want to use this effect to\n      // change the state of the useState because it otherwise gets locked to a\n      // stale value\n      setValue(resetTrack)\n    }, [resetTrack])\n\n    useEffect(() => {\n      // sets track data in a useEffect because the initial load is needed as well\n      // as onChange's to the select box\n      setShowTrackId(value)\n    }, [value, setShowTrackId])\n    return (\n      <Paper style={{ padding: 12 }}>\n        <Typography paragraph>\n          Select a track from the select box below, the track will be shown when\n          you hit \"Launch\".\n        </Typography>\n\n        {filteredTracks.length ? (\n          <Select\n            value={value}\n            onChange={event => setValue(event.target.value)}\n          >\n            {filteredTracks.map(track => (\n              <MenuItem key={track.trackId} value={track.trackId}>\n                {getTrackName(track, session)}\n              </MenuItem>\n            ))}\n          </Select>\n        ) : (\n          <ErrorMessage\n            error={`No synteny tracks found for ${assembly1},${assembly2}`}\n          />\n        )}\n      </Paper>\n    )\n  },\n)\n\nexport default Selector\n","import React, { useState, useEffect } from 'react'\nimport {\n  Button,\n  Container,\n  FormControl,\n  FormLabel,\n  FormControlLabel,\n  Grid,\n  Paper,\n  Radio,\n  RadioGroup,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { SnapshotIn } from 'mobx-state-tree'\nimport { getSession, isSessionWithAddTracks } from '@jbrowse/core/util'\nimport { ErrorMessage, AssemblySelector } from '@jbrowse/core/ui'\n\n// locals\nimport { LinearSyntenyViewModel } from '../model'\nimport ImportCustomTrack from './ImportCustomTrack'\nimport ImportSyntenyTrackSelector from './ImportSyntenyTrackSelector'\n\nconst useStyles = makeStyles()(theme => ({\n  importFormContainer: {\n    padding: theme.spacing(4),\n    margin: '0 auto',\n  },\n  assemblySelector: {\n    width: '75%',\n    margin: '0 auto',\n  },\n}))\n\ntype Conf = SnapshotIn<AnyConfigurationModel>\n\nfunction TrackSelector({\n  setSessionTrackData,\n  setShowTrackId,\n  sessionTrackData,\n  assembly1,\n  assembly2,\n  model,\n}: {\n  sessionTrackData: Conf\n  setSessionTrackData: (arg: Conf) => void\n  setShowTrackId: (arg?: string) => void\n  model: LinearSyntenyViewModel\n  assembly1: string\n  assembly2: string\n}) {\n  const [choice, setChoice] = useState('none')\n\n  useEffect(() => {\n    if (choice === 'none') {\n      setSessionTrackData(undefined)\n      setShowTrackId(undefined)\n    }\n  }, [choice, setSessionTrackData, setShowTrackId])\n  return (\n    <>\n      <FormControl>\n        <FormLabel id=\"group-label\">\n          (Optional) Select or add a synteny track\n        </FormLabel>\n        <RadioGroup\n          row\n          value={choice}\n          onChange={event => setChoice(event.target.value)}\n          aria-labelledby=\"group-label\"\n        >\n          <FormControlLabel value=\"none\" control={<Radio />} label=\"None\" />\n          <FormControlLabel\n            value=\"tracklist\"\n            control={<Radio />}\n            label=\"Existing track\"\n          />\n          <FormControlLabel\n            value=\"custom\"\n            control={<Radio />}\n            label=\"New track\"\n          />\n        </RadioGroup>\n      </FormControl>\n      {choice === 'custom' ? (\n        <ImportCustomTrack\n          setSessionTrackData={setSessionTrackData}\n          sessionTrackData={sessionTrackData}\n          assembly2={assembly2}\n          assembly1={assembly1}\n        />\n      ) : null}\n      {choice === 'tracklist' ? (\n        <ImportSyntenyTrackSelector\n          model={model}\n          assembly1={assembly1}\n          assembly2={assembly2}\n          setShowTrackId={setShowTrackId}\n        />\n      ) : null}\n    </>\n  )\n}\n\nconst LinearSyntenyImportForm = observer(\n  ({ model }: { model: LinearSyntenyViewModel }) => {\n    const { classes } = useStyles()\n    const session = getSession(model)\n    const { assemblyNames } = session\n    const [assembly2, setAssembly2] = useState(assemblyNames[0] || '')\n    const [assembly1, setAssembly1] = useState(assemblyNames[0] || '')\n    const [error, setError] = useState<unknown>()\n    const [sessionTrackData, setSessionTrackData] = useState<Conf>()\n    const [showTrackId, setShowTrackId] = useState<string>()\n\n    async function onOpenClick() {\n      try {\n        if (!isSessionWithAddTracks(session)) {\n          return\n        }\n        setError(undefined)\n\n        const { assemblyManager } = session\n        const assemblies = [assembly1, assembly2]\n        model.setViews(\n          await Promise.all(\n            assemblies.map(async sel => {\n              const asm = await assemblyManager.waitForAssembly(sel)\n              if (!asm) {\n                throw new Error(`Assembly ${sel} failed to load`)\n              }\n              return {\n                type: 'LinearGenomeView' as const,\n                bpPerPx: 1,\n                offsetPx: 0,\n                hideHeader: true,\n                displayedRegions: asm.regions,\n              }\n            }),\n          ),\n        )\n        model.views.forEach(view => view.setWidth(model.width))\n        if (sessionTrackData) {\n          session.addTrackConf(sessionTrackData)\n          model.toggleTrack(sessionTrackData.trackId)\n        } else if (showTrackId) {\n          model.showTrack(showTrackId)\n        }\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    }\n\n    // this is a combination of any displayed error message we have\n    const displayError = error\n    return (\n      <Container className={classes.importFormContainer}>\n        {displayError ? <ErrorMessage error={displayError} /> : null}\n        <Grid\n          container\n          spacing={1}\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          className={classes.assemblySelector}\n        >\n          <Grid item>\n            <Paper style={{ padding: 12 }}>\n              <p style={{ textAlign: 'center' }}>\n                Select assemblies for linear synteny view\n              </p>\n              <Grid\n                container\n                spacing={1}\n                justifyContent=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <AssemblySelector\n                    selected={assembly1}\n                    onChange={val => setAssembly1(val)}\n                    session={session}\n                  />\n                </Grid>\n                <Grid item>\n                  <AssemblySelector\n                    selected={assembly2}\n                    onChange={val => setAssembly2(val)}\n                    session={session}\n                  />\n                </Grid>\n                <Grid item>\n                  <FormControl>\n                    <Button\n                      onClick={onOpenClick}\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      Launch\n                    </Button>\n                  </FormControl>\n                </Grid>\n              </Grid>\n            </Paper>\n            <TrackSelector\n              setShowTrackId={setShowTrackId}\n              assembly2={assembly2}\n              assembly1={assembly1}\n              setSessionTrackData={setSessionTrackData}\n              sessionTrackData={sessionTrackData}\n              model={model}\n            />\n          </Grid>\n        </Grid>\n      </Container>\n    )\n  },\n)\n\nexport default LinearSyntenyImportForm\n","import React from 'react'\nimport { observer } from 'mobx-react'\n\n// locals\nimport LinearComparativeViewComponent from '../../LinearComparativeView/components/LinearComparativeView'\nimport { LinearSyntenyViewModel } from '../model'\nimport ImportForm from './ImportForm'\n\ntype LSV = LinearSyntenyViewModel\n\nconst LinearSyntenyView = observer(({ model }: { model: LSV }) => {\n  return !model.initialized ? (\n    <ImportForm model={model} />\n  ) : (\n    <LinearComparativeViewComponent model={model} />\n  )\n})\n\nexport default LinearSyntenyView\n"],"names":["useStyles","makeStyles","theme","palette","tertiary","primary","rubberband","height","background","alpha","main","position","zIndex","textAlign","overflow","rubberbandControl","cursor","width","minHeight","rubberbandText","color","contrastText","popover","mouseEvents","paper","paddingLeft","spacing","paddingRight","guide","pointerEvents","sm","fontSize","VerticalGuide","observer","model","coordX","classes","Tooltip","open","placement","title","views","map","view","pxToBp","elt","Typography","className","stringify","JSON","arrow","style","left","ControlComponent","useState","startX","setStartX","currentX","setCurrentX","anchorPosition","setAnchorPosition","guideX","setGuideX","controlsRef","useRef","rubberbandRef","mouseDragging","undefined","mouseDown","event","preventDefault","stopPropagation","relativeX","clientX","target","getBoundingClientRect","mouseMove","mouseOut","forEach","setOffsets","handleClose","useEffect","globalMouseMove","current","globalMouseUp","clientY","offsetX","args","leftPx","rightPx","leftOffset","rightOffset","computeOffsets","window","addEventListener","removeEventListener","Math","abs","Boolean","role","ref","onMouseDown","onMouseOut","onMouseMove","right","leftBpOffset","rightBpOffset","numOfBpSelected","ceil","bpPerPx","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","keepMounted","disableRestoreFocus","l","variant","n","i","toLocaleString","Menu","anchorReference","top","onMenuItemClick","_","callback","onClose","menuItems","rubberBandMenuItems","headerBar","gridArea","display","spacer","flexGrow","iconButton","margin","bp","alignItems","marginLeft","searchContainer","searchBox","TrackSelector","IconButton","onClick","activateTrackSelector","menuAnchorEl","setMenuAnchorEl","anyShowHeaders","some","hideHeader","currentTarget","MoreVert","showHelp","round","coarseTotalBp","id","_event","headerMenuItems","container","overlay","content","grid","relative","rubberbandContainer","Overlays","tracks","track","displays","RenderingComponent","trackId","getConf","middleComparativeHeight","MiddleComparativeView","ReactComponent","getEnv","pluginManager","getViewType","type","rubberbandMouseOver","setRubberbandMouseOver","onMouseOver","onMouseLeave","ResizeHandle","onDrag","setMiddleComparativeHeight","OverlayComparativeView","props","d","getAdapter","radioOption","assembly1","assembly2","fileLocation","bed1Location","bed2Location","pafLocation","queryAssembly","targetAssembly","outLocation","deltaLocation","chainLocation","mcscanAnchorsLocation","assemblyNames","mcscanSimpleAnchorsLocation","Error","sessionTrackData","setSessionTrackData","setBed2Location","setBed1Location","setFileLocation","value","setValue","error","setError","fileName","uri","localPath","name","getName","path","endsWith","slice","length","stripGz","fn","Date","now","adapter","e","console","Paper","padding","ErrorMessage","RadioGroup","onChange","Grid","justifyContent","item","FormControlLabel","control","Radio","label","href","FileSelector","description","location","setLocation","loc","setShowTrackId","session","getSession","sessionTracks","filteredTracks","filter","t","readConfObject","includes","f","resetTrack","paragraph","Select","MenuItem","getTrackName","importFormContainer","assemblySelector","choice","setChoice","FormControl","FormLabel","row","ImportCustomTrack","ImportSyntenyTrackSelector","LinearSyntenyImportForm","setAssembly2","setAssembly1","showTrackId","isSessionWithAddTracks","assemblyManager","assemblies","Promise","all","sel","waitForAssembly","asm","offsetPx","displayedRegions","regions","setViews","setWidth","addTrackConf","toggleTrack","showTrack","displayError","Container","AssemblySelector","selected","val","Button","initialized","LinearComparativeView","ImportForm"],"sourceRoot":""}