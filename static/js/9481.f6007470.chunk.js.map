{"version":3,"file":"static/js/9481.f6007470.chunk.js","mappings":"0OA+DA,WAAeA,EAAAA,EAAAA,WApDf,SAAsBC,GAIpB,IAAQC,EAAuBD,EAAvBC,MAAOC,EAAgBF,EAAhBE,YACf,GAAsBC,EAAAA,EAAAA,UAAS,IAAG,eAA3BC,EAAG,KAAEC,EAAM,KACZC,EAAWF,EAAIG,MAAM,yBAC3B,OACE,SAAC,EAAAC,OAAM,CAACC,MAAI,EAACC,QAASR,EAAaS,MAAM,cAAa,UACpD,UAAC,IAAa,YACZ,SAAC,IAAU,UAAC,4BACZ,SAAC,IAAU,CAACC,MAAM,gBAAe,SAAC,yDAGlC,SAAC,IAAS,CACRC,MAAOT,EACPU,SAAU,SAAAC,GAAK,OAAIV,EAAOU,EAAMC,OAAOH,MAAM,EAC7CI,YAAY,iBACZC,WAAY,CACVC,UAAW,EACX,cAAe,uBAEjBC,MAAsB,IAAfhB,EAAIiB,SAAiBf,EAC5BgB,WAA2B,IAAflB,EAAIiB,QAAiBf,EAA+B,GAApB,kBAC5CiB,aAAa,MACb,cAAY,mBAEd,UAAC,IAAa,YACZ,SAAC,IAAM,CACLC,QAAQ,YACRZ,MAAM,UACNa,KAAK,SACLC,WAAS,EACTC,QAAS,WACP1B,EAAM2B,YAAY,MAAOxB,GACzBF,GACF,EAAE,SACH,YAGD,SAAC,IAAM,CACLsB,QAAQ,YACRZ,MAAM,YACNe,QAAS,kBAAMzB,GAAa,EAAC,SAC9B,kBAOX,G","sources":["../../../plugins/alignments/src/LinearPileupDisplay/components/SortByTag.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\n\nfunction SortByTagDlg(props: {\n  model: { setSortedBy: Function }\n  handleClose: () => void\n}) {\n  const { model, handleClose } = props\n  const [tag, setTag] = useState('')\n  const validTag = tag.match(/^[A-Za-z][A-Za-z0-9]$/)\n  return (\n    <Dialog open onClose={handleClose} title=\"Sort by tag\">\n      <DialogContent>\n        <Typography>Set the tag to sort by</Typography>\n        <Typography color=\"textSecondary\">\n          Examples: HP for haplotype, RG for read group, etc.\n        </Typography>\n        <TextField\n          value={tag}\n          onChange={event => setTag(event.target.value)}\n          placeholder=\"Enter tag name\"\n          inputProps={{\n            maxLength: 2,\n            'data-testid': 'sort-tag-name-input',\n          }}\n          error={tag.length === 2 && !validTag}\n          helperText={tag.length === 2 && !validTag ? 'Not a valid tag' : ''}\n          autoComplete=\"off\"\n          data-testid=\"sort-tag-name\"\n        />\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            autoFocus\n            onClick={() => {\n              model.setSortedBy('tag', tag)\n              handleClose()\n            }}\n          >\n            Submit\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => handleClose()}\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </Dialog>\n  )\n}\nexport default observer(SortByTagDlg)\n"],"names":["observer","props","model","handleClose","useState","tag","setTag","validTag","match","Dialog","open","onClose","title","color","value","onChange","event","target","placeholder","inputProps","maxLength","error","length","helperText","autoComplete","variant","type","autoFocus","onClick","setSortedBy"],"sourceRoot":""}