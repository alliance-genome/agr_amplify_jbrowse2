{"version":3,"file":"static/js/7910.1fce936f.chunk.js","mappings":"6NAKA,SAASA,EAAMC,GACb,IAAMC,EAAyB,qBAATC,KACtB,MAAM,YAANC,OAAmBF,EAASD,EAAK,OACnC,CAIO,SAAeI,EAASC,EAAAC,EAAAC,GAAA,OAAAC,EAAAC,MAAA,KAAAC,UAAA,CAmD9B,SAAAF,IAAA,OAAAA,GAAAG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAnDM,SAAAC,EACLC,EACAC,EACAC,GAKS,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAb,EAAAA,EAAAA,KAAAc,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAIiB,GAFpBX,GAAOY,EAAAA,EAAAA,mBAAkBf,GACzBI,EAAQD,EAAKa,cAAcC,aAC3BZ,EAASL,EAAKK,QAChBJ,EAAKiB,gBAAgB,CAADN,EAAAE,KAAA,SAIa,IAH7BR,EAASa,SAASC,cAAc,WAC/BhB,MAAgB,EAARA,EACfE,EAAOD,OAAkB,EAATA,EACVgB,EAAMf,EAAOgB,WAAW,MACrB,CAADV,EAAAE,KAAA,gBAAAF,EAAAW,OAAA,kBAIoB,OAD5BF,EAAIG,MAAM,EAAG,GACbtB,EAAGF,EAAMqB,EAAKjB,EAAOC,GAAOO,EAAAW,OAAA,UAE1BE,EAAAA,EAAAA,KAAA,SACErB,MAAOA,EACPC,OAAQA,EACRqB,UAAWpB,EAAOqB,UAAU,gBAC5B,eAAAf,EAAAE,KAAA,GAIc,qCAAoB,QAGT,OAHvBN,EAAGI,EAAAgB,KACHP,EAAM,IAAIb,EAAIqB,QAAQzB,EAAOC,GACnCH,EAAGF,EAAMqB,EAAKjB,EAAOC,GACfK,EAAS1B,EAAMgB,EAAKf,IAAG2B,EAAAW,OAAA,UAE3BO,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEP,EAAAA,EAAAA,KAAA,QAAAO,UACEP,EAAAA,EAAAA,KAAA,YAAUxC,GAAIyB,EAAOsB,UACnBP,EAAAA,EAAAA,KAAA,QAAMQ,EAAG,EAAGC,EAAG,EAAG9B,MAAOA,EAAOC,OAAQA,SAG5CoB,EAAAA,EAAAA,KAAA,KAEEU,wBAAyB,CAAEC,OAAQf,EAAIgB,SAASC,WAChDC,SAAQ,QAAAnD,OAAUsB,EAAM,WAEzB,yBAAAE,EAAA4B,OAAA,GAAAzC,EAAA,MAGRL,MAAA,KAAAC,UAAA,C","sources":["../../../plugins/alignments/src/shared/renderSvg.tsx"],"sourcesContent":["import React from 'react'\nimport { getContainingView } from '@jbrowse/core/util'\nimport { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\n\n// stabilize clipid under test for snapshot\nfunction getId(id: string) {\n  const isJest = typeof jest === 'undefined'\n  return `arc-clip-${isJest ? id : 'jest'}`\n}\n\ntype LGV = LinearGenomeViewModel\n\nexport async function renderSvg<T extends { id: string; height: number }>(\n  self: T,\n  opts: { rasterizeLayers?: boolean },\n  cb: (\n    model: T,\n    ctx: CanvasRenderingContext2D,\n    width: number,\n    height: number,\n  ) => void,\n) {\n  const view = getContainingView(self) as LGV\n  const width = view.dynamicBlocks.totalWidthPx\n  const height = self.height\n  if (opts.rasterizeLayers) {\n    const canvas = document.createElement('canvas')\n    canvas.width = width * 2\n    canvas.height = height * 2\n    const ctx = canvas.getContext('2d')\n    if (!ctx) {\n      return\n    }\n    ctx.scale(2, 2)\n    cb(self, ctx, width, height)\n    return (\n      <image\n        width={width}\n        height={height}\n        xlinkHref={canvas.toDataURL('image/png')}\n      />\n    )\n  } else {\n    // @ts-ignore\n    const C2S = await import('canvas2svg')\n    const ctx = new C2S.default(width, height)\n    cb(self, ctx, width, height)\n    const clipid = getId(self.id)\n    return (\n      <>\n        <defs>\n          <clipPath id={clipid}>\n            <rect x={0} y={0} width={width} height={height} />\n          </clipPath>\n        </defs>\n        <g\n          /* eslint-disable-next-line react/no-danger */\n          dangerouslySetInnerHTML={{ __html: ctx.getSvg().innerHTML }}\n          clipPath={`url(#${clipid})`}\n        />\n      </>\n    )\n  }\n}\n"],"names":["getId","id","isJest","jest","concat","renderSvg","_x","_x2","_x3","_renderSvg","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","self","opts","cb","view","width","height","canvas","_ctx","C2S","_ctx2","clipid","wrap","_context","prev","next","getContainingView","dynamicBlocks","totalWidthPx","rasterizeLayers","document","createElement","ctx","getContext","abrupt","scale","_jsx","xlinkHref","toDataURL","sent","default","_jsxs","_Fragment","children","x","y","dangerouslySetInnerHTML","__html","getSvg","innerHTML","clipPath","stop"],"sourceRoot":""}