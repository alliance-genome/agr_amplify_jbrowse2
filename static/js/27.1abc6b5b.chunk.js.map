{"version":3,"sources":["../../../node_modules/@material-ui/icons/PermDataSetting.js","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/ImportWizard.js","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/ColumnMenu.js","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/RowMenu.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/Spreadsheet.js","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/GlobalFilterControls.js","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/ColumnFilterControls.js","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/SpreadsheetView.js","../../../node_modules/@material-ui/icons/KeyboardArrowUp.js","../../../node_modules/@material-ui/icons/FilterList.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","useStyles","makeStyles","theme","buttonContainer","marginTop","spacing","NumberEditor","observer","model","disabled","modelPropName","modelSetterName","useState","val","setVal","useEffect","num","parseInt","Number","isNaN","TextField","type","onChange","evt","target","style","width","verticalAlign","ErrorDisplay","error","Typography","variant","color","ImportForm","session","getSession","classes","assemblyNames","assemblyManager","fileType","fileTypes","setFileType","hasColumnNameLine","toggleHasColumnNameLine","selected","setSelected","err","get","_assemblyManager$get","showRowControls","rootModel","getRoot","Container","Grid","margin","container","direction","alignItems","item","FormControl","component","FormLabel","FormGroup","FileSelector","location","fileSource","setLocation","setFileSource","className","formControl","RadioGroup","name","map","fileTypeName","key","FormControlLabel","checked","onClick","control","Radio","label","labelPlacement","Checkbox","AssemblySelector","canCancel","Button","cancelButton","isReadyToOpen","import","ImportWizard","errorContainer","errorMessage","ColumnMenu","viewModel","spreadsheetModel","currentColumnMenu","setColumnMenu","columnMenuClose","columnNumber","colNumber","sortMenuClick","descending","setSortColumns","dataTypeChoices","dataTypeTopLevelMenu","Map","forEach","dataTypeRecord","displayName","categoryName","has","set","isCategory","subMenuItems","push","dataType","columns","dataTypeName","dataTypeDisplayName","isSortingAscending","Boolean","sortColumns","length","find","col","isSortingDescending","stopSortingClick","menuItems","icon","SortIcon","bind","PermDataSettingIcon","subMenu","iterMap","entries","record","typeName","menuEntry","setColumnType","CheckIcon","i","undefined","subTypeName","filter","hasFilter","FilterListIcon","filterControls","addBlankColumnFilter","Menu","anchorEl","open","onMenuItemClick","event","callback","onClose","anchorOrigin","vertical","horizontal","RowMenu","currentRowMenu","rowMenuPosition","setRowMenuPosition","rowMenuClose","rowNumber","row","rowSet","rows","rowMenuItems","_event","root","position","marginBottom","background","grey","overflow","dataTable","borderCollapse","borderSpacing","boxSizing","border","padding","maxWidth","textOverflow","dataTableBody","rowNumCell","textAlign","whiteSpace","userSelect","fontWeight","display","flex","paddingRight","rowMenuButton","right","rowMenuButtonIcon","rowSelector","top","columnHead","zIndex","sortIndicator","fontSize","columnButtonContainer","height","borderLeft","columnButton","topLeftCorner","minWidth","dataRowSelected","indigo","emptyMessage","captionSide","CellData","cell","DataCellReactComponent","spreadsheet","text","DataRow","rowModel","hideRowSelection","columnDisplayOrder","rowClass","dataRow","labelClick","toggleSelect","stopPropagation","preventDefault","isSelected","id","IconButton","currentTarget","ArrowDropDown","cellsWithDerived","SortIndicator","sortSpec","c","KeyboardArrowUpIcon","KeyboardArrowDownIcon","DataTableBody","page","rowsPerPage","slice","DataTable","hasColumnNames","columnButtonClick","currentHoveredColumn","setHoveredColumn","columnHeaderMouseOver","columnHeaderMouseOut","totalRows","count","sortedFilteredRows","getParent","Tooltip","title","placement","unselectAllButton","unselectAll","selectedCount","CropFreeIcon","columnButtonIcon","onMouseOver","onMouseOut","letterFor","n","String","fromCharCode","Math","floor","RangeError","numToColName","Spreadsheet","isLoaded","initialized","textFilterControlEndAdornment","marginRight","TextFilter","textFilter","stringToFind","textFilterValue","setTextFilterValue","debouncedTextFilter","useDebounce","setString","textFilterControl","InputProps","startAdornment","InputAdornment","textFilterControlStartAdornment","FilterIcon","endAdornment","ClearIcon","GlobalFilterControls","rowFullText","columnName","columnFilter","filterIcon","filterIconBg","palette","tertiary","main","FilterOperations","filterModel","ReactComponent","ColumnFilterControls","columnDefinition","Error","removeColumnFilter","CloseIcon","header","paddingLeft","contentArea","viewControls","rowCount","marginLeft","statusBar","light","left","bottom","borderTop","verticallyCenter","justifyContent","flexDirection","spacer","flexGrow","textFilterControlAdornment","ViewControls","setImportMode","iconButton","FolderOpenIcon","RowCountMessage","rowMessage","passingFiltersCount","selectedAndPassingFiltersCount","selectedAndNotPassingFiltersCount","SpreadsheetView","colFilterCount","columnFilters","setPage","setRowsPerPage","hideViewControls","mode","hideFilterControls","filterNumber","importWizard","TablePagination","rowsPerPageOptions","onPageChange","newPage","onRowsPerPageChange","hideVerticalResizeHandle","ResizeHandle","onDrag","resizeHeight","dragHandleHeight"],"mappings":"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","file":"static/js/27.1abc6b5b.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18.99 11.5c.34 0 .67.03 1 .07L20 0 0 20h11.56c-.04-.33-.07-.66-.07-1 0-4.14 3.36-7.5 7.5-7.5zm3.71 7.99c.02-.16.04-.32.04-.49 0-.17-.01-.33-.04-.49l1.06-.83c.09-.08.12-.21.06-.32l-1-1.73c-.06-.11-.19-.15-.31-.11l-1.24.5c-.26-.2-.54-.37-.85-.49l-.19-1.32c-.01-.12-.12-.21-.24-.21h-2c-.12 0-.23.09-.25.21l-.19 1.32c-.3.13-.59.29-.85.49l-1.24-.5c-.11-.04-.24 0-.31.11l-1 1.73c-.06.11-.04.24.06.32l1.06.83c-.02.16-.03.32-.03.49 0 .17.01.33.03.49l-1.06.83c-.09.08-.12.21-.06.32l1 1.73c.06.11.19.15.31.11l1.24-.5c.26.2.54.37.85.49l.19 1.32c.02.12.12.21.25.21h2c.12 0 .23-.09.25-.21l.19-1.32c.3-.13.59-.29.84-.49l1.25.5c.11.04.24 0 .31-.11l1-1.73c.06-.11.03-.24-.06-.32l-1.07-.83zm-3.71 1.01c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z\"\n}), 'PermDataSetting');\n\nexports.default = _default;","import React, { useState, useEffect } from 'react'\n\nimport {\n  FormControl,\n  FormGroup,\n  FormLabel,\n  FormControlLabel,\n  Checkbox,\n  RadioGroup,\n  Radio,\n  Container,\n  Button,\n  Grid,\n  Typography,\n  TextField,\n  makeStyles,\n} from '@material-ui/core'\n\nimport { observer } from 'mobx-react'\nimport { getRoot } from 'mobx-state-tree'\nimport { getSession } from '@jbrowse/core/util'\nimport { FileSelector } from '@jbrowse/core/ui'\nimport AssemblySelector from '@jbrowse/core/ui/AssemblySelector'\n\nconst useStyles = makeStyles(theme => ({\n  buttonContainer: { marginTop: theme.spacing(1) },\n}))\n\nconst NumberEditor = observer(\n  ({ model, disabled, modelPropName, modelSetterName }) => {\n    const [val, setVal] = useState(model[modelPropName])\n    useEffect(() => {\n      const num = parseInt(val, 10)\n      if (!Number.isNaN(num)) {\n        if (num > 0) {\n          model[modelSetterName](num)\n        } else {\n          setVal(1)\n        }\n      }\n    }, [model, modelSetterName, val])\n    return (\n      <TextField\n        value={val}\n        disabled={disabled}\n        type=\"number\"\n        onChange={evt => setVal(evt.target.value)}\n        style={{ width: '2rem', verticalAlign: 'baseline' }}\n      />\n    )\n  },\n)\n\nconst ErrorDisplay = observer(({ error }) => {\n  return (\n    <Typography variant=\"h6\" color=\"error\">\n      {`${error}`}\n    </Typography>\n  )\n})\n\nconst ImportForm = observer(({ model }) => {\n  const session = getSession(model)\n  const classes = useStyles()\n  const { assemblyNames, assemblyManager } = session\n  const {\n    fileType,\n    fileTypes,\n    setFileType,\n    hasColumnNameLine,\n    toggleHasColumnNameLine,\n  } = model\n  const [selected, setSelected] = useState(assemblyNames[0])\n  const err = assemblyManager.get(selected)?.error\n  const showRowControls = model.fileType === 'CSV' || model.fileType === 'TSV'\n  const rootModel = getRoot(model)\n\n  return (\n    <Container>\n      {err ? <ErrorDisplay error={err} /> : null}\n      <Grid\n        style={{ width: '25rem', margin: '0 auto' }}\n        container\n        spacing={1}\n        direction=\"column\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Tabular file</FormLabel>\n            <FormGroup>\n              <FileSelector\n                location={model.fileSource}\n                setLocation={model.setFileSource}\n                rootModel={rootModel}\n              />\n            </FormGroup>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl component=\"fieldset\" className={classes.formControl}>\n            <FormLabel component=\"legend\">File Type</FormLabel>\n            <RadioGroup aria-label=\"file type\" name=\"type\" value={fileType}>\n              <Grid container spacing={1} direction=\"row\">\n                {fileTypes.map(fileTypeName => {\n                  return (\n                    <Grid item key={fileTypeName}>\n                      <FormControlLabel\n                        checked={fileType === fileTypeName}\n                        value={fileTypeName}\n                        onClick={() => setFileType(fileTypeName)}\n                        control={<Radio />}\n                        label={fileTypeName}\n                      />\n                    </Grid>\n                  )\n                })}\n              </Grid>\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n        {showRowControls ? (\n          <Grid item>\n            <FormControl component=\"fieldset\" className={classes.formControl}>\n              <FormLabel component=\"legend\">Column Names</FormLabel>\n              <div>\n                <FormControlLabel\n                  disabled={!showRowControls}\n                  label=\"has column names on line\"\n                  labelPlacement=\"end\"\n                  control={\n                    <Checkbox\n                      checked={hasColumnNameLine}\n                      onClick={toggleHasColumnNameLine}\n                    />\n                  }\n                />\n                <NumberEditor\n                  model={model}\n                  disabled={!showRowControls || !hasColumnNameLine}\n                  modelPropName=\"columnNameLineNumber\"\n                  modelSetterName=\"setColumnNameLineNumber\"\n                />\n              </div>\n            </FormControl>\n          </Grid>\n        ) : null}\n        <Grid item>\n          <AssemblySelector\n            session={session}\n            selected={selected}\n            onChange={val => setSelected(val)}\n          />\n        </Grid>\n        <Grid item className={classes.buttonContainer}>\n          {model.canCancel ? (\n            <Button\n              variant=\"contained\"\n              color=\"default\"\n              onClick={model.cancelButton}\n              disabled={!model.canCancel}\n            >\n              Cancel\n            </Button>\n          ) : null}{' '}\n          <Button\n            disabled={!model.isReadyToOpen || !!err}\n            variant=\"contained\"\n            data-testid=\"open_spreadsheet\"\n            color=\"primary\"\n            onClick={() => model.import(selected)}\n          >\n            Open\n          </Button>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n})\n\nconst ImportWizard = observer(({ model }) => {\n  const classes = useStyles()\n  return (\n    <>\n      {model.error ? (\n        <Container className={classes.errorContainer}>\n          <ErrorDisplay errorMessage={`${model.error}`} />\n        </Container>\n      ) : null}\n      <ImportForm model={model} />\n    </>\n  )\n})\n\nexport default ImportWizard\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { iterMap } from '@jbrowse/core/util'\nimport { Menu } from '@jbrowse/core/ui'\n\n// icons\nimport CheckIcon from '@material-ui/icons/Check'\nimport FilterListIcon from '@material-ui/icons/FilterList'\nimport PermDataSettingIcon from '@material-ui/icons/PermDataSetting'\nimport SortIcon from '@material-ui/icons/Sort'\n\nconst ColumnMenu = observer(\n  ({ viewModel, spreadsheetModel, currentColumnMenu, setColumnMenu }) => {\n    const columnMenuClose = () => {\n      setColumnMenu(null)\n    }\n\n    function handleMenuItemClick(event, callback) {\n      callback()\n      columnMenuClose(null)\n    }\n\n    const columnNumber = currentColumnMenu && currentColumnMenu.colNumber\n\n    const sortMenuClick = descending => {\n      spreadsheetModel.setSortColumns([\n        {\n          columnNumber,\n          descending,\n        },\n      ])\n    }\n\n    const filterMenuClick = () => {\n      viewModel.filterControls.addBlankColumnFilter(columnNumber)\n    }\n\n    const { dataTypeChoices } = spreadsheetModel\n\n    // make a Map of categoryName => [entry...]\n    const dataTypeTopLevelMenu = new Map()\n    dataTypeChoices.forEach(dataTypeRecord => {\n      const { displayName, categoryName } = dataTypeRecord\n      if (categoryName) {\n        if (!dataTypeTopLevelMenu.has(categoryName)) {\n          dataTypeTopLevelMenu.set(categoryName, {\n            isCategory: true,\n            subMenuItems: [],\n          })\n        }\n        dataTypeTopLevelMenu.get(categoryName).subMenuItems.push(dataTypeRecord)\n      } else {\n        dataTypeTopLevelMenu.set(displayName, dataTypeRecord)\n      }\n    })\n\n    const dataType =\n      currentColumnMenu && spreadsheetModel.columns[columnNumber].dataType\n    const dataTypeName = (dataType && dataType.type) || ''\n    const dataTypeDisplayName =\n      (currentColumnMenu &&\n        spreadsheetModel.columns[columnNumber].dataType.displayName) ||\n      ''\n\n    const isSortingAscending = Boolean(\n      spreadsheetModel.sortColumns.length &&\n        currentColumnMenu &&\n        spreadsheetModel.sortColumns.find(\n          col =>\n            col.columnNumber === currentColumnMenu.colNumber && !col.descending,\n        ),\n    )\n    const isSortingDescending = Boolean(\n      spreadsheetModel.sortColumns.length &&\n        currentColumnMenu &&\n        spreadsheetModel.sortColumns.find(\n          col =>\n            col.columnNumber === currentColumnMenu.colNumber && col.descending,\n        ),\n    )\n    function stopSortingClick() {\n      columnMenuClose()\n      spreadsheetModel.setSortColumns([])\n    }\n\n    const menuItems = [\n      // top-level column menu\n      {\n        label: 'Sort ascending',\n        icon: SortIcon,\n        type: 'radio',\n        checked: isSortingAscending,\n        onClick: isSortingAscending\n          ? stopSortingClick\n          : sortMenuClick.bind(null, false),\n      },\n      {\n        label: 'Sort descending',\n        icon: SortIcon,\n        type: 'radio',\n        checked: isSortingDescending,\n        onClick: isSortingDescending\n          ? stopSortingClick\n          : sortMenuClick.bind(null, true),\n      },\n      // data type menu\n      {\n        label: `Type: ${dataTypeDisplayName}`,\n        icon: PermDataSettingIcon,\n        subMenu: iterMap(\n          dataTypeTopLevelMenu.entries(),\n          ([displayName, record]) => {\n            const { subMenuItems, typeName } = record\n            if (typeName) {\n              const menuEntry = {\n                label: displayName || typeName,\n                onClick: () => {\n                  spreadsheetModel.setColumnType(columnNumber, typeName)\n                },\n              }\n              if (dataTypeName === typeName) {\n                menuEntry.icon = CheckIcon\n              }\n              return menuEntry\n            }\n            if (subMenuItems) {\n              return {\n                label: displayName,\n                icon: subMenuItems.find(i => i.typeName === dataTypeName)\n                  ? CheckIcon\n                  : undefined,\n                subMenu: subMenuItems.map(\n                  ({ typeName: subTypeName, displayName: subDisplayName }) => ({\n                    label: subDisplayName,\n                    icon: subTypeName === dataTypeName ? CheckIcon : undefined,\n                    onClick: () => {\n                      spreadsheetModel.setColumnType(columnNumber, subTypeName)\n                    },\n                  }),\n                ),\n              }\n            }\n            return null\n          },\n        ).filter(Boolean),\n      },\n    ]\n\n    // don't display the filter item if this data type doesn't have filtering\n    // implemented\n    if (dataType && dataType.hasFilter) {\n      menuItems.push({\n        label: 'Create filter',\n        icon: FilterListIcon,\n        onClick: filterMenuClick.bind(null, true),\n      })\n    }\n\n    return (\n      <Menu\n        anchorEl={currentColumnMenu && currentColumnMenu.anchorEl}\n        open={Boolean(currentColumnMenu)}\n        onMenuItemClick={handleMenuItemClick}\n        onClose={columnMenuClose}\n        menuItems={menuItems}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n      />\n    )\n  },\n)\n\nexport default ColumnMenu\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { Menu, MenuItem } from '@jbrowse/core/ui'\nimport { Instance } from 'mobx-state-tree'\n\nimport SpreadsheetModel from '../models/Spreadsheet'\nimport ViewModel from '../models/SpreadsheetView'\n\nexport interface Props {\n  viewModel: Instance<typeof ViewModel>\n  spreadsheetModel: Instance<typeof SpreadsheetModel>\n}\n\nconst RowMenu = observer(({ viewModel, spreadsheetModel }: Props) => {\n  const currentRowMenu = spreadsheetModel.rowMenuPosition\n  const { setRowMenuPosition } = spreadsheetModel\n\n  const rowMenuClose = () => {\n    setRowMenuPosition(null)\n  }\n\n  const rowNumber = spreadsheetModel.rowMenuPosition?.rowNumber\n  if (rowNumber === undefined) {\n    return null\n  }\n\n  const row = spreadsheetModel.rowSet.rows[rowNumber - 1]\n\n  function handleMenuItemClick(_event: unknown, callback: Function) {\n    callback(viewModel, spreadsheetModel, rowNumber, row)\n    rowMenuClose()\n  }\n\n  // got through and evaluate all the `disabled` callbacks of the menu items\n  const menuItems: MenuItem[] = viewModel.rowMenuItems.map(item => {\n    if (typeof item.disabled === 'function') {\n      const disabled = item.disabled(\n        viewModel,\n        spreadsheetModel,\n        rowNumber,\n        row,\n      )\n      return { ...item, disabled }\n    }\n    return item\n  })\n\n  return (\n    <Menu\n      anchorEl={currentRowMenu && currentRowMenu.anchorEl}\n      open={Boolean(currentRowMenu)}\n      onMenuItemClick={handleMenuItemClick}\n      onClose={rowMenuClose}\n      menuItems={menuItems}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'right',\n      }}\n    />\n  )\n})\n\nexport default RowMenu\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { getParent } from 'mobx-state-tree'\nimport { grey, indigo } from '@material-ui/core/colors'\nimport {\n  Checkbox,\n  IconButton,\n  Tooltip,\n  FormControlLabel,\n  makeStyles,\n} from '@material-ui/core'\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp'\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown'\nimport CropFreeIcon from '@material-ui/icons/CropFree'\nimport ArrowDropDown from '@material-ui/icons/ArrowDropDown'\nimport ColumnMenu from './ColumnMenu'\nimport RowMenu from './RowMenu'\n\n/* eslint-disable react/prop-types */\nexport function numToColName(num) {\n  function letterFor(n) {\n    return String.fromCharCode(n + 65)\n  }\n  if (num >= 0) {\n    if (num < 26) {\n      return letterFor(num)\n    }\n    if (num < 27 * 26) {\n      return letterFor(Math.floor(num / 26 - 1)) + letterFor(num % 26)\n    }\n  }\n\n  throw new RangeError('column number out of range')\n}\n\nconst useStyles = makeStyles(theme => {\n  return {\n    root: {\n      position: 'relative',\n      marginBottom: theme.spacing(1),\n      background: grey[500],\n      overflow: 'auto',\n    },\n    dataTable: {\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      boxSizing: 'border-box',\n      '& td': {\n        border: `1px solid ${grey[300]}`,\n        padding: '0.2rem',\n        maxWidth: '50em',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n      },\n    },\n    dataTableBody: {\n      background: 'white',\n    },\n    rowNumCell: {\n      background: grey[200],\n      textAlign: 'left',\n      border: `1px solid ${grey[300]}`,\n      position: 'relative',\n      padding: '0 2px 0 0',\n      whiteSpace: 'nowrap',\n      userSelect: 'none',\n    },\n    rowNumber: {\n      fontWeight: 'normal',\n      display: 'inline-block',\n      flex: 'none',\n      paddingRight: '20px',\n      margin: 0,\n      whiteSpace: 'nowrap',\n    },\n    rowMenuButton: {\n      padding: 0,\n      margin: 0,\n      position: 'absolute',\n      right: 0,\n      display: 'inline-block',\n      whiteSpace: 'nowrap',\n      flex: 'none',\n    },\n    rowMenuButtonIcon: {},\n    rowSelector: {\n      position: 'relative',\n      top: '-2px',\n      margin: 0,\n      padding: '0 0.2rem',\n    },\n    columnHead: {\n      fontWeight: 'normal',\n      background: grey[200],\n      border: `1px solid ${grey[300]}`,\n      position: 'sticky',\n      top: '-1px',\n      zIndex: 2,\n      whiteSpace: 'nowrap',\n      padding: [[0, theme.spacing(1)]],\n    },\n    sortIndicator: {\n      position: 'relative',\n      top: '0.2rem',\n      fontSize: '1rem',\n    },\n    columnButtonContainer: {\n      display: 'none',\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      background: grey[100],\n      height: '100%',\n      boxSizing: 'border-box',\n      borderLeft: `1px solid ${grey[300]}`,\n    },\n    columnButton: {\n      padding: 0,\n    },\n    topLeftCorner: {\n      background: grey[300],\n      position: 'sticky',\n      top: '-1px',\n      zIndex: 2,\n      minWidth: theme.spacing(2),\n      textAlign: 'left',\n    },\n    dataRowSelected: {\n      background: indigo[100],\n      '& th': {\n        background: indigo[100],\n      },\n    },\n    emptyMessage: { captionSide: 'bottom' },\n  }\n})\n\nconst CellData = observer(({ cell, spreadsheetModel, columnNumber }) => {\n  const { dataType } = spreadsheetModel.columns.get(columnNumber)\n  if (dataType.DataCellReactComponent) {\n    return (\n      <dataType.DataCellReactComponent\n        cell={cell}\n        dataType={dataType}\n        columnNumber={columnNumber}\n        spreadsheet={spreadsheetModel}\n      />\n    )\n  }\n\n  return cell.text\n})\n\nconst DataRow = observer(({ rowModel, rowNumber, spreadsheetModel }) => {\n  const classes = useStyles()\n  const { hideRowSelection, columnDisplayOrder } = spreadsheetModel\n  let rowClass = classes.dataRow\n  if (rowModel.isSelected) {\n    rowClass += ` ${classes.dataRowSelected}`\n  }\n\n  function labelClick(evt) {\n    rowModel.toggleSelect()\n    evt.stopPropagation()\n    evt.preventDefault()\n  }\n\n  function rowButtonClick(event) {\n    spreadsheetModel.setRowMenuPosition({\n      anchorEl: event.currentTarget,\n      rowNumber,\n    })\n    event.preventDefault()\n    event.stopPropagation()\n  }\n\n  return (\n    <tr className={rowClass}>\n      <th className={classes.rowNumCell} onClick={labelClick}>\n        <FormControlLabel\n          className={classes.rowNumber}\n          control={\n            hideRowSelection ? null : (\n              <Checkbox\n                className={classes.rowSelector}\n                checked={rowModel.isSelected}\n                onClick={labelClick}\n              />\n            )\n          }\n          label={rowModel.id}\n        />\n        <IconButton\n          className={classes.rowMenuButton}\n          onClick={rowButtonClick}\n          color=\"secondary\"\n        >\n          <ArrowDropDown className={classes.rowMenuButtonIcon} />\n        </IconButton>\n      </th>\n      {columnDisplayOrder.map(colNumber => (\n        <td key={colNumber}>\n          <CellData\n            cell={rowModel.cellsWithDerived[colNumber]}\n            spreadsheetModel={spreadsheetModel}\n            columnNumber={colNumber}\n          />\n        </td>\n      ))}\n    </tr>\n  )\n})\n\nfunction SortIndicator({ model, columnNumber }) {\n  const classes = useStyles()\n  const sortSpec = model.sortColumns.find(c => c.columnNumber === columnNumber)\n\n  if (sortSpec) {\n    const { descending } = sortSpec\n    return descending ? (\n      <KeyboardArrowUpIcon className={classes.sortIndicator} />\n    ) : (\n      <KeyboardArrowDownIcon className={classes.sortIndicator} />\n    )\n  }\n  return null\n}\n\nconst DataTableBody = observer(\n  ({ rows, spreadsheetModel, page, rowsPerPage }) => {\n    const classes = useStyles()\n    return (\n      <tbody className={classes.dataTableBody}>\n        {rows.slice(rowsPerPage * page, rowsPerPage * (page + 1)).map(row => (\n          <DataRow\n            key={row.id}\n            rowNumber={row.id}\n            spreadsheetModel={spreadsheetModel}\n            rowModel={row}\n          />\n        ))}\n      </tbody>\n    )\n  },\n)\n\nconst DataTable = observer(({ model, page, rowsPerPage }) => {\n  const { columnDisplayOrder, columns, hasColumnNames, rowSet } = model\n  const classes = useStyles()\n\n  // column menu active state\n  const [currentColumnMenu, setColumnMenu] = useState(null)\n  function columnButtonClick(colNumber, evt) {\n    setColumnMenu({\n      colNumber,\n      anchorEl: evt.currentTarget,\n    })\n  }\n\n  // column header hover state\n  const [currentHoveredColumn, setHoveredColumn] = useState(null)\n  function columnHeaderMouseOver(colNumber /* , evt */) {\n    setHoveredColumn(colNumber)\n  }\n  function columnHeaderMouseOut(/* colNumber, evt */) {\n    setHoveredColumn(null)\n  }\n\n  const totalRows = rowSet.count\n  const rows = rowSet.sortedFilteredRows\n\n  return (\n    <>\n      <ColumnMenu\n        viewModel={getParent(model)}\n        spreadsheetModel={model}\n        currentColumnMenu={currentColumnMenu}\n        setColumnMenu={setColumnMenu}\n      />\n      <RowMenu viewModel={getParent(model)} spreadsheetModel={model} />\n      <table className={classes.dataTable}>\n        <thead>\n          <tr>\n            <th className={classes.topLeftCorner}>\n              <Tooltip title=\"Unselect all\" placement=\"right\">\n                <span>\n                  <IconButton\n                    className={classes.unselectAllButton}\n                    onClick={model.unselectAll}\n                    disabled={!model.rowSet.selectedCount}\n                    color=\"secondary\"\n                  >\n                    <CropFreeIcon className={classes.columnButtonIcon} />\n                  </IconButton>\n                </span>\n              </Tooltip>\n            </th>\n            {columnDisplayOrder.map(colNumber => (\n              <th\n                className={classes.columnHead}\n                key={colNumber}\n                onMouseOver={columnHeaderMouseOver.bind(null, colNumber)}\n                onMouseOut={columnHeaderMouseOut.bind(null, colNumber)}\n              >\n                <SortIndicator model={model} columnNumber={colNumber} />\n                {(hasColumnNames && columns.get(colNumber).name) ||\n                  numToColName(colNumber)}\n                <div\n                  className={classes.columnButtonContainer}\n                  style={{\n                    display:\n                      currentHoveredColumn === colNumber ||\n                      (currentColumnMenu &&\n                        currentColumnMenu.colNumber === colNumber)\n                        ? 'block'\n                        : 'none',\n                  }}\n                >\n                  <IconButton\n                    className={classes.columnButton}\n                    onClick={columnButtonClick.bind(null, colNumber)}\n                    color=\"secondary\"\n                  >\n                    <ArrowDropDown className={classes.columnButtonIcon} />\n                  </IconButton>\n                </div>\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <DataTableBody\n          rows={rows}\n          spreadsheetModel={model}\n          page={page}\n          rowsPerPage={rowsPerPage}\n        />\n        {!rows.length ? (\n          <caption className={classes.emptyMessage}>\n            {totalRows ? 'no rows match criteria' : 'no rows present'}\n          </caption>\n        ) : null}\n      </table>\n    </>\n  )\n})\n\nconst Spreadsheet = observer(({ model, height, page, rowsPerPage }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root} style={{ height }}>\n      {model && model.rowSet && model.rowSet.isLoaded && model.initialized ? (\n        <DataTable model={model} page={page} rowsPerPage={rowsPerPage} />\n      ) : (\n        <div>Loading...</div>\n      )}\n    </div>\n  )\n})\n\nexport default Spreadsheet\n","import React, { useState, useEffect } from 'react'\n\nimport { IconButton, InputAdornment, TextField } from '@material-ui/core'\nimport ClearIcon from '@material-ui/icons/Clear'\nimport FilterIcon from '@material-ui/icons/FilterList'\n\nimport { observer } from 'mobx-react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useDebounce } from '@jbrowse/core/util'\n\nconst useStyles = makeStyles((/* theme */) => {\n  return {\n    textFilterControlEndAdornment: { marginRight: '-18px' },\n  }\n})\n\nconst TextFilter = observer(({ textFilter }) => {\n  const classes = useStyles()\n  // this paragraph is silliness to debounce the text filter input\n  const [textFilterValue, setTextFilterValue] = useState(\n    textFilter.stringToFind,\n  )\n  const debouncedTextFilter = useDebounce(textFilterValue, 500)\n  useEffect(() => {\n    textFilter.setString(debouncedTextFilter)\n  }, [debouncedTextFilter, textFilter])\n\n  return (\n    <div className={classes.filterControls}>\n      <TextField\n        label=\"text filter\"\n        value={textFilterValue}\n        onChange={evt => setTextFilterValue(evt.target.value)}\n        className={classes.textFilterControl}\n        variant=\"outlined\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment\n              className={classes.textFilterControlStartAdornment}\n              position=\"start\"\n            >\n              <FilterIcon />\n            </InputAdornment>\n          ),\n          endAdornment: (\n            <InputAdornment\n              className={classes.textFilterControlEndAdornment}\n              position=\"end\"\n            >\n              <IconButton\n                aria-label=\"clear filter\"\n                onClick={() => setTextFilterValue('')}\n                color=\"secondary\"\n              >\n                <ClearIcon />\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n    </div>\n  )\n})\n\nconst GlobalFilterControls = observer(({ model }) => {\n  // const classes = useStyles()\n  const textFilter = model.filterControls.rowFullText\n  return <TextFilter textFilter={textFilter} />\n})\n\nexport default GlobalFilterControls\n","import FilterIcon from '@material-ui/icons/FilterList'\nimport CloseIcon from '@material-ui/icons/Close'\n/* eslint-disable react/prop-types */\nimport { observer } from 'mobx-react'\nimport { getParent } from 'mobx-state-tree'\nimport React from 'react'\nimport { Grid, IconButton, Typography, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => {\n  return {\n    columnName: { verticalAlign: 'middle', paddingRight: '0.3em' },\n    columnFilter: {\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      boxSizing: 'border-box',\n      width: '100%',\n      position: 'relative',\n    },\n    filterIcon: { position: 'relative', top: '12px' },\n    filterIconBg: {\n      background: theme.palette.tertiary.main,\n      color: 'white',\n      padding: [[0, theme.spacing(1.5)]],\n    },\n  }\n})\n\nfunction FilterOperations({ filterModel }) {\n  if (filterModel) {\n    return <filterModel.ReactComponent filterModel={filterModel} />\n  }\n  return null\n}\n\nconst ColumnFilterControls = observer(\n  ({ viewModel, filterModel, columnNumber, height }) => {\n    const classes = useStyles()\n\n    const removeFilter = () => {\n      const filterControls = getParent(filterModel, 2)\n      filterControls.removeColumnFilter(filterModel)\n    }\n\n    const columnDefinition = viewModel.spreadsheet.columns[columnNumber]\n    if (!columnDefinition) {\n      throw new Error('no column definition! filters are probably out of date')\n    }\n    return (\n      <Grid\n        container\n        direction=\"row\"\n        className={classes.columnFilter}\n        style={{ height }}\n      >\n        <Grid item className={classes.filterIconBg}>\n          <FilterIcon className={classes.filterIcon} />\n        </Grid>\n        <Grid item>\n          <IconButton\n            onClick={removeFilter}\n            title=\"remove filter\"\n            color=\"secondary\"\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography className={classes.columnName} component=\"span\">\n            {columnDefinition.name}\n          </Typography>{' '}\n          <FilterOperations filterModel={filterModel} />\n        </Grid>\n      </Grid>\n    )\n  },\n)\n\nexport default ColumnFilterControls\n","import React from 'react'\nimport {\n  FormGroup,\n  Grid,\n  IconButton,\n  TablePagination,\n  makeStyles,\n} from '@material-ui/core'\nimport { observer } from 'mobx-react'\nimport { ResizeHandle } from '@jbrowse/core/ui'\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen'\n\nimport ImportWizard from './ImportWizard'\nimport Spreadsheet from './Spreadsheet'\nimport GlobalFilterControls from './GlobalFilterControls'\nimport ColumnFilterControls from './ColumnFilterControls'\n\nconst headerHeight = 52\nconst colFilterHeight = 46\nconst statusBarHeight = 40\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'relative',\n    marginBottom: theme.spacing(1),\n    background: 'white',\n    overflow: 'hidden',\n  },\n  header: {\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    boxSizing: 'border-box',\n    height: headerHeight,\n    paddingLeft: theme.spacing(1),\n  },\n  contentArea: { overflow: 'auto' },\n  columnFilter: {\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    boxSizing: 'border-box',\n    height: headerHeight,\n    paddingLeft: theme.spacing(1),\n  },\n  viewControls: {\n    margin: 0,\n  },\n  rowCount: {\n    marginLeft: theme.spacing(1),\n  },\n  statusBar: {\n    position: 'absolute',\n    background: theme.palette.background.light,\n    left: 0,\n    bottom: 0,\n    height: statusBarHeight,\n    width: '100%',\n    boxSizing: 'border-box',\n    borderTop: '1px outset #b1b1b1',\n    paddingLeft: theme.spacing(1),\n  },\n  verticallyCenter: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  textFilterControlAdornment: { marginRight: '-18px' },\n}))\n\nconst ViewControls = observer(({ model }) => {\n  const classes = useStyles()\n  return (\n    <Grid\n      className={classes.viewControls}\n      container\n      spacing={1}\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <Grid item>\n        <IconButton\n          onClick={() => model.setImportMode()}\n          className={classes.iconButton}\n          title=\"open a tabular file\"\n          data-testid=\"spreadsheet_view_open\"\n          color=\"secondary\"\n        >\n          <FolderOpenIcon />\n        </IconButton>\n      </Grid>\n    </Grid>\n  )\n})\n\nconst RowCountMessage = observer(({ spreadsheet }) => {\n  if (spreadsheet && spreadsheet.rowSet.isLoaded) {\n    const {\n      passingFiltersCount,\n      count,\n      selectedCount,\n      selectedAndPassingFiltersCount,\n    } = spreadsheet.rowSet\n\n    let rowMessage\n    if (passingFiltersCount !== count) {\n      rowMessage = `${spreadsheet.rowSet.passingFiltersCount} rows of ${spreadsheet.rowSet.count} total`\n      if (selectedCount) {\n        rowMessage += `, ${selectedAndPassingFiltersCount} selected`\n        const selectedAndNotPassingFiltersCount =\n          selectedCount - selectedAndPassingFiltersCount\n        if (selectedAndNotPassingFiltersCount) {\n          rowMessage += ` (${selectedAndNotPassingFiltersCount} selected rows do not pass filters)`\n        }\n      }\n    } else {\n      rowMessage = `${spreadsheet.rowSet.count} rows`\n      if (selectedCount) {\n        rowMessage += `, ${selectedCount} selected`\n      }\n    }\n    return rowMessage\n  }\n  return null\n})\n\nconst SpreadsheetView = observer(({ model }) => {\n  const classes = useStyles()\n\n  const { spreadsheet, filterControls } = model\n\n  const colFilterCount = filterControls.columnFilters.length\n  const [page, setPage] = React.useState(0)\n  const [rowsPerPage, setRowsPerPage] = React.useState(100)\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage)\n  }\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value)\n    setPage(0)\n  }\n\n  return (\n    <div\n      className={classes.root}\n      style={{ height: model.height, width: model.width }}\n      data-testid={model.id}\n    >\n      <Grid container direction=\"row\" className={classes.header}>\n        {model.hideViewControls ? null : (\n          <Grid item>\n            <ViewControls model={model} />\n          </Grid>\n        )}\n        {model.mode !== 'display' || model.hideFilterControls ? null : (\n          <Grid item>\n            <GlobalFilterControls model={model} />\n          </Grid>\n        )}\n      </Grid>\n\n      {model.mode !== 'display' || model.hideFilterControls\n        ? null\n        : model.filterControls.columnFilters.map((filter, filterNumber) => {\n            return (\n              <ColumnFilterControls\n                key={`${filter.columnNumber}-${filterNumber}`}\n                viewModel={model}\n                filterModel={filter}\n                columnNumber={filter.columnNumber}\n                height={colFilterHeight}\n              />\n            )\n          })}\n\n      <div\n        className={classes.contentArea}\n        style={{ height: model.height - headerHeight }}\n      >\n        {model.mode !== 'import' ? null : (\n          <ImportWizard model={model.importWizard} />\n        )}\n        <div\n          style={{\n            position: 'relative',\n            display: model.mode === 'display' ? undefined : 'none',\n          }}\n        >\n          <Spreadsheet\n            page={page}\n            rowsPerPage={rowsPerPage}\n            model={spreadsheet}\n            height={\n              model.height -\n              headerHeight -\n              colFilterCount * colFilterHeight -\n              statusBarHeight\n            }\n          />\n        </div>\n      </div>\n\n      <div\n        className={classes.statusBar}\n        style={{ display: model.mode === 'display' ? undefined : 'none' }}\n      >\n        {spreadsheet ? (\n          <FormGroup row>\n            <div className={classes.verticallyCenter}>\n              <RowCountMessage spreadsheet={spreadsheet} />\n            </div>\n            <div className={classes.spacer} />\n            <TablePagination\n              rowsPerPageOptions={[10, 25, 100, 1000]}\n              count={spreadsheet.rowSet.count}\n              component=\"div\"\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n            <div className={classes.spacer} />\n          </FormGroup>\n        ) : null}\n      </div>\n      {model.hideVerticalResizeHandle ? null : (\n        <ResizeHandle\n          onDrag={model.resizeHeight}\n          style={{\n            height: model.dragHandleHeight,\n            position: 'absolute',\n            bottom: 0,\n            left: 0,\n            background: '#ccc',\n            boxSizing: 'border-box',\n            borderTop: '1px solid #fafafa',\n          }}\n        />\n      )}\n    </div>\n  )\n})\n\nexport default SpreadsheetView\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z\"\n}), 'KeyboardArrowUp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\n\nexports.default = _default;"],"sourceRoot":""}