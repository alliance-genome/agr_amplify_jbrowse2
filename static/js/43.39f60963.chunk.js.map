{"version":3,"sources":["../../../plugins/config/src/ConfigurationEditorWidget/components/CodeEditor.js"],"names":["fontSize","fontFamily","useStyles","makeStyles","callbackEditor","overflowX","marginTop","borderBottom","syntaxHighlighter","margin","CodeEditor","contents","setContents","classes","theme","useTheme","useEffect","SyntaxHighlighter","registerLanguage","json","React","Editor","className","value","onValueChange","highlight","newCode","language","style","palette","type","a11yDark","a11yLight","customStyle","background","padding"],"mappings":"sHAAA,yKASMA,EAAW,OAEXC,EACJ,uNAEIC,EAAYC,YAAW,CAC3BC,eAAgB,CACdH,aACAD,WACAK,UAAW,OACXC,UAAW,OACXC,aAAc,8BAEhBC,kBAAmB,CACjBC,OAAQ,EACRR,aACAD,cAKW,SAASU,EAAT,GAA+C,IAAzBC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YACvCC,EAAUX,IACVY,EAAQC,cAKd,OAJAC,qBAAU,WACRC,IAAkBC,iBAAiB,OAAQC,OAC1C,IAGDC,kBAACC,IAAD,CACEC,UAAWT,EAAQT,eACnBmB,MAAOZ,EACPa,cAAeZ,EACfa,UAAW,SAAAC,GAAO,OAChBN,kBAACH,IAAD,CACEU,SAAS,OACTC,MAA8B,SAAvBd,EAAMe,QAAQC,KAAkBC,IAAWC,IAClDV,UAAWT,EAAQL,kBAGnByB,YAAa,CAAEC,WAAY,OAAQC,QAAS,IAE3CT,IAGLS,QAAS,GACTP,MAAO","file":"static/js/43.39f60963.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport Editor from 'react-simple-code-editor'\nimport { Light as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport json from 'react-syntax-highlighter/dist/cjs/languages/hljs/json'\nimport a11yDark from 'react-syntax-highlighter/dist/cjs/styles/hljs/a11y-dark'\nimport a11yLight from 'react-syntax-highlighter/dist/cjs/styles/hljs/a11y-light'\nimport { useTheme, makeStyles } from '@material-ui/core'\n\n// fontSize and fontFamily have to match between Editor and SyntaxHighlighter\nconst fontSize = '12px'\n// Optimize by using system default fonts: https://css-tricks.com/snippets/css/font-stacks/\nconst fontFamily =\n  'Consolas, \"Andale Mono WT\", \"Andale Mono\", \"Lucida Console\", \"Lucida Sans Typewriter\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Liberation Mono\", \"Nimbus Mono L\", Monaco, \"Courier New\", Courier, monospace'\n\nconst useStyles = makeStyles({\n  callbackEditor: {\n    fontFamily,\n    fontSize,\n    overflowX: 'auto',\n    marginTop: '16px',\n    borderBottom: '1px solid rgba(0,0,0,0.42)',\n  },\n  syntaxHighlighter: {\n    margin: 0,\n    fontFamily,\n    fontSize,\n  },\n})\n\n// eslint-disable-next-line react/prop-types\nexport default function CodeEditor({ contents, setContents }) {\n  const classes = useStyles()\n  const theme = useTheme()\n  useEffect(() => {\n    SyntaxHighlighter.registerLanguage('json', json)\n  }, [])\n\n  return (\n    <Editor\n      className={classes.callbackEditor}\n      value={contents}\n      onValueChange={setContents}\n      highlight={newCode => (\n        <SyntaxHighlighter\n          language=\"json\"\n          style={theme.palette.type === 'dark' ? a11yDark : a11yLight}\n          className={classes.syntaxHighlighter}\n          // override some inline style stuff that's higher specificity\n          // than className\n          customStyle={{ background: 'none', padding: 0 }}\n        >\n          {newCode}\n        </SyntaxHighlighter>\n      )}\n      padding={10}\n      style={{}}\n    />\n  )\n}\n"],"sourceRoot":""}