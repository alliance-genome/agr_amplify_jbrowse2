{"version":3,"file":"static/js/5723.47eaf2c4.chunk.js","mappings":"sOAYA,MAAMA,GAAYC,EAAAA,EAAAA,KAAAA,EAAaC,IAAS,CACtCC,QAAS,CACPC,MAAO,QAETC,MAAO,CACLC,OAAQJ,EAAMK,UACdC,QAASN,EAAMK,WAEjBE,OAAQ,CACNC,UAAW,GACXC,aAAc,IACdC,QAAS,aAIE,SAASC,GAAkB,MAAEC,IAC1C,MAAM,QAAEC,GAAYf,KACbgB,EAAKC,IAAUC,EAAAA,EAAAA,UAAS,KACxBC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAU,gBAAcG,KAAKC,OAC/D,OACEC,EAAAA,cAACC,EAAAA,EAAK,CAACC,UAAWV,EAAQV,OACxBkB,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,sDACJA,EAAAA,cAAA,UAAI,6EAMNA,EAAAA,cAACG,EAAAA,EAAS,CACRC,WAAS,EACTC,KAAM,GACNC,MAAOb,EACPc,SAAUC,GAASd,EAAOc,EAAMC,OAAOH,OACvCI,YAAa,sDACbC,QAAQ,WACRT,UAAWV,EAAQZ,UAGrBoB,EAAAA,cAACY,EAAAA,EAAM,CAACD,QAAQ,WAAWE,UAAU,SAAQ,kCAE3Cb,EAAAA,cAAA,SACEc,KAAK,OACLC,QAAM,EACNC,UAAQ,EACRT,SAAUA,EAAGE,aACX,MAAMQ,EAAM,IAAKR,GAAQS,OAAS,IAAKC,KAAIC,IAAQ,CACjDN,KAAM,gBACNO,eAAgBC,EAAAA,WACZ,CACEC,UAAYH,EAAiCI,KAC7CC,aAAc,sBAEhBC,EAAAA,EAAAA,mBAAkB,CAAEC,KAAMP,IAC9BQ,OAAQR,EAAKS,SAEfnC,EAAOoC,KAAKC,UAAUd,EAAK,KAAM,GAAG,KAI1CjB,EAAAA,cAACG,EAAAA,EAAS,CACRG,MAAOV,EACPW,SAAUC,GAASX,EAAaW,EAAMC,OAAOH,OAC7C0B,WAAW,eAEbhC,EAAAA,cAACY,EAAAA,EAAM,CACLD,QAAQ,YACRT,UAAWV,EAAQN,OACnB+C,QAASA,KACP,MAAMC,GAAUC,EAAAA,EAAAA,YAAW5C,GAErB6C,EAAU,CACb,GAAExC,EAAUyC,cAAcC,WAAW,IAAK,QAAQxC,KAAKC,QACrDmC,EAAQK,UAAY,GAAK,iBAC5BC,KAAK,IAGP,IAAIC,EACJ,IACEA,EAAUX,KAAKY,MAAMjD,EACvB,CAAE,MAAOkD,GACPF,EAAUhD,EAAImD,MAAM,aACtB,CACA,MAAMC,EACkB,iBAAfJ,EAAQ,GACX,CAAEA,WACF,CAAEK,YAAaL,IAEjBM,EAAAA,EAAAA,wBAAuBb,KACzBA,EAAQc,aAAa,CACnBZ,UACAtB,KAAM,yBACNe,KAAMjC,EACNqD,cAAe,CAAC1D,EAAM2D,UACtBC,QAAS,CACPrC,KAAM,wBACH+B,KAIPtD,EAAM6D,MAAMC,UAAUjB,IAExB7C,EAAM+D,aACFC,EAAAA,EAAAA,2BAA0BrB,IAC5BA,EAAQsB,WAAWjE,EACrB,GAEH,UAIDS,EAAAA,cAAA,SAAG,sBACHA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,6FAEoB,IACtBA,EAAAA,cAAA,YAAQ,2HAAiI,IAAI,iDAG/IA,EAAAA,cAAA,UAAI,oHAOZ,C","sources":["../../../plugins/wiggle/src/MultiWiggleAddTrackWidget/AddTrackWorkflow.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Button, Paper, TextField } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport {\n  getSession,\n  isElectron,\n  isSessionModelWithWidgets,\n  isSessionWithAddTracks,\n} from '@jbrowse/core/util'\nimport { storeBlobLocation } from '@jbrowse/core/util/tracks'\nimport { AddTrackModel } from '@jbrowse/plugin-data-management'\n\nconst useStyles = makeStyles()(theme => ({\n  textbox: {\n    width: '100%',\n  },\n  paper: {\n    margin: theme.spacing(),\n    padding: theme.spacing(),\n  },\n  submit: {\n    marginTop: 25,\n    marginBottom: 100,\n    display: 'block',\n  },\n}))\n\nexport default function MultiWiggleWidget({ model }: { model: AddTrackModel }) {\n  const { classes } = useStyles()\n  const [val, setVal] = useState('')\n  const [trackName, setTrackName] = useState(`MultiWiggle${+Date.now()}`)\n  return (\n    <Paper className={classes.paper}>\n      <ul>\n        <li>Enter list of URLs for bigwig files in the textbox</li>\n        <li>\n          Or, use the button below the text box to select files from your\n          computer\n        </li>\n      </ul>\n\n      <TextField\n        multiline\n        rows={10}\n        value={val}\n        onChange={event => setVal(event.target.value)}\n        placeholder={'Paste list of URLs here, or use file selector below'}\n        variant=\"outlined\"\n        className={classes.textbox}\n      />\n\n      <Button variant=\"outlined\" component=\"label\">\n        Choose Files from your computer\n        <input\n          type=\"file\"\n          hidden\n          multiple\n          onChange={({ target }) => {\n            const res = [...(target?.files || [])].map(file => ({\n              type: 'BigWigAdapter',\n              bigWigLocation: isElectron\n                ? {\n                    localPath: (file as File & { path: string }).path,\n                    locationType: 'LocalPathLocation',\n                  }\n                : storeBlobLocation({ blob: file }),\n              source: file.name,\n            }))\n            setVal(JSON.stringify(res, null, 2))\n          }}\n        />\n      </Button>\n      <TextField\n        value={trackName}\n        onChange={event => setTrackName(event.target.value)}\n        helperText=\"Track name\"\n      />\n      <Button\n        variant=\"contained\"\n        className={classes.submit}\n        onClick={() => {\n          const session = getSession(model)\n\n          const trackId = [\n            `${trackName.toLowerCase().replaceAll(' ', '_')}-${Date.now()}`,\n            `${session.adminMode ? '' : '-sessionTrack'}`,\n          ].join('')\n\n          // allow list of bigwigs in JSON format or line-by-line\n          let bigWigs\n          try {\n            bigWigs = JSON.parse(val)\n          } catch (e) {\n            bigWigs = val.split(/\\n|\\r\\n|\\r/)\n          }\n          const obj =\n            typeof bigWigs[0] === 'string'\n              ? { bigWigs }\n              : { subadapters: bigWigs }\n\n          if (isSessionWithAddTracks(session)) {\n            session.addTrackConf({\n              trackId,\n              type: 'MultiQuantitativeTrack',\n              name: trackName,\n              assemblyNames: [model.assembly],\n              adapter: {\n                type: 'MultiWiggleAdapter',\n                ...obj,\n              },\n            })\n\n            model.view?.showTrack(trackId)\n          }\n          model.clearData()\n          if (isSessionModelWithWidgets(session)) {\n            session.hideWidget(model)\n          }\n        }}\n      >\n        Submit\n      </Button>\n\n      <p>Additional notes: </p>\n      <ul>\n        <li>\n          The list of bigwig files in the text box can be a list of URLs, or a\n          list of elements like{' '}\n          <code>{`[{\"type\":\"BigWigAdapter\",\"bigWigLocation\":{\"uri\":\"http://host/file.bw\"}, \"color\":\"green\",\"source\":\"name for subtrack\"}]`}</code>{' '}\n          to apply e.g. the color attribute to the view\n        </li>\n        <li>\n          Adding local files will update the textbox with JSON contents that are\n          ready to submit with the \"Submit\" button\n        </li>\n      </ul>\n    </Paper>\n  )\n}\n"],"names":["useStyles","makeStyles","theme","textbox","width","paper","margin","spacing","padding","submit","marginTop","marginBottom","display","MultiWiggleWidget","model","classes","val","setVal","useState","trackName","setTrackName","Date","now","React","Paper","className","TextField","multiline","rows","value","onChange","event","target","placeholder","variant","Button","component","type","hidden","multiple","res","files","map","file","bigWigLocation","isElectron","localPath","path","locationType","storeBlobLocation","blob","source","name","JSON","stringify","helperText","onClick","session","getSession","trackId","toLowerCase","replaceAll","adminMode","join","bigWigs","parse","e","split","obj","subadapters","isSessionWithAddTracks","addTrackConf","assemblyNames","assembly","adapter","view","showTrack","clearData","isSessionModelWithWidgets","hideWidget"],"sourceRoot":""}