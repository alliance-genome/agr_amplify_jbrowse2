{"version":3,"file":"static/js/8531.091d0f0d.chunk.js","mappings":"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","sources":["../../../plugins/menus/src/ImportSessionWidget/components/ImportError.tsx","../../../plugins/menus/src/ImportSessionWidget/components/ImportSessionWidget.tsx"],"sourcesContent":["import React from 'react'\nimport { Paper, Typography } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\n// icons\nimport ErrorIcon from '@mui/icons-material/Error'\n\nconst useStyles = makeStyles()(theme => ({\n  error: {\n    margin: theme.spacing(2),\n  },\n  errorHeader: {\n    background: theme.palette.error.light,\n    color: theme.palette.error.contrastText,\n    padding: theme.spacing(2),\n    textAlign: 'center',\n  },\n  errorMessage: {\n    padding: theme.spacing(2),\n  },\n}))\n\nexport default function ImportError({ error }: { error: unknown }) {\n  const { classes } = useStyles()\n  return (\n    <Paper className={classes.error}>\n      <div className={classes.errorHeader}>\n        <ErrorIcon color=\"inherit\" fontSize=\"large\" />\n        <div>\n          <Typography variant=\"h6\" color=\"inherit\" align=\"center\">\n            Import error\n          </Typography>\n        </div>\n      </div>\n      <Typography className={classes.errorMessage}>{`${error}`}</Typography>\n    </Paper>\n  )\n}\n","import React, { useState } from 'react'\nimport { IAnyStateTreeNode } from 'mobx-state-tree'\nimport { Button, Paper, Typography, alpha } from '@mui/material'\nimport { getSession } from '@jbrowse/core/util'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { useDropzone } from 'react-dropzone'\n\n// icons\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload'\n\n// locals\nimport ImportError from './ImportError'\n\nconst MAX_FILE_SIZE = 512 * 1024 ** 2 // 512 MiB\n\nfunction styledBy(property: string, mapping: Record<string, string>) {\n  return (props: Record<string, string>) => mapping[props[property]]\n}\n\n// @ts-expect-error\nconst useStyles = makeStyles()(theme => ({\n  root: {\n    margin: theme.spacing(1),\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  dropZone: {\n    textAlign: 'center',\n    margin: theme.spacing(2),\n    padding: theme.spacing(2),\n    borderWidth: 2,\n    borderRadius: 2,\n    borderColor: styledBy('isDragActive', {\n      true: theme.palette.secondary.light,\n      false: theme.palette.divider,\n    }),\n    borderStyle: 'dashed',\n    backgroundColor: styledBy('isDragActive', {\n      true: alpha(\n        theme.palette.text.primary,\n        theme.palette.action.hoverOpacity,\n      ),\n      false: theme.palette.background.default,\n    }),\n    outline: 'none',\n    transition: 'border .24s ease-in-out',\n    '&:focus': {\n      borderColor: theme.palette.secondary.light,\n    },\n  },\n  uploadIcon: {\n    color: theme.palette.text.secondary,\n  },\n}))\n\nconst ImportSessionWidget = observer(function ({\n  model,\n}: {\n  model: IAnyStateTreeNode\n}) {\n  const [error, setError] = useState<unknown>()\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    // @ts-expect-error\n    accept: 'application/json',\n    maxSize: MAX_FILE_SIZE,\n    multiple: false,\n    onDrop: async (acceptedFiles, rejectedFiles) => {\n      try {\n        if (rejectedFiles.length > 0) {\n          throw new Error(\n            `${rejectedFiles[0].errors.map(e => `${e}`).join(', ')}`,\n          )\n        } else {\n          const sessionText = await acceptedFiles[0].text()\n          getSession(model).setSession?.(JSON.parse(sessionText).session)\n        }\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    },\n  })\n\n  // @ts-expect-error\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const { classes } = useStyles({ isDragActive }) as any\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <div {...getRootProps({ className: classes.dropZone })}>\n          <input {...getInputProps()} />\n          <CloudUploadIcon className={classes.uploadIcon} fontSize=\"large\" />\n          <Typography color=\"textSecondary\" align=\"center\" variant=\"body1\">\n            Drag and drop files here\n          </Typography>\n          <Typography color=\"textSecondary\" align=\"center\" variant=\"body2\">\n            or\n          </Typography>\n          <Button color=\"primary\" variant=\"contained\">\n            Browse Files\n          </Button>\n        </div>\n      </Paper>\n      {error ? <ImportError error={error} /> : null}\n    </div>\n  )\n})\n\nexport default ImportSessionWidget\n"],"names":["useStyles","makeStyles","theme","error","margin","spacing","errorHeader","background","palette","light","color","contrastText","padding","textAlign","errorMessage","ImportError","_ref","classes","_jsxs","Paper","className","children","_jsx","ErrorIcon","fontSize","Typography","variant","align","concat","MAX_FILE_SIZE","Math","pow","styledBy","property","mapping","props","root","paper","display","flexDirection","dropZone","borderWidth","borderRadius","borderColor","true","secondary","false","divider","borderStyle","backgroundColor","alpha","text","primary","action","hoverOpacity","default","outline","transition","uploadIcon","ImportSessionWidget","observer","model","_useState","useState","_useState2","_slicedToArray","setError","_useDropzone","useDropzone","accept","maxSize","multiple","onDrop","_onDrop","_asyncToGenerator","_regeneratorRuntime","mark","_callee","acceptedFiles","rejectedFiles","_getSession$setSessio","_getSession","sessionText","wrap","_context","prev","next","length","Error","errors","map","e","join","sent","getSession","setSession","call","JSON","parse","session","t0","console","stop","_x","_x2","apply","arguments","getRootProps","getInputProps","isDragActive","_objectSpread","CloudUploadIcon","Button"],"sourceRoot":""}