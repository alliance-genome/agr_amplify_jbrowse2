{"version":3,"file":"static/js/3550.35b7cc33.chunk.js","mappings":"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","sources":["../../../packages/core/BaseFeatureWidget/SequenceFeatureDetails/dialogs/SettingsDialog.tsx","../../../node_modules/@mui/material/internal/svg-icons/RadioButtonUnchecked.js","../../../node_modules/@mui/material/internal/svg-icons/RadioButtonChecked.js","../../../node_modules/@mui/material/Radio/RadioButtonIcon.js","../../../node_modules/@mui/material/Radio/Radio.js","../../../node_modules/@mui/material/Radio/radioClasses.js","../../../node_modules/@mui/material/RadioGroup/RadioGroup.js","../../../node_modules/@mui/material/RadioGroup/RadioGroupContext.js","../../../node_modules/@mui/material/RadioGroup/radioGroupClasses.js","../../../node_modules/@mui/material/RadioGroup/useRadioGroup.js"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  Button,\n  DialogContent,\n  DialogActions,\n  FormControlLabel,\n  FormControl,\n  FormLabel,\n  Radio,\n  RadioGroup,\n  TextField,\n} from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\n\n// locals\nimport { SequenceFeatureDetailsModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  formElt: {\n    margin: theme.spacing(3),\n    width: 400,\n  },\n  dialogContent: {\n    width: '80em',\n  },\n}))\n\nconst SequenceFeatureSettingsDialog = observer(function ({\n  handleClose,\n  model,\n}: {\n  handleClose: () => void\n  model: SequenceFeatureDetailsModel\n}) {\n  const { classes } = useStyles()\n  const [intronBp, setIntronBp] = useState(`${model.intronBp}`)\n  const [upDownBp, setUpDownBp] = useState(`${model.upDownBp}`)\n  const intronBpValid = !Number.isNaN(+intronBp)\n  const upDownBpValid = !Number.isNaN(+upDownBp)\n  return (\n    <Dialog\n      maxWidth=\"xl\"\n      open\n      onClose={() => handleClose()}\n      title=\"Feature sequence settings\"\n    >\n      <DialogContent className={classes.dialogContent}>\n        <div>\n          <TextField\n            label=\"Number of intronic bases around splice site to display\"\n            className={classes.formElt}\n            value={intronBp}\n            helperText={!intronBpValid ? 'Not a number' : ''}\n            error={!intronBpValid}\n            onChange={event => setIntronBp(event.target.value)}\n          />\n        </div>\n        <div>\n          <TextField\n            label=\"Number of bases up/down stream of feature to display\"\n            className={classes.formElt}\n            value={upDownBp}\n            helperText={!upDownBpValid ? 'Not a number' : ''}\n            error={!upDownBpValid}\n            onChange={event => setUpDownBp(event.target.value)}\n          />\n        </div>\n        <div>\n          <FormControl>\n            <FormLabel>Sequence capitalization</FormLabel>\n            <RadioGroup\n              value={model.upperCaseCDS ? 'cds' : 'unchanged'}\n              onChange={e => model.setUpperCaseCDS(e.target.value === 'cds')}\n            >\n              <FormControlLabel\n                value=\"cds\"\n                control={<Radio />}\n                label=\"Capitalize CDS and lower case everything else\"\n              />\n              <FormControlLabel\n                value=\"unchanged\"\n                control={<Radio />}\n                label=\"Capitalization from reference genome sequence\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </div>\n      </DialogContent>\n\n      <DialogActions>\n        <Button\n          onClick={() => {\n            model.setIntronBp(+intronBp)\n            model.setUpDownBp(+upDownBp)\n            handleClose()\n          }}\n          disabled={!intronBpValid || !upDownBpValid}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Submit\n        </Button>\n        <Button\n          onClick={() => handleClose()}\n          color=\"secondary\"\n          autoFocus\n          variant=\"contained\"\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n\nexport default SequenceFeatureSettingsDialog\n","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport RadioButtonUncheckedIcon from '../internal/svg-icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '../internal/svg-icons/RadioButtonChecked';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RadioButtonIconRoot = styled('span', {\n  shouldForwardProp: rootShouldForwardProp\n})({\n  position: 'relative',\n  display: 'flex'\n});\nconst RadioButtonIconBackground = styled(RadioButtonUncheckedIcon)({\n  // Scale applied to prevent dot misalignment in Safari\n  transform: 'scale(1)'\n});\nconst RadioButtonIconDot = styled(RadioButtonCheckedIcon)(({\n  theme,\n  ownerState\n}) => _extends({\n  left: 0,\n  position: 'absolute',\n  transform: 'scale(0)',\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeIn,\n    duration: theme.transitions.duration.shortest\n  })\n}, ownerState.checked && {\n  transform: 'scale(1)',\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeOut,\n    duration: theme.transitions.duration.shortest\n  })\n}));\n\n/**\n * @ignore - internal component.\n */\nfunction RadioButtonIcon(props) {\n  const {\n    checked = false,\n    classes = {},\n    fontSize\n  } = props;\n  const ownerState = _extends({}, props, {\n    checked\n  });\n  return /*#__PURE__*/_jsxs(RadioButtonIconRoot, {\n    className: classes.root,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(RadioButtonIconBackground, {\n      fontSize: fontSize,\n      className: classes.background,\n      ownerState: ownerState\n    }), /*#__PURE__*/_jsx(RadioButtonIconDot, {\n      fontSize: fontSize,\n      className: classes.dot,\n      ownerState: ownerState\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default RadioButtonIcon;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"checkedIcon\", \"color\", \"icon\", \"name\", \"onChange\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nimport radioClasses, { getRadioUtilityClass } from './radioClasses';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, size !== 'medium' && `size${capitalize(size)}`]\n  };\n  return _extends({}, classes, composeClasses(slots, getRadioUtilityClass, classes));\n};\nconst RadioRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiRadio',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.size !== 'medium' && styles[`size${capitalize(ownerState.size)}`], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${radioClasses.checked}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  }\n}, {\n  [`&.${radioClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  }\n\n  // The value could be a number, the DOM will stringify it anyway.\n  return String(a) === String(b);\n}\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {\n  checked: true\n});\nconst defaultIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {});\nconst Radio = /*#__PURE__*/React.forwardRef(function Radio(inProps, ref) {\n  var _defaultIcon$props$fo, _defaultCheckedIcon$p;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiRadio'\n  });\n  const {\n      checked: checkedProp,\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon = defaultIcon,\n      name: nameProp,\n      onChange: onChangeProp,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const radioGroup = useRadioGroup();\n  let checked = checkedProp;\n  const onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  let name = nameProp;\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = areEqualValues(radioGroup.value, props.value);\n    }\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n  return /*#__PURE__*/_jsx(RadioRoot, _extends({\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_defaultIcon$props$fo = defaultIcon.props.fontSize) != null ? _defaultIcon$props$fo : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(checkedIcon, {\n      fontSize: (_defaultCheckedIcon$p = defaultCheckedIcon.props.fontSize) != null ? _defaultCheckedIcon$p : size\n    }),\n    ownerState: ownerState,\n    classes: classes,\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <RadioButtonIcon checked />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <RadioButtonIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Radio;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getRadioUtilityClass(slot) {\n  return generateUtilityClass('MuiRadio', slot);\n}\nconst radioClasses = generateUtilityClasses('MuiRadio', ['root', 'checked', 'disabled', 'colorPrimary', 'colorSecondary', 'sizeSmall']);\nexport default radioClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"actions\", \"children\", \"className\", \"defaultValue\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport FormGroup from '../FormGroup';\nimport { getRadioGroupUtilityClass } from './radioGroupClasses';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport RadioGroupContext from './RadioGroupContext';\nimport useId from '../utils/useId';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = props => {\n  const {\n    classes,\n    row,\n    error\n  } = props;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getRadioGroupUtilityClass, classes);\n};\nconst RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  const {\n      // private\n      // eslint-disable-next-line react/prop-types\n      actions,\n      children,\n      className,\n      defaultValue,\n      name: nameProp,\n      onChange,\n      value: valueProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootRef = React.useRef(null);\n  const classes = useUtilityClasses(props);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'RadioGroup'\n  });\n  React.useImperativeHandle(actions, () => ({\n    focus: () => {\n      let input = rootRef.current.querySelector('input:not(:disabled):checked');\n      if (!input) {\n        input = rootRef.current.querySelector('input:not(:disabled)');\n      }\n      if (input) {\n        input.focus();\n      }\n    }\n  }), []);\n  const handleRef = useForkRef(ref, rootRef);\n  const name = useId(nameProp);\n  const contextValue = React.useMemo(() => ({\n    name,\n    onChange(event) {\n      setValueState(event.target.value);\n      if (onChange) {\n        onChange(event, event.target.value);\n      }\n    },\n    value\n  }), [name, onChange, setValueState, value]);\n  return /*#__PURE__*/_jsx(RadioGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(FormGroup, _extends({\n      role: \"radiogroup\",\n      ref: handleRef,\n      className: clsx(classes.root, className)\n    }, other, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {string} value The value of the selected radio button.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst RadioGroupContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\nexport default RadioGroupContext;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getRadioGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiRadioGroup', slot);\n}\nconst radioGroupClasses = generateUtilityClasses('MuiRadioGroup', ['root', 'row', 'error']);\nexport default radioGroupClasses;","'use client';\n\nimport * as React from 'react';\nimport RadioGroupContext from './RadioGroupContext';\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}"],"names":["useStyles","makeStyles","theme","formElt","margin","spacing","width","dialogContent","observer","handleClose","model","classes","intronBp","setIntronBp","useState","upDownBp","setUpDownBp","intronBpValid","Number","isNaN","upDownBpValid","React","Dialog","maxWidth","open","onClose","title","DialogContent","className","TextField","label","value","helperText","error","onChange","event","target","FormControl","FormLabel","RadioGroup","upperCaseCDS","e","setUpperCaseCDS","FormControlLabel","control","Radio","DialogActions","Button","onClick","disabled","color","variant","autoFocus","createSvgIcon","d","RadioButtonIconRoot","styled","shouldForwardProp","rootShouldForwardProp","position","display","RadioButtonIconBackground","RadioButtonUnchecked","transform","RadioButtonIconDot","RadioButtonChecked","ownerState","left","transition","transitions","create","easing","easeIn","duration","shortest","checked","easeOut","props","fontSize","root","children","background","dot","_excluded","RadioRoot","SwitchBase","prop","name","slot","overridesResolver","styles","size","capitalize","vars","palette","text","secondary","disableRipple","backgroundColor","action","activeChannel","mainChannel","hoverOpacity","active","main","radioClasses","defaultCheckedIcon","defaultIcon","inProps","ref","_defaultIcon$props$fo","_defaultCheckedIcon$p","useThemeProps","checkedProp","checkedIcon","icon","nameProp","onChangeProp","other","slots","composeClasses","useUtilityClasses","radioGroup","useRadioGroup","createChainedFunction","a","b","String","type","clsx","getRadioUtilityClass","actions","defaultValue","valueProp","rootRef","row","setValueState","controlled","default","focus","input","current","querySelector","handleRef","contextValue","Provider","role","undefined","getRadioGroupUtilityClass"],"sourceRoot":""}