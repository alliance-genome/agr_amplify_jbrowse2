{"version":3,"file":"static/js/9018.a247da03.chunk.js","mappings":"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","sources":["../../../plugins/wiggle/src/MultiWiggleAdapter/MultiWiggleAdapter.ts"],"sourcesContent":["import {\n  BaseFeatureDataAdapter,\n  BaseOptions,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { AugmentedRegion as Region } from '@jbrowse/core/util/types'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport { SimpleFeature, Feature, min, max } from '@jbrowse/core/util'\nimport { merge } from 'rxjs'\nimport { map } from 'rxjs/operators'\n\ninterface WiggleOptions extends BaseOptions {\n  resolution?: number\n}\n\nfunction getFilename(uri: string) {\n  const filename = uri.slice(uri.lastIndexOf('/') + 1)\n  return filename.slice(0, filename.lastIndexOf('.'))\n}\n\ninterface AdapterEntry {\n  dataAdapter: BaseFeatureDataAdapter\n  source: string\n  [key: string]: unknown\n}\n\nexport default class MultiWiggleAdapter extends BaseFeatureDataAdapter {\n  public static capabilities = [\n    'hasResolution',\n    'hasLocalStats',\n    'hasGlobalStats',\n  ]\n\n  public async getAdapters(): Promise<AdapterEntry[]> {\n    const getSubAdapter = this.getSubAdapter\n    if (!getSubAdapter) {\n      throw new Error('no getSubAdapter available')\n    }\n    let subConfs = this.getConf('subadapters')\n    if (!subConfs?.length) {\n      const entries = this.getConf('bigWigs') as string[]\n      subConfs = entries.map(entry => ({\n        type: 'BigWigAdapter',\n        source: getFilename(entry),\n        bigWigLocation: {\n          uri: entry,\n        },\n      }))\n    }\n\n    return Promise.all(\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      subConfs.map(async (conf: any) => {\n        const dataAdapter = (await getSubAdapter(conf))\n          .dataAdapter as BaseFeatureDataAdapter\n        return {\n          source: conf.name || dataAdapter.id,\n          ...conf,\n          dataAdapter,\n        }\n      }),\n    )\n  }\n\n  // note: can't really have dis-agreeing refNames\n  public async getRefNames(opts?: BaseOptions) {\n    const adapters = await this.getAdapters()\n    const allNames = await Promise.all(\n      adapters.map(a => a.dataAdapter.getRefNames(opts)),\n    )\n    return [...new Set(allNames.flat())]\n  }\n\n  public async getGlobalStats(opts?: BaseOptions) {\n    const adapters = await this.getAdapters()\n    const stats = (\n      await Promise.all(\n        // @ts-expect-error\n        adapters.map(adp => adp.dataAdapter.getGlobalStats?.(opts)),\n      )\n    ).filter(f => !!f)\n    const scoreMin = min(stats.map(s => s.scoreMin))\n    const scoreMax = max(stats.map(s => s.scoreMax))\n    return { scoreMin, scoreMax }\n  }\n\n  public getFeatures(region: Region, opts: WiggleOptions = {}) {\n    return ObservableCreate<Feature>(async observer => {\n      const adapters = await this.getAdapters()\n      merge(\n        ...adapters.map(adp =>\n          adp.dataAdapter.getFeatures(region, opts).pipe(\n            map(p =>\n              // add source field if it does not exist\n              p.get('source')\n                ? p\n                : new SimpleFeature({\n                    ...p.toJSON(),\n                    uniqueId: `${adp.source}-${p.id()}`,\n                    source: adp.source,\n                  }),\n            ),\n          ),\n        ),\n      ).subscribe(observer)\n    }, opts.signal)\n  }\n\n  // always render bigwig instead of calculating a feature density for it\n  async getMultiRegionFeatureDensityStats(_regions: Region[]) {\n    return { featureDensity: 0 }\n  }\n\n  // in another adapter type, this could be dynamic depending on region or\n  // something, but it is static for this particular multi-wiggle adapter type\n  async getSources() {\n    const adapters = await this.getAdapters()\n    return adapters.map(({ dataAdapter, source, name, ...rest }) => ({\n      name: source,\n      __name: name,\n      ...rest,\n    }))\n  }\n\n  public freeResources(): void {}\n}\n"],"names":["getFilename","uri","filename","slice","lastIndexOf","MultiWiggleAdapter","_BaseFeatureDataAdapt","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_getAdapters","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","_subConfs","getSubAdapter","subConfs","entries","wrap","_context2","prev","next","this","Error","getConf","length","map","entry","type","source","bigWigLocation","abrupt","Promise","all","_ref","_callee","conf","dataAdapter","_context","sent","_objectSpread","name","id","stop","_x","_getRefNames","_callee3","opts","adapters","allNames","_context3","getAdapters","a","getRefNames","_toConsumableArray","Set","flat","_x2","_getGlobalStats","_callee4","stats","scoreMin","scoreMax","_context4","adp","_adp$dataAdapter$getG","_adp$dataAdapter","getGlobalStats","call","filter","f","min","s","max","_x3","region","_this","undefined","ObservableCreate","_ref2","_callee5","observer","_context5","merge","getFeatures","pipe","p","get","SimpleFeature","toJSON","uniqueId","concat","subscribe","_x4","signal","_getMultiRegionFeatureDensityStats","_callee6","_regions","_context6","featureDensity","_x5","_getSources","_callee7","_context7","_ref3","rest","_objectWithoutProperties","_excluded","__name","BaseFeatureDataAdapter","capabilities"],"sourceRoot":""}