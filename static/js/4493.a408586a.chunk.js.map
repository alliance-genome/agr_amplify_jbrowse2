{"version":3,"file":"static/js/4493.a408586a.chunk.js","mappings":"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","sources":["../../../plugins/linear-comparative-view/src/LinearComparativeView/components/RubberBand.tsx","../../../plugins/linear-comparative-view/src/LinearComparativeView/components/Header.tsx","../../../plugins/linear-comparative-view/src/LinearComparativeView/components/LinearComparativeView.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Popover,\n  Tooltip,\n  Typography,\n  makeStyles,\n  alpha,\n} from '@material-ui/core'\nimport { stringify } from '@jbrowse/core/util'\nimport { Menu } from '@jbrowse/core/ui'\nimport { LinearComparativeViewModel } from '../model'\nimport { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\n\ntype LCV = LinearComparativeViewModel\ntype LGV = LinearGenomeViewModel\n\nconst useStyles = makeStyles(theme => {\n  const background = theme.palette.tertiary\n    ? alpha(theme.palette.tertiary.main, 0.7)\n    : alpha(theme.palette.primary.main, 0.7)\n  return {\n    rubberBand: {\n      height: '100%',\n      background,\n      position: 'absolute',\n      zIndex: 10,\n      textAlign: 'center',\n      overflow: 'hidden',\n    },\n    rubberBandControl: {\n      cursor: 'crosshair',\n      width: '100%',\n      minHeight: 8,\n    },\n    rubberBandText: {\n      color: theme.palette.tertiary\n        ? theme.palette.tertiary.contrastText\n        : theme.palette.primary.contrastText,\n    },\n    popover: {\n      mouseEvents: 'none',\n      cursor: 'crosshair',\n    },\n    paper: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n    },\n    guide: {\n      pointerEvents: 'none',\n      height: '100%',\n      width: 1,\n      position: 'absolute',\n      zIndex: 10,\n    },\n    sm: {\n      fontSize: 10,\n    },\n  }\n})\n\nconst VerticalGuide = observer(\n  ({ model, coordX }: { model: LCV; coordX: number }) => {\n    const classes = useStyles()\n    return (\n      <Tooltip\n        open\n        placement=\"top\"\n        title={model.views\n          .map(view => view.pxToBp(coordX))\n          .map(elt => (\n            <Typography className={classes.sm} key={JSON.stringify(elt)}>\n              {stringify(elt)}\n            </Typography>\n          ))}\n        arrow\n      >\n        <div\n          className={classes.guide}\n          style={{\n            left: coordX,\n            background: 'red',\n          }}\n        />\n      </Tooltip>\n    )\n  },\n)\n\nfunction RubberBand({\n  model,\n  ControlComponent = <div />,\n}: {\n  model: LCV\n  ControlComponent?: React.ReactElement\n}) {\n  const [startX, setStartX] = useState<number>()\n  const [currentX, setCurrentX] = useState<number>()\n\n  // clientX and clientY used for anchorPosition for menu\n  // offsetX used for calculations about width of selection\n  const [anchorPosition, setAnchorPosition] = useState<{\n    offsetX: number\n    clientX: number\n    clientY: number\n  }>()\n  const [guideX, setGuideX] = useState<number | undefined>()\n  const controlsRef = useRef<HTMLDivElement>(null)\n  const rubberBandRef = useRef(null)\n  const classes = useStyles()\n  const mouseDragging = startX !== undefined && anchorPosition === undefined\n\n  useEffect(() => {\n    function computeOffsets(offsetX: number, view: LGV) {\n      if (startX === undefined) {\n        return\n      }\n      let leftPx = startX\n      let rightPx = offsetX\n      // handles clicking and draging to the left\n      if (rightPx < leftPx) {\n        ;[leftPx, rightPx] = [rightPx, leftPx]\n      }\n      const leftOffset = view.pxToBp(leftPx)\n      const rightOffset = view.pxToBp(rightPx)\n\n      return { leftOffset, rightOffset }\n    }\n\n    function globalMouseMove(event: MouseEvent) {\n      if (controlsRef.current && mouseDragging) {\n        const relativeX =\n          event.clientX - controlsRef.current.getBoundingClientRect().left\n        setCurrentX(relativeX)\n      }\n    }\n\n    function globalMouseUp(event: MouseEvent) {\n      if (startX !== undefined && controlsRef.current) {\n        const { clientX, clientY } = event\n        const ref = controlsRef.current\n        const offsetX = clientX - ref.getBoundingClientRect().left\n        // as stated above, store both clientX/Y and offsetX for different\n        // purposes\n        setAnchorPosition({\n          offsetX,\n          clientX,\n          clientY,\n        })\n        model.views.forEach(view => {\n          const args = computeOffsets(offsetX, view)\n          if (args) {\n            const { leftOffset, rightOffset } = args\n            view.setOffsets(leftOffset, rightOffset)\n          }\n        })\n        setGuideX(undefined)\n      }\n    }\n    if (mouseDragging) {\n      window.addEventListener('mousemove', globalMouseMove)\n      window.addEventListener('mouseup', globalMouseUp)\n      return () => {\n        window.removeEventListener('mousemove', globalMouseMove)\n        window.removeEventListener('mouseup', globalMouseUp)\n      }\n    }\n    return () => {}\n  }, [startX, mouseDragging, anchorPosition, model])\n\n  useEffect(() => {\n    if (\n      !mouseDragging &&\n      currentX !== undefined &&\n      startX !== undefined &&\n      Math.abs(currentX - startX) <= 3\n    ) {\n      handleClose()\n    }\n  }, [mouseDragging, currentX, startX])\n\n  function mouseDown(event: React.MouseEvent<HTMLDivElement>) {\n    event.preventDefault()\n    event.stopPropagation()\n    const relativeX =\n      event.clientX -\n      (event.target as HTMLDivElement).getBoundingClientRect().left\n    setStartX(relativeX)\n    setCurrentX(relativeX)\n  }\n\n  function mouseMove(event: React.MouseEvent<HTMLDivElement>) {\n    const target = event.target as HTMLDivElement\n    setGuideX(event.clientX - target.getBoundingClientRect().left)\n  }\n\n  function mouseOut() {\n    setGuideX(undefined)\n    model.views.forEach(view => view.setOffsets(undefined, undefined))\n  }\n\n  function handleClose() {\n    setAnchorPosition(undefined)\n    setStartX(undefined)\n    setCurrentX(undefined)\n  }\n\n  const open = Boolean(anchorPosition)\n\n  function handleMenuItemClick(_: unknown, callback: Function) {\n    callback()\n    handleClose()\n  }\n\n  if (startX === undefined) {\n    return (\n      <>\n        {guideX !== undefined ? (\n          <VerticalGuide model={model} coordX={guideX} />\n        ) : null}\n        <div\n          data-testid=\"rubberBand_controls\"\n          className={classes.rubberBandControl}\n          role=\"presentation\"\n          ref={controlsRef}\n          onMouseDown={mouseDown}\n          onMouseOut={mouseOut}\n          onMouseMove={mouseMove}\n        >\n          {ControlComponent}\n        </div>\n      </>\n    )\n  }\n\n  /* Calculating Pixels for Mouse Dragging */\n  const right = anchorPosition ? anchorPosition.offsetX : currentX || 0\n  const left = right < startX ? right : startX\n  const width = Math.abs(right - startX)\n  const { views } = model\n  const leftBpOffset = views.map(view => view.pxToBp(left))\n  const rightBpOffset = views.map(view => view.pxToBp(left + width))\n  const numOfBpSelected = views.map(view => Math.ceil(width * view.bpPerPx))\n  return (\n    <>\n      {rubberBandRef.current ? (\n        <>\n          <Popover\n            className={classes.popover}\n            classes={{\n              paper: classes.paper,\n            }}\n            open\n            anchorEl={rubberBandRef.current}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'left',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right',\n            }}\n            keepMounted\n            disableRestoreFocus\n          >\n            {leftBpOffset.map(l => (\n              <Typography key={JSON.stringify(l)}>{stringify(l)}</Typography>\n            ))}\n          </Popover>\n          <Popover\n            className={classes.popover}\n            classes={{\n              paper: classes.paper,\n            }}\n            open\n            anchorEl={rubberBandRef.current}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left',\n            }}\n            keepMounted\n            disableRestoreFocus\n          >\n            {rightBpOffset.map(l => (\n              <Typography key={JSON.stringify(l)}>{stringify(l)}</Typography>\n            ))}\n          </Popover>\n        </>\n      ) : null}\n      <div\n        ref={rubberBandRef}\n        className={classes.rubberBand}\n        style={{ left, width }}\n      >\n        <Typography variant=\"h6\" className={classes.rubberBandText}>\n          {numOfBpSelected.map((n, i) => (\n            <Typography key={`${n}_${i}`}>{`${n.toLocaleString(\n              'en-US',\n            )}bp`}</Typography>\n          ))}\n        </Typography>\n      </div>\n      <div\n        data-testid=\"rubberBand_controls\"\n        className={classes.rubberBandControl}\n        role=\"presentation\"\n        ref={controlsRef}\n        onMouseDown={mouseDown}\n        onMouseOut={mouseOut}\n        onMouseMove={mouseMove}\n      >\n        {ControlComponent}\n      </div>\n      {anchorPosition ? (\n        <Menu\n          anchorReference=\"anchorPosition\"\n          anchorPosition={{\n            left: anchorPosition.clientX,\n            top: anchorPosition.clientY,\n          }}\n          onMenuItemClick={handleMenuItemClick}\n          open={open}\n          onClose={handleClose}\n          menuItems={model.rubberBandMenuItems()}\n        />\n      ) : null}\n    </>\n  )\n}\n\nexport default observer(RubberBand)\n","import React from 'react'\nimport { IconButton, Typography, makeStyles } from '@material-ui/core'\nimport { SearchBox } from '@jbrowse/plugin-linear-genome-view'\nimport { observer } from 'mobx-react'\n\n// icons\nimport LinkIcon from '@material-ui/icons/Link'\nimport LinkOffIcon from '@material-ui/icons/LinkOff'\nimport CropFreeIcon from '@material-ui/icons/CropFree'\n\nimport { LinearComparativeViewModel } from '../model'\n\ntype LCV = LinearComparativeViewModel\n\nconst useStyles = makeStyles(() => ({\n  headerBar: {\n    gridArea: '1/1/auto/span 2',\n    display: 'flex',\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  bp: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 10,\n  },\n  searchContainer: {\n    marginLeft: 5,\n  },\n  searchBox: {\n    display: 'flex',\n  },\n}))\n\nconst LinkViews = observer(({ model }: { model: LCV }) => {\n  return (\n    <IconButton\n      onClick={model.toggleLinkViews}\n      title=\"Toggle linked scrolls and behavior across views\"\n    >\n      {model.linkViews ? (\n        <LinkOffIcon color=\"secondary\" />\n      ) : (\n        <LinkIcon color=\"secondary\" />\n      )}\n    </IconButton>\n  )\n})\n\nconst SquareView = observer(({ model }: { model: LCV }) => {\n  return (\n    <IconButton\n      onClick={model.squareView}\n      title=\"Square view (make both the same zoom level)\"\n    >\n      <CropFreeIcon color=\"secondary\" />\n    </IconButton>\n  )\n})\n\nconst Header = observer(\n  ({ model, ExtraButtons }: { ExtraButtons?: React.ReactNode; model: LCV }) => {\n    const classes = useStyles()\n    const anyShowHeaders = model.views.some(view => !view.hideHeader)\n    return (\n      <div className={classes.headerBar}>\n        <LinkViews model={model} />\n        <SquareView model={model} />\n        {ExtraButtons}\n        {!anyShowHeaders\n          ? model.views.map(view => (\n              <div key={view.id} className={classes.searchBox}>\n                <div className={classes.searchContainer}>\n                  <SearchBox model={view} showHelp={false} />\n                </div>\n                <div className={classes.bp}>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    className={classes.bp}\n                  >\n                    {Math.round(view.coarseTotalBp).toLocaleString('en-US')} bp\n                  </Typography>\n                </div>\n              </div>\n            ))\n          : null}\n\n        <div className={classes.spacer} />\n      </div>\n    )\n  },\n)\n\nexport default Header\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { getConf, AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { makeStyles } from '@material-ui/core'\nimport { getEnv } from 'mobx-state-tree'\nimport { ResizeHandle } from '@jbrowse/core/ui'\n\n// locals\nimport { LinearComparativeViewModel } from '../model'\nimport RubberBand from './RubberBand'\nimport Header from './Header'\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    display: 'grid',\n  },\n  overlay: {\n    zIndex: 100,\n    gridArea: '1/1',\n  },\n  content: {\n    gridArea: '1/1',\n    position: 'relative',\n  },\n  grid: {\n    display: 'grid',\n  },\n  relative: {\n    position: 'relative',\n  },\n\n  // this helps keep the vertical guide inside the parent view container,\n  // similar style exists in the single LGV's trackscontainer\n  rubberbandContainer: {\n    position: 'relative',\n    overflow: 'hidden',\n  },\n}))\n\ntype LCV = LinearComparativeViewModel\n\nconst Overlays = observer(({ model }: { model: LCV }) => {\n  const classes = useStyles()\n  return (\n    <>\n      {model.tracks.map(track => {\n        const [display] = track.displays\n        const { RenderingComponent } = display\n        const trackId = getConf(track, 'trackId')\n        return RenderingComponent ? (\n          <div\n            className={classes.overlay}\n            key={trackId}\n            style={{\n              height: model.middleComparativeHeight,\n              overflow: 'hidden',\n            }}\n          >\n            <RenderingComponent model={display} />\n          </div>\n        ) : null\n      })}\n    </>\n  )\n})\n\n// The comparative is in the middle of the views\nconst MiddleComparativeView = observer(\n  ({ model, ExtraButtons }: { ExtraButtons?: React.ReactNode; model: LCV }) => {\n    const classes = useStyles()\n    const { views } = model\n    const { pluginManager } = getEnv(model)\n    const { ReactComponent } = pluginManager.getViewType(views[0].type)\n\n    return (\n      <div className={classes.rubberbandContainer}>\n        <Header ExtraButtons={ExtraButtons} model={model} />\n        <RubberBand\n          model={model}\n          ControlComponent={<div style={{ width: '100%', height: 15 }} />}\n        />\n        <div className={classes.container}>\n          <ReactComponent model={views[0]} />\n          <div className={classes.grid}>\n            <Overlays model={model} />\n          </div>\n          <ResizeHandle\n            onDrag={n =>\n              model.setMiddleComparativeHeight(\n                model.middleComparativeHeight + n,\n              )\n            }\n            style={{\n              height: 4,\n              background: '#ccc',\n            }}\n          />\n          <ReactComponent model={views[1]} />\n        </div>\n      </div>\n    )\n  },\n)\nconst OverlayComparativeView = observer(\n  ({ model, ExtraButtons }: { ExtraButtons?: React.ReactNode; model: LCV }) => {\n    const classes = useStyles()\n    const { views } = model\n    const { pluginManager } = getEnv(model)\n    return (\n      <div className={classes.rubberbandContainer}>\n        <Header model={model} ExtraButtons={ExtraButtons} />\n        <RubberBand\n          model={model}\n          ControlComponent={<div style={{ width: '100%', height: 15 }} />}\n        />\n\n        <div className={classes.container}>\n          <div className={classes.content}>\n            <div className={classes.relative}>\n              {views.map(view => {\n                const { ReactComponent } = pluginManager.getViewType(view.type)\n                return <ReactComponent key={view.id} model={view} />\n              })}\n            </div>\n            <Overlays model={model} />\n          </div>\n        </div>\n      </div>\n    )\n  },\n)\n\nconst LinearComparativeView = observer(\n  (props: { ExtraButtons?: React.ReactNode; model: LCV }) => {\n    const { model } = props\n    const middle = model.tracks.some(({ displays }) =>\n      displays.some((d: AnyConfigurationModel) => getConf(d, 'middle')),\n    )\n    return middle ? (\n      <MiddleComparativeView {...props} />\n    ) : (\n      <OverlayComparativeView {...props} />\n    )\n  },\n)\n\nexport default LinearComparativeView\n"],"names":["useStyles","makeStyles","theme","rubberBand","height","background","palette","tertiary","alpha","main","primary","position","zIndex","textAlign","overflow","rubberBandControl","cursor","width","minHeight","rubberBandText","color","contrastText","popover","mouseEvents","paper","paddingLeft","spacing","paddingRight","guide","pointerEvents","sm","fontSize","VerticalGuide","observer","model","coordX","classes","Tooltip","open","placement","title","views","map","view","pxToBp","elt","Typography","className","stringify","JSON","arrow","style","left","ControlComponent","useState","startX","setStartX","currentX","setCurrentX","anchorPosition","setAnchorPosition","guideX","setGuideX","controlsRef","useRef","rubberBandRef","mouseDragging","undefined","mouseDown","event","preventDefault","stopPropagation","relativeX","clientX","target","getBoundingClientRect","mouseMove","mouseOut","forEach","setOffsets","handleClose","useEffect","globalMouseMove","current","globalMouseUp","clientY","offsetX","args","leftPx","rightPx","leftOffset","rightOffset","computeOffsets","window","addEventListener","removeEventListener","Math","abs","Boolean","role","ref","onMouseDown","onMouseOut","onMouseMove","right","leftBpOffset","rightBpOffset","numOfBpSelected","ceil","bpPerPx","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","keepMounted","disableRestoreFocus","l","variant","n","i","toLocaleString","Menu","anchorReference","top","onMenuItemClick","_","callback","onClose","menuItems","rubberBandMenuItems","headerBar","gridArea","display","spacer","flexGrow","bp","alignItems","marginLeft","searchContainer","searchBox","LinkViews","IconButton","onClick","toggleLinkViews","linkViews","LinkOff","Link","SquareView","squareView","CropFree","ExtraButtons","anyShowHeaders","some","hideHeader","showHelp","round","coarseTotalBp","id","container","overlay","content","grid","relative","rubberbandContainer","Overlays","tracks","track","displays","RenderingComponent","trackId","getConf","middleComparativeHeight","MiddleComparativeView","ReactComponent","getEnv","pluginManager","getViewType","type","ResizeHandle","onDrag","setMiddleComparativeHeight","OverlayComparativeView","props","d"],"sourceRoot":""}