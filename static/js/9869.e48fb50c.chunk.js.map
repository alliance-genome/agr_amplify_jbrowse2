{"version":3,"file":"static/js/9869.e48fb50c.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/icons-material/MoreHoriz.js","../../../node_modules/@mui/icons-material/ShoppingCart.js","../../../node_modules/react-virtualized-auto-sizer/dist/index.esm.js","../../../node_modules/react-merge-refs/src/index.tsx","../../../node_modules/react-vtree/dist/es/utils.js","../../../node_modules/react-vtree/dist/es/Tree.js","../../../node_modules/react-vtree/dist/es/FixedSizeTree.js","../../../node_modules/memoize-one/dist/memoize-one.esm.js","../../../node_modules/react-window/src/timer.js","../../../node_modules/react-window/src/domHelpers.js","../../../node_modules/react-window/src/createGridComponent.js","../../../node_modules/react-window/src/createListComponent.js","../../../node_modules/react-window/src/VariableSizeList.js","../../../node_modules/react-vtree/dist/es/VariableSizeTree.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zM1 2v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.14 0-.25-.11-.25-.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.58-6.49c.08-.14.12-.31.12-.48 0-.55-.45-1-1-1H5.21l-.94-2H1zm16 16c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2z\"\n}), 'ShoppingCart');\nexports.default = _default;","import { createElement, PureComponent } from 'react';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n **/\n\n// Check `document` and `window` in case of server-side rendering\nvar windowObject = void 0;\nif (typeof window !== 'undefined') {\n  windowObject = window;\n\n  // eslint-disable-next-line no-restricted-globals\n} else if (typeof self !== 'undefined') {\n  // eslint-disable-next-line no-restricted-globals\n  windowObject = self;\n} else {\n  windowObject = global;\n}\n\nvar cancelFrame = null;\nvar requestFrame = null;\n\nvar TIMEOUT_DURATION = 20;\n\nvar clearTimeoutFn = windowObject.clearTimeout;\nvar setTimeoutFn = windowObject.setTimeout;\n\nvar cancelAnimationFrameFn = windowObject.cancelAnimationFrame || windowObject.mozCancelAnimationFrame || windowObject.webkitCancelAnimationFrame;\n\nvar requestAnimationFrameFn = windowObject.requestAnimationFrame || windowObject.mozRequestAnimationFrame || windowObject.webkitRequestAnimationFrame;\n\nif (cancelAnimationFrameFn == null || requestAnimationFrameFn == null) {\n  // For environments that don't support animation frame,\n  // fallback to a setTimeout based approach.\n  cancelFrame = clearTimeoutFn;\n  requestFrame = function requestAnimationFrameViaSetTimeout(callback) {\n    return setTimeoutFn(callback, TIMEOUT_DURATION);\n  };\n} else {\n  // Counter intuitively, environments that support animation frames can be trickier.\n  // Chrome's \"Throttle non-visible cross-origin iframes\" flag can prevent rAFs from being called.\n  // In this case, we should fallback to a setTimeout() implementation.\n  cancelFrame = function cancelFrame(_ref) {\n    var _ref2 = slicedToArray(_ref, 2),\n        animationFrameID = _ref2[0],\n        timeoutID = _ref2[1];\n\n    cancelAnimationFrameFn(animationFrameID);\n    clearTimeoutFn(timeoutID);\n  };\n  requestFrame = function requestAnimationFrameWithSetTimeoutFallback(callback) {\n    var animationFrameID = requestAnimationFrameFn(function animationFrameCallback() {\n      clearTimeoutFn(timeoutID);\n      callback();\n    });\n\n    var timeoutID = setTimeoutFn(function timeoutCallback() {\n      cancelAnimationFrameFn(animationFrameID);\n      callback();\n    }, TIMEOUT_DURATION);\n\n    return [animationFrameID, timeoutID];\n  };\n}\n\nfunction createDetectElementResize(nonce) {\n  var animationKeyframes = void 0;\n  var animationName = void 0;\n  var animationStartEvent = void 0;\n  var animationStyle = void 0;\n  var checkTriggers = void 0;\n  var resetTriggers = void 0;\n  var scrollListener = void 0;\n\n  var attachEvent = typeof document !== 'undefined' && document.attachEvent;\n  if (!attachEvent) {\n    resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth !== element.__resizeLast__.width || element.offsetHeight !== element.__resizeLast__.height;\n    };\n\n    scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n      this.__resizeRAF__ = requestFrame(function animationFrame() {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n          element.__resizeListeners__.forEach(function forEachResizeListener(fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n\n    /* Detect CSS Animations support to detect element display/re-attach */\n    var animation = false;\n    var keyframeprefix = '';\n    animationStartEvent = 'animationstart';\n    var domPrefixes = 'Webkit Moz O ms'.split(' ');\n    var startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' ');\n    var pfx = '';\n    {\n      var elm = document.createElement('fakeelement');\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationStartEvent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n\n    animationName = 'resizeanim';\n    animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n        var elementStyle = windowObject.getComputedStyle(element);\n        if (elementStyle && elementStyle.position === 'static') {\n          element.style.position = 'relative';\n        }\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        var expandTrigger = doc.createElement('div');\n        expandTrigger.className = 'expand-trigger';\n        expandTrigger.appendChild(doc.createElement('div'));\n        var contractTrigger = doc.createElement('div');\n        contractTrigger.className = 'contract-trigger';\n        element.__resizeTriggers__.appendChild(expandTrigger);\n        element.__resizeTriggers__.appendChild(contractTrigger);\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n\n        /* Listen for a css animation to detect element display/re-attach */\n        if (animationStartEvent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName === animationName) {\n              resetTriggers(element);\n            }\n          };\n          element.__resizeTriggers__.addEventListener(animationStartEvent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationStartEvent, element.__resizeTriggers__.__animationListener__);\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {\n          // Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}\n\nvar AutoSizer = function (_React$PureComponent) {\n  inherits(AutoSizer, _React$PureComponent);\n\n  function AutoSizer() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = AutoSizer.__proto__ || Object.getPrototypeOf(AutoSizer)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    }, _this._onResize = function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n\n        var _height = _this._parentNode.offsetHeight || 0;\n        var _width = _this._parentNode.offsetWidth || 0;\n\n        var _style = window.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(_style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(_style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(_style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(_style.paddingBottom, 10) || 0;\n\n        var newHeight = _height - paddingTop - paddingBottom;\n        var newWidth = _width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: _height - paddingTop - paddingBottom,\n            width: _width - paddingLeft - paddingRight\n          });\n\n          onResize({ height: _height, width: _width });\n        }\n      }\n    }, _this._setRef = function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(AutoSizer, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n\n        // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n        this._detectElementResize = createDetectElementResize(nonce);\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          className = _props.className,\n          disableHeight = _props.disableHeight,\n          disableWidth = _props.disableWidth,\n          style = _props.style;\n      var _state = this.state,\n          height = _state.height,\n          width = _state.width;\n\n      // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = { overflow: 'visible' };\n      var childParams = {};\n\n      // Avoid rendering children before the initial measurements have been collected.\n      // At best this would just be wasting cycles.\n      var bailoutOnChildren = false;\n\n      if (!disableHeight) {\n        if (height === 0) {\n          bailoutOnChildren = true;\n        }\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        if (width === 0) {\n          bailoutOnChildren = true;\n        }\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n\n      return createElement(\n        'div',\n        {\n          className: className,\n          ref: this._setRef,\n          style: _extends({}, outerStyle, style)\n        },\n        !bailoutOnChildren && children(childParams)\n      );\n    }\n  }]);\n  return AutoSizer;\n}(PureComponent);\n\nAutoSizer.defaultProps = {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n};\n\nexport default AutoSizer;\n","import * as React from \"react\";\n\nexport default function mergeRefs<T = any>(\n  refs: Array<React.MutableRefObject<T> | React.LegacyRef<T>>\n): React.RefCallback<T> {\n  return (value) => {\n    refs.forEach((ref) => {\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref != null) {\n        (ref as React.MutableRefObject<T | null>).current = value;\n      }\n    });\n  };\n}\n","// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport var noop = function noop() {};\nexport var identity = function identity(value) {\n  return value;\n};\nexport var createBasicRecord = function createBasicRecord(pub, parent) {\n  if (parent === void 0) {\n    parent = null;\n  }\n\n  return {\n    child: null,\n    isShown: parent ? parent.public.isOpen && parent.isShown : true,\n    parent: parent,\n    public: pub,\n    sibling: null,\n    visited: false\n  };\n};\nexport var getIdByIndex = function getIdByIndex(index, _ref) {\n  var getRecordData = _ref.getRecordData;\n\n  var _getRecordData = getRecordData(index),\n      id = _getRecordData.data.id;\n\n  return id;\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\n\n/* eslint-disable no-labels,max-depth,complexity */\nimport React, { createRef, PureComponent } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport { noop } from './utils';\n// eslint-disable-next-line @typescript-eslint/naming-convention,@typescript-eslint/prefer-readonly-parameter-types\nexport var Row = function Row(_ref) {\n  var index = _ref.index,\n      _ref$data = _ref.data,\n      Node = _ref$data.component,\n      getRecordData = _ref$data.getRecordData,\n      treeData = _ref$data.treeData,\n      style = _ref.style,\n      isScrolling = _ref.isScrolling;\n  var data = getRecordData(index);\n  return /*#__PURE__*/React.createElement(Node, Object.assign({\n    isScrolling: isScrolling,\n    style: style,\n    treeData: treeData\n  }, data));\n};\n\n// If refresh is required, we will run the TreeWalker. It will completely\n// update all requests and reset every state to default.\nvar generateNewTree = function generateNewTree(_ref2, _ref3, state) {\n  var createRecord = _ref2.createRecord;\n  var buildingTaskTimeout = _ref3.buildingTaskTimeout,\n      placeholder = _ref3.placeholder,\n      _ref3$async = _ref3.async,\n      async = _ref3$async === void 0 ? false : _ref3$async,\n      treeWalker = _ref3.treeWalker;\n  var shouldPreservePreviousState = // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  async && state.records !== undefined;\n  var previousRecords = state.records;\n  var order = [];\n  var records = new Map();\n  var requestIdleCallbackOptions = buildingTaskTimeout ? {\n    timeout: buildingTaskTimeout\n  } : undefined;\n  var meta = new WeakMap();\n  var iter = treeWalker();\n\n  var _iter$next = iter.next(),\n      root = _iter$next.value; // Each record has a link to a parent, the next sibling and the next child.\n  // Having this info, we can perform a depth-first traverse.\n\n\n  var rootRecord = createRecord(root.data, state, undefined, shouldPreservePreviousState ? previousRecords.get(root.data.id) : undefined);\n  records.set(rootRecord.public.data.id, rootRecord);\n  meta.set(rootRecord, root);\n  var currentRecord = rootRecord;\n  var isTraversingRoot = true;\n  var tempRecord = rootRecord;\n  var useIdleCallback = typeof 'requestIdleCallback' !== 'undefined' && placeholder !== undefined && // If placeholder is set to null and this is the first build, idle callback\n  // won't be used. It is necessary for trees with async data which can be\n  // extremely complex but the first build is quite easy. During the following\n  // idle callbacks the old tree will be shown.\n  !(placeholder === null && !state.order);\n  var hasTime = useIdleCallback ? function (deadline) {\n    return deadline.timeRemaining() > 0;\n  } : function () {\n    return true;\n  };\n\n  var task = function task(deadline) {\n    while (currentRecord !== null) {\n      if (!hasTime(deadline)) {\n        requestIdleCallback(task, requestIdleCallbackOptions);\n        return;\n      }\n\n      if (!currentRecord.visited) {\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n        var _iter$next2 = iter.next(meta.get(currentRecord)),\n            child = _iter$next2.value; // When the generator returns the undefined value we consider that all\n        // children are already sent and we need to select the new parent\n        // element to get its children.\n\n\n        if (child === undefined) {\n          if (isTraversingRoot) {\n            isTraversingRoot = false;\n          } else {\n            if (currentRecord.isShown) {\n              order.push(currentRecord.public.data.id);\n            }\n\n            currentRecord.visited = currentRecord.child !== null;\n            currentRecord = currentRecord.child !== null ? currentRecord.child : currentRecord.sibling !== null ? currentRecord.sibling : currentRecord.parent;\n          }\n\n          tempRecord = currentRecord;\n          continue;\n        }\n\n        var childRecord = createRecord(child.data, state, isTraversingRoot ? undefined : currentRecord, shouldPreservePreviousState ? previousRecords.get(child.data.id) : undefined);\n        records.set(childRecord.public.data.id, childRecord);\n        meta.set(childRecord, child);\n\n        if (!isTraversingRoot && tempRecord === currentRecord) {\n          tempRecord.child = childRecord;\n        } else {\n          tempRecord.sibling = childRecord;\n        }\n\n        tempRecord = childRecord;\n      } else {\n        currentRecord.visited = false;\n        currentRecord = currentRecord.sibling !== null ? currentRecord.sibling : currentRecord.parent;\n        tempRecord = currentRecord;\n      }\n    }\n\n    if (useIdleCallback) {\n      state.setState({\n        order: order,\n        records: records,\n        updateRequest: {}\n      });\n    }\n  };\n\n  if (useIdleCallback) {\n    requestIdleCallback(task, requestIdleCallbackOptions);\n  } else {\n    task();\n  } // If we want to preserve the previous state and use the requestIdleCallback,\n  // we need to return the old state.\n\n\n  return placeholder !== undefined && async && state.order ? state : {\n    order: order,\n    records: records\n  };\n};\n\nvar MAX_FUNCTION_ARGUMENTS = 32768;\nvar SPLICE_DEFAULT_ARGUMENTS_NUMBER = 2; // If we need to perform only the update, treeWalker won't be used. Update will\n// work internally, traversing only the subtree of elements that require\n// update through the opennessState option.\n\nvar updateExistingTree = function updateExistingTree(_ref4, _ref5) {\n  var order = _ref4.order,\n      records = _ref4.records;\n  var opennessState = _ref5.opennessState;\n\n  if (typeof opennessState !== 'object') {\n    return null;\n  }\n\n  for (var id in opennessState) {\n    if (!records.has(id)) {\n      continue;\n    }\n\n    var opts = opennessState[id];\n    var ownerRecord = records.get(id); // Here we unify the shape of openness state options\n\n    var _ref6 = typeof opts === 'boolean' ? {\n      open: opts\n    } : opts,\n        open = _ref6.open,\n        _ref6$subtreeCallback = _ref6.subtreeCallback,\n        subtreeCallback = _ref6$subtreeCallback === void 0 ? noop : _ref6$subtreeCallback;\n\n    var update = noop;\n    var apply = noop;\n\n    if (ownerRecord.isShown) {\n      if (open) {\n        (function () {\n          // If received rules require us to open the subtree, we have 2 cases:\n          // 1. The node is not opened yet. In this case we simply have to\n          // calculate and add new ids.\n          // 2. The node is opened already. In this case we have to remove all\n          // existing ids and replace them with new ids.\n          var index = order.indexOf(id); // Here we calculate a count of visible subtree nodes to remove from\n          // `order`. Then we will replace the gap with the updated list of\n          // subtree nodes.\n\n          var recordNextToSubtree = ownerRecord;\n\n          while (recordNextToSubtree !== null) {\n            if (recordNextToSubtree.sibling !== null) {\n              recordNextToSubtree = recordNextToSubtree.sibling;\n              break;\n            }\n\n            recordNextToSubtree = recordNextToSubtree.parent;\n          }\n\n          var countToRemove = recordNextToSubtree === null ? order.length - 1 - index : order.indexOf(recordNextToSubtree.public.data.id) - 1 - index;\n          var orderParts = [[index + 1, countToRemove]]; // Unfortunately, splice cannot work with big arrays. If array exceeds\n          // some length it may fire an exception. The length is specific for\n          // each engine; e.g., MDN says about 65536 for Webkit. So, to avoid this\n          // overflow, I split `order` parts to chunks by 32768 elements in each\n          // one. These chunks will be sent as arguments to the `splice` method.\n          //\n          // To avoid array concatenations which may cause Major GC, I set two\n          // first arguments as `splice`'s `start` and `deleteCount` arguments.\n\n          update = function update(record) {\n            // We have to consider only the newly shown elements that are not in\n            // the order list yet. We should do it AFTER the visibility update\n            // happens because otherwise we won't be able to distinguish if the\n            // element should be included in the order list.\n            // Update record visibility\n            record.isShown = record.parent ? record.parent.public.isOpen && record.parent.isShown : true;\n\n            if (record.isShown) {\n              var currentOrderPart = orderParts[orderParts.length - 1];\n              currentOrderPart.push(record.public.data.id);\n\n              if (currentOrderPart.length === MAX_FUNCTION_ARGUMENTS + SPLICE_DEFAULT_ARGUMENTS_NUMBER) {\n                orderParts.push([index + 1 + MAX_FUNCTION_ARGUMENTS * orderParts.length, 0]);\n              }\n            }\n          };\n\n          apply = function apply() {\n            for (var i = 0; i < orderParts.length; i++) {\n              var _ref7;\n\n              // @ts-expect-error: too generic for TS\n              (_ref7 = order).splice.apply(_ref7, orderParts[i]);\n            }\n          };\n        })();\n      } else if (ownerRecord.public.isOpen) {\n        (function () {\n          // If received rules require us to close the subtree, we have to remove\n          // all subtree ids from the order list.\n          var index = order.indexOf(id);\n          var count = 0;\n\n          update = function update(record) {\n            // We have to consider only currently visible subtree nodes BEFORE\n            // their visibility is updated. Otherwise we will have incorrect\n            // number of items to remove: we cannot remove elements that are not\n            // in the order list.\n            //\n            // If we do it after the visibility update, we will be unable to\n            // understand if the element is still in the order list.\n            if (record.isShown) {\n              count += 1;\n            } // Update record visibility\n\n\n            record.isShown = record.parent ? record.parent.public.isOpen && record.parent.isShown : true;\n          };\n\n          apply = function apply() {\n            // Remove data after element with index\n            order.splice(index + 1, count);\n          };\n        })();\n      }\n    }\n\n    var currentRecord = ownerRecord;\n\n    while (currentRecord !== null) {\n      if (!currentRecord.visited) {\n        currentRecord.public.isOpen = currentRecord === ownerRecord ? open : currentRecord.public.isOpen;\n        subtreeCallback(currentRecord.public, ownerRecord.public);\n\n        if (currentRecord !== ownerRecord) {\n          update(currentRecord);\n        }\n\n        currentRecord.visited = currentRecord.child !== null; // This algorithm is a bit different from the visit algorithm in the\n        // tree generator. We are restricted with the bounds of a subtree and\n        // shouldn't go over it. So we cannot search for the ownerRecord's\n        // parent or sibling because it will lead us out of the subtree.\n\n        currentRecord = // Look for child in any case\n        currentRecord.child !== null ? currentRecord.child : // Stop looking for next element if currentRecord is root.\n        currentRecord === ownerRecord ? null : // Otherwise, look for sibling or parent\n        currentRecord.sibling !== null ? currentRecord.sibling : currentRecord.parent;\n      } else {\n        currentRecord.visited = false;\n        currentRecord = currentRecord === ownerRecord ? null : currentRecord.sibling !== null ? currentRecord.sibling : currentRecord.parent;\n      }\n    }\n\n    apply();\n  }\n\n  return {\n    order: order,\n    records: records,\n    updateRequest: {}\n  };\n};\n\nexport var createTreeComputer = function createTreeComputer(creatorOptions) {\n  return function (props, state, options) {\n    return options.refresh ? generateNewTree(creatorOptions, props, state) : updateExistingTree(state, options);\n  };\n};\n\nvar Tree = /*#__PURE__*/function (_PureComponent) {\n  _inheritsLoose(Tree, _PureComponent);\n\n  Tree.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n    var _props$listRef = props.listRef,\n        listRef = _props$listRef === void 0 ? null : _props$listRef,\n        treeWalker = props.treeWalker;\n    var computeTree = state.computeTree,\n        list = state.list,\n        order = state.order,\n        oldTreeWalker = state.treeWalker;\n    return _extends({\n      attachRefs: mergeRefs([list, listRef])\n    }, treeWalker !== oldTreeWalker || !order ? computeTree(props, state, {\n      refresh: true\n    }) : null, {\n      treeWalker: treeWalker\n    });\n  };\n\n  function Tree(props, context) {\n    var _this;\n\n    _this = _PureComponent.call(this, props, context) || this;\n    _this.getRecordData = _this.getRecordData.bind(_assertThisInitialized(_this));\n    /* eslint-disable react/no-unused-state,@typescript-eslint/consistent-type-assertions */\n\n    _this.state = {\n      list: /*#__PURE__*/createRef(),\n      recomputeTree: _this.recomputeTree.bind(_assertThisInitialized(_this)),\n      setState: _this.setState.bind(_assertThisInitialized(_this))\n    };\n    /* eslint-enable react/no-unused-state,@typescript-eslint/consistent-type-assertions */\n\n    return _this;\n  }\n\n  var _proto = Tree.prototype;\n\n  _proto.getItemData = function getItemData() {\n    var _this$props = this.props,\n        component = _this$props.children,\n        treeData = _this$props.itemData;\n    return {\n      component: component,\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      getRecordData: this.getRecordData,\n      treeData: treeData\n    };\n  };\n\n  _proto.getRecordData = function getRecordData(index) {\n    var _this$state = this.state,\n        order = _this$state.order,\n        records = _this$state.records;\n    return records.get(order[index]).public;\n  };\n\n  _proto.recomputeTree = function recomputeTree(state) {\n    var _this2 = this;\n\n    return new Promise(function (resolve) {\n      _this2.setState(function (prevState) {\n        return prevState.computeTree(_this2.props, prevState, {\n          opennessState: state\n        });\n      }, resolve);\n    });\n  };\n\n  _proto.scrollTo = function scrollTo(scrollOffset) {\n    var _this$state$list$curr;\n\n    // eslint-disable-next-line react/destructuring-assignment\n    (_this$state$list$curr = this.state.list.current) == null ? void 0 : _this$state$list$curr.scrollTo(scrollOffset);\n  };\n\n  _proto.scrollToItem = function scrollToItem(id, align) {\n    var _this$state$list$curr2;\n\n    // eslint-disable-next-line react/destructuring-assignment\n    (_this$state$list$curr2 = this.state.list.current) == null ? void 0 : _this$state$list$curr2.scrollToItem(this.state.order.indexOf(id), align);\n  };\n\n  return Tree;\n}(PureComponent);\n\nTree.defaultProps = {\n  rowComponent: Row\n};\nexport default Tree;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport React from 'react';\nimport { FixedSizeList } from 'react-window';\nimport Tree, { createTreeComputer } from './Tree';\nimport { createBasicRecord, getIdByIndex } from './utils';\nvar computeTree = createTreeComputer({\n  createRecord: function createRecord(data, _ref, parent, previousRecord) {\n    var recomputeTree = _ref.recomputeTree;\n    return createBasicRecord({\n      data: data,\n      isOpen: previousRecord ? previousRecord.public.isOpen : data.isOpenByDefault,\n      setOpen: function setOpen(state) {\n        var _recomputeTree;\n\n        return recomputeTree((_recomputeTree = {}, _recomputeTree[data.id] = state, _recomputeTree));\n      }\n    }, parent);\n  }\n});\nexport var FixedSizeTree = /*#__PURE__*/function (_Tree) {\n  _inheritsLoose(FixedSizeTree, _Tree);\n\n  function FixedSizeTree(props, context) {\n    var _this;\n\n    _this = _Tree.call(this, props, context) || this;\n    _this.state = _extends({}, _this.state, {\n      computeTree: computeTree\n    });\n    return _this;\n  }\n\n  var _proto = FixedSizeTree.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        listRef = _this$props.listRef,\n        placeholder = _this$props.placeholder,\n        treeWalker = _this$props.treeWalker,\n        rowComponent = _this$props.rowComponent,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"listRef\", \"placeholder\", \"treeWalker\", \"rowComponent\"]);\n\n    var _this$state = this.state,\n        attachRefs = _this$state.attachRefs,\n        order = _this$state.order;\n    return placeholder && order.length === 0 ? placeholder : /*#__PURE__*/React.createElement(FixedSizeList, Object.assign({}, rest, {\n      itemCount: order.length,\n      itemData: this.getItemData() // eslint-disable-next-line @typescript-eslint/unbound-method\n      ,\n      itemKey: getIdByIndex // eslint-disable-next-line @typescript-eslint/unbound-method\n      ,\n      ref: attachRefs\n    }), rowComponent);\n  };\n\n  return FixedSizeTree;\n}(Tree);","var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var lastThis;\n    var lastArgs = [];\n    var lastResult;\n    var calledOnce = false;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n            return lastResult;\n        }\n        lastResult = resultFn.apply(this, newArgs);\n        calledOnce = true;\n        lastThis = this;\n        lastArgs = newArgs;\n        return lastResult;\n    }\n    return memoized;\n}\n\nexport default memoizeOne;\n","// @flow\n\n// Animation frame based implementation of setTimeout.\n// Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js\n\nconst hasNativePerformanceNow =\n  typeof performance === 'object' && typeof performance.now === 'function';\n\nconst now = hasNativePerformanceNow\n  ? () => performance.now()\n  : () => Date.now();\n\nexport type TimeoutID = {|\n  id: AnimationFrameID,\n|};\n\nexport function cancelTimeout(timeoutID: TimeoutID) {\n  cancelAnimationFrame(timeoutID.id);\n}\n\nexport function requestTimeout(callback: Function, delay: number): TimeoutID {\n  const start = now();\n\n  function tick() {\n    if (now() - start >= delay) {\n      callback.call(null);\n    } else {\n      timeoutID.id = requestAnimationFrame(tick);\n    }\n  }\n\n  const timeoutID: TimeoutID = {\n    id: requestAnimationFrame(tick),\n  };\n\n  return timeoutID;\n}\n","// @flow\n\nlet size: number = -1;\n\n// This utility copied from \"dom-helpers\" package.\nexport function getScrollbarSize(recalculate?: boolean = false): number {\n  if (size === -1 || recalculate) {\n    const div = document.createElement('div');\n    const style = div.style;\n    style.width = '50px';\n    style.height = '50px';\n    style.overflow = 'scroll';\n\n    ((document.body: any): HTMLBodyElement).appendChild(div);\n\n    size = div.offsetWidth - div.clientWidth;\n\n    ((document.body: any): HTMLBodyElement).removeChild(div);\n  }\n\n  return size;\n}\n\nexport type RTLOffsetType =\n  | 'negative'\n  | 'positive-descending'\n  | 'positive-ascending';\n\nlet cachedRTLResult: RTLOffsetType | null = null;\n\n// TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n// Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\n// Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\n// The safest way to check this is to intentionally set a negative offset,\n// and then verify that the subsequent \"scroll\" event matches the negative offset.\n// If it does not match, then we can assume a non-standard RTL scroll implementation.\nexport function getRTLOffsetType(recalculate?: boolean = false): RTLOffsetType {\n  if (cachedRTLResult === null || recalculate) {\n    const outerDiv = document.createElement('div');\n    const outerStyle = outerDiv.style;\n    outerStyle.width = '50px';\n    outerStyle.height = '50px';\n    outerStyle.overflow = 'scroll';\n    outerStyle.direction = 'rtl';\n\n    const innerDiv = document.createElement('div');\n    const innerStyle = innerDiv.style;\n    innerStyle.width = '100px';\n    innerStyle.height = '100px';\n\n    outerDiv.appendChild(innerDiv);\n\n    ((document.body: any): HTMLBodyElement).appendChild(outerDiv);\n\n    if (outerDiv.scrollLeft > 0) {\n      cachedRTLResult = 'positive-descending';\n    } else {\n      outerDiv.scrollLeft = 1;\n      if (outerDiv.scrollLeft === 0) {\n        cachedRTLResult = 'negative';\n      } else {\n        cachedRTLResult = 'positive-ascending';\n      }\n    }\n\n    ((document.body: any): HTMLBodyElement).removeChild(outerDiv);\n\n    return cachedRTLResult;\n  }\n\n  return cachedRTLResult;\n}\n","// @flow\n\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport { cancelTimeout, requestTimeout } from './timer';\nimport { getScrollbarSize, getRTLOffsetType } from './domHelpers';\n\nimport type { TimeoutID } from './timer';\n\ntype Direction = 'ltr' | 'rtl';\nexport type ScrollToAlign = 'auto' | 'smart' | 'center' | 'start' | 'end';\n\ntype itemSize = number | ((index: number) => number);\n\ntype RenderComponentProps<T> = {|\n  columnIndex: number,\n  data: T,\n  isScrolling?: boolean,\n  rowIndex: number,\n  style: Object,\n|};\nexport type RenderComponent<T> = React$ComponentType<\n  $Shape<RenderComponentProps<T>>\n>;\n\ntype ScrollDirection = 'forward' | 'backward';\n\ntype OnItemsRenderedCallback = ({\n  overscanColumnStartIndex: number,\n  overscanColumnStopIndex: number,\n  overscanRowStartIndex: number,\n  overscanRowStopIndex: number,\n  visibleColumnStartIndex: number,\n  visibleColumnStopIndex: number,\n  visibleRowStartIndex: number,\n  visibleRowStopIndex: number,\n}) => void;\ntype OnScrollCallback = ({\n  horizontalScrollDirection: ScrollDirection,\n  scrollLeft: number,\n  scrollTop: number,\n  scrollUpdateWasRequested: boolean,\n  verticalScrollDirection: ScrollDirection,\n}) => void;\n\ntype ScrollEvent = SyntheticEvent<HTMLDivElement>;\ntype ItemStyleCache = { [key: string]: Object };\n\ntype OuterProps = {|\n  children: React$Node,\n  className: string | void,\n  onScroll: ScrollEvent => void,\n  style: {\n    [string]: mixed,\n  },\n|};\n\ntype InnerProps = {|\n  children: React$Node,\n  style: {\n    [string]: mixed,\n  },\n|};\n\nexport type Props<T> = {|\n  children: RenderComponent<T>,\n  className?: string,\n  columnCount: number,\n  columnWidth: itemSize,\n  direction: Direction,\n  height: number,\n  initialScrollLeft?: number,\n  initialScrollTop?: number,\n  innerRef?: any,\n  innerElementType?: string | React$AbstractComponent<InnerProps, any>,\n  innerTagName?: string, // deprecated\n  itemData: T,\n  itemKey?: (params: {|\n    columnIndex: number,\n    data: T,\n    rowIndex: number,\n  |}) => any,\n  onItemsRendered?: OnItemsRenderedCallback,\n  onScroll?: OnScrollCallback,\n  outerRef?: any,\n  outerElementType?: string | React$AbstractComponent<OuterProps, any>,\n  outerTagName?: string, // deprecated\n  overscanColumnCount?: number,\n  overscanColumnsCount?: number, // deprecated\n  overscanCount?: number, // deprecated\n  overscanRowCount?: number,\n  overscanRowsCount?: number, // deprecated\n  rowCount: number,\n  rowHeight: itemSize,\n  style?: Object,\n  useIsScrolling: boolean,\n  width: number,\n|};\n\ntype State = {|\n  instance: any,\n  isScrolling: boolean,\n  horizontalScrollDirection: ScrollDirection,\n  scrollLeft: number,\n  scrollTop: number,\n  scrollUpdateWasRequested: boolean,\n  verticalScrollDirection: ScrollDirection,\n|};\n\ntype getItemOffset = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype getItemSize = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype getEstimatedTotalSize = (props: Props<any>, instanceProps: any) => number;\ntype GetOffsetForItemAndAlignment = (\n  props: Props<any>,\n  index: number,\n  align: ScrollToAlign,\n  scrollOffset: number,\n  instanceProps: any,\n  scrollbarSize: number\n) => number;\ntype GetStartIndexForOffset = (\n  props: Props<any>,\n  offset: number,\n  instanceProps: any\n) => number;\ntype GetStopIndexForStartIndex = (\n  props: Props<any>,\n  startIndex: number,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype InitInstanceProps = (props: Props<any>, instance: any) => any;\ntype ValidateProps = (props: Props<any>) => void;\n\nconst IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nconst defaultItemKey = ({ columnIndex, data, rowIndex }) =>\n  `${rowIndex}:${columnIndex}`;\n\n// In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\nlet devWarningsOverscanCount = null;\nlet devWarningsOverscanRowsColumnsCount = null;\nlet devWarningsTagName = null;\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsOverscanCount = new WeakSet();\n    devWarningsOverscanRowsColumnsCount = new WeakSet();\n    devWarningsTagName = new WeakSet();\n  }\n}\n\nexport default function createGridComponent({\n  getColumnOffset,\n  getColumnStartIndexForOffset,\n  getColumnStopIndexForStartIndex,\n  getColumnWidth,\n  getEstimatedTotalHeight,\n  getEstimatedTotalWidth,\n  getOffsetForColumnAndAlignment,\n  getOffsetForRowAndAlignment,\n  getRowHeight,\n  getRowOffset,\n  getRowStartIndexForOffset,\n  getRowStopIndexForStartIndex,\n  initInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange,\n  validateProps,\n}: {|\n  getColumnOffset: getItemOffset,\n  getColumnStartIndexForOffset: GetStartIndexForOffset,\n  getColumnStopIndexForStartIndex: GetStopIndexForStartIndex,\n  getColumnWidth: getItemSize,\n  getEstimatedTotalHeight: getEstimatedTotalSize,\n  getEstimatedTotalWidth: getEstimatedTotalSize,\n  getOffsetForColumnAndAlignment: GetOffsetForItemAndAlignment,\n  getOffsetForRowAndAlignment: GetOffsetForItemAndAlignment,\n  getRowOffset: getItemOffset,\n  getRowHeight: getItemSize,\n  getRowStartIndexForOffset: GetStartIndexForOffset,\n  getRowStopIndexForStartIndex: GetStopIndexForStartIndex,\n  initInstanceProps: InitInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange: boolean,\n  validateProps: ValidateProps,\n|}) {\n  return class Grid<T> extends PureComponent<Props<T>, State> {\n    _instanceProps: any = initInstanceProps(this.props, this);\n    _resetIsScrollingTimeoutId: TimeoutID | null = null;\n    _outerRef: ?HTMLDivElement;\n\n    static defaultProps = {\n      direction: 'ltr',\n      itemData: undefined,\n      useIsScrolling: false,\n    };\n\n    state: State = {\n      instance: this,\n      isScrolling: false,\n      horizontalScrollDirection: 'forward',\n      scrollLeft:\n        typeof this.props.initialScrollLeft === 'number'\n          ? this.props.initialScrollLeft\n          : 0,\n      scrollTop:\n        typeof this.props.initialScrollTop === 'number'\n          ? this.props.initialScrollTop\n          : 0,\n      scrollUpdateWasRequested: false,\n      verticalScrollDirection: 'forward',\n    };\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props: Props<T>) {\n      super(props);\n    }\n\n    static getDerivedStateFromProps(\n      nextProps: Props<T>,\n      prevState: State\n    ): $Shape<State> | null {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    }\n\n    scrollTo({\n      scrollLeft,\n      scrollTop,\n    }: {\n      scrollLeft: number,\n      scrollTop: number,\n    }): void {\n      if (scrollLeft !== undefined) {\n        scrollLeft = Math.max(0, scrollLeft);\n      }\n      if (scrollTop !== undefined) {\n        scrollTop = Math.max(0, scrollTop);\n      }\n\n      this.setState(prevState => {\n        if (scrollLeft === undefined) {\n          scrollLeft = prevState.scrollLeft;\n        }\n        if (scrollTop === undefined) {\n          scrollTop = prevState.scrollTop;\n        }\n\n        if (\n          prevState.scrollLeft === scrollLeft &&\n          prevState.scrollTop === scrollTop\n        ) {\n          return null;\n        }\n\n        return {\n          horizontalScrollDirection:\n            prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          scrollUpdateWasRequested: true,\n          verticalScrollDirection:\n            prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n        };\n      }, this._resetIsScrollingDebounced);\n    }\n\n    scrollToItem({\n      align = 'auto',\n      columnIndex,\n      rowIndex,\n    }: {\n      align: ScrollToAlign,\n      columnIndex?: number,\n      rowIndex?: number,\n    }): void {\n      const { columnCount, height, rowCount, width } = this.props;\n      const { scrollLeft, scrollTop } = this.state;\n      const scrollbarSize = getScrollbarSize();\n\n      if (columnIndex !== undefined) {\n        columnIndex = Math.max(0, Math.min(columnIndex, columnCount - 1));\n      }\n      if (rowIndex !== undefined) {\n        rowIndex = Math.max(0, Math.min(rowIndex, rowCount - 1));\n      }\n\n      const estimatedTotalHeight = getEstimatedTotalHeight(\n        this.props,\n        this._instanceProps\n      );\n      const estimatedTotalWidth = getEstimatedTotalWidth(\n        this.props,\n        this._instanceProps\n      );\n\n      // The scrollbar size should be considered when scrolling an item into view,\n      // to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n      const horizontalScrollbarSize =\n        estimatedTotalWidth > width ? scrollbarSize : 0;\n      const verticalScrollbarSize =\n        estimatedTotalHeight > height ? scrollbarSize : 0;\n\n      this.scrollTo({\n        scrollLeft:\n          columnIndex !== undefined\n            ? getOffsetForColumnAndAlignment(\n                this.props,\n                columnIndex,\n                align,\n                scrollLeft,\n                this._instanceProps,\n                verticalScrollbarSize\n              )\n            : scrollLeft,\n        scrollTop:\n          rowIndex !== undefined\n            ? getOffsetForRowAndAlignment(\n                this.props,\n                rowIndex,\n                align,\n                scrollTop,\n                this._instanceProps,\n                horizontalScrollbarSize\n              )\n            : scrollTop,\n      });\n    }\n\n    componentDidMount() {\n      const { initialScrollLeft, initialScrollTop } = this.props;\n\n      if (this._outerRef != null) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        if (typeof initialScrollLeft === 'number') {\n          outerRef.scrollLeft = initialScrollLeft;\n        }\n        if (typeof initialScrollTop === 'number') {\n          outerRef.scrollTop = initialScrollTop;\n        }\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentDidUpdate() {\n      const { direction } = this.props;\n      const { scrollLeft, scrollTop, scrollUpdateWasRequested } = this.state;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // So we need to determine which browser behavior we're dealing with, and mimic it.\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        if (direction === 'rtl') {\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              outerRef.scrollLeft = -scrollLeft;\n              break;\n            case 'positive-ascending':\n              outerRef.scrollLeft = scrollLeft;\n              break;\n            default:\n              const { clientWidth, scrollWidth } = outerRef;\n              outerRef.scrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        } else {\n          outerRef.scrollLeft = Math.max(0, scrollLeft);\n        }\n\n        outerRef.scrollTop = Math.max(0, scrollTop);\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    }\n\n    render() {\n      const {\n        children,\n        className,\n        columnCount,\n        direction,\n        height,\n        innerRef,\n        innerElementType,\n        innerTagName,\n        itemData,\n        itemKey = defaultItemKey,\n        outerElementType,\n        outerTagName,\n        rowCount,\n        style,\n        useIsScrolling,\n        width,\n      } = this.props;\n      const { isScrolling } = this.state;\n\n      const [\n        columnStartIndex,\n        columnStopIndex,\n      ] = this._getHorizontalRangeToRender();\n      const [rowStartIndex, rowStopIndex] = this._getVerticalRangeToRender();\n\n      const items = [];\n      if (columnCount > 0 && rowCount) {\n        for (\n          let rowIndex = rowStartIndex;\n          rowIndex <= rowStopIndex;\n          rowIndex++\n        ) {\n          for (\n            let columnIndex = columnStartIndex;\n            columnIndex <= columnStopIndex;\n            columnIndex++\n          ) {\n            items.push(\n              createElement(children, {\n                columnIndex,\n                data: itemData,\n                isScrolling: useIsScrolling ? isScrolling : undefined,\n                key: itemKey({ columnIndex, data: itemData, rowIndex }),\n                rowIndex,\n                style: this._getItemStyle(rowIndex, columnIndex),\n              })\n            );\n          }\n        }\n      }\n\n      // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n      const estimatedTotalHeight = getEstimatedTotalHeight(\n        this.props,\n        this._instanceProps\n      );\n      const estimatedTotalWidth = getEstimatedTotalWidth(\n        this.props,\n        this._instanceProps\n      );\n\n      return createElement(\n        outerElementType || outerTagName || 'div',\n        {\n          className,\n          onScroll: this._onScroll,\n          ref: this._outerRefSetter,\n          style: {\n            position: 'relative',\n            height,\n            width,\n            overflow: 'auto',\n            WebkitOverflowScrolling: 'touch',\n            willChange: 'transform',\n            direction,\n            ...style,\n          },\n        },\n        createElement(innerElementType || innerTagName || 'div', {\n          children: items,\n          ref: innerRef,\n          style: {\n            height: estimatedTotalHeight,\n            pointerEvents: isScrolling ? 'none' : undefined,\n            width: estimatedTotalWidth,\n          },\n        })\n      );\n    }\n\n    _callOnItemsRendered: (\n      overscanColumnStartIndex: number,\n      overscanColumnStopIndex: number,\n      overscanRowStartIndex: number,\n      overscanRowStopIndex: number,\n      visibleColumnStartIndex: number,\n      visibleColumnStopIndex: number,\n      visibleRowStartIndex: number,\n      visibleRowStopIndex: number\n    ) => void;\n    _callOnItemsRendered = memoizeOne(\n      (\n        overscanColumnStartIndex: number,\n        overscanColumnStopIndex: number,\n        overscanRowStartIndex: number,\n        overscanRowStopIndex: number,\n        visibleColumnStartIndex: number,\n        visibleColumnStopIndex: number,\n        visibleRowStartIndex: number,\n        visibleRowStopIndex: number\n      ) =>\n        ((this.props.onItemsRendered: any): OnItemsRenderedCallback)({\n          overscanColumnStartIndex,\n          overscanColumnStopIndex,\n          overscanRowStartIndex,\n          overscanRowStopIndex,\n          visibleColumnStartIndex,\n          visibleColumnStopIndex,\n          visibleRowStartIndex,\n          visibleRowStopIndex,\n        })\n    );\n\n    _callOnScroll: (\n      scrollLeft: number,\n      scrollTop: number,\n      horizontalScrollDirection: ScrollDirection,\n      verticalScrollDirection: ScrollDirection,\n      scrollUpdateWasRequested: boolean\n    ) => void;\n    _callOnScroll = memoizeOne(\n      (\n        scrollLeft: number,\n        scrollTop: number,\n        horizontalScrollDirection: ScrollDirection,\n        verticalScrollDirection: ScrollDirection,\n        scrollUpdateWasRequested: boolean\n      ) =>\n        ((this.props.onScroll: any): OnScrollCallback)({\n          horizontalScrollDirection,\n          scrollLeft,\n          scrollTop,\n          verticalScrollDirection,\n          scrollUpdateWasRequested,\n        })\n    );\n\n    _callPropsCallbacks() {\n      const { columnCount, onItemsRendered, onScroll, rowCount } = this.props;\n\n      if (typeof onItemsRendered === 'function') {\n        if (columnCount > 0 && rowCount > 0) {\n          const [\n            overscanColumnStartIndex,\n            overscanColumnStopIndex,\n            visibleColumnStartIndex,\n            visibleColumnStopIndex,\n          ] = this._getHorizontalRangeToRender();\n          const [\n            overscanRowStartIndex,\n            overscanRowStopIndex,\n            visibleRowStartIndex,\n            visibleRowStopIndex,\n          ] = this._getVerticalRangeToRender();\n          this._callOnItemsRendered(\n            overscanColumnStartIndex,\n            overscanColumnStopIndex,\n            overscanRowStartIndex,\n            overscanRowStopIndex,\n            visibleColumnStartIndex,\n            visibleColumnStopIndex,\n            visibleRowStartIndex,\n            visibleRowStopIndex\n          );\n        }\n      }\n\n      if (typeof onScroll === 'function') {\n        const {\n          horizontalScrollDirection,\n          scrollLeft,\n          scrollTop,\n          scrollUpdateWasRequested,\n          verticalScrollDirection,\n        } = this.state;\n        this._callOnScroll(\n          scrollLeft,\n          scrollTop,\n          horizontalScrollDirection,\n          verticalScrollDirection,\n          scrollUpdateWasRequested\n        );\n      }\n    }\n\n    // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    _getItemStyle: (rowIndex: number, columnIndex: number) => Object;\n    _getItemStyle = (rowIndex: number, columnIndex: number): Object => {\n      const { columnWidth, direction, rowHeight } = this.props;\n\n      const itemStyleCache = this._getItemStyleCache(\n        shouldResetStyleCacheOnItemSizeChange && columnWidth,\n        shouldResetStyleCacheOnItemSizeChange && direction,\n        shouldResetStyleCacheOnItemSizeChange && rowHeight\n      );\n\n      const key = `${rowIndex}:${columnIndex}`;\n\n      let style;\n      if (itemStyleCache.hasOwnProperty(key)) {\n        style = itemStyleCache[key];\n      } else {\n        const offset = getColumnOffset(\n          this.props,\n          columnIndex,\n          this._instanceProps\n        );\n        const isRtl = direction === 'rtl';\n        itemStyleCache[key] = style = {\n          position: 'absolute',\n          left: isRtl ? undefined : offset,\n          right: isRtl ? offset : undefined,\n          top: getRowOffset(this.props, rowIndex, this._instanceProps),\n          height: getRowHeight(this.props, rowIndex, this._instanceProps),\n          width: getColumnWidth(this.props, columnIndex, this._instanceProps),\n        };\n      }\n\n      return style;\n    };\n\n    _getItemStyleCache: (_: any, __: any, ___: any) => ItemStyleCache;\n    _getItemStyleCache = memoizeOne((_: any, __: any, ___: any) => ({}));\n\n    _getHorizontalRangeToRender(): [number, number, number, number] {\n      const {\n        columnCount,\n        overscanColumnCount,\n        overscanColumnsCount,\n        overscanCount,\n        rowCount,\n      } = this.props;\n      const { horizontalScrollDirection, isScrolling, scrollLeft } = this.state;\n\n      const overscanCountResolved: number =\n        overscanColumnCount || overscanColumnsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getColumnStartIndexForOffset(\n        this.props,\n        scrollLeft,\n        this._instanceProps\n      );\n      const stopIndex = getColumnStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollLeft,\n        this._instanceProps\n      );\n\n      // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n      const overscanBackward =\n        !isScrolling || horizontalScrollDirection === 'backward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n      const overscanForward =\n        !isScrolling || horizontalScrollDirection === 'forward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(columnCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _getVerticalRangeToRender(): [number, number, number, number] {\n      const {\n        columnCount,\n        overscanCount,\n        overscanRowCount,\n        overscanRowsCount,\n        rowCount,\n      } = this.props;\n      const { isScrolling, verticalScrollDirection, scrollTop } = this.state;\n\n      const overscanCountResolved: number =\n        overscanRowCount || overscanRowsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getRowStartIndexForOffset(\n        this.props,\n        scrollTop,\n        this._instanceProps\n      );\n      const stopIndex = getRowStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollTop,\n        this._instanceProps\n      );\n\n      // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n      const overscanBackward =\n        !isScrolling || verticalScrollDirection === 'backward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n      const overscanForward =\n        !isScrolling || verticalScrollDirection === 'forward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(rowCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _onScroll = (event: ScrollEvent): void => {\n      const {\n        clientHeight,\n        clientWidth,\n        scrollLeft,\n        scrollTop,\n        scrollHeight,\n        scrollWidth,\n      } = event.currentTarget;\n      this.setState(prevState => {\n        if (\n          prevState.scrollLeft === scrollLeft &&\n          prevState.scrollTop === scrollTop\n        ) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        const { direction } = this.props;\n\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n        // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n        let calculatedScrollLeft = scrollLeft;\n        if (direction === 'rtl') {\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              calculatedScrollLeft = -scrollLeft;\n              break;\n            case 'positive-descending':\n              calculatedScrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        }\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        calculatedScrollLeft = Math.max(\n          0,\n          Math.min(calculatedScrollLeft, scrollWidth - clientWidth)\n        );\n        const calculatedScrollTop = Math.max(\n          0,\n          Math.min(scrollTop, scrollHeight - clientHeight)\n        );\n\n        return {\n          isScrolling: true,\n          horizontalScrollDirection:\n            prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: calculatedScrollTop,\n          verticalScrollDirection:\n            prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _outerRefSetter = (ref: any): void => {\n      const { outerRef } = this.props;\n\n      this._outerRef = ((ref: any): HTMLDivElement);\n\n      if (typeof outerRef === 'function') {\n        outerRef(ref);\n      } else if (\n        outerRef != null &&\n        typeof outerRef === 'object' &&\n        outerRef.hasOwnProperty('current')\n      ) {\n        outerRef.current = ref;\n      }\n    };\n\n    _resetIsScrollingDebounced = () => {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n\n      this._resetIsScrollingTimeoutId = requestTimeout(\n        this._resetIsScrolling,\n        IS_SCROLLING_DEBOUNCE_INTERVAL\n      );\n    };\n\n    _resetIsScrolling = () => {\n      this._resetIsScrollingTimeoutId = null;\n\n      this.setState({ isScrolling: false }, () => {\n        // Clear style cache after state update has been committed.\n        // This way we don't break pure sCU for items that don't use isScrolling param.\n        this._getItemStyleCache(-1);\n      });\n    };\n  };\n}\n\nconst validateSharedProps = (\n  {\n    children,\n    direction,\n    height,\n    innerTagName,\n    outerTagName,\n    overscanColumnsCount,\n    overscanCount,\n    overscanRowsCount,\n    width,\n  }: Props<any>,\n  { instance }: State\n): void => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof overscanCount === 'number') {\n      if (devWarningsOverscanCount && !devWarningsOverscanCount.has(instance)) {\n        devWarningsOverscanCount.add(instance);\n        console.warn(\n          'The overscanCount prop has been deprecated. ' +\n            'Please use the overscanColumnCount and overscanRowCount props instead.'\n        );\n      }\n    }\n\n    if (\n      typeof overscanColumnsCount === 'number' ||\n      typeof overscanRowsCount === 'number'\n    ) {\n      if (\n        devWarningsOverscanRowsColumnsCount &&\n        !devWarningsOverscanRowsColumnsCount.has(instance)\n      ) {\n        devWarningsOverscanRowsColumnsCount.add(instance);\n        console.warn(\n          'The overscanColumnsCount and overscanRowsCount props have been deprecated. ' +\n            'Please use the overscanColumnCount and overscanRowCount props instead.'\n        );\n      }\n    }\n\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn(\n          'The innerTagName and outerTagName props have been deprecated. ' +\n            'Please use the innerElementType and outerElementType props instead.'\n        );\n      }\n    }\n\n    if (children == null) {\n      throw Error(\n        'An invalid \"children\" prop has been specified. ' +\n          'Value should be a React component. ' +\n          `\"${children === null ? 'null' : typeof children}\" was specified.`\n      );\n    }\n\n    switch (direction) {\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"direction\" prop has been specified. ' +\n            'Value should be either \"ltr\" or \"rtl\". ' +\n            `\"${direction}\" was specified.`\n        );\n    }\n\n    if (typeof width !== 'number') {\n      throw Error(\n        'An invalid \"width\" prop has been specified. ' +\n          'Grids must specify a number for width. ' +\n          `\"${width === null ? 'null' : typeof width}\" was specified.`\n      );\n    }\n\n    if (typeof height !== 'number') {\n      throw Error(\n        'An invalid \"height\" prop has been specified. ' +\n          'Grids must specify a number for height. ' +\n          `\"${height === null ? 'null' : typeof height}\" was specified.`\n      );\n    }\n  }\n};\n","// @flow\n\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport { cancelTimeout, requestTimeout } from './timer';\nimport { getScrollbarSize, getRTLOffsetType } from './domHelpers';\n\nimport type { TimeoutID } from './timer';\n\nexport type ScrollToAlign = 'auto' | 'smart' | 'center' | 'start' | 'end';\n\ntype itemSize = number | ((index: number) => number);\n// TODO Deprecate directions \"horizontal\" and \"vertical\"\ntype Direction = 'ltr' | 'rtl' | 'horizontal' | 'vertical';\ntype Layout = 'horizontal' | 'vertical';\n\ntype RenderComponentProps<T> = {|\n  data: T,\n  index: number,\n  isScrolling?: boolean,\n  style: Object,\n|};\ntype RenderComponent<T> = React$ComponentType<$Shape<RenderComponentProps<T>>>;\n\ntype ScrollDirection = 'forward' | 'backward';\n\ntype onItemsRenderedCallback = ({\n  overscanStartIndex: number,\n  overscanStopIndex: number,\n  visibleStartIndex: number,\n  visibleStopIndex: number,\n}) => void;\ntype onScrollCallback = ({\n  scrollDirection: ScrollDirection,\n  scrollOffset: number,\n  scrollUpdateWasRequested: boolean,\n}) => void;\n\ntype ScrollEvent = SyntheticEvent<HTMLDivElement>;\ntype ItemStyleCache = { [index: number]: Object };\n\ntype OuterProps = {|\n  children: React$Node,\n  className: string | void,\n  onScroll: ScrollEvent => void,\n  style: {\n    [string]: mixed,\n  },\n|};\n\ntype InnerProps = {|\n  children: React$Node,\n  style: {\n    [string]: mixed,\n  },\n|};\n\nexport type Props<T> = {|\n  children: RenderComponent<T>,\n  className?: string,\n  direction: Direction,\n  height: number | string,\n  initialScrollOffset?: number,\n  innerRef?: any,\n  innerElementType?: string | React$AbstractComponent<InnerProps, any>,\n  innerTagName?: string, // deprecated\n  itemCount: number,\n  itemData: T,\n  itemKey?: (index: number, data: T) => any,\n  itemSize: itemSize,\n  layout: Layout,\n  onItemsRendered?: onItemsRenderedCallback,\n  onScroll?: onScrollCallback,\n  outerRef?: any,\n  outerElementType?: string | React$AbstractComponent<OuterProps, any>,\n  outerTagName?: string, // deprecated\n  overscanCount: number,\n  style?: Object,\n  useIsScrolling: boolean,\n  width: number | string,\n|};\n\ntype State = {|\n  instance: any,\n  isScrolling: boolean,\n  scrollDirection: ScrollDirection,\n  scrollOffset: number,\n  scrollUpdateWasRequested: boolean,\n|};\n\ntype GetItemOffset = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype GetItemSize = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype GetEstimatedTotalSize = (props: Props<any>, instanceProps: any) => number;\ntype GetOffsetForIndexAndAlignment = (\n  props: Props<any>,\n  index: number,\n  align: ScrollToAlign,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype GetStartIndexForOffset = (\n  props: Props<any>,\n  offset: number,\n  instanceProps: any\n) => number;\ntype GetStopIndexForStartIndex = (\n  props: Props<any>,\n  startIndex: number,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype InitInstanceProps = (props: Props<any>, instance: any) => any;\ntype ValidateProps = (props: Props<any>) => void;\n\nconst IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nconst defaultItemKey = (index: number, data: any) => index;\n\n// In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\nlet devWarningsDirection = null;\nlet devWarningsTagName = null;\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsDirection = new WeakSet();\n    devWarningsTagName = new WeakSet();\n  }\n}\n\nexport default function createListComponent({\n  getItemOffset,\n  getEstimatedTotalSize,\n  getItemSize,\n  getOffsetForIndexAndAlignment,\n  getStartIndexForOffset,\n  getStopIndexForStartIndex,\n  initInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange,\n  validateProps,\n}: {|\n  getItemOffset: GetItemOffset,\n  getEstimatedTotalSize: GetEstimatedTotalSize,\n  getItemSize: GetItemSize,\n  getOffsetForIndexAndAlignment: GetOffsetForIndexAndAlignment,\n  getStartIndexForOffset: GetStartIndexForOffset,\n  getStopIndexForStartIndex: GetStopIndexForStartIndex,\n  initInstanceProps: InitInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange: boolean,\n  validateProps: ValidateProps,\n|}) {\n  return class List<T> extends PureComponent<Props<T>, State> {\n    _instanceProps: any = initInstanceProps(this.props, this);\n    _outerRef: ?HTMLDivElement;\n    _resetIsScrollingTimeoutId: TimeoutID | null = null;\n\n    static defaultProps = {\n      direction: 'ltr',\n      itemData: undefined,\n      layout: 'vertical',\n      overscanCount: 2,\n      useIsScrolling: false,\n    };\n\n    state: State = {\n      instance: this,\n      isScrolling: false,\n      scrollDirection: 'forward',\n      scrollOffset:\n        typeof this.props.initialScrollOffset === 'number'\n          ? this.props.initialScrollOffset\n          : 0,\n      scrollUpdateWasRequested: false,\n    };\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props: Props<T>) {\n      super(props);\n    }\n\n    static getDerivedStateFromProps(\n      nextProps: Props<T>,\n      prevState: State\n    ): $Shape<State> | null {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    }\n\n    scrollTo(scrollOffset: number): void {\n      scrollOffset = Math.max(0, scrollOffset);\n\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollOffset) {\n          return null;\n        }\n        return {\n          scrollDirection:\n            prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: true,\n        };\n      }, this._resetIsScrollingDebounced);\n    }\n\n    scrollToItem(index: number, align: ScrollToAlign = 'auto'): void {\n      const { itemCount, layout } = this.props;\n      const { scrollOffset } = this.state;\n\n      index = Math.max(0, Math.min(index, itemCount - 1));\n\n      // The scrollbar size should be considered when scrolling an item into view, to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n      // This is an edge case for lists; normally they only scroll in the dominant direction.\n      let scrollbarSize = 0;\n      if (this._outerRef) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        if (layout === 'vertical') {\n          scrollbarSize =\n            outerRef.scrollWidth > outerRef.clientWidth\n              ? getScrollbarSize()\n              : 0;\n        } else {\n          scrollbarSize =\n            outerRef.scrollHeight > outerRef.clientHeight\n              ? getScrollbarSize()\n              : 0;\n        }\n      }\n\n      this.scrollTo(\n        getOffsetForIndexAndAlignment(\n          this.props,\n          index,\n          align,\n          scrollOffset,\n          this._instanceProps,\n          scrollbarSize\n        )\n      );\n    }\n\n    componentDidMount() {\n      const { direction, initialScrollOffset, layout } = this.props;\n\n      if (typeof initialScrollOffset === 'number' && this._outerRef != null) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        // TODO Deprecate direction \"horizontal\"\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          outerRef.scrollLeft = initialScrollOffset;\n        } else {\n          outerRef.scrollTop = initialScrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentDidUpdate() {\n      const { direction, layout } = this.props;\n      const { scrollOffset, scrollUpdateWasRequested } = this.state;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n\n        // TODO Deprecate direction \"horizontal\"\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // So we need to determine which browser behavior we're dealing with, and mimic it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                outerRef.scrollLeft = -scrollOffset;\n                break;\n              case 'positive-ascending':\n                outerRef.scrollLeft = scrollOffset;\n                break;\n              default:\n                const { clientWidth, scrollWidth } = outerRef;\n                outerRef.scrollLeft = scrollWidth - clientWidth - scrollOffset;\n                break;\n            }\n          } else {\n            outerRef.scrollLeft = scrollOffset;\n          }\n        } else {\n          outerRef.scrollTop = scrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    }\n\n    render() {\n      const {\n        children,\n        className,\n        direction,\n        height,\n        innerRef,\n        innerElementType,\n        innerTagName,\n        itemCount,\n        itemData,\n        itemKey = defaultItemKey,\n        layout,\n        outerElementType,\n        outerTagName,\n        style,\n        useIsScrolling,\n        width,\n      } = this.props;\n      const { isScrolling } = this.state;\n\n      // TODO Deprecate direction \"horizontal\"\n      const isHorizontal =\n        direction === 'horizontal' || layout === 'horizontal';\n\n      const onScroll = isHorizontal\n        ? this._onScrollHorizontal\n        : this._onScrollVertical;\n\n      const [startIndex, stopIndex] = this._getRangeToRender();\n\n      const items = [];\n      if (itemCount > 0) {\n        for (let index = startIndex; index <= stopIndex; index++) {\n          items.push(\n            createElement(children, {\n              data: itemData,\n              key: itemKey(index, itemData),\n              index,\n              isScrolling: useIsScrolling ? isScrolling : undefined,\n              style: this._getItemStyle(index),\n            })\n          );\n        }\n      }\n\n      // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n      const estimatedTotalSize = getEstimatedTotalSize(\n        this.props,\n        this._instanceProps\n      );\n\n      return createElement(\n        outerElementType || outerTagName || 'div',\n        {\n          className,\n          onScroll,\n          ref: this._outerRefSetter,\n          style: {\n            position: 'relative',\n            height,\n            width,\n            overflow: 'auto',\n            WebkitOverflowScrolling: 'touch',\n            willChange: 'transform',\n            direction,\n            ...style,\n          },\n        },\n        createElement(innerElementType || innerTagName || 'div', {\n          children: items,\n          ref: innerRef,\n          style: {\n            height: isHorizontal ? '100%' : estimatedTotalSize,\n            pointerEvents: isScrolling ? 'none' : undefined,\n            width: isHorizontal ? estimatedTotalSize : '100%',\n          },\n        })\n      );\n    }\n\n    _callOnItemsRendered: (\n      overscanStartIndex: number,\n      overscanStopIndex: number,\n      visibleStartIndex: number,\n      visibleStopIndex: number\n    ) => void;\n    _callOnItemsRendered = memoizeOne(\n      (\n        overscanStartIndex: number,\n        overscanStopIndex: number,\n        visibleStartIndex: number,\n        visibleStopIndex: number\n      ) =>\n        ((this.props.onItemsRendered: any): onItemsRenderedCallback)({\n          overscanStartIndex,\n          overscanStopIndex,\n          visibleStartIndex,\n          visibleStopIndex,\n        })\n    );\n\n    _callOnScroll: (\n      scrollDirection: ScrollDirection,\n      scrollOffset: number,\n      scrollUpdateWasRequested: boolean\n    ) => void;\n    _callOnScroll = memoizeOne(\n      (\n        scrollDirection: ScrollDirection,\n        scrollOffset: number,\n        scrollUpdateWasRequested: boolean\n      ) =>\n        ((this.props.onScroll: any): onScrollCallback)({\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested,\n        })\n    );\n\n    _callPropsCallbacks() {\n      if (typeof this.props.onItemsRendered === 'function') {\n        const { itemCount } = this.props;\n        if (itemCount > 0) {\n          const [\n            overscanStartIndex,\n            overscanStopIndex,\n            visibleStartIndex,\n            visibleStopIndex,\n          ] = this._getRangeToRender();\n          this._callOnItemsRendered(\n            overscanStartIndex,\n            overscanStopIndex,\n            visibleStartIndex,\n            visibleStopIndex\n          );\n        }\n      }\n\n      if (typeof this.props.onScroll === 'function') {\n        const {\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested,\n        } = this.state;\n        this._callOnScroll(\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested\n        );\n      }\n    }\n\n    // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    _getItemStyle: (index: number) => Object;\n    _getItemStyle = (index: number): Object => {\n      const { direction, itemSize, layout } = this.props;\n\n      const itemStyleCache = this._getItemStyleCache(\n        shouldResetStyleCacheOnItemSizeChange && itemSize,\n        shouldResetStyleCacheOnItemSizeChange && layout,\n        shouldResetStyleCacheOnItemSizeChange && direction\n      );\n\n      let style;\n      if (itemStyleCache.hasOwnProperty(index)) {\n        style = itemStyleCache[index];\n      } else {\n        const offset = getItemOffset(this.props, index, this._instanceProps);\n        const size = getItemSize(this.props, index, this._instanceProps);\n\n        // TODO Deprecate direction \"horizontal\"\n        const isHorizontal =\n          direction === 'horizontal' || layout === 'horizontal';\n\n        const isRtl = direction === 'rtl';\n        const offsetHorizontal = isHorizontal ? offset : 0;\n        itemStyleCache[index] = style = {\n          position: 'absolute',\n          left: isRtl ? undefined : offsetHorizontal,\n          right: isRtl ? offsetHorizontal : undefined,\n          top: !isHorizontal ? offset : 0,\n          height: !isHorizontal ? size : '100%',\n          width: isHorizontal ? size : '100%',\n        };\n      }\n\n      return style;\n    };\n\n    _getItemStyleCache: (_: any, __: any, ___: any) => ItemStyleCache;\n    _getItemStyleCache = memoizeOne((_: any, __: any, ___: any) => ({}));\n\n    _getRangeToRender(): [number, number, number, number] {\n      const { itemCount, overscanCount } = this.props;\n      const { isScrolling, scrollDirection, scrollOffset } = this.state;\n\n      if (itemCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getStartIndexForOffset(\n        this.props,\n        scrollOffset,\n        this._instanceProps\n      );\n      const stopIndex = getStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollOffset,\n        this._instanceProps\n      );\n\n      // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n      const overscanBackward =\n        !isScrolling || scrollDirection === 'backward'\n          ? Math.max(1, overscanCount)\n          : 1;\n      const overscanForward =\n        !isScrolling || scrollDirection === 'forward'\n          ? Math.max(1, overscanCount)\n          : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(itemCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _onScrollHorizontal = (event: ScrollEvent): void => {\n      const { clientWidth, scrollLeft, scrollWidth } = event.currentTarget;\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollLeft) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        const { direction } = this.props;\n\n        let scrollOffset = scrollLeft;\n        if (direction === 'rtl') {\n          // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n          // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n          // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n          // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              scrollOffset = -scrollLeft;\n              break;\n            case 'positive-descending':\n              scrollOffset = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        }\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        scrollOffset = Math.max(\n          0,\n          Math.min(scrollOffset, scrollWidth - clientWidth)\n        );\n\n        return {\n          isScrolling: true,\n          scrollDirection:\n            prevState.scrollOffset < scrollLeft ? 'forward' : 'backward',\n          scrollOffset,\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _onScrollVertical = (event: ScrollEvent): void => {\n      const { clientHeight, scrollHeight, scrollTop } = event.currentTarget;\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollTop) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        const scrollOffset = Math.max(\n          0,\n          Math.min(scrollTop, scrollHeight - clientHeight)\n        );\n\n        return {\n          isScrolling: true,\n          scrollDirection:\n            prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset,\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _outerRefSetter = (ref: any): void => {\n      const { outerRef } = this.props;\n\n      this._outerRef = ((ref: any): HTMLDivElement);\n\n      if (typeof outerRef === 'function') {\n        outerRef(ref);\n      } else if (\n        outerRef != null &&\n        typeof outerRef === 'object' &&\n        outerRef.hasOwnProperty('current')\n      ) {\n        outerRef.current = ref;\n      }\n    };\n\n    _resetIsScrollingDebounced = () => {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n\n      this._resetIsScrollingTimeoutId = requestTimeout(\n        this._resetIsScrolling,\n        IS_SCROLLING_DEBOUNCE_INTERVAL\n      );\n    };\n\n    _resetIsScrolling = () => {\n      this._resetIsScrollingTimeoutId = null;\n\n      this.setState({ isScrolling: false }, () => {\n        // Clear style cache after state update has been committed.\n        // This way we don't break pure sCU for items that don't use isScrolling param.\n        this._getItemStyleCache(-1, null);\n      });\n    };\n  };\n}\n\n// NOTE: I considered further wrapping individual items with a pure ListItem component.\n// This would avoid ever calling the render function for the same index more than once,\n// But it would also add the overhead of a lot of components/fibers.\n// I assume people already do this (render function returning a class component),\n// So my doing it would just unnecessarily double the wrappers.\n\nconst validateSharedProps = (\n  {\n    children,\n    direction,\n    height,\n    layout,\n    innerTagName,\n    outerTagName,\n    width,\n  }: Props<any>,\n  { instance }: State\n): void => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn(\n          'The innerTagName and outerTagName props have been deprecated. ' +\n            'Please use the innerElementType and outerElementType props instead.'\n        );\n      }\n    }\n\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n\n    switch (direction) {\n      case 'horizontal':\n      case 'vertical':\n        if (devWarningsDirection && !devWarningsDirection.has(instance)) {\n          devWarningsDirection.add(instance);\n          console.warn(\n            'The direction prop should be either \"ltr\" (default) or \"rtl\". ' +\n              'Please use the layout prop to specify \"vertical\" (default) or \"horizontal\" orientation.'\n          );\n        }\n        break;\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"direction\" prop has been specified. ' +\n            'Value should be either \"ltr\" or \"rtl\". ' +\n            `\"${direction}\" was specified.`\n        );\n    }\n\n    switch (layout) {\n      case 'horizontal':\n      case 'vertical':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"layout\" prop has been specified. ' +\n            'Value should be either \"horizontal\" or \"vertical\". ' +\n            `\"${layout}\" was specified.`\n        );\n    }\n\n    if (children == null) {\n      throw Error(\n        'An invalid \"children\" prop has been specified. ' +\n          'Value should be a React component. ' +\n          `\"${children === null ? 'null' : typeof children}\" was specified.`\n      );\n    }\n\n    if (isHorizontal && typeof width !== 'number') {\n      throw Error(\n        'An invalid \"width\" prop has been specified. ' +\n          'Horizontal lists must specify a number for width. ' +\n          `\"${width === null ? 'null' : typeof width}\" was specified.`\n      );\n    } else if (!isHorizontal && typeof height !== 'number') {\n      throw Error(\n        'An invalid \"height\" prop has been specified. ' +\n          'Vertical lists must specify a number for height. ' +\n          `\"${height === null ? 'null' : typeof height}\" was specified.`\n      );\n    }\n  }\n};\n","// @flow\n\nimport createListComponent from './createListComponent';\n\nimport type { Props, ScrollToAlign } from './createListComponent';\n\nconst DEFAULT_ESTIMATED_ITEM_SIZE = 50;\n\ntype VariableSizeProps = {|\n  estimatedItemSize: number,\n  ...Props<any>,\n|};\n\ntype itemSizeGetter = (index: number) => number;\n\ntype ItemMetadata = {|\n  offset: number,\n  size: number,\n|};\ntype InstanceProps = {|\n  itemMetadataMap: { [index: number]: ItemMetadata },\n  estimatedItemSize: number,\n  lastMeasuredIndex: number,\n|};\n\nconst getItemMetadata = (\n  props: Props<any>,\n  index: number,\n  instanceProps: InstanceProps\n): ItemMetadata => {\n  const { itemSize } = ((props: any): VariableSizeProps);\n  const { itemMetadataMap, lastMeasuredIndex } = instanceProps;\n\n  if (index > lastMeasuredIndex) {\n    let offset = 0;\n    if (lastMeasuredIndex >= 0) {\n      const itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (let i = lastMeasuredIndex + 1; i <= index; i++) {\n      let size = ((itemSize: any): itemSizeGetter)(i);\n\n      itemMetadataMap[i] = {\n        offset,\n        size,\n      };\n\n      offset += size;\n    }\n\n    instanceProps.lastMeasuredIndex = index;\n  }\n\n  return itemMetadataMap[index];\n};\n\nconst findNearestItem = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  offset: number\n) => {\n  const { itemMetadataMap, lastMeasuredIndex } = instanceProps;\n\n  const lastMeasuredItemOffset =\n    lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch(\n      props,\n      instanceProps,\n      lastMeasuredIndex,\n      0,\n      offset\n    );\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch(\n      props,\n      instanceProps,\n      Math.max(0, lastMeasuredIndex),\n      offset\n    );\n  }\n};\n\nconst findNearestItemBinarySearch = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  high: number,\n  low: number,\n  offset: number\n): number => {\n  while (low <= high) {\n    const middle = low + Math.floor((high - low) / 2);\n    const currentOffset = getItemMetadata(props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nconst findNearestItemExponentialSearch = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  index: number,\n  offset: number\n): number => {\n  const { itemCount } = props;\n  let interval = 1;\n\n  while (\n    index < itemCount &&\n    getItemMetadata(props, index, instanceProps).offset < offset\n  ) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch(\n    props,\n    instanceProps,\n    Math.min(index, itemCount - 1),\n    Math.floor(index / 2),\n    offset\n  );\n};\n\nconst getEstimatedTotalSize = (\n  { itemCount }: Props<any>,\n  { itemMetadataMap, estimatedItemSize, lastMeasuredIndex }: InstanceProps\n) => {\n  let totalSizeOfMeasuredItems = 0;\n\n  // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n  if (lastMeasuredIndex >= itemCount) {\n    lastMeasuredIndex = itemCount - 1;\n  }\n\n  if (lastMeasuredIndex >= 0) {\n    const itemMetadata = itemMetadataMap[lastMeasuredIndex];\n    totalSizeOfMeasuredItems = itemMetadata.offset + itemMetadata.size;\n  }\n\n  const numUnmeasuredItems = itemCount - lastMeasuredIndex - 1;\n  const totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedItemSize;\n\n  return totalSizeOfMeasuredItems + totalSizeOfUnmeasuredItems;\n};\n\nconst VariableSizeList = createListComponent({\n  getItemOffset: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => getItemMetadata(props, index, instanceProps).offset,\n\n  getItemSize: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => instanceProps.itemMetadataMap[index].size,\n\n  getEstimatedTotalSize,\n\n  getOffsetForIndexAndAlignment: (\n    props: Props<any>,\n    index: number,\n    align: ScrollToAlign,\n    scrollOffset: number,\n    instanceProps: InstanceProps,\n    scrollbarSize: number\n  ): number => {\n    const { direction, height, layout, width } = props;\n\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const size = (((isHorizontal ? width : height): any): number);\n    const itemMetadata = getItemMetadata(props, index, instanceProps);\n\n    // Get estimated total size after ItemMetadata is computed,\n    // To ensure it reflects actual measurements instead of just estimates.\n    const estimatedTotalSize = getEstimatedTotalSize(props, instanceProps);\n\n    const maxOffset = Math.max(\n      0,\n      Math.min(estimatedTotalSize - size, itemMetadata.offset)\n    );\n    const minOffset = Math.max(\n      0,\n      itemMetadata.offset - size + itemMetadata.size + scrollbarSize\n    );\n\n    if (align === 'smart') {\n      if (\n        scrollOffset >= minOffset - size &&\n        scrollOffset <= maxOffset + size\n      ) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n      case 'end':\n        return minOffset;\n      case 'center':\n        return Math.round(minOffset + (maxOffset - minOffset) / 2);\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n    }\n  },\n\n  getStartIndexForOffset: (\n    props: Props<any>,\n    offset: number,\n    instanceProps: InstanceProps\n  ): number => findNearestItem(props, instanceProps, offset),\n\n  getStopIndexForStartIndex: (\n    props: Props<any>,\n    startIndex: number,\n    scrollOffset: number,\n    instanceProps: InstanceProps\n  ): number => {\n    const { direction, height, itemCount, layout, width } = props;\n\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const size = (((isHorizontal ? width : height): any): number);\n    const itemMetadata = getItemMetadata(props, startIndex, instanceProps);\n    const maxOffset = scrollOffset + size;\n\n    let offset = itemMetadata.offset + itemMetadata.size;\n    let stopIndex = startIndex;\n\n    while (stopIndex < itemCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata(props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n\n  initInstanceProps(props: Props<any>, instance: any): InstanceProps {\n    const { estimatedItemSize } = ((props: any): VariableSizeProps);\n\n    const instanceProps = {\n      itemMetadataMap: {},\n      estimatedItemSize: estimatedItemSize || DEFAULT_ESTIMATED_ITEM_SIZE,\n      lastMeasuredIndex: -1,\n    };\n\n    instance.resetAfterIndex = (\n      index: number,\n      shouldForceUpdate?: boolean = true\n    ) => {\n      instanceProps.lastMeasuredIndex = Math.min(\n        instanceProps.lastMeasuredIndex,\n        index - 1\n      );\n\n      // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n\n  shouldResetStyleCacheOnItemSizeChange: false,\n\n  validateProps: ({ itemSize }: Props<any>): void => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'function') {\n        throw Error(\n          'An invalid \"itemSize\" prop has been specified. ' +\n            'Value should be a function. ' +\n            `\"${itemSize === null ? 'null' : typeof itemSize}\" was specified.`\n        );\n      }\n    }\n  },\n});\n\nexport default VariableSizeList;\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport React from 'react';\nimport { VariableSizeList } from 'react-window';\nimport Tree, { createTreeComputer } from './Tree';\nimport { createBasicRecord, getIdByIndex } from './utils';\nvar computeTree = createTreeComputer({\n  createRecord: function createRecord(data, _ref, parent, previousRecord) {\n    var recomputeTree = _ref.recomputeTree,\n        resetAfterId = _ref.resetAfterId;\n    var record = createBasicRecord({\n      data: data,\n      height: previousRecord ? previousRecord.public.height : data.defaultHeight,\n      isOpen: previousRecord ? previousRecord.public.isOpen : data.isOpenByDefault,\n      resize: function resize(height, shouldForceUpdate) {\n        record.public.height = height;\n        resetAfterId(record.public.data.id, shouldForceUpdate);\n      },\n      setOpen: function setOpen(state) {\n        var _recomputeTree;\n\n        return recomputeTree((_recomputeTree = {}, _recomputeTree[data.id] = state, _recomputeTree));\n      }\n    }, parent);\n    return record;\n  }\n});\nexport var VariableSizeTree = /*#__PURE__*/function (_Tree) {\n  _inheritsLoose(VariableSizeTree, _Tree);\n\n  function VariableSizeTree(props, context) {\n    var _this;\n\n    _this = _Tree.call(this, props, context) || this;\n    _this.getItemSize = _this.getItemSize.bind(_assertThisInitialized(_this));\n    _this.state = _extends({}, _this.state, {\n      computeTree: computeTree,\n      resetAfterId: _this.resetAfterId.bind(_assertThisInitialized(_this))\n    });\n    return _this;\n  }\n\n  var _proto = VariableSizeTree.prototype;\n\n  _proto.resetAfterId = function resetAfterId(id, shouldForceUpdate) {\n    var _list$current;\n\n    if (shouldForceUpdate === void 0) {\n      shouldForceUpdate = false;\n    }\n\n    var _this$state = this.state,\n        list = _this$state.list,\n        order = _this$state.order;\n    (_list$current = list.current) == null ? void 0 : _list$current.resetAfterIndex(order.indexOf(id), shouldForceUpdate);\n  };\n\n  _proto.recomputeTree = function recomputeTree(state) {\n    var _this2 = this;\n\n    return _Tree.prototype.recomputeTree.call(this, state).then(function () {\n      var _this2$state$list$cur;\n\n      (_this2$state$list$cur = _this2.state.list.current) == null ? void 0 : _this2$state$list$cur.resetAfterIndex(0, true);\n    });\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        placeholder = _this$props.placeholder,\n        itemSize = _this$props.itemSize,\n        rowComponent = _this$props.rowComponent,\n        treeWalker = _this$props.treeWalker,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"placeholder\", \"itemSize\", \"rowComponent\", \"treeWalker\"]);\n\n    var _this$state2 = this.state,\n        attachRefs = _this$state2.attachRefs,\n        order = _this$state2.order;\n    return placeholder && order.length === 0 ? placeholder : /*#__PURE__*/React.createElement(VariableSizeList, Object.assign({}, rest, {\n      itemCount: order.length,\n      itemData: this.getItemData() // eslint-disable-next-line @typescript-eslint/unbound-method\n      ,\n      itemKey: getIdByIndex // eslint-disable-next-line @typescript-eslint/unbound-method\n      ,\n      itemSize: itemSize != null ? itemSize : this.getItemSize // eslint-disable-next-line @typescript-eslint/unbound-method\n      ,\n      ref: attachRefs\n    }), rowComponent);\n  };\n\n  _proto.getItemSize = function getItemSize(index) {\n    return this.getRecordData(index).height;\n  };\n\n  return VariableSizeTree;\n}(Tree);"],"names":["_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","_extends","assign","arguments","source","hasOwnProperty","call","possibleConstructorReturn","self","ReferenceError","slicedToArray","arr","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","sliceIterator","windowObject","window","global","cancelFrame","requestFrame","clearTimeoutFn","clearTimeout","setTimeoutFn","setTimeout","cancelAnimationFrameFn","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","requestAnimationFrameFn","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","createDetectElementResize","nonce","animationKeyframes","animationName","animationStartEvent","animationStyle","checkTriggers","resetTriggers","scrollListener","attachEvent","document","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollLeft","scrollWidth","scrollTop","scrollHeight","style","width","offsetWidth","height","offsetHeight","__resizeLast__","e","className","indexOf","this","__resizeRAF__","__resizeListeners__","forEach","fn","animation","keyframeprefix","domPrefixes","split","startEvents","elm","createElement","toLowerCase","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","position","getElementById","css","head","getElementsByTagName","id","type","setAttribute","styleSheet","cssText","appendChild","createTextNode","createStyles","expandTrigger","contractTrigger","addEventListener","__animationListener__","removeResizeListener","detachEvent","splice","removeEventListener","removeChild","callback","_ref","_ref2","animationFrameID","timeoutID","AutoSizer","_React$PureComponent","_temp","_this","_len","args","_key","__proto__","getPrototypeOf","apply","concat","state","defaultHeight","defaultWidth","_onResize","_this$props","disableHeight","disableWidth","onResize","_parentNode","_height","_width","_style","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","setState","_setRef","autoSizer","_autoSizer","subClass","superClass","create","constructor","setPrototypeOf","inherits","parentNode","defaultView","HTMLElement","_detectElementResize","_props","children","_state","outerStyle","overflow","childParams","bailoutOnChildren","ref","PureComponent","defaultProps","refs","current","noop","createBasicRecord","pub","parent","child","isShown","public","isOpen","sibling","visited","getIdByIndex","index","getRecordData","data","createTreeComputer","creatorOptions","options","refresh","_ref3","createRecord","buildingTaskTimeout","placeholder","_ref3$async","async","treeWalker","shouldPreservePreviousState","records","previousRecords","order","Map","requestIdleCallbackOptions","timeout","meta","WeakMap","iter","root","rootRecord","get","set","currentRecord","isTraversingRoot","tempRecord","useIdleCallback","hasTime","deadline","timeRemaining","task","requestIdleCallback","childRecord","updateRequest","generateNewTree","_ref4","_ref5","opennessState","has","opts","ownerRecord","_ref6","open","_ref6$subtreeCallback","subtreeCallback","update","recordNextToSubtree","countToRemove","orderParts","record","currentOrderPart","MAX_FUNCTION_ARGUMENTS","_ref7","count","updateExistingTree","Tree","_PureComponent","context","bind","_assertThisInitialized","list","createRef","recomputeTree","_inheritsLoose","getDerivedStateFromProps","_props$listRef","listRef","computeTree","oldTreeWalker","attachRefs","mergeRefs","_proto","getItemData","component","treeData","itemData","_this$state","_this2","Promise","resolve","prevState","scrollTo","scrollOffset","_this$state$list$curr","scrollToItem","align","_this$state$list$curr2","rowComponent","_ref$data","Node","isScrolling","React","previousRecord","isOpenByDefault","setOpen","_recomputeTree","safeIsNaN","Number","isNaN","areInputsEqual","newInputs","lastInputs","first","second","resultFn","isEqual","lastThis","lastResult","lastArgs","calledOnce","newArgs","now","performance","Date","cancelTimeout","requestTimeout","delay","start","tick","size","getScrollbarSize","recalculate","div","body","clientWidth","cachedRTLResult","getRTLOffsetType","outerDiv","direction","innerDiv","innerStyle","defaultItemKey","createListComponent","getItemOffset","getEstimatedTotalSize","getItemSize","getOffsetForIndexAndAlignment","getStartIndexForOffset","getStopIndexForStartIndex","initInstanceProps","shouldResetStyleCacheOnItemSizeChange","validateProps","_instanceProps","_outerRef","_resetIsScrollingTimeoutId","scrollDirection","initialScrollOffset","scrollUpdateWasRequested","_callOnItemsRendered","memoizeOne","overscanStartIndex","overscanStopIndex","visibleStartIndex","visibleStopIndex","onItemsRendered","_callOnScroll","onScroll","_getItemStyle","itemSize","layout","itemStyleCache","_getItemStyleCache","offset","isHorizontal","isRtl","offsetHorizontal","left","right","top","_","__","___","_onScrollHorizontal","event","currentTarget","Math","max","min","_resetIsScrollingDebounced","_onScrollVertical","clientHeight","_outerRefSetter","outerRef","_resetIsScrolling","List","nextProps","validateSharedProps","itemCount","scrollbarSize","componentDidMount","_callPropsCallbacks","componentDidUpdate","componentWillUnmount","render","innerRef","innerElementType","innerTagName","_this$props5$itemKey","itemKey","outerElementType","outerTagName","useIsScrolling","_getRangeToRender","startIndex","stopIndex","items","estimatedTotalSize","WebkitOverflowScrolling","willChange","pointerEvents","overscanCount","overscanBackward","overscanForward","getItemMetadata","instanceProps","itemMetadataMap","lastMeasuredIndex","itemMetadata","findNearestItemBinarySearch","high","low","middle","floor","currentOffset","findNearestItemExponentialSearch","interval","estimatedItemSize","totalSizeOfMeasuredItems","VariableSizeList","maxOffset","minOffset","round","findNearestItem","resetAfterIndex","shouldForceUpdate","forceUpdate","resetAfterId","resize","VariableSizeTree","_Tree","_list$current","then","_this2$state$list$cur","rest","_objectWithoutPropertiesLoose","_this$state2"],"sourceRoot":""}