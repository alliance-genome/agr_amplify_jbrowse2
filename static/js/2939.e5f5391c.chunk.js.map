{"version":3,"file":"static/js/2939.e5f5391c.chunk.js","mappings":"wQAqBMA,GAAYC,EAAAA,EAAAA,KAAAA,EAAa,SAAAC,GAAK,MAAK,CACvCC,oBAAqB,CACnBC,OAAQF,EAAMG,QAAQ,GACtBC,MAAO,KAEV,IAyDD,WAAeC,EAAAA,EAAAA,WAvDf,SAA8B,GAQ1B,IAPFC,EAAO,EAAPA,QACAC,EAAW,EAAXA,YACAC,EAAe,EAAfA,gBAMQC,EAAYX,IAAZW,QACAC,EAA+CJ,EAA/CI,UAAWC,EAAoCL,EAApCK,YAAaC,EAAuBN,EAAvBM,mBAChC,OACE,UAAC,EAAAC,OAAM,CAACC,MAAI,EAACC,QAASR,EAAaS,SAAS,KAAKC,MAAM,qBAAoB,WACzE,UAAC,IAAa,YACZ,SAAC,IAAU,UAAC,2EAGZ,iBAAKC,UAAWT,EAAQR,oBAAoB,UACzCU,EAAYQ,KAAI,SAAAC,GACf,IAAMC,GAAOC,EAAAA,EAAAA,gBAAeF,EAAM,QAClC,OACE,UAAC,IAAU,WACRV,GAA+B,OAAlBE,QAAkB,IAAlBA,GAAAA,EAAoBW,SAASH,IACzC,SAAC,IAAU,CAACI,QAAS,kBAAMhB,EAAgBY,GAAM,EAAK,EAAC,UACrD,SAAC,IAAS,CAACK,MAAM,aAGnB,SAAC,IAAO,CAACR,MAAM,+DAA8D,UAC3E,SAAC,IAAU,WACT,SAAC,IAAS,CAACQ,MAAM,iBAItBJ,IAAI,eAZkBA,GAe7B,IACEV,EAAYe,OAEV,MADF,SAAC,IAAU,UAAC,gCAIlB,SAAC,IAAa,WACZ,SAAC,IAAM,CACLF,QAAS,kBAAMjB,GAAa,EAC5BoB,QAAQ,YACRF,MAAM,UAAS,SAChB,cAMT,G","sources":["../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/ManageConnectionsDialog.tsx"],"sourcesContent":["import React from 'react'\nimport {\n  Button,\n  DialogContent,\n  DialogActions,\n  IconButton,\n  Tooltip,\n  Typography,\n} from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { AbstractSessionModel } from '@jbrowse/core/util'\n\n// icons\nimport CloseIcon from '@mui/icons-material/Close'\n\nconst useStyles = makeStyles()(theme => ({\n  connectionContainer: {\n    margin: theme.spacing(4),\n    width: 500,\n  },\n}))\n\nfunction ManageConnectionsDlg({\n  session,\n  handleClose,\n  breakConnection,\n}: {\n  handleClose: () => void\n  session: AbstractSessionModel\n  breakConnection: (conf: AnyConfigurationModel, arg: boolean) => void\n}) {\n  const { classes } = useStyles()\n  const { adminMode, connections, sessionConnections } = session\n  return (\n    <Dialog open onClose={handleClose} maxWidth=\"lg\" title=\"Delete connections\">\n      <DialogContent>\n        <Typography>\n          Click the X icon to delete the connection from your config completely\n        </Typography>\n        <div className={classes.connectionContainer}>\n          {connections.map(conf => {\n            const name = readConfObject(conf, 'name')\n            return (\n              <Typography key={`conn-${name}`}>\n                {adminMode || sessionConnections?.includes(conf) ? (\n                  <IconButton onClick={() => breakConnection(conf, true)}>\n                    <CloseIcon color=\"error\" />\n                  </IconButton>\n                ) : (\n                  <Tooltip title=\"Unable to delete connection in config file as non-admin user\">\n                    <IconButton>\n                      <CloseIcon color=\"disabled\" />\n                    </IconButton>\n                  </Tooltip>\n                )}\n                {name}\n              </Typography>\n            )\n          })}\n          {!connections.length ? (\n            <Typography>No connections found</Typography>\n          ) : null}\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => handleClose()}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default observer(ManageConnectionsDlg)\n"],"names":["useStyles","makeStyles","theme","connectionContainer","margin","spacing","width","observer","session","handleClose","breakConnection","classes","adminMode","connections","sessionConnections","Dialog","open","onClose","maxWidth","title","className","map","conf","name","readConfObject","includes","onClick","color","length","variant"],"sourceRoot":""}