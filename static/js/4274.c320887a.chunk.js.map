{"version":3,"file":"static/js/4274.c320887a.chunk.js","mappings":"sQAUe,SAASA,EAAaC,GAUnC,IAAQC,EAAuBD,EAAvBC,MAAOC,EAAgBF,EAAhBE,YACPC,EAAkCF,EAAlCE,SAAUC,EAAwBH,EAAxBG,SAAUC,EAAcJ,EAAdI,UAE5B,GAAsBC,EAAAA,EAAAA,UAAS,GAAD,OACzBH,IAAaI,OAAOC,UAAYL,EAAW,KAC/C,eAFMM,EAAG,KAAEC,EAAM,KAGlB,GAAsBJ,EAAAA,EAAAA,UAAS,GAAD,OACzBF,IAAaG,OAAOI,UAAYP,EAAW,KAC/C,eAFMQ,EAAG,KAAEC,EAAM,KAIZC,IACI,KAARL,GAAsB,KAARG,IAAeL,OAAOQ,OAAON,KAASF,OAAOQ,OAAOH,MAC7DA,GAAOH,EAGRO,IACU,QAAdX,GAA+B,KAARI,IAAeF,OAAOQ,OAAON,MAAQA,EAAM,EAEpE,OACE,UAAC,EAAAQ,OAAM,CAACC,MAAI,EAACC,QAASjB,EAAakB,MAAM,8BAA6B,WACpE,UAAC,IAAa,YACZ,SAAC,IAAU,UAAC,0BACVN,EAIE,MAHF,SAAC,IAAU,CAACO,MAAM,QAAO,SAAC,wCAK1BL,EAIE,MAHF,SAAC,IAAU,CAACK,MAAM,QAAO,SAAC,sDAK5B,SAAC,IAAS,CACRC,MAAOb,EACPc,SAAU,SAAAC,GAAK,OAAId,EAAOc,EAAMC,OAAOH,MAAM,EAC7CI,YAAY,qBAEd,SAAC,IAAS,CACRJ,MAAOV,EACPW,SAAU,SAAAC,GAAK,OAAIX,EAAOW,EAAMC,OAAOH,MAAM,EAC7CI,YAAY,wBAGhB,SAAC,IAAa,WACZ,SAAC,IAAM,CACLC,QAAQ,YACRN,MAAM,UACNO,KAAK,SACLC,MAAO,CAAEC,WAAY,IACrBC,UAAWjB,EACXkB,QAAS,WACP/B,EAAMgC,YACI,KAARxB,GAAeF,OAAOQ,OAAON,QAAcyB,GAANzB,GAEvCR,EAAMkC,YACI,KAARvB,GAAeL,OAAOQ,OAAOH,QAAcsB,GAANtB,GAEvCV,GACF,EAAE,SACH,eAMT,C","sources":["../../../plugins/wiggle/src/shared/SetMinMaxDialog.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\n\nexport default function SetMinMaxDlg(props: {\n  model: {\n    minScore: number\n    maxScore: number\n    scaleType: string\n    setMinScore: Function\n    setMaxScore: Function\n  }\n  handleClose: () => void\n}) {\n  const { model, handleClose } = props\n  const { minScore, maxScore, scaleType } = model\n\n  const [min, setMin] = useState(\n    `${minScore !== Number.MIN_VALUE ? minScore : ''}`,\n  )\n  const [max, setMax] = useState(\n    `${maxScore !== Number.MAX_VALUE ? maxScore : ''}`,\n  )\n\n  const ok =\n    min !== '' && max !== '' && !Number.isNaN(+min) && !Number.isNaN(+max)\n      ? +max > +min\n      : true\n\n  const logOk =\n    scaleType === 'log' && min !== '' && !Number.isNaN(+min) ? +min > 0 : true\n\n  return (\n    <Dialog open onClose={handleClose} title=\"Set min/max score for track\">\n      <DialogContent>\n        <Typography>Enter min/max score: </Typography>\n        {!ok ? (\n          <Typography color=\"error\">\n            Max is greater than or equal to min\n          </Typography>\n        ) : null}\n\n        {!logOk ? (\n          <Typography color=\"error\">\n            Min score should be greater than 0 for log scale\n          </Typography>\n        ) : null}\n\n        <TextField\n          value={min}\n          onChange={event => setMin(event.target.value)}\n          placeholder=\"Enter min score\"\n        />\n        <TextField\n          value={max}\n          onChange={event => setMax(event.target.value)}\n          placeholder=\"Enter max score\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          style={{ marginLeft: 20 }}\n          disabled={!ok}\n          onClick={() => {\n            model.setMinScore(\n              min !== '' && !Number.isNaN(+min) ? +min : undefined,\n            )\n            model.setMaxScore(\n              max !== '' && !Number.isNaN(+max) ? +max : undefined,\n            )\n            handleClose()\n          }}\n        >\n          Submit\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n"],"names":["SetMinMaxDlg","props","model","handleClose","minScore","maxScore","scaleType","useState","Number","MIN_VALUE","min","setMin","MAX_VALUE","max","setMax","ok","isNaN","logOk","Dialog","open","onClose","title","color","value","onChange","event","target","placeholder","variant","type","style","marginLeft","disabled","onClick","setMinScore","undefined","setMaxScore"],"sourceRoot":""}