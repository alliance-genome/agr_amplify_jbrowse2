{"version":3,"file":"static/js/7296.e00bee32.chunk.js","mappings":"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","sources":["../../../packages/core/ui/ResizeBar.tsx","../../../plugins/variants/src/VariantFeatureWidget/VariantSampleGrid.tsx","../../../plugins/variants/src/VariantFeatureWidget/AnnotGrid.tsx","../../../plugins/variants/src/VariantFeatureWidget/VariantCsqPanel.tsx","../../../plugins/variants/src/VariantFeatureWidget/VariantAnnPanel.tsx","../../../plugins/variants/src/VariantFeatureWidget/BreakendOptionDialog.tsx","../../../plugins/variants/src/VariantFeatureWidget/BreakendPanel.tsx","../../../plugins/variants/src/VariantFeatureWidget/VariantFeatureWidget.tsx","../../../node_modules/@mui/icons-material/Settings.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport ResizeHandle from './ResizeHandle'\n\nconst useStyles = makeStyles()(theme => ({\n  resizeBar: {\n    background: theme.palette.action.disabledBackground,\n    height: 12,\n    position: 'relative',\n    overflow: 'hidden',\n  },\n  tick: {\n    position: 'absolute',\n    height: '100%',\n    pointerEvents: 'none',\n    background: theme.palette.divider,\n    width: 1,\n  },\n  hiddenTick: {\n    position: 'absolute',\n    height: '100%',\n    width: 5,\n  },\n}))\n\nexport function useResizeBar() {\n  const ref = useRef<HTMLDivElement>(null)\n  const [scrollLeft, setScrollLeft] = useState(0)\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const elt = ref.current?.querySelector('.MuiDataGrid-virtualScroller')\n      if (elt) {\n        setScrollLeft(elt.scrollLeft)\n      }\n    }, 100)\n    return () => {\n      clearInterval(timer)\n    }\n  }, [])\n  return { ref, scrollLeft }\n}\n\nfunction Tick({\n  left,\n  scrollLeft,\n  idx,\n  onDrag,\n}: {\n  idx: number\n  left: number\n  scrollLeft: number\n  onDrag: (arg: number, idx: number) => void\n}) {\n  const { classes } = useStyles()\n  const cb = useCallback(\n    (d: number) => {\n      onDrag(d, idx)\n    },\n    [idx, onDrag],\n  )\n\n  // has an invisible wider than tick mark (1px) clickable area (5px)\n  return (\n    <>\n      <ResizeHandle\n        onDrag={cb}\n        vertical\n        className={classes.hiddenTick}\n        style={{ left: left - scrollLeft - 2.5 }}\n      />\n      <div style={{ left: left - scrollLeft }} className={classes.tick} />\n    </>\n  )\n}\n\nexport default function ResizeBar({\n  widths,\n  setWidths,\n  checkbox,\n  scrollLeft = 0,\n}: {\n  widths: number[]\n  setWidths: (arg: number[]) => void\n  checkbox?: boolean\n  scrollLeft?: number\n}) {\n  const { classes } = useStyles()\n  const offsets = [] as number[]\n  widths.reduce((a, b, i) => (offsets[i] = a + b), checkbox ? 52 : 0)\n\n  const onDrag = useCallback(\n    (distance: number, idx: number) => {\n      const newWidths = [...widths]\n      // mui doesn't allow columns smaller than 50\n      newWidths[idx] = Math.max(newWidths[idx] + distance, 50)\n      setWidths(newWidths)\n    },\n    [widths, setWidths],\n  )\n  return (\n    <div className={classes.resizeBar}>\n      {offsets.map((left, i) => (\n        <Tick\n          key={i}\n          left={i === offsets.length - 1 ? left - 3 : left}\n          onDrag={onDrag}\n          idx={i}\n          scrollLeft={scrollLeft}\n        />\n      ))}\n    </div>\n  )\n}\n","import React, { useState } from 'react'\n\nimport {\n  FormControlLabel,\n  Checkbox,\n  TextField,\n  Typography,\n} from '@mui/material'\n\nimport { DataGrid } from '@mui/x-data-grid'\nimport { BaseCard } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\nimport { measureGridWidth, SimpleFeatureSerialized } from '@jbrowse/core/util'\nimport ResizeBar, { useResizeBar } from '@jbrowse/core/ui/ResizeBar'\n\ninterface Entry {\n  sample: string\n  id: string\n  [key: string]: string\n}\n\ntype InfoFields = Record<string, unknown>\ntype Filters = Record<string, string>\n\nfunction SampleFilters({\n  columns,\n  filter,\n  setFilter,\n}: {\n  columns: { field: string }[]\n  filter: Filters\n  setFilter: (arg: Filters) => void\n}) {\n  const [showFilters, setShowFilters] = useState(false)\n  return (\n    <>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={showFilters}\n            onChange={() => setShowFilters(f => !f)}\n          />\n        }\n        label=\"Show sample filters\"\n      />\n      {showFilters ? (\n        <>\n          <Typography>\n            These filters can use a plain text search or regex style query, e.g.\n            in the genotype field, entering 1 will query for all genotypes that\n            include the first alternate allele e.g. 0|1 or 1|1, entering\n            [1-9]\\d* will find any non-zero allele e.g. 0|2 or 2/33\n          </Typography>\n          {columns.map(({ field }) => (\n            <TextField\n              key={`filter-${field}`}\n              placeholder={`Filter ${field}`}\n              value={filter[field] || ''}\n              onChange={event =>\n                setFilter({ ...filter, [field]: event.target.value })\n              }\n            />\n          ))}\n        </>\n      ) : null}\n    </>\n  )\n}\n\nexport default function VariantSamples(props: {\n  feature: SimpleFeatureSerialized\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  descriptions: any\n}) {\n  const { feature, descriptions = {} } = props\n  const { ref, scrollLeft } = useResizeBar()\n  const [filter, setFilter] = useState<Filters>({})\n  const samples = (feature.samples || {}) as Record<string, InfoFields>\n  const preFilteredRows = Object.entries(samples)\n\n  let error\n  let rows = [] as Entry[]\n  const filters = Object.keys(filter)\n\n  // catch some error thrown from regex\n  // note: maps all values into a string, if this is not done rows are not\n  // sortable by the data-grid\n  try {\n    rows = preFilteredRows\n      .map(row => {\n        return {\n          ...Object.fromEntries(\n            Object.entries(row[1]).map(e => [e[0], `${e[1]}`]),\n          ),\n          sample: row[0],\n          id: row[0],\n        } as Entry\n      })\n      .filter(row =>\n        filters.length\n          ? filters.every(key => {\n              const val = row[key]\n              const currFilter = filter[key]\n              return currFilter ? val.match(new RegExp(currFilter, 'i')) : true\n            })\n          : true,\n      )\n  } catch (e) {\n    error = e\n  }\n\n  const keys = ['sample', ...Object.keys(preFilteredRows[0]?.[1] || {})]\n\n  const [widths, setWidths] = useState(\n    keys.map(e => measureGridWidth(rows.map(r => r[e]))),\n  )\n  const columns = keys.map((field, index) => ({\n    field,\n    description: descriptions.FORMAT?.[field]?.Description,\n    width: widths[index],\n  }))\n\n  // disableSelectionOnClick helps avoid\n  // https://github.com/mui-org/material-ui-x/issues/1197\n  return !preFilteredRows.length ? null : (\n    <BaseCard {...props} title=\"Samples\">\n      {error ? <Typography color=\"error\">{`${error}`}</Typography> : null}\n      <SampleFilters setFilter={setFilter} columns={columns} filter={filter} />\n      <div ref={ref}>\n        <ResizeBar\n          widths={widths}\n          setWidths={setWidths}\n          scrollLeft={scrollLeft}\n        />\n        <div ref={ref} style={{ height: 600, width: '100%', overflow: 'auto' }}>\n          <DataGrid\n            rows={rows}\n            columns={columns}\n            disableSelectionOnClick\n            rowHeight={25}\n            headerHeight={35}\n            disableColumnMenu\n          />\n        </div>\n      </div>\n    </BaseCard>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react'\nimport { DataGrid } from '@mui/x-data-grid'\n\nexport default function VariantAnnotPanel({\n  rows,\n  columns,\n}: {\n  rows: any\n  columns: any[]\n}) {\n  const rowHeight = 25\n  const hideFooter = rows.length < 100\n  const headerHeight = 80\n  return rows.length ? (\n    <div\n      style={{\n        height:\n          Math.min(rows.length, 100) * rowHeight +\n          headerHeight +\n          (hideFooter ? 0 : 50),\n        width: '100%',\n      }}\n    >\n      <DataGrid rowHeight={rowHeight} rows={rows} columns={columns} />\n    </div>\n  ) : null\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react'\nimport { BaseCard } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\nimport AnnotGrid from './AnnotGrid'\n\nexport default function VariantCsqPanel({\n  feature,\n  descriptions,\n}: {\n  feature: any\n  descriptions: any\n}) {\n  const csqFields = (descriptions?.INFO?.CSQ?.Description?.match(\n    /.*Format: (.*)/,\n  )?.[1].split('|') || []) as string[]\n\n  const csq = (feature.INFO.CSQ || []) as string[]\n  const rows =\n    csq.map((elt, id) => ({\n      id,\n      ...Object.fromEntries(elt.split('|').map((e, i) => [csqFields[i], e])),\n    })) || []\n  const columns = csqFields.map(c => ({\n    field: c,\n  }))\n  return csq.length ? (\n    <BaseCard title=\"CSQ table\">\n      <AnnotGrid rows={rows} columns={columns} />\n    </BaseCard>\n  ) : null\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react'\nimport { BaseCard } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\nimport AnnotGrid from './AnnotGrid'\n\nexport default function VariantAnnPanel({\n  feature,\n  descriptions,\n}: {\n  feature: any\n  descriptions: any\n}) {\n  const annFields = (descriptions?.INFO?.ANN?.Description?.match(\n    /.*Functional annotations:'(.*)'$/,\n  )?.[1].split('|') || []) as string[]\n  const ann = (feature.INFO.ANN || []) as string[]\n\n  const rows =\n    ann.map((elt, id) => ({\n      id,\n      ...Object.fromEntries(elt.split('|').map((e, i) => [annFields[i], e])),\n    })) || []\n  const columns = annFields.map(c => ({\n    field: c,\n  }))\n  return ann.length ? (\n    <BaseCard title=\"ANN table\">\n      <AnnotGrid rows={rows} columns={columns} />\n    </BaseCard>\n  ) : null\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContent,\n  FormControlLabel,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { getSnapshot } from 'mobx-state-tree'\n// jbrowse\nimport { Dialog } from '@jbrowse/core/ui'\nimport { getSession, Feature } from '@jbrowse/core/util'\n\nconst useStyles = makeStyles()({\n  block: {\n    display: 'block',\n  },\n})\n\nfunction BreakendOptionDialog({\n  model,\n  handleClose,\n  feature,\n  viewType,\n}: {\n  model: any\n  handleClose: () => void\n  feature: Feature\n  viewType: any\n}) {\n  const { classes } = useStyles()\n  const [copyTracks, setCopyTracks] = useState(true)\n  const [mirrorTracks, setMirrorTracks] = useState(true)\n\n  return (\n    <Dialog open onClose={handleClose} title=\"Breakpoint split view options\">\n      <DialogContent>\n        <FormControlLabel\n          className={classes.block}\n          control={\n            <Checkbox\n              checked={copyTracks}\n              onChange={() => setCopyTracks(val => !val)}\n            />\n          }\n          label=\"Copy tracks into the new view\"\n        />\n\n        <FormControlLabel\n          className={classes.block}\n          control={\n            <Checkbox\n              checked={mirrorTracks}\n              onChange={() => setMirrorTracks(val => !val)}\n            />\n          }\n          label=\"Mirror tracks vertically in vertically stacked view\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            const { view } = model\n            const session = getSession(model)\n            try {\n              const viewSnapshot = viewType.snapshotFromBreakendFeature(\n                feature,\n                view,\n              )\n              function remapIds(arr: any[]) {\n                return arr.map((v: any) => ({\n                  ...v,\n                  id: v.trackId + '-' + Math.random(),\n                }))\n              }\n              viewSnapshot.views[0].offsetPx -= view.width / 2 + 100\n              viewSnapshot.views[1].offsetPx -= view.width / 2 + 100\n              viewSnapshot.featureData = feature\n              const viewTracks = getSnapshot(view.tracks) as any\n              viewSnapshot.views[0].tracks = remapIds(viewTracks)\n              viewSnapshot.views[1].tracks = remapIds(\n                mirrorTracks ? viewTracks.slice().reverse() : viewTracks,\n              )\n\n              session.addView('BreakpointSplitView', viewSnapshot)\n            } catch (e) {\n              console.error(e)\n              session.notify(`${e}`)\n            }\n            handleClose()\n          }}\n          variant=\"contained\"\n          color=\"primary\"\n          autoFocus\n        >\n          OK\n        </Button>\n        <Button\n          onClick={() => handleClose()}\n          color=\"secondary\"\n          variant=\"contained\"\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\nexport default observer(BreakendOptionDialog)\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState } from 'react'\nimport { Link, Typography } from '@mui/material'\nimport SimpleFeature, {\n  SimpleFeatureSerialized,\n} from '@jbrowse/core/util/simpleFeature'\nimport { getEnv, getSession } from '@jbrowse/core/util'\nimport { BaseCard } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\nimport BreakendOptionDialog from './BreakendOptionDialog'\n\nexport default function BreakendPanel(props: {\n  locStrings: string[]\n  model: any\n  feature: SimpleFeatureSerialized\n}) {\n  const { model, locStrings, feature } = props\n  const session = getSession(model)\n  const { pluginManager } = getEnv(session)\n  const [breakpointDialog, setBreakpointDialog] = useState(false)\n  let viewType\n\n  try {\n    viewType = pluginManager.getViewType('BreakpointSplitView')\n  } catch (e) {\n    // ignore\n  }\n\n  const simpleFeature = new SimpleFeature(feature)\n  return (\n    <BaseCard {...props} title=\"Breakends\">\n      <Typography>Link to linear view of breakend endpoints</Typography>\n      <ul>\n        {locStrings.map(locString => (\n          <li key={`${JSON.stringify(locString)}`}>\n            <Link\n              href=\"#\"\n              onClick={event => {\n                event.preventDefault()\n                const { view } = model\n                try {\n                  if (view) {\n                    view.navToLocString?.(locString)\n                  } else {\n                    throw new Error(\n                      'No view associated with this feature detail panel anymore',\n                    )\n                  }\n                } catch (e) {\n                  console.error(e)\n                  session.notify(`${e}`)\n                }\n              }}\n            >\n              {`LGV - ${locString}`}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      {viewType ? (\n        <div>\n          <Typography>\n            Launch split views with breakend source and target\n          </Typography>\n          <ul>\n            {locStrings.map(locString => (\n              <li key={`${JSON.stringify(locString)}`}>\n                <Link\n                  href=\"#\"\n                  onClick={event => {\n                    event.preventDefault()\n                    setBreakpointDialog(true)\n                  }}\n                >\n                  {`${feature.refName}:${feature.start} // ${locString} (split view)`}\n                </Link>\n              </li>\n            ))}\n          </ul>\n          {breakpointDialog ? (\n            <BreakendOptionDialog\n              model={model}\n              feature={simpleFeature}\n              viewType={viewType}\n              handleClose={() => {\n                setBreakpointDialog(false)\n              }}\n            />\n          ) : null}\n        </div>\n      ) : null}\n    </BaseCard>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react'\nimport { observer } from 'mobx-react'\nimport { Divider, Paper } from '@mui/material'\nimport { FeatureDetails } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\nimport { parseBreakend } from '@gmod/vcf'\n\n// locals\nimport VariantSampleGrid from './VariantSampleGrid'\nimport VariantCsqPanel from './VariantCsqPanel'\nimport VariantAnnPanel from './VariantAnnPanel'\nimport BreakendPanel from './BreakendPanel'\n\nfunction VariantFeatureDetails(props: any) {\n  const { model } = props\n  const { featureData, descriptions } = model\n  const feat = JSON.parse(JSON.stringify(featureData))\n  const { samples, ...rest } = feat\n  const basicDescriptions = {\n    CHROM: 'chromosome: An identifier from the reference genome',\n    POS: 'position: The reference position, with the 1st base having position 1',\n    ID: 'identifier: Semi-colon separated list of unique identifiers where available',\n    REF: 'reference base(s): Each base must be one of A,C,G,T,N (case insensitive).',\n    ALT: 'alternate base(s): Comma-separated list of alternate non-reference alleles',\n    QUAL: 'quality: Phred-scaled quality score for the assertion made in ALT',\n    FILTER:\n      'filter status: PASS if this position has passed all filters, otherwise a semicolon-separated list of codes for filters that fail',\n  }\n\n  return (\n    <Paper data-testid=\"variant-side-drawer\">\n      <FeatureDetails\n        feature={rest}\n        descriptions={{ ...basicDescriptions, ...descriptions }}\n        {...props}\n      />\n      <Divider />\n      <VariantCsqPanel feature={rest} descriptions={descriptions} />\n      <Divider />\n      <VariantAnnPanel feature={rest} descriptions={descriptions} />\n      <Divider />\n      {feat.type === 'breakend' ? (\n        <BreakendPanel\n          feature={feat}\n          locStrings={feat.ALT.map(\n            (alt: string) => parseBreakend(alt)?.MatePosition || '',\n          )}\n          model={model}\n        />\n      ) : null}\n      {feat.type === 'translocation' ? (\n        <BreakendPanel\n          feature={feat}\n          model={model}\n          locStrings={[`${feat.INFO.CHR2[0]}:${feat.INFO.END}`]}\n        />\n      ) : null}\n      <VariantSampleGrid\n        feature={feat}\n        {...props}\n        descriptions={descriptions}\n      />\n    </Paper>\n  )\n}\n\nexport default observer(VariantFeatureDetails)\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19.14 12.94c.04-.3.06-.61.06-.94 0-.32-.02-.64-.07-.94l2.03-1.58c.18-.14.23-.41.12-.61l-1.92-3.32c-.12-.22-.37-.29-.59-.22l-2.39.96c-.5-.38-1.03-.7-1.62-.94l-.36-2.54c-.04-.24-.24-.41-.48-.41h-3.84c-.24 0-.43.17-.47.41l-.36 2.54c-.59.24-1.13.57-1.62.94l-2.39-.96c-.22-.08-.47 0-.59.22L2.74 8.87c-.12.21-.08.47.12.61l2.03 1.58c-.05.3-.09.63-.09.94s.02.64.07.94l-2.03 1.58c-.18.14-.23.41-.12.61l1.92 3.32c.12.22.37.29.59.22l2.39-.96c.5.38 1.03.7 1.62.94l.36 2.54c.05.24.24.41.48.41h3.84c.24 0 .44-.17.47-.41l.36-2.54c.59-.24 1.13-.56 1.62-.94l2.39.96c.22.08.47 0 .59-.22l1.92-3.32c.12-.22.07-.47-.12-.61l-2.01-1.58zM12 15.6c-1.98 0-3.6-1.62-3.6-3.6s1.62-3.6 3.6-3.6 3.6 1.62 3.6 3.6-1.62 3.6-3.6 3.6z\"\n}), 'Settings');\nexports.default = _default;"],"names":["useStyles","makeStyles","theme","resizeBar","background","palette","action","disabledBackground","height","position","overflow","tick","pointerEvents","divider","width","hiddenTick","useResizeBar","ref","useRef","useState","scrollLeft","setScrollLeft","useEffect","timer","setInterval","elt","current","querySelector","clearInterval","Tick","left","idx","onDrag","classes","cb","useCallback","d","vertical","className","style","ResizeBar","widths","setWidths","checkbox","offsets","reduce","a","b","i","distance","newWidths","Math","max","map","length","SampleFilters","columns","filter","setFilter","showFilters","setShowFilters","FormControlLabel","control","Checkbox","checked","onChange","f","label","Typography","field","TextField","placeholder","value","event","target","VariantSamples","props","error","feature","descriptions","samples","preFilteredRows","Object","entries","rows","filters","keys","row","fromEntries","e","sample","id","every","key","val","currFilter","match","RegExp","measureGridWidth","r","index","description","FORMAT","Description","BaseCard","title","color","DataGrid","disableSelectionOnClick","rowHeight","headerHeight","disableColumnMenu","VariantAnnotPanel","hideFooter","min","VariantCsqPanel","csqFields","INFO","CSQ","split","csq","c","VariantAnnPanel","annFields","ANN","ann","block","display","observer","model","handleClose","viewType","copyTracks","setCopyTracks","mirrorTracks","setMirrorTracks","Dialog","open","onClose","DialogContent","DialogActions","Button","onClick","view","session","getSession","remapIds","arr","v","trackId","random","viewSnapshot","snapshotFromBreakendFeature","views","offsetPx","featureData","viewTracks","getSnapshot","tracks","slice","reverse","addView","console","notify","variant","autoFocus","BreakendPanel","locStrings","pluginManager","getEnv","breakpointDialog","setBreakpointDialog","getViewType","simpleFeature","SimpleFeature","locString","Link","href","preventDefault","Error","navToLocString","JSON","stringify","refName","start","feat","parse","rest","Paper","FeatureDetails","CHROM","POS","ID","REF","ALT","QUAL","FILTER","Divider","type","alt","parseBreakend","MatePosition","CHR2","END","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx"],"sourceRoot":""}