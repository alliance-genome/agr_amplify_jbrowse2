{"version":3,"file":"static/js/3553.8dd067a4.chunk.js","mappings":"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","sources":["../../../plugins/alignments/src/LinearPileupDisplay/components/ModificationsTable.tsx","../../../plugins/alignments/src/LinearPileupDisplay/components/ColorByModifications.tsx","../../../node_modules/@mui/material/CircularProgress/CircularProgress.js","../../../node_modules/@mui/material/CircularProgress/circularProgressClasses.js"],"sourcesContent":["import React from 'react'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()(theme => ({\n  table: {\n    border: '1px solid #888',\n    margin: theme.spacing(4),\n    '& td': {\n      padding: theme.spacing(1),\n    },\n  },\n}))\n\nexport default function ModificationTable({\n  modifications,\n}: {\n  modifications: [string, string | undefined][]\n}) {\n  const { classes } = useStyles()\n  return (\n    <table className={classes.table}>\n      <tbody>\n        {modifications.map(([key, value]) => (\n          <tr key={key}>\n            <td>{key}</td>\n            <td>{value}</td>\n            <td\n              style={{\n                width: '1em',\n                background: value,\n              }}\n            />\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  )\n}\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { ObservableMap } from 'mobx'\nimport {\n  Button,\n  CircularProgress,\n  DialogActions,\n  DialogContent,\n  Typography,\n} from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\nimport ModificationTable from './ModificationsTable'\n\nconst ColorByModificationsDialog = observer(function ({\n  model,\n  handleClose,\n}: {\n  model: {\n    setColorScheme: (arg: { type: string }) => void\n    modificationTagMap: ObservableMap<string, string>\n    colorBy?: { type: string }\n  }\n  handleClose: () => void\n}) {\n  const { colorBy, modificationTagMap } = model\n\n  const modifications = [...modificationTagMap.entries()]\n\n  return (\n    <Dialog open onClose={handleClose} title=\"Color by modifications\">\n      <DialogContent>\n        <Typography>\n          You can choose to color the modifications in the BAM/CRAM MM/ML\n          specification using this dialog. Choosing modifications colors the\n          modified positions and can color multiple modification types. Choosing\n          the methylation setting colors methylated and unmethylated CpG.\n        </Typography>\n        <Typography>\n          Note: you can revisit this dialog to see the current mapping of colors\n          to modification type for the modification coloring mode\n        </Typography>\n        <div style={{ margin: 20 }}>\n          {colorBy?.type === 'modifications' ? (\n            <div>\n              {modifications.length ? (\n                <>\n                  Current modification-type-to-color mapping\n                  <ModificationTable\n                    modifications={[...modificationTagMap.entries()]}\n                  />\n                </>\n              ) : (\n                <>\n                  <Typography>\n                    Note: color by modifications is already enabled. Loading\n                    current modifications...\n                  </Typography>\n                  <CircularProgress size={15} />\n                </>\n              )}\n            </div>\n          ) : null}\n          {colorBy?.type === 'methylation' ? (\n            <ModificationTable\n              modifications={[\n                ['methylated', 'red'],\n                ['unmethylated', 'blue'],\n              ]}\n            />\n          ) : null}\n        </div>\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              model.setColorScheme({ type: 'modifications' })\n              handleClose()\n            }}\n          >\n            Modifications\n          </Button>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              model.setColorScheme({ type: 'methylation' })\n              handleClose()\n            }}\n          >\n            Methylation\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => handleClose()}\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </Dialog>\n  )\n})\n\nexport default ColorByModificationsDialog\n","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      disableShrink = false,\n      size = 40,\n      style,\n      thickness = 3.6,\n      value = 0,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g. '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;"],"names":["useStyles","makeStyles","theme","table","border","margin","spacing","padding","ModificationTable","modifications","classes","React","className","map","key","value","style","width","background","observer","model","handleClose","colorBy","modificationTagMap","entries","Dialog","open","onClose","title","DialogContent","Typography","type","length","CircularProgress","size","DialogActions","Button","variant","onClick","setColorScheme","color","_excluded","_t","_t2","_t3","_t4","_","t","circularRotateKeyframe","circularDashKeyframe","CircularProgressRoot","name","slot","overridesResolver","props","styles","ownerState","root","display","transition","transitions","create","vars","palette","main","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","stroke","strokeDasharray","strokeDashoffset","inProps","ref","thickness","other","slots","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","height","role","children","viewBox","cx","cy","r","fill","strokeWidth","getCircularProgressUtilityClass"],"sourceRoot":""}