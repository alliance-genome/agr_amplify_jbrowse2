{"version":3,"file":"static/js/8377.84b00dc4.chunk.js","mappings":"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","sources":["../../../plugins/dotplot-view/src/DotplotView/components/ImportForm.tsx","../../../plugins/dotplot-view/src/DotplotView/components/CursorIcon.tsx","../../../plugins/dotplot-view/src/DotplotView/components/Header.tsx","../../../plugins/dotplot-view/src/DotplotView/components/Grid.tsx","../../../plugins/dotplot-view/src/DotplotView/components/Axes.tsx","../../../plugins/dotplot-view/src/DotplotView/components/DotplotView.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport path from 'path'\nimport {\n  Button,\n  Container,\n  FormControlLabel,\n  Grid,\n  Paper,\n  Radio,\n  RadioGroup,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { FileSelector, ErrorMessage, AssemblySelector } from '@jbrowse/core/ui'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport { observer } from 'mobx-react'\nimport { transaction } from 'mobx'\nimport { getSession, isSessionWithAddTracks } from '@jbrowse/core/util'\nimport { DotplotViewModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  importFormContainer: {\n    padding: theme.spacing(4),\n    margin: '0 auto',\n  },\n  assemblySelector: {\n    width: '75%',\n    margin: '0 auto',\n  },\n}))\n\nfunction getName(\n  trackData?: { uri: string } | { localPath: string } | { name: string },\n) {\n  return trackData\n    ? // @ts-ignore\n      trackData.uri || trackData.localPath || trackData.name\n    : undefined\n}\n\nfunction stripGz(fileName: string) {\n  return fileName.endsWith('.gz')\n    ? fileName.slice(0, fileName.length - 3)\n    : fileName\n}\n\nconst DotplotImportForm = observer(({ model }: { model: DotplotViewModel }) => {\n  const { classes } = useStyles()\n  const session = getSession(model)\n  const { assemblyNames, assemblyManager } = session\n  const [trackData, setTrackData] = useState<FileLocation>()\n  const [bed2Location, setBed2Location] = useState<FileLocation>()\n  const [bed1Location, setBed1Location] = useState<FileLocation>()\n  const [targetAssembly, setTargetAssembly] = useState(assemblyNames[0])\n  const [queryAssembly, setQueryAssembly] = useState(assemblyNames[0])\n  const selected = [queryAssembly, targetAssembly]\n  const [error, setError] = useState<unknown>()\n  const [value, setValue] = useState('')\n  const fileName = getName(trackData)\n  const radioOption = value || (fileName ? path.extname(stripGz(fileName)) : '')\n\n  const assemblyError = assemblyNames.length\n    ? selected\n        .map(a => assemblyManager.get(a)?.error)\n        .filter(f => !!f)\n        .join(', ')\n    : 'No configured assemblies'\n\n  function getAdapter() {\n    if (radioOption === '.paf') {\n      return {\n        type: 'PAFAdapter',\n        pafLocation: trackData,\n        queryAssembly,\n        targetAssembly,\n      }\n    } else if (radioOption === '.out') {\n      return {\n        type: 'MashMapAdapter',\n        outLocation: trackData,\n        queryAssembly,\n        targetAssembly,\n      }\n    } else if (radioOption === '.delta') {\n      return {\n        type: 'DeltaAdapter',\n        deltaLocation: trackData,\n        queryAssembly,\n        targetAssembly,\n      }\n    } else if (radioOption === '.chain') {\n      return {\n        type: 'ChainAdapter',\n        chainLocation: trackData,\n        queryAssembly,\n        targetAssembly,\n      }\n    } else if (radioOption === '.anchors') {\n      return {\n        type: 'MCScanAnchorsAdapter',\n        mcscanAnchorsLocation: trackData,\n        bed1Location,\n        bed2Location,\n        assemblyNames: [queryAssembly, targetAssembly],\n      }\n    } else if (radioOption === '.anchors.simple') {\n      return {\n        type: 'MCScanSimpleAnchorsAdapter',\n        mcscanSimpleAnchorsLocation: trackData,\n        bed1Location,\n        bed2Location,\n        assemblyNames: [queryAssembly, targetAssembly],\n      }\n    } else {\n      throw new Error('Unknown type')\n    }\n  }\n\n  function onOpenClick() {\n    try {\n      if (!isSessionWithAddTracks(session)) {\n        return\n      }\n      transaction(() => {\n        if (trackData) {\n          const fileName = path.basename(getName(trackData)) || 'MyTrack'\n          const trackId = `${fileName}-${Date.now()}`\n\n          session.addTrackConf({\n            trackId: trackId,\n            name: fileName,\n            assemblyNames: [targetAssembly, queryAssembly],\n            type: 'SyntenyTrack',\n            adapter: getAdapter(),\n          })\n          model.toggleTrack(trackId)\n        }\n        model.setViews([\n          { bpPerPx: 0.1, offsetPx: 0 },\n          { bpPerPx: 0.1, offsetPx: 0 },\n        ])\n        model.setAssemblyNames(targetAssembly, queryAssembly)\n      })\n    } catch (e) {\n      console.error(e)\n      setError(e)\n    }\n  }\n\n  // this is a combination of any displayed error message we have\n  const displayError = error || assemblyError\n  return (\n    <Container className={classes.importFormContainer}>\n      {displayError ? <ErrorMessage error={displayError} /> : null}\n      <Grid\n        container\n        spacing={1}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        className={classes.assemblySelector}\n      >\n        <Grid item>\n          <Paper style={{ padding: 12 }}>\n            <p style={{ textAlign: 'center' }}>\n              Select assemblies for dotplot view\n            </p>\n            <Grid\n              container\n              spacing={1}\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <Typography>\n                  {value === '.anchors' || value === '.anchors.simple'\n                    ? 'Left column of anchors file'\n                    : 'Query'}\n                </Typography>\n                <AssemblySelector\n                  extra={0}\n                  selected={queryAssembly}\n                  onChange={val => setQueryAssembly(val)}\n                  session={session}\n                />\n              </Grid>\n              <Grid item>\n                <Typography>\n                  {value === '.anchors' || value === '.anchors.simple'\n                    ? 'Right column of anchors file'\n                    : 'Target'}\n                </Typography>\n                <AssemblySelector\n                  extra={1}\n                  selected={targetAssembly}\n                  onChange={val => setTargetAssembly(val)}\n                  session={session}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n\n          <Paper style={{ padding: 12 }}>\n            <Typography style={{ textAlign: 'center' }}>\n              <b>Optional</b>: Add a .paf, .out (MashMap), .delta (Mummer),\n              .chain, .anchors or .anchors.simple (MCScan) file to view in the\n              dotplot. These file types can also be gzipped. The first assembly\n              should be the query sequence (e.g. left column of the PAF) and the\n              second assembly should be the target sequence (e.g. right column\n              of the PAF)\n            </Typography>\n            <RadioGroup\n              value={radioOption}\n              onChange={event => setValue(event.target.value)}\n            >\n              <Grid container justifyContent=\"center\">\n                <Grid item>\n                  <FormControlLabel\n                    value=\".paf\"\n                    control={<Radio />}\n                    label=\".paf\"\n                  />\n                </Grid>\n                <Grid item>\n                  <FormControlLabel\n                    value=\".out\"\n                    control={<Radio />}\n                    label=\".out\"\n                  />\n                </Grid>\n                <Grid item>\n                  <FormControlLabel\n                    value=\".delta\"\n                    control={<Radio />}\n                    label=\".delta\"\n                  />\n                </Grid>\n                <Grid item>\n                  <FormControlLabel\n                    value=\".chain\"\n                    control={<Radio />}\n                    label=\".chain\"\n                  />\n                </Grid>\n                <Grid item>\n                  <FormControlLabel\n                    value=\".anchors\"\n                    control={<Radio />}\n                    label=\".anchors\"\n                  />\n                </Grid>\n                <Grid item>\n                  <FormControlLabel\n                    value=\".anchors.simple\"\n                    control={<Radio />}\n                    label=\".anchors.simple\"\n                  />\n                </Grid>\n              </Grid>\n            </RadioGroup>\n            <Grid container justifyContent=\"center\">\n              <Grid item>\n                {value === '.anchors' || value === '.anchors.simple' ? (\n                  <div>\n                    <div style={{ margin: 20 }}>\n                      Open the {value} and .bed files for both genome assemblies\n                      from the MCScan (Python verson) pipeline{' '}\n                      <a href=\"https://github.com/tanghaibao/jcvi/wiki/MCscan-(Python-version)\">\n                        (more info)\n                      </a>\n                    </div>\n                    <div style={{ display: 'flex' }}>\n                      <div>\n                        <FileSelector\n                          name=\".anchors file\"\n                          description=\"\"\n                          location={trackData}\n                          setLocation={loc => setTrackData(loc)}\n                        />\n                      </div>\n                      <div>\n                        <FileSelector\n                          name=\"genome 1 .bed (left column of anchors file)\"\n                          description=\"\"\n                          location={bed1Location}\n                          setLocation={loc => setBed1Location(loc)}\n                        />\n                      </div>\n                      <div>\n                        <FileSelector\n                          name=\"genome 2 .bed (right column of anchors file)\"\n                          description=\"\"\n                          location={bed2Location}\n                          setLocation={loc => setBed2Location(loc)}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                  <FileSelector\n                    name={value ? value + ' location' : ''}\n                    description=\"\"\n                    location={trackData}\n                    setLocation={loc => setTrackData(loc)}\n                  />\n                )}\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid item>\n          <Button\n            data-testid=\"submitDotplot\"\n            onClick={onOpenClick}\n            // only disable button on assemblyError. for other types of errors\n            // in the useState can retry\n            disabled={!!assemblyError}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Open\n          </Button>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n})\n\nexport default DotplotImportForm\n","import SvgIcon, { SvgIconProps } from '@mui/material/SvgIcon'\nimport React from 'react'\n\nexport function CursorMove(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M13,6V11H18V7.75L22.25,12L18,16.25V13H13V18H16.25L12,22.25L7.75,18H11V13H6V16.25L1.75,12L6,7.75V11H11V6H7.75L12,1.75L16.25,6H13Z\"\n      />\n    </SvgIcon>\n  )\n}\n\nexport function CursorMouse(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M10.07,14.27C10.57,14.03 11.16,14.25 11.4,14.75L13.7,19.74L15.5,18.89L13.19,13.91C12.95,13.41 13.17,12.81 13.67,12.58L13.95,12.5L16.25,12.05L8,5.12V15.9L9.82,14.43L10.07,14.27M13.64,21.97C13.14,22.21 12.54,22 12.31,21.5L10.13,16.76L7.62,18.78C7.45,18.92 7.24,19 7,19A1,1 0 0,1 6,18V3A1,1 0 0,1 7,2C7.24,2 7.47,2.09 7.64,2.23L7.65,2.22L19.14,11.86C19.57,12.22 19.62,12.85 19.27,13.27C19.12,13.45 18.91,13.57 18.7,13.61L15.54,14.23L17.74,18.96C18,19.46 17.76,20.05 17.26,20.28L13.64,21.97Z\"\n      />\n    </SvgIcon>\n  )\n}\n","import React, { lazy, useState } from 'react'\nimport { Alert, Button, IconButton, Typography } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\nimport { getBpDisplayStr } from '@jbrowse/core/util'\nimport { Menu } from '@jbrowse/core/ui'\n\n// icons\nimport ZoomOut from '@mui/icons-material/ZoomOut'\nimport ZoomIn from '@mui/icons-material/ZoomIn'\nimport MoreVert from '@mui/icons-material/MoreVert'\nimport { CursorMouse, CursorMove } from './CursorIcon'\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\n\n// locals\nimport { DotplotViewModel } from '../model'\n\n// lazy components\nconst WarningDialog = lazy(() => import('./WarningDialog'))\n\nconst useStyles = makeStyles()({\n  iconButton: {\n    margin: 5,\n  },\n  bp: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 10,\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  headerBar: {\n    display: 'flex',\n  },\n})\n\nconst DotplotControls = observer(({ model }: { model: DotplotViewModel }) => {\n  const { classes } = useStyles()\n  const [menuAnchorEl, setMenuAnchorEl] = useState<null | HTMLElement>(null)\n  const [cursorAnchorEl, setCursorAnchorEl] = useState<null | HTMLElement>(null)\n  return (\n    <div>\n      <IconButton\n        onClick={event => setCursorAnchorEl(event.currentTarget)}\n        className={classes.iconButton}\n        color=\"secondary\"\n      >\n        <CursorMouse />\n      </IconButton>\n      <IconButton\n        onClick={model.zoomOutButton}\n        className={classes.iconButton}\n        color=\"secondary\"\n      >\n        <ZoomOut />\n      </IconButton>\n\n      <IconButton\n        onClick={model.zoomInButton}\n        className={classes.iconButton}\n        title=\"zoom in\"\n        color=\"secondary\"\n      >\n        <ZoomIn />\n      </IconButton>\n\n      <IconButton\n        onClick={model.activateTrackSelector}\n        className={classes.iconButton}\n        title=\"Open track selector\"\n        data-testid=\"circular_track_select\"\n        color=\"secondary\"\n      >\n        <TrackSelectorIcon />\n      </IconButton>\n\n      <IconButton\n        onClick={event => setMenuAnchorEl(event.currentTarget)}\n        className={classes.iconButton}\n        color=\"secondary\"\n      >\n        <MoreVert />\n      </IconButton>\n\n      {menuAnchorEl ? (\n        <Menu\n          anchorEl={menuAnchorEl}\n          open\n          onMenuItemClick={(_event, callback) => {\n            callback()\n            setMenuAnchorEl(null)\n          }}\n          menuItems={[\n            {\n              onClick: () => model.squareView(),\n              label: 'Square view - same base pairs per pixel',\n            },\n            {\n              onClick: () => model.squareViewProportional(),\n              label: 'Rectanglular view - same total bp',\n            },\n            {\n              onClick: () => model.setDrawCigar(!model.drawCigar),\n              type: 'checkbox',\n              label: 'Draw CIGAR',\n              checked: model.drawCigar,\n            },\n          ]}\n          onClose={() => setMenuAnchorEl(null)}\n        />\n      ) : null}\n\n      {cursorAnchorEl ? (\n        <Menu\n          anchorEl={cursorAnchorEl}\n          open\n          onMenuItemClick={(_event, callback) => {\n            callback()\n            setCursorAnchorEl(null)\n          }}\n          menuItems={[\n            {\n              onClick: () => model.setCursorMode('move'),\n              label: 'Cursor mode - click and drag to move',\n              icon: CursorMove,\n              type: 'radio',\n              checked: model.cursorMode === 'move',\n            },\n            {\n              onClick: () => model.setCursorMode('crosshair'),\n              label: 'Cursor mode - select region',\n              type: 'radio',\n              checked: model.cursorMode === 'crosshair',\n            },\n          ]}\n          onClose={() => setCursorAnchorEl(null)}\n        />\n      ) : null}\n    </div>\n  )\n})\nconst Warnings = observer(({ model }: { model: DotplotViewModel }) => {\n  const tracksWithWarnings = model.tracks.filter(\n    t => t.displays[0].warnings?.length,\n  )\n  const [shown, setShown] = useState(false)\n  return tracksWithWarnings.length ? (\n    <Alert severity=\"warning\">\n      Warnings during render{' '}\n      <Button onClick={() => setShown(true)}>More info</Button>\n      {shown ? (\n        <WarningDialog\n          tracksWithWarnings={tracksWithWarnings}\n          handleClose={() => setShown(false)}\n        />\n      ) : null}\n    </Alert>\n  ) : null\n})\n\nconst Header = observer(\n  ({\n    model,\n    selection,\n  }: {\n    model: DotplotViewModel\n    selection?: { width: number; height: number }\n  }) => {\n    const { classes } = useStyles()\n    const { hview, vview } = model\n    return (\n      <div className={classes.headerBar}>\n        <DotplotControls model={model} />\n        <Typography\n          className={classes.bp}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >\n          x: {hview.assemblyNames.join(',')} {getBpDisplayStr(hview.currBp)}\n          <br />\n          y: {vview.assemblyNames.join(',')} {getBpDisplayStr(vview.currBp)}\n        </Typography>\n        {selection ? (\n          <Typography\n            className={classes.bp}\n            variant=\"body2\"\n            color=\"textSecondary\"\n          >\n            {`width:${getBpDisplayStr(hview.bpPerPx * selection.width)}`} <br />\n            {`height:${getBpDisplayStr(vview.bpPerPx * selection.height)}`}\n          </Typography>\n        ) : null}\n        <div className={classes.spacer} />\n        <Warnings model={model} />\n      </div>\n    )\n  },\n)\nexport default Header\n","import React from 'react'\nimport { observer } from 'mobx-react'\n\n// locals\nimport { DotplotViewModel } from '../model'\n\nfunction Grid({\n  model,\n  children,\n  stroke = '#0003',\n}: {\n  model: DotplotViewModel\n  children: React.ReactNode\n  stroke?: string\n}) {\n  const { viewWidth, viewHeight, hview, vview } = model\n  const hblocks = hview.dynamicBlocks.contentBlocks\n  const vblocks = vview.dynamicBlocks.contentBlocks\n  const htop = hview.displayedRegionsTotalPx - hview.offsetPx\n  const vtop = vview.displayedRegionsTotalPx - vview.offsetPx\n  const hbottom = hblocks[0]?.offsetPx - hview.offsetPx\n  const vbottom = vblocks[0]?.offsetPx - vview.offsetPx\n\n  // Uses math.max/math.min avoid making very large SVG rect offscreen element,\n  // which can sometimes fail to draw\n  const rx = Math.max(hbottom, 0)\n  const ry = Math.max(viewHeight - vtop, 0)\n  const w = Math.min(htop - hbottom, viewWidth)\n  const h = Math.min(vtop - vbottom, viewHeight)\n  return (\n    <svg\n      style={{ background: 'rgba(0,0,0,0.12)' }}\n      width={viewWidth}\n      height={viewHeight}\n    >\n      <rect x={rx} y={ry} width={w} height={h} fill=\"#fff\" />\n      <g>\n        {hblocks.map(region => {\n          const x = region.offsetPx - hview.offsetPx\n          return (\n            <line\n              key={JSON.stringify(region)}\n              x1={x}\n              y1={0}\n              x2={x}\n              y2={viewHeight}\n              stroke={stroke}\n            />\n          )\n        })}\n        {vblocks.map(region => {\n          const y = viewHeight - (region.offsetPx - vview.offsetPx)\n          return (\n            <line\n              key={JSON.stringify(region)}\n              x1={0}\n              y1={y}\n              x2={viewWidth}\n              y2={y}\n              stroke={stroke}\n            />\n          )\n        })}\n        <line x1={htop} y1={0} x2={htop} y2={viewHeight} stroke={stroke} />\n        <line\n          x1={0}\n          y1={viewHeight - vtop}\n          x2={viewWidth}\n          y2={viewHeight - vtop}\n          stroke={stroke}\n        />\n      </g>\n      {children}\n    </svg>\n  )\n}\nexport default observer(Grid)\n","import React from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { getSnapshot } from 'mobx-state-tree'\nimport { getBlockLabelKeysToHide } from './util'\nimport { getTickDisplayStr } from '@jbrowse/core/util'\nimport { bpToPx } from '@jbrowse/core/util/Base1DUtils'\nimport { DotplotViewModel } from '../model'\n\nconst useStyles = makeStyles()(() => ({\n  vtext: {\n    gridColumn: '1/2',\n    gridRow: '1/2',\n    pointerEvents: 'none',\n    userSelect: 'none',\n  },\n  htext: {\n    gridColumn: '2/2',\n    gridRow: '2/2',\n    pointerEvents: 'none',\n    userSelect: 'none',\n  },\n  majorTickLabel: {\n    fontSize: '11px',\n  },\n  majorTick: {\n    stroke: '#555',\n  },\n  minorTick: {\n    stroke: '#999',\n  },\n}))\n\nexport const HorizontalAxis = observer(\n  ({ model }: { model: DotplotViewModel }) => {\n    const { classes } = useStyles()\n    const { viewWidth, borderX, borderY, hview, htextRotation, hticks } = model\n    const { offsetPx, width, dynamicBlocks, bpPerPx } = hview\n    const dblocks = dynamicBlocks.contentBlocks\n    const hide = getBlockLabelKeysToHide(dblocks, viewWidth, offsetPx)\n    const hviewSnap = {\n      ...getSnapshot(hview),\n      width,\n      staticBlocks: hview.staticBlocks,\n    }\n    return (\n      <svg width={viewWidth} height={borderY} className={classes.htext}>\n        {dblocks\n          .filter(region => !hide.includes(region.key))\n          .map(region => {\n            const x = region.offsetPx\n            const y = 0\n            const xoff = x - hview.offsetPx\n            return (\n              <text\n                transform={`rotate(${htextRotation},${xoff},${y})`}\n                key={JSON.stringify(region)}\n                x={xoff}\n                y={y + 1}\n                fill=\"#000000\"\n                dominantBaseline=\"hanging\"\n                textAnchor=\"end\"\n              >\n                {[\n                  region.refName,\n                  region.start !== 0 ? Math.floor(region.start) : '',\n                ]\n                  .filter(f => !!f)\n                  .join(':')}\n              </text>\n            )\n          })}\n        {hticks.map(tick => {\n          const x =\n            (bpToPx({\n              refName: tick.refName,\n              coord: tick.base,\n              self: hviewSnap,\n            })?.offsetPx || 0) - offsetPx\n          return (\n            <line\n              key={`line-${JSON.stringify(tick)}`}\n              x1={x}\n              x2={x}\n              y1={0}\n              y2={tick.type === 'major' ? 6 : 4}\n              strokeWidth={1}\n              stroke={tick.type === 'major' ? '#555' : '#999'}\n              className={\n                tick.type === 'major' ? classes.majorTick : classes.minorTick\n              }\n              data-bp={tick.base}\n            />\n          )\n        })}\n        {hticks\n          .filter(tick => tick.type === 'major')\n          .map(tick => {\n            const x =\n              (bpToPx({\n                refName: tick.refName,\n                coord: tick.base,\n                self: hviewSnap,\n              })?.offsetPx || 0) - offsetPx\n            const y = 0\n            return (\n              <text\n                x={x - 7}\n                y={y}\n                transform={`rotate(${htextRotation},${x},${y})`}\n                key={`text-${JSON.stringify(tick)}`}\n                style={{ fontSize: '11px' }}\n                className={classes.majorTickLabel}\n                dominantBaseline=\"middle\"\n                textAnchor=\"end\"\n              >\n                {getTickDisplayStr(tick.base + 1, bpPerPx)}\n              </text>\n            )\n          })}\n        {hview.assemblyNames.length === 1 ? (\n          <text\n            y={borderY - 12}\n            x={(viewWidth - borderX) / 2}\n            fill=\"black\"\n            textAnchor=\"middle\"\n          >\n            {hview.assemblyNames[0]}\n          </text>\n        ) : null}\n      </svg>\n    )\n  },\n)\nexport const VerticalAxis = observer(\n  ({ model }: { model: DotplotViewModel }) => {\n    const { classes } = useStyles()\n    const { borderX, viewHeight, borderY, vview, vtextRotation, vticks } = model\n    const { offsetPx, width, dynamicBlocks, bpPerPx } = vview\n    const dblocks = dynamicBlocks.contentBlocks\n    const hide = getBlockLabelKeysToHide(dblocks, viewHeight, offsetPx)\n    const vviewSnap = {\n      ...getSnapshot(vview),\n      width,\n      staticBlocks: vview.staticBlocks,\n    }\n    return (\n      <svg className={classes.vtext} width={borderX} height={viewHeight}>\n        {dblocks\n          .filter(region => !hide.includes(region.key))\n          .map(region => {\n            const y = region.offsetPx\n            const x = borderX\n            return (\n              <text\n                transform={`rotate(${vtextRotation},${x},${y})`}\n                key={JSON.stringify(region)}\n                x={x}\n                y={viewHeight - y + offsetPx}\n                fill=\"#000000\"\n                textAnchor=\"end\"\n              >\n                {[\n                  region.refName,\n                  region.start !== 0 ? Math.floor(region.start) : '',\n                ]\n                  .filter(f => !!f)\n                  .join(':')}\n              </text>\n            )\n          })}\n        {vticks.map(tick => {\n          const y =\n            (bpToPx({\n              refName: tick.refName,\n              coord: tick.base,\n              self: vviewSnap,\n            })?.offsetPx || 0) - offsetPx\n          return (\n            <line\n              key={`line-${JSON.stringify(tick)}`}\n              y1={viewHeight - y}\n              y2={viewHeight - y}\n              x1={borderX}\n              x2={borderX - (tick.type === 'major' ? 6 : 4)}\n              strokeWidth={1}\n              stroke={tick.type === 'major' ? '#555' : '#999'}\n              className={\n                tick.type === 'major' ? classes.majorTick : classes.minorTick\n              }\n              data-bp={tick.base}\n            />\n          )\n        })}\n        {vticks\n          .filter(tick => tick.type === 'major')\n          .map(tick => {\n            const y =\n              (bpToPx({\n                refName: tick.refName,\n                coord: tick.base,\n                self: vviewSnap,\n              })?.offsetPx || 0) - offsetPx\n            return (\n              <text\n                y={viewHeight - y - 3}\n                x={borderX - 7}\n                key={`text-${JSON.stringify(tick)}`}\n                textAnchor=\"end\"\n                dominantBaseline=\"hanging\"\n                style={{ fontSize: '11px' }}\n                className={classes.majorTickLabel}\n              >\n                {getTickDisplayStr(tick.base + 1, bpPerPx)}\n              </text>\n            )\n          })}\n        {vview.assemblyNames.length === 1 ? (\n          <text\n            y={(viewHeight - borderY) / 2}\n            x={12}\n            transform={`rotate(-90,12,${(viewHeight - borderY) / 2})`}\n            textAnchor=\"middle\"\n          >\n            {vview.assemblyNames[0]}\n          </text>\n        ) : null}\n      </svg>\n    )\n  },\n)\n","import React, { useState, useEffect, useRef } from 'react'\nimport { LinearProgress } from '@mui/material'\nimport { Menu, ResizeHandle } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\nimport { transaction } from 'mobx'\nimport { makeStyles } from 'tss-react/mui'\nimport normalizeWheel from 'normalize-wheel'\n\n// locals\nimport { DotplotViewModel } from '../model'\nimport { locstr } from './util'\nimport ImportForm from './ImportForm'\nimport Header from './Header'\nimport Grid from './Grid'\nimport { HorizontalAxis, VerticalAxis } from './Axes'\n\nconst blank = { left: 0, top: 0, width: 0, height: 0 }\n\nconst useStyles = makeStyles()(theme => ({\n  spacer: {\n    gridColumn: '1/2',\n    gridRow: '2/2',\n  },\n  root: {\n    position: 'relative',\n    marginBottom: theme.spacing(1),\n    overflow: 'hidden',\n  },\n\n  container: {\n    display: 'grid',\n    padding: 5,\n    position: 'relative',\n  },\n  overlay: {\n    pointerEvents: 'none',\n    overflow: 'hidden',\n    display: 'flex',\n    width: '100%',\n    gridRow: '1/2',\n    gridColumn: '2/2',\n    zIndex: 100, // needs to be below controls\n    '& path': {\n      cursor: 'crosshair',\n      fill: 'none',\n    },\n  },\n\n  content: {\n    position: 'relative',\n    gridColumn: '2/2',\n    gridRow: '1/2',\n  },\n\n  popover: {\n    background: '#fff',\n    maxWidth: 400,\n    wordBreak: 'break-all',\n    zIndex: 1000,\n    border: '1px solid black',\n    pointerEvents: 'none',\n    position: 'absolute',\n  },\n}))\n\ntype Coord = [number, number] | undefined\ntype Rect = { left: number; top: number }\n\n// produces offsetX/offsetY coordinates from a clientX and an element's\n// getBoundingClientRect\nfunction getOffset(coord: Coord, rect: Rect) {\n  return coord && ([coord[0] - rect.left, coord[1] - rect.top] as Coord)\n}\n\nconst RenderedComponent = observer(({ model }: { model: DotplotViewModel }) => {\n  const { classes } = useStyles()\n  return (\n    <div className={classes.overlay}>\n      {model.tracks.map(track => {\n        const [display] = track.displays\n        const { RenderingComponent } = display\n        return RenderingComponent ? (\n          <RenderingComponent\n            key={track.configuration.trackId}\n            model={display}\n          />\n        ) : null\n      })}\n    </div>\n  )\n})\n\nconst TooltipWhereMouseovered = observer(\n  ({\n    model,\n    mouserect,\n    xdistance,\n    ydistance,\n  }: {\n    model: DotplotViewModel\n    mouserect: Coord\n    xdistance: number\n    ydistance: number\n  }) => {\n    const { classes } = useStyles()\n    const { hview, vview, viewHeight } = model\n    const ref = useRef<HTMLDivElement>(null)\n    const rect = ref.current?.getBoundingClientRect() || blank\n    const offset = 6\n    return (\n      <>\n        {mouserect ? (\n          <div\n            ref={ref}\n            className={classes.popover}\n            style={{\n              left:\n                offset +\n                mouserect[0] -\n                (xdistance < 0 ? rect.width + offset * 2 : 0),\n              top:\n                offset +\n                mouserect[1] -\n                (ydistance < 0 ? rect.height + offset * 2 : 0),\n            }}\n          >\n            {`x - ${locstr(mouserect[0], hview)}`}\n            <br />\n            {`y - ${locstr(viewHeight - mouserect[1], vview)}`}\n            <br />\n          </div>\n        ) : null}\n      </>\n    )\n  },\n)\nconst TooltipWhereClicked = observer(\n  ({\n    model,\n    mousedown,\n    xdistance,\n    ydistance,\n  }: {\n    model: DotplotViewModel\n    mousedown: Coord\n    xdistance: number\n    ydistance: number\n  }) => {\n    const { classes } = useStyles()\n    const { hview, vview, viewHeight } = model\n    const ref = useRef<HTMLDivElement>(null)\n    const rect = ref.current?.getBoundingClientRect() || blank\n    return (\n      <>\n        {mousedown && Math.abs(xdistance) > 3 && Math.abs(ydistance) > 3 ? (\n          <div\n            ref={ref}\n            className={classes.popover}\n            style={{\n              left: mousedown[0] - (xdistance < 0 ? 0 : rect.width),\n              top: mousedown[1] - (ydistance < 0 ? 0 : rect.height),\n            }}\n          >\n            {`x - ${locstr(mousedown[0], hview)}`}\n            <br />\n            {`y - ${locstr(viewHeight - mousedown[1], vview)}`}\n            <br />\n          </div>\n        ) : null}\n      </>\n    )\n  },\n)\n\nconst DotplotViewInternal = observer(\n  ({ model }: { model: DotplotViewModel }) => {\n    const { cursorMode } = model\n    const { classes } = useStyles()\n    const [mousecurrClient, setMouseCurrClient] = useState<Coord>()\n    const [mousedownClient, setMouseDownClient] = useState<Coord>()\n    const [mouseOvered, setMouseOvered] = useState(false)\n    const [mouseupClient, setMouseUpClient] = useState<Coord>()\n    const ref = useRef<HTMLDivElement>(null)\n    const root = useRef<HTMLDivElement>(null)\n    const distanceX = useRef(0)\n    const distanceY = useRef(0)\n    const scheduled = useRef(false)\n    const svg = ref.current?.getBoundingClientRect() || blank\n    const mousedown = getOffset(mousedownClient, svg)\n    const mousecurr = getOffset(mousecurrClient, svg)\n    const mouseup = getOffset(mouseupClient, svg)\n    const mouserect = mouseup || mousecurr\n    const xdistance = mousedown && mouserect ? mouserect[0] - mousedown[0] : 0\n    const ydistance = mousedown && mouserect ? mouserect[1] - mousedown[1] : 0\n\n    // use non-React wheel handler to properly prevent body scrolling\n    useEffect(() => {\n      function onWheel(origEvent: WheelEvent) {\n        const event = normalizeWheel(origEvent)\n        origEvent.preventDefault()\n\n        distanceX.current += event.pixelX\n        distanceY.current -= event.pixelY\n        if (!scheduled.current) {\n          scheduled.current = true\n\n          window.requestAnimationFrame(() => {\n            transaction(() => {\n              model.hview.scroll(distanceX.current)\n              model.vview.scroll(distanceY.current)\n            })\n            scheduled.current = false\n            distanceX.current = 0\n            distanceY.current = 0\n          })\n        }\n      }\n      if (ref.current) {\n        const curr = ref.current\n        curr.addEventListener('wheel', onWheel)\n        return () => curr.removeEventListener('wheel', onWheel)\n      }\n      return () => {}\n    }, [model.hview, model.vview])\n\n    useEffect(() => {\n      function globalMouseMove(event: MouseEvent) {\n        setMouseCurrClient([event.clientX, event.clientY])\n\n        if (mousecurrClient && mousedownClient && cursorMode === 'move') {\n          model.hview.scroll(-event.clientX + mousecurrClient[0])\n          model.vview.scroll(event.clientY - mousecurrClient[1])\n        }\n      }\n\n      window.addEventListener('mousemove', globalMouseMove)\n      return () => window.removeEventListener('mousemove', globalMouseMove)\n    }, [mousecurrClient, mousedownClient, cursorMode, model.hview, model.vview])\n\n    // detect a mouseup after a mousedown was submitted, autoremoves mouseup\n    // once that single mouseup is set\n    useEffect(() => {\n      let cleanup = () => {}\n\n      function globalMouseUp(event: MouseEvent) {\n        if (\n          Math.abs(xdistance) > 3 &&\n          Math.abs(ydistance) > 3 &&\n          cursorMode === 'crosshair'\n        ) {\n          setMouseUpClient([event.clientX, event.clientY])\n        } else {\n          setMouseDownClient(undefined)\n        }\n      }\n\n      if (mousedown && !mouseup) {\n        window.addEventListener('mouseup', globalMouseUp, true)\n        cleanup = () =>\n          window.removeEventListener('mouseup', globalMouseUp, true)\n      }\n      return cleanup\n    }, [mousedown, mousecurr, mouseup, xdistance, ydistance, cursorMode])\n\n    return (\n      <div>\n        <Header\n          model={model}\n          selection={\n            cursorMode === 'move' || !(mousedown && mouserect)\n              ? undefined\n              : {\n                  width: Math.abs(xdistance),\n                  height: Math.abs(ydistance),\n                }\n          }\n        />\n        <div\n          ref={root}\n          className={classes.root}\n          onMouseLeave={() => setMouseOvered(false)}\n          onMouseEnter={() => setMouseOvered(true)}\n        >\n          <div\n            className={classes.container}\n            style={{\n              transform: `scaleX(${model.hview.scaleFactor}) scaleY(${model.vview.scaleFactor})`,\n            }}\n          >\n            <VerticalAxis model={model} />\n            <HorizontalAxis model={model} />\n            <div ref={ref} className={classes.content}>\n              {mouseOvered && cursorMode === 'crosshair' ? (\n                <TooltipWhereMouseovered\n                  model={model}\n                  mouserect={mouserect}\n                  xdistance={xdistance}\n                  ydistance={ydistance}\n                />\n              ) : null}\n              {cursorMode === 'crosshair' ? (\n                <TooltipWhereClicked\n                  model={model}\n                  mousedown={mousedown}\n                  xdistance={xdistance}\n                  ydistance={ydistance}\n                />\n              ) : null}\n              <div\n                style={{ cursor: cursorMode }}\n                onMouseDown={event => {\n                  if (event.button === 0) {\n                    setMouseDownClient([event.clientX, event.clientY])\n                    setMouseCurrClient([event.clientX, event.clientY])\n                  }\n                }}\n              >\n                <Grid model={model}>\n                  {cursorMode === 'crosshair' && mousedown && mouserect ? (\n                    <rect\n                      fill=\"rgba(255,0,0,0.3)\"\n                      x={Math.min(mouserect[0], mousedown[0])}\n                      y={Math.min(mouserect[1], mousedown[1])}\n                      width={Math.abs(xdistance)}\n                      height={Math.abs(ydistance)}\n                    />\n                  ) : null}\n                </Grid>\n              </div>\n              <div className={classes.spacer} />\n            </div>\n            <RenderedComponent model={model} />\n            <Menu\n              open={Boolean(mouseup)}\n              onMenuItemClick={(_, callback) => {\n                callback()\n                setMouseUpClient(undefined)\n                setMouseDownClient(undefined)\n              }}\n              onClose={() => {\n                setMouseUpClient(undefined)\n                setMouseDownClient(undefined)\n              }}\n              anchorReference=\"anchorPosition\"\n              anchorPosition={\n                mouseupClient\n                  ? {\n                      top: mouseupClient[1] + 30,\n                      left: mouseupClient[0] + 30,\n                    }\n                  : undefined\n              }\n              style={{ zIndex: 10000 }}\n              menuItems={[\n                {\n                  label: 'Zoom in',\n                  onClick: () => {\n                    if (mousedown && mouseup) {\n                      model.zoomIn(mousedown, mouseup)\n                    }\n                  },\n                },\n                {\n                  label: 'Open linear synteny view',\n                  onClick: () => {\n                    if (mousedown && mouseup) {\n                      model.onDotplotView(mousedown, mouseup)\n                    }\n                  },\n                },\n              ]}\n            />\n          </div>\n          <ResizeHandle\n            onDrag={n => model.setHeight(model.height + n)}\n            style={{\n              height: 4,\n              background: '#ccc',\n              boxSizing: 'border-box',\n              borderTop: '1px solid #fafafa',\n            }}\n          />\n        </div>\n      </div>\n    )\n  },\n)\nconst DotplotView = observer(({ model }: { model: DotplotViewModel }) => {\n  const { initialized, loading, error } = model\n\n  if ((!initialized && !loading) || error) {\n    return <ImportForm model={model} />\n  }\n\n  if (loading) {\n    return (\n      <div>\n        <p>Loading...</p>\n        <LinearProgress />\n      </div>\n    )\n  }\n\n  return <DotplotViewInternal model={model} />\n})\n\nexport default DotplotView\n"],"names":["useStyles","makeStyles","theme","importFormContainer","padding","spacing","margin","assemblySelector","width","getName","trackData","uri","localPath","name","undefined","observer","model","classes","session","getSession","assemblyNames","assemblyManager","useState","setTrackData","bed2Location","setBed2Location","bed1Location","setBed1Location","targetAssembly","setTargetAssembly","queryAssembly","setQueryAssembly","selected","error","setError","value","setValue","fileName","radioOption","path","endsWith","slice","length","stripGz","assemblyError","map","a","get","filter","f","join","getAdapter","type","pafLocation","outLocation","deltaLocation","chainLocation","mcscanAnchorsLocation","mcscanSimpleAnchorsLocation","Error","displayError","Container","className","ErrorMessage","Grid","container","justifyContent","alignItems","item","Paper","style","textAlign","Typography","AssemblySelector","extra","onChange","val","RadioGroup","event","target","FormControlLabel","control","Radio","label","href","display","FileSelector","description","location","setLocation","loc","Button","onClick","isSessionWithAddTracks","transaction","trackId","Date","now","addTrackConf","adapter","toggleTrack","setViews","bpPerPx","offsetPx","setAssemblyNames","e","console","disabled","variant","color","CursorMove","props","SvgIcon","fill","d","CursorMouse","WarningDialog","lazy","iconButton","bp","marginLeft","spacer","flexGrow","headerBar","DotplotControls","menuAnchorEl","setMenuAnchorEl","cursorAnchorEl","setCursorAnchorEl","IconButton","currentTarget","zoomOutButton","ZoomOut","Z","zoomInButton","title","ZoomIn","activateTrackSelector","MoreVert","Menu","anchorEl","open","onMenuItemClick","_event","callback","menuItems","squareView","squareViewProportional","setDrawCigar","drawCigar","checked","onClose","setCursorMode","icon","cursorMode","Warnings","tracksWithWarnings","tracks","t","displays","warnings","shown","setShown","Alert","severity","handleClose","selection","hview","vview","getBpDisplayStr","currBp","height","children","stroke","viewWidth","viewHeight","hblocks","dynamicBlocks","contentBlocks","vblocks","htop","displayedRegionsTotalPx","vtop","hbottom","vbottom","rx","Math","max","ry","w","min","h","background","x","y","region","x1","y1","x2","y2","JSON","stringify","vtext","gridColumn","gridRow","pointerEvents","userSelect","htext","majorTickLabel","fontSize","majorTick","minorTick","HorizontalAxis","borderX","borderY","htextRotation","hticks","dblocks","hide","getBlockLabelKeysToHide","hviewSnap","getSnapshot","staticBlocks","includes","key","xoff","transform","dominantBaseline","textAnchor","refName","start","floor","tick","bpToPx","coord","base","self","strokeWidth","getTickDisplayStr","VerticalAxis","vtextRotation","vticks","vviewSnap","blank","left","top","root","position","marginBottom","overflow","overlay","zIndex","cursor","content","popover","maxWidth","wordBreak","border","getOffset","rect","RenderedComponent","track","RenderingComponent","configuration","TooltipWhereMouseovered","mouserect","xdistance","ydistance","ref","useRef","current","getBoundingClientRect","offset","locstr","TooltipWhereClicked","mousedown","abs","DotplotViewInternal","mousecurrClient","setMouseCurrClient","mousedownClient","setMouseDownClient","mouseOvered","setMouseOvered","mouseupClient","setMouseUpClient","distanceX","distanceY","scheduled","svg","mousecurr","mouseup","useEffect","onWheel","origEvent","normalizeWheel","preventDefault","pixelX","pixelY","window","requestAnimationFrame","scroll","curr","addEventListener","removeEventListener","globalMouseMove","clientX","clientY","cleanup","globalMouseUp","onMouseLeave","onMouseEnter","scaleFactor","onMouseDown","button","Boolean","_","anchorReference","anchorPosition","zoomIn","onDotplotView","ResizeHandle","onDrag","n","setHeight","boxSizing","borderTop","initialized","loading","ImportForm","LinearProgress"],"sourceRoot":""}