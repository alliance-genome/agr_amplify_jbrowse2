{"version":3,"file":"static/js/933.79ccde1f.chunk.js","mappings":"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","sources":["../../../node_modules/@gmod/nclist/src/util.ts","../../../node_modules/@gmod/nclist/src/nclist.ts","../../../node_modules/@gmod/nclist/src/array_representation.ts","../../../node_modules/@gmod/nclist/src/lazy_array.ts","../../../node_modules/@gmod/nclist/src/feature_store.ts","../../../node_modules/@gmod/nclist/src/index.ts","../../../node_modules/@babel/runtime/helpers/esm/AwaitValue.js","../../../node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js","../../../node_modules/@babel/runtime/helpers/esm/asyncIterator.js","../../../node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js","../../../node_modules/@babel/runtime/helpers/esm/AsyncGenerator.js","../../../node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js"],"sourcesContent":["//@ts-nocheck\nexport async function readJSON(url, readFile, options = {}) {\n  const { defaultContent = {} } = options\n  let str\n  try {\n    str = await readFile(url, { encoding: 'utf8' })\n    return JSON.parse(str)\n  } catch (error) {\n    if (error.code === 'ENOENT' || error.status === 404) {\n      return defaultContent\n    }\n    throw error\n  }\n}\n\nexport function foo() {}\n","//@ts-nocheck\nimport nodeUrl from 'url'\nimport QuickLRU from 'quick-lru'\nimport AbortablePromiseCache from 'abortable-promise-cache'\nimport { readJSON } from './util'\n\nexport default class NCList {\n  constructor({ readFile, cacheSize = 100 }) {\n    this.topList = []\n    this.chunkCache = new AbortablePromiseCache({\n      cache: new QuickLRU({ maxSize: cacheSize }),\n      fill: this.readChunkItems.bind(this),\n    })\n    this.readFile = readFile\n    if (!this.readFile) {\n      throw new Error(`must provide a \"readFile\" function`)\n    }\n  }\n\n  importExisting(nclist, attrs, baseURL, lazyUrlTemplate, lazyClass) {\n    this.topList = nclist\n    this.attrs = attrs\n    this.start = attrs.makeFastGetter('Start')\n    this.end = attrs.makeFastGetter('End')\n    this.lazyClass = lazyClass\n    this.baseURL = baseURL\n    this.lazyUrlTemplate = lazyUrlTemplate\n  }\n\n  binarySearch(arr, item, getter) {\n    let low = -1\n    let high = arr.length\n    let mid\n\n    while (high - low > 1) {\n      mid = (low + high) >>> 1\n      if (getter(arr[mid]) >= item) {\n        high = mid\n      } else {\n        low = mid\n      }\n    }\n\n    // if we're iterating rightward, return the high index;\n    // if leftward, the low index\n    if (getter === this.end) {\n      return high\n    }\n    return low\n  }\n\n  readChunkItems(chunkNum) {\n    const url = nodeUrl.resolve(\n      this.baseURL,\n      this.lazyUrlTemplate.replace(/\\{Chunk\\}/gi, chunkNum),\n    )\n    return readJSON(url, this.readFile, { defaultContent: [] })\n  }\n\n  async *iterateSublist(arr, from, to, inc, searchGet, testGet, path) {\n    const getChunk = this.attrs.makeGetter('Chunk')\n    const getSublist = this.attrs.makeGetter('Sublist')\n\n    const pendingPromises = []\n    for (\n      let i = this.binarySearch(arr, from, searchGet);\n      i < arr.length && i >= 0 && inc * testGet(arr[i]) < inc * to;\n      i += inc\n    ) {\n      if (arr[i][0] === this.lazyClass) {\n        // this is a lazily-loaded chunk of the nclist\n        const chunkNum = getChunk(arr[i])\n        const chunkItemsP = this.chunkCache\n          .get(chunkNum, chunkNum)\n          .then(item => [item, chunkNum])\n        pendingPromises.push(chunkItemsP)\n      } else {\n        // this is just a regular feature\n        yield [arr[i], path.concat(i)]\n      }\n\n      // if this node has a contained sublist, process that too\n      const sublist = getSublist(arr[i])\n      if (sublist) {\n        yield* this.iterateSublist(\n          sublist,\n          from,\n          to,\n          inc,\n          searchGet,\n          testGet,\n          path.concat(i),\n        )\n      }\n    }\n\n    for (let i = 0; i < pendingPromises.length; i += 1) {\n      const [item, chunkNum] = await pendingPromises[i]\n      if (item) {\n        yield* this.iterateSublist(item, from, to, inc, searchGet, testGet, [\n          ...path,\n          chunkNum,\n        ])\n      }\n    }\n  }\n\n  async *iterate(from, to) {\n    // calls the given function once for each of the\n    // intervals that overlap the given interval\n    // if from <= to, iterates left-to-right, otherwise iterates right-to-left\n\n    // inc: iterate leftward or rightward\n    const inc = from > to ? -1 : 1\n    // searchGet: search on start or end\n    const searchGet = from > to ? this.start : this.end\n    // testGet: test on start or end\n    const testGet = from > to ? this.end : this.start\n\n    if (this.topList.length > 0) {\n      yield* this.iterateSublist(\n        this.topList,\n        from,\n        to,\n        inc,\n        searchGet,\n        testGet,\n        [0],\n      )\n    }\n  }\n\n  async histogram(from, to, numBins) {\n    // calls callback with a histogram of the feature density\n    // in the given interval\n\n    const result = new Array(numBins)\n    result.fill(0)\n    const binWidth = (to - from) / numBins\n    for await (const feat of this.iterate(from, to)) {\n      const firstBin = Math.max(0, ((this.start(feat) - from) / binWidth) | 0)\n      const lastBin = Math.min(\n        numBins,\n        ((this.end(feat) - from) / binWidth) | 0,\n      )\n      for (let bin = firstBin; bin <= lastBin; bin += 1) {\n        result[bin] += 1\n      }\n    }\n    return result\n  }\n}\n","//@ts-nocheck\n/**\n * @class ArrayRepr\n *\n * Class for operating on indexed array representations of objects.\n *\n * For example, if we have a lot of objects with similar attrbutes, e.g.:\n *\n * <pre class=\"code\">\n *     [\n *         {start: 1, end: 2, strand: -1},\n *         {start: 5, end: 6, strand: 1},\n *         ...\n *     ]\n * </pre>\n *\n * @description\n * we can represent them more compactly (e.g., in JSON) something like this:\n *\n * <pre class=\"code\">\n *     class = [\"start\", \"end\", \"strand\"]\n *     [\n *         [1, 2, -1],\n *         [5, 6, 1],\n *         ...\n *     ]\n * </pre>\n *\n * If we want to represent a few different kinds of objects in our big list,\n * we can have multiple \"class\" arrays, and tag each object to identify\n * which \"class\" array describes it.\n *\n * For example, if we have a lot of instances of a few types of objects,\n * like this:\n *\n * <pre class=\"code\">\n *     [\n *         {start: 1, end: 2, strand: 1, id: 1},\n *         {start: 5, end: 6, strand: 1, id: 2},\n *         ...\n *         {start: 10, end: 20, chunk: 1},\n *         {start: 30, end: 40, chunk: 2},\n *         ...\n *     ]\n * </pre>\n *\n * We could use the first array position to indicate the \"class\" for the\n * object, like this:\n *\n * <pre class=\"code\">\n *     classes = [[\"start\", \"end\", \"strand\", \"id\"], [\"start\", \"end\", \"chunk\"]]\n *     [\n *         [0, 1, 2, 1, 1],\n *         [0, 5, 6, 1, 2],\n *         ...\n *         [1, 10, 20, 1],\n *         [1, 30, 40, 1]\n *     ]\n * </pre>\n *\n * Also, if we occasionally want to add an ad-hoc attribute, we could just\n * stick an optional dictionary onto the end:\n *\n * <pre class=\"code\">\n *     classes = [[\"start\", \"end\", \"strand\", \"id\"], [\"start\", \"end\", \"chunk\"]]\n *     [\n *         [0, 1, 2, 1, 1],\n *         [0, 5, 6, 1, 2, {foo: 1}]\n *     ]\n * </pre>\n *\n * Given that individual objects are being represented by arrays, generic\n * code needs some way to differentiate arrays that are meant to be objects\n * from arrays that are actually meant to be arrays.\n * So for each class, we include a dict with <attribute name>: true mappings\n * for each attribute that is meant to be an array.\n *\n * Also, in cases where some attribute values are the same for all objects\n * in a particular set, it may be convenient to define a \"prototype\"\n * with default values for all objects in the set\n *\n * In the end, we get something like this:\n *\n * <pre class=\"code\">\n *     classes=[\n *         {'attributes': ['Start', 'End', 'Subfeatures'],\n *          'proto': {'Chrom': 'chr1'},\n *          'isArrayAttr': {Subfeatures: true}}\n *         ]\n * </pre>\n *\n * That's what this class facilitates.\n */\nclass ArrayRepr {\n  constructor(classes) {\n    this.classes = classes\n    this.fields = []\n    for (let cl = 0; cl < classes.length; cl += 1) {\n      this.fields[cl] = {}\n      for (let f = 0; f < classes[cl].attributes.length; f += 1) {\n        this.fields[cl][classes[cl].attributes[f]] = f + 1\n      }\n      if (classes[cl].proto === undefined) {\n        classes[cl].proto = {}\n      }\n      if (classes[cl].isArrayAttr === undefined) {\n        classes[cl].isArrayAttr = {}\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  attrIndices(attr) {\n    return this.classes.map(\n      x =>\n        x.attributes.indexOf(attr) + 1 ||\n        x.attributes.indexOf(attr.toLowerCase()) + 1 ||\n        undefined,\n    )\n  }\n\n  get(obj, attr) {\n    if (attr in this.fields[obj[0]]) {\n      return obj[this.fields[obj[0]][attr]]\n    }\n\n    // try lowercase\n    const lcattr = attr.toLowerCase()\n    if (lcattr in this.fields[obj[0]]) {\n      return obj[this.fields[obj[0]][lcattr]]\n    }\n\n    const adhocIndex = this.classes[obj[0]].attributes.length + 1\n    if (adhocIndex >= obj.length || !(attr in obj[adhocIndex])) {\n      if (attr in this.classes[obj[0]].proto) {\n        return this.classes[obj[0]].proto[attr]\n      }\n      return undefined\n    }\n    return obj[adhocIndex][attr]\n  }\n\n  makeSetter(attr) {\n    return (obj, val) => {\n      this.set(obj, attr, val)\n    }\n  }\n\n  makeGetter(attr) {\n    return obj => {\n      return this.get(obj, attr)\n    }\n  }\n\n  makeFastGetter(attr) {\n    // can be used only if attr is guaranteed to be in\n    // the \"classes\" array for this object\n    const indices = this.attrIndices(attr)\n    return function get(obj) {\n      if (indices[obj[0]] !== undefined) {\n        return obj[indices[obj[0]]]\n      }\n      return undefined\n    }\n  }\n\n  // construct(self, obj, klass) {\n  //   const result = new Array(self.classes[klass].length)\n  //   Object.keys(obj).forEach(attr => {\n  //     this.set(result, attr, obj[attr])\n  //   })\n  //   return result\n  // }\n\n  /**\n   * Returns fast pre-compiled getter and setter functions for use with\n   * Arrays that use this representation.\n   * When the returned <code>get</code> and <code>set</code> functions are\n   * added as methods to an Array that contains data in this\n   * representation, they provide fast access by name to the data.\n   *\n   * @returns {Object} <code>{ get: function() {...}, set: function(val) {...} }</code>\n   *\n   * @example\n   * var accessors = attrs.accessors();\n   * var feature = get_feature_from_someplace();\n   * feature.get = accessors.get;\n   * // print out the feature start and end\n   * console.log( feature.get('start') + ',' + feature.get('end') );\n   */\n  accessors() {\n    if (!this._accessors) {\n      this._accessors = this._makeAccessors()\n    }\n    return this._accessors\n  }\n\n  /**\n   * @private\n   */\n  _makeAccessors() {\n    const indices = {}\n\n    const accessors = {\n      get(field) {\n        const f = this.get.field_accessors[field.toLowerCase()]\n        if (f) {\n          return f.call(this)\n        }\n        return undefined\n      },\n      set(field, val) {\n        const f = this.set.field_accessors[field]\n        if (f) {\n          return f.call(this, val)\n        }\n        return undefined\n      },\n      tags() {\n        return tags[this[0]] || []\n      },\n    }\n    accessors.get.field_accessors = {}\n    accessors.set.field_accessors = {}\n\n    // make a data structure as: { attr_name: [offset,offset,offset], }\n    // that will be convenient for finding the location of the attr\n    // for a given class like: indexForAttr{attrname}[classnum]\n    this.classes.forEach((cdef, classnum) => {\n      ;(cdef.attributes || []).forEach((attrname, offset) => {\n        indices[attrname] = indices[attrname] || []\n        indices[attrname][classnum] = offset + 1\n\n        attrname = attrname.toLowerCase()\n\n        indices[attrname] = indices[attrname] || []\n        indices[attrname][classnum] = offset + 1\n      })\n    })\n\n    // lowercase all the class attributes\n    const tags = this.classes.map(c => c.attributes)\n\n    // use that to make precalculated get and set accessors for each field\n    Object.keys(indices).forEach(attrname => {\n      const attrIndices = indices[attrname]\n      // get\n      accessors.get.field_accessors[attrname] = !attrIndices\n        ? function get() {\n            return undefined\n          }\n        : function get() {\n            return this[attrIndices[this[0]]]\n          }\n\n      // // set\n      // accessors.set.field_accessors[attrname] = !attrIndices\n      //   ? () => undefined\n      //   : v => {\n      //       this[attrIndices[this[0]]] = v\n      //       return v\n      //     }\n    })\n\n    return accessors\n  }\n}\nexport default ArrayRepr\n\n/*\n\nCopyright (c) 2007-2010 The Evolutionary Software Foundation\n\nCreated by Mitchell Skinner <mitch_skinner@berkeley.edu>\n\nThis package and its accompanying libraries are free software; you can\nredistribute it and/or modify it under the terms of the LGPL (either\nversion 2.1, or at your option, any later version) or the Artistic\nLicense 2.0.  Refer to LICENSE for the full license text.\n\n*/\n","//@ts-nocheck\nimport nodeUrl from 'url'\nimport QuickLRU from 'quick-lru'\nimport AbortablePromiseCache from 'abortable-promise-cache'\nimport { readJSON } from './util'\n\n/**\n * For a JSON array that gets too large to load in one go, this class\n * helps break it up into chunks and provides an\n * async API for using the information in the array.\n */\nexport default class LazyArray {\n  constructor(\n    { urlTemplate, chunkSize, length, cacheSize = 100, readFile },\n    baseUrl,\n  ) {\n    this.urlTemplate = urlTemplate\n    this.chunkSize = chunkSize\n    this.length = length\n    this.baseUrl = baseUrl === undefined ? '' : baseUrl\n    this.readFile = readFile\n    if (!readFile) {\n      throw new Error('must provide readFile callback')\n    }\n    this.chunkCache = new AbortablePromiseCache({\n      cache: new QuickLRU({ maxSize: cacheSize }),\n      fill: this.getChunk.bind(this),\n    })\n  }\n\n  /**\n   * call the callback on one element of the array\n   * @param i index\n   * @param callback callback, gets called with (i, value, param)\n   * @param param (optional) callback will get this as its last parameter\n   */\n  index(i, callback, param) {\n    this.range(i, i, callback, undefined, param)\n  }\n\n  /**\n   * async generator for the elements in the range [start,end]\n   *\n   * @param start index of first element to call the callback on\n   * @param end index of last element to call the callback on\n   */\n  async *range(start, end) {\n    start = Math.max(0, start)\n    end = Math.min(end, this.length - 1)\n\n    const firstChunk = Math.floor(start / this.chunkSize)\n    const lastChunk = Math.floor(end / this.chunkSize)\n\n    const chunkreadFiles = []\n    for (let chunk = firstChunk; chunk <= lastChunk; chunk += 1) {\n      chunkreadFiles.push(this.chunkCache.get(chunk, chunk))\n    }\n    for (let i = 0; i < chunkreadFiles.length; i += 1) {\n      const [chunkNumber, chunkData] = await chunkreadFiles[i]\n      yield* this.filterChunkData(start, end, chunkNumber, chunkData)\n    }\n  }\n\n  async getChunk(chunkNumber) {\n    let url = this.urlTemplate.replace(/\\{Chunk\\}/gi, chunkNumber)\n    if (this.baseUrl) {\n      url = nodeUrl.resolve(this.baseUrl, url)\n    }\n    const data = await readJSON(url, this.readFile)\n    return [chunkNumber, data]\n  }\n\n  *filterChunkData(queryStart, queryEnd, chunkNumber, chunkData) {\n    // index (in the overall lazy array) of the first position in this chunk\n    const firstIndex = chunkNumber * this.chunkSize\n    const chunkStart = Math.max(0, queryStart - firstIndex)\n    const chunkEnd = Math.min(queryEnd - firstIndex, this.chunkSize - 1)\n    for (let i = chunkStart; i <= chunkEnd; i += 1) {\n      yield [i + firstIndex, chunkData[i]]\n    }\n  }\n}\n","//@ts-nocheck\nimport nodeUrl from 'url'\nimport QuickLRU from 'quick-lru'\nimport AbortablePromiseCache from 'abortable-promise-cache'\n\nimport GenericNCList from './nclist'\nimport ArrayRepr from './array_representation'\nimport LazyArray from './lazy_array'\nimport { readJSON } from './util'\n\nfunction idfunc() {\n  return this._uniqueID\n}\nfunction parentfunc() {\n  return this._parent\n}\nfunction childrenfunc() {\n  return this.get('subfeatures')\n}\n\n/**\n * Sequence feature store using nested containment\n * lists held in JSON files that are lazily read.\n *\n * @param {object} args constructor args\n * @param {string} args.baseUrl base URL for resolving relative URLs\n * @param {string} args.urlTemplate Template string for\n *  the root file of each reference sequence. The reference sequence\n *  name will be interpolated into this string where `{refseq}` appears.\n * @param {function} args.readFile function to use for reading remote from URLs.\n */\nexport default class NCListStore {\n  constructor({ baseUrl, urlTemplate, readFile, cacheSize = 10 }) {\n    this.baseUrl = baseUrl\n    this.urlTemplates = { root: urlTemplate }\n\n    this.readFile = readFile\n    if (!this.readFile) {\n      throw new Error(`must provide a \"readFile\" function argument`)\n    }\n\n    this.dataRootCache = new AbortablePromiseCache({\n      cache: new QuickLRU({ maxSize: cacheSize }),\n      fill: this.fetchDataRoot.bind(this),\n    })\n  }\n\n  makeNCList() {\n    return new GenericNCList({ readFile: this.readFile })\n  }\n\n  loadNCList(refData, trackInfo, listUrl) {\n    refData.nclist.importExisting(\n      trackInfo.intervals.nclist,\n      refData.attrs,\n      listUrl,\n      trackInfo.intervals.urlTemplate,\n      trackInfo.intervals.lazyClass,\n    )\n  }\n\n  getDataRoot(refName) {\n    return this.dataRootCache.get(refName, refName)\n  }\n\n  fetchDataRoot(refName) {\n    const url = nodeUrl.resolve(\n      this.baseUrl,\n      this.urlTemplates.root.replace(/{\\s*refseq\\s*}/g, refName),\n    )\n\n    // fetch the trackdata\n    return readJSON(url, this.readFile).then(trackInfo =>\n      // trackInfo = JSON.parse( trackInfo );\n      this.parseTrackInfo(trackInfo, url),\n    )\n  }\n\n  parseTrackInfo(trackInfo, url) {\n    const refData = {\n      nclist: this.makeNCList(),\n      stats: {\n        featureCount: trackInfo.featureCount || 0,\n      },\n    }\n\n    if (trackInfo.intervals) {\n      refData.attrs = new ArrayRepr(trackInfo.intervals.classes)\n      this.loadNCList(refData, trackInfo, url)\n    }\n\n    const { histograms } = trackInfo\n    if (histograms && histograms.meta) {\n      for (let i = 0; i < histograms.meta.length; i += 1) {\n        histograms.meta[i].lazyArray = new LazyArray(\n          { ...histograms.meta[i].arrayParams, readFile: this.readFile },\n          url,\n        )\n      }\n      refData._histograms = histograms\n    }\n\n    // parse any strings in the histogram data that look like numbers\n    if (refData._histograms) {\n      Object.keys(refData._histograms).forEach(key => {\n        const entries = refData._histograms[key]\n        entries.forEach(entry => {\n          Object.keys(entry).forEach(key2 => {\n            if (\n              typeof entry[key2] === 'string' &&\n              String(Number(entry[key2])) === entry[key2]\n            ) {\n              entry[key2] = Number(entry[key2])\n            }\n          })\n        })\n      })\n    }\n\n    return refData\n  }\n\n  async getRegionStats(query) {\n    const data = await this.getDataRoot(query.ref)\n    return data.stats\n  }\n\n  /**\n   * fetch binned counts of feature coverage in the given region.\n   *\n   * @param {object} query\n   * @param {string} query.refName reference sequence name\n   * @param {number} query.start region start\n   * @param {number} query.end region end\n   * @param {number} query.numBins number of bins desired in the feature counts\n   * @param {number} query.basesPerBin number of bp desired in each feature counting bin\n   * @returns {object} as:\n   *    `{ bins: hist, stats: statEntry }`\n   */\n  async getRegionFeatureDensities({\n    refName,\n    start,\n    end,\n    numBins,\n    basesPerBin,\n  }) {\n    const data = await this.getDataRoot(refName)\n    if (numBins) {\n      basesPerBin = (end - start) / numBins\n    } else if (basesPerBin) {\n      numBins = Math.ceil((end - start) / basesPerBin)\n    } else {\n      throw new TypeError(\n        'numBins or basesPerBin arg required for getRegionFeatureDensities',\n      )\n    }\n\n    // pick the relevant entry in our pre-calculated stats\n    const stats = data._histograms.stats || []\n    const statEntry = stats.find(entry => entry.basesPerBin >= basesPerBin)\n\n    // The histogramMeta array describes multiple levels of histogram detail,\n    // going from the finest (smallest number of bases per bin) to the\n    // coarsest (largest number of bases per bin).\n    // We want to use coarsest histogramMeta that's at least as fine as the\n    // one we're currently rendering.\n    // TODO: take into account that the histogramMeta chosen here might not\n    // fit neatly into the current histogram (e.g., if the current histogram\n    // is at 50,000 bases/bin, and we have server histograms at 20,000\n    // and 2,000 bases/bin, then we should choose the 2,000 histogramMeta\n    // rather than the 20,000)\n    let histogramMeta = data._histograms.meta[0]\n    for (let i = 0; i < data._histograms.meta.length; i += 1) {\n      if (basesPerBin >= data._histograms.meta[i].basesPerBin) {\n        histogramMeta = data._histograms.meta[i]\n      }\n    }\n\n    // number of bins in the server-supplied histogram for each current bin\n    let binRatio = basesPerBin / histogramMeta.basesPerBin\n\n    // if the server-supplied histogram fits neatly into our requested\n    if (binRatio > 0.9 && Math.abs(binRatio - Math.round(binRatio)) < 0.0001) {\n      // console.log('server-supplied',query);\n      // we can use the server-supplied counts\n      const firstServerBin = Math.floor(start / histogramMeta.basesPerBin)\n      binRatio = Math.round(binRatio)\n      const histogram = []\n      for (let bin = 0; bin < numBins; bin += 1) {\n        histogram[bin] = 0\n      }\n\n      for await (const [i, val] of histogramMeta.lazyArray.range(\n        firstServerBin,\n        firstServerBin + binRatio * numBins - 1,\n      )) {\n        // this will count features that span the boundaries of\n        // the original histogram multiple times, so it's not\n        // perfectly quantitative.  Hopefully it's still useful, though.\n        histogram[Math.floor((i - firstServerBin) / binRatio)] += val\n      }\n      return { bins: histogram, stats: statEntry }\n    }\n    // console.log('make own',query);\n    // make our own counts\n    const hist = await data.nclist.histogram(start, end, numBins)\n    return { bins: hist, stats: statEntry }\n  }\n\n  /**\n   * Fetch features in a given region. This method is an asynchronous generator\n   * yielding feature objects.\n   *\n   * @param {object} args\n   * @param {string} args.refName reference sequence name\n   * @param {number} args.start start of region. 0-based half-open.\n   * @param {number} args.end end of region. 0-based half-open.\n   * @yields {object}\n   */\n  async *getFeatures({ refName, start, end }) {\n    const data = await this.getDataRoot(refName)\n    const accessors = data.attrs && data.attrs.accessors()\n    for await (const [feature, path] of data.nclist.iterate(start, end)) {\n      // the unique ID is a stringification of the path in the\n      // NCList where the feature lives; it's unique across the\n      // top-level NCList (the top-level NCList covers a\n      // track/chromosome combination)\n\n      // only need to decorate a feature once\n      if (!feature.decorated) {\n        const uniqueID = path.join(',')\n        this.decorateFeature(accessors, feature, `${refName},${uniqueID}`)\n      }\n      yield feature\n    }\n  }\n\n  // helper method to recursively add .get and .tags methods to a feature and its\n  // subfeatures\n  decorateFeature(accessors, feature, id, parent) {\n    feature.get = accessors.get\n    feature.tags = accessors.tags\n    feature._uniqueID = id\n    feature.id = idfunc\n    feature._parent = parent\n    feature.parent = parentfunc\n    feature.children = childrenfunc\n    ;(feature.get('subfeatures') || []).forEach((f, i) => {\n      this.decorateFeature(accessors, f, `${id}-${i}`, feature)\n    })\n    feature.decorated = true\n  }\n}\n","//@ts-nocheck\nimport NCListStore from './feature_store'\n\nexport default NCListStore\n","export default function _AwaitValue(value) {\n  this.wrapped = value;\n}","export default function _asyncGeneratorDelegate(inner, awaitWrap) {\n  var iter = {},\n      waiting = false;\n\n  function pump(key, value) {\n    waiting = true;\n    value = new Promise(function (resolve) {\n      resolve(inner[key](value));\n    });\n    return {\n      done: false,\n      value: awaitWrap(value)\n    };\n  }\n\n  ;\n\n  iter[typeof Symbol !== \"undefined\" && Symbol.iterator || \"@@iterator\"] = function () {\n    return this;\n  };\n\n  iter.next = function (value) {\n    if (waiting) {\n      waiting = false;\n      return value;\n    }\n\n    return pump(\"next\", value);\n  };\n\n  if (typeof inner[\"throw\"] === \"function\") {\n    iter[\"throw\"] = function (value) {\n      if (waiting) {\n        waiting = false;\n        throw value;\n      }\n\n      return pump(\"throw\", value);\n    };\n  }\n\n  if (typeof inner[\"return\"] === \"function\") {\n    iter[\"return\"] = function (value) {\n      if (waiting) {\n        waiting = false;\n        return value;\n      }\n\n      return pump(\"return\", value);\n    };\n  }\n\n  return iter;\n}","export default function _asyncIterator(iterable) {\n  var method,\n      async,\n      sync,\n      retry = 2;\n\n  for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) {\n    if (async && null != (method = iterable[async])) return method.call(iterable);\n    if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable));\n    async = \"@@asyncIterator\", sync = \"@@iterator\";\n  }\n\n  throw new TypeError(\"Object is not async iterable\");\n}\n\nfunction AsyncFromSyncIterator(s) {\n  function AsyncFromSyncIteratorContinuation(r) {\n    if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\"));\n    var done = r.done;\n    return Promise.resolve(r.value).then(function (value) {\n      return {\n        value: value,\n        done: done\n      };\n    });\n  }\n\n  return AsyncFromSyncIterator = function AsyncFromSyncIterator(s) {\n    this.s = s, this.n = s.next;\n  }, AsyncFromSyncIterator.prototype = {\n    s: null,\n    n: null,\n    next: function next() {\n      return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));\n    },\n    \"return\": function _return(value) {\n      var ret = this.s[\"return\"];\n      return void 0 === ret ? Promise.resolve({\n        value: value,\n        done: !0\n      }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments));\n    },\n    \"throw\": function _throw(value) {\n      var thr = this.s[\"return\"];\n      return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments));\n    }\n  }, new AsyncFromSyncIterator(s);\n}","import AwaitValue from \"./AwaitValue.js\";\nexport default function _awaitAsyncGenerator(value) {\n  return new AwaitValue(value);\n}","import AwaitValue from \"./AwaitValue.js\";\nexport default function AsyncGenerator(gen) {\n  var front, back;\n\n  function send(key, arg) {\n    return new Promise(function (resolve, reject) {\n      var request = {\n        key: key,\n        arg: arg,\n        resolve: resolve,\n        reject: reject,\n        next: null\n      };\n\n      if (back) {\n        back = back.next = request;\n      } else {\n        front = back = request;\n        resume(key, arg);\n      }\n    });\n  }\n\n  function resume(key, arg) {\n    try {\n      var result = gen[key](arg);\n      var value = result.value;\n      var wrappedAwait = value instanceof AwaitValue;\n      Promise.resolve(wrappedAwait ? value.wrapped : value).then(function (arg) {\n        if (wrappedAwait) {\n          resume(key === \"return\" ? \"return\" : \"next\", arg);\n          return;\n        }\n\n        settle(result.done ? \"return\" : \"normal\", arg);\n      }, function (err) {\n        resume(\"throw\", err);\n      });\n    } catch (err) {\n      settle(\"throw\", err);\n    }\n  }\n\n  function settle(type, value) {\n    switch (type) {\n      case \"return\":\n        front.resolve({\n          value: value,\n          done: true\n        });\n        break;\n\n      case \"throw\":\n        front.reject(value);\n        break;\n\n      default:\n        front.resolve({\n          value: value,\n          done: false\n        });\n        break;\n    }\n\n    front = front.next;\n\n    if (front) {\n      resume(front.key, front.arg);\n    } else {\n      back = null;\n    }\n  }\n\n  this._invoke = send;\n\n  if (typeof gen[\"return\"] !== \"function\") {\n    this[\"return\"] = undefined;\n  }\n}\n\nAsyncGenerator.prototype[typeof Symbol === \"function\" && Symbol.asyncIterator || \"@@asyncIterator\"] = function () {\n  return this;\n};\n\nAsyncGenerator.prototype.next = function (arg) {\n  return this._invoke(\"next\", arg);\n};\n\nAsyncGenerator.prototype[\"throw\"] = function (arg) {\n  return this._invoke(\"throw\", arg);\n};\n\nAsyncGenerator.prototype[\"return\"] = function (arg) {\n  return this._invoke(\"return\", arg);\n};","import AsyncGenerator from \"./AsyncGenerator.js\";\nexport default function _wrapAsyncGenerator(fn) {\n  return function () {\n    return new AsyncGenerator(fn.apply(this, arguments));\n  };\n}"],"names":["readJSON","url","readFile","options","defaultContent","encoding","str","JSON","parse","code","status","NCList","cacheSize","this","topList","chunkCache","AbortablePromiseCache","cache","QuickLRU","maxSize","fill","readChunkItems","bind","Error","nclist","attrs","baseURL","lazyUrlTemplate","lazyClass","start","makeFastGetter","end","arr","item","getter","mid","low","high","length","chunkNum","nodeUrl","replace","from","to","inc","searchGet","testGet","path","getChunk","makeGetter","getSublist","pendingPromises","i","binarySearch","chunkItemsP","get","then","push","concat","sublist","iterateSublist","numBins","result","Array","binWidth","iterate","feat","firstBin","Math","max","lastBin","min","bin","ArrayRepr","classes","fields","cl","f","attributes","undefined","proto","isArrayAttr","attr","map","x","indexOf","toLowerCase","obj","lcattr","adhocIndex","val","set","indices","attrIndices","_accessors","_makeAccessors","accessors","field","field_accessors","call","tags","forEach","cdef","classnum","attrname","offset","c","Object","keys","LazyArray","baseUrl","urlTemplate","chunkSize","callback","param","range","firstChunk","floor","lastChunk","chunkreadFiles","chunk","chunkNumber","chunkData","filterChunkData","data","queryStart","queryEnd","firstIndex","chunkStart","chunkEnd","idfunc","_uniqueID","parentfunc","_parent","childrenfunc","NCListStore","urlTemplates","root","dataRootCache","fetchDataRoot","GenericNCList","refData","trackInfo","listUrl","importExisting","intervals","refName","parseTrackInfo","makeNCList","stats","featureCount","loadNCList","histograms","meta","lazyArray","arrayParams","_histograms","key","entry","key2","String","Number","query","getDataRoot","ref","basesPerBin","ceil","TypeError","statEntry","find","histogramMeta","binRatio","abs","round","firstServerBin","histogram","bins","hist","feature","decorated","uniqueID","join","decorateFeature","id","parent","children","_AwaitValue","value","wrapped","_asyncGeneratorDelegate","inner","awaitWrap","iter","waiting","pump","Promise","resolve","done","Symbol","iterator","next","_asyncIterator","iterable","method","async","sync","retry","asyncIterator","AsyncFromSyncIterator","s","AsyncFromSyncIteratorContinuation","r","reject","n","prototype","apply","arguments","ret","thr","_awaitAsyncGenerator","AsyncGenerator","gen","front","back","resume","arg","wrappedAwait","AwaitValue","settle","err","type","_invoke","request","_wrapAsyncGenerator","fn"],"sourceRoot":""}