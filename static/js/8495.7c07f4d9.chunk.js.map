{"version":3,"file":"static/js/8495.7c07f4d9.chunk.js","mappings":"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","sources":["../../../packages/core/util/QuickLRU.js","../../../plugins/sequence/src/IndexedFastaAdapter/IndexedFastaAdapter.ts"],"sourcesContent":["// vendored from quick-lru@6.1.1, didn't like being compiled as a 'pure-esm' nodejs dependency\n// the license is reproduced below https://github.com/sindresorhus/quick-lru/blob/main/license\n// MIT License\n\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nexport default class QuickLRU extends Map {\n  constructor(options = {}) {\n    super()\n\n    if (!(options.maxSize && options.maxSize > 0)) {\n      throw new TypeError('`maxSize` must be a number greater than 0')\n    }\n\n    if (typeof options.maxAge === 'number' && options.maxAge === 0) {\n      throw new TypeError('`maxAge` must be a number greater than 0')\n    }\n\n    // TODO: Use private class fields when ESLint supports them.\n    this.maxSize = options.maxSize\n    this.maxAge = options.maxAge || Number.POSITIVE_INFINITY\n    this.onEviction = options.onEviction\n    this.cache = new Map()\n    this.oldCache = new Map()\n    this._size = 0\n  }\n\n  // TODO: Use private class methods when targeting Node.js 16.\n  _emitEvictions(cache) {\n    if (typeof this.onEviction !== 'function') {\n      return\n    }\n\n    for (const [key, item] of cache) {\n      this.onEviction(key, item.value)\n    }\n  }\n\n  _deleteIfExpired(key, item) {\n    if (typeof item.expiry === 'number' && item.expiry <= Date.now()) {\n      if (typeof this.onEviction === 'function') {\n        this.onEviction(key, item.value)\n      }\n\n      return this.delete(key)\n    }\n\n    return false\n  }\n\n  _getOrDeleteIfExpired(key, item) {\n    const deleted = this._deleteIfExpired(key, item)\n    if (deleted === false) {\n      return item.value\n    }\n  }\n\n  _getItemValue(key, item) {\n    return item.expiry ? this._getOrDeleteIfExpired(key, item) : item.value\n  }\n\n  _peek(key, cache) {\n    const item = cache.get(key)\n\n    return this._getItemValue(key, item)\n  }\n\n  _set(key, value) {\n    this.cache.set(key, value)\n    this._size++\n\n    if (this._size >= this.maxSize) {\n      this._size = 0\n      this._emitEvictions(this.oldCache)\n      this.oldCache = this.cache\n      this.cache = new Map()\n    }\n  }\n\n  _moveToRecent(key, item) {\n    this.oldCache.delete(key)\n    this._set(key, item)\n  }\n\n  *_entriesAscending() {\n    for (const item of this.oldCache) {\n      const [key, value] = item\n      if (!this.cache.has(key)) {\n        const deleted = this._deleteIfExpired(key, value)\n        if (deleted === false) {\n          yield item\n        }\n      }\n    }\n\n    for (const item of this.cache) {\n      const [key, value] = item\n      const deleted = this._deleteIfExpired(key, value)\n      if (deleted === false) {\n        yield item\n      }\n    }\n  }\n\n  get(key) {\n    if (this.cache.has(key)) {\n      const item = this.cache.get(key)\n\n      return this._getItemValue(key, item)\n    }\n\n    if (this.oldCache.has(key)) {\n      const item = this.oldCache.get(key)\n      if (this._deleteIfExpired(key, item) === false) {\n        this._moveToRecent(key, item)\n        return item.value\n      }\n    }\n  }\n\n  set(key, value, { maxAge = this.maxAge } = {}) {\n    const expiry =\n      typeof maxAge === 'number' && maxAge !== Number.POSITIVE_INFINITY\n        ? Date.now() + maxAge\n        : undefined\n    if (this.cache.has(key)) {\n      this.cache.set(key, {\n        value,\n        expiry,\n      })\n    } else {\n      this._set(key, { value, expiry })\n    }\n  }\n\n  has(key) {\n    if (this.cache.has(key)) {\n      return !this._deleteIfExpired(key, this.cache.get(key))\n    }\n\n    if (this.oldCache.has(key)) {\n      return !this._deleteIfExpired(key, this.oldCache.get(key))\n    }\n\n    return false\n  }\n\n  peek(key) {\n    if (this.cache.has(key)) {\n      return this._peek(key, this.cache)\n    }\n\n    if (this.oldCache.has(key)) {\n      return this._peek(key, this.oldCache)\n    }\n  }\n\n  delete(key) {\n    const deleted = this.cache.delete(key)\n    if (deleted) {\n      this._size--\n    }\n\n    return this.oldCache.delete(key) || deleted\n  }\n\n  clear() {\n    this.cache.clear()\n    this.oldCache.clear()\n    this._size = 0\n  }\n\n  resize(newSize) {\n    if (!(newSize && newSize > 0)) {\n      throw new TypeError('`maxSize` must be a number greater than 0')\n    }\n\n    const items = [...this._entriesAscending()]\n    const removeCount = items.length - newSize\n    if (removeCount < 0) {\n      this.cache = new Map(items)\n      this.oldCache = new Map()\n      this._size = items.length\n    } else {\n      if (removeCount > 0) {\n        this._emitEvictions(items.slice(0, removeCount))\n      }\n\n      this.oldCache = new Map(items.slice(removeCount))\n      this.cache = new Map()\n      this._size = 0\n    }\n\n    this.maxSize = newSize\n  }\n\n  *keys() {\n    for (const [key] of this) {\n      yield key\n    }\n  }\n\n  *values() {\n    for (const [, value] of this) {\n      yield value\n    }\n  }\n\n  *[Symbol.iterator]() {\n    for (const item of this.cache) {\n      const [key, value] = item\n      const deleted = this._deleteIfExpired(key, value)\n      if (deleted === false) {\n        yield [key, value.value]\n      }\n    }\n\n    for (const item of this.oldCache) {\n      const [key, value] = item\n      if (!this.cache.has(key)) {\n        const deleted = this._deleteIfExpired(key, value)\n        if (deleted === false) {\n          yield [key, value.value]\n        }\n      }\n    }\n  }\n\n  *entriesDescending() {\n    let items = [...this.cache]\n    for (let i = items.length - 1; i >= 0; --i) {\n      const item = items[i]\n      const [key, value] = item\n      const deleted = this._deleteIfExpired(key, value)\n      if (deleted === false) {\n        yield [key, value.value]\n      }\n    }\n\n    items = [...this.oldCache]\n    for (let i = items.length - 1; i >= 0; --i) {\n      const item = items[i]\n      const [key, value] = item\n      if (!this.cache.has(key)) {\n        const deleted = this._deleteIfExpired(key, value)\n        if (deleted === false) {\n          yield [key, value.value]\n        }\n      }\n    }\n  }\n\n  *entriesAscending() {\n    for (const [key, value] of this._entriesAscending()) {\n      yield [key, value.value]\n    }\n  }\n\n  get size() {\n    if (!this._size) {\n      return this.oldCache.size\n    }\n\n    let oldCacheSize = 0\n    for (const key of this.oldCache.keys()) {\n      if (!this.cache.has(key)) {\n        oldCacheSize++\n      }\n    }\n\n    return Math.min(this._size + oldCacheSize, this.maxSize)\n  }\n\n  entries() {\n    return this.entriesAscending()\n  }\n\n  forEach(callbackFunction, thisArgument = this) {\n    for (const [key, value] of this.entriesAscending()) {\n      callbackFunction.call(thisArgument, value, key, this)\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return JSON.stringify([...this.entriesAscending()])\n  }\n}\n","import { IndexedFasta } from '@gmod/indexedfasta'\nimport {\n  BaseSequenceAdapter,\n  BaseOptions,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { FileLocation, NoAssemblyRegion } from '@jbrowse/core/util/types'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport { SimpleFeature, Feature } from '@jbrowse/core/util'\nimport AbortablePromiseCache from 'abortable-promise-cache'\nimport QuickLRU from '@jbrowse/core/util/QuickLRU'\n\ntype T = { refName: string; start: number; end: number; fasta: IndexedFasta }\n\nexport default class extends BaseSequenceAdapter {\n  protected setupP?: Promise<{ fasta: IndexedFasta }>\n\n  private seqCache = new AbortablePromiseCache<T, string | undefined>({\n    cache: new QuickLRU({ maxSize: 200 }),\n    fill: async (args: T, signal?: AbortSignal) => {\n      const { refName, start, end, fasta } = args\n      return fasta.getSequence(refName, start, end, { ...args, signal })\n    },\n  })\n\n  public async getRefNames(opts?: BaseOptions) {\n    const { fasta } = await this.setup()\n    return fasta.getSequenceNames(opts)\n  }\n\n  public async getRegions(opts?: BaseOptions) {\n    const { fasta } = await this.setup()\n    const seqSizes = await fasta.getSequenceSizes(opts)\n    return Object.keys(seqSizes).map(refName => ({\n      refName,\n      start: 0,\n      end: seqSizes[refName],\n    }))\n  }\n\n  public async setupPre() {\n    const fastaLocation = this.getConf('fastaLocation') as FileLocation\n    const faiLocation = this.getConf('faiLocation') as FileLocation\n\n    return {\n      fasta: new IndexedFasta({\n        fasta: openLocation(fastaLocation, this.pluginManager),\n        fai: openLocation(faiLocation, this.pluginManager),\n      }),\n    }\n  }\n\n  public async getHeader() {\n    const loc = this.getConf('metadataLocation')\n    return loc.uri === '' || loc.uri === '/path/to/fa.metadata.yaml'\n      ? null\n      : openLocation(loc, this.pluginManager).readFile('utf8')\n  }\n\n  public async setup() {\n    if (!this.setupP) {\n      this.setupP = this.setupPre().catch(e => {\n        this.setupP = undefined\n        throw e\n      })\n    }\n    return this.setupP\n  }\n\n  public getFeatures(region: NoAssemblyRegion, opts?: BaseOptions) {\n    const { refName, start, end } = region\n    return ObservableCreate<Feature>(async observer => {\n      const { fasta } = await this.setup()\n      const size = await fasta.getSequenceSize(refName, opts)\n      const regionEnd = size !== undefined ? Math.min(size, end) : end\n      const chunks = []\n      const chunkSize = 128000\n\n      const s = start - (start % chunkSize)\n      const e = end + (chunkSize - (end % chunkSize))\n      for (let chunkStart = s; chunkStart < e; chunkStart += chunkSize) {\n        const r = {\n          refName,\n          start: chunkStart,\n          end: chunkStart + chunkSize,\n        }\n        chunks.push(\n          this.seqCache.get(JSON.stringify(r), { ...r, fasta }, opts?.signal),\n        )\n      }\n      const seq = (await Promise.all(chunks))\n        .join('')\n        .slice(start - s)\n        .slice(0, end - start)\n      if (seq) {\n        observer.next(\n          new SimpleFeature({\n            id: `${refName} ${start}-${regionEnd}`,\n            data: { refName, start, end: regionEnd, seq },\n          }),\n        )\n      }\n      observer.complete()\n    })\n  }\n\n  /**\n   * called to provide a hint that data tied to a certain region\n   * will not be needed for the foreseeable future and can be purged\n   * from caches, etc\n   */\n  public freeResources(/* { region } */): void {}\n}\n"],"names":["QuickLRU","_Map","_Symbol$iterator","_Symbol$toStringTag","_inherits","_super","_createSuper","_this","options","arguments","length","undefined","_classCallCheck","call","maxSize","TypeError","maxAge","Number","POSITIVE_INFINITY","onEviction","cache","Map","oldCache","_size","_createClass","key","value","this","_step","_iterator","_createForOfIteratorHelper","s","n","done","_step$value","_slicedToArray","item","err","e","f","expiry","Date","now","delete","_deleteIfExpired","_getOrDeleteIfExpired","get","_getItemValue","set","_emitEvictions","_set","_regeneratorRuntime","mark","_entriesAscending","_iterator2","_step2","_item","_iterator3","_step3","_item2","_item3","_key","_value","wrap","_context","prev","next","has","t0","finish","t1","stop","_moveToRecent","_ref$maxAge","_peek","deleted","clear","newSize","items","_toConsumableArray","removeCount","slice","keys","_iterator4","_step4","_step4$value","_context2","values","_iterator5","_step5","_step5$value","_context3","_iterator6","_step6","_item5","_iterator7","_step7","_item6","_item7","_key2","_value2","_context4","entriesDescending","i","_item8","_i","_item9","_item10","_key3","_value3","_context5","entriesAscending","_iterator8","_step8","_step8$value","_context6","size","_step9","oldCacheSize","_iterator9","Math","min","callbackFunction","_step10","thisArgument","_iterator10","_step10$value","JSON","stringify","_wrapNativeSuper","Symbol","iterator","toStringTag","_default","_BaseSequenceAdapter","_len","_args","Array","apply","concat","setupP","seqCache","AbortablePromiseCache","fill","_fill","_asyncToGenerator","_callee","args","signal","refName","start","end","fasta","abrupt","getSequence","_objectSpread","_x","_x2","_getRefNames","_callee2","opts","_yield$this$setup","setup","sent","getSequenceNames","_x3","_getRegions","_callee3","_yield$this$setup2","seqSizes","getSequenceSizes","Object","map","_x4","_setupPre","_callee4","fastaLocation","faiLocation","getConf","IndexedFasta","openLocation","pluginManager","fai","_getHeader","_callee5","loc","uri","readFile","_setup","_callee6","_this2","setupPre","catch","region","_this3","ObservableCreate","_ref","_callee7","observer","_yield$_this3$setup","regionEnd","chunks","chunkSize","chunkStart","r","seq","_context7","getSequenceSize","push","Promise","all","join","SimpleFeature","id","data","complete","_x5","BaseSequenceAdapter"],"sourceRoot":""}