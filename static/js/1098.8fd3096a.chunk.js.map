{"version":3,"file":"static/js/1098.8fd3096a.chunk.js","mappings":"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","sources":["../../../plugins/dotplot-view/src/DotplotView/components/Axes.tsx","../../../plugins/dotplot-view/src/DotplotView/components/ImportForm/ImportCustomTrack.tsx","../../../plugins/dotplot-view/src/DotplotView/components/ImportForm/util.ts","../../../plugins/dotplot-view/src/DotplotView/components/ImportForm/ImportSyntenyTrackSelector.tsx","../../../plugins/dotplot-view/src/DotplotView/components/ImportForm/index.tsx","../../../plugins/dotplot-view/src/DotplotView/components/DotplotWarnings.tsx","../../../plugins/dotplot-view/src/DotplotView/components/PanButtons.tsx","../../../plugins/dotplot-view/src/DotplotView/components/CursorIcon.tsx","../../../plugins/dotplot-view/src/DotplotView/components/DotplotControls.tsx","../../../plugins/dotplot-view/src/DotplotView/components/Header.tsx","../../../plugins/dotplot-view/src/DotplotView/components/DotplotTooltip.tsx","../../../plugins/dotplot-view/src/DotplotView/components/DotplotView.tsx","../../../plugins/dotplot-view/src/DotplotView/components/Grid.tsx"],"sourcesContent":["import React from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { getSnapshot } from 'mobx-state-tree'\nimport { getTickDisplayStr } from '@jbrowse/core/util'\nimport { bpToPx } from '@jbrowse/core/util/Base1DUtils'\nimport { useTheme } from '@mui/material'\n\n// locals\nimport { getBlockLabelKeysToHide } from './util'\nimport { DotplotViewModel } from '../model'\n\nconst useStyles = makeStyles()(() => ({\n  vtext: {\n    gridColumn: '1/2',\n    gridRow: '1/2',\n    pointerEvents: 'none',\n    userSelect: 'none',\n  },\n  htext: {\n    gridColumn: '2/2',\n    gridRow: '2/2',\n    pointerEvents: 'none',\n    userSelect: 'none',\n  },\n}))\nexport const HorizontalAxis = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { viewWidth, borderY } = model\n  const { classes } = useStyles()\n  return (\n    <svg width={viewWidth} height={borderY} className={classes.htext}>\n      <HorizontalAxisRaw model={model} />\n    </svg>\n  )\n})\n\nexport const HorizontalAxisRaw = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { viewWidth, borderX, borderY, hview, htextRotation, hticks } = model\n  const { offsetPx, width, dynamicBlocks, bpPerPx } = hview\n  const dblocks = dynamicBlocks.contentBlocks\n  const hide = getBlockLabelKeysToHide(dblocks, viewWidth, offsetPx)\n  const theme = useTheme()\n  const hviewSnap = {\n    ...getSnapshot(hview),\n    width,\n    staticBlocks: hview.staticBlocks,\n  }\n\n  const ticks = hticks\n    .map(\n      tick =>\n        [\n          tick,\n          bpToPx({\n            refName: tick.refName,\n            coord: tick.base,\n            self: hviewSnap,\n          })?.offsetPx,\n        ] as const,\n    )\n    .filter(f => f[1] !== undefined)\n    .map(f => [f[0], f[1]! - offsetPx] as const)\n\n  return (\n    <>\n      {dblocks\n        .filter(region => !hide.has(region.key))\n        .map(region => {\n          const x = region.offsetPx\n          const y = 0\n          const xoff = Math.floor(x - hview.offsetPx)\n\n          return (\n            <text\n              transform={`rotate(${htextRotation},${xoff},${y})`}\n              key={JSON.stringify(region)}\n              x={xoff}\n              y={y + 1}\n              fill={theme.palette.text.primary}\n              fontSize={11}\n              dominantBaseline=\"hanging\"\n              textAnchor=\"end\"\n            >\n              {region.refName}\n            </text>\n          )\n        })}\n      {ticks.map(([tick, x]) => {\n        return (\n          <line\n            key={`line-${JSON.stringify(tick)}`}\n            x1={x}\n            x2={x}\n            y1={0}\n            y2={tick.type === 'major' ? 6 : 4}\n            strokeWidth={1}\n            stroke={theme.palette.grey[400]}\n          />\n        )\n      })}\n      {ticks\n        .filter(t => t[0].type === 'major')\n        .map(([tick, x]) => {\n          const y = 0\n          return x > 10 ? (\n            <text\n              x={x - 7}\n              y={y}\n              transform={`rotate(${htextRotation},${x},${y})`}\n              key={`text-${JSON.stringify(tick)}`}\n              fill={theme.palette.text.primary}\n              fontSize={11}\n              dominantBaseline=\"middle\"\n              textAnchor=\"end\"\n            >\n              {getTickDisplayStr(tick.base + 1, bpPerPx)}\n            </text>\n          ) : null\n        })}\n      <text\n        y={borderY - 12}\n        x={(viewWidth - borderX) / 2}\n        fill={theme.palette.text.primary}\n        textAnchor=\"middle\"\n        fontSize={11}\n        dominantBaseline=\"hanging\"\n      >\n        {hview.assemblyNames.join(',')}\n      </text>\n    </>\n  )\n})\nexport const VerticalAxis = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { borderX, viewHeight } = model\n  const { classes } = useStyles()\n  return (\n    <svg className={classes.vtext} width={borderX} height={viewHeight}>\n      <VerticalAxisRaw model={model} />\n    </svg>\n  )\n})\n\nexport const VerticalAxisRaw = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { viewHeight, borderX, borderY, vview, vtextRotation, vticks } = model\n  const { offsetPx, width, dynamicBlocks, bpPerPx } = vview\n  const dblocks = dynamicBlocks.contentBlocks\n  const hide = getBlockLabelKeysToHide(dblocks, viewHeight, offsetPx)\n  const theme = useTheme()\n  const vviewSnap = {\n    ...getSnapshot(vview),\n    width,\n    staticBlocks: vview.staticBlocks,\n  }\n  const ticks = vticks\n    .map(\n      tick =>\n        [\n          tick,\n          bpToPx({\n            refName: tick.refName,\n            coord: tick.base,\n            self: vviewSnap,\n          })?.offsetPx,\n        ] as const,\n    )\n    .filter(f => f[1] !== undefined)\n    .map(f => [f[0], f[1]! - offsetPx] as const)\n\n  return (\n    <>\n      {dblocks\n        .filter(region => !hide.has(region.key))\n        .map(region => {\n          const y = region.offsetPx\n          const x = borderX\n          const yoff = Math.floor(viewHeight - y + offsetPx)\n\n          return (\n            <text\n              transform={`rotate(${vtextRotation},${x},${y})`}\n              key={JSON.stringify(region)}\n              x={x}\n              y={yoff}\n              fill={theme.palette.text.primary}\n              fontSize={11}\n              textAnchor=\"end\"\n            >\n              {region.refName}\n            </text>\n          )\n        })}\n      {ticks.map(([tick, y]) => (\n        <line\n          key={`line-${JSON.stringify(tick)}`}\n          y1={viewHeight - y}\n          y2={viewHeight - y}\n          x1={borderX}\n          x2={borderX - (tick.type === 'major' ? 6 : 4)}\n          strokeWidth={1}\n          stroke={theme.palette.grey[400]}\n        />\n      ))}\n      {ticks\n        .filter(t => t[0].type === 'major')\n        .map(([tick, y]) => {\n          return y > 10 ? (\n            <text\n              y={viewHeight - y - 3}\n              x={borderX - 7}\n              key={`text-${JSON.stringify(tick)}`}\n              textAnchor=\"end\"\n              fill={theme.palette.text.primary}\n              dominantBaseline=\"hanging\"\n              fontSize={11}\n            >\n              {getTickDisplayStr(tick.base + 1, bpPerPx)}\n            </text>\n          ) : null\n        })}\n      <text\n        y={(viewHeight - borderY) / 2}\n        x={12}\n        fill={theme.palette.text.primary}\n        transform={`rotate(-90,12,${(viewHeight - borderY) / 2})`}\n        textAnchor=\"middle\"\n        fontSize={11}\n      >\n        {vview.assemblyNames.join(',')}\n      </text>\n    </>\n  )\n})\n","import React, { useState, useEffect } from 'react'\nimport { SnapshotIn } from 'mobx-state-tree'\nimport {\n  FormControlLabel,\n  Grid,\n  Paper,\n  Radio,\n  RadioGroup,\n  Typography,\n} from '@mui/material'\nimport { ErrorMessage, FileSelector } from '@jbrowse/core/ui'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport { observer } from 'mobx-react'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { basename, extName, getName, stripGz } from './util'\n\nfunction getAdapter({\n  radioOption,\n  assembly1,\n  assembly2,\n  fileLocation,\n  bed1Location,\n  bed2Location,\n}: {\n  radioOption: string\n  assembly1: string\n  assembly2: string\n  fileLocation?: FileLocation\n  bed1Location?: FileLocation\n  bed2Location?: FileLocation\n}) {\n  if (radioOption === '.paf') {\n    return {\n      type: 'PAFAdapter',\n      pafLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.out') {\n    return {\n      type: 'MashMapAdapter',\n      outLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.delta') {\n    return {\n      type: 'DeltaAdapter',\n      deltaLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.chain') {\n    return {\n      type: 'ChainAdapter',\n      chainLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.anchors') {\n    return {\n      type: 'MCScanAnchorsAdapter',\n      mcscanAnchorsLocation: fileLocation,\n      bed1Location,\n      bed2Location,\n      assemblyNames: [assembly1, assembly2],\n    }\n  } else if (radioOption === '.anchors.simple') {\n    return {\n      type: 'MCScanSimpleAnchorsAdapter',\n      mcscanSimpleAnchorsLocation: fileLocation,\n      bed1Location,\n      bed2Location,\n      assemblyNames: [assembly1, assembly2],\n    }\n  } else {\n    throw new Error(\n      `Unknown to detect type ${radioOption} from filename (select radio button to clarify)`,\n    )\n  }\n}\n\ntype Conf = SnapshotIn<AnyConfigurationModel>\n\nconst OpenTrack = observer(\n  ({\n    assembly1,\n    assembly2,\n    setSessionTrackData,\n  }: {\n    sessionTrackData: Conf\n    assembly1: string\n    assembly2: string\n    setSessionTrackData: (arg: Conf) => void\n  }) => {\n    const [bed2Location, setBed2Location] = useState<FileLocation>()\n    const [bed1Location, setBed1Location] = useState<FileLocation>()\n    const [fileLocation, setFileLocation] = useState<FileLocation>()\n    const [value, setValue] = useState('')\n    const [error, setError] = useState<unknown>()\n    const fileName = getName(fileLocation)\n\n    const radioOption = value || (fileName ? extName(stripGz(fileName)) : '')\n\n    useEffect(() => {\n      try {\n        if (fileLocation) {\n          const fn = fileName ? basename(fileName) : 'MyTrack'\n          const trackId = `${fn}-${Date.now()}`\n          setError(undefined)\n\n          setSessionTrackData({\n            trackId,\n            name: fn,\n            assemblyNames: [assembly2, assembly1],\n            type: 'SyntenyTrack',\n            adapter: getAdapter({\n              radioOption,\n              assembly1,\n              assembly2,\n              fileLocation,\n              bed1Location,\n              bed2Location,\n            }),\n          })\n        }\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    }, [\n      fileName,\n      assembly1,\n      assembly2,\n      bed1Location,\n      bed2Location,\n      fileLocation,\n      radioOption,\n      setSessionTrackData,\n    ])\n    return (\n      <Paper style={{ padding: 12 }}>\n        {error ? <ErrorMessage error={error} /> : null}\n        <Typography style={{ textAlign: 'center' }}>\n          Add a .paf, .out (MashMap), .delta (Mummer), .chain, .anchors or\n          .anchors.simple (MCScan) file to view in the dotplot. These file types\n          can also be gzipped. The first assembly should be the query sequence\n          (e.g. left column of the PAF) and the second assembly should be the\n          target sequence (e.g. right column of the PAF)\n        </Typography>\n        <RadioGroup\n          value={radioOption}\n          onChange={event => setValue(event.target.value)}\n        >\n          <Grid container justifyContent=\"center\">\n            <Grid item>\n              <FormControlLabel value=\".paf\" control={<Radio />} label=\".paf\" />\n            </Grid>\n            <Grid item>\n              <FormControlLabel value=\".out\" control={<Radio />} label=\".out\" />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".delta\"\n                control={<Radio />}\n                label=\".delta\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".chain\"\n                control={<Radio />}\n                label=\".chain\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".anchors\"\n                control={<Radio />}\n                label=\".anchors\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".anchors.simple\"\n                control={<Radio />}\n                label=\".anchors.simple\"\n              />\n            </Grid>\n          </Grid>\n        </RadioGroup>\n        <Grid container justifyContent=\"center\">\n          <Grid item>\n            {value === '.anchors' || value === '.anchors.simple' ? (\n              <div>\n                <div style={{ margin: 20 }}>\n                  Open the {value} and .bed files for both genome assemblies\n                  from the MCScan (Python version) pipeline{' '}\n                  <a href=\"https://github.com/tanghaibao/jcvi/wiki/MCscan-(Python-version)\">\n                    (more info)\n                  </a>\n                </div>\n                <div style={{ display: 'flex' }}>\n                  <div>\n                    <FileSelector\n                      name=\".anchors file\"\n                      description=\"\"\n                      location={fileLocation}\n                      setLocation={loc => setFileLocation(loc)}\n                    />\n                  </div>\n                  <div>\n                    <FileSelector\n                      name=\"genome 1 .bed (left column of anchors file)\"\n                      description=\"\"\n                      location={bed1Location}\n                      setLocation={loc => setBed1Location(loc)}\n                    />\n                  </div>\n                  <div>\n                    <FileSelector\n                      name=\"genome 2 .bed (right column of anchors file)\"\n                      description=\"\"\n                      location={bed2Location}\n                      setLocation={loc => setBed2Location(loc)}\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <FileSelector\n                name={value ? value + ' location' : ''}\n                description=\"\"\n                location={fileLocation}\n                setLocation={loc => setFileLocation(loc)}\n              />\n            )}\n          </Grid>\n        </Grid>\n      </Paper>\n    )\n  },\n)\n\nexport default OpenTrack\n","export function getName(\n  sessionTrackData?: { uri: string } | { localPath: string } | { name: string },\n) {\n  return sessionTrackData\n    ? // @ts-expect-error\n      sessionTrackData.uri ||\n        // @ts-expect-error\n        sessionTrackData.localPath ||\n        // @ts-expect-error\n        sessionTrackData.name\n    : undefined\n}\n\nexport function stripGz(fileName: string) {\n  return fileName.endsWith('.gz') ? fileName.slice(0, -3) : fileName\n}\n\nexport function basename(str: string) {\n  return str.split('#')[0].split('?')[0].split('/').pop()\n}\nexport function extName(str: string) {\n  const r = str.split('.').pop()\n  return r ? `.${r}` : ''\n}\n","import React, { useState, useEffect } from 'react'\nimport { Select, MenuItem, Paper, Typography } from '@mui/material'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport { getSession } from '@jbrowse/core/util'\nimport { ErrorMessage } from '@jbrowse/core/ui'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { observer } from 'mobx-react'\n\n// icons\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\n\n// locals\nimport { DotplotViewModel } from '../../model'\n\nfunction f(track: AnyConfigurationModel, assembly1: string, assembly2: string) {\n  const assemblyNames = readConfObject(track, 'assemblyNames')\n  return (\n    assemblyNames.includes(assembly1) &&\n    assemblyNames.includes(assembly2) &&\n    track.type.includes('Synteny')\n  )\n}\n\nconst Selector = observer(\n  ({\n    model,\n    assembly1,\n    assembly2,\n    setShowTrackId,\n  }: {\n    model: DotplotViewModel\n    assembly1: string\n    assembly2: string\n    setShowTrackId: (arg: string) => void\n  }) => {\n    const session = getSession(model)\n    const { tracks, sessionTracks } = session\n    const allTracks = [\n      ...tracks,\n      ...(sessionTracks || []),\n    ] as AnyConfigurationModel[]\n    const filteredTracks = allTracks.filter(t => f(t, assembly2, assembly1))\n    const resetTrack = filteredTracks[0]?.trackId || ''\n    const [value, setValue] = useState(resetTrack)\n    useEffect(() => {\n      // if assembly1/assembly2 changes, then we will want to use this effect to change\n      // the state of the useState because it otherwise gets locked to a stale value\n      setValue(resetTrack)\n    }, [resetTrack])\n\n    useEffect(() => {\n      // sets track data in a useEffect because the initial load is needed as well as\n      // onChange's to the select box\n      setShowTrackId(value)\n    }, [value, setShowTrackId])\n\n    return (\n      <Paper style={{ padding: 12 }}>\n        <Typography paragraph>\n          Select a track from the select box below, the track will be shown when\n          you hit \"Launch\".\n        </Typography>\n\n        <Typography paragraph>\n          Note: there is a track selector <i>inside</i> the DotplotView, which\n          can turn on one or more SyntenyTracks (more than one can be displayed\n          at once). Look for the track selector icon <TrackSelectorIcon />\n        </Typography>\n        {filteredTracks.length ? (\n          <Select\n            value={value}\n            onChange={event => setValue(event.target.value)}\n          >\n            {filteredTracks.map(track => (\n              <MenuItem key={track.trackId} value={track.trackId}>\n                {getTrackName(track, session)}\n              </MenuItem>\n            ))}\n          </Select>\n        ) : (\n          <ErrorMessage\n            error={`No synteny tracks found for ${assembly1},${assembly2}`}\n          />\n        )}\n      </Paper>\n    )\n  },\n)\n\nexport default Selector\n","import React, { useState, useEffect } from 'react'\nimport {\n  Button,\n  Container,\n  FormControl,\n  FormLabel,\n  FormControlLabel,\n  Grid,\n  Paper,\n  Radio,\n  RadioGroup,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { transaction } from 'mobx'\nimport { SnapshotIn } from 'mobx-state-tree'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { getSession, isSessionWithAddTracks } from '@jbrowse/core/util'\nimport { ErrorMessage, AssemblySelector } from '@jbrowse/core/ui'\n\n// locals\nimport { DotplotViewModel } from '../../model'\nimport ImportCustomTrack from './ImportCustomTrack'\nimport ImportSyntenyTrackSelector from './ImportSyntenyTrackSelector'\n\nconst useStyles = makeStyles()(theme => ({\n  importFormContainer: {\n    padding: theme.spacing(4),\n    margin: '0 auto',\n  },\n  assemblySelector: {\n    width: '75%',\n    margin: '0 auto',\n  },\n}))\n\ntype Conf = SnapshotIn<AnyConfigurationModel>\n\nfunction TrackSelector({\n  setSessionTrackData,\n  setShowTrackId,\n  sessionTrackData,\n  assembly1,\n  assembly2,\n  model,\n}: {\n  sessionTrackData: Conf\n  setSessionTrackData: (arg: Conf) => void\n  setShowTrackId: (arg?: string) => void\n  model: DotplotViewModel\n  assembly1: string\n  assembly2: string\n}) {\n  const [choice, setChoice] = useState('tracklist')\n\n  useEffect(() => {\n    if (choice === 'none') {\n      setSessionTrackData(undefined)\n      setShowTrackId(undefined)\n    }\n  }, [choice, setSessionTrackData, setShowTrackId])\n  return (\n    <>\n      <FormControl>\n        <FormLabel id=\"group-label\">\n          (Optional) Select or add a synteny track\n        </FormLabel>\n        <RadioGroup\n          row\n          value={choice}\n          onChange={event => setChoice(event.target.value)}\n          aria-labelledby=\"group-label\"\n        >\n          <FormControlLabel value=\"none\" control={<Radio />} label=\"None\" />\n          <FormControlLabel\n            value=\"tracklist\"\n            control={<Radio />}\n            label=\"Existing track\"\n          />\n          <FormControlLabel\n            value=\"custom\"\n            control={<Radio />}\n            label=\"New track\"\n          />\n        </RadioGroup>\n      </FormControl>\n      {choice === 'custom' ? (\n        <ImportCustomTrack\n          setSessionTrackData={setSessionTrackData}\n          sessionTrackData={sessionTrackData}\n          assembly2={assembly2}\n          assembly1={assembly1}\n        />\n      ) : null}\n      {choice === 'tracklist' ? (\n        <ImportSyntenyTrackSelector\n          model={model}\n          assembly1={assembly1}\n          assembly2={assembly2}\n          setShowTrackId={setShowTrackId}\n        />\n      ) : null}\n    </>\n  )\n}\n\nconst DotplotImportForm = observer(({ model }: { model: DotplotViewModel }) => {\n  const { classes } = useStyles()\n  const session = getSession(model)\n  const { assemblyNames } = session\n  const [assembly2, setAssembly2] = useState(assemblyNames[0] || '')\n  const [assembly1, setAssembly1] = useState(assemblyNames[0] || '')\n  const [error, setError] = useState<unknown>()\n  const [sessionTrackData, setSessionTrackData] = useState<Conf>()\n  const [showTrackId, setShowTrackId] = useState<string>()\n\n  function onOpenClick() {\n    try {\n      if (!isSessionWithAddTracks(session)) {\n        return\n      }\n      setError(undefined)\n      model.setError(undefined)\n      transaction(() => {\n        if (sessionTrackData) {\n          session.addTrackConf(sessionTrackData)\n          model.toggleTrack(sessionTrackData.trackId)\n        } else if (showTrackId) {\n          model.showTrack(showTrackId)\n        }\n\n        model.setViews([\n          { bpPerPx: 0.1, offsetPx: 0 },\n          { bpPerPx: 0.1, offsetPx: 0 },\n        ])\n        model.setAssemblyNames(assembly2, assembly1)\n      })\n    } catch (e) {\n      console.error(e)\n      setError(e)\n    }\n  }\n\n  // this is a combination of any displayed error message we have\n  const displayError = error || model.error\n  return (\n    <Container className={classes.importFormContainer}>\n      {displayError ? <ErrorMessage error={displayError} /> : null}\n      <Grid\n        container\n        spacing={1}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        className={classes.assemblySelector}\n      >\n        <Grid item>\n          <Paper style={{ padding: 12 }}>\n            <Typography style={{ textAlign: 'center' }}>\n              Select assemblies for dotplot view\n            </Typography>\n            <Grid\n              container\n              spacing={1}\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <AssemblySelector\n                  selected={assembly1}\n                  onChange={val => setAssembly1(val)}\n                  session={session}\n                />\n              </Grid>\n              <Grid item>\n                <AssemblySelector\n                  selected={assembly2}\n                  onChange={val => setAssembly2(val)}\n                  session={session}\n                />\n              </Grid>\n              <Grid item>\n                <FormControl>\n                  <Button\n                    onClick={onOpenClick}\n                    variant=\"contained\"\n                    color=\"primary\"\n                  >\n                    Launch\n                  </Button>\n                </FormControl>\n              </Grid>\n            </Grid>\n          </Paper>\n          <TrackSelector\n            setShowTrackId={setShowTrackId}\n            assembly2={assembly2}\n            assembly1={assembly1}\n            setSessionTrackData={setSessionTrackData}\n            sessionTrackData={sessionTrackData}\n            model={model}\n          />\n        </Grid>\n      </Grid>\n    </Container>\n  )\n})\n\nexport default DotplotImportForm\n","import React, { lazy, useState } from 'react'\nimport { Alert, Button } from '@mui/material'\nimport { observer } from 'mobx-react'\n\n// locals\nimport { DotplotViewModel } from '../model'\n\n// lazy components\nconst WarningDialog = lazy(() => import('./WarningDialog'))\n\nconst DotplotWarnings = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const trackWarnings = model.tracks.filter(t => t.displays[0].warnings?.length)\n  const [shown, setShown] = useState(false)\n  return trackWarnings.length ? (\n    <Alert severity=\"warning\">\n      Warnings during render{' '}\n      <Button onClick={() => setShown(true)}>More info</Button>\n      {shown ? (\n        <WarningDialog\n          trackWarnings={trackWarnings}\n          handleClose={() => setShown(false)}\n        />\n      ) : null}\n    </Alert>\n  ) : null\n})\n\nexport default DotplotWarnings\n","import React from 'react'\nimport { IconButton, Paper } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\n\n// icons\nimport ArrowDropDown from '@mui/icons-material/ArrowDropDown'\nimport ArrowDropUp from '@mui/icons-material/ArrowDropUp'\nimport ArrowLeft from '@mui/icons-material/ArrowLeft'\nimport ArrowRight from '@mui/icons-material/ArrowRight'\nimport ZoomIn from '@mui/icons-material/ZoomIn'\nimport ZoomOut from '@mui/icons-material/ZoomOut'\n\n// locals\nimport { DotplotViewModel } from '../model'\n\nconst useStyles = makeStyles()({\n  dpad: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, 1fr)',\n    margin: 0,\n    position: 'absolute',\n    right: 50,\n    zIndex: 1000,\n    top: 50,\n  },\n  icon: {\n    padding: 0,\n    margin: 0,\n  },\n})\n\nconst PanButtons = observer(function PanButtons({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { classes } = useStyles()\n  return (\n    <Paper className={classes.dpad} elevation={6}>\n      <div />\n      <IconButton\n        className={classes.icon}\n        onClick={() => model.vview.scroll(100)}\n      >\n        <ArrowDropUp />\n      </IconButton>\n      <div />\n\n      <IconButton\n        className={classes.icon}\n        onClick={() => model.hview.scroll(-100)}\n      >\n        <ArrowLeft />\n      </IconButton>\n      <div />\n      <IconButton\n        className={classes.icon}\n        onClick={() => model.hview.scroll(100)}\n      >\n        <ArrowRight />\n      </IconButton>\n\n      <div />\n      <IconButton\n        className={classes.icon}\n        onClick={() => model.vview.scroll(-100)}\n      >\n        <ArrowDropDown />\n      </IconButton>\n      <div />\n      <IconButton\n        className={classes.icon}\n        onClick={() => {\n          model.hview.zoomIn()\n          model.vview.zoomIn()\n        }}\n      >\n        <ZoomIn />\n      </IconButton>\n      <div />\n      <IconButton\n        className={classes.icon}\n        onClick={() => {\n          model.hview.zoomOut()\n          model.vview.zoomOut()\n        }}\n      >\n        <ZoomOut />\n      </IconButton>\n    </Paper>\n  )\n})\n\nexport default PanButtons\n","import SvgIcon, { SvgIconProps } from '@mui/material/SvgIcon'\nimport React from 'react'\n\nexport function CursorMove(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M13,6V11H18V7.75L22.25,12L18,16.25V13H13V18H16.25L12,22.25L7.75,18H11V13H6V16.25L1.75,12L6,7.75V11H11V6H7.75L12,1.75L16.25,6H13Z\"\n      />\n    </SvgIcon>\n  )\n}\n\nexport function CursorMouse(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M10.07,14.27C10.57,14.03 11.16,14.25 11.4,14.75L13.7,19.74L15.5,18.89L13.19,13.91C12.95,13.41 13.17,12.81 13.67,12.58L13.95,12.5L16.25,12.05L8,5.12V15.9L9.82,14.43L10.07,14.27M13.64,21.97C13.14,22.21 12.54,22 12.31,21.5L10.13,16.76L7.62,18.78C7.45,18.92 7.24,19 7,19A1,1 0 0,1 6,18V3A1,1 0 0,1 7,2C7.24,2 7.47,2.09 7.64,2.23L7.65,2.22L19.14,11.86C19.57,12.22 19.62,12.85 19.27,13.27C19.12,13.45 18.91,13.57 18.7,13.61L15.54,14.23L17.74,18.96C18,19.46 17.76,20.05 17.26,20.28L13.64,21.97Z\"\n      />\n    </SvgIcon>\n  )\n}\n","import React from 'react'\nimport { IconButton } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport CascadingMenuButton from '@jbrowse/core/ui/CascadingMenuButton'\n\n// icons\nimport ZoomOut from '@mui/icons-material/ZoomOut'\nimport ZoomIn from '@mui/icons-material/ZoomIn'\nimport MoreVert from '@mui/icons-material/MoreVert'\nimport { CursorMouse, CursorMove } from './CursorIcon'\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\n\n// locals\nimport { DotplotViewModel } from '../model'\n\nconst DotplotControls = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  return (\n    <div>\n      <IconButton onClick={model.zoomOutButton}>\n        <ZoomOut />\n      </IconButton>\n\n      <IconButton onClick={model.zoomInButton}>\n        <ZoomIn />\n      </IconButton>\n\n      <IconButton\n        onClick={() => model.activateTrackSelector()}\n        title=\"Open track selector\"\n      >\n        <TrackSelectorIcon />\n      </IconButton>\n\n      <CascadingMenuButton\n        menuItems={[\n          {\n            onClick: () => model.squareView(),\n            label: 'Square view - same base pairs per pixel',\n          },\n          {\n            onClick: () => model.squareViewProportional(),\n            label: 'Rectanglularize view - same total bp',\n          },\n          {\n            onClick: () => model.showAllRegions(),\n            label: 'Show all regions',\n          },\n          {\n            onClick: () => model.setDrawCigar(!model.drawCigar),\n            type: 'checkbox',\n            label: 'Draw CIGAR',\n            checked: model.drawCigar,\n          },\n          {\n            onClick: () => model.setShowPanButtons(!model.showPanButtons),\n            label: 'Show pan buttons',\n            type: 'checkbox',\n            checked: model.showPanButtons,\n          },\n          {\n            label: 'Click and drag mode',\n            subMenu: [\n              {\n                onClick: () => model.setCursorMode('move'),\n                label: 'Pan by default, select region when ctrl key is held',\n                icon: CursorMove,\n                type: 'radio',\n                checked: model.cursorMode === 'move',\n              },\n              {\n                onClick: () => model.setCursorMode('crosshair'),\n                label: 'Select region by default, pan when ctrl key is held',\n                icon: CursorMouse,\n                type: 'radio',\n                checked: model.cursorMode === 'crosshair',\n              },\n            ],\n          },\n          {\n            label: 'Wheel scroll mode',\n            subMenu: [\n              {\n                onClick: () => model.setWheelMode('pan'),\n                label: 'Pans view',\n                type: 'radio',\n                checked: model.wheelMode === 'pan',\n              },\n              {\n                onClick: () => model.setWheelMode('zoom'),\n                label: 'Zooms view',\n                type: 'radio',\n                checked: model.wheelMode === 'zoom',\n              },\n              {\n                onClick: () => model.setWheelMode('none'),\n                label: 'Disable',\n                type: 'radio',\n                checked: model.wheelMode === 'none',\n              },\n            ],\n          },\n        ]}\n      >\n        <MoreVert />\n      </CascadingMenuButton>\n    </div>\n  )\n})\n\nexport default DotplotControls\n","import React from 'react'\nimport { Typography } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\nimport { getBpDisplayStr } from '@jbrowse/core/util'\n\n// locals\nimport { DotplotViewModel } from '../model'\nimport DotplotWarnings from './DotplotWarnings'\nimport PanButtons from './PanButtons'\nimport DotplotControls from './DotplotControls'\n\nconst useStyles = makeStyles()({\n  bp: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 10,\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  headerBar: {\n    display: 'flex',\n    position: 'relative',\n  },\n})\n\nconst DotplotHeader = observer(function ({\n  model,\n  selection,\n}: {\n  model: DotplotViewModel\n  selection?: { width: number; height: number }\n}) {\n  const { classes } = useStyles()\n  const { hview, vview, showPanButtons } = model\n  return (\n    <div className={classes.headerBar}>\n      <DotplotControls model={model} />\n      <Typography className={classes.bp} variant=\"body2\" color=\"textSecondary\">\n        x: {hview.assemblyNames.join(',')} {getBpDisplayStr(hview.currBp)}\n        <br />\n        y: {vview.assemblyNames.join(',')} {getBpDisplayStr(vview.currBp)}\n      </Typography>\n      {selection ? (\n        <Typography\n          className={classes.bp}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >\n          {`width:${getBpDisplayStr(hview.bpPerPx * selection.width)}`} <br />\n          {`height:${getBpDisplayStr(vview.bpPerPx * selection.height)}`}\n        </Typography>\n      ) : null}\n      <div className={classes.spacer} />\n      <DotplotWarnings model={model} />\n      {showPanButtons ? <PanButtons model={model} /> : null}\n    </div>\n  )\n})\n\nexport default DotplotHeader\n","import React, { useMemo, useRef, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport { DotplotViewModel } from '../model'\nimport { locstr } from './util'\nimport { Portal, alpha } from '@mui/material'\nimport { usePopper } from 'react-popper'\n\nfunction round(value: number) {\n  return Math.round(value * 1e5) / 1e5\n}\nconst useStyles = makeStyles()(theme => ({\n  // these styles come from\n  // https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/Tooltip/Tooltip.js\n  tooltip: {\n    position: 'absolute',\n    pointerEvents: 'none',\n    backgroundColor: alpha(theme.palette.grey[700], 0.9),\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.common.white,\n    fontFamily: theme.typography.fontFamily,\n    padding: '4px 8px',\n    fontSize: theme.typography.pxToRem(12),\n    lineHeight: `${round(14 / 10)}em`,\n    maxWidth: 300,\n    wordWrap: 'break-word',\n  },\n}))\n\ntype Coord = [number, number] | undefined\nconst blank = { left: 0, top: 0, width: 0, height: 0 }\n\nexport const TooltipWhereMouseovered = observer(function ({\n  model,\n  mouserect,\n  mouserectClient,\n  xdistance,\n  ydistance,\n}: {\n  model: DotplotViewModel\n  mouserect: Coord\n  mouserectClient: Coord\n  xdistance: number\n  ydistance: number\n}) {\n  const { classes } = useStyles()\n  const { hview, vview, viewHeight } = model\n  const [anchorEl, setAnchorEl] = useState<HTMLDivElement | null>(null)\n  const ref = useRef<HTMLDivElement>(null)\n  const rect = ref.current?.getBoundingClientRect() || blank\n  const offset = 6\n  const w = rect.height + offset * 2\n\n  // must be memoized a la https://github.com/popperjs/react-popper/issues/391\n  const virtElement = useMemo(\n    () => ({\n      getBoundingClientRect: () => {\n        const x = offset + (mouserectClient?.[0] || 0) - (xdistance < 0 ? w : 0)\n        const y = offset + (mouserectClient?.[1] || 0) - (ydistance < 0 ? w : 0)\n        return {\n          top: y,\n          left: x,\n          bottom: y,\n          right: x,\n          width: 0,\n          height: 0,\n          x,\n          y,\n          toJSON() {},\n        }\n      },\n    }),\n    [mouserectClient, xdistance, ydistance, w],\n  )\n  const { styles, attributes } = usePopper(virtElement, anchorEl, {\n    placement: xdistance < 0 ? 'left' : 'right',\n  })\n  return (\n    <>\n      {mouserect ? (\n        <Portal>\n          <div\n            ref={setAnchorEl}\n            className={classes.tooltip}\n            // zIndex needed to go over widget drawer\n            style={{ ...styles.popper, zIndex: 100000 }}\n            {...attributes.popper}\n          >\n            {`x - ${locstr(mouserect[0], hview)}`}\n            <br />\n            {`y - ${locstr(viewHeight - mouserect[1], vview)}`}\n            <br />\n          </div>\n        </Portal>\n      ) : null}\n    </>\n  )\n})\n\nexport const TooltipWhereClicked = observer(function ({\n  model,\n  mousedown,\n  mousedownClient,\n  xdistance,\n  ydistance,\n}: {\n  model: DotplotViewModel\n  mousedown: Coord\n  mousedownClient: Coord\n  xdistance: number\n  ydistance: number\n}) {\n  const { classes } = useStyles()\n  const { hview, vview, viewHeight } = model\n  const [anchorEl, setAnchorEl] = useState<HTMLDivElement | null>(null)\n\n  // must be memoized a la https://github.com/popperjs/react-popper/issues/391\n  const virtElement = useMemo(\n    () => ({\n      getBoundingClientRect: () => {\n        const x = (mousedownClient?.[0] || 0) - (xdistance < 0 ? 0 : 0)\n        const y = (mousedownClient?.[1] || 0) - (ydistance < 0 ? 0 : 0)\n        return {\n          top: y,\n          left: x,\n          bottom: y,\n          right: x,\n          width: 0,\n          height: 0,\n          x,\n          y,\n          toJSON() {},\n        }\n      },\n    }),\n    [mousedownClient, xdistance, ydistance],\n  )\n  const { styles, attributes } = usePopper(virtElement, anchorEl, {\n    placement: xdistance < 0 ? 'right' : 'left',\n  })\n  return (\n    <>\n      {mousedown && Math.abs(xdistance) > 3 && Math.abs(ydistance) > 3 ? (\n        <Portal>\n          <div\n            ref={setAnchorEl}\n            className={classes.tooltip}\n            // zIndex needed to go over widget drawer\n            style={{ ...styles.popper, zIndex: 100000 }}\n            {...attributes.popper}\n          >\n            {`x - ${locstr(mousedown[0], hview)}`}\n            <br />\n            {`y - ${locstr(viewHeight - mousedown[1], vview)}`}\n            <br />\n          </div>\n        </Portal>\n      ) : null}\n    </>\n  )\n})\n","import React, { useState, useEffect, useRef } from 'react'\nimport { LoadingEllipses, Menu, ResizeHandle } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\nimport { transaction } from 'mobx'\nimport { makeStyles } from 'tss-react/mui'\nimport normalizeWheel from 'normalize-wheel'\n\n// locals\nimport { DotplotViewModel } from '../model'\nimport ImportForm from './ImportForm'\nimport Header from './Header'\nimport Grid from './Grid'\nimport { VerticalAxis, HorizontalAxis } from './Axes'\nimport { TooltipWhereClicked, TooltipWhereMouseovered } from './DotplotTooltip'\n\nconst blank = { left: 0, top: 0, width: 0, height: 0 }\n\nconst useStyles = makeStyles()(theme => ({\n  spacer: {\n    gridColumn: '1/2',\n    gridRow: '2/2',\n  },\n  root: {\n    position: 'relative',\n    marginBottom: theme.spacing(1),\n    overflow: 'hidden',\n  },\n\n  container: {\n    display: 'grid',\n    padding: 5,\n    position: 'relative',\n  },\n  overlay: {\n    pointerEvents: 'none',\n    overflow: 'hidden',\n    display: 'flex',\n    width: '100%',\n    gridRow: '1/2',\n    gridColumn: '2/2',\n    zIndex: 100, // needs to be below controls\n    '& path': {\n      cursor: 'crosshair',\n      fill: 'none',\n    },\n  },\n\n  content: {\n    position: 'relative',\n    gridColumn: '2/2',\n    gridRow: '1/2',\n  },\n\n  resizeHandle: {\n    height: 4,\n    background: '#ccc',\n    boxSizing: 'border-box',\n    borderTop: '1px solid #fafafa',\n  },\n}))\n\ntype Coord = [number, number] | undefined\ninterface Rect {\n  left: number\n  top: number\n}\n\n// produces offsetX/offsetY coordinates from a clientX and an element's\n// getBoundingClientRect\nfunction getOffset(coord: Coord, rect: Rect) {\n  return coord && ([coord[0] - rect.left, coord[1] - rect.top] as Coord)\n}\n\nconst RenderedComponent = observer(({ model }: { model: DotplotViewModel }) => {\n  const { classes } = useStyles()\n  return (\n    <div className={classes.overlay}>\n      {model.tracks.map(track => {\n        const [display] = track.displays\n        const { RenderingComponent } = display\n        return RenderingComponent ? (\n          <RenderingComponent\n            key={track.configuration.trackId}\n            model={display}\n          />\n        ) : null\n      })}\n    </div>\n  )\n})\n\nconst DotplotViewInternal = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { classes } = useStyles()\n  const [mousecurrClient, setMouseCurrClient] = useState<Coord>()\n  const [mousedownClient, setMouseDownClient] = useState<Coord>()\n  const [mouseOvered, setMouseOvered] = useState(false)\n  const [mouseupClient, setMouseUpClient] = useState<Coord>()\n  const ref = useRef<HTMLDivElement>(null)\n  const root = useRef<HTMLDivElement>(null)\n  const distanceX = useRef(0)\n  const distanceY = useRef(0)\n  const scheduled = useRef(false)\n  const [ctrlKeyWasUsed, setCtrlKeyWasUsed] = useState(false)\n  const svg = ref.current?.getBoundingClientRect() || blank\n  const rootRect = ref.current?.getBoundingClientRect() || blank\n  const mousedown = getOffset(mousedownClient, svg)\n  const mousecurr = getOffset(mousecurrClient, svg)\n  const mouseup = getOffset(mouseupClient, svg)\n  const mouserectClient = mouseupClient || mousecurrClient\n  const mouserect = mouseup || mousecurr\n  const xdistance = mousedown && mouserect ? mouserect[0] - mousedown[0] : 0\n  const ydistance = mousedown && mouserect ? mouserect[1] - mousedown[1] : 0\n  const { hview, vview, wheelMode, cursorMode } = model\n\n  const validPan =\n    (cursorMode === 'move' && !ctrlKeyWasUsed) ||\n    (cursorMode === 'crosshair' && ctrlKeyWasUsed)\n\n  const validSelect =\n    (cursorMode === 'move' && ctrlKeyWasUsed) ||\n    (cursorMode === 'crosshair' && !ctrlKeyWasUsed)\n\n  // use non-React wheel handler to properly prevent body scrolling\n  useEffect(() => {\n    function onWheel(origEvent: WheelEvent) {\n      const event = normalizeWheel(origEvent)\n      origEvent.preventDefault()\n\n      distanceX.current += event.pixelX\n      distanceY.current -= event.pixelY\n      if (!scheduled.current) {\n        scheduled.current = true\n\n        window.requestAnimationFrame(() => {\n          transaction(() => {\n            if (wheelMode === 'pan') {\n              hview.scroll(distanceX.current / 3)\n              vview.scroll(distanceY.current / 10)\n            } else if (wheelMode === 'zoom') {\n              if (\n                Math.abs(distanceY.current) > Math.abs(distanceX.current) * 2 &&\n                mousecurr\n              ) {\n                const val = distanceY.current < 0 ? 1.1 : 0.9\n                hview.zoomTo(hview.bpPerPx * val, mousecurr[0])\n                vview.zoomTo(\n                  vview.bpPerPx * val,\n                  rootRect.height - mousecurr[1],\n                )\n              }\n            }\n          })\n          scheduled.current = false\n          distanceX.current = 0\n          distanceY.current = 0\n        })\n      }\n    }\n    if (ref.current) {\n      const curr = ref.current\n      curr.addEventListener('wheel', onWheel)\n      return () => curr.removeEventListener('wheel', onWheel)\n    }\n    return () => {}\n  }, [hview, vview, wheelMode, mousecurr, rootRect.height])\n\n  useEffect(() => {\n    function globalMouseMove(event: MouseEvent) {\n      setMouseCurrClient([event.clientX, event.clientY])\n\n      if (mousecurrClient && mousedownClient && validPan && !mouseupClient) {\n        hview.scroll(-event.clientX + mousecurrClient[0])\n        vview.scroll(event.clientY - mousecurrClient[1])\n      }\n    }\n\n    window.addEventListener('mousemove', globalMouseMove)\n    return () => window.removeEventListener('mousemove', globalMouseMove)\n  }, [\n    validPan,\n    mousecurrClient,\n    mousedownClient,\n    cursorMode,\n    ctrlKeyWasUsed,\n    mouseupClient,\n    hview,\n    vview,\n  ])\n\n  // detect a mouseup after a mousedown was submitted, autoremoves mouseup\n  // once that single mouseup is set\n  useEffect(() => {\n    function globalMouseUp(event: MouseEvent) {\n      if (Math.abs(xdistance) > 3 && Math.abs(ydistance) > 3 && validSelect) {\n        setMouseUpClient([event.clientX, event.clientY])\n      } else {\n        setMouseDownClient(undefined)\n      }\n    }\n\n    if (mousedown && !mouseup) {\n      window.addEventListener('mouseup', globalMouseUp, true)\n      return () => window.removeEventListener('mouseup', globalMouseUp, true)\n    }\n    return () => {}\n  }, [\n    validSelect,\n    mousedown,\n    mousecurr,\n    mouseup,\n    xdistance,\n    ydistance,\n    ctrlKeyWasUsed,\n    cursorMode,\n  ])\n\n  return (\n    <div>\n      <Header\n        model={model}\n        selection={\n          !validSelect || !(mousedown && mouserect)\n            ? undefined\n            : {\n                width: Math.abs(xdistance),\n                height: Math.abs(ydistance),\n              }\n        }\n      />\n      <div\n        ref={root}\n        className={classes.root}\n        onMouseLeave={() => setMouseOvered(false)}\n        onMouseEnter={() => setMouseOvered(true)}\n      >\n        <div className={classes.container}>\n          <VerticalAxis model={model} />\n          <HorizontalAxis model={model} />\n          <div ref={ref} className={classes.content}>\n            {mouseOvered && validSelect ? (\n              <TooltipWhereMouseovered\n                model={model}\n                mouserect={mouserect}\n                mouserectClient={mouserectClient}\n                xdistance={xdistance}\n                ydistance={ydistance}\n              />\n            ) : null}\n            {validSelect ? (\n              <TooltipWhereClicked\n                model={model}\n                mousedown={mousedown}\n                mousedownClient={mousedownClient}\n                xdistance={xdistance}\n                ydistance={ydistance}\n              />\n            ) : null}\n            <div\n              style={{ cursor: ctrlKeyWasUsed ? 'pointer' : cursorMode }}\n              onMouseDown={event => {\n                if (event.button === 0) {\n                  const { clientX, clientY } = event\n                  setMouseDownClient([clientX, clientY])\n                  setMouseCurrClient([clientX, clientY])\n                  setCtrlKeyWasUsed(event.ctrlKey)\n                }\n              }}\n            >\n              <Grid model={model}>\n                {validSelect && mousedown && mouserect ? (\n                  <rect\n                    fill=\"rgba(255,0,0,0.3)\"\n                    x={Math.min(mouserect[0], mousedown[0])}\n                    y={Math.min(mouserect[1], mousedown[1])}\n                    width={Math.abs(xdistance)}\n                    height={Math.abs(ydistance)}\n                  />\n                ) : null}\n              </Grid>\n            </div>\n            <div className={classes.spacer} />\n          </div>\n          <RenderedComponent model={model} />\n          <Menu\n            open={Boolean(mouseup)}\n            onMenuItemClick={(_, callback) => {\n              callback()\n              setMouseUpClient(undefined)\n              setMouseDownClient(undefined)\n            }}\n            onClose={() => {\n              setMouseUpClient(undefined)\n              setMouseDownClient(undefined)\n            }}\n            anchorReference=\"anchorPosition\"\n            anchorPosition={\n              mouseupClient\n                ? {\n                    top: mouseupClient[1] + 50,\n                    left: mouseupClient[0] + 50,\n                  }\n                : undefined\n            }\n            style={{ zIndex: 10000 }}\n            menuItems={[\n              {\n                label: 'Zoom in',\n                onClick: () => {\n                  if (mousedown && mouseup) {\n                    model.zoomIn(mousedown, mouseup)\n                  }\n                  // below line is needed to prevent tooltip from sticking\n                  setMouseOvered(false)\n                },\n              },\n              {\n                label: 'Open linear synteny view',\n                onClick: () => {\n                  if (mousedown && mouseup) {\n                    model.onDotplotView(mousedown, mouseup)\n                  }\n                  // below line is needed to prevent tooltip from sticking\n                  setMouseOvered(false)\n                },\n              },\n            ]}\n          />\n        </div>\n        <ResizeHandle\n          onDrag={n => model.setHeight(model.height + n)}\n          className={classes.resizeHandle}\n        />\n      </div>\n    </div>\n  )\n})\nconst DotplotView = observer(({ model }: { model: DotplotViewModel }) => {\n  const { initialized, loading, error } = model\n\n  if ((!initialized && !loading) || error) {\n    return <ImportForm model={model} />\n  }\n\n  if (loading) {\n    return <LoadingEllipses variant=\"h6\" />\n  }\n\n  return <DotplotViewInternal model={model} />\n})\n\nexport default DotplotView\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { useTheme } from '@mui/material'\n\n// locals\nimport { DotplotViewModel } from '../model'\n\nexport const GridRaw = observer(function ({\n  model,\n  children,\n}: {\n  model: DotplotViewModel\n  children?: React.ReactNode\n}) {\n  const { viewWidth, viewHeight, hview, vview } = model\n  const hblocks = hview.dynamicBlocks.contentBlocks\n  const vblocks = vview.dynamicBlocks.contentBlocks\n  if (!hblocks.length || !vblocks.length) {\n    return null\n  }\n  const htop = hview.displayedRegionsTotalPx - hview.offsetPx\n  const vtop = vview.displayedRegionsTotalPx - vview.offsetPx\n  const hbottom = hblocks[0].offsetPx - hview.offsetPx\n  const vbottom = vblocks[0].offsetPx - vview.offsetPx\n  const theme = useTheme()\n  const stroke = theme.palette.divider\n\n  // Uses math.max/min avoid making very large SVG rect offscreen element,\n  // which can sometimes fail to draw\n  const rx = Math.max(hbottom, 0)\n  const ry = Math.max(viewHeight - vtop, 0)\n  const w = Math.min(htop - hbottom, viewWidth)\n  const h = Math.min(viewHeight - vbottom - ry, viewHeight)\n\n  let lastx = Infinity\n  let lasty = Infinity\n  return (\n    <>\n      <rect\n        x={rx}\n        y={ry}\n        width={w}\n        height={h}\n        fill={theme.palette.background.default}\n      />\n      <g>\n        {hblocks.map(region => {\n          const x = region.offsetPx - hview.offsetPx\n          const render = Math.floor(x) !== Math.floor(lastx)\n          if (render) {\n            lastx = x\n          }\n          return render ? (\n            <line\n              key={JSON.stringify(region)}\n              x1={x}\n              y1={0}\n              x2={x}\n              y2={viewHeight}\n              stroke={stroke}\n            />\n          ) : null\n        })}\n        {vblocks.map(region => {\n          const y = viewHeight - (region.offsetPx - vview.offsetPx)\n          const render = Math.floor(y) !== Math.floor(lasty)\n          if (render) {\n            lasty = y\n          }\n          return render ? (\n            <line\n              key={JSON.stringify(region)}\n              x1={0}\n              y1={y}\n              x2={viewWidth}\n              y2={y}\n              stroke={stroke}\n            />\n          ) : null\n        })}\n        <line x1={htop} y1={0} x2={htop} y2={viewHeight} stroke={stroke} />\n        <line\n          x1={0}\n          y1={viewHeight - vtop}\n          x2={viewWidth}\n          y2={viewHeight - vtop}\n          stroke={stroke}\n        />\n      </g>\n      {children}\n    </>\n  )\n})\n\nexport default function Grid({\n  model,\n  children,\n}: {\n  model: DotplotViewModel\n  children?: React.ReactNode\n}) {\n  const { viewWidth, viewHeight } = model\n  return (\n    <svg\n      width={viewWidth}\n      height={viewHeight}\n      style={{ background: 'rgba(0,0,0,0.12)' }}\n    >\n      <GridRaw model={model}>{children}</GridRaw>\n    </svg>\n  )\n}\n"],"names":["useStyles","makeStyles","vtext","gridColumn","gridRow","pointerEvents","userSelect","htext","HorizontalAxis","observer","model","viewWidth","borderY","classes","React","width","height","className","HorizontalAxisRaw","borderX","hview","htextRotation","hticks","offsetPx","dynamicBlocks","bpPerPx","dblocks","contentBlocks","hide","getBlockLabelKeysToHide","theme","useTheme","hviewSnap","getSnapshot","staticBlocks","ticks","map","tick","bpToPx","refName","coord","base","self","filter","f","undefined","region","has","key","x","xoff","Math","floor","transform","JSON","stringify","y","fill","palette","text","primary","fontSize","dominantBaseline","textAnchor","x1","x2","y1","y2","type","strokeWidth","stroke","grey","t","getTickDisplayStr","assemblyNames","join","VerticalAxis","viewHeight","VerticalAxisRaw","vview","vtextRotation","vticks","vviewSnap","yoff","getAdapter","radioOption","assembly1","assembly2","fileLocation","bed1Location","bed2Location","pafLocation","queryAssembly","targetAssembly","outLocation","deltaLocation","chainLocation","mcscanAnchorsLocation","mcscanSimpleAnchorsLocation","Error","setSessionTrackData","setBed2Location","useState","setBed1Location","setFileLocation","value","setValue","error","setError","fileName","sessionTrackData","uri","localPath","name","str","r","split","pop","extName","endsWith","slice","stripGz","useEffect","fn","trackId","Date","now","adapter","e","console","Paper","style","padding","ErrorMessage","Typography","textAlign","RadioGroup","onChange","event","target","Grid","container","justifyContent","item","FormControlLabel","control","Radio","label","margin","href","display","FileSelector","description","location","setLocation","loc","setShowTrackId","session","getSession","tracks","sessionTracks","filteredTracks","track","readConfObject","includes","resetTrack","paragraph","TrackSelectorIcon","length","Select","MenuItem","getTrackName","importFormContainer","spacing","assemblySelector","TrackSelector","choice","setChoice","FormControl","FormLabel","id","row","ImportCustomTrack","ImportSyntenyTrackSelector","setAssembly2","setAssembly1","showTrackId","displayError","Container","alignItems","AssemblySelector","selected","val","Button","onClick","isSessionWithAddTracks","transaction","addTrackConf","toggleTrack","showTrack","setViews","setAssemblyNames","variant","color","WarningDialog","lazy","trackWarnings","displays","warnings","shown","setShown","Alert","severity","handleClose","dpad","gridTemplateColumns","position","right","zIndex","top","icon","elevation","IconButton","scroll","ArrowDropUp","ArrowLeft","ArrowRight","ArrowDropDown","zoomIn","ZoomIn","zoomOut","ZoomOut","CursorMove","props","SvgIcon","d","CursorMouse","zoomOutButton","zoomInButton","activateTrackSelector","title","CascadingMenuButton","menuItems","squareView","squareViewProportional","showAllRegions","setDrawCigar","drawCigar","checked","setShowPanButtons","showPanButtons","subMenu","setCursorMode","cursorMode","setWheelMode","wheelMode","MoreVert","bp","marginLeft","spacer","flexGrow","headerBar","selection","DotplotControls","getBpDisplayStr","currBp","DotplotWarnings","PanButtons","tooltip","backgroundColor","alpha","borderRadius","shape","common","white","fontFamily","typography","pxToRem","lineHeight","round","maxWidth","wordWrap","blank","left","TooltipWhereMouseovered","mouserect","mouserectClient","xdistance","ydistance","anchorEl","setAnchorEl","ref","useRef","w","current","getBoundingClientRect","offset","virtElement","useMemo","bottom","toJSON","styles","attributes","usePopper","placement","Portal","_extends","popper","locstr","TooltipWhereClicked","mousedown","mousedownClient","abs","root","marginBottom","overflow","overlay","cursor","content","resizeHandle","background","boxSizing","borderTop","getOffset","rect","RenderedComponent","RenderingComponent","configuration","DotplotViewInternal","mousecurrClient","setMouseCurrClient","setMouseDownClient","mouseOvered","setMouseOvered","mouseupClient","setMouseUpClient","distanceX","distanceY","scheduled","ctrlKeyWasUsed","setCtrlKeyWasUsed","svg","rootRect","mousecurr","mouseup","validPan","validSelect","onWheel","origEvent","normalizeWheel","preventDefault","pixelX","pixelY","window","requestAnimationFrame","zoomTo","curr","addEventListener","removeEventListener","globalMouseMove","clientX","clientY","globalMouseUp","Header","onMouseLeave","onMouseEnter","onMouseDown","button","ctrlKey","min","Menu","open","Boolean","onMenuItemClick","_","callback","onClose","anchorReference","anchorPosition","onDotplotView","ResizeHandle","onDrag","n","setHeight","initialized","loading","ImportForm","LoadingEllipses","GridRaw","children","hblocks","vblocks","htop","displayedRegionsTotalPx","vtop","hbottom","vbottom","divider","rx","max","ry","h","lastx","Infinity","lasty","default","render"],"sourceRoot":""}