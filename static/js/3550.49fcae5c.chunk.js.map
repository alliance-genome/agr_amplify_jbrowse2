{"version":3,"file":"static/js/3550.49fcae5c.chunk.js","mappings":"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","sources":["../../../packages/core/BaseFeatureWidget/SequenceFeatureDetails/dialogs/SettingsDialog.tsx","../../../node_modules/@mui/material/internal/svg-icons/RadioButtonUnchecked.js","../../../node_modules/@mui/material/internal/svg-icons/RadioButtonChecked.js","../../../node_modules/@mui/material/Radio/RadioButtonIcon.js","../../../node_modules/@mui/material/Radio/Radio.js","../../../node_modules/@mui/material/Radio/radioClasses.js","../../../node_modules/@mui/material/RadioGroup/RadioGroup.js","../../../node_modules/@mui/material/RadioGroup/RadioGroupContext.js","../../../node_modules/@mui/material/RadioGroup/radioGroupClasses.js","../../../node_modules/@mui/material/RadioGroup/useRadioGroup.js"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  Button,\n  DialogContent,\n  DialogActions,\n  FormControlLabel,\n  FormControl,\n  FormLabel,\n  Radio,\n  RadioGroup,\n  TextField,\n  TextFieldProps,\n} from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\n\n// locals\nimport { SequenceFeatureDetailsModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  formElt: {\n    margin: theme.spacing(3),\n    width: 400,\n  },\n  dialogContent: {\n    width: '80em',\n  },\n  root: {\n    padding: 4,\n  },\n}))\n\nfunction TextField2(props: TextFieldProps) {\n  return (\n    <div>\n      <TextField {...props} />\n    </div>\n  )\n}\n\nfunction FormControl2({ children }: { children: React.ReactNode }) {\n  return (\n    <div>\n      <FormControl>{children}</FormControl>\n    </div>\n  )\n}\n\nconst SequenceFeatureSettingsDialog = observer(function ({\n  handleClose,\n  model,\n}: {\n  handleClose: () => void\n  model: SequenceFeatureDetailsModel\n}) {\n  const { classes } = useStyles()\n  const { upperCaseCDS } = model\n  const [intronBp, setIntronBp] = useState(`${model.intronBp}`)\n  const [upDownBp, setUpDownBp] = useState(`${model.upDownBp}`)\n  const intronBpValid = !Number.isNaN(+intronBp)\n  const upDownBpValid = !Number.isNaN(+upDownBp)\n  return (\n    <Dialog\n      maxWidth=\"xl\"\n      open\n      onClose={() => handleClose()}\n      title=\"Feature sequence settings\"\n    >\n      <DialogContent className={classes.dialogContent}>\n        <TextField2\n          label=\"Number of intronic bases around splice site to display\"\n          className={classes.formElt}\n          value={intronBp}\n          helperText={!intronBpValid ? 'Not a number' : ''}\n          error={!intronBpValid}\n          onChange={event => setIntronBp(event.target.value)}\n        />\n        <TextField2\n          label=\"Number of bases up/down stream of feature to display\"\n          className={classes.formElt}\n          value={upDownBp}\n          helperText={!upDownBpValid ? 'Not a number' : ''}\n          error={!upDownBpValid}\n          onChange={event => setUpDownBp(event.target.value)}\n        />\n        <FormControl2>\n          <FormLabel>Sequence capitalization</FormLabel>\n          <RadioGroup\n            value={upperCaseCDS ? 'cds' : 'unchanged'}\n            onChange={e => model.setUpperCaseCDS(e.target.value === 'cds')}\n          >\n            <FormControlLabel\n              value=\"cds\"\n              control={<Radio className={classes.root} size=\"small\" />}\n              label=\"Capitalize CDS and lower case everything else\"\n            />\n            <FormControlLabel\n              value=\"unchanged\"\n              control={<Radio className={classes.root} size=\"small\" />}\n              label=\"Capitalization from reference genome sequence\"\n            />\n          </RadioGroup>\n        </FormControl2>\n      </DialogContent>\n\n      <DialogActions>\n        <Button\n          onClick={() => {\n            model.setIntronBp(+intronBp)\n            model.setUpDownBp(+upDownBp)\n            handleClose()\n          }}\n          disabled={!intronBpValid || !upDownBpValid}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Submit\n        </Button>\n        <Button\n          onClick={() => handleClose()}\n          color=\"secondary\"\n          autoFocus\n          variant=\"contained\"\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n\nexport default SequenceFeatureSettingsDialog\n","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport RadioButtonUncheckedIcon from '../internal/svg-icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '../internal/svg-icons/RadioButtonChecked';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RadioButtonIconRoot = styled('span', {\n  shouldForwardProp: rootShouldForwardProp\n})({\n  position: 'relative',\n  display: 'flex'\n});\nconst RadioButtonIconBackground = styled(RadioButtonUncheckedIcon)({\n  // Scale applied to prevent dot misalignment in Safari\n  transform: 'scale(1)'\n});\nconst RadioButtonIconDot = styled(RadioButtonCheckedIcon)(({\n  theme,\n  ownerState\n}) => _extends({\n  left: 0,\n  position: 'absolute',\n  transform: 'scale(0)',\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeIn,\n    duration: theme.transitions.duration.shortest\n  })\n}, ownerState.checked && {\n  transform: 'scale(1)',\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeOut,\n    duration: theme.transitions.duration.shortest\n  })\n}));\n\n/**\n * @ignore - internal component.\n */\nfunction RadioButtonIcon(props) {\n  const {\n    checked = false,\n    classes = {},\n    fontSize\n  } = props;\n  const ownerState = _extends({}, props, {\n    checked\n  });\n  return /*#__PURE__*/_jsxs(RadioButtonIconRoot, {\n    className: classes.root,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(RadioButtonIconBackground, {\n      fontSize: fontSize,\n      className: classes.background,\n      ownerState: ownerState\n    }), /*#__PURE__*/_jsx(RadioButtonIconDot, {\n      fontSize: fontSize,\n      className: classes.dot,\n      ownerState: ownerState\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default RadioButtonIcon;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"checkedIcon\", \"color\", \"icon\", \"name\", \"onChange\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nimport radioClasses, { getRadioUtilityClass } from './radioClasses';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, size !== 'medium' && `size${capitalize(size)}`]\n  };\n  return _extends({}, classes, composeClasses(slots, getRadioUtilityClass, classes));\n};\nconst RadioRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiRadio',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.size !== 'medium' && styles[`size${capitalize(ownerState.size)}`], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${radioClasses.checked}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  }\n}, {\n  [`&.${radioClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  }\n\n  // The value could be a number, the DOM will stringify it anyway.\n  return String(a) === String(b);\n}\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {\n  checked: true\n});\nconst defaultIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {});\nconst Radio = /*#__PURE__*/React.forwardRef(function Radio(inProps, ref) {\n  var _defaultIcon$props$fo, _defaultCheckedIcon$p;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiRadio'\n  });\n  const {\n      checked: checkedProp,\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon = defaultIcon,\n      name: nameProp,\n      onChange: onChangeProp,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const radioGroup = useRadioGroup();\n  let checked = checkedProp;\n  const onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  let name = nameProp;\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = areEqualValues(radioGroup.value, props.value);\n    }\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n  return /*#__PURE__*/_jsx(RadioRoot, _extends({\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_defaultIcon$props$fo = defaultIcon.props.fontSize) != null ? _defaultIcon$props$fo : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(checkedIcon, {\n      fontSize: (_defaultCheckedIcon$p = defaultCheckedIcon.props.fontSize) != null ? _defaultCheckedIcon$p : size\n    }),\n    ownerState: ownerState,\n    classes: classes,\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <RadioButtonIcon checked />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <RadioButtonIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Radio;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getRadioUtilityClass(slot) {\n  return generateUtilityClass('MuiRadio', slot);\n}\nconst radioClasses = generateUtilityClasses('MuiRadio', ['root', 'checked', 'disabled', 'colorPrimary', 'colorSecondary', 'sizeSmall']);\nexport default radioClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"actions\", \"children\", \"className\", \"defaultValue\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport FormGroup from '../FormGroup';\nimport { getRadioGroupUtilityClass } from './radioGroupClasses';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport RadioGroupContext from './RadioGroupContext';\nimport useId from '../utils/useId';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = props => {\n  const {\n    classes,\n    row,\n    error\n  } = props;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getRadioGroupUtilityClass, classes);\n};\nconst RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  const {\n      // private\n      // eslint-disable-next-line react/prop-types\n      actions,\n      children,\n      className,\n      defaultValue,\n      name: nameProp,\n      onChange,\n      value: valueProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootRef = React.useRef(null);\n  const classes = useUtilityClasses(props);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'RadioGroup'\n  });\n  React.useImperativeHandle(actions, () => ({\n    focus: () => {\n      let input = rootRef.current.querySelector('input:not(:disabled):checked');\n      if (!input) {\n        input = rootRef.current.querySelector('input:not(:disabled)');\n      }\n      if (input) {\n        input.focus();\n      }\n    }\n  }), []);\n  const handleRef = useForkRef(ref, rootRef);\n  const name = useId(nameProp);\n  const contextValue = React.useMemo(() => ({\n    name,\n    onChange(event) {\n      setValueState(event.target.value);\n      if (onChange) {\n        onChange(event, event.target.value);\n      }\n    },\n    value\n  }), [name, onChange, setValueState, value]);\n  return /*#__PURE__*/_jsx(RadioGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(FormGroup, _extends({\n      role: \"radiogroup\",\n      ref: handleRef,\n      className: clsx(classes.root, className)\n    }, other, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {string} value The value of the selected radio button.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst RadioGroupContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\nexport default RadioGroupContext;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getRadioGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiRadioGroup', slot);\n}\nconst radioGroupClasses = generateUtilityClasses('MuiRadioGroup', ['root', 'row', 'error']);\nexport default radioGroupClasses;","'use client';\n\nimport * as React from 'react';\nimport RadioGroupContext from './RadioGroupContext';\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}"],"names":["useStyles","makeStyles","theme","formElt","margin","spacing","width","dialogContent","root","padding","TextField2","props","React","TextField","FormControl2","children","FormControl","observer","handleClose","model","classes","upperCaseCDS","intronBp","setIntronBp","useState","upDownBp","setUpDownBp","intronBpValid","Number","isNaN","upDownBpValid","Dialog","maxWidth","open","onClose","title","DialogContent","className","label","value","helperText","error","onChange","event","target","FormLabel","RadioGroup","e","setUpperCaseCDS","FormControlLabel","control","Radio","size","DialogActions","Button","onClick","disabled","color","variant","autoFocus","createSvgIcon","d","RadioButtonIconRoot","styled","shouldForwardProp","rootShouldForwardProp","position","display","RadioButtonIconBackground","RadioButtonUnchecked","transform","RadioButtonIconDot","RadioButtonChecked","ownerState","left","transition","transitions","create","easing","easeIn","duration","shortest","checked","easeOut","fontSize","background","dot","_excluded","RadioRoot","SwitchBase","prop","name","slot","overridesResolver","styles","capitalize","vars","palette","text","secondary","disableRipple","backgroundColor","action","activeChannel","mainChannel","hoverOpacity","active","main","radioClasses","defaultCheckedIcon","defaultIcon","inProps","ref","_defaultIcon$props$fo","_defaultCheckedIcon$p","useThemeProps","checkedProp","checkedIcon","icon","nameProp","onChangeProp","other","slots","composeClasses","useUtilityClasses","radioGroup","useRadioGroup","createChainedFunction","a","b","String","type","clsx","getRadioUtilityClass","actions","defaultValue","valueProp","rootRef","row","setValueState","controlled","default","focus","input","current","querySelector","handleRef","contextValue","Provider","role","undefined","getRadioGroupUtilityClass"],"sourceRoot":""}