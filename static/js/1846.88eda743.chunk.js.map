{"version":3,"file":"static/js/1846.88eda743.chunk.js","mappings":"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","sources":["../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/BasicValue.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/FieldName.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/SimpleField.tsx","../../../packages/core/BaseFeatureWidget/SequenceFeatureDetails/index.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/util.ts","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/DataGridDetails.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/ArrayValue.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/UriField.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/Attributes.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/index.tsx","../../../packages/core/BaseFeatureWidget/util.tsx","../../../packages/core/ui/ResizeBar.tsx","../../../packages/core/ui/useResizeBar.tsx"],"sourcesContent":["import React from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport isObject from 'is-object'\nimport { Link } from '@mui/material'\n\n// locals\nimport { SanitizedHTML } from '../../ui'\n\nconst useStyles = makeStyles()(theme => ({\n  fieldValue: {\n    wordBreak: 'break-word',\n    maxHeight: 300,\n    fontSize: 12,\n    padding: theme.spacing(0.5),\n    overflow: 'auto',\n  },\n}))\n\nexport default function BasicValue({ value }: { value: unknown }) {\n  const { classes } = useStyles()\n  const isLink = `${value}`.match(/^https?:\\/\\//)\n  return (\n    <div className={classes.fieldValue}>\n      {React.isValidElement(value) ? (\n        value\n      ) : isLink ? (\n        <Link href={`${value}`}>{`${value}`}</Link>\n      ) : (\n        <SanitizedHTML\n          html={isObject(value) ? JSON.stringify(value) : String(value)}\n        />\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Tooltip } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()(theme => ({\n  fieldDescription: {\n    '&:hover': {\n      background: theme.palette.mode === 'dark' ? '#e65100' : 'yellow',\n    },\n  },\n  fieldName: {\n    wordBreak: 'break-all',\n    minWidth: 90,\n    borderBottom: '1px solid #0003',\n    fontSize: 12,\n    background: theme.palette.action.disabledBackground,\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(0.5),\n  },\n}))\n\nexport default function FieldName({\n  description,\n  name,\n  width,\n  prefix = [],\n}: {\n  description?: React.ReactNode\n  name: string\n  prefix?: string[]\n  width?: number\n}) {\n  const { classes, cx } = useStyles()\n  const val = [...prefix, name].join('.')\n  return description ? (\n    <Tooltip title={description} placement=\"left\">\n      <div className={cx(classes.fieldDescription, classes.fieldName)}>\n        {val}\n      </div>\n    </Tooltip>\n  ) : (\n    <div className={classes.fieldName} style={{ width: width }}>\n      {val}\n    </div>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport FieldName from './FieldName'\nimport BasicValue from './BasicValue'\n\nconst useStyles = makeStyles()({\n  field: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n})\n\nexport default function SimpleField({\n  name,\n  value,\n  description,\n  prefix,\n  width,\n}: {\n  description?: React.ReactNode\n  name: string\n  value: unknown\n  prefix?: string[]\n  width?: number\n}) {\n  const { classes } = useStyles()\n  return value !== null && value !== undefined ? (\n    <div className={classes.field}>\n      <FieldName\n        prefix={prefix}\n        description={description}\n        name={name}\n        width={width}\n      />\n      <BasicValue value={value} />\n    </div>\n  ) : null\n}\n","import React, { lazy, useState, Suspense } from 'react'\nimport { Button, FormControl, IconButton } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport { BaseProps } from './../types'\nimport { LoadingEllipses } from '../../ui'\n\n// icons\nimport HelpIcon from '@mui/icons-material/Help'\n\n// lazies\nconst HelpDlg = lazy(() => import('./SequenceHelpDialog'))\nconst SequenceFeatureDetails = lazy(() => import('./SequenceFeatureDetails'))\n\nconst useStyles = makeStyles()(theme => ({\n  formControl: {\n    margin: 0,\n  },\n\n  container: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n  },\n}))\n\n// display the stitched-together sequence of a gene's CDS, cDNA, or protein\n// sequence. this is a best effort and weird genomic phenomena could lead these\n// to not be 100% accurate\nexport default function SequenceFeaturePanel({ model, feature }: BaseProps) {\n  const { classes } = useStyles()\n  const [shown, setShown] = useState(false)\n  const [helpShown, setHelpShown] = useState(false)\n\n  return !model ? null : (\n    <div className={classes.container}>\n      <Button variant=\"contained\" onClick={() => setShown(!shown)}>\n        {shown ? 'Hide feature sequence' : 'Show feature sequence'}\n      </Button>\n      <FormControl className={classes.formControl}>\n        <IconButton onClick={() => setHelpShown(true)}>\n          <HelpIcon />\n        </IconButton>\n      </FormControl>\n      {shown ? (\n        <Suspense fallback={<LoadingEllipses />}>\n          <SequenceFeatureDetails\n            /* eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion */\n            key={feature.uniqueId as string}\n            model={model}\n            feature={feature}\n          />\n        </Suspense>\n      ) : null}\n      {helpShown ? (\n        <Suspense fallback={<div />}>\n          <HelpDlg handleClose={() => setHelpShown(false)} />\n        </Suspense>\n      ) : null}\n    </div>\n  )\n}\n","import isObject from 'is-object'\nimport { max, measureText } from '../../util'\nimport { ellipses } from '../util'\n\nexport function isEmpty(obj: Record<string, unknown>) {\n  return Object.keys(obj).length === 0\n}\n\nexport function generateTitle(name: unknown, id: unknown, type: unknown) {\n  return [ellipses(`${name}` || `${id}`), `${type}`]\n    .filter(f => !!f)\n    .join(' - ')\n}\n\nexport function generateMaxWidth(array: unknown[][], prefix: string[]) {\n  return (\n    Math.ceil(\n      max(array.map(key => measureText([...prefix, key[0]].join('.'), 12))),\n    ) + 10\n  )\n}\n\nexport function toLocale(n: number) {\n  return n.toLocaleString('en-US')\n}\n\n// pick using a path from an object, similar to _.get from lodash with special\n// logic for Descriptions from e.g. VCF headers\n//\n// @param arr  example ['a','b'], obj = {a:{b:'hello}}\n// @returns hello (with special addition to grab description also)\nexport function accessNested(arr: string[], obj: Record<string, unknown> = {}) {\n  let obj2: unknown = obj\n  arr.forEach(elt => {\n    if (isObject(obj2)) {\n      obj2 = obj2[elt]\n    }\n  })\n  return typeof obj2 === 'string'\n    ? obj2\n    : isObject(obj2) && typeof obj2?.Description === 'string'\n      ? obj2.Description\n      : undefined\n}\n","import React, { useState } from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid'\nimport { Checkbox, FormControlLabel, Typography } from '@mui/material'\n\n// locals\nimport { measureGridWidth, getStr } from '../../util'\nimport ResizeBar from '../../ui/ResizeBar'\nimport FieldName from './FieldName'\nimport { useResizeBar } from '../../ui/useResizeBar'\nimport { SanitizedHTML } from '../../ui'\n\nconst useStyles = makeStyles()(theme => ({\n  margin: {\n    margin: theme.spacing(1),\n    width: '100%',\n  },\n\n  cell: {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n}))\n\ninterface Entry {\n  id: string\n  [key: string]: string\n}\n\nexport default function DataGridDetails({\n  value,\n  prefix,\n  name,\n}: {\n  name: string\n  prefix?: string[]\n  value: Record<string, unknown>[]\n}) {\n  const { classes } = useStyles()\n  const { ref, scrollLeft } = useResizeBar()\n  const [checked, setChecked] = useState(false)\n  const keys = Object.keys(value[0]).sort()\n  const unionKeys = new Set(keys)\n\n  // avoids key 'id' from being used in row data\n  const rows = Object.entries(value).map(([k, val]) => {\n    const { id, ...rest } = val\n    return {\n      id: k, // used by material UI\n      identifier: id, // renamed from id to identifier\n      ...rest,\n    } as Entry\n  })\n\n  for (const val of value) {\n    for (const k of Object.keys(val)) {\n      unionKeys.add(k)\n    }\n  }\n  // avoids key 'id' from being used in column names, and tries\n  // to make it at the start of the colNames array\n  let colNames: string[]\n  if (unionKeys.has('id')) {\n    unionKeys.delete('id')\n    colNames = ['identifier', ...unionKeys]\n  } else {\n    colNames = [...unionKeys]\n  }\n  const [widths, setWidths] = useState(\n    colNames.map(e => measureGridWidth(rows.map(r => r[e]))),\n  )\n\n  if (unionKeys.size < keys.length + 5) {\n    return (\n      <>\n        <FieldName prefix={prefix} name={name} />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={checked}\n              onChange={event => setChecked(event.target.checked)}\n            />\n          }\n          label={<Typography variant=\"body2\">Show options</Typography>}\n        />\n        <div className={classes.margin} ref={ref}>\n          <ResizeBar\n            widths={widths}\n            setWidths={setWidths}\n            scrollLeft={scrollLeft}\n          />\n          <DataGrid\n            disableRowSelectionOnClick\n            // @ts-expect-error the rows gets confused by the renderCell of the\n            // columns below\n            rows={rows}\n            rowCount={25}\n            rowHeight={25}\n            columnHeaderHeight={35}\n            hideFooter={rows.length < 25}\n            slots={{ toolbar: checked ? GridToolbar : null }}\n            slotProps={{\n              toolbar: {\n                printOptions: {\n                  disableToolbarButton: true,\n                },\n              },\n            }}\n            columns={colNames.map((val, index) => ({\n              field: val,\n              renderCell: params => {\n                const value = params.value as string\n                return (\n                  <div className={classes.cell}>\n                    <SanitizedHTML html={getStr(value)} />\n                  </div>\n                )\n              },\n              width: widths[index],\n            }))}\n          />\n        </div>\n      </>\n    )\n  }\n  return null\n}\n","import React from 'react'\nimport isObject from 'is-object'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport Attributes from './Attributes'\nimport FieldName from './FieldName'\nimport BasicValue from './BasicValue'\n\nconst useStyles = makeStyles()(theme => ({\n  field: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n\n  fieldSubvalue: {\n    wordBreak: 'break-word',\n    maxHeight: 300,\n    padding: theme.spacing(0.5),\n    border: `1px solid ${theme.palette.action.selected}`,\n    boxSizing: 'border-box',\n    overflow: 'auto',\n  },\n}))\n\nexport default function ArrayValue({\n  name,\n  value,\n  description,\n  prefix = [],\n}: {\n  description?: React.ReactNode\n  name: string\n  value: unknown[]\n  prefix?: string[]\n}) {\n  const { classes } = useStyles()\n  if (value.length === 1) {\n    return isObject(value[0]) ? (\n      <Attributes attributes={value[0]} prefix={[...prefix, name]} />\n    ) : (\n      <div className={classes.field}>\n        <FieldName prefix={prefix} description={description} name={name} />\n        <BasicValue value={value[0]} />\n      </div>\n    )\n  } else if (value.every(val => isObject(val))) {\n    return (\n      <>\n        {value.map((val, i) => (\n          <Attributes\n            key={JSON.stringify(val) + '-' + i}\n            attributes={val as Record<string, unknown>}\n            prefix={[...prefix, name + '-' + i]}\n          />\n        ))}\n      </>\n    )\n  } else {\n    return (\n      <div className={classes.field}>\n        <FieldName prefix={prefix} description={description} name={name} />\n        {value.map((val, i) => (\n          <div\n            key={JSON.stringify(val) + '-' + i}\n            className={classes.fieldSubvalue}\n          >\n            <BasicValue value={val} />\n          </div>\n        ))}\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport FieldName from './FieldName'\nimport { makeStyles } from 'tss-react/mui'\nimport BasicValue from './BasicValue'\n\nconst useStyles = makeStyles()({\n  field: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n})\n\nexport default function UriField({\n  value,\n  prefix,\n  name,\n}: {\n  value: { uri: string; baseUri?: string }\n  name: string\n  prefix: string[]\n}) {\n  const { classes } = useStyles()\n  const { uri, baseUri = '' } = value\n  let href\n  try {\n    href = new URL(uri, baseUri).href\n  } catch (e) {\n    href = uri\n  }\n  return (\n    <div className={classes.field}>\n      <FieldName prefix={prefix} name={name} />\n      <BasicValue value={href} />\n    </div>\n  )\n}\n","import React from 'react'\nimport isObject from 'is-object'\n\n// locals\nimport { accessNested, generateMaxWidth } from './util'\nimport { isUriLocation } from '../../util'\nimport DataGridDetails from './DataGridDetails'\nimport ArrayValue from './ArrayValue'\nimport UriAttribute from './UriField'\nimport SimpleField from './SimpleField'\n\nconst MAX_FIELD_NAME_WIDTH = 170\n\n// these are always omitted as too detailed\nconst globalOmit = [\n  '__jbrowsefmt',\n  'length',\n  'position',\n  'subfeatures',\n  'uniqueId',\n  'exonFrames',\n  'parentId',\n  'thickStart',\n  'thickEnd',\n]\n\nexport default function Attributes(props: {\n  attributes: {\n    [key: string]: unknown\n    __jbrowsefmt?: Record<string, unknown>\n  }\n  omit?: string[]\n  omitSingleLevel?: string[]\n  formatter?: (val: unknown, key: string) => React.ReactNode\n  descriptions?: Record<string, React.ReactNode>\n  prefix?: string[]\n  hideUris?: boolean\n}) {\n  const {\n    attributes,\n    omit = [],\n    omitSingleLevel = [],\n    descriptions,\n    formatter = val => val,\n    hideUris,\n    prefix = [],\n  } = props\n\n  const omits = new Set([...omit, ...globalOmit, ...omitSingleLevel])\n  const { __jbrowsefmt, ...rest } = attributes\n  const formattedAttributes = { ...rest, ...__jbrowsefmt }\n\n  const maxLabelWidth = generateMaxWidth(\n    Object.entries(formattedAttributes).filter(\n      ([k, v]) => v !== undefined && !omits.has(k),\n    ),\n    prefix,\n  )\n\n  return (\n    <>\n      {Object.entries(formattedAttributes)\n        .filter(([k, v]) => v !== undefined && !omits.has(k))\n        .map(([key, value]) => {\n          const description = accessNested([...prefix, key], descriptions)\n          if (Array.isArray(value)) {\n            // check if it looks like an array of objects, which could be used\n            // in data grid\n            return value.length > 1 && value.every(val => isObject(val)) ? (\n              <DataGridDetails\n                key={key}\n                name={key}\n                prefix={prefix}\n                value={value}\n              />\n            ) : (\n              <ArrayValue\n                key={key}\n                name={key}\n                value={value}\n                description={description}\n                prefix={prefix}\n              />\n            )\n          } else if (isObject(value)) {\n            const { omitSingleLevel, ...rest } = props\n            return isUriLocation(value) ? (\n              hideUris ? null : (\n                <UriAttribute\n                  key={key}\n                  name={key}\n                  prefix={prefix}\n                  value={value}\n                />\n              )\n            ) : (\n              <Attributes\n                {...rest}\n                key={key}\n                attributes={value}\n                descriptions={descriptions}\n                prefix={[...prefix, key]}\n              />\n            )\n          } else {\n            return (\n              <SimpleField\n                key={key}\n                name={key}\n                value={formatter(value, key)}\n                description={description}\n                prefix={prefix}\n                width={Math.min(maxLabelWidth, MAX_FIELD_NAME_WIDTH)}\n              />\n            )\n          }\n        })}\n    </>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState } from 'react'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Divider,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { IAnyStateTreeNode } from 'mobx-state-tree'\n\n// icons\nimport ExpandMore from '@mui/icons-material/ExpandMore'\n\n// locals\nimport {\n  getEnv,\n  getSession,\n  assembleLocString,\n  ParsedLocString,\n} from '../../util'\nimport { ErrorMessage } from '../../ui'\nimport SequenceFeatureDetails from '../SequenceFeatureDetails'\nimport { BaseCardProps, BaseProps } from '../types'\nimport { SimpleFeatureSerialized } from '../../util'\nimport SimpleField from './SimpleField'\nimport Attributes from './Attributes'\nimport { generateTitle, isEmpty, toLocale } from './util'\n\n// coreDetails are omitted in some circumstances\nconst coreDetails = [\n  'name',\n  'start',\n  'end',\n  'strand',\n  'refName',\n  'description',\n  'type',\n]\n\nconst useStyles = makeStyles()(theme => ({\n  expansionPanelDetails: {\n    display: 'block',\n    padding: theme.spacing(1),\n  },\n  expandIcon: {\n    color: theme.palette.tertiary?.contrastText || '#fff',\n  },\n}))\n\nexport function BaseCard({\n  children,\n  title,\n  defaultExpanded = true,\n}: BaseCardProps) {\n  const { classes } = useStyles()\n  const [expanded, setExpanded] = useState(defaultExpanded)\n  return (\n    <Accordion\n      expanded={expanded}\n      onChange={() => setExpanded(s => !s)}\n      TransitionProps={{ unmountOnExit: true, timeout: 150 }}\n    >\n      <AccordionSummary\n        expandIcon={<ExpandMore className={classes.expandIcon} />}\n      >\n        <Typography variant=\"button\"> {title}</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.expansionPanelDetails}>\n        {children}\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n\nfunction Position(props: BaseProps) {\n  const { feature } = props\n  const strand = feature.strand as number\n  const strandMap: Record<string, string> = {\n    '-1': '-',\n    '0': '',\n    '1': '+',\n  }\n  const str = strandMap[strand] ? `(${strandMap[strand]})` : ''\n  // @ts-expect-error\n  const loc = assembleLocString(feature as ParsedLocString)\n  return <>{`${loc} ${str}`}</>\n}\n\nfunction CoreDetails(props: BaseProps) {\n  const { feature } = props\n  const obj = feature as SimpleFeatureSerialized & {\n    start: number\n    end: number\n    assemblyName?: string\n    strand: number\n    refName: string\n    __jbrowsefmt: {\n      start?: number\n      assemblyName?: string\n      end?: number\n      refName?: string\n      name?: string\n    }\n  }\n\n  // eslint-disable-next-line no-underscore-dangle\n  const formattedFeat = { ...obj, ...obj.__jbrowsefmt }\n  const { start, end } = formattedFeat\n\n  const displayedDetails: Record<string, any> = {\n    ...formattedFeat,\n    length: toLocale(end - start),\n  }\n\n  const coreRenderedDetails = {\n    description: 'Description',\n    name: 'Name',\n    length: 'Length',\n    type: 'Type',\n  }\n  return (\n    <>\n      <SimpleField\n        name=\"Position\"\n        value={<Position {...props} feature={formattedFeat} />}\n      />\n      {Object.entries(coreRenderedDetails)\n        .map(([key, name]) => [name, displayedDetails[key]])\n        .filter(([, value]) => value != null)\n        .map(([name, value]) => (\n          <SimpleField key={name} name={name} value={value} />\n        ))}\n    </>\n  )\n}\n\nexport const BaseCoreDetails = (props: BaseProps) => {\n  const { title = 'Primary data' } = props\n  return (\n    <BaseCard {...props} title={title}>\n      <CoreDetails {...props} />\n    </BaseCard>\n  )\n}\n\nexport const BaseAttributes = (props: BaseProps) => {\n  const { feature } = props\n  return (\n    <BaseCard {...props} title=\"Attributes\">\n      <Attributes {...props} attributes={feature} />\n    </BaseCard>\n  )\n}\n\nexport interface BaseInputProps extends BaseCardProps {\n  omit?: string[]\n  model: any\n  descriptions?: Record<string, React.ReactNode>\n  formatter?: (val: unknown, key: string) => React.ReactNode\n}\n\ninterface PanelDescriptor {\n  name: string\n  Component: React.FC<any>\n}\n\nexport function FeatureDetails(props: {\n  model: IAnyStateTreeNode\n  feature: SimpleFeatureSerialized\n  depth?: number\n  omit?: string[]\n  descriptions?: Record<string, React.ReactNode>\n  formatter?: (val: unknown, key: string) => React.ReactNode\n}) {\n  const { omit = [], model, feature, depth = 0 } = props\n  const { maxDepth } = model\n  const { mate, name = '', id = '', type = '', subfeatures, uniqueId } = feature\n  const pm = getEnv(model).pluginManager\n  const session = getSession(model)\n\n  const ExtraPanel = pm.evaluateExtensionPoint('Core-extraFeaturePanel', null, {\n    session,\n    feature,\n    model,\n  }) as PanelDescriptor | undefined\n  return (\n    <BaseCard title={generateTitle(name, id, type)}>\n      <Typography>Core details</Typography>\n      <CoreDetails {...props} />\n      {mate ? (\n        <>\n          <Divider />\n          <Typography>Mate details</Typography>\n          <CoreDetails\n            {...props}\n            feature={{ ...mate, uniqueId: uniqueId + '-mate' }}\n          />\n        </>\n      ) : null}\n\n      <Divider />\n      <Typography>Attributes</Typography>\n      <Attributes\n        attributes={feature}\n        {...props}\n        omit={omit}\n        omitSingleLevel={coreDetails}\n      />\n\n      <ErrorBoundary FallbackComponent={e => <ErrorMessage error={e.error} />}>\n        <SequenceFeatureDetails {...props} />\n      </ErrorBoundary>\n\n      {ExtraPanel ? (\n        <>\n          <Divider />\n          <BaseCard title={ExtraPanel.name}>\n            <ExtraPanel.Component {...props} />\n          </BaseCard>\n        </>\n      ) : null}\n\n      {depth < maxDepth && subfeatures?.length ? (\n        <BaseCard title=\"Subfeatures\" defaultExpanded={depth < 1}>\n          {subfeatures.map((sub, idx) => (\n            <FeatureDetails\n              key={JSON.stringify(sub)}\n              feature={{ ...sub, uniqueId: `${uniqueId}_${idx}` }}\n              model={model}\n              depth={depth + 1}\n            />\n          ))}\n        </BaseCard>\n      ) : null}\n    </BaseCard>\n  )\n}\n\nconst BaseFeatureDetail = observer(function ({ model }: BaseInputProps) {\n  const { error, featureData } = model\n\n  if (error) {\n    return <ErrorMessage error={error} />\n  }\n  if (!featureData) {\n    return null\n  }\n\n  // replacing undefined with null helps with allowing fields to be hidden,\n  // setting null is not allowed by jexl so we set it to undefined to hide. see\n  // config guide. this replacement happens both here and when snapshotting the\n  // featureData\n  const g = JSON.parse(\n    JSON.stringify(featureData, (_, v) => (v === undefined ? null : v)),\n  )\n  return isEmpty(g) ? null : <FeatureDetails model={model} feature={g} />\n})\n\nexport default BaseFeatureDetail\n\nexport { default as Attributes } from './Attributes'\n","export interface Feat {\n  start: number\n  end: number\n  type: string\n  name?: string\n  id?: string\n}\nexport interface ParentFeat extends Feat {\n  uniqueId: string\n  strand?: number\n  refName: string\n  subfeatures?: Feat[]\n  parentId?: string\n}\nexport interface SeqState {\n  seq: string\n  upstream?: string\n  downstream?: string\n}\n\nexport interface ErrorState {\n  error: string\n}\n\nexport function stitch(subfeats: Feat[], sequence: string) {\n  return subfeats.map(sub => sequence.slice(sub.start, sub.end)).join('')\n}\n\n// filter items if they have the same \"ID\" or location\nfunction getItemId(feat: Feat) {\n  return `${feat.start}-${feat.end}`\n}\n\n// filters if successive elements share same start/end\nexport function dedupe(list: Feat[]) {\n  return list.filter(\n    (item, pos, ary) => !pos || getItemId(item) !== getItemId(ary[pos - 1]),\n  )\n}\n\nexport function revlist(list: Feat[], seqlen: number) {\n  return list\n    .map(sub => ({\n      ...sub,\n      start: seqlen - sub.end,\n      end: seqlen - sub.start,\n    }))\n    .sort((a, b) => a.start - b.start)\n}\n\nexport function calculateUTRs(cds: Feat[], exons: Feat[]) {\n  // checking length ensures the .at below are valid\n  if (!cds.length) {\n    return []\n  }\n\n  const firstCds = cds.at(0)!\n\n  const lastCds = cds.at(-1)!\n  const firstCdsIdx = exons.findIndex(\n    exon => exon.end >= firstCds.start && exon.start <= firstCds.start,\n  )\n  const lastCdsIdx = exons.findIndex(\n    exon => exon.end >= lastCds.end && exon.start <= lastCds.end,\n  )\n  const lastCdsExon = exons[lastCdsIdx]\n  const firstCdsExon = exons[firstCdsIdx]\n\n  const fiveUTRs = [\n    ...exons.slice(0, firstCdsIdx),\n    { start: firstCdsExon.start, end: firstCds.start },\n  ].map(elt => ({ ...elt, type: 'five_prime_UTR' }))\n\n  const threeUTRs = [\n    { start: lastCds.end, end: lastCdsExon.end },\n    ...exons.slice(lastCdsIdx + 1),\n  ].map(elt => ({ ...elt, type: 'three_prime_UTR' }))\n\n  return [...fiveUTRs, ...threeUTRs]\n}\n\n// calculates UTRs using impliedUTRs logic, but there are no exon subfeatures\nexport function calculateUTRs2(cds: Feat[], parentFeat: Feat) {\n  if (!cds.length) {\n    return []\n  }\n\n  const firstCds = cds.at(0)!\n\n  const lastCds = cds.at(-1)!\n\n  const fiveUTRs = [{ start: parentFeat.start, end: firstCds.start }].map(\n    elt => ({ ...elt, type: 'five_prime_UTR' }),\n  )\n\n  const threeUTRs = [{ start: lastCds.end, end: parentFeat.end }].map(elt => ({\n    ...elt,\n    type: 'three_prime_UTR',\n  }))\n\n  return [...fiveUTRs, ...threeUTRs]\n}\n\nexport function ellipses(slug: string) {\n  return slug.length > 20 ? `${slug.slice(0, 20)}...` : slug\n}\n","import React, { useState, useCallback } from 'react'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport ResizeHandle from './ResizeHandle'\n\nconst useStyles = makeStyles()(theme => ({\n  resizeBar: {\n    background: theme.palette.action.disabledBackground,\n    height: 12,\n    position: 'relative',\n    overflow: 'hidden',\n  },\n  tick: {\n    position: 'absolute',\n    height: '100%',\n    pointerEvents: 'none',\n    background: theme.palette.action.disabled,\n    width: 1,\n  },\n  hiddenTick: {\n    position: 'absolute',\n    height: '100%',\n    width: 5,\n  },\n}))\n\nfunction Tick({\n  left,\n  scrollLeft,\n  idx,\n  onDrag,\n  onMouseDown,\n}: {\n  idx: number\n  left: number\n  scrollLeft: number\n  onMouseDown: (event: React.MouseEvent) => void\n  onDrag: (\n    lastFrameDistance: number,\n    totalDistance: number,\n    idx: number,\n  ) => void\n}) {\n  const { classes } = useStyles()\n  const onDragCallback = useCallback(\n    (lastFrameDistance: number, totalDistance: number) =>\n      onDrag(lastFrameDistance, totalDistance, idx),\n    [idx, onDrag],\n  )\n\n  // has an invisible wider than tick mark (1px) clickable area (5px)\n  return (\n    <>\n      <ResizeHandle\n        onDrag={onDragCallback}\n        onMouseDown={onMouseDown}\n        vertical\n        className={classes.hiddenTick}\n        style={{ left: left - scrollLeft - 2.5 }}\n      />\n      <div style={{ left: left - scrollLeft }} className={classes.tick} />\n    </>\n  )\n}\n\nexport default function ResizeBar({\n  widths,\n  setWidths,\n  checkbox,\n  scrollLeft = 0,\n}: {\n  widths: number[]\n  setWidths: (arg: number[]) => void\n  checkbox?: boolean\n  scrollLeft?: number\n}) {\n  const { classes } = useStyles()\n  const offsets = [] as number[]\n  const [initial, setInitial] = useState<number[]>()\n  let init = checkbox ? 52 : 0\n  for (let i = 0; i < widths.length; i++) {\n    const width = widths[i]\n    offsets[i] = width + init\n    init += width\n  }\n\n  return (\n    <div className={classes.resizeBar}>\n      {offsets.map((left, i) => (\n        <Tick\n          key={i}\n          onMouseDown={() => {\n            setInitial([...widths])\n          }}\n          left={i === offsets.length - 1 ? left - 3 : left}\n          onDrag={(_: number, totalDistance: number, idx: number) => {\n            const newWidths = [...widths]\n            // mui doesn't allow columns smaller than 50\n            newWidths[idx] = Math.max(initial![idx] - totalDistance, 50)\n            setWidths(newWidths)\n          }}\n          idx={i}\n          scrollLeft={scrollLeft}\n        />\n      ))}\n    </div>\n  )\n}\n","import { useEffect, useRef, useState } from 'react'\n\nexport function useResizeBar() {\n  const ref = useRef<HTMLDivElement>(null)\n  const [scrollLeft, setScrollLeft] = useState(0)\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const elt = ref.current?.querySelector('.MuiDataGrid-virtualScroller')\n      if (elt) {\n        setScrollLeft(elt.scrollLeft)\n      }\n    }, 100)\n    return () => {\n      clearInterval(timer)\n    }\n  }, [])\n  return { ref, scrollLeft }\n}\n"],"names":["useStyles","makeStyles","theme","fieldValue","wordBreak","maxHeight","fontSize","padding","spacing","overflow","BasicValue","value","classes","isLink","match","React","className","Link","href","SanitizedHTML","html","isObject","JSON","stringify","String","fieldDescription","background","palette","mode","fieldName","minWidth","borderBottom","action","disabledBackground","marginRight","FieldName","description","name","width","prefix","cx","val","join","Tooltip","title","placement","style","field","display","flexWrap","SimpleField","HelpDlg","lazy","SequenceFeatureDetails","formControl","margin","container","marginTop","marginBottom","SequenceFeaturePanel","model","feature","shown","setShown","useState","helpShown","setHelpShown","Button","variant","onClick","FormControl","IconButton","HelpIcon","Suspense","fallback","LoadingEllipses","key","uniqueId","handleClose","generateTitle","id","type","ellipses","filter","f","cell","whiteSpace","textOverflow","DataGridDetails","ref","scrollLeft","useResizeBar","checked","setChecked","keys","Object","sort","unionKeys","Set","rows","entries","map","k","rest","identifier","add","colNames","has","delete","widths","setWidths","e","measureGridWidth","r","size","length","FormControlLabel","control","Checkbox","onChange","event","target","label","Typography","ResizeBar","DataGrid","disableRowSelectionOnClick","rowCount","rowHeight","columnHeaderHeight","hideFooter","slots","toolbar","GridToolbar","slotProps","printOptions","disableToolbarButton","columns","index","renderCell","params","getStr","fieldSubvalue","border","selected","boxSizing","ArrayValue","Attributes","attributes","every","i","UriField","uri","baseUri","URL","MAX_FIELD_NAME_WIDTH","globalOmit","props","omit","omitSingleLevel","descriptions","formatter","hideUris","omits","__jbrowsefmt","formattedAttributes","maxLabelWidth","array","Math","ceil","max","measureText","generateMaxWidth","v","undefined","arr","obj","obj2","forEach","elt","Description","accessNested","Array","isArray","isUriLocation","UriAttribute","_extends","min","coreDetails","expansionPanelDetails","expandIcon","color","tertiary","contrastText","BaseCard","children","defaultExpanded","expanded","setExpanded","Accordion","s","TransitionProps","unmountOnExit","timeout","AccordionSummary","ExpandMore","AccordionDetails","Position","strand","strandMap","str","loc","assembleLocString","CoreDetails","formattedFeat","start","end","displayedDetails","n","toLocaleString","BaseCoreDetails","BaseAttributes","FeatureDetails","depth","maxDepth","mate","subfeatures","pm","getEnv","pluginManager","session","getSession","ExtraPanel","evaluateExtensionPoint","Divider","ErrorBoundary","FallbackComponent","ErrorMessage","error","Component","sub","idx","observer","featureData","g","parse","_","stitch","subfeats","sequence","slice","getItemId","feat","dedupe","list","item","pos","ary","revlist","seqlen","a","b","calculateUTRs","cds","exons","firstCds","at","lastCds","firstCdsIdx","findIndex","exon","lastCdsIdx","lastCdsExon","firstCdsExon","calculateUTRs2","parentFeat","slug","resizeBar","height","position","tick","pointerEvents","disabled","hiddenTick","Tick","left","onDrag","onMouseDown","onDragCallback","useCallback","lastFrameDistance","totalDistance","ResizeHandle","vertical","checkbox","offsets","initial","setInitial","init","newWidths","useRef","setScrollLeft","useEffect","timer","setInterval","current","querySelector","clearInterval"],"sourceRoot":""}