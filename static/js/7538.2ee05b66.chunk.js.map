{"version":3,"file":"static/js/7538.2ee05b66.chunk.js","mappings":"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","sources":["../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/HierarchicalFab.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/util.ts","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/TrackCategory.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/TrackLabel.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/TrackListNode.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/HierarchicalTree.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/HamburgerMenu.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/HierarchicalHeader.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/HierarchicalTrackSelector.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/ShoppingCart.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Fab, Menu, MenuItem } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport {\n  getSession,\n  isSessionModelWithWidgets,\n  isSessionModelWithConnections,\n  isSessionWithAddTracks,\n} from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\n\n// icons\nimport AddIcon from '@mui/icons-material/Add'\n\n// locals\nimport { HierarchicalTrackSelectorModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(6),\n    right: theme.spacing(6),\n  },\n}))\n\nexport default observer(function HierarchicalFab({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { classes } = useStyles()\n  const session = getSession(model)\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null)\n\n  function handleFabClose() {\n    setAnchorEl(null)\n  }\n  const hasConnections = isSessionModelWithConnections(session)\n  const hasAddTrack = isSessionWithAddTracks(session)\n  return (\n    <>\n      {hasAddTrack || hasConnections ? (\n        <>\n          <Fab\n            color=\"secondary\"\n            className={classes.fab}\n            onClick={event => setAnchorEl(event.currentTarget)}\n          >\n            <AddIcon />\n          </Fab>\n          <Menu\n            anchorEl={anchorEl}\n            open={Boolean(anchorEl)}\n            onClose={() => setAnchorEl(null)}\n          >\n            {hasConnections ? (\n              <MenuItem\n                onClick={() => {\n                  handleFabClose()\n                  if (isSessionModelWithWidgets(session)) {\n                    session.showWidget(\n                      session.addWidget(\n                        'AddConnectionWidget',\n                        'addConnectionWidget',\n                      ),\n                    )\n                  }\n                }}\n              >\n                Add connection\n              </MenuItem>\n            ) : null}\n            {hasAddTrack ? (\n              <MenuItem\n                onClick={() => {\n                  handleFabClose()\n                  if (isSessionModelWithWidgets(session)) {\n                    session.showWidget(\n                      session.addWidget('AddTrackWidget', 'addTrackWidget', {\n                        view: model.view.id,\n                      }),\n                    )\n                  }\n                }}\n              >\n                Add track\n              </MenuItem>\n            ) : null}\n          </Menu>\n        </>\n      ) : null}\n    </>\n  )\n})\n","import { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { HierarchicalTrackSelectorModel, TreeNode } from '../model'\n\nexport interface NodeData {\n  nestingLevel: number\n  checked: boolean\n  conf: AnyConfigurationModel\n  drawerPosition: unknown\n  id: string\n  isLeaf: boolean\n  name: string\n  onChange: Function\n  toggleCollapse: (arg: string) => void\n  tree: TreeNode\n  selected: boolean\n  model: HierarchicalTrackSelectorModel\n}\n\nexport function getAllChildren(subtree?: TreeNode): AnyConfigurationModel[] {\n  // @ts-ignore\n  return (\n    subtree?.children.map(t =>\n      t.children.length ? getAllChildren(t) : (t.conf as AnyConfigurationModel),\n    ) || []\n  ).flat(Infinity)\n}\n\nexport function treeToMap(tree: TreeNode, map = new Map<string, TreeNode>()) {\n  if (tree.id && tree.children.length) {\n    map.set(tree.id, tree)\n  }\n  for (let i = 0; i < tree.children.length; i++) {\n    const node = tree.children[i]\n    treeToMap(node, map)\n  }\n  return map\n}\n\nexport function isUnsupported(name = '') {\n  return name.endsWith('(Unsupported)') || name.endsWith('(Unknown)')\n}\n","import React, { useState } from 'react'\nimport { IconButton, Typography } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport JBrowseMenu from '@jbrowse/core/ui/Menu'\n\n// icons\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight'\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz'\n\n// locals\nimport { getAllChildren, treeToMap, NodeData } from '../util'\n\nconst useStyles = makeStyles()(theme => ({\n  contrastColor: {\n    color: theme.palette.tertiary.contrastText,\n  },\n\n  // margin:auto 0 to center text vertically\n  accordionText: {\n    margin: 'auto 0',\n    // width 100 so you can click anywhere on the category bar\n    width: '100%',\n  },\n}))\n\nexport default function Category({\n  isOpen,\n  setOpen,\n  data,\n}: {\n  isOpen: boolean\n  setOpen: (arg: boolean) => void\n  data: NodeData\n}) {\n  const { classes } = useStyles()\n  const [menuEl, setMenuEl] = useState<HTMLElement | null>(null)\n  const { name, model, id, tree, toggleCollapse } = data\n\n  return (\n    <div\n      className={classes.accordionText}\n      onClick={() => {\n        if (!menuEl) {\n          toggleCollapse(id)\n          setOpen(!isOpen)\n        }\n      }}\n    >\n      <Typography>\n        {isOpen ? <ArrowDropDownIcon /> : <ArrowRightIcon />}\n        {name}\n        <IconButton\n          onClick={event => {\n            setMenuEl(event.currentTarget)\n            event.stopPropagation()\n          }}\n          className={classes.contrastColor}\n        >\n          <MoreHorizIcon />\n        </IconButton>\n      </Typography>\n      {menuEl ? (\n        <JBrowseMenu\n          anchorEl={menuEl}\n          menuItems={[\n            {\n              label: 'Add to selection',\n              onClick: () => {\n                const r = treeToMap(tree).get(id)\n                model.addToSelection(getAllChildren(r))\n              },\n            },\n            {\n              label: 'Remove from selection',\n              onClick: () => {\n                const r = treeToMap(tree).get(id)\n                model.removeFromSelection(getAllChildren(r))\n              },\n            },\n          ]}\n          onMenuItemClick={(_event, callback) => {\n            callback()\n            setMenuEl(null)\n          }}\n          open={Boolean(menuEl)}\n          onClose={() => setMenuEl(null)}\n        />\n      ) : null}\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { Checkbox, FormControlLabel, IconButton, Tooltip } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport JBrowseMenu from '@jbrowse/core/ui/Menu'\nimport { getSession } from '@jbrowse/core/util'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\n\n// icons\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz'\n\n// locals\nimport { isUnsupported, NodeData } from '../util'\nimport { SanitizedHTML } from '@jbrowse/core/ui'\n\nconst useStyles = makeStyles()(theme => ({\n  compactCheckbox: {\n    padding: 0,\n  },\n\n  checkboxLabel: {\n    marginRight: 0,\n    '&:hover': {\n      backgroundColor: theme.palette.action.selected,\n    },\n  },\n}))\n\nexport interface InfoArgs {\n  target: HTMLElement\n  id: string\n  conf: AnyConfigurationModel\n}\n\nexport default function TrackLabel({ data }: { data: NodeData }) {\n  const { classes } = useStyles()\n  const { checked, conf, model, drawerPosition, id, name, onChange, selected } =\n    data\n  const [info, setInfo] = useState<InfoArgs>()\n  const description = (conf && readConfObject(conf, ['description'])) || ''\n  return (\n    <>\n      <Tooltip\n        title={description + (selected ? ' (in selection)' : '')}\n        placement={drawerPosition === 'left' ? 'right' : 'left'}\n      >\n        <FormControlLabel\n          className={classes.checkboxLabel}\n          control={\n            <Checkbox\n              className={classes.compactCheckbox}\n              checked={checked}\n              onChange={() => onChange(id)}\n              disabled={isUnsupported(name)}\n              inputProps={{\n                // @ts-ignore\n                'data-testid': `htsTrackEntry-${id}`,\n              }}\n            />\n          }\n          label={\n            <div style={{ background: selected ? '#cccc' : undefined }}>\n              <SanitizedHTML html={name} />\n            </div>\n          }\n        />\n      </Tooltip>\n      <IconButton\n        onClick={e => setInfo({ target: e.currentTarget, id, conf })}\n        style={{ padding: 0 }}\n        data-testid={`htsTrackEntryMenu-${id}`}\n      >\n        <MoreHorizIcon />\n      </IconButton>\n\n      {info ? (\n        <JBrowseMenu\n          anchorEl={info?.target}\n          menuItems={[\n            ...(getSession(model).getTrackActionMenuItems?.(info.conf) || []),\n            {\n              label: 'Add to selection',\n              onClick: () => model.addToSelection([info.conf]),\n            },\n            ...(selected\n              ? [\n                  {\n                    label: 'Remove from selection',\n                    onClick: () => model.removeFromSelection([info.conf]),\n                  },\n                ]\n              : []),\n          ]}\n          onMenuItemClick={(_event, callback) => {\n            callback()\n            setInfo(undefined)\n          }}\n          open={Boolean(info)}\n          onClose={() => setInfo(undefined)}\n        />\n      ) : null}\n    </>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport Category from './TrackCategory'\nimport TrackLabel from './TrackLabel'\nimport { NodeData } from '../util'\n\nconst useStyles = makeStyles()(theme => ({\n  // this accordionBase element's small padding is used to give a margin to\n  // accordionColor it a \"margin\" because the virtualized elements can't really\n  // use margin in a conventional way (it doesn't affect layout)\n  accordionBase: {\n    display: 'flex',\n  },\n\n  accordionCard: {\n    padding: 3,\n    cursor: 'pointer',\n    display: 'flex',\n  },\n\n  nestingLevelMarker: {\n    position: 'absolute',\n    borderLeft: '1.5px solid #555',\n  },\n  // accordionColor set's display:flex so that the child accordionText use\n  // vertically centered text\n  accordionColor: {\n    background: theme.palette.tertiary.main,\n    color: theme.palette.tertiary.contrastText,\n    width: '100%',\n    display: 'flex',\n    paddingLeft: 5,\n  },\n}))\n\n// An individual node in the track selector. Note: manually sets cursor:\n// pointer improves usability for what can be clicked\nexport default function Node({\n  data,\n  isOpen,\n  style,\n  setOpen,\n}: {\n  data: NodeData\n  isOpen: boolean\n  style?: { height: number }\n  setOpen: (arg: boolean) => void\n}) {\n  const { isLeaf, nestingLevel } = data\n\n  const { classes } = useStyles()\n  const width = 10\n  const marginLeft = nestingLevel * width + (isLeaf ? width : 0)\n\n  return (\n    <div style={style} className={!isLeaf ? classes.accordionBase : undefined}>\n      {new Array(nestingLevel).fill(0).map((_, idx) => (\n        <div\n          key={`mark-${idx}`}\n          style={{ left: idx * width + 4, height: style?.height }}\n          className={classes.nestingLevelMarker}\n        />\n      ))}\n      <div\n        className={!isLeaf ? classes.accordionCard : undefined}\n        style={{\n          marginLeft,\n          whiteSpace: 'nowrap',\n          width: '100%',\n        }}\n      >\n        <div className={!isLeaf ? classes.accordionColor : undefined}>\n          {!isLeaf ? (\n            <Category isOpen={isOpen} data={data} setOpen={setOpen} />\n          ) : (\n            <TrackLabel data={data} />\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useCallback, useMemo, useRef, useEffect } from 'react'\nimport { observer } from 'mobx-react'\nimport { VariableSizeTree } from 'react-vtree'\nimport { getSession } from '@jbrowse/core/util'\n// locals\nimport { TreeNode, HierarchicalTrackSelectorModel } from '../../model'\nimport Node from './TrackListNode'\n\nfunction getNodeData(\n  node: TreeNode,\n  nestingLevel: number,\n  extra: Record<string, unknown>,\n  selection: Record<string, unknown>,\n) {\n  const isLeaf = !!node.conf\n  const selected = !!selection[node.id]\n  return {\n    data: {\n      defaultHeight: isLeaf ? 22 : 40,\n      isLeaf,\n      isOpenByDefault: true,\n      nestingLevel,\n      selected,\n      ...node,\n      ...extra,\n    },\n    nestingLevel,\n    node,\n  }\n}\n\ntype NodeData = ReturnType<typeof getNodeData>\n\n// this is the main tree component for the hierarchical track selector in note:\n// in jbrowse-web the toolbar is position=\"sticky\" which means the autosizer\n// includes the height of the toolbar, so we subtract the given offsets\nexport default observer(function HierarchicalTree({\n  height,\n  tree,\n  model,\n}: {\n  height: number\n  tree: TreeNode\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { filterText, selection, view } = model\n  const treeRef = useRef<NodeData>(null)\n  const session = getSession(model)\n  const { drawerPosition } = session\n  const obj = useMemo(\n    () => Object.fromEntries(selection.map(s => [s.trackId, s])),\n    [selection],\n  )\n\n  const extra = useMemo(\n    () => ({\n      onChange: (trackId: string) => view.toggleTrack(trackId),\n      toggleCollapse: (pathName: string) => model.toggleCategory(pathName),\n      tree,\n      model,\n      drawerPosition,\n    }),\n    [view, model, drawerPosition, tree],\n  )\n  const treeWalker = useCallback(\n    function* treeWalker() {\n      for (let i = 0; i < tree.children.length; i++) {\n        const r = tree.children[i]\n        yield getNodeData(r, 0, extra, obj)\n      }\n\n      while (true) {\n        // @ts-ignore\n        const parentMeta = yield\n\n        for (let i = 0; i < parentMeta.node.children.length; i++) {\n          const curr = parentMeta.node.children[i]\n          yield getNodeData(curr, parentMeta.nestingLevel + 1, extra, obj)\n        }\n      }\n    },\n    [tree, extra, obj],\n  )\n\n  useEffect(() => {\n    // @ts-ignore\n    treeRef.current.recomputeTree({\n      refreshNodes: true,\n      useDefaultHeight: true,\n    })\n  }, [tree, filterText])\n  return (\n    <>\n      {/* @ts-ignore */}\n      <VariableSizeTree ref={treeRef} treeWalker={treeWalker} height={height}>\n        {/* @ts-ignore */}\n        {Node}\n      </VariableSizeTree>\n    </>\n  )\n})\n","import React, { Suspense, lazy, useState } from 'react'\nimport { IconButton } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport JBrowseMenu from '@jbrowse/core/ui/Menu'\nimport {\n  getSession,\n  isSessionModelWithWidgets,\n  isSessionModelWithConnections,\n} from '@jbrowse/core/util'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\n\n// icons\nimport MenuIcon from '@mui/icons-material/Menu'\n\n// locals\nimport { HierarchicalTrackSelectorModel } from '../../model'\n\n// lazy components\nconst CloseConnectionDlg = lazy(\n  () => import('../dialogs/CloseConnectionDialog'),\n)\nconst DeleteConnectionDlg = lazy(\n  () => import('../dialogs/DeleteConnectionDialog'),\n)\nconst ManageConnectionsDlg = lazy(\n  () => import('../dialogs/ManageConnectionsDialog'),\n)\nconst ToggleConnectionsDlg = lazy(\n  () => import('../dialogs/ToggleConnectionsDialog'),\n)\n\nconst useStyles = makeStyles()(theme => ({\n  menuIcon: {\n    marginRight: theme.spacing(1),\n    marginBottom: 0,\n  },\n}))\n\ninterface ModalArgs {\n  connectionConf: AnyConfigurationModel\n  safelyBreakConnection: Function\n  dereferenceTypeCount: { [key: string]: number }\n  name: string\n}\n\ninterface DialogDetails {\n  name: string\n  connectionConf: AnyConfigurationModel\n}\n\nexport default observer(function HamburgerMenu({\n  model,\n  setAssemblyIdx,\n}: {\n  model: HierarchicalTrackSelectorModel\n  setAssemblyIdx: Function\n}) {\n  const session = getSession(model)\n  const [menuEl, setMenuEl] = useState<HTMLButtonElement>()\n  const [modalInfo, setModalInfo] = useState<ModalArgs>()\n  const [deleteDlgDetails, setDeleteDlgDetails] = useState<DialogDetails>()\n  const [connectionToggleOpen, setConnectionToggleOpen] = useState(false)\n  const [connectionManagerOpen, setConnectionManagerOpen] = useState(false)\n  const { classes } = useStyles()\n  const { assemblyNames } = model\n\n  function breakConnection(\n    connectionConf: AnyConfigurationModel,\n    deletingConnection?: boolean,\n  ) {\n    const name = readConfObject(connectionConf, 'name')\n\n    // @ts-ignore\n    const result = session.prepareToBreakConnection(connectionConf)\n    if (result) {\n      const [safelyBreakConnection, dereferenceTypeCount] = result\n      if (Object.keys(dereferenceTypeCount).length > 0) {\n        setModalInfo({\n          connectionConf,\n          safelyBreakConnection,\n          dereferenceTypeCount,\n          name,\n        })\n      } else {\n        safelyBreakConnection()\n      }\n    }\n    if (deletingConnection) {\n      setDeleteDlgDetails({ name, connectionConf })\n    }\n  }\n\n  const connectionMenuItems = [\n    {\n      label: 'Turn on/off connections...',\n      onClick: () => setConnectionToggleOpen(true),\n    },\n  ]\n\n  if (isSessionModelWithConnections(session)) {\n    connectionMenuItems.unshift({\n      label: 'Add connection...',\n      onClick: () => {\n        if (isSessionModelWithWidgets(session)) {\n          session.showWidget(\n            session.addWidget('AddConnectionWidget', 'addConnectionWidget'),\n          )\n        }\n      },\n    })\n\n    connectionMenuItems.push({\n      label: 'Delete connections...',\n      onClick: () => setConnectionManagerOpen(true),\n    })\n  }\n  return (\n    <>\n      <IconButton\n        className={classes.menuIcon}\n        onClick={event => setMenuEl(event.currentTarget)}\n      >\n        <MenuIcon />\n      </IconButton>\n\n      <JBrowseMenu\n        anchorEl={menuEl}\n        open={Boolean(menuEl)}\n        onMenuItemClick={(_, callback) => {\n          callback()\n          setMenuEl(undefined)\n        }}\n        onClose={() => setMenuEl(undefined)}\n        menuItems={[\n          {\n            label: 'Add track...',\n            onClick: () => {\n              if (isSessionModelWithWidgets(session)) {\n                session.showWidget(\n                  session.addWidget('AddTrackWidget', 'addTrackWidget', {\n                    view: model.view.id,\n                  }),\n                )\n              }\n            },\n          },\n          ...(session.makeConnection ? connectionMenuItems : []),\n\n          ...(assemblyNames.length > 1\n            ? [\n                {\n                  label: 'Select assembly...',\n                  subMenu: assemblyNames.map((name, idx) => ({\n                    label: name,\n                    onClick: () => setAssemblyIdx(idx),\n                  })),\n                },\n              ]\n            : []),\n        ]}\n      />\n      <Suspense fallback={<div />}>\n        {modalInfo ? (\n          <CloseConnectionDlg\n            modalInfo={modalInfo}\n            setModalInfo={setModalInfo}\n          />\n        ) : null}\n        {deleteDlgDetails ? (\n          <DeleteConnectionDlg\n            handleClose={() => setDeleteDlgDetails(undefined)}\n            deleteDialogDetails={deleteDlgDetails}\n            session={session}\n          />\n        ) : null}\n        {connectionManagerOpen ? (\n          <ManageConnectionsDlg\n            handleClose={() => setConnectionManagerOpen(false)}\n            breakConnection={breakConnection}\n            session={session}\n          />\n        ) : null}\n        {connectionToggleOpen ? (\n          <ToggleConnectionsDlg\n            handleClose={() => setConnectionToggleOpen(false)}\n            session={session}\n            breakConnection={breakConnection}\n          />\n        ) : null}\n      </Suspense>\n    </>\n  )\n})\n","import React, { Suspense, lazy, useState } from 'react'\nimport { Button, IconButton, InputAdornment, TextField } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\n\n// icons\nimport ClearIcon from '@mui/icons-material/Clear'\n\n// locals\nimport { HierarchicalTrackSelectorModel } from '../../model'\nimport HamburgerMenu from './HamburgerMenu'\nimport ShoppingCart from '../ShoppingCart'\n\n// lazies\nconst FacetedDialog = lazy(() => import('../faceted/FacetedDialog'))\n\nconst useStyles = makeStyles()(theme => ({\n  searchBox: {\n    margin: theme.spacing(2),\n  },\n  menuIcon: {\n    marginRight: theme.spacing(1),\n    marginBottom: 0,\n  },\n}))\n\nfunction HierarchicalTrackSelectorHeader({\n  model,\n  setHeaderHeight,\n  setAssemblyIdx,\n}: {\n  model: HierarchicalTrackSelectorModel\n  setHeaderHeight: (n: number) => void\n  setAssemblyIdx: (n: number) => void\n}) {\n  const { classes } = useStyles()\n  const [facetedOpen, setFacetedOpen] = useState(false)\n  const { filterText } = model\n\n  return (\n    <div\n      ref={ref => setHeaderHeight(ref?.getBoundingClientRect().height || 0)}\n      data-testid=\"hierarchical_track_selector\"\n    >\n      <div style={{ display: 'flex' }}>\n        <HamburgerMenu model={model} setAssemblyIdx={setAssemblyIdx} />\n        <ShoppingCart model={model} />\n\n        <TextField\n          className={classes.searchBox}\n          label=\"Filter tracks\"\n          value={filterText}\n          onChange={event => model.setFilterText(event.target.value)}\n          fullWidth\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton onClick={() => model.clearFilterText()}>\n                  <ClearIcon />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n        <Button\n          className={classes.menuIcon}\n          onClick={() => setFacetedOpen(true)}\n        >\n          Open faceted selector\n        </Button>\n      </div>\n\n      <Suspense fallback={<div />}>\n        {facetedOpen ? (\n          <FacetedDialog\n            handleClose={() => setFacetedOpen(false)}\n            model={model}\n          />\n        ) : null}\n      </Suspense>\n    </div>\n  )\n}\n\nexport default observer(HierarchicalTrackSelectorHeader)\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport AutoSizer from 'react-virtualized-auto-sizer'\n\n// locals\nimport { TreeNode, HierarchicalTrackSelectorModel } from '../model'\nimport HierarchicalFab from './HierarchicalFab'\nimport HierarchicalTree from './tree/HierarchicalTree'\nimport HierarchicalHeader from './tree/HierarchicalHeader'\n\n// Don't use autosizer in jest and instead hardcode a height, otherwise fails\n// jest tests\nconst AutoSizedHierarchicalTree = ({\n  tree,\n  model,\n  offset,\n}: {\n  tree: TreeNode\n  model: HierarchicalTrackSelectorModel\n  offset: number\n}) => {\n  return typeof jest === 'undefined' ? (\n    <AutoSizer disableWidth>\n      {({ height }) => {\n        return (\n          <HierarchicalTree\n            height={height - offset}\n            model={model}\n            tree={tree}\n          />\n        )\n      }}\n    </AutoSizer>\n  ) : (\n    <HierarchicalTree height={9000} model={model} tree={tree} />\n  )\n}\n\nconst Wrapper = ({\n  overrideDimensions,\n  children,\n}: {\n  overrideDimensions?: { width: number; height: number }\n  children: React.ReactNode\n}) => {\n  return overrideDimensions ? (\n    <div style={{ ...overrideDimensions }}>{children}</div>\n  ) : (\n    <>{children}</>\n  )\n}\nconst HierarchicalTrackSelectorContainer = observer(function ({\n  model,\n  toolbarHeight,\n  overrideDimensions,\n}: {\n  model: HierarchicalTrackSelectorModel\n  toolbarHeight: number\n  overrideDimensions?: { width: number; height: number }\n}) {\n  return (\n    <Wrapper overrideDimensions={overrideDimensions}>\n      <HierarchicalTrackSelector model={model} toolbarHeight={toolbarHeight} />\n      <HierarchicalFab model={model} />\n    </Wrapper>\n  )\n})\n\nconst HierarchicalTrackSelector = observer(function ({\n  model,\n  toolbarHeight = 0,\n}: {\n  model: HierarchicalTrackSelectorModel\n  toolbarHeight?: number\n}) {\n  const [assemblyIdx, setAssemblyIdx] = useState(0)\n  const [headerHeight, setHeaderHeight] = useState(0)\n\n  const { assemblyNames } = model\n  const assemblyName = assemblyNames[assemblyIdx]\n  return assemblyName ? (\n    <>\n      <HierarchicalHeader\n        model={model}\n        setHeaderHeight={setHeaderHeight}\n        setAssemblyIdx={setAssemblyIdx}\n      />\n      <AutoSizedHierarchicalTree\n        tree={model.hierarchy(assemblyName)}\n        model={model}\n        offset={toolbarHeight + headerHeight}\n      />\n    </>\n  ) : null\n})\n\nexport default HierarchicalTrackSelectorContainer\n","import React, { useState } from 'react'\nimport { Badge, IconButton } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport JBrowseMenu, { MenuItem } from '@jbrowse/core/ui/Menu'\nimport { getSession, getEnv } from '@jbrowse/core/util'\n\n// icons\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart'\n\n// locals\nimport { HierarchicalTrackSelectorModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  searchBox: {\n    margin: theme.spacing(2),\n  },\n  menuIcon: {\n    marginRight: theme.spacing(1),\n    marginBottom: 0,\n  },\n}))\n\nexport default observer(function ShoppingCart({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { classes } = useStyles()\n  const { selection } = model\n  const { pluginManager } = getEnv(model)\n  const session = getSession(model)\n  const [selectionEl, setSelectionEl] = useState<HTMLButtonElement>()\n  const items = pluginManager.evaluateExtensionPoint(\n    'TrackSelector-multiTrackMenuItems',\n    [],\n    { session },\n  ) as MenuItem[]\n\n  return (\n    <>\n      {selection.length ? (\n        <IconButton\n          className={classes.menuIcon}\n          onClick={event => setSelectionEl(event.currentTarget)}\n        >\n          <Badge badgeContent={selection.length} color=\"primary\">\n            <ShoppingCartIcon />\n          </Badge>\n        </IconButton>\n      ) : null}\n\n      <JBrowseMenu\n        anchorEl={selectionEl}\n        open={Boolean(selectionEl)}\n        onMenuItemClick={(_, callback) => {\n          callback()\n          setSelectionEl(undefined)\n        }}\n        onClose={() => setSelectionEl(undefined)}\n        menuItems={[\n          { label: 'Clear', onClick: () => model.clearSelection() },\n          ...items.map(item => ({\n            ...item,\n            ...('onClick' in item\n              ? { onClick: () => item.onClick(model) }\n              : {}),\n          })),\n        ]}\n      />\n    </>\n  )\n})\n"],"names":["useStyles","makeStyles","theme","fab","position","bottom","spacing","right","observer","model","classes","session","getSession","useState","anchorEl","setAnchorEl","handleFabClose","hasConnections","isSessionModelWithConnections","hasAddTrack","isSessionWithAddTracks","Fab","color","className","onClick","event","currentTarget","Add","Menu","open","Boolean","onClose","MenuItem","isSessionModelWithWidgets","showWidget","addWidget","view","id","getAllChildren","subtree","children","map","t","length","conf","flat","Infinity","treeToMap","tree","Map","set","i","isUnsupported","name","endsWith","contrastColor","palette","tertiary","contrastText","accordionText","margin","width","Category","isOpen","setOpen","data","menuEl","setMenuEl","toggleCollapse","Typography","ArrowDropDown","ArrowRight","IconButton","stopPropagation","MoreHoriz","menuItems","label","r","get","addToSelection","removeFromSelection","onMenuItemClick","_event","callback","compactCheckbox","padding","checkboxLabel","marginRight","backgroundColor","action","selected","TrackLabel","checked","drawerPosition","onChange","info","setInfo","description","readConfObject","Tooltip","title","placement","FormControlLabel","control","Checkbox","disabled","inputProps","style","background","undefined","SanitizedHTML","html","e","target","getTrackActionMenuItems","accordionBase","display","accordionCard","cursor","nestingLevelMarker","borderLeft","accordionColor","main","paddingLeft","Node","isLeaf","nestingLevel","marginLeft","Array","fill","_","idx","left","height","whiteSpace","getNodeData","node","extra","selection","defaultHeight","isOpenByDefault","filterText","treeRef","useRef","obj","useMemo","Object","fromEntries","s","trackId","toggleTrack","pathName","toggleCategory","treeWalker","useCallback","parentMeta","curr","useEffect","current","recomputeTree","refreshNodes","useDefaultHeight","ref","CloseConnectionDlg","lazy","DeleteConnectionDlg","ManageConnectionsDlg","ToggleConnectionsDlg","menuIcon","marginBottom","setAssemblyIdx","modalInfo","setModalInfo","deleteDlgDetails","setDeleteDlgDetails","connectionToggleOpen","setConnectionToggleOpen","connectionManagerOpen","setConnectionManagerOpen","assemblyNames","breakConnection","connectionConf","deletingConnection","result","prepareToBreakConnection","safelyBreakConnection","dereferenceTypeCount","keys","connectionMenuItems","unshift","push","makeConnection","subMenu","Suspense","fallback","handleClose","deleteDialogDetails","FacetedDialog","searchBox","setHeaderHeight","facetedOpen","setFacetedOpen","getBoundingClientRect","HamburgerMenu","ShoppingCart","TextField","value","setFilterText","fullWidth","InputProps","endAdornment","InputAdornment","clearFilterText","Clear","Button","AutoSizedHierarchicalTree","offset","jest","disableWidth","HierarchicalTree","Wrapper","overrideDimensions","HierarchicalTrackSelectorContainer","toolbarHeight","HierarchicalTrackSelector","HierarchicalFab","assemblyIdx","headerHeight","assemblyName","HierarchicalHeader","hierarchy","pluginManager","getEnv","selectionEl","setSelectionEl","items","evaluateExtensionPoint","badgeContent","clearSelection","item"],"sourceRoot":""}