{"version":3,"file":"static/js/3.215b4a12.chunk.js","mappings":"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","sources":["../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/Header.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/util.ts","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/Node.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/HierarchicalTrackSelector.tsx"],"sourcesContent":["import React, { Suspense, lazy, useState } from 'react'\nimport { Badge, IconButton, InputAdornment, TextField } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport JBrowseMenu, { MenuItem } from '@jbrowse/core/ui/Menu'\nimport {\n  getSession,\n  getEnv,\n  isSessionModelWithWidgets,\n  isSessionModelWithConnections,\n  isSessionWithAddTracks,\n} from '@jbrowse/core/util'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\n\n// icons\nimport ClearIcon from '@mui/icons-material/Clear'\nimport MenuIcon from '@mui/icons-material/Menu'\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart'\nimport { Cable } from '@jbrowse/core/ui/Icons'\n\n// locals\nimport { HierarchicalTrackSelectorModel } from '../model'\n\n// lazy components\nconst CloseConnectionDialog = lazy(() => import('./CloseConnectionDialog'))\nconst DeleteConnectionDialog = lazy(() => import('./DeleteConnectionDialog'))\nconst ManageConnectionsDialog = lazy(() => import('./ManageConnectionsDialog'))\nconst ToggleConnectionsDialog = lazy(() => import('./ToggleConnectionsDialog'))\n\nconst useStyles = makeStyles()(theme => ({\n  searchBox: {\n    margin: theme.spacing(2),\n  },\n  menuIcon: {\n    marginRight: theme.spacing(1),\n    marginBottom: 0,\n  },\n}))\n\ninterface ModalArgs {\n  connectionConf: AnyConfigurationModel\n  safelyBreakConnection: Function\n  dereferenceTypeCount: { [key: string]: number }\n  name: string\n}\n\ninterface DialogDetails {\n  name: string\n  connectionConf: AnyConfigurationModel\n}\n\nfunction HierarchicalTrackSelectorHeader({\n  model,\n  setHeaderHeight,\n  setAssemblyIdx,\n  assemblyIdx,\n}: {\n  model: HierarchicalTrackSelectorModel\n  setHeaderHeight: (n: number) => void\n  setAssemblyIdx: (n: number) => void\n  assemblyIdx: number\n}) {\n  const { classes } = useStyles()\n  const session = getSession(model)\n  const [connectionEl, setConnectionEl] = useState<HTMLButtonElement>()\n  const [selectionEl, setSelectionEl] = useState<HTMLButtonElement>()\n  const [menuEl, setMenuEl] = useState<HTMLButtonElement>()\n  const [modalInfo, setModalInfo] = useState<ModalArgs>()\n  const [deleteDlgDetails, setDeleteDlgDetails] = useState<DialogDetails>()\n  const [connectionManagerOpen, setConnectionManagerOpen] = useState(false)\n  const [connectionToggleOpen, setConnectionToggleOpen] = useState(false)\n  const { assemblyNames } = model\n\n  function breakConnection(\n    connectionConf: AnyConfigurationModel,\n    deletingConnection?: boolean,\n  ) {\n    const name = readConfObject(connectionConf, 'name')\n\n    // @ts-ignore\n    const result = session.prepareToBreakConnection(connectionConf)\n    if (result) {\n      const [safelyBreakConnection, dereferenceTypeCount] = result\n      if (Object.keys(dereferenceTypeCount).length > 0) {\n        setModalInfo({\n          connectionConf,\n          safelyBreakConnection,\n          dereferenceTypeCount,\n          name,\n        })\n      } else {\n        safelyBreakConnection()\n      }\n    }\n    if (deletingConnection) {\n      setDeleteDlgDetails({ name, connectionConf })\n    }\n  }\n\n  const connectionMenuItems = [\n    {\n      label: 'Turn on/off connections...',\n      onClick: () => setConnectionToggleOpen(true),\n    },\n  ]\n\n  if (isSessionModelWithConnections(session)) {\n    connectionMenuItems.unshift({\n      label: 'Add connection',\n      onClick: () => {\n        if (isSessionModelWithWidgets(session)) {\n          session.showWidget(\n            session.addWidget('AddConnectionWidget', 'addConnectionWidget'),\n          )\n        }\n      },\n    })\n\n    connectionMenuItems.push({\n      label: 'Delete connections...',\n      onClick: () => setConnectionManagerOpen(true),\n    })\n  }\n\n  const assemblyMenuItems =\n    assemblyNames.length > 1\n      ? [\n          {\n            label: 'Select assembly...',\n            subMenu: assemblyNames.map((name, idx) => ({\n              label: name,\n              onClick: () => setAssemblyIdx(idx),\n            })),\n          },\n        ]\n      : []\n\n  const menuItems = [\n    {\n      label: 'Add track...',\n      onClick: () => {\n        if (isSessionModelWithWidgets(session)) {\n          session.showWidget(\n            session.addWidget('AddTrackWidget', 'addTrackWidget', {\n              view: model.view.id,\n            }),\n          )\n        }\n      },\n    },\n\n    ...assemblyMenuItems,\n  ]\n\n  const items = getEnv(model).pluginManager.evaluateExtensionPoint(\n    'TrackSelector-multiTrackMenuItems',\n    [],\n    { session },\n  ) as MenuItem[]\n  return (\n    <div\n      ref={ref => setHeaderHeight(ref?.getBoundingClientRect().height || 0)}\n      data-testid=\"hierarchical_track_selector\"\n    >\n      <div style={{ display: 'flex' }}>\n        {isSessionWithAddTracks(session) && (\n          <IconButton\n            className={classes.menuIcon}\n            onClick={event => setMenuEl(event.currentTarget)}\n          >\n            <MenuIcon />\n          </IconButton>\n        )}\n\n        {session.makeConnection && (\n          <IconButton\n            className={classes.menuIcon}\n            onClick={event => setConnectionEl(event.currentTarget)}\n          >\n            <Cable />\n          </IconButton>\n        )}\n\n        {model.selection.length ? (\n          <IconButton\n            className={classes.menuIcon}\n            onClick={event => setSelectionEl(event.currentTarget)}\n          >\n            <Badge badgeContent={model.selection.length} color=\"primary\">\n              <ShoppingCartIcon />\n            </Badge>\n          </IconButton>\n        ) : null}\n\n        <TextField\n          className={classes.searchBox}\n          label=\"Filter tracks\"\n          value={model.filterText}\n          onChange={event => model.setFilterText(event.target.value)}\n          fullWidth\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton color=\"secondary\" onClick={model.clearFilterText}>\n                  <ClearIcon />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n      </div>\n      <JBrowseMenu\n        anchorEl={connectionEl}\n        open={Boolean(connectionEl)}\n        onMenuItemClick={(_, callback) => {\n          callback()\n          setConnectionEl(undefined)\n        }}\n        onClose={() => setConnectionEl(undefined)}\n        menuItems={connectionMenuItems}\n      />\n      <JBrowseMenu\n        anchorEl={menuEl}\n        open={Boolean(menuEl)}\n        onMenuItemClick={(_, callback) => {\n          callback()\n          setMenuEl(undefined)\n        }}\n        onClose={() => setMenuEl(undefined)}\n        menuItems={menuItems}\n      />\n      <JBrowseMenu\n        anchorEl={selectionEl}\n        open={Boolean(selectionEl)}\n        onMenuItemClick={(_, callback) => {\n          callback()\n          setSelectionEl(undefined)\n        }}\n        onClose={() => setSelectionEl(undefined)}\n        menuItems={[\n          { label: 'Clear', onClick: () => model.clearSelection() },\n          ...items.map(item => ({\n            ...item,\n            ...('onClick' in item\n              ? { onClick: () => item.onClick(model) }\n              : {}),\n          })),\n        ]}\n      />\n      <Suspense fallback={<div />}>\n        {modalInfo ? (\n          <CloseConnectionDialog\n            modalInfo={modalInfo}\n            setModalInfo={setModalInfo}\n          />\n        ) : null}\n        {deleteDlgDetails ? (\n          <DeleteConnectionDialog\n            handleClose={() => setDeleteDlgDetails(undefined)}\n            deleteDialogDetails={deleteDlgDetails}\n            session={session}\n          />\n        ) : null}\n        {connectionManagerOpen ? (\n          <ManageConnectionsDialog\n            handleClose={() => setConnectionManagerOpen(false)}\n            breakConnection={breakConnection}\n            session={session}\n          />\n        ) : null}\n        {connectionToggleOpen ? (\n          <ToggleConnectionsDialog\n            handleClose={() => setConnectionToggleOpen(false)}\n            session={session}\n            breakConnection={breakConnection}\n          />\n        ) : null}\n      </Suspense>\n    </div>\n  )\n}\n\nexport default observer(HierarchicalTrackSelectorHeader)\n","import { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { TreeNode } from '../model'\n\nexport function getAllChildren(subtree?: TreeNode): AnyConfigurationModel[] {\n  // @ts-ignore\n  return (\n    subtree?.children.map(t =>\n      t.children.length ? getAllChildren(t) : (t.conf as AnyConfigurationModel),\n    ) || []\n  ).flat(Infinity)\n}\n","import React, { useState } from 'react'\nimport {\n  Checkbox,\n  FormControlLabel,\n  IconButton,\n  Tooltip,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\n// icons\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight'\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz'\n\n// other\nimport { HierarchicalTrackSelectorModel, TreeNode } from '../model'\nimport JBrowseMenu from '@jbrowse/core/ui/Menu'\nimport { getSession } from '@jbrowse/core/util'\n\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { getAllChildren } from './util'\n\nconst useStyles = makeStyles()(theme => ({\n  compactCheckbox: {\n    padding: 0,\n  },\n\n  checkboxLabel: {\n    marginRight: 0,\n    '&:hover': {\n      backgroundColor: '#eee',\n    },\n  },\n\n  contrastColor: {\n    color: theme.palette.secondary.contrastText,\n  },\n\n  // this accordionBase element's small padding is used to give a margin to\n  // accordionColor it a \"margin\" because the virtualized elements can't really\n  // use margin in a conventional way (it doesn't affect layout)\n  accordionBase: {\n    display: 'flex',\n  },\n\n  accordionCard: {\n    padding: 3,\n    cursor: 'pointer',\n    display: 'flex',\n  },\n\n  nestingLevelMarker: {\n    position: 'absolute',\n    borderLeft: '1.5px solid #555',\n  },\n  // accordionColor set's display:flex so that the child accordionText use\n  // vertically centered text\n  accordionColor: {\n    background: theme.palette.tertiary.main,\n    color: theme.palette.tertiary.contrastText,\n    width: '100%',\n    display: 'flex',\n    paddingLeft: 5,\n  },\n\n  // margin:auto 0 to center text vertically\n  accordionText: {\n    margin: 'auto 0',\n  },\n}))\n\nexport interface InfoArgs {\n  target: HTMLElement\n  id: string\n  conf: AnyConfigurationModel\n}\n\nfunction treeToMap(tree: TreeNode, map = new Map<string, TreeNode>()) {\n  if (tree.id && tree.children.length) {\n    map.set(tree.id, tree)\n  }\n  for (let i = 0; i < tree.children.length; i++) {\n    const node = tree.children[i]\n    treeToMap(node, map)\n  }\n  return map\n}\n\nfunction isUnsupported(name = '') {\n  return name.endsWith('(Unsupported)') || name.endsWith('(Unknown)')\n}\n\n// An individual node in the track selector. Note: manually sets cursor:\n// pointer improves usability for what can be clicked\nexport default function Node(props: {\n  data: {\n    nestingLevel: number\n    checked: boolean\n    conf: AnyConfigurationModel\n    drawerPosition: unknown\n    id: string\n    isLeaf: boolean\n    name: string\n    onChange: Function\n    toggleCollapse: (arg: string) => void\n    tree: TreeNode\n    selected: boolean\n    model: HierarchicalTrackSelectorModel\n  }\n  isOpen: boolean\n  style?: { height: number }\n  setOpen: (arg: boolean) => void\n}) {\n  const { data, isOpen, style, setOpen } = props\n  const {\n    checked,\n    conf,\n    drawerPosition,\n    id,\n    isLeaf,\n    model,\n    name,\n    nestingLevel,\n    onChange,\n    selected,\n    toggleCollapse,\n    tree,\n  } = data\n\n  const { classes } = useStyles()\n  const width = 10\n  const [menuEl, setMenuEl] = useState<HTMLElement | null>(null)\n  const [info, setInfo] = useState<InfoArgs>()\n  const marginLeft = nestingLevel * width + (isLeaf ? width : 0)\n  const description = (conf && readConfObject(conf, ['description'])) || ''\n\n  return (\n    <div style={style} className={!isLeaf ? classes.accordionBase : undefined}>\n      {new Array(nestingLevel).fill(0).map((_, idx) => (\n        <div\n          key={`mark-${idx}`}\n          style={{ left: idx * width + 4, height: style?.height }}\n          className={classes.nestingLevelMarker}\n        />\n      ))}\n      <div\n        className={!isLeaf ? classes.accordionCard : undefined}\n        onClick={() => {\n          if (!menuEl) {\n            toggleCollapse(id)\n            setOpen(!isOpen)\n          }\n        }}\n        style={{\n          marginLeft,\n          whiteSpace: 'nowrap',\n          width: '100%',\n        }}\n      >\n        <div className={!isLeaf ? classes.accordionColor : undefined}>\n          {!isLeaf ? (\n            <div className={classes.accordionText}>\n              <Typography>\n                {isOpen ? <ArrowDropDownIcon /> : <ArrowRightIcon />}\n                {name}\n                <IconButton\n                  onClick={event => {\n                    setMenuEl(event.currentTarget)\n                    event.stopPropagation()\n                  }}\n                  className={classes.contrastColor}\n                >\n                  <MoreHorizIcon />\n                </IconButton>\n              </Typography>\n            </div>\n          ) : (\n            <>\n              <Tooltip\n                title={description + (selected ? ' (in selection)' : '')}\n                placement={drawerPosition === 'left' ? 'right' : 'left'}\n              >\n                <FormControlLabel\n                  className={classes.checkboxLabel}\n                  control={\n                    <Checkbox\n                      className={classes.compactCheckbox}\n                      checked={checked}\n                      onChange={() => onChange(id)}\n                      disabled={isUnsupported(name)}\n                      inputProps={{\n                        // @ts-ignore\n                        'data-testid': `htsTrackEntry-${id}`,\n                      }}\n                    />\n                  }\n                  label={\n                    <div\n                      style={{\n                        background: selected ? '#cccc' : undefined,\n                        padding: 1,\n                      }}\n                    >\n                      {name}\n                    </div>\n                  }\n                />\n              </Tooltip>\n              <IconButton\n                onClick={e => setInfo({ target: e.currentTarget, id, conf })}\n                style={{ padding: 0 }}\n                color=\"secondary\"\n                data-testid={`htsTrackEntryMenu-${id}`}\n              >\n                <MoreHorizIcon />\n              </IconButton>\n            </>\n          )}\n          {menuEl ? (\n            <JBrowseMenu\n              anchorEl={menuEl}\n              menuItems={[\n                {\n                  label: 'Add to selection',\n                  onClick: () =>\n                    model.addToSelection(\n                      getAllChildren(treeToMap(tree).get(id)),\n                    ),\n                },\n                {\n                  label: 'Remove from selection',\n                  onClick: () =>\n                    model.removeFromSelection(\n                      getAllChildren(treeToMap(tree).get(id)),\n                    ),\n                },\n              ]}\n              onMenuItemClick={(_event, callback) => {\n                callback()\n                setMenuEl(null)\n              }}\n              open={Boolean(menuEl)}\n              onClose={() => setMenuEl(null)}\n            />\n          ) : null}\n\n          {info ? (\n            <JBrowseMenu\n              anchorEl={info?.target}\n              menuItems={[\n                ...(getSession(model).getTrackActionMenuItems?.(info.conf) ||\n                  []),\n                {\n                  label: 'Add to selection',\n                  onClick: () => model.addToSelection([info.conf]),\n                },\n                ...(selected\n                  ? [\n                      {\n                        label: 'Remove from selection',\n                        onClick: () => model.removeFromSelection([info.conf]),\n                      },\n                    ]\n                  : []),\n              ]}\n              onMenuItemClick={(_event, callback) => {\n                callback()\n                setInfo(undefined)\n              }}\n              open={Boolean(info)}\n              onClose={() => setInfo(undefined)}\n            />\n          ) : null}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useCallback, useMemo, useState, useRef, useEffect } from 'react'\nimport { Fab, Menu, MenuItem } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n// icons\nimport AddIcon from '@mui/icons-material/Add'\n// other\nimport AutoSizer from 'react-virtualized-auto-sizer'\nimport {\n  getSession,\n  isSessionModelWithWidgets,\n  isSessionModelWithConnections,\n  isSessionWithAddTracks,\n} from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\nimport { VariableSizeTree } from 'react-vtree'\n\n// locals\nimport { TreeNode, HierarchicalTrackSelectorModel } from '../model'\nimport Header from './Header'\nimport Node from './Node'\n\nconst useStyles = makeStyles()(theme => ({\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(6),\n    right: theme.spacing(6),\n  },\n}))\n\nfunction getNodeData(\n  node: TreeNode,\n  nestingLevel: number,\n  extra: Record<string, unknown>,\n  selection: Record<string, unknown>,\n) {\n  const isLeaf = !!node.conf\n  const selected = !!selection[node.id]\n  return {\n    data: {\n      defaultHeight: isLeaf ? 22 : 40,\n      isLeaf,\n      isOpenByDefault: true,\n      nestingLevel,\n      selected,\n      ...node,\n      ...extra,\n    },\n    nestingLevel,\n    node,\n  }\n}\n\ntype NodeData = ReturnType<typeof getNodeData>\n\n// this is the main tree component for the hierarchical track selector in note:\n// in jbrowse-web the toolbar is position=\"sticky\" which means the autosizer\n// includes the height of the toolbar, so we subtract the given offsets\nconst HierarchicalTree = observer(\n  ({\n    height,\n    tree,\n    model,\n  }: {\n    height: number\n    tree: TreeNode\n    model: HierarchicalTrackSelectorModel\n  }) => {\n    const { filterText, selection, view } = model\n    const treeRef = useRef<NodeData>(null)\n    const session = getSession(model)\n    const { drawerPosition } = session\n    const obj = useMemo(\n      () => Object.fromEntries(selection.map(s => [s.trackId, s])),\n      [selection],\n    )\n\n    const extra = useMemo(\n      () => ({\n        onChange: (trackId: string) => view.toggleTrack(trackId),\n        toggleCollapse: (pathName: string) => model.toggleCategory(pathName),\n        tree,\n        model,\n        drawerPosition,\n      }),\n      [view, model, drawerPosition, tree],\n    )\n    const treeWalker = useCallback(\n      function* treeWalker() {\n        for (let i = 0; i < tree.children.length; i++) {\n          const r = tree.children[i]\n          yield getNodeData(r, 0, extra, obj)\n        }\n\n        while (true) {\n          // @ts-ignore\n          const parentMeta = yield\n\n          for (let i = 0; i < parentMeta.node.children.length; i++) {\n            const curr = parentMeta.node.children[i]\n            yield getNodeData(curr, parentMeta.nestingLevel + 1, extra, obj)\n          }\n        }\n      },\n      [tree, extra, obj],\n    )\n\n    useEffect(() => {\n      // @ts-ignore\n      treeRef.current.recomputeTree({\n        refreshNodes: true,\n        useDefaultHeight: true,\n      })\n    }, [tree, filterText])\n    return (\n      <>\n        {/* @ts-ignore */}\n        <VariableSizeTree ref={treeRef} treeWalker={treeWalker} height={height}>\n          {/* @ts-ignore */}\n          {Node}\n        </VariableSizeTree>\n      </>\n    )\n  },\n)\n\n// Don't use autosizer in jest and instead hardcode a height, otherwise fails\n// jest tests\nconst AutoSizedHierarchicalTree = ({\n  tree,\n  model,\n  offset,\n}: {\n  tree: TreeNode\n  model: HierarchicalTrackSelectorModel\n  offset: number\n}) => {\n  return typeof jest === 'undefined' ? (\n    <AutoSizer disableWidth>\n      {({ height }) => {\n        return (\n          <HierarchicalTree\n            height={height - offset}\n            model={model}\n            tree={tree}\n          />\n        )\n      }}\n    </AutoSizer>\n  ) : (\n    <HierarchicalTree height={9000} model={model} tree={tree} />\n  )\n}\n\nconst Wrapper = ({\n  overrideDimensions,\n  children,\n}: {\n  overrideDimensions?: { width: number; height: number }\n  children: React.ReactNode\n}) => {\n  return overrideDimensions ? (\n    <div style={{ ...overrideDimensions }}>{children}</div>\n  ) : (\n    <>{children}</>\n  )\n}\nconst HierarchicalTrackSelectorContainer = observer(\n  ({\n    model,\n    toolbarHeight,\n    overrideDimensions,\n  }: {\n    model: HierarchicalTrackSelectorModel\n    toolbarHeight: number\n    overrideDimensions?: { width: number; height: number }\n  }) => {\n    const { classes } = useStyles()\n    const session = getSession(model)\n    const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null)\n\n    function handleFabClose() {\n      setAnchorEl(null)\n    }\n    const hasConnections = isSessionModelWithConnections(session)\n    const hasAddTrack = isSessionWithAddTracks(session)\n    return (\n      <Wrapper overrideDimensions={overrideDimensions}>\n        <HierarchicalTrackSelector\n          model={model}\n          toolbarHeight={toolbarHeight}\n        />\n        {hasAddTrack || hasConnections ? (\n          <>\n            <Fab\n              color=\"secondary\"\n              className={classes.fab}\n              onClick={event => setAnchorEl(event.currentTarget)}\n            >\n              <AddIcon />\n            </Fab>\n            <Menu\n              anchorEl={anchorEl}\n              open={Boolean(anchorEl)}\n              onClose={() => setAnchorEl(null)}\n            >\n              {hasConnections ? (\n                <MenuItem\n                  onClick={() => {\n                    handleFabClose()\n                    if (isSessionModelWithWidgets(session)) {\n                      session.showWidget(\n                        session.addWidget(\n                          'AddConnectionWidget',\n                          'addConnectionWidget',\n                        ),\n                      )\n                    }\n                  }}\n                >\n                  Add connection\n                </MenuItem>\n              ) : null}\n              {hasAddTrack ? (\n                <MenuItem\n                  onClick={() => {\n                    handleFabClose()\n                    if (isSessionModelWithWidgets(session)) {\n                      session.showWidget(\n                        session.addWidget('AddTrackWidget', 'addTrackWidget', {\n                          view: model.view.id,\n                        }),\n                      )\n                    }\n                  }}\n                >\n                  Add track\n                </MenuItem>\n              ) : null}\n            </Menu>\n          </>\n        ) : null}\n      </Wrapper>\n    )\n  },\n)\n\nconst HierarchicalTrackSelector = observer(\n  ({\n    model,\n    toolbarHeight = 0,\n  }: {\n    model: HierarchicalTrackSelectorModel\n    toolbarHeight?: number\n  }) => {\n    const [assemblyIdx, setAssemblyIdx] = useState(0)\n    const [headerHeight, setHeaderHeight] = useState(0)\n\n    const { assemblyNames } = model\n    const assemblyName = assemblyNames.length ? assemblyNames[assemblyIdx] : ''\n    return assemblyName ? (\n      <>\n        <Header\n          model={model}\n          setHeaderHeight={setHeaderHeight}\n          setAssemblyIdx={setAssemblyIdx}\n          assemblyIdx={assemblyIdx}\n        />\n        <AutoSizedHierarchicalTree\n          tree={model.hierarchy(assemblyName)}\n          model={model}\n          offset={toolbarHeight + headerHeight}\n        />\n      </>\n    ) : null\n  },\n)\n\nexport default HierarchicalTrackSelectorContainer\n"],"names":["CloseConnectionDialog","lazy","DeleteConnectionDialog","ManageConnectionsDialog","ToggleConnectionsDialog","useStyles","makeStyles","theme","searchBox","margin","spacing","menuIcon","marginRight","marginBottom","observer","model","setHeaderHeight","setAssemblyIdx","classes","assemblyIdx","session","getSession","useState","connectionEl","setConnectionEl","selectionEl","setSelectionEl","menuEl","setMenuEl","modalInfo","setModalInfo","deleteDlgDetails","setDeleteDlgDetails","connectionManagerOpen","setConnectionManagerOpen","connectionToggleOpen","setConnectionToggleOpen","assemblyNames","breakConnection","connectionConf","deletingConnection","name","readConfObject","result","prepareToBreakConnection","safelyBreakConnection","dereferenceTypeCount","Object","keys","length","connectionMenuItems","label","onClick","isSessionModelWithConnections","unshift","isSessionModelWithWidgets","showWidget","addWidget","push","assemblyMenuItems","subMenu","map","idx","menuItems","view","id","items","getEnv","pluginManager","evaluateExtensionPoint","ref","getBoundingClientRect","height","style","display","isSessionWithAddTracks","IconButton","className","event","currentTarget","makeConnection","selection","Badge","badgeContent","color","ShoppingCart","TextField","value","filterText","onChange","setFilterText","target","fullWidth","InputProps","endAdornment","InputAdornment","position","clearFilterText","Clear","anchorEl","open","Boolean","onMenuItemClick","_","callback","undefined","onClose","clearSelection","item","Suspense","fallback","handleClose","deleteDialogDetails","getAllChildren","subtree","children","t","conf","flat","Infinity","compactCheckbox","padding","checkboxLabel","backgroundColor","contrastColor","palette","secondary","contrastText","accordionBase","accordionCard","cursor","nestingLevelMarker","borderLeft","accordionColor","background","tertiary","main","width","paddingLeft","accordionText","treeToMap","tree","Map","set","i","node","isUnsupported","endsWith","Node","props","data","isOpen","setOpen","checked","drawerPosition","isLeaf","nestingLevel","selected","toggleCollapse","info","setInfo","marginLeft","description","Array","fill","left","whiteSpace","Tooltip","title","placement","FormControlLabel","control","Checkbox","disabled","inputProps","e","MoreHoriz","Typography","ArrowDropDown","ArrowRight","stopPropagation","addToSelection","get","removeFromSelection","_event","getTrackActionMenuItems","fab","bottom","right","getNodeData","extra","defaultHeight","isOpenByDefault","HierarchicalTree","treeRef","useRef","obj","useMemo","fromEntries","s","trackId","toggleTrack","pathName","toggleCategory","treeWalker","useCallback","r","parentMeta","curr","useEffect","current","recomputeTree","refreshNodes","useDefaultHeight","AutoSizedHierarchicalTree","offset","jest","disableWidth","Wrapper","overrideDimensions","HierarchicalTrackSelectorContainer","toolbarHeight","setAnchorEl","handleFabClose","hasConnections","hasAddTrack","HierarchicalTrackSelector","Fab","Add","Menu","MenuItem","headerHeight","assemblyName","Header","hierarchy"],"sourceRoot":""}