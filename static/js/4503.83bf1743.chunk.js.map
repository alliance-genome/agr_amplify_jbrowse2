{"version":3,"file":"static/js/4503.83bf1743.chunk.js","mappings":"mPAUO,SAAeA,EAASC,EAAAC,EAAAC,GAAA,OAAAC,EAAAC,MAAC,KAADC,UAAA,CAkB9B,SAAAF,IAAA,OAAAA,GAAAG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAlBM,SAAAC,EACLC,EACAC,EACAC,GAA2E,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAT,EAAAA,EAAAA,KAAAU,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GAErEC,EAAAA,EAAAA,OAAK,mBAAQX,EAAKI,SAAWJ,EAAKY,0BAA0B,IAAC,OAEnD,OADRT,EAAyBH,EAAzBG,cAAeC,EAAUJ,EAAVI,MAAKC,GACPQ,EAAAA,EAAAA,mBAAkBb,GAA/BM,EAAQD,EAARC,SAAQE,EAAAM,GAAAC,EAAAA,KAAAP,EAAAQ,GAAAC,EAAAA,SAAAT,EAAAU,GAAAC,EAAAA,IAAAX,EAAAE,KAAA,EAGUR,EAAeD,GAAK,OAKlC,OALkCO,EAAAY,GAAAZ,EAAAa,KAAAb,EAAAc,GAAA,CAAvCC,GAAG,SAAQC,SAAAhB,EAAAY,IAAAZ,EAAAiB,IAAA,EAAAjB,EAAAU,IAAA,IAAAV,EAAAc,IAAAd,EAAAkB,GACbvB,GAAiBC,GAChBe,EAAAA,EAAAA,KAAA,KAAGQ,UAAS,aAAAC,OAAeC,KAAKC,KAAKxB,EAAU,GAAE,KAAIkB,UACnDL,EAAAA,EAAAA,KAACY,EAAAA,EAAS,CAACC,MAAOhC,EAAMiC,YAAY,WAEpC,KAAIzB,EAAA0B,GAAA,CAAA1B,EAAAiB,GAAAjB,EAAAkB,IAAAlB,EAAA2B,GAAA,CAAAX,SAAAhB,EAAA0B,IAAA1B,EAAA4B,OAAA,YAAA5B,EAAAM,IAAAN,EAAAQ,GAAAR,EAAA2B,KAAA,yBAAA3B,EAAA6B,OAAA,GAAAtC,EAAA,MAGbL,MAAA,KAAAC,UAAA,C","sources":["../../../plugins/wiggle/src/LinearWiggleDisplay/models/renderSvg.tsx"],"sourcesContent":["import React from 'react'\nimport { getContainingView } from '@jbrowse/core/util'\nimport { when } from 'mobx'\nimport YScaleBar from '../../shared/YScaleBar'\nimport {\n  ExportSvgDisplayOptions,\n  LinearGenomeViewModel,\n} from '@jbrowse/plugin-linear-genome-view'\nimport { WiggleDisplayModel } from './model'\n\nexport async function renderSvg(\n  self: WiggleDisplayModel,\n  opts: ExportSvgDisplayOptions,\n  superRenderSvg: (opts: ExportSvgDisplayOptions) => Promise<React.ReactNode>,\n) {\n  await when(() => !!self.stats && !!self.regionCannotBeRenderedText)\n  const { needsScalebar, stats } = self\n  const { offsetPx } = getContainingView(self) as LinearGenomeViewModel\n  return (\n    <>\n      <g id=\"snpcov\">{await superRenderSvg(opts)}</g>\n      {needsScalebar && stats ? (\n        <g transform={`translate(${Math.max(-offsetPx, 0)})`}>\n          <YScaleBar model={self} orientation=\"left\" />\n        </g>\n      ) : null}\n    </>\n  )\n}\n"],"names":["renderSvg","_x","_x2","_x3","_renderSvg","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","self","opts","superRenderSvg","needsScalebar","stats","_ref","offsetPx","wrap","_context","prev","next","when","regionCannotBeRenderedText","getContainingView","t0","_jsxs","t1","_Fragment","t2","_jsx","t3","sent","t4","id","children","t5","t6","transform","concat","Math","max","YScaleBar","model","orientation","t7","t8","abrupt","stop"],"sourceRoot":""}