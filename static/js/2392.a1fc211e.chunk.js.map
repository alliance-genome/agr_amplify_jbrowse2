{"version":3,"file":"static/js/2392.a1fc211e.chunk.js","mappings":"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","sources":["../../../packages/app-core/src/ui/App/Drawer.tsx","../../../packages/app-core/src/ui/App/DrawerWidget.tsx"],"sourcesContent":["import React from 'react'\nimport { Paper } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport ResizeHandle from '@jbrowse/core/ui/ResizeHandle'\nimport { SessionWithDrawerWidgets } from '@jbrowse/core/util/types'\n\nconst useStyles = makeStyles()(theme => ({\n  paper: {\n    overflowY: 'auto',\n    height: '100%',\n    zIndex: theme.zIndex.drawer,\n    outline: 'none',\n    background: theme.palette.background.default,\n  },\n  resizeHandle: {\n    width: 4,\n    position: 'fixed',\n    top: 0,\n    zIndex: theme.zIndex.drawer + 1,\n  },\n}))\n\nfunction Drawer({\n  children,\n  session,\n}: {\n  children: React.ReactNode\n  session: SessionWithDrawerWidgets\n}) {\n  const { drawerPosition, drawerWidth } = session\n  const { classes } = useStyles()\n\n  return (\n    <Paper className={classes.paper} elevation={16} square>\n      {drawerPosition === 'right' ? (\n        <ResizeHandle\n          onDrag={session.resizeDrawer}\n          className={classes.resizeHandle}\n          vertical\n        />\n      ) : null}\n      {children}\n      {drawerPosition === 'left' ? (\n        <ResizeHandle\n          onDrag={session.resizeDrawer}\n          className={classes.resizeHandle}\n          style={{ left: drawerWidth }}\n          vertical\n        />\n      ) : null}\n    </Paper>\n  )\n}\n\nexport default observer(Drawer)\n","import React, { Suspense, useState } from 'react'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport {\n  AppBar,\n  FormControl,\n  IconButton,\n  Menu,\n  MenuItem,\n  Select,\n  Toolbar,\n  Tooltip,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { getEnv } from '@jbrowse/core/util'\nimport LoadingEllipses from '@jbrowse/core/ui/LoadingEllipses'\nimport ErrorMessage from '@jbrowse/core/ui/ErrorMessage'\nimport { SessionWithDrawerWidgets } from '@jbrowse/core/util/types'\n\n// icons\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport CloseIcon from '@mui/icons-material/Close'\nimport MinimizeIcon from '@mui/icons-material/Minimize'\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\n\n// locals\nimport Drawer from './Drawer'\n\nconst useStyles = makeStyles()(theme => ({\n  formControl: {\n    margin: 0,\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  drawerSelect: {\n    margin: 0,\n    color: theme.palette.secondary.contrastText,\n  },\n\n  dropDownIcon: {\n    color: theme.palette.secondary.contrastText,\n  },\n  header: {\n    background: theme.palette.secondary.main,\n  },\n}))\n\nconst DrawerHeader = observer(function ({\n  session,\n  setToolbarHeight,\n}: {\n  session: SessionWithDrawerWidgets\n  setToolbarHeight: (arg: number) => void\n}) {\n  const { pluginManager } = getEnv(session)\n  const { visibleWidget, activeWidgets, drawerPosition } = session\n  const { classes } = useStyles()\n\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n\n  return (\n    <AppBar\n      position=\"sticky\"\n      className={classes.header}\n      ref={ref => setToolbarHeight(ref?.getBoundingClientRect().height || 0)}\n    >\n      <Toolbar disableGutters>\n        <FormControl className={classes.formControl}>\n          <Select\n            value={visibleWidget?.id}\n            data-testid=\"widget-drawer-selects\"\n            className={classes.drawerSelect}\n            classes={{ icon: classes.dropDownIcon }}\n            renderValue={widgetId => {\n              const widget = session.activeWidgets.get(widgetId)\n              if (!widget) {\n                return (\n                  <Typography variant=\"h6\" color=\"inherit\">\n                    Unknown widget\n                  </Typography>\n                )\n              }\n              const widgetType = pluginManager.getWidgetType(widget.type)\n              const { HeadingComponent, heading } = widgetType\n              return HeadingComponent ? (\n                <HeadingComponent model={widget} />\n              ) : (\n                <Typography variant=\"h6\" color=\"inherit\">\n                  {heading}\n                </Typography>\n              )\n            }}\n            onChange={e => {\n              const w = session.activeWidgets.get(e.target.value)\n              if (w) {\n                session.showWidget(w)\n              } else {\n                session.notify(`Widget not found ${e.target.value}`, 'warning')\n              }\n            }}\n          >\n            {[...activeWidgets.values()].map(widget => {\n              const widgetType = pluginManager.getWidgetType(widget.type)\n              const { HeadingComponent, heading } = widgetType\n              return (\n                <MenuItem\n                  data-testid={`widget-drawer-selects-item-${widget.type}`}\n                  key={widget.id}\n                  value={widget.id}\n                >\n                  {HeadingComponent ? (\n                    <HeadingComponent model={widget} />\n                  ) : (\n                    <Typography variant=\"h6\" color=\"inherit\">\n                      {heading}\n                    </Typography>\n                  )}\n                  <IconButton\n                    data-testid={`${widget.type}-drawer-delete`}\n                    color=\"inherit\"\n                    aria-label=\"Delete\"\n                    onClick={() => session.hideWidget(widget)}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                </MenuItem>\n              )\n            })}\n          </Select>\n        </FormControl>\n        <div className={classes.spacer} />\n        <div>\n          <IconButton\n            data-testid=\"drawer-close\"\n            color=\"inherit\"\n            onClick={event => setAnchorEl(event.currentTarget)}\n          >\n            <MoreVertIcon />\n          </IconButton>\n          <Tooltip title=\"Minimize drawer\">\n            <IconButton\n              data-testid=\"drawer-minimize\"\n              color=\"inherit\"\n              onClick={() => {\n                session.notify(\n                  `Drawer minimized, click button on ${drawerPosition} side of screen to re-open`,\n                  'info',\n                )\n                session.minimizeWidgetDrawer()\n              }}\n            >\n              <MinimizeIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Close drawer\">\n            <IconButton\n              data-testid=\"drawer-close\"\n              color=\"inherit\"\n              onClick={() => session.hideWidget(visibleWidget)}\n            >\n              <CloseIcon />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </Toolbar>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={() => setAnchorEl(null)}\n      >\n        {['left', 'right'].map(option => (\n          <MenuItem\n            key={option}\n            selected={drawerPosition === 'option'}\n            onClick={() => {\n              session.setDrawerPosition(option)\n              setAnchorEl(null)\n            }}\n          >\n            {option}\n          </MenuItem>\n        ))}\n      </Menu>\n    </AppBar>\n  )\n})\n\nconst DrawerWidget = observer(function ({\n  session,\n}: {\n  session: SessionWithDrawerWidgets\n}) {\n  const { visibleWidget } = session\n  const { pluginManager } = getEnv(session)\n\n  const DrawerComponent = visibleWidget\n    ? (pluginManager.evaluateExtensionPoint(\n        'Core-replaceWidget',\n        pluginManager.getWidgetType(visibleWidget.type).ReactComponent,\n        {\n          session,\n          model: visibleWidget,\n        },\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      ) as React.FC<any>)\n    : null\n\n  // we track the toolbar height because components that use virtualized\n  // height want to be able to fill the contained, minus the toolbar height\n  // (the position static/sticky is included in AutoSizer estimates)\n  const [toolbarHeight, setToolbarHeight] = useState(0)\n\n  return (\n    <Drawer session={session}>\n      <DrawerHeader session={session} setToolbarHeight={setToolbarHeight} />\n      <Suspense fallback={<LoadingEllipses />}>\n        <ErrorBoundary\n          FallbackComponent={({ error }) => <ErrorMessage error={error} />}\n        >\n          {DrawerComponent ? (\n            <>\n              <DrawerComponent\n                model={visibleWidget}\n                session={session}\n                toolbarHeight={toolbarHeight}\n              />\n              <div style={{ height: 300 }} />\n            </>\n          ) : null}\n        </ErrorBoundary>\n      </Suspense>\n    </Drawer>\n  )\n})\n\nexport default DrawerWidget\n"],"names":["useStyles","makeStyles","theme","paper","overflowY","height","zIndex","drawer","outline","background","palette","default","resizeHandle","width","position","top","observer","_ref","children","session","drawerPosition","drawerWidth","classes","_jsxs","Paper","className","elevation","square","_jsx","ResizeHandle","onDrag","resizeDrawer","vertical","style","left","formControl","margin","spacer","flexGrow","drawerSelect","color","secondary","contrastText","dropDownIcon","header","main","DrawerHeader","setToolbarHeight","pluginManager","getEnv","visibleWidget","activeWidgets","_useState","useState","_useState2","_slicedToArray","anchorEl","setAnchorEl","AppBar","ref","getBoundingClientRect","Toolbar","disableGutters","FormControl","Select","value","id","icon","renderValue","widgetId","widget","get","Typography","variant","widgetType","getWidgetType","type","HeadingComponent","heading","model","onChange","e","w","target","showWidget","notify","concat","_toConsumableArray","values","map","MenuItem","IconButton","onClick","hideWidget","DeleteIcon","event","currentTarget","MoreVertIcon","Tooltip","title","minimizeWidgetDrawer","MinimizeIcon","CloseIcon","Menu","open","Boolean","onClose","option","selected","setDrawerPosition","_ref3","DrawerComponent","evaluateExtensionPoint","ReactComponent","_useState3","_useState4","toolbarHeight","Drawer","Suspense","fallback","LoadingEllipses","ErrorBoundary","FallbackComponent","_ref4","error","ErrorMessage","_Fragment"],"sourceRoot":""}