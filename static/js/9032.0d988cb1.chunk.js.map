{"version":3,"file":"static/js/9032.0d988cb1.chunk.js","mappings":"4NAQA,MAAMA,GAAYC,E,SAAAA,KAAAA,EAAaC,IAAS,CACtCC,KAAM,CACJC,OAAQF,EAAMG,QAAQ,GACtBC,WAAYJ,EAAMG,QAAQ,IAE5BE,SAAU,CACRH,OAAQF,EAAMG,QAAQ,IAExBG,WAAY,CACVJ,OAAQF,EAAMG,QAAQ,GACtBI,UAAWP,EAAMG,QAAQ,QA4E7B,GAxEoBK,EAAAA,EAAAA,WAAS,UAAU,MACrCC,IAIA,MAAM,QAAEC,GAAYZ,KACd,QAAEa,IAAYC,EAAAA,EAAAA,YAAWH,IACzB,cAAEI,IAAkBC,EAAAA,EAAAA,QAAOL,IAC3B,QAAEM,GAAYF,EACdG,EAAc,IAAIC,IACtBF,EACGG,QAAOC,GAAKN,EAAcO,eAAeD,EAAEE,OAAOC,SAClDC,KAAIJ,GAAKA,EAAEE,QAGhB,OACEG,EAAAA,cAAA,OAAKC,UAAWf,EAAQT,MACtBuB,EAAAA,cAACE,EAAAA,EAAU,CAACC,QAAQ,KAAKC,MAAM,UAAS,aAGxCJ,EAAAA,cAACE,EAAAA,EAAU,CAACC,QAAQ,KAAKC,MAAM,SAASH,UAAWf,EAAQL,UACxDM,GAEHa,EAAAA,cAACE,EAAAA,EAAU,CAACE,MAAM,UAAS,eACZ,IACbJ,EAAAA,cAACK,EAAAA,EAAI,CAACC,KAAK,mBAAmBC,OAAO,SAASC,IAAI,uBAAsB,QAEhE,IAAI,WAGdR,EAAAA,cAAA,WACAA,EAAAA,cAACE,EAAAA,EAAU,CAACE,MAAM,UAAS,oDAG3BJ,EAAAA,cAAA,OAAKC,UAAWf,EAAQJ,YACtBkB,EAAAA,cAACE,EAAAA,EAAU,KAAC,2BACZF,EAAAA,cAAA,UACGT,EACEG,QAAOe,IAAWjB,EAAYkB,IAAID,EAAOZ,QACzCE,KAAIU,IACH,MAAM,IAAEE,EAAG,KAAEd,EAAI,QAAEV,EAAU,IAAOsB,EAC9BG,EAAQ,GAAEf,KAAQV,GAAW,KACnC,OACEa,EAAAA,cAAA,MAAIa,IAAKJ,EAAOZ,MACbY,EAAOE,IACNX,EAAAA,cAACK,EAAAA,EAAI,CAACE,OAAO,SAASC,IAAI,sBAAsBF,KAAMK,GACnDC,GAGHZ,EAAAA,cAACE,EAAAA,EAAU,KAAEU,GAEZ,KAIbZ,EAAAA,cAACE,EAAAA,EAAU,KAAC,uBACZF,EAAAA,cAAA,UACGT,EACEG,QAAOe,GAAUjB,EAAYkB,IAAID,EAAOZ,QACxCE,KAAIU,GACHT,EAAAA,cAAA,MAAIa,IAAKJ,EAAOZ,MACdG,EAAAA,cAACE,EAAAA,EAAU,KACRO,EAAOZ,KAAK,IAAEY,EAAOtB,SAAW,SAQnD,G,8LC3FO,MAAM2B,EAAuB,CAClCC,QAAS,eACTC,YAAa,eACbC,UAAW,iBACXC,cAAe,iBACfC,MAAO,cAiBT,EAZ0B,EACxB3C,QACA4C,iBAEA,MAAMC,EAP0BC,IACzBR,EAAqBQ,IAAUA,EAMbC,CAA0BH,EAAWE,OACxDA,GAAQ,QAAQ9C,EAAO,WAAW6C,KAAoB,IAAUD,EAAWE,MAC3EE,GAAe,QAAQhD,EAAO,WAAW6C,YAC/C,MAAI,SAAU7C,GAASgD,EACd,QAAQA,YAEV,QAAMF,EAAO,GAAI,E,eCjB1B,MAAMG,EAAY,CAAC,YAAa,QAAS,YAAa,SAAU,UAAW,oBAAqB,YAAa,UAAW,MA2BlHC,GAAW,EAAAC,EAAA,IAAOzB,EAAA,EAAY,CAClCL,KAAM,UACN+B,KAAM,OACNC,kBAAmB,CAACC,EAAOC,KACzB,MAAM,WACJX,GACEU,EACJ,MAAO,CAACC,EAAOtD,KAAMsD,EAAO,aAAY,EAAAC,EAAA,GAAWZ,EAAWa,cAAwC,WAAzBb,EAAWc,WAA0BH,EAAOI,OAAO,GAPnH,EASd,EACD3D,QACA4C,iBAEO,OAAS,CAAC,EAA4B,SAAzBA,EAAWa,WAAwB,CACrDG,eAAgB,QACU,UAAzBhB,EAAWa,WAAyB,CACrCG,eAAgB,OAChB,UAAW,CACTA,eAAgB,cAEQ,WAAzBhB,EAAWa,YAA0B,OAAS,CAC/CG,eAAgB,aACM,YAArBhB,EAAWE,OAAuB,CACnCe,oBAAqB,EAAkB,CACrC7D,QACA4C,gBAED,CACD,UAAW,CACTiB,oBAAqB,aAEI,WAAzBjB,EAAWc,WAA0B,CACvCI,SAAU,WACVC,wBAAyB,cACzBC,gBAAiB,cAGjBC,QAAS,EACTC,OAAQ,EACRhE,OAAQ,EAERiE,aAAc,EACdC,QAAS,EAETC,OAAQ,UACRC,WAAY,OACZC,cAAe,SACfC,cAAe,OAEfC,iBAAkB,OAElB,sBAAuB,CACrBC,YAAa,QAEf,CAAC,KAAKC,EAAA,EAAYC,gBAAiB,CACjCX,QAAS,YA4Hf,EAxH0B,cAAiB,SAAcY,EAASC,GAChE,MAAMxB,GAAQ,EAAAyB,EAAA,GAAc,CAC1BzB,MAAOuB,EACPxD,KAAM,aAEF,UACFI,EAAS,MACTqB,EAAQ,UAAS,UACjBY,EAAY,IAAG,OACfsB,EAAM,QACNC,EAAO,kBACPC,EAAiB,UACjBzB,EAAY,SAAQ,QACpB9B,EAAU,UAAS,GACnBwD,GACE7B,EACJ8B,GAAQ,OAA8B9B,EAAOL,IACzC,kBACJoC,EACAL,OAAQM,EACRL,QAASM,EACTT,IAAKU,IACH,EAAAC,EAAA,MACGb,EAAcc,GAAmB,YAAe,GACjDC,GAAa,EAAAC,EAAA,GAAWd,EAAKU,GAmB7B5C,GAAa,OAAS,CAAC,EAAGU,EAAO,CACrCR,QACAY,YACAkB,eACAnB,YACA9B,YAEIjB,EAzHkBkC,KACxB,MAAM,QACJlC,EAAO,UACPgD,EAAS,aACTkB,EAAY,UACZnB,GACEb,EACEiD,EAAQ,CACZ5F,KAAM,CAAC,OAAQ,aAAY,EAAAuD,EAAA,GAAWC,KAA4B,WAAdC,GAA0B,SAAUkB,GAAgB,iBAE1G,OAAO,EAAAkB,EAAA,GAAeD,EAAO,IAAqBnF,EAAQ,EA+G1CqF,CAAkBnD,GAClC,OAAoB,SAAKM,GAAU,OAAS,CAC1CJ,MAAOA,EACPrB,WAAW,EAAAuE,EAAA,GAAKtF,EAAQT,KAAMwB,GAC9Bf,QAASwE,EACTxB,UAAWA,EACXsB,OA/BiBiB,IACjBX,EAAkBW,IACgB,IAA9BZ,EAAkBa,SACpBR,GAAgB,GAEdV,GACFA,EAAOiB,EACT,EAyBAhB,QAvBkBgB,IAClBV,EAAmBU,IACe,IAA9BZ,EAAkBa,SACpBR,GAAgB,GAEdT,GACFA,EAAQgB,EACV,EAiBAnB,IAAKa,EACL/C,WAAYA,EACZjB,QAASA,EACTwD,GAAI,IAAMgB,OAAOC,KAAK9D,GAAsB+D,SAASvD,GAEhD,GAFyD,CAAC,CAC7DA,aACYwD,MAAMC,QAAQpB,GAAMA,EAAK,CAACA,KACvCC,GACL,G,oECzJO,SAASoB,EAAoBpD,GAClC,OAAO,QAAqB,UAAWA,EACzC,CACA,MACA,GADoB,OAAuB,UAAW,CAAC,OAAQ,gBAAiB,iBAAkB,kBAAmB,SAAU,gB","sources":["../../../plugins/menus/src/AboutWidget/components/AboutWidget.tsx","../../../node_modules/@mui/material/Link/getTextDecoration.js","../../../node_modules/@mui/material/Link/Link.js","../../../node_modules/@mui/material/Link/linkClasses.js"],"sourcesContent":["import React from 'react'\nimport { observer } from 'mobx-react'\nimport { IAnyStateTreeNode, getEnv } from 'mobx-state-tree'\nimport { getSession } from '@jbrowse/core/util'\nimport { Typography, Link } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\nconst useStyles = makeStyles()(theme => ({\n  root: {\n    margin: theme.spacing(2),\n    paddingTop: theme.spacing(2),\n  },\n  subtitle: {\n    margin: theme.spacing(1),\n  },\n  pluginList: {\n    margin: theme.spacing(1),\n    marginTop: theme.spacing(5),\n  },\n}))\n\nconst AboutWidget = observer(function ({\n  model,\n}: {\n  model: IAnyStateTreeNode\n}) {\n  const { classes } = useStyles()\n  const { version } = getSession(model)\n  const { pluginManager } = getEnv(model)\n  const { plugins } = pluginManager as PluginManager\n  const corePlugins = new Set(\n    plugins\n      .filter(p => pluginManager.pluginMetadata[p.name]?.isCore)\n      .map(p => p.name),\n  )\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h4\" align=\"center\">\n        JBrowse 2\n      </Typography>\n      <Typography variant=\"h6\" align=\"center\" className={classes.subtitle}>\n        {version}\n      </Typography>\n      <Typography align=\"center\">\n        JBrowse is a{' '}\n        <Link href=\"http://gmod.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          GMOD\n        </Link>{' '}\n        project\n      </Typography>\n      <br />\n      <Typography align=\"center\">\n        Â© 2019-2022 The Evolutionary Software Foundation\n      </Typography>\n      <div className={classes.pluginList}>\n        <Typography>External plugins loaded</Typography>\n        <ul>\n          {plugins\n            .filter(plugin => !corePlugins.has(plugin.name))\n            .map(plugin => {\n              const { url, name, version = '' } = plugin\n              const text = `${name} ${version || ''}`\n              return (\n                <li key={plugin.name}>\n                  {plugin.url ? (\n                    <Link target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {text}\n                    </Link>\n                  ) : (\n                    <Typography>{text}</Typography>\n                  )}\n                </li>\n              )\n            })}\n        </ul>\n        <Typography>Core plugins loaded</Typography>\n        <ul>\n          {plugins\n            .filter(plugin => corePlugins.has(plugin.name))\n            .map(plugin => (\n              <li key={plugin.name}>\n                <Typography>\n                  {plugin.name} {plugin.version || ''}\n                </Typography>\n              </li>\n            ))}\n        </ul>\n      </div>\n    </div>\n  )\n})\n\nexport default AboutWidget\n","import { alpha, getPath } from '@mui/system';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const {\n      className,\n      color = 'primary',\n      component = 'a',\n      onBlur,\n      onFocus,\n      TypographyClasses,\n      underline = 'always',\n      variant = 'inherit',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n  const handleBlur = event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // âââââââââââââââââââââââââââââââ Warning âââââââââââââââââââââââââââââââ\n  // â These PropTypes are generated from the TypeScript type definitions. â\n  // â    To update them, edit the d.ts file and run `pnpm proptypes`.     â\n  // âââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââ\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;"],"names":["useStyles","makeStyles","theme","root","margin","spacing","paddingTop","subtitle","pluginList","marginTop","observer","model","classes","version","getSession","pluginManager","getEnv","plugins","corePlugins","Set","filter","p","pluginMetadata","name","isCore","map","React","className","Typography","variant","align","Link","href","target","rel","plugin","has","url","text","key","colorTransformations","primary","textPrimary","secondary","textSecondary","error","ownerState","transformedColor","color","transformDeprecatedColors","channelColor","_excluded","LinkRoot","styled","slot","overridesResolver","props","styles","capitalize","underline","component","button","textDecoration","textDecorationColor","position","WebkitTapHighlightColor","backgroundColor","outline","border","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","focusVisible","inProps","ref","useThemeProps","onBlur","onFocus","TypographyClasses","sx","other","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","useIsFocusVisible","setFocusVisible","handlerRef","useForkRef","slots","composeClasses","useUtilityClasses","clsx","event","current","Object","keys","includes","Array","isArray","getLinkUtilityClass"],"sourceRoot":""}