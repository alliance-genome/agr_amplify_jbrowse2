{"version":3,"file":"static/js/2286.7237237b.chunk.js","mappings":"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","sources":["../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/components/SyntenyTooltip.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/components/LinearSyntenyRendering.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/components/Component.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/components/util.ts","../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/drawSynteny.ts"],"sourcesContent":["import React, { useMemo, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { Portal, alpha } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { usePopper } from 'react-popper'\nimport { SanitizedHTML } from '@jbrowse/core/ui'\n\nfunction round(value: number) {\n  return Math.round(value * 1e5) / 1e5\n}\n\nconst useStyles = makeStyles()(theme => ({\n  // these styles come from\n  // https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/Tooltip/Tooltip.js\n  tooltip: {\n    position: 'absolute',\n    pointerEvents: 'none',\n    backgroundColor: alpha(theme.palette.grey[700], 0.9),\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.common.white,\n    fontFamily: theme.typography.fontFamily,\n    padding: '4px 8px',\n    fontSize: theme.typography.pxToRem(12),\n    lineHeight: `${round(14 / 10)}em`,\n    maxWidth: 300,\n    wordWrap: 'break-word',\n  },\n}))\n\nconst SyntenyTooltip = observer(function ({\n  x,\n  y,\n  title,\n}: {\n  x: number\n  y: number\n  title: string\n}) {\n  const [width, setWidth] = useState(0)\n  const [anchorEl, setAnchorEl] = useState<HTMLDivElement | null>(null)\n  const { classes } = useStyles()\n\n  // must be memoized a la https://github.com/popperjs/react-popper/issues/391\n  const virtElement = useMemo(\n    () => ({\n      getBoundingClientRect: () => {\n        return {\n          top: y,\n          left: x + width / 2,\n          bottom: y,\n          right: x,\n          width: 0,\n          height: 0,\n          x,\n          y,\n          toJSON() {},\n        }\n      },\n    }),\n    [x, y, width],\n  )\n  const { styles, attributes } = usePopper(virtElement, anchorEl)\n\n  return title ? (\n    <Portal>\n      <div\n        ref={ref => {\n          setWidth(ref?.getBoundingClientRect().width || 0)\n          setAnchorEl(ref)\n        }}\n        className={classes.tooltip}\n        // zIndex needed to go over widget drawer\n        style={{ ...styles.popper, zIndex: 100000 }}\n        {...attributes.popper}\n      >\n        <SanitizedHTML html={title} />\n      </div>\n    </Portal>\n  ) : null\n})\n\nexport default SyntenyTooltip\n","import React, { useState, useCallback } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  assembleLocString,\n  getContainingView,\n  getSession,\n  isSessionModelWithWidgets,\n} from '@jbrowse/core/util'\n\n// locals\nimport SyntenyTooltip from './SyntenyTooltip'\nimport { LinearSyntenyDisplayModel } from '../model'\nimport { getId, MAX_COLOR_RANGE } from '../drawSynteny'\nimport { LinearSyntenyViewModel } from '../../LinearSyntenyView/model'\n\nconst LinearSyntenyRendering = observer(function ({\n  model,\n}: {\n  model: LinearSyntenyDisplayModel\n}) {\n  const highResolutionScaling = 1\n  const view = getContainingView(model) as LinearSyntenyViewModel\n  const height = view.middleComparativeHeight\n  const width = view.width\n\n  const [tooltip, setTooltip] = useState('')\n  const [currX, setCurrX] = useState<number>()\n  const [currY, setCurrY] = useState<number>()\n\n  // these useCallbacks avoid new refs from being created on any mouseover, etc.\n  const k1 = useCallback(\n    (ref: HTMLCanvasElement) => model.setMouseoverCanvasRef(ref),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [model, height, width],\n  )\n  const k2 = useCallback(\n    (ref: HTMLCanvasElement) => model.setMainCanvasRef(ref),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [model, height, width],\n  )\n  const k3 = useCallback(\n    (ref: HTMLCanvasElement) => model.setClickMapCanvasRef(ref),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [model, height, width],\n  )\n  const k4 = useCallback(\n    (ref: HTMLCanvasElement) => model.setCigarClickMapCanvasRef(ref),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [model, height, width],\n  )\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <canvas\n        ref={k1}\n        width={width}\n        height={height}\n        style={{ width, height, position: 'absolute', pointerEvents: 'none' }}\n      />\n      <canvas\n        ref={k2}\n        onMouseMove={event => {\n          const ref1 = model.clickMapCanvas\n          const ref2 = model.cigarClickMapCanvas\n          if (!ref1 || !ref2) {\n            return\n          }\n          const rect = ref1.getBoundingClientRect()\n          const ctx1 = ref1.getContext('2d')\n          const ctx2 = ref2.getContext('2d')\n          if (!ctx1 || !ctx2) {\n            return\n          }\n          const { clientX, clientY } = event\n          const x = clientX - rect.left\n          const y = clientY - rect.top\n          setCurrX(clientX)\n          setCurrY(clientY)\n          const [r1, g1, b1] = ctx1.getImageData(x, y, 1, 1).data\n          const [r2, g2, b2] = ctx2.getImageData(x, y, 1, 1).data\n          const unitMultiplier = Math.floor(MAX_COLOR_RANGE / model.numFeats)\n          const id = getId(r1, g1, b1, unitMultiplier)\n          model.setMouseoverId(model.featPositions[id]?.f.id())\n          if (id === -1) {\n            setTooltip('')\n          } else if (model.featPositions[id]) {\n            const { f, cigar } = model.featPositions[id]\n            // @ts-expect-error\n            const f1 = f.toJSON() as {\n              refName: string\n              start: number\n              end: number\n              strand?: number\n              assemblyName: string\n              identity?: number\n              name?: string\n              mate: {\n                start: number\n                end: number\n                refName: string\n                name: string\n              }\n            }\n            const f2 = f1.mate\n            const unitMultiplier2 = Math.floor(MAX_COLOR_RANGE / cigar.length)\n            const cigarIdx = getId(r2, g2, b2, unitMultiplier2)\n            const l1 = f1.end - f1.start\n            const l2 = f2.end - f2.start\n            const identity = f1.identity\n            const n1 = f1.name\n            const n2 = f2.name\n            const tooltip = [\n              `Loc1: ${assembleLocString(f1)}`,\n              `Loc2: ${assembleLocString(f2)}`,\n              `Inverted: ${f1.strand === -1}`,\n              `Query len: ${l1}`,\n              `Target len: ${l2}`,\n            ]\n            if (identity) {\n              tooltip.push(`Identity: ${identity}`)\n            }\n\n            if (cigar[cigarIdx]) {\n              tooltip.push(\n                `CIGAR operator: ${cigar[cigarIdx]}${cigar[cigarIdx + 1]}`,\n              )\n            }\n            if (n1 && n2) {\n              tooltip.push(`Name 1: ${n1}`, `Name 2: ${n2}`)\n            }\n            setTooltip(tooltip.join('<br/>'))\n          }\n        }}\n        onMouseLeave={() => model.setMouseoverId(undefined)}\n        onClick={event => {\n          const ref1 = model.clickMapCanvas\n          const ref2 = model.cigarClickMapCanvas\n          if (!ref1 || !ref2) {\n            return\n          }\n          const rect = ref1.getBoundingClientRect()\n          const ctx1 = ref1.getContext('2d')\n          const ctx2 = ref2.getContext('2d')\n          if (!ctx1 || !ctx2) {\n            return\n          }\n          const x = event.clientX - rect.left\n          const y = event.clientY - rect.top\n          const [r1, g1, b1] = ctx1.getImageData(x, y, 1, 1).data\n          const unitMultiplier = Math.floor(MAX_COLOR_RANGE / model.numFeats)\n          const id = getId(r1, g1, b1, unitMultiplier)\n          const f = model.featPositions[id]\n          if (!f) {\n            return\n          }\n          model.setClickId(f.f.id())\n          const session = getSession(model)\n          if (isSessionModelWithWidgets(session)) {\n            session.showWidget(\n              session.addWidget('SyntenyFeatureWidget', 'syntenyFeature', {\n                featureData: {\n                  feature1: f.f.toJSON(),\n                  feature2: f.f.get('mate'),\n                },\n              }),\n            )\n          }\n        }}\n        data-testid=\"synteny_canvas\"\n        style={{ width, height, position: 'absolute' }}\n        width={width * highResolutionScaling}\n        height={height * highResolutionScaling}\n      />\n      <canvas\n        ref={k3}\n        style={{\n          imageRendering: 'pixelated',\n          pointerEvents: 'none',\n          visibility: 'hidden',\n          position: 'absolute',\n        }}\n        width={width}\n        height={height}\n      />\n      <canvas\n        ref={k4}\n        style={{\n          imageRendering: 'pixelated',\n          pointerEvents: 'none',\n          visibility: 'hidden',\n          position: 'absolute',\n        }}\n        width={width}\n        height={height}\n      />\n      {model.mouseoverId && tooltip && currX && currY ? (\n        <SyntenyTooltip x={currX} y={currY} title={tooltip} />\n      ) : null}\n    </div>\n  )\n})\n\nexport default LinearSyntenyRendering\n","import React, { useEffect, useState } from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { LoadingEllipses } from '@jbrowse/core/ui'\n\n// locals\nimport LinearSyntenyRendering from './LinearSyntenyRendering'\nimport { LinearSyntenyDisplayModel } from '../model'\n\nconst useStyles = makeStyles()(theme => {\n  const bg = theme.palette.action.disabledBackground\n  return {\n    loading: {\n      paddingLeft: '0.6em',\n      backgroundColor: theme.palette.background.default,\n      backgroundImage: `repeating-linear-gradient(45deg, transparent, transparent 5px, ${bg} 5px, ${bg} 10px)`,\n      textAlign: 'center',\n    },\n    blockMessage: {\n      background: '#f1f1f1',\n      padding: 10,\n    },\n    blockError: {\n      background: '#f1f1f1',\n      padding: 10,\n      color: 'red',\n    },\n  }\n})\n\nfunction LoadingMessage() {\n  // only show the loading message after 300ms to prevent excessive flickering\n  const [shown, setShown] = useState(false)\n  const { classes } = useStyles()\n  useEffect(() => {\n    const timeout = setTimeout(() => setShown(true), 300)\n    return () => clearTimeout(timeout)\n  })\n\n  return shown ? (\n    <div className={classes.loading}>\n      <LoadingEllipses />\n    </div>\n  ) : null\n}\n\nfunction BlockMessage({ messageText }: { messageText: string }) {\n  const { classes } = useStyles()\n  return <div className={classes.blockMessage}>{messageText}</div>\n}\n\nfunction BlockError({ error }: { error: unknown }) {\n  const { classes } = useStyles()\n  return <div className={classes.blockError}>{`${error}`}</div>\n}\n\nconst ServerSideRenderedBlockContent = observer(function ({\n  model,\n}: {\n  model: LinearSyntenyDisplayModel\n}) {\n  if (model.error) {\n    return <BlockError error={model.error} />\n  }\n  if (model.message) {\n    return <BlockMessage messageText={model.message} />\n  }\n  if (!model.features) {\n    return <LoadingMessage />\n  }\n\n  return <LinearSyntenyRendering model={model} />\n})\n\nexport default ServerSideRenderedBlockContent\n","import { doesIntersect2, Feature } from '@jbrowse/core/util'\n\ninterface Pos {\n  offsetPx: number\n}\n\ninterface FeatPos {\n  p11: Pos\n  p12: Pos\n  p21: Pos\n  p22: Pos\n  f: Feature\n  cigar: string[]\n}\n\nexport function drawMatchSimple({\n  feature,\n  ctx,\n  offsets,\n  cb,\n  height,\n  drawCurves,\n  oobLimit,\n  viewWidth,\n  hideTiny,\n}: {\n  feature: FeatPos\n  ctx: CanvasRenderingContext2D\n  offsets: number[]\n  oobLimit: number\n  viewWidth: number\n  cb: (ctx: CanvasRenderingContext2D) => void\n  height: number\n  drawCurves?: boolean\n  hideTiny?: boolean\n}) {\n  const { p11, p12, p21, p22 } = feature\n\n  const x11 = p11.offsetPx - offsets[0]\n  const x12 = p12.offsetPx - offsets[0]\n  const x21 = p21.offsetPx - offsets[1]\n  const x22 = p22.offsetPx - offsets[1]\n\n  const l1 = Math.abs(x12 - x11)\n  const l2 = Math.abs(x22 - x21)\n  const y1 = 0\n  const y2 = height\n  const mid = (y2 - y1) / 2\n  const minX = Math.min(x21, x22)\n  const maxX = Math.max(x21, x22)\n\n  if (!doesIntersect2(minX, maxX, -oobLimit, viewWidth + oobLimit)) {\n    return\n  }\n\n  // drawing a line if the results are thin: drawing a line results in much\n  // less pixellation than filling in a thin polygon\n  if (l1 <= 1 && l2 <= 1) {\n    // hideTiny can be used to avoid drawing mouseover for thin lines in this\n    // case\n    if (!hideTiny) {\n      ctx.beginPath()\n      ctx.moveTo(x11, y1)\n      if (drawCurves) {\n        ctx.bezierCurveTo(x11, mid, x21, mid, x21, y2)\n      } else {\n        ctx.lineTo(x21, y2)\n      }\n      ctx.stroke()\n    }\n  } else {\n    draw(ctx, x11, x12, y1, x22, x21, y2, mid, drawCurves)\n    cb(ctx)\n  }\n}\n\nexport function draw(\n  ctx: CanvasRenderingContext2D,\n  x1: number,\n  x2: number,\n  y1: number,\n  x3: number,\n  x4: number,\n  y2: number,\n  mid: number,\n  drawCurves?: boolean,\n) {\n  if (drawCurves) {\n    drawBezierBox(ctx, x1, x2, y1, x3, x4, y2, mid)\n  } else {\n    drawBox(ctx, x1, x2, y1, x3, x4, y2)\n  }\n}\n\nexport function drawBox(\n  ctx: CanvasRenderingContext2D,\n  x1: number,\n  x2: number,\n  y1: number,\n  x3: number,\n  x4: number,\n  y2: number,\n) {\n  ctx.beginPath()\n  ctx.moveTo(x1, y1)\n  ctx.lineTo(x2, y1)\n  ctx.lineTo(x3, y2)\n  ctx.lineTo(x4, y2)\n  ctx.closePath()\n  ctx.fill()\n}\n\nexport function drawBezierBox(\n  ctx: CanvasRenderingContext2D,\n  x1: number,\n  x2: number,\n  y1: number,\n  x3: number,\n  x4: number,\n  y2: number,\n  mid: number,\n) {\n  const len1 = Math.abs(x1 - x2)\n  const len2 = Math.abs(x1 - x2)\n\n  // heuristic to not draw hourglass inversions with bezier curves when they\n  // are thin and far apart because it results in areas that are not drawn well\n  // demo https://codesandbox.io/s/fast-glitter-q3b1or?file=/src/index.js\n  if (len1 < 5 && len2 < 5 && x2 < x1 && Math.abs(x1 - x3) > 100) {\n    const tmp = x1\n    x1 = x2\n    x2 = tmp\n  }\n  ctx.beginPath()\n  ctx.moveTo(x1, y1)\n  ctx.lineTo(x2, y1)\n  ctx.bezierCurveTo(x2, mid, x3, mid, x3, y2)\n  ctx.lineTo(x4, y2)\n  ctx.bezierCurveTo(x4, mid, x1, mid, x1, y1)\n  ctx.closePath()\n  ctx.fill()\n}\n","import { doesIntersect2, getContainingView } from '@jbrowse/core/util'\nimport { LinearSyntenyViewModel } from '../LinearSyntenyView/model'\nimport { LinearSyntenyDisplayModel } from './model'\nimport { draw, drawMatchSimple } from './components/util'\n\nexport const MAX_COLOR_RANGE = 255 * 255 * 255 // max color range\n\nfunction makeColor(idx: number) {\n  const r = Math.floor(idx / (255 * 255)) % 255\n  const g = Math.floor(idx / 255) % 255\n  const b = idx % 255\n  return `rgb(${r},${g},${b})`\n}\n\nconst colorMap = {\n  I: '#ff03',\n  N: '#0a03',\n  D: '#00f3',\n  X: 'brown',\n  M: '#f003',\n  '=': '#f003',\n}\n\nconst lineLimit = 3\n\nconst oobLimit = 1600\n\nexport function getId(r: number, g: number, b: number, unitMultiplier: number) {\n  return Math.floor((r * 255 * 255 + g * 255 + b - 1) / unitMultiplier)\n}\n\nexport function drawRef(\n  model: LinearSyntenyDisplayModel,\n  ctx1: CanvasRenderingContext2D,\n  ctx3?: CanvasRenderingContext2D,\n) {\n  const view = getContainingView(model) as LinearSyntenyViewModel\n  const drawCurves = view.drawCurves\n  const drawCIGAR = view.drawCIGAR\n  const height = view.middleComparativeHeight\n  const width = view.width\n  const bpPerPxs = view.views.map(v => v.bpPerPx)\n\n  if (ctx3) {\n    ctx3.imageSmoothingEnabled = false\n  }\n\n  ctx1.beginPath()\n  const featPos = model.featPositions\n  const offsets = view.views.map(v => v.offsetPx)\n\n  const unitMultiplier = Math.floor(MAX_COLOR_RANGE / featPos.length)\n\n  // this loop is optimized to draw many thin lines with a single ctx.stroke\n  // call, a separate loop below draws larger boxes\n  ctx1.fillStyle = colorMap.M\n  ctx1.strokeStyle = colorMap.M\n  for (const { p11, p12, p21, p22 } of featPos) {\n    const x11 = p11.offsetPx - offsets[0]\n    const x12 = p12.offsetPx - offsets[0]\n    const x21 = p21.offsetPx - offsets[1]\n    const x22 = p22.offsetPx - offsets[1]\n    const l1 = Math.abs(x12 - x11)\n    const l2 = Math.abs(x22 - x21)\n    const y1 = 0\n    const y2 = height\n    const mid = (y2 - y1) / 2\n\n    // drawing a line if the results are thin results in much less pixellation\n    // than filling in a thin polygon\n    if (\n      l1 <= lineLimit &&\n      l2 <= lineLimit &&\n      x21 < width + oobLimit &&\n      x21 > -oobLimit\n    ) {\n      ctx1.moveTo(x11, y1)\n      if (drawCurves) {\n        ctx1.bezierCurveTo(x11, mid, x21, mid, x21, y2)\n      } else {\n        ctx1.lineTo(x21, y2)\n      }\n    }\n  }\n  ctx1.stroke()\n\n  // this loop only draws small lines as a polyline, the polyline calls\n  // ctx.stroke once is much more efficient than calling stroke() many times\n  ctx1.fillStyle = colorMap.M\n  ctx1.strokeStyle = colorMap.M\n  for (const { p11, p12, p21, p22, f, cigar } of featPos) {\n    const x11 = p11.offsetPx - offsets[0]\n    const x12 = p12.offsetPx - offsets[0]\n    const x21 = p21.offsetPx - offsets[1]\n    const x22 = p22.offsetPx - offsets[1]\n    const l1 = Math.abs(x12 - x11)\n    const l2 = Math.abs(x22 - x21)\n    const minX = Math.min(x21, x22)\n    const maxX = Math.max(x21, x22)\n    const y1 = 0\n    const y2 = height\n    const mid = (y2 - y1) / 2\n\n    if (\n      !(l1 <= lineLimit && l2 <= lineLimit) &&\n      doesIntersect2(minX, maxX, -oobLimit, view.width + oobLimit)\n    ) {\n      const s1 = f.get('strand')\n      const k1 = s1 === -1 ? x12 : x11\n      const k2 = s1 === -1 ? x11 : x12\n\n      // rev1/rev2 flip the direction of the CIGAR drawing in horizontally flipped\n      // modes. somewhat heuristically determined, but tested for\n      const rev1 = k1 < k2 ? 1 : -1\n      const rev2 = (x21 < x22 ? 1 : -1) * s1\n\n      // cx1/cx2 are the current x positions on top and bottom rows\n      let cx1 = k1\n      let cx2 = s1 === -1 ? x22 : x21\n      if (cigar?.length && drawCIGAR) {\n        // continuingFlag skips drawing commands on very small CIGAR features\n        let continuingFlag = false\n\n        // px1/px2 are the previous x positions on the top and bottom rows\n        let px1 = 0\n        let px2 = 0\n        const unitMultiplier2 = Math.floor(MAX_COLOR_RANGE / cigar.length)\n        for (let j = 0; j < cigar.length; j += 2) {\n          const idx = j * unitMultiplier2 + 1\n\n          const len = +cigar[j]\n          const op = cigar[j + 1] as keyof typeof colorMap\n\n          if (!continuingFlag) {\n            px1 = cx1\n            px2 = cx2\n          }\n\n          const d1 = len / bpPerPxs[0]\n          const d2 = len / bpPerPxs[1]\n\n          if (op === 'M' || op === '=' || op === 'X') {\n            cx1 += d1 * rev1\n            cx2 += d2 * rev2\n          } else if (op === 'D' || op === 'N') {\n            cx1 += d1 * rev1\n          } else if (op === 'I') {\n            cx2 += d2 * rev2\n          }\n\n          // check that we are even drawing in view here, e.g. that all\n          // points are not all less than 0 or greater than width\n          if (\n            !(\n              Math.max(px1, px2, cx1, cx2) < 0 ||\n              Math.min(px1, px2, cx1, cx2) > width\n            )\n          ) {\n            // if it is a small feature and not the last element of the\n            // CIGAR (which could skip rendering it entire if we did turn\n            // it on), then turn on continuing flag\n            const isNotLast = j < cigar.length - 2\n            if (\n              Math.abs(cx1 - px1) <= 1 &&\n              Math.abs(cx2 - px2) <= 1 &&\n              isNotLast\n            ) {\n              continuingFlag = true\n            } else {\n              continuingFlag = false\n\n              // allow rendering the dominant color when using continuing\n              // flag if the last element of continuing was a large\n              // feature, else just use match\n              ctx1.fillStyle =\n                colorMap[(continuingFlag && d1 > 1) || d2 > 1 ? op : 'M']\n\n              draw(ctx1, px1, cx1, y1, cx2, px2, y2, mid, drawCurves)\n              if (ctx3) {\n                ctx3.fillStyle = makeColor(idx)\n                draw(ctx3, px1, cx1, y1, cx2, px2, y2, mid, drawCurves)\n              }\n            }\n          }\n        }\n      } else {\n        draw(ctx1, x11, x12, y1, x22, x21, y2, mid, drawCurves)\n      }\n    }\n  }\n\n  // draw click map\n  const ctx2 = model.clickMapCanvas?.getContext('2d')\n  if (!ctx2) {\n    return\n  }\n  ctx2.imageSmoothingEnabled = false\n  ctx2.clearRect(0, 0, width, height)\n  for (let i = 0; i < featPos.length; i++) {\n    const feature = featPos[i]\n    const idx = i * unitMultiplier + 1\n    ctx2.fillStyle = makeColor(idx)\n\n    // too many click map false positives with colored stroked lines\n    drawMatchSimple({\n      cb: ctx => ctx.fill(),\n      feature,\n      ctx: ctx2,\n      drawCurves,\n      offsets,\n      oobLimit,\n      viewWidth: view.width,\n      hideTiny: true,\n      height,\n    })\n  }\n}\n\nexport function drawMouseoverSynteny(model: LinearSyntenyDisplayModel) {\n  const { clickId, mouseoverId } = model\n  const highResolutionScaling = 1\n  const view = getContainingView(model) as LinearSyntenyViewModel\n  const drawCurves = view.drawCurves\n  const height = view.middleComparativeHeight\n  const width = view.width\n  const ctx = model.mouseoverCanvas?.getContext('2d')\n  const offsets = view.views.map(v => v.offsetPx)\n\n  if (!ctx) {\n    return\n  }\n  ctx.resetTransform()\n  ctx.scale(highResolutionScaling, highResolutionScaling)\n  ctx.clearRect(0, 0, width, height)\n  const feature1 = model.featMap[mouseoverId || '']\n  if (feature1) {\n    ctx.fillStyle = 'rgb(0,0,0,0.1)'\n    drawMatchSimple({\n      cb: ctx => ctx.fill(),\n      feature: feature1,\n      ctx,\n      oobLimit,\n      viewWidth: view.width,\n      drawCurves,\n      offsets,\n      height,\n    })\n  }\n  const feature2 = model.featMap[clickId || '']\n  if (feature2) {\n    ctx.strokeStyle = 'rgb(0, 0, 0, 0.9)'\n\n    drawMatchSimple({\n      cb: ctx => ctx.stroke(),\n      feature: feature2,\n      ctx,\n      oobLimit,\n      viewWidth: view.width,\n      drawCurves,\n      offsets,\n      height,\n    })\n  }\n}\n"],"names":["useStyles","makeStyles","theme","tooltip","position","pointerEvents","backgroundColor","alpha","palette","grey","borderRadius","shape","color","common","white","fontFamily","typography","padding","fontSize","pxToRem","lineHeight","Math","round","value","maxWidth","wordWrap","observer","x","y","title","width","setWidth","useState","anchorEl","setAnchorEl","classes","virtElement","useMemo","getBoundingClientRect","top","left","bottom","right","height","toJSON","styles","attributes","usePopper","React","Portal","_extends","ref","className","style","popper","zIndex","SanitizedHTML","html","model","view","getContainingView","middleComparativeHeight","setTooltip","currX","setCurrX","currY","setCurrY","k1","useCallback","setMouseoverCanvasRef","k2","setMainCanvasRef","k3","setClickMapCanvasRef","k4","setCigarClickMapCanvasRef","onMouseMove","event","ref1","clickMapCanvas","ref2","cigarClickMapCanvas","rect","ctx1","getContext","ctx2","clientX","clientY","r1","g1","b1","getImageData","data","r2","g2","b2","unitMultiplier","floor","MAX_COLOR_RANGE","numFeats","id","getId","setMouseoverId","featPositions","f","cigar","f1","f2","mate","unitMultiplier2","length","cigarIdx","l1","end","start","l2","identity","n1","name","n2","assembleLocString","strand","push","join","onMouseLeave","undefined","onClick","setClickId","session","getSession","isSessionModelWithWidgets","showWidget","addWidget","featureData","feature1","feature2","get","imageRendering","visibility","mouseoverId","SyntenyTooltip","bg","action","disabledBackground","loading","paddingLeft","background","default","backgroundImage","textAlign","blockMessage","blockError","LoadingMessage","shown","setShown","useEffect","timeout","setTimeout","clearTimeout","LoadingEllipses","BlockMessage","messageText","BlockError","error","message","features","LinearSyntenyRendering","drawMatchSimple","feature","ctx","offsets","cb","drawCurves","oobLimit","viewWidth","hideTiny","p11","p12","p21","p22","x11","offsetPx","x12","x21","x22","abs","y2","mid","minX","min","maxX","max","doesIntersect2","beginPath","moveTo","bezierCurveTo","lineTo","stroke","draw","x1","x2","y1","x3","x4","len1","len2","tmp","closePath","fill","drawBezierBox","drawBox","makeColor","idx","colorMap","I","N","D","X","M","lineLimit","r","g","b","drawRef","ctx3","drawCIGAR","bpPerPxs","views","map","v","bpPerPx","imageSmoothingEnabled","featPos","fillStyle","strokeStyle","s1","rev1","rev2","cx1","cx2","continuingFlag","px1","px2","j","len","op","d1","d2","isNotLast","clearRect","i","drawMouseoverSynteny","clickId","mouseoverCanvas","resetTransform","scale","featMap"],"sourceRoot":""}