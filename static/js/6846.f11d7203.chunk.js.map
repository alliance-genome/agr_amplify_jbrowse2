{"version":3,"file":"static/js/6846.f11d7203.chunk.js","mappings":"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","sources":["../../../packages/core/BaseFeatureWidget/SequenceFeatureDetails/hooks.ts","../../../packages/core/BaseFeatureWidget/SequenceFeatureDetails/SequenceFeatureDetails.tsx","../../../node_modules/@mui/icons-material/Settings.js"],"sourcesContent":["import { useEffect, useState } from 'react'\n\nimport { SeqState, ErrorState } from '../util'\nimport { Feature, SimpleFeatureSerialized, getSession } from '../../util'\nimport { getConf } from '../../configuration'\n\nconst BPLIMIT = 500_000\n\ninterface CoordFeat extends SimpleFeatureSerialized {\n  refName: string\n  start: number\n  end: number\n}\n\nexport function useFeatureSequence(\n  model: { view?: { assemblyNames?: string[] } } | undefined,\n  feature: SimpleFeatureSerialized,\n  upDownBp: number,\n  forceLoad: boolean,\n) {\n  const [sequence, setSequence] = useState<SeqState | ErrorState>()\n  const [error, setError] = useState<unknown>()\n  useEffect(() => {\n    let finished = false\n    if (!model) {\n      return () => {}\n    }\n    const { assemblyManager, rpcManager } = getSession(model)\n    const [assemblyName] = model.view?.assemblyNames || []\n    async function fetchSeq(start: number, end: number, refName: string) {\n      const assembly = await assemblyManager.waitForAssembly(assemblyName)\n      if (!assembly) {\n        throw new Error('assembly not found')\n      }\n      const sessionId = 'getSequence'\n      const feats = await rpcManager.call(sessionId, 'CoreGetFeatures', {\n        adapterConfig: getConf(assembly, ['sequence', 'adapter']),\n        sessionId,\n        regions: [\n          {\n            start,\n            end,\n            refName: assembly.getCanonicalRefName(refName),\n            assemblyName,\n          },\n        ],\n      })\n\n      const [feat] = feats as Feature[]\n      return (feat?.get('seq') as string | undefined) || ''\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      try {\n        setError(undefined)\n        const { start, end, refName } = feature as CoordFeat\n\n        if (!forceLoad && end - start > BPLIMIT) {\n          setSequence({\n            error: `Genomic sequence larger than ${BPLIMIT}bp, use \"force load\" button to display`,\n          })\n        } else {\n          const b = start - upDownBp\n          const e = end + upDownBp\n          const seq = await fetchSeq(start, end, refName)\n          const up = await fetchSeq(Math.max(0, b), start, refName)\n          const down = await fetchSeq(end, e, refName)\n          if (!finished) {\n            setSequence({ seq, upstream: up, downstream: down })\n          }\n        }\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    })()\n\n    return () => {\n      finished = true\n    }\n  }, [feature, model, upDownBp, forceLoad])\n  return { sequence, error }\n}\n","import React, { lazy, useRef, useState, Suspense } from 'react'\nimport {\n  Button,\n  FormControl,\n  IconButton,\n  MenuItem,\n  Select,\n  Typography,\n  Tooltip,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport copy from 'copy-to-clipboard'\n\n// locals\nimport { useLocalStorage } from '../../util'\nimport { BaseProps } from './../types'\nimport { ParentFeat } from '../util'\nimport { LoadingEllipses } from '../../ui'\n\n// icons\nimport SettingsIcon from '@mui/icons-material/Settings'\nimport { useFeatureSequence } from './hooks'\n\n// lazies\nconst SettingsDlg = lazy(() => import('./SequenceFeatureSettingsDialog'))\nconst SequencePanel = lazy(() => import('./SequencePanel'))\n\nconst useStyles = makeStyles()(theme => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n  formControl: {\n    margin: 0,\n  },\n  container2: {\n    marginTop: theme.spacing(1),\n  },\n}))\n\n// set the key on this component to feature.id to clear state after new feature\n// is selected\nexport default function SequenceFeatureDetails({\n  model,\n  feature: prefeature,\n}: BaseProps) {\n  const { classes } = useStyles()\n  const feature = prefeature as unknown as ParentFeat\n  const seqPanelRef = useRef<HTMLDivElement>(null)\n  const [intronBp, setIntronBp] = useLocalStorage('intronBp', 10)\n  const [upDownBp, setUpDownBp] = useLocalStorage('upDownBp', 500)\n  const [copied, setCopied] = useState(false)\n  const [copiedHtml, setCopiedHtml] = useState(false)\n  const [force, setForce] = useState(false)\n  const hasCDS = feature.subfeatures?.some(sub => sub.type === 'CDS')\n  const hasExon = feature.subfeatures?.some(sub => sub.type === 'exon')\n  const hasExonOrCDS = hasExon || hasCDS\n  const { sequence, error } = useFeatureSequence(\n    model,\n    prefeature,\n    upDownBp,\n    force,\n  )\n\n  const [mode, setMode] = useState(\n    hasCDS ? 'cds' : hasExon ? 'cdna' : 'genomic',\n  )\n\n  const rest = {\n    ...(hasCDS ? { cds: 'CDS' } : {}),\n    ...(hasCDS ? { protein: 'Protein' } : {}),\n    ...(hasExonOrCDS ? { cdna: 'cDNA' } : {}),\n    ...(hasExonOrCDS ? { gene: `Genomic w/ full introns` } : {}),\n    ...(hasExonOrCDS\n      ? {\n          gene_updownstream: `Genomic w/ full introns +/- ${upDownBp}bp up+down stream`,\n        }\n      : {}),\n    ...(hasExonOrCDS\n      ? { gene_collapsed_intron: `Genomic w/ ${intronBp}bp intron` }\n      : {}),\n    ...(hasExonOrCDS\n      ? {\n          gene_updownstream_collapsed_intron: `Genomic w/ ${intronBp}bp intron +/- ${upDownBp}bp up+down stream `,\n        }\n      : {}),\n\n    ...(!hasExonOrCDS ? { genomic: 'Genomic' } : {}),\n    ...(!hasExonOrCDS\n      ? {\n          genomic_sequence_updownstream: `Genomic +/- ${upDownBp}bp up+down stream`,\n        }\n      : {}),\n  }\n\n  return (\n    <div className={classes.container2}>\n      <FormControl className={classes.formControl}>\n        <Select value={mode} onChange={event => setMode(event.target.value)}>\n          {Object.entries(rest).map(([key, val]) => (\n            <MenuItem key={key} value={key}>\n              {val}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <FormControl className={classes.formControl}>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          onClick={() => {\n            const ref = seqPanelRef.current\n            if (ref) {\n              copy(ref.textContent || '', { format: 'text/plain' })\n              setCopied(true)\n              setTimeout(() => setCopied(false), 1000)\n            }\n          }}\n        >\n          {copied ? 'Copied to clipboard!' : 'Copy plaintext'}\n        </Button>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <Tooltip title=\"The 'Copy HTML' function retains the colors from the sequence panel but cannot be pasted into some programs like notepad that only expect plain text\">\n          <Button\n            className={classes.button}\n            variant=\"contained\"\n            onClick={() => {\n              const ref = seqPanelRef.current\n              if (!ref) {\n                return\n              }\n              copy(ref.innerHTML, { format: 'text/html' })\n              setCopiedHtml(true)\n              setTimeout(() => setCopiedHtml(false), 1000)\n            }}\n          >\n            {copiedHtml ? 'Copied to clipboard!' : 'Copy HTML'}\n          </Button>\n        </Tooltip>\n      </FormControl>\n      <Settings\n        upDownBp={upDownBp}\n        intronBp={intronBp}\n        setIntronBp={setIntronBp}\n        setUpDownBp={setUpDownBp}\n      />\n      <br />\n      {feature.type === 'gene' ? (\n        <Typography>\n          Note: inspect subfeature sequences for protein/CDS computations\n        </Typography>\n      ) : null}\n      {error ? (\n        <Typography color=\"error\">{`${error}`}</Typography>\n      ) : !sequence ? (\n        <LoadingEllipses />\n      ) : sequence ? (\n        'error' in sequence ? (\n          <>\n            <Typography color=\"error\">{sequence.error}</Typography>\n            <Button\n              variant=\"contained\"\n              color=\"inherit\"\n              onClick={() => setForce(true)}\n            >\n              Force load\n            </Button>\n          </>\n        ) : (\n          <Suspense fallback={<LoadingEllipses />}>\n            <SequencePanel\n              ref={seqPanelRef}\n              feature={feature}\n              mode={mode}\n              sequence={sequence}\n              intronBp={intronBp}\n            />\n          </Suspense>\n        )\n      ) : (\n        <Typography>No sequence found</Typography>\n      )}\n    </div>\n  )\n}\n\nfunction Settings({\n  intronBp,\n  upDownBp,\n  setIntronBp,\n  setUpDownBp,\n}: {\n  intronBp: number\n  upDownBp: number\n  setIntronBp: (arg: number) => void\n  setUpDownBp: (arg: number) => void\n}) {\n  const { classes } = useStyles()\n  const [settingsDlgOpen, setSettingsDlgOpen] = useState(false)\n  return (\n    <>\n      <FormControl className={classes.formControl}>\n        <IconButton onClick={() => setSettingsDlgOpen(true)}>\n          <SettingsIcon />\n        </IconButton>\n      </FormControl>\n      {settingsDlgOpen ? (\n        <Suspense fallback={<div />}>\n          <SettingsDlg\n            handleClose={arg => {\n              if (arg) {\n                const { upDownBp, intronBp } = arg\n                setIntronBp(intronBp)\n                setUpDownBp(upDownBp)\n              }\n              setSettingsDlgOpen(false)\n            }}\n            upDownBp={upDownBp}\n            intronBp={intronBp}\n          />\n        </Suspense>\n      ) : null}\n    </>\n  )\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19.14 12.94c.04-.3.06-.61.06-.94 0-.32-.02-.64-.07-.94l2.03-1.58c.18-.14.23-.41.12-.61l-1.92-3.32c-.12-.22-.37-.29-.59-.22l-2.39.96c-.5-.38-1.03-.7-1.62-.94l-.36-2.54c-.04-.24-.24-.41-.48-.41h-3.84c-.24 0-.43.17-.47.41l-.36 2.54c-.59.24-1.13.57-1.62.94l-2.39-.96c-.22-.08-.47 0-.59.22L2.74 8.87c-.12.21-.08.47.12.61l2.03 1.58c-.05.3-.09.63-.09.94s.02.64.07.94l-2.03 1.58c-.18.14-.23.41-.12.61l1.92 3.32c.12.22.37.29.59.22l2.39-.96c.5.38 1.03.7 1.62.94l.36 2.54c.05.24.24.41.48.41h3.84c.24 0 .44-.17.47-.41l.36-2.54c.59-.24 1.13-.56 1.62-.94l2.39.96c.22.08.47 0 .59-.22l1.92-3.32c.12-.22.07-.47-.12-.61l-2.01-1.58zM12 15.6c-1.98 0-3.6-1.62-3.6-3.6s1.62-3.6 3.6-3.6 3.6 1.62 3.6 3.6-1.62 3.6-3.6 3.6z\"\n}), 'Settings');\nexports.default = _default;"],"names":["BPLIMIT","SettingsDlg","lazy","SequencePanel","useStyles","makeStyles","theme","button","margin","spacing","formControl","container2","marginTop","SequenceFeatureDetails","_ref","_feature$subfeatures","_feature$subfeatures2","model","prefeature","feature","classes","seqPanelRef","useRef","_useLocalStorage","useLocalStorage","_useLocalStorage2","_slicedToArray","intronBp","setIntronBp","_useLocalStorage3","_useLocalStorage4","upDownBp","setUpDownBp","_useState","useState","_useState2","copied","setCopied","_useState3","_useState4","copiedHtml","setCopiedHtml","_useState5","_useState6","force","setForce","hasCDS","subfeatures","some","sub","type","hasExon","hasExonOrCDS","_useFeatureSequence","forceLoad","sequence","setSequence","error","setError","useEffect","_model$view","finished","_getSession","getSession","assemblyManager","rpcManager","view","assemblyNames","assemblyName","fetchSeq","_x","_x2","_x3","_fetchSeq","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","start","end","refName","assembly","sessionId","feats","_ref5","_ref6","feat","wrap","_context2","prev","next","waitForAssembly","sent","Error","call","adapterConfig","getConf","regions","getCanonicalRefName","abrupt","get","stop","_callee","_ref4","b","e","seq","up","down","_context","undefined","concat","Math","max","upstream","downstream","t0","console","useFeatureSequence","_useState7","_useState8","mode","setMode","rest","_objectSpread","cds","protein","cdna","gene","gene_updownstream","gene_collapsed_intron","gene_updownstream_collapsed_intron","genomic","genomic_sequence_updownstream","_jsxs","className","children","_jsx","FormControl","Select","value","onChange","event","target","Object","entries","map","_ref2","_ref3","key","val","MenuItem","Button","variant","onClick","ref","current","copy","textContent","format","setTimeout","Tooltip","title","innerHTML","Settings","Typography","color","_Fragment","Suspense","fallback","LoadingEllipses","_useState9","_useState10","settingsDlgOpen","setSettingsDlgOpen","IconButton","SettingsIcon","handleClose","arg","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}