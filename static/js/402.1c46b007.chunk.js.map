{"version":3,"file":"static/js/402.1c46b007.chunk.js","mappings":"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","sources":["../../../packages/core/ui/ResizeBar.tsx","../../../packages/core/ui/useResizeBar.tsx","../../../plugins/grid-bookmark/src/GridBookmarkWidget/components/BookmarkGrid.tsx","../../../plugins/grid-bookmark/src/GridBookmarkWidget/components/DeleteBookmarks.tsx","../../../plugins/grid-bookmark/src/GridBookmarkWidget/components/ExportBookmarks.tsx","../../../plugins/grid-bookmark/src/GridBookmarkWidget/components/ImportBookmarks.tsx","../../../plugins/grid-bookmark/src/GridBookmarkWidget/components/AssemblySelector.tsx","../../../plugins/grid-bookmark/src/GridBookmarkWidget/components/ShareBookmarks.tsx","../../../plugins/grid-bookmark/src/GridBookmarkWidget/components/GridBookmarkWidget.tsx","../../../plugins/grid-bookmark/src/GridBookmarkWidget/utils.ts"],"sourcesContent":["import React, { useState, useCallback } from 'react'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport ResizeHandle from './ResizeHandle'\n\nconst useStyles = makeStyles()(theme => ({\n  resizeBar: {\n    background: theme.palette.action.disabledBackground,\n    height: 12,\n    position: 'relative',\n    overflow: 'hidden',\n  },\n  tick: {\n    position: 'absolute',\n    height: '100%',\n    pointerEvents: 'none',\n    background: theme.palette.action.disabled,\n    width: 1,\n  },\n  hiddenTick: {\n    position: 'absolute',\n    height: '100%',\n    width: 5,\n  },\n}))\n\nfunction Tick({\n  left,\n  scrollLeft,\n  idx,\n  onDrag,\n  onMouseDown,\n}: {\n  idx: number\n  left: number\n  scrollLeft: number\n  onMouseDown: (event: React.MouseEvent) => void\n  onDrag: (\n    lastFrameDistance: number,\n    totalDistance: number,\n    idx: number,\n  ) => void\n}) {\n  const { classes } = useStyles()\n  const onDragCallback = useCallback(\n    (lastFrameDistance: number, totalDistance: number) =>\n      onDrag(lastFrameDistance, totalDistance, idx),\n    [idx, onDrag],\n  )\n\n  // has an invisible wider than tick mark (1px) clickable area (5px)\n  return (\n    <>\n      <ResizeHandle\n        onDrag={onDragCallback}\n        onMouseDown={onMouseDown}\n        vertical\n        className={classes.hiddenTick}\n        style={{ left: left - scrollLeft - 2.5 }}\n      />\n      <div style={{ left: left - scrollLeft }} className={classes.tick} />\n    </>\n  )\n}\n\nexport default function ResizeBar({\n  widths,\n  setWidths,\n  checkbox,\n  scrollLeft = 0,\n}: {\n  widths: number[]\n  setWidths: (arg: number[]) => void\n  checkbox?: boolean\n  scrollLeft?: number\n}) {\n  const { classes } = useStyles()\n  const offsets = [] as number[]\n  const [initial, setInitial] = useState<number[]>()\n  let init = checkbox ? 52 : 0\n  for (let i = 0; i < widths.length; i++) {\n    const width = widths[i]\n    offsets[i] = width + init\n    init += width\n  }\n\n  return (\n    <div className={classes.resizeBar}>\n      {offsets.map((left, i) => (\n        <Tick\n          key={i}\n          onMouseDown={() => {\n            setInitial([...widths])\n          }}\n          left={i === offsets.length - 1 ? left - 3 : left}\n          onDrag={(_: number, totalDistance: number, idx: number) => {\n            const newWidths = [...widths]\n            // mui doesn't allow columns smaller than 50\n            newWidths[idx] = Math.max(initial![idx] - totalDistance, 50)\n            setWidths(newWidths)\n          }}\n          idx={i}\n          scrollLeft={scrollLeft}\n        />\n      ))}\n    </div>\n  )\n}\n","import { useEffect, useRef, useState } from 'react'\n\nexport function useResizeBar() {\n  const ref = useRef<HTMLDivElement>(null)\n  const [scrollLeft, setScrollLeft] = useState(0)\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const elt = ref.current?.querySelector('.MuiDataGrid-virtualScroller')\n      if (elt) {\n        setScrollLeft(elt.scrollLeft)\n      }\n    }, 100)\n    return () => {\n      clearInterval(timer)\n    }\n  }, [])\n  return { ref, scrollLeft }\n}\n","import React, { Suspense, lazy, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { Link } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { DataGrid, GRID_CHECKBOX_SELECTION_COL_DEF } from '@mui/x-data-grid'\nimport {\n  getSession,\n  assembleLocString,\n  measureGridWidth,\n  measureText,\n} from '@jbrowse/core/util'\n\n// locals\nimport { navToBookmark } from '../utils'\nimport { GridBookmarkModel, IExtendedLabeledRegionModel } from '../model'\nimport { useResizeBar } from '@jbrowse/core/ui/useResizeBar'\nimport ResizeBar from '@jbrowse/core/ui/ResizeBar'\n\nconst EditBookmarkLabelDialog = lazy(() => import('./EditBookmarkLabelDialog'))\n\nconst useStyles = makeStyles()(() => ({\n  link: {\n    cursor: 'pointer',\n  },\n  cell: {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n}))\n\nconst BookmarkGrid = observer(function ({\n  model,\n}: {\n  model: GridBookmarkModel\n}) {\n  const { classes, cx } = useStyles()\n  const [dialogRow, setDialogRow] = useState<IExtendedLabeledRegionModel>()\n  const { ref, scrollLeft } = useResizeBar()\n  const {\n    bookmarks,\n    bookmarksWithValidAssemblies,\n    selectedAssemblies,\n    selectedBookmarks,\n  } = model\n\n  const session = getSession(model)\n  const selectedSet = new Set(selectedAssemblies)\n  const rows = bookmarks\n    .filter(r => selectedSet.has(r.assemblyName))\n    .map((region, index) => {\n      const { assemblyName, ...rest } = region\n      return {\n        ...region,\n        id: index,\n        assemblyName,\n        locString: assembleLocString(rest),\n        correspondingObj: region,\n      }\n    })\n\n  // reset selections if bookmarked regions change\n  // needed especially if bookmarked regions are deleted, then\n  const [widths, setWidths] = useState([\n    40,\n    Math.max(\n      measureText('Bookmark link'),\n      measureGridWidth(rows.map(row => row.locString)),\n    ),\n    Math.max(\n      measureText('Label'),\n      measureGridWidth(rows.map(row => row.label)),\n    ),\n    Math.max(\n      measureText('Assembly'),\n      measureGridWidth(rows.map(row => row.assemblyName)),\n    ),\n  ])\n\n  return (\n    <>\n      <div ref={ref}>\n        <ResizeBar\n          widths={widths}\n          setWidths={setWidths}\n          scrollLeft={scrollLeft}\n        />\n        <DataGrid\n          autoHeight\n          density=\"compact\"\n          rows={rows}\n          columns={[\n            {\n              ...GRID_CHECKBOX_SELECTION_COL_DEF,\n              width: widths[0],\n            },\n            {\n              field: 'locString',\n              headerName: 'Bookmark link',\n              width: widths[1],\n              renderCell: ({ value, row }) => (\n                <Link\n                  className={cx(classes.link, classes.cell)}\n                  href=\"#\"\n                  onClick={async event => {\n                    event.preventDefault()\n                    const { views } = session\n                    await navToBookmark(value, row.assemblyName, views, model)\n                  }}\n                >\n                  {value}\n                </Link>\n              ),\n            },\n            {\n              field: 'label',\n              headerName: 'Label',\n              width: widths[2],\n              editable: true,\n            },\n            {\n              field: 'assemblyName',\n              headerName: 'Assembly',\n              width: widths[3],\n            },\n          ]}\n          onCellDoubleClick={({ row }) => setDialogRow(row)}\n          processRowUpdate={row => {\n            const target = rows[row.id]\n            model.updateBookmarkLabel(target, row.label)\n            return row\n          }}\n          onProcessRowUpdateError={e => session.notify(e.message, 'error')}\n          checkboxSelection\n          onRowSelectionModelChange={newRowSelectionModel => {\n            if (bookmarksWithValidAssemblies.length > 0) {\n              model.setSelectedBookmarks(\n                newRowSelectionModel.map(value => ({\n                  ...rows[value as number],\n                })),\n              )\n            }\n          }}\n          rowSelectionModel={selectedBookmarks.map(r => r.id)}\n          disableRowSelectionOnClick\n        />\n      </div>\n      {dialogRow ? (\n        <Suspense fallback={<React.Fragment />}>\n          <EditBookmarkLabelDialog\n            onClose={() => setDialogRow(undefined)}\n            model={model}\n            dialogRow={dialogRow}\n          />\n        </Suspense>\n      ) : null}\n    </>\n  )\n})\n\nexport default BookmarkGrid\n","import React, { Suspense, lazy, useState } from 'react'\nimport { Button } from '@mui/material'\n\n// icons\nimport DeleteIcon from '@mui/icons-material/Delete'\n\n// locals\nimport { GridBookmarkModel } from '../model'\nconst DeleteBookmarksDialog = lazy(() => import('./DeleteBookmarksDialog'))\n\nfunction DeleteBookmarks({ model }: { model: GridBookmarkModel }) {\n  const [open, setOpen] = useState(false)\n  return (\n    <>\n      <Button\n        startIcon={<DeleteIcon />}\n        aria-label=\"clear bookmarks\"\n        onClick={() => setOpen(true)}\n      >\n        Delete\n      </Button>\n      {open ? (\n        <Suspense fallback={<React.Fragment />}>\n          <DeleteBookmarksDialog model={model} onClose={() => setOpen(false)} />\n        </Suspense>\n      ) : null}\n    </>\n  )\n}\n\nexport default DeleteBookmarks\n","import React, { Suspense, lazy, useState } from 'react'\nimport { observer } from 'mobx-react'\n\nimport { Button } from '@mui/material'\nimport GetAppIcon from '@mui/icons-material/GetApp'\n\n// locals\nimport { GridBookmarkModel } from '../model'\n\nconst ExportBookmarksDialog = lazy(() => import('./ExportBookmarksDialog'))\n\nconst ExportBookmarks = observer(function ExportBookmarks({\n  model,\n}: {\n  model: GridBookmarkModel\n}) {\n  const [open, setOpen] = useState(false)\n  return (\n    <>\n      <Button\n        startIcon={<GetAppIcon />}\n        onClick={() => setOpen(true)}\n        data-testid=\"export_button\"\n      >\n        Export\n      </Button>\n      {open ? (\n        <Suspense fallback={<React.Fragment />}>\n          <ExportBookmarksDialog onClose={() => setOpen(false)} model={model} />\n        </Suspense>\n      ) : null}\n    </>\n  )\n})\n\nexport default ExportBookmarks\n","import React, { useState, Suspense, lazy } from 'react'\nimport { observer } from 'mobx-react'\nimport { Button } from '@mui/material'\n\n// icons\nimport ImportIcon from '@mui/icons-material/Publish'\n\n// locals\nimport { GridBookmarkModel } from '../model'\n\nconst ImportBookmarksDialog = lazy(() => import('./ImportBookmarksDialog'))\n\nconst ImportBookmarks = observer(function ({\n  model,\n}: {\n  model: GridBookmarkModel\n}) {\n  const [open, setOpen] = useState(false)\n\n  return (\n    <>\n      <Button startIcon={<ImportIcon />} onClick={() => setOpen(true)}>\n        Import\n      </Button>\n      {open ? (\n        <Suspense fallback={<React.Fragment />}>\n          <ImportBookmarksDialog onClose={() => setOpen(false)} model={model} />\n        </Suspense>\n      ) : null}\n    </>\n  )\n})\n\nexport default ImportBookmarks\n","import React from 'react'\nimport { observer } from 'mobx-react'\n\nimport {\n  Checkbox,\n  FormControl,\n  InputLabel,\n  ListItemText,\n  MenuItem,\n  OutlinedInput,\n  Select,\n} from '@mui/material'\n\n// locals\nimport { GridBookmarkModel } from '../model'\n\nconst AssemblySelector = observer(function ({\n  model,\n}: {\n  model: GridBookmarkModel\n}) {\n  const { validAssemblies, selectedAssemblies } = model\n  const noAssemblies = validAssemblies.size === 0 ? true : false\n  const label = 'Select assemblies'\n  const id = 'select-assemblies-label'\n  const selectedSet = new Set(selectedAssemblies)\n  const isAllSelected = [...validAssemblies].every(e => selectedSet.has(e))\n\n  return (\n    <FormControl disabled={noAssemblies} fullWidth>\n      <InputLabel id={id}>{label}</InputLabel>\n      <Select\n        labelId={id}\n        multiple\n        value={selectedAssemblies}\n        onChange={event => model.setSelectedAssemblies([...event.target.value])}\n        input={<OutlinedInput label={label} />}\n        renderValue={selected => selected.join(', ')}\n      >\n        <MenuItem\n          onClickCapture={event => {\n            // onClickCapture allows us to avoid the parent Select onChange from triggering\n            if (isAllSelected) {\n              model.setSelectedAssemblies([])\n            } else {\n              model.setSelectedAssemblies(undefined)\n            }\n            event.preventDefault()\n          }}\n        >\n          <Checkbox\n            checked={isAllSelected}\n            indeterminate={!isAllSelected && selectedAssemblies.length > 0}\n          />\n          <ListItemText primary=\"Select all\" />\n        </MenuItem>\n        {[...validAssemblies].map(name => (\n          <MenuItem key={name} value={name}>\n            <Checkbox checked={selectedAssemblies.includes(name)} />\n            <ListItemText primary={name} />\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nexport default AssemblySelector\n","import React, { Suspense, lazy, useState } from 'react'\n\nimport { Button } from '@mui/material'\n\nimport { ContentCopy as ContentCopyIcon } from '@jbrowse/core/ui/Icons'\n\n// locals\nimport { GridBookmarkModel } from '../model'\nconst ShareBookmarksDialog = lazy(() => import('./ShareBookmarksDialog'))\n\nfunction ShareBookmarks({ model }: { model: GridBookmarkModel }) {\n  const [open, setOpen] = useState(false)\n  return (\n    <>\n      <Button startIcon={<ContentCopyIcon />} onClick={() => setOpen(true)}>\n        Share\n      </Button>\n      {open ? (\n        <Suspense fallback={<React.Fragment />}>\n          <ShareBookmarksDialog onClose={() => setOpen(false)} model={model} />\n        </Suspense>\n      ) : null}\n    </>\n  )\n}\n\nexport default ShareBookmarks\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { Alert } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport BookmarkGrid from './BookmarkGrid'\nimport DeleteBookmarks from './DeleteBookmarks'\nimport ExportBookmarks from './ExportBookmarks'\nimport ImportBookmarks from './ImportBookmarks'\nimport AssemblySelector from './AssemblySelector'\nimport ShareBookmarks from './ShareBookmarks'\n\nimport { GridBookmarkModel } from '../model'\n\nconst useStyles = makeStyles()({\n  card: {\n    marginTop: 5,\n  },\n})\n\nconst GridBookmarkWidget = observer(function GridBookmarkWidget({\n  model,\n}: {\n  model: GridBookmarkModel\n}) {\n  const { classes } = useStyles()\n\n  if (!model) {\n    return null\n  }\n\n  return (\n    <div className={classes.card}>\n      <div>\n        <ExportBookmarks model={model} />\n        <ImportBookmarks model={model} />\n        <ShareBookmarks model={model} />\n        <DeleteBookmarks model={model} />\n      </div>\n      <Alert severity=\"info\">\n        Click and type within the <strong>label</strong> field to annotate your\n        bookmark. Double click the <strong>label</strong> field to do so within\n        a dialog.\n      </Alert>\n      <AssemblySelector model={model} />\n      <BookmarkGrid model={model} />\n    </div>\n  )\n})\n\nexport default GridBookmarkWidget\n","import { saveAs } from 'file-saver'\nimport { getSession, assembleLocString } from '@jbrowse/core/util'\nimport { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\nimport { AbstractViewModel } from '@jbrowse/core/util/types'\n\n// locals\nimport { GridBookmarkModel } from './model'\n\ntype LGV = LinearGenomeViewModel\n\ntype MaybeLGV = LGV | undefined\n\nexport async function navToBookmark(\n  locString: string,\n  assembly: string,\n  views: AbstractViewModel[],\n  model: GridBookmarkModel,\n) {\n  const session = getSession(model)\n  try {\n    // get the focused view\n    let view = views.find(view => view.id === session.focusedViewId) as MaybeLGV\n\n    // check if the focused view is the appropriate assembly, if not proceed\n    if (view?.assemblyNames[0] !== assembly) {\n      view = views.find(\n        elt =>\n          // @ts-expect-error\n          elt.type === 'LinearGenomeView' && elt.assemblyNames[0] === assembly,\n      ) as MaybeLGV\n    }\n\n    // if no view is opened of the selectedAssembly, open a new\n    // view with that assembly\n    if (!view) {\n      const newViewId = `${model.id}_${assembly}`\n      view = session.addView('LinearGenomeView', {\n        id: newViewId,\n      }) as LGV\n    }\n    await view.navToLocString(locString, assembly)\n  } catch (e) {\n    console.error(e)\n    session.notify(`${e}`, 'error')\n  }\n}\n\nexport function downloadBookmarkFile(\n  fileFormat: string,\n  model: GridBookmarkModel,\n) {\n  const { selectedBookmarks, bookmarksWithValidAssemblies } = model\n  const bookmarksToDownload =\n    selectedBookmarks.length === 0\n      ? bookmarksWithValidAssemblies\n      : selectedBookmarks\n\n  if (fileFormat === 'BED') {\n    const fileHeader = ''\n    const fileContents: Record<string, string[]> = {}\n    bookmarksToDownload.forEach(bookmark => {\n      const { label } = bookmark\n      const labelVal = label === '' ? '.' : label\n      const line = `${bookmark.refName}\\t${bookmark.start}\\t${bookmark.end}\\t${labelVal}\\n`\n\n      fileContents[bookmark.assemblyName]\n        ? fileContents[bookmark.assemblyName].push(line)\n        : (fileContents[bookmark.assemblyName] = [line])\n    })\n\n    for (const assembly in fileContents) {\n      const fileContent = fileContents[assembly].reduce(\n        (a, b) => a + b,\n        fileHeader,\n      )\n      const blob = new Blob([fileContent || ''], {\n        type: 'text/x-bed;charset=utf-8',\n      })\n      const fileName = `jbrowse_bookmarks_${assembly}.bed`\n      saveAs(blob, fileName)\n    }\n  } else {\n    // TSV\n    const fileHeader = 'chrom\\tstart\\tend\\tlabel\\tassembly_name\\tcoord_range\\n'\n\n    const fileContents = bookmarksToDownload\n      .map(bookmark => {\n        const { label } = bookmark\n        const labelVal = label === '' ? '.' : label\n        const locString = assembleLocString(bookmark)\n        return `${bookmark.refName}\\t${bookmark.start + 1}\\t${\n          bookmark.end\n        }\\t${labelVal}\\t${bookmark.assemblyName}\\t${locString}\\n`\n      })\n      .reduce((a, b) => a + b, fileHeader)\n\n    const blob = new Blob([fileContents || ''], {\n      type: 'text/tab-separated-values;charset=utf-8',\n    })\n    const fileName = 'jbrowse_bookmarks.tsv'\n    saveAs(blob, fileName)\n  }\n}\n\n/**\n * Pad the end of a base64 string with \"=\" to make it valid\n * @param b64 - unpadded b64 string\n */\nexport function b64PadSuffix(b64: string): string {\n  let num = 0\n  const mo = b64.length % 4\n  switch (mo) {\n    case 3:\n      num = 1\n      break\n    case 2:\n      num = 2\n      break\n    case 0:\n      num = 0\n      break\n    default:\n      throw new Error('base64 not a valid length')\n  }\n  return b64 + '='.repeat(num)\n}\n\n/**\n * Decode and inflate a url-safe base64 to a string\n * See {@link https://en.wikipedia.org/wiki/Base64#URL_applications}\n * @param b64 - a base64 string to decode and inflate\n */\nexport async function fromUrlSafeB64(b64: string) {\n  const originalB64 = b64PadSuffix(\n    b64.replaceAll('-', '+').replaceAll('_', '/'),\n  )\n  const { toByteArray } = await import('base64-js')\n  const { inflate } = await import('pako')\n  const bytes = toByteArray(originalB64)\n  const inflated = inflate(bytes)\n  return new TextDecoder().decode(inflated)\n}\n\n/**\n * Compress and encode a string as url-safe base64\n * See {@link https://en.wikipedia.org/wiki/Base64#URL_applications}\n * @param str-  a string to compress and encode\n */\nexport async function toUrlSafeB64(str: string) {\n  const bytes = new TextEncoder().encode(str)\n  const { deflate } = await import('pako')\n  const { fromByteArray } = await import('base64-js')\n  const deflated = deflate(bytes)\n  const encoded = fromByteArray(deflated)\n  const pos = encoded.indexOf('=')\n  return pos > 0\n    ? encoded.slice(0, pos).replaceAll('+', '-').replaceAll('/', '_')\n    : encoded.replaceAll('+', '-').replaceAll('/', '_')\n}\n"],"names":["useStyles","makeStyles","theme","resizeBar","background","palette","action","disabledBackground","height","position","overflow","tick","pointerEvents","disabled","width","hiddenTick","Tick","_ref","left","scrollLeft","idx","onDrag","onMouseDown","classes","onDragCallback","useCallback","lastFrameDistance","totalDistance","_jsxs","_Fragment","children","_jsx","ResizeHandle","vertical","className","style","ResizeBar","_ref2","widths","setWidths","checkbox","_ref2$scrollLeft","offsets","_useState","useState","_useState2","_slicedToArray","initial","setInitial","init","i","length","map","_toConsumableArray","_","newWidths","Math","max","useResizeBar","ref","useRef","setScrollLeft","useEffect","timer","setInterval","_ref$current","elt","current","querySelector","clearInterval","EditBookmarkLabelDialog","lazy","link","cursor","cell","whiteSpace","textOverflow","BookmarkGrid","observer","model","_useStyles","cx","dialogRow","setDialogRow","_useResizeBar","bookmarks","bookmarksWithValidAssemblies","selectedAssemblies","selectedBookmarks","session","getSession","selectedSet","Set","rows","filter","r","has","assemblyName","region","index","rest","_objectWithoutProperties","_excluded","_objectSpread","id","locString","assembleLocString","correspondingObj","_useState3","measureText","measureGridWidth","row","label","_useState4","DataGrid","autoHeight","density","columns","GRID_CHECKBOX_SELECTION_COL_DEF","field","headerName","renderCell","value","Link","href","onClick","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","views","wrap","_context","prev","next","preventDefault","navToBookmark","stop","_x","apply","arguments","editable","onCellDoubleClick","_ref4","processRowUpdate","target","updateBookmarkLabel","onProcessRowUpdateError","e","notify","message","checkboxSelection","onRowSelectionModelChange","newRowSelectionModel","setSelectedBookmarks","rowSelectionModel","disableRowSelectionOnClick","Suspense","fallback","React","onClose","undefined","DeleteBookmarksDialog","open","setOpen","Button","startIcon","DeleteIcon","ExportBookmarksDialog","GetAppIcon","ImportBookmarksDialog","ImportIcon","validAssemblies","noAssemblies","size","isAllSelected","every","FormControl","fullWidth","InputLabel","Select","labelId","multiple","onChange","setSelectedAssemblies","input","OutlinedInput","renderValue","selected","join","MenuItem","onClickCapture","Checkbox","checked","indeterminate","ListItemText","primary","name","includes","ShareBookmarksDialog","ContentCopyIcon","card","marginTop","ExportBookmarks","ImportBookmarks","ShareBookmarks","DeleteBookmarks","Alert","severity","AssemblySelector","_x2","_x3","_x4","_navToBookmark","assembly","_view","view","newViewId","find","focusedViewId","assemblyNames","type","concat","addView","navToLocString","t0","console","error","downloadBookmarkFile","fileFormat","bookmarksToDownload","fileContents","forEach","bookmark","labelVal","line","refName","start","end","push","fileContent","reduce","a","b","blob","Blob","fileName","saveAs","b64PadSuffix","b64","num","Error","repeat","fromUrlSafeB64","_x5","_fromUrlSafeB","_callee2","originalB64","_yield$import","toByteArray","_yield$import2","inflate","bytes","inflated","_context2","replaceAll","sent","abrupt","TextDecoder","decode","toUrlSafeB64","_x6","_toUrlSafeB","_callee3","str","_yield$import3","deflate","_yield$import4","fromByteArray","deflated","encoded","pos","_context3","TextEncoder","encode","indexOf","slice"],"sourceRoot":""}