{"version":3,"file":"static/js/7098.92c62008.chunk.js","mappings":"uQAKMA,GAAYC,EAAAA,EAAAA,KAAAA,EAAa,SAAAC,GAAK,MAAK,CACvCC,QAAS,CACPC,OAAQF,EAAMG,QAAQ,GACtBC,MAAO,KAETC,cAAe,CACbD,MAAO,QAEV,IAEc,SAASE,EAA8B,GAQlD,IAPFC,EAAW,EAAXA,YACUC,EAAW,EAArBC,SACUC,EAAW,EAArBC,SAMQC,EAAYd,IAAZc,QACR,GAAgCC,EAAAA,EAAAA,UAAS,GAAD,OAAIL,IAAc,eAAnDC,EAAQ,KAAEK,EAAW,KAC5B,GAAgCD,EAAAA,EAAAA,UAAS,GAAD,OAAIH,IAAc,eAAnDC,EAAQ,KAAEI,EAAW,KACtBC,GAAiBC,OAAOC,OAAOT,GAC/BU,GAAiBF,OAAOC,OAAOP,GACrC,OACE,UAAC,EAAAS,OAAM,CACLC,SAAS,KACTC,MAAI,EACJC,QAAS,kBAAMhB,GAAa,EAC5BiB,MAAO,4BAA4B,WAEnC,UAAC,IAAa,CAACC,UAAWb,EAAQP,cAAc,WAC9C,SAAC,IAAS,CACRqB,MAAM,yDACND,UAAWb,EAAQX,QACnB0B,MAAOlB,EACPmB,WAAaZ,EAAiC,GAAjB,eAC7Ba,OAAQb,EACRc,SAAU,SAAAC,GAAK,OAAIjB,EAAYiB,EAAMC,OAAOL,MAAM,KAEpD,SAAC,IAAS,CACRD,MAAM,uDACND,UAAWb,EAAQX,QACnB0B,MAAOhB,EACPiB,WAAaT,EAAiC,GAAjB,eAC7BU,OAAQV,EACRW,SAAU,SAAAC,GAAK,OAAIhB,EAAYgB,EAAMC,OAAOL,MAAM,QAItD,UAAC,IAAa,YACZ,SAAC,IAAM,CACLM,QAAS,kBACP1B,EAAY,CACVI,UAAWA,EACXF,UAAWA,GACX,EAEJyB,UAAWlB,IAAkBG,EAC7BgB,MAAM,UACNC,QAAQ,YAAW,SACpB,YAGD,SAAC,IAAM,CACLH,QAAS,kBAAM1B,GAAa,EAC5B4B,MAAM,YACNE,WAAS,EACTD,QAAQ,YAAW,SACpB,gBAMT,C","sources":["../../../packages/core/BaseFeatureWidget/SequenceFeatureSettingsDialog.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Button, DialogContent, DialogActions, TextField } from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()(theme => ({\n  formElt: {\n    margin: theme.spacing(3),\n    width: 400,\n  },\n  dialogContent: {\n    width: '80em',\n  },\n}))\n\nexport default function SequenceFeatureSettingsDialog({\n  handleClose,\n  intronBp: intronBpArg,\n  upDownBp: upDownBpArg,\n}: {\n  handleClose: (arg?: { intronBp: number; upDownBp: number }) => void\n  intronBp: number\n  upDownBp: number\n}) {\n  const { classes } = useStyles()\n  const [intronBp, setIntronBp] = useState(`${intronBpArg}`)\n  const [upDownBp, setUpDownBp] = useState(`${upDownBpArg}`)\n  const intronBpValid = !Number.isNaN(+intronBp)\n  const upDownBpValid = !Number.isNaN(+upDownBp)\n  return (\n    <Dialog\n      maxWidth=\"xl\"\n      open\n      onClose={() => handleClose()}\n      title={'Feature sequence settings'}\n    >\n      <DialogContent className={classes.dialogContent}>\n        <TextField\n          label=\"Number of intronic bases around splice site to display\"\n          className={classes.formElt}\n          value={intronBp}\n          helperText={!intronBpValid ? 'Not a number' : ''}\n          error={!intronBpValid}\n          onChange={event => setIntronBp(event.target.value)}\n        />\n        <TextField\n          label=\"Number of bases up/down stream of feature to display\"\n          className={classes.formElt}\n          value={upDownBp}\n          helperText={!upDownBpValid ? 'Not a number' : ''}\n          error={!upDownBpValid}\n          onChange={event => setUpDownBp(event.target.value)}\n        />\n      </DialogContent>\n\n      <DialogActions>\n        <Button\n          onClick={() =>\n            handleClose({\n              upDownBp: +upDownBp,\n              intronBp: +intronBp,\n            })\n          }\n          disabled={!intronBpValid || !upDownBpValid}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Submit\n        </Button>\n        <Button\n          onClick={() => handleClose()}\n          color=\"secondary\"\n          autoFocus\n          variant=\"contained\"\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n"],"names":["useStyles","makeStyles","theme","formElt","margin","spacing","width","dialogContent","SequenceFeatureSettingsDialog","handleClose","intronBpArg","intronBp","upDownBpArg","upDownBp","classes","useState","setIntronBp","setUpDownBp","intronBpValid","Number","isNaN","upDownBpValid","Dialog","maxWidth","open","onClose","title","className","label","value","helperText","error","onChange","event","target","onClick","disabled","color","variant","autoFocus"],"sourceRoot":""}