{"version":3,"file":"static/js/4947.7852274a.chunk.js","mappings":"sPAYMA,GAAYC,EAAAA,EAAAA,KAAAA,EAAa,SAAAC,GAAK,MAAK,CACvCC,KAAM,CACJC,MAAO,KAEV,IAsDD,WAAeC,EAAAA,EAAAA,WApDf,SAAyBC,GAOvB,IAAQC,EAAuBD,EAAvBC,MAAOC,EAAgBF,EAAhBE,YACPC,EAAYT,IAAZS,QACR,EAA2BF,EAAnBG,UAAAA,OAAS,MAAG,GAAE,EACtB,GAAsBC,EAAAA,EAAAA,UAAS,GAAD,OAAID,IAAY,eAAvCE,EAAG,KAAEC,EAAM,KAElB,OACE,UAAC,EAAAC,OAAM,CAACC,MAAI,EAACC,QAASR,EAAaS,MAAM,iBAAgB,WACvD,UAAC,IAAa,CAACC,UAAWT,EAAQN,KAAK,WACrC,SAAC,IAAU,UAAC,8GAIZ,SAAC,IAAS,CACRgB,MAAOP,EACPQ,SAAU,SAAAC,GAAK,OAAIR,EAAOQ,EAAMC,OAAOH,MAAM,EAC7CI,YAAY,oCAGhB,UAAC,IAAa,YACZ,SAAC,IAAM,CACLC,QAAQ,YACRC,MAAM,UACNC,KAAK,SACLC,WAAS,EACTC,QAAS,WACPrB,EAAMsB,aACI,KAARjB,GAAekB,OAAOC,OAAOnB,QAAcoB,GAANpB,GAEvCJ,GACF,EAAE,SACH,YAGD,SAAC,IAAM,CACLgB,QAAQ,YACRC,MAAM,YACNG,QAAS,kBAAMpB,GAAa,EAAC,SAC9B,gBAMT,G","sources":["../../../plugins/alignments/src/LinearPileupDisplay/components/SetMaxHeight.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()(theme => ({\n  root: {\n    width: 500,\n  },\n}))\n\nfunction SetMaxHeightDlg(props: {\n  model: {\n    maxHeight?: number\n    setMaxHeight: Function\n  }\n  handleClose: () => void\n}) {\n  const { model, handleClose } = props\n  const { classes } = useStyles()\n  const { maxHeight = '' } = model\n  const [max, setMax] = useState(`${maxHeight}`)\n\n  return (\n    <Dialog open onClose={handleClose} title=\"Filter options\">\n      <DialogContent className={classes.root}>\n        <Typography>\n          Set max height for the track. For example, you can increase this if\n          the layout says &quot;Max height reached&quot;\n        </Typography>\n        <TextField\n          value={max}\n          onChange={event => setMax(event.target.value)}\n          placeholder=\"Enter max height for layout\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          autoFocus\n          onClick={() => {\n            model.setMaxHeight(\n              max !== '' && !Number.isNaN(+max) ? +max : undefined,\n            )\n            handleClose()\n          }}\n        >\n          Submit\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => handleClose()}\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default observer(SetMaxHeightDlg)\n"],"names":["useStyles","makeStyles","theme","root","width","observer","props","model","handleClose","classes","maxHeight","useState","max","setMax","Dialog","open","onClose","title","className","value","onChange","event","target","placeholder","variant","color","type","autoFocus","onClick","setMaxHeight","Number","isNaN","undefined"],"sourceRoot":""}