{"version":3,"file":"static/js/8301.7e899852.chunk.js","mappings":"4TAgBA,SAASA,GAAW,YAClBC,EAAW,UACXC,EAAS,UACTC,EAAS,aACTC,EAAY,aACZC,EAAY,aACZC,IASA,GAAoB,SAAhBL,EACF,MAAO,CACLM,KAAM,aACNC,YAAaJ,EACbK,cAAeP,EACfQ,eAAgBP,GAEb,GAAoB,SAAhBF,EACT,MAAO,CACLM,KAAM,iBACNI,YAAaP,EACbK,cAAeP,EACfQ,eAAgBP,GAEb,GAAoB,WAAhBF,EACT,MAAO,CACLM,KAAM,eACNK,cAAeR,EACfK,cAAeP,EACfQ,eAAgBP,GAEb,GAAoB,WAAhBF,EACT,MAAO,CACLM,KAAM,eACNM,cAAeT,EACfK,cAAeP,EACfQ,eAAgBP,GAEb,GAAoB,aAAhBF,EACT,MAAO,CACLM,KAAM,uBACNO,sBAAuBV,EACvBC,eACAC,eACAS,cAAe,CAACb,EAAWC,IAExB,GAAoB,oBAAhBF,EACT,MAAO,CACLM,KAAM,6BACNS,4BAA6BZ,EAC7BC,eACAC,eACAS,cAAe,CAACb,EAAWC,IAG7B,MAAM,IAAIc,MACP,0BAAyBhB,mDAGhC,CAIA,MAgKA,GAhKkBiB,EAAAA,EAAAA,WAChB,EACEhB,YACAC,YACAgB,0BAOA,MAAOb,EAAcc,IAAmBC,EAAAA,EAAAA,aACjChB,EAAciB,IAAmBD,EAAAA,EAAAA,aACjCjB,EAAcmB,IAAmBF,EAAAA,EAAAA,aACjCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,KAC5BK,EAAOC,IAAYN,EAAAA,EAAAA,YACpBO,GCnGRC,EDmG2BzB,GC/FvByB,EAAiBC,KAEfD,EAAiBE,WAEjBF,EAAiBG,UACnBC,EAVC,IACLJ,EDqGE,MAAM5B,EAAcuB,IAAUI,ECjF3B,SAAiBM,GACtB,MAAMC,EAAID,EAAIE,MAAM,KAAKC,MACzB,OAAOF,EAAK,IAAGA,IAAM,EACvB,CD8E6CG,CCzFtC,SAAiBV,GACtB,OAAOA,EAASW,SAAS,OAASX,EAASY,MAAM,GAAI,GAAKZ,CAC5D,CDuFqDa,CAAQb,IAAa,IAsCtE,OApCAc,EAAAA,EAAAA,YAAU,KACR,IACE,GAAItC,EAAc,CAChB,MAAMuC,EAAKf,EAAoBA,ECzF5BQ,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAGA,MAAM,KAAKC,MDyFC,UACrCO,EAAW,GAAED,KAAME,KAAKC,QAC9BnB,OAASM,GAETd,EAAoB,CAClByB,UACAZ,KAAMW,EACN5B,cAAe,CAACZ,EAAWD,GAC3BK,KAAM,eACNwC,QAAS/C,EAAW,CAClBC,cACAC,YACAC,YACAC,eACAC,eACAC,kBAGN,CACF,CAAE,MAAO0C,GACPC,QAAQvB,MAAMsB,GACdrB,EAASqB,EACX,IACC,CACDpB,EACA1B,EACAC,EACAE,EACAC,EACAF,EACAH,EACAkB,IAGA+B,EAAAA,cAACC,EAAAA,EAAK,CAACC,MAAO,CAAEC,QAAS,KACtB3B,EAAQwB,EAAAA,cAACI,EAAAA,aAAY,CAAC5B,MAAOA,IAAY,KAC1CwB,EAAAA,cAACK,EAAAA,EAAU,CAACH,MAAO,CAAEI,UAAW,WAAY,mUAO5CN,EAAAA,cAACO,EAAAA,EAAU,CACTjC,MAAOvB,EACPyD,SAAUC,GAASlC,EAASkC,EAAMC,OAAOpC,QAEzC0B,EAAAA,cAACW,EAAAA,GAAI,CAACC,WAAS,EAACC,eAAe,UAC7Bb,EAAAA,cAACW,EAAAA,GAAI,CAACG,MAAI,GACRd,EAAAA,cAACe,EAAAA,EAAgB,CAACzC,MAAM,OAAO0C,QAAShB,EAAAA,cAACiB,EAAAA,EAAK,MAAKC,MAAM,UAE3DlB,EAAAA,cAACW,EAAAA,GAAI,CAACG,MAAI,GACRd,EAAAA,cAACe,EAAAA,EAAgB,CAACzC,MAAM,OAAO0C,QAAShB,EAAAA,cAACiB,EAAAA,EAAK,MAAKC,MAAM,UAE3DlB,EAAAA,cAACW,EAAAA,GAAI,CAACG,MAAI,GACRd,EAAAA,cAACe,EAAAA,EAAgB,CACfzC,MAAM,SACN0C,QAAShB,EAAAA,cAACiB,EAAAA,EAAK,MACfC,MAAM,YAGVlB,EAAAA,cAACW,EAAAA,GAAI,CAACG,MAAI,GACRd,EAAAA,cAACe,EAAAA,EAAgB,CACfzC,MAAM,SACN0C,QAAShB,EAAAA,cAACiB,EAAAA,EAAK,MACfC,MAAM,YAGVlB,EAAAA,cAACW,EAAAA,GAAI,CAACG,MAAI,GACRd,EAAAA,cAACe,EAAAA,EAAgB,CACfzC,MAAM,WACN0C,QAAShB,EAAAA,cAACiB,EAAAA,EAAK,MACfC,MAAM,cAGVlB,EAAAA,cAACW,EAAAA,GAAI,CAACG,MAAI,GACRd,EAAAA,cAACe,EAAAA,EAAgB,CACfzC,MAAM,kBACN0C,QAAShB,EAAAA,cAACiB,EAAAA,EAAK,MACfC,MAAM,uBAKdlB,EAAAA,cAACW,EAAAA,GAAI,CAACC,WAAS,EAACC,eAAe,UAC7Bb,EAAAA,cAACW,EAAAA,GAAI,CAACG,MAAI,GACG,aAAVxC,GAAkC,oBAAVA,EACvB0B,EAAAA,cAAA,WACEA,EAAAA,cAAA,OAAKE,MAAO,CAAEiB,OAAQ,KAAM,YAChB7C,EAAM,uFAC0B,IAC1C0B,EAAAA,cAAA,KAAGoB,KAAK,mEAAkE,gBAI5EpB,EAAAA,cAAA,OAAKE,MAAO,CAAEmB,QAAS,SACrBrB,EAAAA,cAAA,WACEA,EAAAA,cAACsB,EAAAA,aAAY,CACXxC,KAAK,gBACLyC,YAAY,GACZC,SAAUtE,EACVuE,YAAaC,GAAOrD,EAAgBqD,MAGxC1B,EAAAA,cAAA,WACEA,EAAAA,cAACsB,EAAAA,aAAY,CACXxC,KAAK,8CACLyC,YAAY,GACZC,SAAUrE,EACVsE,YAAaC,GAAOtD,EAAgBsD,MAGxC1B,EAAAA,cAAA,WACEA,EAAAA,cAACsB,EAAAA,aAAY,CACXxC,KAAK,+CACLyC,YAAY,GACZC,SAAUpE,EACVqE,YAAaC,GAAOxD,EAAgBwD,QAM5C1B,EAAAA,cAACsB,EAAAA,aAAY,CACXxC,KAAMR,EAAQA,EAAQ,YAAc,GACpCiD,YAAY,GACZC,SAAUtE,EACVuE,YAAaC,GAAOrD,EAAgBqD,OAKtC,I,gDExNd,MA0DA,GA1DiB1D,EAAAA,EAAAA,WACf,EACE2D,QACA3E,YACAC,YACA2E,qBAOA,MAAMC,GAAUC,EAAAA,EAAAA,YAAWH,IACrB,OAAEI,EAAS,GAAE,cAAEC,EAAgB,IAAOH,EAEtCI,EADY,IAAIF,KAAWC,GACAE,QAAOC,GAxB5C,SAAWC,EAA8BpF,EAAmBC,GAC1D,MAAMY,GAAgBwE,EAAAA,EAAAA,gBAAeD,EAAO,iBAC5C,OACEvE,EAAcyE,SAAStF,IACvBa,EAAcyE,SAASrF,IACvBmF,EAAM/E,KAAKiF,SAAS,UAExB,CAiBiDC,CAAEJ,EAAGlF,EAAWD,KACvDwF,EAAaP,EAAe,IAAIvC,SAAW,IAC1CpB,EAAOC,IAAYJ,EAAAA,EAAAA,UAASqE,GAanC,OAZAhD,EAAAA,EAAAA,YAAU,KAIRjB,EAASiE,EAAW,GACnB,CAACA,KAEJhD,EAAAA,EAAAA,YAAU,KAGRoC,EAAetD,EAAM,GACpB,CAACA,EAAOsD,IAET5B,EAAAA,cAACC,EAAAA,EAAK,CAACC,MAAO,CAAEC,QAAS,KACvBH,EAAAA,cAACK,EAAAA,EAAU,CAACoC,WAAS,GAAC,4FAKrBR,EAAeS,OACd1C,EAAAA,cAAC2C,EAAAA,EAAM,CACLrE,MAAOA,EACPkC,SAAUC,GAASlC,EAASkC,EAAMC,OAAOpC,QAExC2D,EAAeW,KAAIR,GAClBpC,EAAAA,cAAC6C,EAAAA,EAAQ,CAACC,IAAKV,EAAM1C,QAASpB,MAAO8D,EAAM1C,UACxCqD,EAAAA,EAAAA,cAAaX,EAAOP,OAK3B7B,EAAAA,cAACI,EAAAA,aAAY,CACX5B,MAAQ,+BAA8BxB,KAAaC,MAGjD,ICpDR+F,GAAYC,EAAAA,EAAAA,KAAAA,EAAaC,IAAS,CACtCC,oBAAqB,CACnBhD,QAAS+C,EAAME,QAAQ,GACvBjC,OAAQ,UAEVkC,iBAAkB,CAChBC,MAAO,MACPnC,OAAQ,cAMZ,SAASoC,GAAc,oBACrBtF,EAAmB,eACnB2D,EAAc,iBACdjD,EAAgB,UAChB3B,EAAS,UACTC,EAAS,MACT0E,IASA,MAAO6B,EAAQC,IAAatF,EAAAA,EAAAA,UAAS,aAQrC,OANAqB,EAAAA,EAAAA,YAAU,KACO,SAAXgE,IACFvF,OAAoBc,GACpB6C,OAAe7C,GACjB,GACC,CAACyE,EAAQvF,EAAqB2D,IAE/B5B,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAC0D,EAAAA,EAAW,KACV1D,EAAAA,cAAC2D,EAAAA,EAAS,CAACC,GAAG,eAAc,4CAG5B5D,EAAAA,cAACO,EAAAA,EAAU,CACTsD,KAAG,EACHvF,MAAOkF,EACPhD,SAAUC,GAASgD,EAAUhD,EAAMC,OAAOpC,OAC1C,kBAAgB,eAEhB0B,EAAAA,cAACe,EAAAA,EAAgB,CAACzC,MAAM,OAAO0C,QAAShB,EAAAA,cAACiB,EAAAA,EAAK,MAAKC,MAAM,SACzDlB,EAAAA,cAACe,EAAAA,EAAgB,CACfzC,MAAM,YACN0C,QAAShB,EAAAA,cAACiB,EAAAA,EAAK,MACfC,MAAM,mBAERlB,EAAAA,cAACe,EAAAA,EAAgB,CACfzC,MAAM,SACN0C,QAAShB,EAAAA,cAACiB,EAAAA,EAAK,MACfC,MAAM,gBAIA,WAAXsC,EACCxD,EAAAA,cAAC8D,EAAiB,CAChB7F,oBAAqBA,EACrBU,iBAAkBA,EAClB1B,UAAWA,EACXD,UAAWA,IAEX,KACQ,cAAXwG,EACCxD,EAAAA,cAAC+D,EAA0B,CACzBpC,MAAOA,EACP3E,UAAWA,EACXC,UAAWA,EACX2E,eAAgBA,IAEhB,KAGV,CAEA,MAqHA,GArHoC5D,EAAAA,EAAAA,WAAS,UAAU,MACrD2D,IAIA,MAAM,QAAEqC,GAAYhB,IACdnB,GAAUC,EAAAA,EAAAA,YAAWH,IACrB,cAAE9D,GAAkBgE,GACnB5E,EAAWgH,IAAgB9F,EAAAA,EAAAA,UAASN,EAAc,IAAM,KACxDb,EAAWkH,IAAgB/F,EAAAA,EAAAA,UAASN,EAAc,IAAM,KACxDW,EAAOC,IAAYN,EAAAA,EAAAA,aACnBQ,EAAkBV,IAAuBE,EAAAA,EAAAA,aACzCgG,EAAavC,IAAkBzD,EAAAA,EAAAA,YA0ChCiG,EAAe5F,EACrB,OACEwB,EAAAA,cAACqE,EAAAA,EAAS,CAACC,UAAWN,EAAQb,qBAC3BiB,EAAepE,EAAAA,cAACI,EAAAA,aAAY,CAAC5B,MAAO4F,IAAmB,KACxDpE,EAAAA,cAACW,EAAAA,GAAI,CACHC,WAAS,EACTwC,QAAS,EACTvC,eAAe,SACf0D,WAAW,SACXD,UAAWN,EAAQX,kBAEnBrD,EAAAA,cAACW,EAAAA,GAAI,CAACG,MAAI,GACRd,EAAAA,cAACC,EAAAA,EAAK,CAACC,MAAO,CAAEC,QAAS,KACvBH,EAAAA,cAAA,KAAGE,MAAO,CAAEI,UAAW,WAAY,6CAGnCN,EAAAA,cAACW,EAAAA,GAAI,CACHC,WAAS,EACTwC,QAAS,EACTvC,eAAe,SACf0D,WAAW,UAEXvE,EAAAA,cAACW,EAAAA,GAAI,CAACG,MAAI,GACRd,EAAAA,cAACwE,EAAAA,iBAAgB,CACfC,SAAUzH,EACVwD,SAAUkE,GAAOR,EAAaQ,GAC9B7C,QAASA,KAGb7B,EAAAA,cAACW,EAAAA,GAAI,CAACG,MAAI,GACRd,EAAAA,cAACwE,EAAAA,iBAAgB,CACfC,SAAUxH,EACVuD,SAAUkE,GAAOT,EAAaS,GAC9B7C,QAASA,KAGb7B,EAAAA,cAACW,EAAAA,GAAI,CAACG,MAAI,GACRd,EAAAA,cAAC0D,EAAAA,EAAW,KACV1D,EAAAA,cAAC2E,EAAAA,EAAM,CACLC,QA/ElBC,iBACE,IACE,KAAKC,EAAAA,EAAAA,wBAAuBjD,GAC1B,OAEFpD,OAASM,GAET,MAAM,gBAAEgG,GAAoBlD,EACtBmD,EAAa,CAAChI,EAAWC,GAC/B0E,EAAMsD,eACEC,QAAQC,IACZH,EAAWpC,KAAIiC,UACb,MAAMO,QAAYL,EAAgBM,gBAAgBC,GAClD,IAAKF,EACH,MAAM,IAAIrH,MAAO,YAAWuH,oBAE9B,MAAO,CACLjI,KAAM,mBACNkI,QAAS,EACTC,SAAU,EACVC,YAAY,EACZC,iBAAkBN,EAAIO,QACvB,MAIPhE,EAAMiE,MAAMC,SAAQC,GAAQA,EAAKC,SAASpE,EAAM2B,SAC5C3E,GACFkD,EAAQmE,aAAarH,GACrBgD,EAAMsE,YAAYtH,EAAiBe,UAC1ByE,GACTxC,EAAMuE,UAAU/B,EAEpB,CAAE,MAAOrE,GACPC,QAAQvB,MAAMsB,GACdrB,EAASqB,EACX,CACF,EA2CkBqG,QAAQ,YACRC,MAAM,WACP,cAOTpG,EAAAA,cAACuD,EAAa,CACZ3B,eAAgBA,EAChB3E,UAAWA,EACXD,UAAWA,EACXiB,oBAAqBA,EACrBU,iBAAkBA,EAClBgD,MAAOA,MAMnB,G,6JC1NA,MAAM0E,EAAY,CAAC,YAAa,YAAa,iBAAkB,QAAS,WAAY,WAW9EC,GAAe,EAAAC,EAAA,KACfC,GAA+B,OAAa,MAAO,CACvD1H,KAAM,eACN2H,KAAM,OACNC,kBAAmB,CAACC,EAAOC,KACzB,MAAM,WACJC,GACEF,EACJ,MAAO,CAACC,EAAOE,KAAMF,EAAO,YAAW,EAAAG,EAAA,GAAWC,OAAOH,EAAWI,cAAeJ,EAAWK,OAASN,EAAOM,MAAOL,EAAWM,gBAAkBP,EAAOO,eAAe,IAGtKC,EAAuBC,IAAW,EAAAC,EAAA,GAAoB,CAC1DX,MAAOU,EACPvI,KAAM,eACNwH,iB,qCCpBF,MAAMjC,EDqCS,SAAyBkD,EAAU,CAAC,GACjD,MAAM,sBAEJC,EAAwBhB,EAA4B,cACpDc,EAAgBF,EAAoB,cACpCK,EAAgB,gBACdF,EACEG,EAAgBF,GAAsB,EAC1CtE,QACA2D,iBACI,OAAS,CACbvD,MAAO,OACPqE,WAAY,OACZC,UAAW,aACXC,YAAa,OACbxG,QAAS,UACPwF,EAAWM,gBAAkB,CAC/BW,YAAa5E,EAAME,QAAQ,GAC3B2E,aAAc7E,EAAME,QAAQ,GAE5B,CAACF,EAAM8E,YAAYC,GAAG,OAAQ,CAC5BH,YAAa5E,EAAME,QAAQ,GAC3B2E,aAAc7E,EAAME,QAAQ,QAE5B,EACFF,QACA2D,gBACIA,EAAWK,OAASgB,OAAOC,KAAKjF,EAAM8E,YAAYI,QAAQC,QAAO,CAACC,EAAKC,KAC3E,MAAMC,EAAaD,EACbjK,EAAQ4E,EAAM8E,YAAYI,OAAOI,GAOvC,OANc,IAAVlK,IAEFgK,EAAIpF,EAAM8E,YAAYC,GAAGO,IAAe,CACtCvB,SAAU,GAAG3I,IAAQ4E,EAAM8E,YAAYS,SAGpCH,CAAG,GACT,CAAC,KAAI,EACNpF,QACA2D,iBACI,OAAS,CAAC,EAA2B,OAAxBA,EAAWI,UAAqB,CAEjD,CAAC/D,EAAM8E,YAAYC,GAAG,OAAQ,CAE5BhB,SAAUyB,KAAKC,IAAIzF,EAAM8E,YAAYI,OAAOQ,GAAI,OAEjD/B,EAAWI,UAEU,OAAxBJ,EAAWI,UAAqB,CAE9B,CAAC/D,EAAM8E,YAAYC,GAAGpB,EAAWI,WAAY,CAE3CA,SAAU,GAAG/D,EAAM8E,YAAYI,OAAOvB,EAAWI,YAAY/D,EAAM8E,YAAYS,YAG7EpE,EAAyB,cAAiB,SAAmBgD,EAASwB,GAC1E,MAAMlC,EAAQW,EAAcD,IACtB,UACF/C,EAAS,UACTwE,EAAY,MAAK,eACjB3B,GAAiB,EAAK,MACtBD,GAAQ,EAAK,SACbD,EAAW,MACTN,EACJoC,GAAQ,OAA8BpC,EAAON,GACzCQ,GAAa,OAAS,CAAC,EAAGF,EAAO,CACrCmC,YACA3B,iBACAD,QACAD,aAIIjD,EAxFgB,EAAC6C,EAAYY,KACrC,MAGM,QACJzD,EAAO,MACPkD,EAAK,eACLC,EAAc,SACdF,GACEJ,EACEmC,EAAQ,CACZlC,KAAM,CAAC,OAAQG,GAAY,YAAW,EAAAF,EAAA,GAAWC,OAAOC,MAAcC,GAAS,QAASC,GAAkB,mBAE5G,OAAO,EAAA8B,EAAA,GAAeD,GAZWvC,IACxB,EAAAyC,EAAA,IAAqBzB,EAAehB,IAWUzC,EAAQ,EA2E7CmF,CAAkBtC,EAAYY,GAC9C,OAGE,SAAKC,GAAe,OAAS,CAC3B0B,GAAIN,EAGJjC,WAAYA,EACZvC,WAAW,EAAA+E,EAAA,GAAKrF,EAAQ8C,KAAMxC,GAC9BuE,IAAKA,GACJE,GAEP,IAWA,OAAO1E,CACT,CCvIkBiF,CAAgB,CAChC9B,uBAAuB,QAAO,MAAO,CACnC1I,KAAM,eACN2H,KAAM,OACNC,kBAAmB,CAACC,EAAOC,KACzB,MAAM,WACJC,GACEF,EACJ,MAAO,CAACC,EAAOE,KAAMF,EAAO,YAAW,OAAWI,OAAOH,EAAWI,cAAeJ,EAAWK,OAASN,EAAOM,MAAOL,EAAWM,gBAAkBP,EAAOO,eAAe,IAG5KG,cAAeD,IAAW,OAAc,CACtCV,MAAOU,EACPvI,KAAM,mBA8CV,G,mJCzDA,SAAe,EAAAyK,EAAA,IAA4B,SAAK,OAAQ,CACtDC,EAAG,iIACD,wBCFJ,GAAe,EAAAD,EAAA,IAA4B,SAAK,OAAQ,CACtDC,EAAG,gLACD,sB,eCDJ,MAAMC,GAAsB,EAAAC,EAAA,IAAO,OAAQ,CACzCC,kBAAmB,MADO,CAEzB,CACDC,SAAU,WACVvI,QAAS,SAELwI,GAA4B,EAAAH,EAAA,IAAOI,EAAP,CAAiC,CAEjEC,UAAW,aAEPC,GAAqB,EAAAN,EAAA,IAAOO,EAAP,EAA+B,EACxD/G,QACA2D,iBACI,OAAS,CACbqD,KAAM,EACNN,SAAU,WACVG,UAAW,WACXI,WAAYjH,EAAMkH,YAAYC,OAAO,YAAa,CAChDC,OAAQpH,EAAMkH,YAAYE,OAAOC,OACjCC,SAAUtH,EAAMkH,YAAYI,SAASC,YAEtC5D,EAAW6D,SAAW,CACvBX,UAAW,WACXI,WAAYjH,EAAMkH,YAAYC,OAAO,YAAa,CAChDC,OAAQpH,EAAMkH,YAAYE,OAAOK,QACjCH,SAAUtH,EAAMkH,YAAYI,SAASC,eA6CzC,EAtCA,SAAyB9D,GACvB,MAAM,QACJ+D,GAAU,EAAK,QACf1G,EAAU,CAAC,EAAC,SACZ4G,GACEjE,EACEE,GAAa,OAAS,CAAC,EAAGF,EAAO,CACrC+D,YAEF,OAAoB,UAAMjB,EAAqB,CAC7CnF,UAAWN,EAAQ8C,KACnBD,WAAYA,EACZgE,SAAU,EAAc,SAAKhB,EAA2B,CACtDe,SAAUA,EACVtG,UAAWN,EAAQ8G,WACnBjE,WAAYA,KACG,SAAKmD,EAAoB,CACxCY,SAAUA,EACVtG,UAAWN,EAAQ+G,IACnBlE,WAAYA,MAGlB,E,+CC5DA,MAAMR,EAAY,CAAC,UAAW,cAAe,QAAS,OAAQ,OAAQ,WAAY,OAAQ,aA2BpF2E,GAAY,EAAAtB,EAAA,IAAOuB,EAAA,EAAY,CACnCtB,kBAAmBuB,IAAQ,QAAsBA,IAAkB,YAATA,EAC1DpM,KAAM,WACN2H,KAAM,OACNC,kBAAmB,CAACC,EAAOC,KACzB,MAAM,WACJC,GACEF,EACJ,MAAO,CAACC,EAAOE,KAA0B,WAApBD,EAAWsE,MAAqBvE,EAAO,QAAO,EAAAG,EAAA,GAAWF,EAAWsE,SAAUvE,EAAO,SAAQ,EAAAG,EAAA,GAAWF,EAAWT,UAAU,GARpI,EAUf,EACDlD,QACA2D,iBACI,OAAS,CACbT,OAAQlD,EAAMkI,MAAQlI,GAAOmI,QAAQC,KAAKC,YACxC1E,EAAW2E,eAAiB,CAC9B,UAAW,CACTC,gBAAiBvI,EAAMkI,KAAO,QAA6B,YAArBvE,EAAWT,MAAsBlD,EAAMkI,KAAKC,QAAQK,OAAOC,cAAgBzI,EAAMkI,KAAKC,QAAQxE,EAAWT,OAAOwF,iBAAiB1I,EAAMkI,KAAKC,QAAQK,OAAOG,iBAAkB,QAA2B,YAArBhF,EAAWT,MAAsBlD,EAAMmI,QAAQK,OAAOI,OAAS5I,EAAMmI,QAAQxE,EAAWT,OAAO2F,KAAM7I,EAAMmI,QAAQK,OAAOG,cAEnV,uBAAwB,CACtBJ,gBAAiB,iBAGC,YAArB5E,EAAWT,OAAuB,CACnC,CAAC,KAAK4F,EAAA,EAAatB,WAAY,CAC7BtE,OAAQlD,EAAMkI,MAAQlI,GAAOmI,QAAQxE,EAAWT,OAAO2F,OAExD,CACD,CAAC,KAAKC,EAAA,EAAaC,YAAa,CAC9B7F,OAAQlD,EAAMkI,MAAQlI,GAAOmI,QAAQK,OAAOO,cAW1CC,GAAkC,SAAK,EAAiB,CAC5DxB,SAAS,IAELyB,GAA2B,SAAK,EAAiB,CAAC,GA2IxD,EA1I2B,cAAiB,SAAe9E,EAASwB,GAClE,IAAIuD,EAAuBC,EAC3B,MAAM1F,GAAQ,EAAAW,EAAA,GAAc,CAC1BX,MAAOU,EACPvI,KAAM,cAGJ4L,QAAS4B,EAAW,YACpBC,EAAcL,EAAkB,MAChC9F,EAAQ,UAAS,KACjBoG,EAAOL,EACPrN,KAAM2N,EACNjM,SAAUkM,EAAY,KACtBvB,EAAO,SAAQ,UACf7G,GACEqC,EACJoC,GAAQ,OAA8BpC,EAAON,GACzCQ,GAAa,OAAS,CAAC,EAAGF,EAAO,CACrCP,QACA+E,SAEInH,EA5EkB6C,KACxB,MAAM,QACJ7C,EAAO,MACPoC,EAAK,KACL+E,GACEtE,EACEmC,EAAQ,CACZlC,KAAM,CAAC,OAAQ,SAAQ,EAAAC,EAAA,GAAWX,KAAmB,WAAT+E,GAAqB,QAAO,EAAApE,EAAA,GAAWoE,OAErF,OAAO,OAAS,CAAC,EAAGnH,GAAS,EAAAiF,EAAA,GAAeD,EAAO,IAAsBhF,GAAS,EAmElEmF,CAAkBtC,GAC5B8F,GAAa,EAAAC,EAAA,KACnB,IAAIlC,EAAU4B,EACd,MAAM9L,GAAW,EAAAqM,EAAA,GAAsBH,EAAcC,GAAcA,EAAWnM,UAC9E,IAAI1B,EAAO2N,EArCb,IAAwBK,EAAGC,EA8CzB,OARIJ,SACqB,IAAZjC,IAvCSoC,EAwCOH,EAAWrO,MAApCoM,EAvCa,iBADQqC,EAwCsBpG,EAAMrI,QAvClB,OAANyO,EACpBD,IAAMC,EAIR/F,OAAO8F,KAAO9F,OAAO+F,SAoCN,IAATjO,IACTA,EAAO6N,EAAW7N,QAGF,SAAKkM,GAAW,OAAS,CAC3C3N,KAAM,QACNmP,KAAmB,eAAmBA,EAAM,CAC1C5B,SAAkE,OAAvDwB,EAAwBD,EAAYxF,MAAMiE,UAAoBwB,EAAwBjB,IAEnGoB,YAA0B,eAAmBA,EAAa,CACxD3B,SAAyE,OAA9DyB,EAAwBH,EAAmBvF,MAAMiE,UAAoByB,EAAwBlB,IAE1GtE,WAAYA,EACZ7C,QAASA,EACTlF,KAAMA,EACN4L,QAASA,EACTlK,SAAUA,EACVqI,IAAKA,EACLvE,WAAW,EAAA+E,EAAA,GAAKrF,EAAQ8C,KAAMxC,IAC7ByE,GACL,G,oEC3HO,SAASiE,EAAqBvG,GACnC,OAAO,QAAqB,WAAYA,EAC1C,CACA,MACA,GADqB,OAAuB,WAAY,CAAC,OAAQ,UAAW,WAAY,eAAgB,iBAAkB,a,wICD1H,MAAMJ,EAAY,CAAC,UAAW,WAAY,eAAgB,OAAQ,WAAY,SA2F9E,EAlFgC,cAAiB,SAAoBM,EAAOkC,GAC1E,MAAM,QAGFoE,EAAO,SACPpC,EAAQ,aACRqC,EACApO,KAAM2N,EAAQ,SACdjM,EACAlC,MAAO6O,GACLxG,EACJoC,GAAQ,OAA8BpC,EAAON,GACzC+G,EAAU,SAAa,OACtB9O,EAAO+O,IAAiB,OAAc,CAC3CC,WAAYH,EACZI,QAASL,EACTpO,KAAM,eAER,sBAA0BmO,GAAS,KAAM,CACvCO,MAAO,KACL,IAAIC,EAAQL,EAAQM,QAAQC,cAAc,gCACrCF,IACHA,EAAQL,EAAQM,QAAQC,cAAc,yBAEpCF,GACFA,EAAMD,OACR,KAEA,IACJ,MAAMI,GAAY,OAAW/E,EAAKuE,GAC5BtO,GAAO,OAAM2N,GACboB,EAAe,WAAc,KAAM,CACvC/O,OACA,QAAA0B,CAASC,GACP4M,EAAc5M,EAAMC,OAAOpC,OACvBkC,GACFA,EAASC,EAAOA,EAAMC,OAAOpC,MAEjC,EACAA,WACE,CAACQ,EAAM0B,EAAU6M,EAAe/O,IACpC,OAAoB,SAAK,IAAkBwP,SAAU,CACnDxP,MAAOuP,EACPhD,UAAuB,SAAK,KAAW,OAAS,CAC9CkD,KAAM,aACNlF,IAAK+E,GACJ7E,EAAO,CACR8B,SAAUA,MAGhB,G,mCCvDA,Q,QAJuC,mBAAoB9L,E,4DCA5C,SAAS6N,IACtB,OAAO,aAAiB,IAC1B,C","sources":["../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/ImportForm/ImportCustomTrack.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/ImportForm/util.ts","../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/ImportForm/ImportSyntenyTrackSelector.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/ImportForm/index.tsx","../../../node_modules/@mui/system/esm/Container/createContainer.js","../../../node_modules/@mui/material/Container/Container.js","../../../node_modules/@mui/material/internal/svg-icons/RadioButtonUnchecked.js","../../../node_modules/@mui/material/internal/svg-icons/RadioButtonChecked.js","../../../node_modules/@mui/material/Radio/RadioButtonIcon.js","../../../node_modules/@mui/material/Radio/Radio.js","../../../node_modules/@mui/material/Radio/radioClasses.js","../../../node_modules/@mui/material/RadioGroup/RadioGroup.js","../../../node_modules/@mui/material/RadioGroup/RadioGroupContext.js","../../../node_modules/@mui/material/RadioGroup/useRadioGroup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { SnapshotIn } from 'mobx-state-tree'\nimport {\n  FormControlLabel,\n  Grid,\n  Paper,\n  Radio,\n  RadioGroup,\n  Typography,\n} from '@mui/material'\nimport { ErrorMessage, FileSelector } from '@jbrowse/core/ui'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport { observer } from 'mobx-react'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { extName, getName, stripGz, basename } from './util'\n\nfunction getAdapter({\n  radioOption,\n  assembly1,\n  assembly2,\n  fileLocation,\n  bed1Location,\n  bed2Location,\n}: {\n  radioOption: string\n  assembly1: string\n  assembly2: string\n  fileLocation?: FileLocation\n  bed1Location?: FileLocation\n  bed2Location?: FileLocation\n}) {\n  if (radioOption === '.paf') {\n    return {\n      type: 'PAFAdapter',\n      pafLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.out') {\n    return {\n      type: 'MashMapAdapter',\n      outLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.delta') {\n    return {\n      type: 'DeltaAdapter',\n      deltaLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.chain') {\n    return {\n      type: 'ChainAdapter',\n      chainLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.anchors') {\n    return {\n      type: 'MCScanAnchorsAdapter',\n      mcscanAnchorsLocation: fileLocation,\n      bed1Location,\n      bed2Location,\n      assemblyNames: [assembly1, assembly2],\n    }\n  } else if (radioOption === '.anchors.simple') {\n    return {\n      type: 'MCScanSimpleAnchorsAdapter',\n      mcscanSimpleAnchorsLocation: fileLocation,\n      bed1Location,\n      bed2Location,\n      assemblyNames: [assembly1, assembly2],\n    }\n  } else {\n    throw new Error(\n      `Unknown to detect type ${radioOption} from filename (select radio button to clarify)`,\n    )\n  }\n}\n\ntype Conf = SnapshotIn<AnyConfigurationModel>\n\nconst OpenTrack = observer(\n  ({\n    assembly1,\n    assembly2,\n    setSessionTrackData,\n  }: {\n    sessionTrackData: Conf\n    assembly1: string\n    assembly2: string\n    setSessionTrackData: (arg: Conf) => void\n  }) => {\n    const [bed2Location, setBed2Location] = useState<FileLocation>()\n    const [bed1Location, setBed1Location] = useState<FileLocation>()\n    const [fileLocation, setFileLocation] = useState<FileLocation>()\n    const [value, setValue] = useState('')\n    const [error, setError] = useState<unknown>()\n    const fileName = getName(fileLocation)\n\n    const radioOption = value || (fileName ? extName(stripGz(fileName)) : '')\n\n    useEffect(() => {\n      try {\n        if (fileLocation) {\n          const fn = fileName ? basename(fileName) : 'MyTrack'\n          const trackId = `${fn}-${Date.now()}`\n          setError(undefined)\n\n          setSessionTrackData({\n            trackId,\n            name: fn,\n            assemblyNames: [assembly2, assembly1],\n            type: 'SyntenyTrack',\n            adapter: getAdapter({\n              radioOption,\n              assembly1,\n              assembly2,\n              fileLocation,\n              bed1Location,\n              bed2Location,\n            }),\n          })\n        }\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    }, [\n      fileName,\n      assembly1,\n      assembly2,\n      bed1Location,\n      bed2Location,\n      fileLocation,\n      radioOption,\n      setSessionTrackData,\n    ])\n    return (\n      <Paper style={{ padding: 12 }}>\n        {error ? <ErrorMessage error={error} /> : null}\n        <Typography style={{ textAlign: 'center' }}>\n          Add a .paf, .out (MashMap), .delta (Mummer), .chain, .anchors or\n          .anchors.simple (MCScan) file to view in the dotplot. These file types\n          can also be gzipped. The first assembly should be the query sequence\n          (e.g. left column of the PAF) and the second assembly should be the\n          target sequence (e.g. right column of the PAF)\n        </Typography>\n        <RadioGroup\n          value={radioOption}\n          onChange={event => setValue(event.target.value)}\n        >\n          <Grid container justifyContent=\"center\">\n            <Grid item>\n              <FormControlLabel value=\".paf\" control={<Radio />} label=\".paf\" />\n            </Grid>\n            <Grid item>\n              <FormControlLabel value=\".out\" control={<Radio />} label=\".out\" />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".delta\"\n                control={<Radio />}\n                label=\".delta\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".chain\"\n                control={<Radio />}\n                label=\".chain\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".anchors\"\n                control={<Radio />}\n                label=\".anchors\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".anchors.simple\"\n                control={<Radio />}\n                label=\".anchors.simple\"\n              />\n            </Grid>\n          </Grid>\n        </RadioGroup>\n        <Grid container justifyContent=\"center\">\n          <Grid item>\n            {value === '.anchors' || value === '.anchors.simple' ? (\n              <div>\n                <div style={{ margin: 20 }}>\n                  Open the {value} and .bed files for both genome assemblies\n                  from the MCScan (Python version) pipeline{' '}\n                  <a href=\"https://github.com/tanghaibao/jcvi/wiki/MCscan-(Python-version)\">\n                    (more info)\n                  </a>\n                </div>\n                <div style={{ display: 'flex' }}>\n                  <div>\n                    <FileSelector\n                      name=\".anchors file\"\n                      description=\"\"\n                      location={fileLocation}\n                      setLocation={loc => setFileLocation(loc)}\n                    />\n                  </div>\n                  <div>\n                    <FileSelector\n                      name=\"genome 1 .bed (left column of anchors file)\"\n                      description=\"\"\n                      location={bed1Location}\n                      setLocation={loc => setBed1Location(loc)}\n                    />\n                  </div>\n                  <div>\n                    <FileSelector\n                      name=\"genome 2 .bed (right column of anchors file)\"\n                      description=\"\"\n                      location={bed2Location}\n                      setLocation={loc => setBed2Location(loc)}\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <FileSelector\n                name={value ? value + ' location' : ''}\n                description=\"\"\n                location={fileLocation}\n                setLocation={loc => setFileLocation(loc)}\n              />\n            )}\n          </Grid>\n        </Grid>\n      </Paper>\n    )\n  },\n)\n\nexport default OpenTrack\n","export function getName(\n  sessionTrackData?: { uri: string } | { localPath: string } | { name: string },\n) {\n  return sessionTrackData\n    ? // @ts-expect-error\n      sessionTrackData.uri ||\n        // @ts-expect-error\n        sessionTrackData.localPath ||\n        // @ts-expect-error\n        sessionTrackData.name\n    : undefined\n}\n\nexport function stripGz(fileName: string) {\n  return fileName.endsWith('.gz') ? fileName.slice(0, -3) : fileName\n}\n\nexport function basename(str: string) {\n  return str.split('#')[0].split('?')[0].split('/').pop()\n}\n\nexport function extName(str: string) {\n  const r = str.split('.').pop()\n  return r ? `.${r}` : ''\n}\n","import React, { useState, useEffect } from 'react'\nimport { Select, MenuItem, Paper, Typography } from '@mui/material'\nimport { getSession } from '@jbrowse/core/util'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport { ErrorMessage } from '@jbrowse/core/ui'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { observer } from 'mobx-react'\n\n// locals\nimport { LinearSyntenyViewModel } from '../../model'\n\nfunction f(track: AnyConfigurationModel, assembly1: string, assembly2: string) {\n  const assemblyNames = readConfObject(track, 'assemblyNames')\n  return (\n    assemblyNames.includes(assembly1) &&\n    assemblyNames.includes(assembly2) &&\n    track.type.includes('Synteny')\n  )\n}\n\nconst Selector = observer(\n  ({\n    model,\n    assembly1,\n    assembly2,\n    setShowTrackId,\n  }: {\n    model: LinearSyntenyViewModel\n    assembly1: string\n    assembly2: string\n    setShowTrackId: (arg: string) => void\n  }) => {\n    const session = getSession(model)\n    const { tracks = [], sessionTracks = [] } = session\n    const allTracks = [...tracks, ...sessionTracks] as AnyConfigurationModel[]\n    const filteredTracks = allTracks.filter(t => f(t, assembly2, assembly1))\n    const resetTrack = filteredTracks[0]?.trackId || ''\n    const [value, setValue] = useState(resetTrack)\n    useEffect(() => {\n      // if assembly1/assembly2 changes, then we will want to use this effect to\n      // change the state of the useState because it otherwise gets locked to a\n      // stale value\n      setValue(resetTrack)\n    }, [resetTrack])\n\n    useEffect(() => {\n      // sets track data in a useEffect because the initial load is needed as well\n      // as onChange's to the select box\n      setShowTrackId(value)\n    }, [value, setShowTrackId])\n    return (\n      <Paper style={{ padding: 12 }}>\n        <Typography paragraph>\n          Select a track from the select box below, the track will be shown when\n          you hit \"Launch\".\n        </Typography>\n\n        {filteredTracks.length ? (\n          <Select\n            value={value}\n            onChange={event => setValue(event.target.value)}\n          >\n            {filteredTracks.map(track => (\n              <MenuItem key={track.trackId} value={track.trackId}>\n                {getTrackName(track, session)}\n              </MenuItem>\n            ))}\n          </Select>\n        ) : (\n          <ErrorMessage\n            error={`No synteny tracks found for ${assembly1},${assembly2}`}\n          />\n        )}\n      </Paper>\n    )\n  },\n)\n\nexport default Selector\n","import React, { useState, useEffect } from 'react'\nimport {\n  Button,\n  Container,\n  FormControl,\n  FormLabel,\n  FormControlLabel,\n  Grid,\n  Paper,\n  Radio,\n  RadioGroup,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { SnapshotIn } from 'mobx-state-tree'\nimport { getSession, isSessionWithAddTracks } from '@jbrowse/core/util'\nimport { ErrorMessage, AssemblySelector } from '@jbrowse/core/ui'\n\n// locals\nimport { LinearSyntenyViewModel } from '../../model'\nimport ImportCustomTrack from './ImportCustomTrack'\nimport ImportSyntenyTrackSelector from './ImportSyntenyTrackSelector'\n\nconst useStyles = makeStyles()(theme => ({\n  importFormContainer: {\n    padding: theme.spacing(4),\n    margin: '0 auto',\n  },\n  assemblySelector: {\n    width: '75%',\n    margin: '0 auto',\n  },\n}))\n\ntype Conf = SnapshotIn<AnyConfigurationModel>\n\nfunction TrackSelector({\n  setSessionTrackData,\n  setShowTrackId,\n  sessionTrackData,\n  assembly1,\n  assembly2,\n  model,\n}: {\n  sessionTrackData: Conf\n  setSessionTrackData: (arg: Conf) => void\n  setShowTrackId: (arg?: string) => void\n  model: LinearSyntenyViewModel\n  assembly1: string\n  assembly2: string\n}) {\n  const [choice, setChoice] = useState('tracklist')\n\n  useEffect(() => {\n    if (choice === 'none') {\n      setSessionTrackData(undefined)\n      setShowTrackId(undefined)\n    }\n  }, [choice, setSessionTrackData, setShowTrackId])\n  return (\n    <>\n      <FormControl>\n        <FormLabel id=\"group-label\">\n          (Optional) Select or add a synteny track\n        </FormLabel>\n        <RadioGroup\n          row\n          value={choice}\n          onChange={event => setChoice(event.target.value)}\n          aria-labelledby=\"group-label\"\n        >\n          <FormControlLabel value=\"none\" control={<Radio />} label=\"None\" />\n          <FormControlLabel\n            value=\"tracklist\"\n            control={<Radio />}\n            label=\"Existing track\"\n          />\n          <FormControlLabel\n            value=\"custom\"\n            control={<Radio />}\n            label=\"New track\"\n          />\n        </RadioGroup>\n      </FormControl>\n      {choice === 'custom' ? (\n        <ImportCustomTrack\n          setSessionTrackData={setSessionTrackData}\n          sessionTrackData={sessionTrackData}\n          assembly2={assembly2}\n          assembly1={assembly1}\n        />\n      ) : null}\n      {choice === 'tracklist' ? (\n        <ImportSyntenyTrackSelector\n          model={model}\n          assembly1={assembly1}\n          assembly2={assembly2}\n          setShowTrackId={setShowTrackId}\n        />\n      ) : null}\n    </>\n  )\n}\n\nconst LinearSyntenyViewImportForm = observer(function ({\n  model,\n}: {\n  model: LinearSyntenyViewModel\n}) {\n  const { classes } = useStyles()\n  const session = getSession(model)\n  const { assemblyNames } = session\n  const [assembly2, setAssembly2] = useState(assemblyNames[0] || '')\n  const [assembly1, setAssembly1] = useState(assemblyNames[0] || '')\n  const [error, setError] = useState<unknown>()\n  const [sessionTrackData, setSessionTrackData] = useState<Conf>()\n  const [showTrackId, setShowTrackId] = useState<string>()\n\n  async function onOpenClick() {\n    try {\n      if (!isSessionWithAddTracks(session)) {\n        return\n      }\n      setError(undefined)\n\n      const { assemblyManager } = session\n      const assemblies = [assembly1, assembly2]\n      model.setViews(\n        await Promise.all(\n          assemblies.map(async sel => {\n            const asm = await assemblyManager.waitForAssembly(sel)\n            if (!asm) {\n              throw new Error(`Assembly ${sel} failed to load`)\n            }\n            return {\n              type: 'LinearGenomeView' as const,\n              bpPerPx: 1,\n              offsetPx: 0,\n              hideHeader: true,\n              displayedRegions: asm.regions,\n            }\n          }),\n        ),\n      )\n      model.views.forEach(view => view.setWidth(model.width))\n      if (sessionTrackData) {\n        session.addTrackConf(sessionTrackData)\n        model.toggleTrack(sessionTrackData.trackId)\n      } else if (showTrackId) {\n        model.showTrack(showTrackId)\n      }\n    } catch (e) {\n      console.error(e)\n      setError(e)\n    }\n  }\n\n  // this is a combination of any displayed error message we have\n  const displayError = error\n  return (\n    <Container className={classes.importFormContainer}>\n      {displayError ? <ErrorMessage error={displayError} /> : null}\n      <Grid\n        container\n        spacing={1}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        className={classes.assemblySelector}\n      >\n        <Grid item>\n          <Paper style={{ padding: 12 }}>\n            <p style={{ textAlign: 'center' }}>\n              Select assemblies for linear synteny view\n            </p>\n            <Grid\n              container\n              spacing={1}\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <AssemblySelector\n                  selected={assembly1}\n                  onChange={val => setAssembly1(val)}\n                  session={session}\n                />\n              </Grid>\n              <Grid item>\n                <AssemblySelector\n                  selected={assembly2}\n                  onChange={val => setAssembly2(val)}\n                  session={session}\n                />\n              </Grid>\n              <Grid item>\n                <FormControl>\n                  <Button\n                    onClick={onOpenClick}\n                    variant=\"contained\"\n                    color=\"primary\"\n                  >\n                    Launch\n                  </Button>\n                </FormControl>\n              </Grid>\n            </Grid>\n          </Paper>\n          <TrackSelector\n            setShowTrackId={setShowTrackId}\n            assembly2={assembly2}\n            assembly1={assembly1}\n            setSessionTrackData={setSessionTrackData}\n            sessionTrackData={sessionTrackData}\n            model={model}\n          />\n        </Grid>\n      </Grid>\n    </Container>\n  )\n})\n\nexport default LinearSyntenyViewImportForm\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '@mui/utils/capitalize';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport RadioButtonUncheckedIcon from '../internal/svg-icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '../internal/svg-icons/RadioButtonChecked';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RadioButtonIconRoot = styled('span', {\n  shouldForwardProp: rootShouldForwardProp\n})({\n  position: 'relative',\n  display: 'flex'\n});\nconst RadioButtonIconBackground = styled(RadioButtonUncheckedIcon)({\n  // Scale applied to prevent dot misalignment in Safari\n  transform: 'scale(1)'\n});\nconst RadioButtonIconDot = styled(RadioButtonCheckedIcon)(({\n  theme,\n  ownerState\n}) => _extends({\n  left: 0,\n  position: 'absolute',\n  transform: 'scale(0)',\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeIn,\n    duration: theme.transitions.duration.shortest\n  })\n}, ownerState.checked && {\n  transform: 'scale(1)',\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeOut,\n    duration: theme.transitions.duration.shortest\n  })\n}));\n\n/**\n * @ignore - internal component.\n */\nfunction RadioButtonIcon(props) {\n  const {\n    checked = false,\n    classes = {},\n    fontSize\n  } = props;\n  const ownerState = _extends({}, props, {\n    checked\n  });\n  return /*#__PURE__*/_jsxs(RadioButtonIconRoot, {\n    className: classes.root,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(RadioButtonIconBackground, {\n      fontSize: fontSize,\n      className: classes.background,\n      ownerState: ownerState\n    }), /*#__PURE__*/_jsx(RadioButtonIconDot, {\n      fontSize: fontSize,\n      className: classes.dot,\n      ownerState: ownerState\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default RadioButtonIcon;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"checkedIcon\", \"color\", \"icon\", \"name\", \"onChange\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nimport radioClasses, { getRadioUtilityClass } from './radioClasses';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, size !== 'medium' && `size${capitalize(size)}`]\n  };\n  return _extends({}, classes, composeClasses(slots, getRadioUtilityClass, classes));\n};\nconst RadioRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiRadio',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.size !== 'medium' && styles[`size${capitalize(ownerState.size)}`], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${radioClasses.checked}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  }\n}, {\n  [`&.${radioClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  }\n\n  // The value could be a number, the DOM will stringify it anyway.\n  return String(a) === String(b);\n}\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {\n  checked: true\n});\nconst defaultIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {});\nconst Radio = /*#__PURE__*/React.forwardRef(function Radio(inProps, ref) {\n  var _defaultIcon$props$fo, _defaultCheckedIcon$p;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiRadio'\n  });\n  const {\n      checked: checkedProp,\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon = defaultIcon,\n      name: nameProp,\n      onChange: onChangeProp,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const radioGroup = useRadioGroup();\n  let checked = checkedProp;\n  const onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  let name = nameProp;\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = areEqualValues(radioGroup.value, props.value);\n    }\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n  return /*#__PURE__*/_jsx(RadioRoot, _extends({\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_defaultIcon$props$fo = defaultIcon.props.fontSize) != null ? _defaultIcon$props$fo : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(checkedIcon, {\n      fontSize: (_defaultCheckedIcon$p = defaultCheckedIcon.props.fontSize) != null ? _defaultCheckedIcon$p : size\n    }),\n    ownerState: ownerState,\n    classes: classes,\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <RadioButtonIcon checked />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <RadioButtonIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Radio;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getRadioUtilityClass(slot) {\n  return generateUtilityClass('MuiRadio', slot);\n}\nconst radioClasses = generateUtilityClasses('MuiRadio', ['root', 'checked', 'disabled', 'colorPrimary', 'colorSecondary', 'sizeSmall']);\nexport default radioClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"actions\", \"children\", \"defaultValue\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '../FormGroup';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport RadioGroupContext from './RadioGroupContext';\nimport useId from '../utils/useId';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  const {\n      // private\n      // eslint-disable-next-line react/prop-types\n      actions,\n      children,\n      defaultValue,\n      name: nameProp,\n      onChange,\n      value: valueProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootRef = React.useRef(null);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'RadioGroup'\n  });\n  React.useImperativeHandle(actions, () => ({\n    focus: () => {\n      let input = rootRef.current.querySelector('input:not(:disabled):checked');\n      if (!input) {\n        input = rootRef.current.querySelector('input:not(:disabled)');\n      }\n      if (input) {\n        input.focus();\n      }\n    }\n  }), []);\n  const handleRef = useForkRef(ref, rootRef);\n  const name = useId(nameProp);\n  const contextValue = React.useMemo(() => ({\n    name,\n    onChange(event) {\n      setValueState(event.target.value);\n      if (onChange) {\n        onChange(event, event.target.value);\n      }\n    },\n    value\n  }), [name, onChange, setValueState, value]);\n  return /*#__PURE__*/_jsx(RadioGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(FormGroup, _extends({\n      role: \"radiogroup\",\n      ref: handleRef\n    }, other, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {string} value The value of the selected radio button.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst RadioGroupContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\nexport default RadioGroupContext;","'use client';\n\nimport * as React from 'react';\nimport RadioGroupContext from './RadioGroupContext';\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}"],"names":["getAdapter","radioOption","assembly1","assembly2","fileLocation","bed1Location","bed2Location","type","pafLocation","queryAssembly","targetAssembly","outLocation","deltaLocation","chainLocation","mcscanAnchorsLocation","assemblyNames","mcscanSimpleAnchorsLocation","Error","observer","setSessionTrackData","setBed2Location","useState","setBed1Location","setFileLocation","value","setValue","error","setError","fileName","sessionTrackData","uri","localPath","name","undefined","str","r","split","pop","extName","endsWith","slice","stripGz","useEffect","fn","trackId","Date","now","adapter","e","console","React","Paper","style","padding","ErrorMessage","Typography","textAlign","RadioGroup","onChange","event","target","Grid","container","justifyContent","item","FormControlLabel","control","Radio","label","margin","href","display","FileSelector","description","location","setLocation","loc","model","setShowTrackId","session","getSession","tracks","sessionTracks","filteredTracks","filter","t","track","readConfObject","includes","f","resetTrack","paragraph","length","Select","map","MenuItem","key","getTrackName","useStyles","makeStyles","theme","importFormContainer","spacing","assemblySelector","width","TrackSelector","choice","setChoice","FormControl","FormLabel","id","row","ImportCustomTrack","ImportSyntenyTrackSelector","classes","setAssembly2","setAssembly1","showTrackId","displayError","Container","className","alignItems","AssemblySelector","selected","val","Button","onClick","async","isSessionWithAddTracks","assemblyManager","assemblies","setViews","Promise","all","asm","waitForAssembly","sel","bpPerPx","offsetPx","hideHeader","displayedRegions","regions","views","forEach","view","setWidth","addTrackConf","toggleTrack","showTrack","variant","color","_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","slot","overridesResolver","props","styles","ownerState","root","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","inProps","useThemeProps","options","createStyledComponent","componentName","ContainerRoot","marginLeft","boxSizing","marginRight","paddingLeft","paddingRight","breakpoints","up","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","unit","Math","max","xs","ref","component","other","slots","composeClasses","generateUtilityClass","useUtilityClasses","as","clsx","createContainer","createSvgIcon","d","RadioButtonIconRoot","styled","shouldForwardProp","position","RadioButtonIconBackground","RadioButtonUnchecked","transform","RadioButtonIconDot","RadioButtonChecked","left","transition","transitions","create","easing","easeIn","duration","shortest","checked","easeOut","fontSize","children","background","dot","RadioRoot","SwitchBase","prop","size","vars","palette","text","secondary","disableRipple","backgroundColor","action","activeChannel","mainChannel","hoverOpacity","active","main","radioClasses","disabled","defaultCheckedIcon","defaultIcon","_defaultIcon$props$fo","_defaultCheckedIcon$p","checkedProp","checkedIcon","icon","nameProp","onChangeProp","radioGroup","useRadioGroup","createChainedFunction","a","b","getRadioUtilityClass","actions","defaultValue","valueProp","rootRef","setValueState","controlled","default","focus","input","current","querySelector","handleRef","contextValue","Provider","role"],"sourceRoot":""}