{"version":3,"file":"static/js/9136.8458c86a.chunk.js","mappings":"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","sources":["../../../plugins/dotplot-view/src/DotplotView/components/Axes.tsx","../../../plugins/dotplot-view/src/DotplotView/components/ImportCustomTrack.tsx","../../../plugins/dotplot-view/src/DotplotView/components/ImportSyntenyTrackSelector.tsx","../../../plugins/dotplot-view/src/DotplotView/components/ImportForm.tsx","../../../plugins/dotplot-view/src/DotplotView/components/DotplotWarnings.tsx","../../../plugins/dotplot-view/src/DotplotView/components/PanButtons.tsx","../../../plugins/dotplot-view/src/DotplotView/components/CursorIcon.tsx","../../../plugins/dotplot-view/src/DotplotView/components/DotplotControls.tsx","../../../plugins/dotplot-view/src/DotplotView/components/Header.tsx","../../../plugins/dotplot-view/src/DotplotView/components/DotplotTooltip.tsx","../../../plugins/dotplot-view/src/DotplotView/components/DotplotView.tsx","../../../plugins/dotplot-view/src/DotplotView/components/Grid.tsx","../../../node_modules/@mui/icons-material/ArrowDropUp.js","../../../node_modules/@mui/icons-material/ArrowLeft.js"],"sourcesContent":["import React from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { getSnapshot } from 'mobx-state-tree'\nimport { getTickDisplayStr } from '@jbrowse/core/util'\nimport { bpToPx } from '@jbrowse/core/util/Base1DUtils'\nimport { useTheme } from '@mui/material'\n\n// locals\nimport { getBlockLabelKeysToHide } from './util'\nimport { DotplotViewModel } from '../model'\n\nconst useStyles = makeStyles()(() => ({\n  vtext: {\n    gridColumn: '1/2',\n    gridRow: '1/2',\n    pointerEvents: 'none',\n    userSelect: 'none',\n  },\n  htext: {\n    gridColumn: '2/2',\n    gridRow: '2/2',\n    pointerEvents: 'none',\n    userSelect: 'none',\n  },\n}))\nexport const HorizontalAxis = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { viewWidth, borderY } = model\n  const { classes } = useStyles()\n  return (\n    <svg width={viewWidth} height={borderY} className={classes.htext}>\n      <HorizontalAxisRaw model={model} />\n    </svg>\n  )\n})\n\nexport const HorizontalAxisRaw = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { viewWidth, borderX, borderY, hview, htextRotation, hticks } = model\n  const { offsetPx, width, dynamicBlocks, bpPerPx } = hview\n  const dblocks = dynamicBlocks.contentBlocks\n  const hide = getBlockLabelKeysToHide(dblocks, viewWidth, offsetPx)\n  const theme = useTheme()\n  const hviewSnap = {\n    ...getSnapshot(hview),\n    width,\n    staticBlocks: hview.staticBlocks,\n  }\n\n  const ticks = hticks\n    .map(\n      tick =>\n        [\n          tick,\n          bpToPx({\n            refName: tick.refName,\n            coord: tick.base,\n            self: hviewSnap,\n          })?.offsetPx,\n        ] as const,\n    )\n    .filter(f => f[1] !== undefined)\n    .map(f => [f[0], f[1]! - offsetPx] as const)\n\n  return (\n    <>\n      {dblocks\n        .filter(region => !hide.has(region.key))\n        .map(region => {\n          const x = region.offsetPx\n          const y = 0\n          const xoff = Math.floor(x - hview.offsetPx)\n\n          return (\n            <text\n              transform={`rotate(${htextRotation},${xoff},${y})`}\n              key={JSON.stringify(region)}\n              x={xoff}\n              y={y + 1}\n              fill={theme.palette.text.primary}\n              fontSize={11}\n              dominantBaseline=\"hanging\"\n              textAnchor=\"end\"\n            >\n              {region.refName}\n            </text>\n          )\n        })}\n      {ticks.map(([tick, x]) => {\n        return (\n          <line\n            key={`line-${JSON.stringify(tick)}`}\n            x1={x}\n            x2={x}\n            y1={0}\n            y2={tick.type === 'major' ? 6 : 4}\n            strokeWidth={1}\n            stroke={theme.palette.grey[400]}\n          />\n        )\n      })}\n      {ticks\n        .filter(t => t[0].type === 'major')\n        .map(([tick, x]) => {\n          const y = 0\n          return x > 10 ? (\n            <text\n              x={x - 7}\n              y={y}\n              transform={`rotate(${htextRotation},${x},${y})`}\n              key={`text-${JSON.stringify(tick)}`}\n              fill={theme.palette.text.primary}\n              fontSize={11}\n              dominantBaseline=\"middle\"\n              textAnchor=\"end\"\n            >\n              {getTickDisplayStr(tick.base + 1, bpPerPx)}\n            </text>\n          ) : null\n        })}\n      <text\n        y={borderY - 12}\n        x={(viewWidth - borderX) / 2}\n        fill={theme.palette.text.primary}\n        textAnchor=\"middle\"\n        fontSize={11}\n        dominantBaseline=\"hanging\"\n      >\n        {hview.assemblyNames.join(',')}\n      </text>\n    </>\n  )\n})\nexport const VerticalAxis = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { borderX, viewHeight } = model\n  const { classes } = useStyles()\n  return (\n    <svg className={classes.vtext} width={borderX} height={viewHeight}>\n      <VerticalAxisRaw model={model} />\n    </svg>\n  )\n})\n\nexport const VerticalAxisRaw = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { viewHeight, borderX, borderY, vview, vtextRotation, vticks } = model\n  const { offsetPx, width, dynamicBlocks, bpPerPx } = vview\n  const dblocks = dynamicBlocks.contentBlocks\n  const hide = getBlockLabelKeysToHide(dblocks, viewHeight, offsetPx)\n  const theme = useTheme()\n  const vviewSnap = {\n    ...getSnapshot(vview),\n    width,\n    staticBlocks: vview.staticBlocks,\n  }\n  const ticks = vticks\n    .map(\n      tick =>\n        [\n          tick,\n          bpToPx({\n            refName: tick.refName,\n            coord: tick.base,\n            self: vviewSnap,\n          })?.offsetPx,\n        ] as const,\n    )\n    .filter(f => f[1] !== undefined)\n    .map(f => [f[0], f[1]! - offsetPx] as const)\n\n  return (\n    <>\n      {dblocks\n        .filter(region => !hide.has(region.key))\n        .map(region => {\n          const y = region.offsetPx\n          const x = borderX\n          const yoff = Math.floor(viewHeight - y + offsetPx)\n\n          return (\n            <text\n              transform={`rotate(${vtextRotation},${x},${y})`}\n              key={JSON.stringify(region)}\n              x={x}\n              y={yoff}\n              fill={theme.palette.text.primary}\n              fontSize={11}\n              textAnchor=\"end\"\n            >\n              {region.refName}\n            </text>\n          )\n        })}\n      {ticks.map(([tick, y]) => (\n        <line\n          key={`line-${JSON.stringify(tick)}`}\n          y1={viewHeight - y}\n          y2={viewHeight - y}\n          x1={borderX}\n          x2={borderX - (tick.type === 'major' ? 6 : 4)}\n          strokeWidth={1}\n          stroke={theme.palette.grey[400]}\n        />\n      ))}\n      {ticks\n        .filter(t => t[0].type === 'major')\n        .map(([tick, y]) => {\n          return y > 10 ? (\n            <text\n              y={viewHeight - y - 3}\n              x={borderX - 7}\n              key={`text-${JSON.stringify(tick)}`}\n              textAnchor=\"end\"\n              fill={theme.palette.text.primary}\n              dominantBaseline=\"hanging\"\n              fontSize={11}\n            >\n              {getTickDisplayStr(tick.base + 1, bpPerPx)}\n            </text>\n          ) : null\n        })}\n      <text\n        y={(viewHeight - borderY) / 2}\n        x={12}\n        fill={theme.palette.text.primary}\n        transform={`rotate(-90,12,${(viewHeight - borderY) / 2})`}\n        textAnchor=\"middle\"\n        fontSize={11}\n      >\n        {vview.assemblyNames.join(',')}\n      </text>\n    </>\n  )\n})\n","import React, { useState, useEffect } from 'react'\nimport { SnapshotIn } from 'mobx-state-tree'\nimport path from 'path'\nimport {\n  FormControlLabel,\n  Grid,\n  Paper,\n  Radio,\n  RadioGroup,\n  Typography,\n} from '@mui/material'\nimport { ErrorMessage, FileSelector } from '@jbrowse/core/ui'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport { observer } from 'mobx-react'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\nfunction getName(\n  sessionTrackData?: { uri: string } | { localPath: string } | { name: string },\n) {\n  return sessionTrackData\n    ? // @ts-expect-error\n      sessionTrackData.uri ||\n        // @ts-expect-error\n        sessionTrackData.localPath ||\n        // @ts-expect-error\n        sessionTrackData.name\n    : undefined\n}\n\nfunction stripGz(fileName: string) {\n  return fileName.endsWith('.gz') ? fileName.slice(0, -3) : fileName\n}\n\nfunction getAdapter({\n  radioOption,\n  assembly1,\n  assembly2,\n  fileLocation,\n  bed1Location,\n  bed2Location,\n}: {\n  radioOption: string\n  assembly1: string\n  assembly2: string\n  fileLocation?: FileLocation\n  bed1Location?: FileLocation\n  bed2Location?: FileLocation\n}) {\n  if (radioOption === '.paf') {\n    return {\n      type: 'PAFAdapter',\n      pafLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.out') {\n    return {\n      type: 'MashMapAdapter',\n      outLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.delta') {\n    return {\n      type: 'DeltaAdapter',\n      deltaLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.chain') {\n    return {\n      type: 'ChainAdapter',\n      chainLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.anchors') {\n    return {\n      type: 'MCScanAnchorsAdapter',\n      mcscanAnchorsLocation: fileLocation,\n      bed1Location,\n      bed2Location,\n      assemblyNames: [assembly1, assembly2],\n    }\n  } else if (radioOption === '.anchors.simple') {\n    return {\n      type: 'MCScanSimpleAnchorsAdapter',\n      mcscanSimpleAnchorsLocation: fileLocation,\n      bed1Location,\n      bed2Location,\n      assemblyNames: [assembly1, assembly2],\n    }\n  } else {\n    throw new Error('Unknown type')\n  }\n}\n\ntype Conf = SnapshotIn<AnyConfigurationModel>\n\nconst OpenTrack = observer(\n  ({\n    assembly1,\n    assembly2,\n    setSessionTrackData,\n  }: {\n    sessionTrackData: Conf\n    assembly1: string\n    assembly2: string\n    setSessionTrackData: (arg: Conf) => void\n  }) => {\n    const [bed2Location, setBed2Location] = useState<FileLocation>()\n    const [bed1Location, setBed1Location] = useState<FileLocation>()\n    const [fileLocation, setFileLocation] = useState<FileLocation>()\n    const [value, setValue] = useState('')\n    const [error, setError] = useState<unknown>()\n    const fileName = getName(fileLocation)\n\n    const radioOption =\n      value || (fileName ? path.extname(stripGz(fileName)) : '')\n\n    useEffect(() => {\n      try {\n        if (fileLocation) {\n          const fn = fileName ? path.basename(fileName) : 'MyTrack'\n          const trackId = `${fn}-${Date.now()}`\n          setError(undefined)\n\n          setSessionTrackData({\n            trackId,\n            name: fn,\n            assemblyNames: [assembly2, assembly1],\n            type: 'SyntenyTrack',\n            adapter: getAdapter({\n              radioOption,\n              assembly1,\n              assembly2,\n              fileLocation,\n              bed1Location,\n              bed2Location,\n            }),\n          })\n        }\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    }, [\n      fileName,\n      assembly1,\n      assembly2,\n      bed1Location,\n      bed2Location,\n      fileLocation,\n      radioOption,\n      setSessionTrackData,\n    ])\n    return (\n      <Paper style={{ padding: 12 }}>\n        {error ? <ErrorMessage error={error} /> : null}\n        <Typography style={{ textAlign: 'center' }}>\n          Add a .paf, .out (MashMap), .delta (Mummer), .chain, .anchors or\n          .anchors.simple (MCScan) file to view in the dotplot. These file types\n          can also be gzipped. The first assembly should be the query sequence\n          (e.g. left column of the PAF) and the second assembly should be the\n          target sequence (e.g. right column of the PAF)\n        </Typography>\n        <RadioGroup\n          value={radioOption}\n          onChange={event => setValue(event.target.value)}\n        >\n          <Grid container justifyContent=\"center\">\n            <Grid item>\n              <FormControlLabel value=\".paf\" control={<Radio />} label=\".paf\" />\n            </Grid>\n            <Grid item>\n              <FormControlLabel value=\".out\" control={<Radio />} label=\".out\" />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".delta\"\n                control={<Radio />}\n                label=\".delta\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".chain\"\n                control={<Radio />}\n                label=\".chain\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".anchors\"\n                control={<Radio />}\n                label=\".anchors\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".anchors.simple\"\n                control={<Radio />}\n                label=\".anchors.simple\"\n              />\n            </Grid>\n          </Grid>\n        </RadioGroup>\n        <Grid container justifyContent=\"center\">\n          <Grid item>\n            {value === '.anchors' || value === '.anchors.simple' ? (\n              <div>\n                <div style={{ margin: 20 }}>\n                  Open the {value} and .bed files for both genome assemblies\n                  from the MCScan (Python version) pipeline{' '}\n                  <a href=\"https://github.com/tanghaibao/jcvi/wiki/MCscan-(Python-version)\">\n                    (more info)\n                  </a>\n                </div>\n                <div style={{ display: 'flex' }}>\n                  <div>\n                    <FileSelector\n                      name=\".anchors file\"\n                      description=\"\"\n                      location={fileLocation}\n                      setLocation={loc => setFileLocation(loc)}\n                    />\n                  </div>\n                  <div>\n                    <FileSelector\n                      name=\"genome 1 .bed (left column of anchors file)\"\n                      description=\"\"\n                      location={bed1Location}\n                      setLocation={loc => setBed1Location(loc)}\n                    />\n                  </div>\n                  <div>\n                    <FileSelector\n                      name=\"genome 2 .bed (right column of anchors file)\"\n                      description=\"\"\n                      location={bed2Location}\n                      setLocation={loc => setBed2Location(loc)}\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <FileSelector\n                name={value ? value + ' location' : ''}\n                description=\"\"\n                location={fileLocation}\n                setLocation={loc => setFileLocation(loc)}\n              />\n            )}\n          </Grid>\n        </Grid>\n      </Paper>\n    )\n  },\n)\n\nexport default OpenTrack\n","import React, { useState, useEffect } from 'react'\nimport { Select, MenuItem, Paper, Typography } from '@mui/material'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport { getSession } from '@jbrowse/core/util'\nimport { ErrorMessage } from '@jbrowse/core/ui'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { observer } from 'mobx-react'\n\n// icons\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\n\n// locals\nimport { DotplotViewModel } from '../model'\n\nfunction f(track: AnyConfigurationModel, assembly1: string, assembly2: string) {\n  const assemblyNames = readConfObject(track, 'assemblyNames')\n  return (\n    assemblyNames.includes(assembly1) &&\n    assemblyNames.includes(assembly2) &&\n    track.type.includes('Synteny')\n  )\n}\n\nconst Selector = observer(\n  ({\n    model,\n    assembly1,\n    assembly2,\n    setShowTrackId,\n  }: {\n    model: DotplotViewModel\n    assembly1: string\n    assembly2: string\n    setShowTrackId: (arg: string) => void\n  }) => {\n    const session = getSession(model)\n    const { tracks, sessionTracks } = session\n    const allTracks = [\n      ...tracks,\n      ...(sessionTracks || []),\n    ] as AnyConfigurationModel[]\n    const filteredTracks = allTracks.filter(t => f(t, assembly2, assembly1))\n    const resetTrack = filteredTracks[0]?.trackId || ''\n    const [value, setValue] = useState(resetTrack)\n    useEffect(() => {\n      // if assembly1/assembly2 changes, then we will want to use this effect to change\n      // the state of the useState because it otherwise gets locked to a stale value\n      setValue(resetTrack)\n    }, [resetTrack])\n\n    useEffect(() => {\n      // sets track data in a useEffect because the initial load is needed as well as\n      // onChange's to the select box\n      setShowTrackId(value)\n    }, [value, setShowTrackId])\n\n    return (\n      <Paper style={{ padding: 12 }}>\n        <Typography paragraph>\n          Select a track from the select box below, the track will be shown when\n          you hit \"Launch\".\n        </Typography>\n\n        <Typography paragraph>\n          Note: there is a track selector <i>inside</i> the DotplotView, which\n          can turn on one or more SyntenyTracks (more than one can be displayed\n          at once). Look for the track selector icon <TrackSelectorIcon />\n        </Typography>\n        {filteredTracks.length ? (\n          <Select\n            value={value}\n            onChange={event => setValue(event.target.value)}\n          >\n            {filteredTracks.map(track => (\n              <MenuItem key={track.trackId} value={track.trackId}>\n                {getTrackName(track, session)}\n              </MenuItem>\n            ))}\n          </Select>\n        ) : (\n          <ErrorMessage\n            error={`No synteny tracks found for ${assembly1},${assembly2}`}\n          />\n        )}\n      </Paper>\n    )\n  },\n)\n\nexport default Selector\n","import React, { useState, useEffect } from 'react'\nimport {\n  Button,\n  Container,\n  FormControl,\n  FormLabel,\n  FormControlLabel,\n  Grid,\n  Paper,\n  Radio,\n  RadioGroup,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { transaction } from 'mobx'\nimport { SnapshotIn } from 'mobx-state-tree'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { getSession, isSessionWithAddTracks } from '@jbrowse/core/util'\nimport { ErrorMessage, AssemblySelector } from '@jbrowse/core/ui'\n\n// locals\nimport { DotplotViewModel } from '../model'\nimport ImportCustomTrack from './ImportCustomTrack'\nimport ImportSyntenyTrackSelector from './ImportSyntenyTrackSelector'\n\nconst useStyles = makeStyles()(theme => ({\n  importFormContainer: {\n    padding: theme.spacing(4),\n    margin: '0 auto',\n  },\n  assemblySelector: {\n    width: '75%',\n    margin: '0 auto',\n  },\n}))\n\ntype Conf = SnapshotIn<AnyConfigurationModel>\n\nfunction TrackSelector({\n  setSessionTrackData,\n  setShowTrackId,\n  sessionTrackData,\n  assembly1,\n  assembly2,\n  model,\n}: {\n  sessionTrackData: Conf\n  setSessionTrackData: (arg: Conf) => void\n  setShowTrackId: (arg?: string) => void\n  model: DotplotViewModel\n  assembly1: string\n  assembly2: string\n}) {\n  const [choice, setChoice] = useState('none')\n\n  useEffect(() => {\n    if (choice === 'none') {\n      setSessionTrackData(undefined)\n      setShowTrackId(undefined)\n    }\n  }, [choice, setSessionTrackData, setShowTrackId])\n  return (\n    <>\n      <FormControl>\n        <FormLabel id=\"group-label\">\n          (Optional) Select or add a synteny track\n        </FormLabel>\n        <RadioGroup\n          row\n          value={choice}\n          onChange={event => setChoice(event.target.value)}\n          aria-labelledby=\"group-label\"\n        >\n          <FormControlLabel value=\"none\" control={<Radio />} label=\"None\" />\n          <FormControlLabel\n            value=\"tracklist\"\n            control={<Radio />}\n            label=\"Existing track\"\n          />\n          <FormControlLabel\n            value=\"custom\"\n            control={<Radio />}\n            label=\"New track\"\n          />\n        </RadioGroup>\n      </FormControl>\n      {choice === 'custom' ? (\n        <ImportCustomTrack\n          setSessionTrackData={setSessionTrackData}\n          sessionTrackData={sessionTrackData}\n          assembly2={assembly2}\n          assembly1={assembly1}\n        />\n      ) : null}\n      {choice === 'tracklist' ? (\n        <ImportSyntenyTrackSelector\n          model={model}\n          assembly1={assembly1}\n          assembly2={assembly2}\n          setShowTrackId={setShowTrackId}\n        />\n      ) : null}\n    </>\n  )\n}\n\nconst DotplotImportForm = observer(({ model }: { model: DotplotViewModel }) => {\n  const { classes } = useStyles()\n  const session = getSession(model)\n  const { assemblyNames } = session\n  const [assembly2, setAssembly2] = useState(assemblyNames[0] || '')\n  const [assembly1, setAssembly1] = useState(assemblyNames[0] || '')\n  const [error, setError] = useState<unknown>()\n  const [sessionTrackData, setSessionTrackData] = useState<Conf>()\n  const [showTrackId, setShowTrackId] = useState<string>()\n\n  function onOpenClick() {\n    try {\n      if (!isSessionWithAddTracks(session)) {\n        return\n      }\n      setError(undefined)\n      model.setError(undefined)\n      transaction(() => {\n        if (sessionTrackData) {\n          session.addTrackConf(sessionTrackData)\n          model.toggleTrack(sessionTrackData.trackId)\n        } else if (showTrackId) {\n          model.showTrack(showTrackId)\n        }\n\n        model.setViews([\n          { bpPerPx: 0.1, offsetPx: 0 },\n          { bpPerPx: 0.1, offsetPx: 0 },\n        ])\n        model.setAssemblyNames(assembly2, assembly1)\n      })\n    } catch (e) {\n      console.error(e)\n      setError(e)\n    }\n  }\n\n  // this is a combination of any displayed error message we have\n  const displayError = error || model.error\n  return (\n    <Container className={classes.importFormContainer}>\n      {displayError ? <ErrorMessage error={displayError} /> : null}\n      <Grid\n        container\n        spacing={1}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        className={classes.assemblySelector}\n      >\n        <Grid item>\n          <Paper style={{ padding: 12 }}>\n            <Typography style={{ textAlign: 'center' }}>\n              Select assemblies for dotplot view\n            </Typography>\n            <Grid\n              container\n              spacing={1}\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <AssemblySelector\n                  selected={assembly1}\n                  onChange={val => setAssembly1(val)}\n                  session={session}\n                />\n              </Grid>\n              <Grid item>\n                <AssemblySelector\n                  selected={assembly2}\n                  onChange={val => setAssembly2(val)}\n                  session={session}\n                />\n              </Grid>\n              <Grid item>\n                <FormControl>\n                  <Button\n                    onClick={onOpenClick}\n                    variant=\"contained\"\n                    color=\"primary\"\n                  >\n                    Launch\n                  </Button>\n                </FormControl>\n              </Grid>\n            </Grid>\n          </Paper>\n          <TrackSelector\n            setShowTrackId={setShowTrackId}\n            assembly2={assembly2}\n            assembly1={assembly1}\n            setSessionTrackData={setSessionTrackData}\n            sessionTrackData={sessionTrackData}\n            model={model}\n          />\n        </Grid>\n      </Grid>\n    </Container>\n  )\n})\n\nexport default DotplotImportForm\n","import React, { lazy, useState } from 'react'\nimport { Alert, Button } from '@mui/material'\nimport { observer } from 'mobx-react'\n\n// locals\nimport { DotplotViewModel } from '../model'\n\n// lazy components\nconst WarningDialog = lazy(() => import('./WarningDialog'))\n\nconst DotplotWarnings = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const trackWarnings = model.tracks.filter(t => t.displays[0].warnings?.length)\n  const [shown, setShown] = useState(false)\n  return trackWarnings.length ? (\n    <Alert severity=\"warning\">\n      Warnings during render{' '}\n      <Button onClick={() => setShown(true)}>More info</Button>\n      {shown ? (\n        <WarningDialog\n          trackWarnings={trackWarnings}\n          handleClose={() => setShown(false)}\n        />\n      ) : null}\n    </Alert>\n  ) : null\n})\n\nexport default DotplotWarnings\n","import React from 'react'\nimport { IconButton, Paper } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\n\n// icons\nimport ArrowDropDown from '@mui/icons-material/ArrowDropDown'\nimport ArrowDropUp from '@mui/icons-material/ArrowDropUp'\nimport ArrowLeft from '@mui/icons-material/ArrowLeft'\nimport ArrowRight from '@mui/icons-material/ArrowRight'\nimport ZoomIn from '@mui/icons-material/ZoomIn'\nimport ZoomOut from '@mui/icons-material/ZoomOut'\n\n// locals\nimport { DotplotViewModel } from '../model'\n\nconst useStyles = makeStyles()({\n  dpad: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, 1fr)',\n    margin: 0,\n    position: 'absolute',\n    right: 50,\n    zIndex: 1000,\n    top: 50,\n  },\n  icon: {\n    padding: 0,\n    margin: 0,\n  },\n})\n\nconst PanButtons = observer(function PanButtons({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { classes } = useStyles()\n  return (\n    <Paper className={classes.dpad} elevation={6}>\n      <div />\n      <IconButton\n        className={classes.icon}\n        onClick={() => model.vview.scroll(100)}\n      >\n        <ArrowDropUp />\n      </IconButton>\n      <div />\n\n      <IconButton\n        className={classes.icon}\n        onClick={() => model.hview.scroll(-100)}\n      >\n        <ArrowLeft />\n      </IconButton>\n      <div />\n      <IconButton\n        className={classes.icon}\n        onClick={() => model.hview.scroll(100)}\n      >\n        <ArrowRight />\n      </IconButton>\n\n      <div />\n      <IconButton\n        className={classes.icon}\n        onClick={() => model.vview.scroll(-100)}\n      >\n        <ArrowDropDown />\n      </IconButton>\n      <div />\n      <IconButton\n        className={classes.icon}\n        onClick={() => {\n          model.hview.zoomIn()\n          model.vview.zoomIn()\n        }}\n      >\n        <ZoomIn />\n      </IconButton>\n      <div />\n      <IconButton\n        className={classes.icon}\n        onClick={() => {\n          model.hview.zoomOut()\n          model.vview.zoomOut()\n        }}\n      >\n        <ZoomOut />\n      </IconButton>\n    </Paper>\n  )\n})\n\nexport default PanButtons\n","import SvgIcon, { SvgIconProps } from '@mui/material/SvgIcon'\nimport React from 'react'\n\nexport function CursorMove(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M13,6V11H18V7.75L22.25,12L18,16.25V13H13V18H16.25L12,22.25L7.75,18H11V13H6V16.25L1.75,12L6,7.75V11H11V6H7.75L12,1.75L16.25,6H13Z\"\n      />\n    </SvgIcon>\n  )\n}\n\nexport function CursorMouse(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M10.07,14.27C10.57,14.03 11.16,14.25 11.4,14.75L13.7,19.74L15.5,18.89L13.19,13.91C12.95,13.41 13.17,12.81 13.67,12.58L13.95,12.5L16.25,12.05L8,5.12V15.9L9.82,14.43L10.07,14.27M13.64,21.97C13.14,22.21 12.54,22 12.31,21.5L10.13,16.76L7.62,18.78C7.45,18.92 7.24,19 7,19A1,1 0 0,1 6,18V3A1,1 0 0,1 7,2C7.24,2 7.47,2.09 7.64,2.23L7.65,2.22L19.14,11.86C19.57,12.22 19.62,12.85 19.27,13.27C19.12,13.45 18.91,13.57 18.7,13.61L15.54,14.23L17.74,18.96C18,19.46 17.76,20.05 17.26,20.28L13.64,21.97Z\"\n      />\n    </SvgIcon>\n  )\n}\n","import React from 'react'\nimport { IconButton } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport CascadingMenuButton from '@jbrowse/core/ui/CascadingMenuButton'\n\n// icons\nimport ZoomOut from '@mui/icons-material/ZoomOut'\nimport ZoomIn from '@mui/icons-material/ZoomIn'\nimport MoreVert from '@mui/icons-material/MoreVert'\nimport { CursorMouse, CursorMove } from './CursorIcon'\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\n\n// locals\nimport { DotplotViewModel } from '../model'\n\nconst DotplotControls = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  return (\n    <div>\n      <IconButton onClick={model.zoomOutButton}>\n        <ZoomOut />\n      </IconButton>\n\n      <IconButton onClick={model.zoomInButton}>\n        <ZoomIn />\n      </IconButton>\n\n      <IconButton\n        onClick={() => model.activateTrackSelector()}\n        title=\"Open track selector\"\n      >\n        <TrackSelectorIcon />\n      </IconButton>\n\n      <CascadingMenuButton\n        menuItems={[\n          {\n            onClick: () => model.squareView(),\n            label: 'Square view - same base pairs per pixel',\n          },\n          {\n            onClick: () => model.squareViewProportional(),\n            label: 'Rectanglularize view - same total bp',\n          },\n          {\n            onClick: () => model.showAllRegions(),\n            label: 'Show all regions',\n          },\n          {\n            onClick: () => model.setDrawCigar(!model.drawCigar),\n            type: 'checkbox',\n            label: 'Draw CIGAR',\n            checked: model.drawCigar,\n          },\n          {\n            onClick: () => model.setShowPanButtons(!model.showPanButtons),\n            label: 'Show pan buttons',\n            type: 'checkbox',\n            checked: model.showPanButtons,\n          },\n          {\n            label: 'Click and drag mode',\n            subMenu: [\n              {\n                onClick: () => model.setCursorMode('move'),\n                label: 'Pan by default, select region when ctrl key is held',\n                icon: CursorMove,\n                type: 'radio',\n                checked: model.cursorMode === 'move',\n              },\n              {\n                onClick: () => model.setCursorMode('crosshair'),\n                label: 'Select region by default, pan when ctrl key is held',\n                icon: CursorMouse,\n                type: 'radio',\n                checked: model.cursorMode === 'crosshair',\n              },\n            ],\n          },\n          {\n            label: 'Wheel scroll mode',\n            subMenu: [\n              {\n                onClick: () => model.setWheelMode('pan'),\n                label: 'Pans view',\n                type: 'radio',\n                checked: model.wheelMode === 'pan',\n              },\n              {\n                onClick: () => model.setWheelMode('zoom'),\n                label: 'Zooms view',\n                type: 'radio',\n                checked: model.wheelMode === 'zoom',\n              },\n              {\n                onClick: () => model.setWheelMode('none'),\n                label: 'Disable',\n                type: 'radio',\n                checked: model.wheelMode === 'none',\n              },\n            ],\n          },\n        ]}\n      >\n        <MoreVert />\n      </CascadingMenuButton>\n    </div>\n  )\n})\n\nexport default DotplotControls\n","import React from 'react'\nimport { Typography } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\nimport { getBpDisplayStr } from '@jbrowse/core/util'\n\n// locals\nimport { DotplotViewModel } from '../model'\nimport DotplotWarnings from './DotplotWarnings'\nimport PanButtons from './PanButtons'\nimport DotplotControls from './DotplotControls'\n\nconst useStyles = makeStyles()({\n  bp: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 10,\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  headerBar: {\n    display: 'flex',\n    position: 'relative',\n  },\n})\n\nconst DotplotHeader = observer(function ({\n  model,\n  selection,\n}: {\n  model: DotplotViewModel\n  selection?: { width: number; height: number }\n}) {\n  const { classes } = useStyles()\n  const { hview, vview, showPanButtons } = model\n  return (\n    <div className={classes.headerBar}>\n      <DotplotControls model={model} />\n      <Typography className={classes.bp} variant=\"body2\" color=\"textSecondary\">\n        x: {hview.assemblyNames.join(',')} {getBpDisplayStr(hview.currBp)}\n        <br />\n        y: {vview.assemblyNames.join(',')} {getBpDisplayStr(vview.currBp)}\n      </Typography>\n      {selection ? (\n        <Typography\n          className={classes.bp}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >\n          {`width:${getBpDisplayStr(hview.bpPerPx * selection.width)}`} <br />\n          {`height:${getBpDisplayStr(vview.bpPerPx * selection.height)}`}\n        </Typography>\n      ) : null}\n      <div className={classes.spacer} />\n      <DotplotWarnings model={model} />\n      {showPanButtons ? <PanButtons model={model} /> : null}\n    </div>\n  )\n})\n\nexport default DotplotHeader\n","import React, { useMemo, useRef, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport { DotplotViewModel } from '../model'\nimport { locstr } from './util'\nimport { Portal, alpha } from '@mui/material'\nimport { usePopper } from 'react-popper'\n\nfunction round(value: number) {\n  return Math.round(value * 1e5) / 1e5\n}\nconst useStyles = makeStyles()(theme => ({\n  // these styles come from\n  // https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/Tooltip/Tooltip.js\n  tooltip: {\n    position: 'absolute',\n    pointerEvents: 'none',\n    backgroundColor: alpha(theme.palette.grey[700], 0.9),\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.common.white,\n    fontFamily: theme.typography.fontFamily,\n    padding: '4px 8px',\n    fontSize: theme.typography.pxToRem(12),\n    lineHeight: `${round(14 / 10)}em`,\n    maxWidth: 300,\n    wordWrap: 'break-word',\n  },\n}))\n\ntype Coord = [number, number] | undefined\nconst blank = { left: 0, top: 0, width: 0, height: 0 }\n\nexport const TooltipWhereMouseovered = observer(function ({\n  model,\n  mouserect,\n  mouserectClient,\n  xdistance,\n  ydistance,\n}: {\n  model: DotplotViewModel\n  mouserect: Coord\n  mouserectClient: Coord\n  xdistance: number\n  ydistance: number\n}) {\n  const { classes } = useStyles()\n  const { hview, vview, viewHeight } = model\n  const [anchorEl, setAnchorEl] = useState<HTMLDivElement | null>(null)\n  const ref = useRef<HTMLDivElement>(null)\n  const rect = ref.current?.getBoundingClientRect() || blank\n  const offset = 6\n  const w = rect.height + offset * 2\n\n  // must be memoized a la https://github.com/popperjs/react-popper/issues/391\n  const virtElement = useMemo(\n    () => ({\n      getBoundingClientRect: () => {\n        const x = offset + (mouserectClient?.[0] || 0) - (xdistance < 0 ? w : 0)\n        const y = offset + (mouserectClient?.[1] || 0) - (ydistance < 0 ? w : 0)\n        return {\n          top: y,\n          left: x,\n          bottom: y,\n          right: x,\n          width: 0,\n          height: 0,\n          x,\n          y,\n          toJSON() {},\n        }\n      },\n    }),\n    [mouserectClient, xdistance, ydistance, w],\n  )\n  const { styles, attributes } = usePopper(virtElement, anchorEl, {\n    placement: xdistance < 0 ? 'left' : 'right',\n  })\n  return (\n    <>\n      {mouserect ? (\n        <Portal>\n          <div\n            ref={setAnchorEl}\n            className={classes.tooltip}\n            // zIndex needed to go over widget drawer\n            style={{ ...styles.popper, zIndex: 100000 }}\n            {...attributes.popper}\n          >\n            {`x - ${locstr(mouserect[0], hview)}`}\n            <br />\n            {`y - ${locstr(viewHeight - mouserect[1], vview)}`}\n            <br />\n          </div>\n        </Portal>\n      ) : null}\n    </>\n  )\n})\n\nexport const TooltipWhereClicked = observer(function ({\n  model,\n  mousedown,\n  mousedownClient,\n  xdistance,\n  ydistance,\n}: {\n  model: DotplotViewModel\n  mousedown: Coord\n  mousedownClient: Coord\n  xdistance: number\n  ydistance: number\n}) {\n  const { classes } = useStyles()\n  const { hview, vview, viewHeight } = model\n  const [anchorEl, setAnchorEl] = useState<HTMLDivElement | null>(null)\n\n  // must be memoized a la https://github.com/popperjs/react-popper/issues/391\n  const virtElement = useMemo(\n    () => ({\n      getBoundingClientRect: () => {\n        const x = (mousedownClient?.[0] || 0) - (xdistance < 0 ? 0 : 0)\n        const y = (mousedownClient?.[1] || 0) - (ydistance < 0 ? 0 : 0)\n        return {\n          top: y,\n          left: x,\n          bottom: y,\n          right: x,\n          width: 0,\n          height: 0,\n          x,\n          y,\n          toJSON() {},\n        }\n      },\n    }),\n    [mousedownClient, xdistance, ydistance],\n  )\n  const { styles, attributes } = usePopper(virtElement, anchorEl, {\n    placement: xdistance < 0 ? 'right' : 'left',\n  })\n  return (\n    <>\n      {mousedown && Math.abs(xdistance) > 3 && Math.abs(ydistance) > 3 ? (\n        <Portal>\n          <div\n            ref={setAnchorEl}\n            className={classes.tooltip}\n            // zIndex needed to go over widget drawer\n            style={{ ...styles.popper, zIndex: 100000 }}\n            {...attributes.popper}\n          >\n            {`x - ${locstr(mousedown[0], hview)}`}\n            <br />\n            {`y - ${locstr(viewHeight - mousedown[1], vview)}`}\n            <br />\n          </div>\n        </Portal>\n      ) : null}\n    </>\n  )\n})\n","import React, { useState, useEffect, useRef } from 'react'\nimport { LoadingEllipses, Menu, ResizeHandle } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\nimport { transaction } from 'mobx'\nimport { makeStyles } from 'tss-react/mui'\nimport normalizeWheel from 'normalize-wheel'\n\n// locals\nimport { DotplotViewModel } from '../model'\nimport ImportForm from './ImportForm'\nimport Header from './Header'\nimport Grid from './Grid'\nimport { VerticalAxis, HorizontalAxis } from './Axes'\nimport { TooltipWhereClicked, TooltipWhereMouseovered } from './DotplotTooltip'\n\nconst blank = { left: 0, top: 0, width: 0, height: 0 }\n\nconst useStyles = makeStyles()(theme => ({\n  spacer: {\n    gridColumn: '1/2',\n    gridRow: '2/2',\n  },\n  root: {\n    position: 'relative',\n    marginBottom: theme.spacing(1),\n    overflow: 'hidden',\n  },\n\n  container: {\n    display: 'grid',\n    padding: 5,\n    position: 'relative',\n  },\n  overlay: {\n    pointerEvents: 'none',\n    overflow: 'hidden',\n    display: 'flex',\n    width: '100%',\n    gridRow: '1/2',\n    gridColumn: '2/2',\n    zIndex: 100, // needs to be below controls\n    '& path': {\n      cursor: 'crosshair',\n      fill: 'none',\n    },\n  },\n\n  content: {\n    position: 'relative',\n    gridColumn: '2/2',\n    gridRow: '1/2',\n  },\n\n  resizeHandle: {\n    height: 4,\n    background: '#ccc',\n    boxSizing: 'border-box',\n    borderTop: '1px solid #fafafa',\n  },\n}))\n\ntype Coord = [number, number] | undefined\ninterface Rect {\n  left: number\n  top: number\n}\n\n// produces offsetX/offsetY coordinates from a clientX and an element's\n// getBoundingClientRect\nfunction getOffset(coord: Coord, rect: Rect) {\n  return coord && ([coord[0] - rect.left, coord[1] - rect.top] as Coord)\n}\n\nconst RenderedComponent = observer(({ model }: { model: DotplotViewModel }) => {\n  const { classes } = useStyles()\n  return (\n    <div className={classes.overlay}>\n      {model.tracks.map(track => {\n        const [display] = track.displays\n        const { RenderingComponent } = display\n        return RenderingComponent ? (\n          <RenderingComponent\n            key={track.configuration.trackId}\n            model={display}\n          />\n        ) : null\n      })}\n    </div>\n  )\n})\n\nconst DotplotViewInternal = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { classes } = useStyles()\n  const [mousecurrClient, setMouseCurrClient] = useState<Coord>()\n  const [mousedownClient, setMouseDownClient] = useState<Coord>()\n  const [mouseOvered, setMouseOvered] = useState(false)\n  const [mouseupClient, setMouseUpClient] = useState<Coord>()\n  const ref = useRef<HTMLDivElement>(null)\n  const root = useRef<HTMLDivElement>(null)\n  const distanceX = useRef(0)\n  const distanceY = useRef(0)\n  const scheduled = useRef(false)\n  const [ctrlKeyWasUsed, setCtrlKeyWasUsed] = useState(false)\n  const svg = ref.current?.getBoundingClientRect() || blank\n  const rootRect = ref.current?.getBoundingClientRect() || blank\n  const mousedown = getOffset(mousedownClient, svg)\n  const mousecurr = getOffset(mousecurrClient, svg)\n  const mouseup = getOffset(mouseupClient, svg)\n  const mouserectClient = mouseupClient || mousecurrClient\n  const mouserect = mouseup || mousecurr\n  const xdistance = mousedown && mouserect ? mouserect[0] - mousedown[0] : 0\n  const ydistance = mousedown && mouserect ? mouserect[1] - mousedown[1] : 0\n  const { hview, vview, wheelMode, cursorMode } = model\n\n  const validPan =\n    (cursorMode === 'move' && !ctrlKeyWasUsed) ||\n    (cursorMode === 'crosshair' && ctrlKeyWasUsed)\n\n  const validSelect =\n    (cursorMode === 'move' && ctrlKeyWasUsed) ||\n    (cursorMode === 'crosshair' && !ctrlKeyWasUsed)\n\n  // use non-React wheel handler to properly prevent body scrolling\n  useEffect(() => {\n    function onWheel(origEvent: WheelEvent) {\n      const event = normalizeWheel(origEvent)\n      origEvent.preventDefault()\n\n      distanceX.current += event.pixelX\n      distanceY.current -= event.pixelY\n      if (!scheduled.current) {\n        scheduled.current = true\n\n        window.requestAnimationFrame(() => {\n          transaction(() => {\n            if (wheelMode === 'pan') {\n              hview.scroll(distanceX.current / 3)\n              vview.scroll(distanceY.current / 10)\n            } else if (wheelMode === 'zoom') {\n              if (\n                Math.abs(distanceY.current) > Math.abs(distanceX.current) * 2 &&\n                mousecurr\n              ) {\n                const val = distanceY.current < 0 ? 1.1 : 0.9\n                hview.zoomTo(hview.bpPerPx * val, mousecurr[0])\n                vview.zoomTo(\n                  vview.bpPerPx * val,\n                  rootRect.height - mousecurr[1],\n                )\n              }\n            }\n          })\n          scheduled.current = false\n          distanceX.current = 0\n          distanceY.current = 0\n        })\n      }\n    }\n    if (ref.current) {\n      const curr = ref.current\n      curr.addEventListener('wheel', onWheel)\n      return () => curr.removeEventListener('wheel', onWheel)\n    }\n    return () => {}\n  }, [hview, vview, wheelMode, mousecurr, rootRect.height])\n\n  useEffect(() => {\n    function globalMouseMove(event: MouseEvent) {\n      setMouseCurrClient([event.clientX, event.clientY])\n\n      if (mousecurrClient && mousedownClient && validPan && !mouseupClient) {\n        hview.scroll(-event.clientX + mousecurrClient[0])\n        vview.scroll(event.clientY - mousecurrClient[1])\n      }\n    }\n\n    window.addEventListener('mousemove', globalMouseMove)\n    return () => window.removeEventListener('mousemove', globalMouseMove)\n  }, [\n    validPan,\n    mousecurrClient,\n    mousedownClient,\n    cursorMode,\n    ctrlKeyWasUsed,\n    mouseupClient,\n    hview,\n    vview,\n  ])\n\n  // detect a mouseup after a mousedown was submitted, autoremoves mouseup\n  // once that single mouseup is set\n  useEffect(() => {\n    function globalMouseUp(event: MouseEvent) {\n      if (Math.abs(xdistance) > 3 && Math.abs(ydistance) > 3 && validSelect) {\n        setMouseUpClient([event.clientX, event.clientY])\n      } else {\n        setMouseDownClient(undefined)\n      }\n    }\n\n    if (mousedown && !mouseup) {\n      window.addEventListener('mouseup', globalMouseUp, true)\n      return () => window.removeEventListener('mouseup', globalMouseUp, true)\n    }\n    return () => {}\n  }, [\n    validSelect,\n    mousedown,\n    mousecurr,\n    mouseup,\n    xdistance,\n    ydistance,\n    ctrlKeyWasUsed,\n    cursorMode,\n  ])\n\n  return (\n    <div>\n      <Header\n        model={model}\n        selection={\n          !validSelect || !(mousedown && mouserect)\n            ? undefined\n            : {\n                width: Math.abs(xdistance),\n                height: Math.abs(ydistance),\n              }\n        }\n      />\n      <div\n        ref={root}\n        className={classes.root}\n        onMouseLeave={() => setMouseOvered(false)}\n        onMouseEnter={() => setMouseOvered(true)}\n      >\n        <div className={classes.container}>\n          <VerticalAxis model={model} />\n          <HorizontalAxis model={model} />\n          <div ref={ref} className={classes.content}>\n            {mouseOvered && validSelect ? (\n              <TooltipWhereMouseovered\n                model={model}\n                mouserect={mouserect}\n                mouserectClient={mouserectClient}\n                xdistance={xdistance}\n                ydistance={ydistance}\n              />\n            ) : null}\n            {validSelect ? (\n              <TooltipWhereClicked\n                model={model}\n                mousedown={mousedown}\n                mousedownClient={mousedownClient}\n                xdistance={xdistance}\n                ydistance={ydistance}\n              />\n            ) : null}\n            <div\n              style={{ cursor: ctrlKeyWasUsed ? 'pointer' : cursorMode }}\n              onMouseDown={event => {\n                if (event.button === 0) {\n                  const { clientX, clientY } = event\n                  setMouseDownClient([clientX, clientY])\n                  setMouseCurrClient([clientX, clientY])\n                  setCtrlKeyWasUsed(event.ctrlKey)\n                }\n              }}\n            >\n              <Grid model={model}>\n                {validSelect && mousedown && mouserect ? (\n                  <rect\n                    fill=\"rgba(255,0,0,0.3)\"\n                    x={Math.min(mouserect[0], mousedown[0])}\n                    y={Math.min(mouserect[1], mousedown[1])}\n                    width={Math.abs(xdistance)}\n                    height={Math.abs(ydistance)}\n                  />\n                ) : null}\n              </Grid>\n            </div>\n            <div className={classes.spacer} />\n          </div>\n          <RenderedComponent model={model} />\n          <Menu\n            open={Boolean(mouseup)}\n            onMenuItemClick={(_, callback) => {\n              callback()\n              setMouseUpClient(undefined)\n              setMouseDownClient(undefined)\n            }}\n            onClose={() => {\n              setMouseUpClient(undefined)\n              setMouseDownClient(undefined)\n            }}\n            anchorReference=\"anchorPosition\"\n            anchorPosition={\n              mouseupClient\n                ? {\n                    top: mouseupClient[1] + 50,\n                    left: mouseupClient[0] + 50,\n                  }\n                : undefined\n            }\n            style={{ zIndex: 10000 }}\n            menuItems={[\n              {\n                label: 'Zoom in',\n                onClick: () => {\n                  if (mousedown && mouseup) {\n                    model.zoomIn(mousedown, mouseup)\n                  }\n                },\n              },\n              {\n                label: 'Open linear synteny view',\n                onClick: () => {\n                  if (mousedown && mouseup) {\n                    model.onDotplotView(mousedown, mouseup)\n                  }\n                },\n              },\n            ]}\n          />\n        </div>\n        <ResizeHandle\n          onDrag={n => model.setHeight(model.height + n)}\n          className={classes.resizeHandle}\n        />\n      </div>\n    </div>\n  )\n})\nconst DotplotView = observer(({ model }: { model: DotplotViewModel }) => {\n  const { initialized, loading, error } = model\n\n  if ((!initialized && !loading) || error) {\n    return <ImportForm model={model} />\n  }\n\n  if (loading) {\n    return <LoadingEllipses variant=\"h6\" />\n  }\n\n  return <DotplotViewInternal model={model} />\n})\n\nexport default DotplotView\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { useTheme } from '@mui/material'\n\n// locals\nimport { DotplotViewModel } from '../model'\n\nexport const GridRaw = observer(function ({\n  model,\n  children,\n}: {\n  model: DotplotViewModel\n  children?: React.ReactNode\n}) {\n  const { viewWidth, viewHeight, hview, vview } = model\n  const hblocks = hview.dynamicBlocks.contentBlocks\n  const vblocks = vview.dynamicBlocks.contentBlocks\n  if (!hblocks.length || !vblocks.length) {\n    return null\n  }\n  const htop = hview.displayedRegionsTotalPx - hview.offsetPx\n  const vtop = vview.displayedRegionsTotalPx - vview.offsetPx\n  const hbottom = hblocks[0].offsetPx - hview.offsetPx\n  const vbottom = vblocks[0].offsetPx - vview.offsetPx\n  const theme = useTheme()\n  const stroke = theme.palette.divider\n\n  // Uses math.max/min avoid making very large SVG rect offscreen element,\n  // which can sometimes fail to draw\n  const rx = Math.max(hbottom, 0)\n  const ry = Math.max(viewHeight - vtop, 0)\n  const w = Math.min(htop - hbottom, viewWidth)\n  const h = Math.min(viewHeight - vbottom - ry, viewHeight)\n\n  let lastx = Infinity\n  let lasty = Infinity\n  return (\n    <>\n      <rect\n        x={rx}\n        y={ry}\n        width={w}\n        height={h}\n        fill={theme.palette.background.default}\n      />\n      <g>\n        {hblocks.map(region => {\n          const x = region.offsetPx - hview.offsetPx\n          const render = Math.floor(x) !== Math.floor(lastx)\n          if (render) {\n            lastx = x\n          }\n          return render ? (\n            <line\n              key={JSON.stringify(region)}\n              x1={x}\n              y1={0}\n              x2={x}\n              y2={viewHeight}\n              stroke={stroke}\n            />\n          ) : null\n        })}\n        {vblocks.map(region => {\n          const y = viewHeight - (region.offsetPx - vview.offsetPx)\n          const render = Math.floor(y) !== Math.floor(lasty)\n          if (render) {\n            lasty = y\n          }\n          return render ? (\n            <line\n              key={JSON.stringify(region)}\n              x1={0}\n              y1={y}\n              x2={viewWidth}\n              y2={y}\n              stroke={stroke}\n            />\n          ) : null\n        })}\n        <line x1={htop} y1={0} x2={htop} y2={viewHeight} stroke={stroke} />\n        <line\n          x1={0}\n          y1={viewHeight - vtop}\n          x2={viewWidth}\n          y2={viewHeight - vtop}\n          stroke={stroke}\n        />\n      </g>\n      {children}\n    </>\n  )\n})\n\nexport default function Grid({\n  model,\n  children,\n}: {\n  model: DotplotViewModel\n  children?: React.ReactNode\n}) {\n  const { viewWidth, viewHeight } = model\n  return (\n    <svg\n      width={viewWidth}\n      height={viewHeight}\n      style={{ background: 'rgba(0,0,0,0.12)' }}\n    >\n      <GridRaw model={model}>{children}</GridRaw>\n    </svg>\n  )\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m7 14 5-5 5 5z\"\n}), 'ArrowDropUp');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m14 7-5 5 5 5V7z\"\n}), 'ArrowLeft');\nexports.default = _default;"],"names":["useStyles","makeStyles","vtext","gridColumn","gridRow","pointerEvents","userSelect","htext","HorizontalAxis","observer","_ref","model","viewWidth","borderY","classes","_jsx","width","height","className","children","HorizontalAxisRaw","_ref2","borderX","hview","htextRotation","hticks","offsetPx","dynamicBlocks","bpPerPx","dblocks","contentBlocks","hide","getBlockLabelKeysToHide","theme","useTheme","hviewSnap","_objectSpread","getSnapshot","staticBlocks","ticks","map","tick","_bpToPx","bpToPx","refName","coord","base","self","filter","f","undefined","_jsxs","_Fragment","region","has","key","x","xoff","Math","floor","transform","concat","y","fill","palette","text","primary","fontSize","dominantBaseline","textAnchor","JSON","stringify","_ref3","_ref4","_slicedToArray","x1","x2","y1","y2","type","strokeWidth","stroke","grey","t","_ref5","_ref6","getTickDisplayStr","assemblyNames","join","VerticalAxis","_ref7","viewHeight","VerticalAxisRaw","_ref8","vview","vtextRotation","vticks","vviewSnap","_bpToPx2","yoff","_ref9","_ref10","_ref11","_ref12","getAdapter","radioOption","assembly1","assembly2","fileLocation","bed1Location","bed2Location","pafLocation","queryAssembly","targetAssembly","outLocation","deltaLocation","chainLocation","mcscanAnchorsLocation","mcscanSimpleAnchorsLocation","Error","sessionTrackData","setSessionTrackData","_useState","useState","_useState2","setBed2Location","_useState3","_useState4","setBed1Location","_useState5","_useState6","setFileLocation","_useState7","_useState8","value","setValue","_useState9","_useState10","error","setError","fileName","uri","localPath","name","path","endsWith","slice","stripGz","useEffect","fn","trackId","Date","now","adapter","e","console","Paper","style","padding","ErrorMessage","Typography","textAlign","RadioGroup","onChange","event","target","Grid","container","justifyContent","item","FormControlLabel","control","Radio","label","margin","href","display","FileSelector","description","location","setLocation","loc","_filteredTracks$","setShowTrackId","session","getSession","tracks","sessionTracks","filteredTracks","_toConsumableArray","track","readConfObject","includes","resetTrack","paragraph","TrackSelectorIcon","length","Select","MenuItem","getTrackName","importFormContainer","spacing","assemblySelector","TrackSelector","choice","setChoice","FormControl","FormLabel","id","row","ImportCustomTrack","ImportSyntenyTrackSelector","setAssembly2","setAssembly1","_useState11","_useState12","showTrackId","displayError","Container","alignItems","AssemblySelector","selected","val","Button","onClick","isSessionWithAddTracks","transaction","addTrackConf","toggleTrack","showTrack","setViews","setAssemblyNames","variant","color","WarningDialog","lazy","trackWarnings","_t$displays$0$warning","displays","warnings","shown","setShown","Alert","severity","handleClose","dpad","gridTemplateColumns","position","right","zIndex","top","icon","elevation","IconButton","scroll","ArrowDropUp","ArrowLeft","ArrowRight","ArrowDropDown","zoomIn","ZoomIn","zoomOut","ZoomOut","CursorMove","props","SvgIcon","d","CursorMouse","zoomOutButton","zoomInButton","activateTrackSelector","title","CascadingMenuButton","menuItems","squareView","squareViewProportional","showAllRegions","setDrawCigar","drawCigar","checked","setShowPanButtons","showPanButtons","subMenu","setCursorMode","cursorMode","setWheelMode","wheelMode","MoreVert","bp","marginLeft","spacer","flexGrow","headerBar","selection","DotplotControls","getBpDisplayStr","currBp","DotplotWarnings","PanButtons","tooltip","backgroundColor","alpha","borderRadius","shape","common","white","fontFamily","typography","pxToRem","lineHeight","round","maxWidth","wordWrap","blank","left","TooltipWhereMouseovered","_ref$current","mouserect","mouserectClient","xdistance","ydistance","anchorEl","setAnchorEl","rect","useRef","current","getBoundingClientRect","w","offset","virtElement","useMemo","bottom","toJSON","_usePopper","usePopper","placement","styles","attributes","Portal","ref","popper","locstr","TooltipWhereClicked","mousedown","mousedownClient","_usePopper2","abs","root","marginBottom","overflow","overlay","cursor","content","resizeHandle","background","boxSizing","borderTop","getOffset","RenderedComponent","RenderingComponent","configuration","DotplotViewInternal","_ref$current2","mousecurrClient","setMouseCurrClient","setMouseDownClient","mouseOvered","setMouseOvered","mouseupClient","setMouseUpClient","distanceX","distanceY","scheduled","ctrlKeyWasUsed","setCtrlKeyWasUsed","svg","rootRect","mousecurr","mouseup","validPan","validSelect","onWheel","origEvent","normalizeWheel","preventDefault","pixelX","pixelY","window","requestAnimationFrame","zoomTo","curr","addEventListener","removeEventListener","globalMouseMove","clientX","clientY","globalMouseUp","Header","onMouseLeave","onMouseEnter","onMouseDown","button","ctrlKey","min","Menu","open","Boolean","onMenuItemClick","_","callback","onClose","anchorReference","anchorPosition","onDotplotView","ResizeHandle","onDrag","n","setHeight","initialized","loading","ImportForm","LoadingEllipses","GridRaw","hblocks","vblocks","htop","displayedRegionsTotalPx","vtop","hbottom","vbottom","divider","rx","max","ry","h","lastx","Infinity","lasty","default","render","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx"],"sourceRoot":""}