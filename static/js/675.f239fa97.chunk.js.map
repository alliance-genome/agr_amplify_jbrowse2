{"version":3,"file":"static/js/675.f239fa97.chunk.js","mappings":"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","sources":["../../../plugins/hic/src/HicAdapter/HicAdapter.ts"],"sourcesContent":["import {\n  BaseFeatureDataAdapter,\n  BaseOptions,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { Region, FileLocation } from '@jbrowse/core/util/types'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport type { GenericFilehandle } from 'generic-filehandle'\nimport HicStraw from 'hic-straw'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { getSubAdapterType } from '@jbrowse/core/data_adapters/dataAdapterCache'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\ninterface ContactRecord {\n  bin1: number\n  bin2: number\n  counts: number\n}\n\ninterface HicMetadata {\n  chromosomes: {\n    name: string\n    length: number\n    id: number\n  }[]\n  resolutions: number[]\n}\ninterface Ref {\n  chr: string\n  start: number\n  end: number\n}\n\ninterface HicOptions extends BaseOptions {\n  resolution?: number\n  bpPerPx?: number\n}\n\n// wraps generic-filehandle so the read function only takes a position and length\n// in some ways, generic-filehandle wishes it was just this but it has\n// to adapt to the node.js fs promises API\nclass GenericFilehandleWrapper {\n  constructor(private filehandle: GenericFilehandle) {}\n\n  async read(position: number, length: number) {\n    const { buffer: b, bytesRead } = await this.filehandle.read(\n      Buffer.allocUnsafe(length),\n      0,\n      length,\n      position,\n    )\n    // xref https://stackoverflow.com/a/31394257/2129219\n    return b.buffer.slice(b.byteOffset, b.byteOffset + bytesRead)\n  }\n}\nexport function openFilehandleWrapper(\n  location: FileLocation,\n  pluginManager?: PluginManager,\n) {\n  return new GenericFilehandleWrapper(openLocation(location, pluginManager))\n}\n\ninterface HicParser {\n  getContactRecords: (\n    normalize: string,\n    ref: Ref,\n    ref2: Ref,\n    units: string,\n    binsize: number,\n  ) => Promise<ContactRecord[]>\n  getMetaData: () => Promise<HicMetadata>\n}\n\nexport default class HicAdapter extends BaseFeatureDataAdapter {\n  private hic: HicParser\n\n  public constructor(\n    config: AnyConfigurationModel,\n    getSubAdapter?: getSubAdapterType,\n    pluginManager?: PluginManager,\n  ) {\n    super(config, getSubAdapter, pluginManager)\n    const hicLocation = this.getConf('hicLocation')\n    this.hic = new HicStraw({\n      file: openFilehandleWrapper(hicLocation, this.pluginManager),\n    })\n  }\n\n  private async setup(opts?: BaseOptions) {\n    const { statusCallback = () => {} } = opts || {}\n    statusCallback('Downloading .hic header')\n    const result = await this.hic.getMetaData()\n    statusCallback('')\n    return result\n  }\n\n  public async getHeader(opts?: BaseOptions) {\n    const ret = await this.setup(opts)\n    const { chromosomes, ...rest } = ret\n    return rest\n  }\n\n  async getRefNames(opts?: BaseOptions) {\n    const metadata = await this.setup(opts)\n    return metadata.chromosomes.map(chr => chr.name)\n  }\n\n  async getResolution(bpPerPx: number, opts?: BaseOptions) {\n    const { resolutions } = await this.setup(opts)\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    let chosenResolution = resolutions.at(-1)!\n\n    for (let i = resolutions.length - 1; i >= 0; i -= 1) {\n      const r = resolutions[i]\n      if (r <= 2 * bpPerPx) {\n        chosenResolution = r\n      }\n    }\n    return chosenResolution\n  }\n\n  getFeatures(region: Region, opts: HicOptions = {}) {\n    return ObservableCreate<ContactRecord>(async observer => {\n      const { refName: chr, start, end } = region\n      const { resolution, bpPerPx = 1, statusCallback = () => {} } = opts\n      const res = await this.getResolution(bpPerPx / (resolution || 1000), opts)\n      statusCallback('Downloading .hic data')\n\n      const records = await this.hic.getContactRecords(\n        'KR',\n        { start, chr, end },\n        { start, chr, end },\n        'BP',\n        res,\n      )\n      records.forEach(record => {\n        observer.next(record)\n      })\n      statusCallback('')\n      observer.complete()\n    }, opts.signal) as any // eslint-disable-line @typescript-eslint/no-explicit-any\n  }\n\n  // don't do feature stats estimation, similar to bigwigadapter\n  async getMultiRegionFeatureDensityStats(_regions: Region[]) {\n    return { featureDensity: 0 }\n  }\n\n  freeResources(/* { region } */): void {}\n}\n"],"names":["GenericFilehandleWrapper","filehandle","_classCallCheck","_createClass","key","value","_read","_asyncToGenerator","_regeneratorRuntime","mark","_callee","position","length","_yield$this$filehandl","b","bytesRead","wrap","_context","prev","next","this","read","Buffer","allocUnsafe","sent","buffer","abrupt","slice","byteOffset","stop","_x","_x2","apply","arguments","openFilehandleWrapper","location","pluginManager","openLocation","HicAdapter","_BaseFeatureDataAdapt","_inherits","_super","_createSuper","config","getSubAdapter","_this","call","hic","hicLocation","getConf","HicStraw","file","_setup","_callee2","opts","_ref$statusCallback","statusCallback","result","_context2","getMetaData","_x3","_getHeader","_callee3","ret","rest","_context3","setup","chromosomes","_objectWithoutProperties","_excluded","_x4","_getRefNames","_callee4","metadata","_context4","map","chr","name","_x5","_getResolution","_callee5","bpPerPx","_yield$this$setup","resolutions","chosenResolution","i","r","_context5","at","_x6","_x7","region","_this2","undefined","ObservableCreate","_ref2","_callee6","observer","start","end","resolution","_opts$bpPerPx","_opts$statusCallback","res","_context6","refName","getResolution","getContactRecords","forEach","record","complete","_x8","signal","_getMultiRegionFeatureDensityStats","_callee7","_regions","_context7","featureDensity","_x9","BaseFeatureDataAdapter"],"sourceRoot":""}