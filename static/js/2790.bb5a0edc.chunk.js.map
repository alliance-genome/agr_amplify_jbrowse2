{"version":3,"file":"static/js/2790.bb5a0edc.chunk.js","mappings":"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","sources":["../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/HierarchicalTrackSelector.js"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport React, {\n  Suspense,\n  lazy,\n  useCallback,\n  useMemo,\n  useState,\n  useRef,\n  useEffect,\n} from 'react'\nimport {\n  Checkbox,\n  Fab,\n  FormControlLabel,\n  IconButton,\n  InputAdornment,\n  Menu,\n  MenuItem,\n  TextField,\n  Tooltip,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\n\n// icons\nimport ClearIcon from '@material-ui/icons/Clear'\nimport AddIcon from '@material-ui/icons/Add'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport MoreIcon from '@material-ui/icons/MoreHoriz'\nimport { Cable } from '@jbrowse/core/ui/Icons'\n\n// other\nimport AutoSizer from 'react-virtualized-auto-sizer'\nimport JBrowseMenu from '@jbrowse/core/ui/Menu'\nimport { getSession } from '@jbrowse/core/util'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { observer } from 'mobx-react'\nimport { VariableSizeTree } from 'react-vtree'\n\nconst CloseConnectionDialog = lazy(() => import('./CloseConnectionDialog'))\nconst DeleteConnectionDialog = lazy(() => import('./DeleteConnectionDialog'))\nconst ManageConnectionsDialog = lazy(() => import('./ManageConnectionsDialog'))\nconst ToggleConnectionsDialog = lazy(() => import('./ToggleConnectionsDialog'))\n\nconst useStyles = makeStyles(theme => ({\n  searchBox: {\n    margin: theme.spacing(2),\n  },\n  menuIcon: {\n    marginRight: theme.spacing(1),\n    marginBottom: 0,\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(6),\n    right: theme.spacing(6),\n  },\n  compactCheckbox: {\n    padding: 0,\n  },\n\n  checkboxLabel: {\n    marginRight: 0,\n    '&:hover': {\n      backgroundColor: '#eee',\n    },\n  },\n\n  // this accordionBase element's small padding is used to give a margin to\n  // accordionColor it a \"margin\" because the virtualized elements can't really\n  // use margin in a conventional way (it doesn't affect layout)\n  accordionBase: {\n    display: 'flex',\n  },\n\n  accordionCard: {\n    padding: 3,\n    cursor: 'pointer',\n    display: 'flex',\n  },\n\n  nestingLevelMarker: {\n    position: 'absolute',\n    borderLeft: '1.5px solid #555',\n  },\n  // accordionColor set's display:flex so that the child accordionText use\n  // vertically centered text\n  accordionColor: {\n    background: theme.palette.tertiary?.main,\n    color: theme.palette.tertiary?.contrastText,\n    width: '100%',\n    display: 'flex',\n    paddingLeft: 5,\n  },\n\n  // margin:auto 0 to center text vertically\n  accordionText: {\n    margin: 'auto 0',\n  },\n}))\n\n// An individual node in the track selector. Note: manually sets cursor:\n// pointer improves usability for what can be clicked\nconst Node = props => {\n  const { data, isOpen, style, setOpen } = props\n  const {\n    isLeaf,\n    nestingLevel,\n    checked,\n    id,\n    name,\n    onChange,\n    toggleCollapse,\n    conf,\n    onMoreInfo,\n    drawerPosition,\n  } = data\n\n  const classes = useStyles()\n  const width = 10\n  const marginLeft = nestingLevel * width + (isLeaf ? width : 0)\n  const unsupported =\n    name && (name.endsWith('(Unsupported)') || name.endsWith('(Unknown)'))\n  const description = (conf && readConfObject(conf, ['description'])) || ''\n\n  return (\n    <div style={style} className={!isLeaf ? classes.accordionBase : undefined}>\n      {new Array(nestingLevel).fill(0).map((_, idx) => (\n        <div\n          key={`mark-${idx}`}\n          style={{ left: idx * width + 4, height: style.height }}\n          className={classes.nestingLevelMarker}\n        />\n      ))}\n      <div\n        className={!isLeaf ? classes.accordionCard : undefined}\n        onClick={() => {\n          toggleCollapse(id)\n          setOpen(!isOpen)\n        }}\n        style={{\n          marginLeft,\n          whiteSpace: 'nowrap',\n          width: '100%',\n        }}\n      >\n        <div className={!isLeaf ? classes.accordionColor : undefined}>\n          {!isLeaf ? (\n            <div className={classes.accordionText}>\n              <Typography>\n                {isOpen ? <ArrowDropDownIcon /> : <ArrowRightIcon />}\n                {name}\n              </Typography>\n            </div>\n          ) : (\n            <>\n              <Tooltip\n                title={description}\n                placement={drawerPosition === 'left' ? 'right' : 'left'}\n              >\n                <FormControlLabel\n                  className={classes.checkboxLabel}\n                  control={\n                    <Checkbox\n                      className={classes.compactCheckbox}\n                      checked={checked}\n                      onChange={() => onChange(id)}\n                      color=\"primary\"\n                      disabled={unsupported}\n                      inputProps={{\n                        'data-testid': `htsTrackEntry-${id}`,\n                      }}\n                    />\n                  }\n                  label={name}\n                />\n              </Tooltip>\n              <IconButton\n                onClick={e => onMoreInfo({ target: e.currentTarget, id, conf })}\n                color=\"secondary\"\n                data-testid={`htsTrackEntryMenu-${id}`}\n              >\n                <MoreIcon />\n              </IconButton>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst getNodeData = (node, nestingLevel, extra) => {\n  const isLeaf = !!node.conf\n  return {\n    data: {\n      defaultHeight: isLeaf ? 22 : 40,\n      isLeaf,\n      isOpenByDefault: true,\n      nestingLevel,\n      ...node,\n      ...extra,\n    },\n    nestingLevel,\n    node,\n  }\n}\n\n// this is the main tree component for the hierarchical track selector in note:\n// in jbrowse-web the toolbar is position=\"sticky\" which means the autosizer\n// includes the height of the toolbar, so we subtract the given offsets\nconst HierarchicalTree = observer(({ height, tree, model }) => {\n  const { filterText, view } = model\n  const treeRef = useRef(null)\n  const [info, setMoreInfo] = useState()\n  const session = getSession(model)\n  const { drawerPosition } = session\n\n  const extra = useMemo(\n    () => ({\n      onChange: trackId => view.toggleTrack(trackId),\n      toggleCollapse: pathName => model.toggleCategory(pathName),\n      onMoreInfo: setMoreInfo,\n      drawerPosition,\n    }),\n    [view, model, drawerPosition],\n  )\n  const treeWalker = useCallback(\n    function* treeWalker() {\n      for (let i = 0; i < tree.children.length; i++) {\n        yield getNodeData(tree.children[i], 0, extra)\n      }\n\n      while (true) {\n        const parentMeta = yield\n\n        for (let i = 0; i < parentMeta.node.children.length; i++) {\n          const curr = parentMeta.node.children[i]\n          yield getNodeData(curr, parentMeta.nestingLevel + 1, extra)\n        }\n      }\n    },\n    [tree, extra],\n  )\n\n  const conf = info?.conf\n  const menuItems = (conf && session.getTrackActionMenuItems?.(conf)) || []\n\n  useEffect(() => {\n    treeRef.current.recomputeTree({\n      refreshNodes: true,\n      useDefaultHeight: true,\n    })\n  }, [tree, filterText])\n  return (\n    <>\n      <VariableSizeTree ref={treeRef} treeWalker={treeWalker} height={height}>\n        {Node}\n      </VariableSizeTree>\n      <JBrowseMenu\n        anchorEl={info?.target}\n        menuItems={menuItems}\n        onMenuItemClick={(_event, callback) => {\n          callback()\n          setMoreInfo(undefined)\n        }}\n        open={Boolean(info)}\n        onClose={() => setMoreInfo(undefined)}\n      />\n    </>\n  )\n})\n\n// Don't use autosizer in jest and instead hardcode a height, otherwise fails\n// jest tests\nconst AutoSizedHierarchicalTree = ({ tree, model, offset }) => {\n  return typeof jest === 'undefined' ? (\n    <AutoSizer disableWidth>\n      {({ height }) => {\n        return (\n          <HierarchicalTree\n            height={height - offset}\n            model={model}\n            tree={tree}\n          />\n        )\n      }}\n    </AutoSizer>\n  ) : (\n    <HierarchicalTree height={9000} model={model} tree={tree} />\n  )\n}\n\nconst Wrapper = ({ overrideDimensions, children }) => {\n  return overrideDimensions ? (\n    <div style={{ ...overrideDimensions }}>{children}</div>\n  ) : (\n    <>{children}</>\n  )\n}\nconst HierarchicalTrackSelectorContainer = observer(\n  ({ model, toolbarHeight, overrideDimensions }) => {\n    const classes = useStyles()\n    const session = getSession(model)\n    const [anchorEl, setAnchorEl] = useState(null)\n\n    function handleFabClose() {\n      setAnchorEl(null)\n    }\n    return (\n      <Wrapper overrideDimensions={overrideDimensions}>\n        <HierarchicalTrackSelector\n          model={model}\n          toolbarHeight={toolbarHeight}\n          overrideDimensions={overrideDimensions}\n        />\n        {session.addConnectionConf || session.addTrackConf ? (\n          <>\n            <Fab\n              color=\"secondary\"\n              className={classes.fab}\n              onClick={event => {\n                setAnchorEl(event.currentTarget)\n              }}\n            >\n              <AddIcon />\n            </Fab>\n            <Menu\n              anchorEl={anchorEl}\n              open={Boolean(anchorEl)}\n              onClose={() => setAnchorEl(null)}\n            >\n              {session.addConnectionConf ? (\n                <MenuItem\n                  onClick={() => {\n                    handleFabClose()\n                    const widget = session.addWidget(\n                      'AddConnectionWidget',\n                      'addConnectionWidget',\n                    )\n                    session.showWidget(widget)\n                  }}\n                >\n                  Add connection\n                </MenuItem>\n              ) : null}\n              {session.addTrackConf ? (\n                <MenuItem\n                  onClick={() => {\n                    handleFabClose()\n                    const widget = session.addWidget(\n                      'AddTrackWidget',\n                      'addTrackWidget',\n                      {\n                        view: model.view.id,\n                      },\n                    )\n                    session.showWidget(widget)\n                  }}\n                >\n                  Add track\n                </MenuItem>\n              ) : null}\n            </Menu>\n          </>\n        ) : null}\n      </Wrapper>\n    )\n  },\n)\n\nconst HierarchicalTrackSelectorHeader = observer(\n  ({ model, setHeaderHeight, setAssemblyIdx, assemblyIdx }) => {\n    const classes = useStyles()\n    const session = getSession(model)\n    const [connectionAnchorEl, setConnectionAnchorEl] = useState()\n    const [menuAnchorEl, setMenuAnchorEl] = useState()\n    const [modalInfo, setModalInfo] = useState()\n    const [deleteDialogDetails, setDeleteDialogDetails] = useState()\n    const [connectionManagerOpen, setConnectionManagerOpen] = useState(false)\n    const [connectionToggleOpen, setConnectionToggleOpen] = useState(false)\n    const { assemblyNames } = model\n    const assemblyName = assemblyNames[assemblyIdx]\n\n    function breakConnection(connectionConf, deletingConnection) {\n      const name = readConfObject(connectionConf, 'name')\n      const result = session.prepareToBreakConnection(connectionConf)\n      if (result) {\n        const [safelyBreakConnection, dereferenceTypeCount] = result\n        if (Object.keys(dereferenceTypeCount).length > 0) {\n          setModalInfo({\n            connectionConf,\n            safelyBreakConnection,\n            dereferenceTypeCount,\n            name,\n          })\n        } else {\n          safelyBreakConnection()\n        }\n      }\n      if (deletingConnection) {\n        setDeleteDialogDetails({ name, connectionConf })\n      }\n    }\n\n    const connectionMenuItems = [\n      {\n        label: 'Turn on/off connections...',\n        onClick: () => setConnectionToggleOpen(true),\n      },\n    ]\n\n    if (session.addConnectionConf) {\n      connectionMenuItems.unshift({\n        label: 'Add connection',\n        onClick: () => {\n          session.showWidget(\n            session.addWidget('AddConnectionWidget', 'addConnectionWidget'),\n          )\n        },\n      })\n\n      connectionMenuItems.push({\n        label: 'Delete connections...',\n        onClick: () => setConnectionManagerOpen(true),\n      })\n    }\n\n    const assemblyMenuItems =\n      assemblyNames.length > 1\n        ? [\n            {\n              label: 'Select assembly...',\n              subMenu: assemblyNames.map((name, idx) => ({\n                label: name,\n                onClick: () => {\n                  setAssemblyIdx(idx)\n                },\n              })),\n            },\n          ]\n        : []\n\n    const menuItems = [\n      {\n        label: 'Add track...',\n        onClick: () => {\n          session.showWidget(\n            session.addWidget('AddTrackWidget', 'addTrackWidget', {\n              view: model.view.id,\n            }),\n          )\n        },\n      },\n\n      ...assemblyMenuItems,\n    ]\n\n    return (\n      <div\n        ref={ref => setHeaderHeight(ref?.getBoundingClientRect().height || 0)}\n        data-testid=\"hierarchical_track_selector\"\n      >\n        <div style={{ display: 'flex' }}>\n          {session.addTrackConf && (\n            <IconButton\n              className={classes.menuIcon}\n              onClick={event => {\n                setMenuAnchorEl(event.currentTarget)\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n          )}\n\n          {session.makeConnection && (\n            <IconButton\n              className={classes.menuIcon}\n              onClick={event => {\n                setConnectionAnchorEl(event.currentTarget)\n              }}\n            >\n              <Cable />\n            </IconButton>\n          )}\n\n          <TextField\n            className={classes.searchBox}\n            label=\"Filter tracks\"\n            value={model.filterText}\n            onChange={event => model.setFilterText(event.target.value)}\n            fullWidth\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton color=\"secondary\" onClick={model.clearFilterText}>\n                    <ClearIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n        </div>\n        <JBrowseMenu\n          anchorEl={connectionAnchorEl}\n          open={Boolean(connectionAnchorEl)}\n          onMenuItemClick={(_, callback) => {\n            callback()\n            setConnectionAnchorEl(undefined)\n          }}\n          onClose={() => setConnectionAnchorEl(undefined)}\n          menuItems={connectionMenuItems}\n        />\n        <JBrowseMenu\n          anchorEl={menuAnchorEl}\n          open={Boolean(menuAnchorEl)}\n          onMenuItemClick={(_, callback) => {\n            callback()\n            setMenuAnchorEl(undefined)\n          }}\n          onClose={() => setMenuAnchorEl(undefined)}\n          menuItems={menuItems}\n        />\n        <Suspense fallback={<div />}>\n          {modalInfo ? (\n            <CloseConnectionDialog\n              modalInfo={modalInfo}\n              setModalInfo={setModalInfo}\n              session={session}\n            />\n          ) : deleteDialogDetails ? (\n            <DeleteConnectionDialog\n              handleClose={() => setDeleteDialogDetails(undefined)}\n              deleteDialogDetails={deleteDialogDetails}\n              session={session}\n            />\n          ) : null}\n          {connectionManagerOpen ? (\n            <ManageConnectionsDialog\n              handleClose={() => setConnectionManagerOpen(false)}\n              breakConnection={breakConnection}\n              session={session}\n            />\n          ) : null}\n          {connectionToggleOpen ? (\n            <ToggleConnectionsDialog\n              handleClose={() => setConnectionToggleOpen(false)}\n              session={session}\n              breakConnection={breakConnection}\n              assemblyName={assemblyName}\n            />\n          ) : null}\n        </Suspense>\n      </div>\n    )\n  },\n)\nconst HierarchicalTrackSelector = observer(({ model, toolbarHeight = 0 }) => {\n  const [assemblyIdx, setAssemblyIdx] = useState(0)\n  const [headerHeight, setHeaderHeight] = useState(0)\n\n  const { assemblyNames } = model\n  const assemblyName = assemblyNames[assemblyIdx]\n  return assemblyName ? (\n    <>\n      <HierarchicalTrackSelectorHeader\n        model={model}\n        setHeaderHeight={setHeaderHeight}\n        setAssemblyIdx={setAssemblyIdx}\n        assemblyIdx={assemblyIdx}\n      />\n      <AutoSizedHierarchicalTree\n        tree={model.hierarchy(assemblyName)}\n        model={model}\n        offset={toolbarHeight + headerHeight}\n      />\n    </>\n  ) : null\n})\n\nexport default HierarchicalTrackSelectorContainer\n"],"names":["CloseConnectionDialog","lazy","DeleteConnectionDialog","ManageConnectionsDialog","ToggleConnectionsDialog","useStyles","makeStyles","theme","searchBox","margin","spacing","menuIcon","marginRight","marginBottom","fab","position","bottom","right","compactCheckbox","padding","checkboxLabel","backgroundColor","accordionBase","display","accordionCard","cursor","nestingLevelMarker","borderLeft","accordionColor","background","palette","tertiary","main","color","contrastText","width","paddingLeft","accordionText","Node","props","data","isOpen","style","setOpen","isLeaf","nestingLevel","checked","id","name","onChange","toggleCollapse","conf","onMoreInfo","drawerPosition","classes","marginLeft","unsupported","endsWith","description","readConfObject","className","undefined","Array","fill","map","_","idx","left","height","onClick","whiteSpace","title","placement","control","disabled","inputProps","label","e","target","currentTarget","getNodeData","node","extra","defaultHeight","isOpenByDefault","HierarchicalTree","observer","tree","model","filterText","view","treeRef","useRef","useState","info","setMoreInfo","session","getSession","useMemo","trackId","toggleTrack","pathName","toggleCategory","treeWalker","useCallback","i","children","length","parentMeta","curr","menuItems","getTrackActionMenuItems","useEffect","current","recomputeTree","refreshNodes","useDefaultHeight","ref","anchorEl","onMenuItemClick","_event","callback","open","Boolean","onClose","AutoSizedHierarchicalTree","offset","jest","disableWidth","Wrapper","overrideDimensions","HierarchicalTrackSelectorContainer","toolbarHeight","setAnchorEl","handleFabClose","HierarchicalTrackSelector","addConnectionConf","addTrackConf","event","widget","addWidget","showWidget","HierarchicalTrackSelectorHeader","setHeaderHeight","setAssemblyIdx","assemblyIdx","connectionAnchorEl","setConnectionAnchorEl","menuAnchorEl","setMenuAnchorEl","modalInfo","setModalInfo","deleteDialogDetails","setDeleteDialogDetails","connectionManagerOpen","setConnectionManagerOpen","connectionToggleOpen","setConnectionToggleOpen","assemblyNames","assemblyName","breakConnection","connectionConf","deletingConnection","result","prepareToBreakConnection","safelyBreakConnection","dereferenceTypeCount","Object","keys","connectionMenuItems","unshift","push","assemblyMenuItems","subMenu","getBoundingClientRect","makeConnection","value","setFilterText","fullWidth","InputProps","endAdornment","clearFilterText","Suspense","fallback","handleClose","headerHeight","hierarchy"],"sourceRoot":""}