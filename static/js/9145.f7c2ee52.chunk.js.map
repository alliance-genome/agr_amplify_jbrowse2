{"version":3,"file":"static/js/9145.f7c2ee52.chunk.js","mappings":"gSAkBMA,GAAYC,EAAAA,EAAAA,IAAW,SAAAC,GAAK,MAAK,CACrCC,YAAa,CACXC,SAAU,WACVC,MAAOH,EAAMI,QAAQ,GACrBC,IAAKL,EAAMI,QAAQ,GACnBE,MAAON,EAAMO,QAAQC,KAAK,MAG5BC,oBAAqB,CACnBC,MAAO,IACPC,OAAQX,EAAMI,QAAQ,QAqF1B,WAAeQ,EAAAA,EAAAA,WAjFf,YAUI,IATFC,EASC,EATDA,QACAC,EAQC,EARDA,YACAC,EAOC,EAPDA,aACAC,EAMC,EANDA,gBAOMC,EAAUnB,IACRoB,EAAqCL,EAArCK,YAAaC,EAAwBN,EAAxBM,oBACfC,EAA8BF,EAAYG,QAAO,SAAAC,GACrD,IAAMC,GAAsBC,EAAAA,EAAAA,gBAAeF,EAAG,iBAC9C,OAAmC,IAA/BC,EAAoBE,QAGjBF,EAAoBG,SAASX,MAEtC,OACE,UAAC,IAAD,CAAQY,MAAI,EAACC,QAASd,EAAae,SAAS,KAA5C,WACE,UAAC,IAAD,sCAEE,SAAC,IAAD,CACEC,UAAWb,EAAQhB,YACnB8B,QAAS,kBAAMjB,KAFjB,UAIE,SAAC,IAAD,UAGJ,UAAC,IAAD,YACE,SAAC,IAAD,2DACA,iBAAKgB,UAAWb,EAAQR,oBAAxB,UACGW,EAA4BY,KAAI,SAAAC,GAC/B,IAAMC,GAAOV,EAAAA,EAAAA,gBAAeS,EAAM,QAClC,OACE,0BACE,SAAC,IAAD,CACEE,SACE,SAAC,IAAD,CACEC,UACG,OAACjB,QAAD,IAACA,IAAAA,EAAqBkB,MAAK,SAAAC,GAAI,OAAIJ,IAASI,EAAKJ,SAEpDK,SAAU,WAOA,IAAD,EANP,OACEpB,QADF,IACEA,GAAAA,EAAqBkB,MACnB,SAAAC,GAAI,OAAIA,EAAKJ,QAASV,EAAAA,EAAAA,gBAAeS,EAAM,WAG7CjB,EAAgBiB,GAEhB,UAAApB,EAAQ2B,sBAAR,cAAA3B,EAAyBoB,IAG7B3B,MAAM,YAGVmC,MAAOP,KArBDD,EAAKS,iBA0BjBtB,EAA4BK,OAE1B,MADF,UAAC,IAAD,uCAAsCV,YAI5C,SAAC,IAAD,WACE,SAAC,IAAD,CACEgB,QAAS,kBAAMjB,KACf6B,QAAQ,YACRrC,MAAM,UAHR","sources":["../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/ToggleConnectionsDialog.tsx"],"sourcesContent":["import React from 'react'\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  FormControlLabel,\n  Checkbox,\n  IconButton,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { observer } from 'mobx-react'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { AbstractSessionModel } from '@jbrowse/core/util'\n\nconst useStyles = makeStyles(theme => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n\n  connectionContainer: {\n    width: 500,\n    margin: theme.spacing(4),\n  },\n}))\n\nfunction ToggleConnectionDialog({\n  session,\n  handleClose,\n  assemblyName,\n  breakConnection,\n}: {\n  handleClose: () => void\n  session: AbstractSessionModel\n  assemblyName: string\n  breakConnection: Function\n}) {\n  const classes = useStyles()\n  const { connections, connectionInstances } = session\n  const assemblySpecificConnections = connections.filter(c => {\n    const configAssemblyNames = readConfObject(c, 'assemblyNames')\n    if (configAssemblyNames.length === 0) {\n      return true\n    }\n    return configAssemblyNames.includes(assemblyName)\n  })\n  return (\n    <Dialog open onClose={handleClose} maxWidth=\"lg\">\n      <DialogTitle>\n        Turn on/off connections\n        <IconButton\n          className={classes.closeButton}\n          onClick={() => handleClose()}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <Typography>Use the checkbox to turn on/off connections</Typography>\n        <div className={classes.connectionContainer}>\n          {assemblySpecificConnections.map(conf => {\n            const name = readConfObject(conf, 'name')\n            return (\n              <div key={conf.connectionId}>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={\n                        !!connectionInstances?.find(conn => name === conn.name)\n                      }\n                      onChange={() => {\n                        if (\n                          connectionInstances?.find(\n                            conn => conn.name === readConfObject(conf, 'name'),\n                          )\n                        ) {\n                          breakConnection(conf)\n                        } else {\n                          session.makeConnection?.(conf)\n                        }\n                      }}\n                      color=\"primary\"\n                    />\n                  }\n                  label={name}\n                />\n              </div>\n            )\n          })}\n          {!assemblySpecificConnections.length ? (\n            <Typography>No connections found for {assemblyName}</Typography>\n          ) : null}\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => handleClose()}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default observer(ToggleConnectionDialog)\n"],"names":["useStyles","makeStyles","theme","closeButton","position","right","spacing","top","color","palette","grey","connectionContainer","width","margin","observer","session","handleClose","assemblyName","breakConnection","classes","connections","connectionInstances","assemblySpecificConnections","filter","c","configAssemblyNames","readConfObject","length","includes","open","onClose","maxWidth","className","onClick","map","conf","name","control","checked","find","conn","onChange","makeConnection","label","connectionId","variant"],"sourceRoot":""}