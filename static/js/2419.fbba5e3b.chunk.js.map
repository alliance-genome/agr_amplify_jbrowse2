{"version":3,"file":"static/js/2419.fbba5e3b.chunk.js","mappings":"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","sources":["../../../plugins/grid-bookmark/src/GridBookmarkWidget/components/ImportBookmarksDialog.tsx","../../../plugins/grid-bookmark/src/GridBookmarkWidget/sessionSharing.ts","../../../node_modules/@mui/material/AccordionDetails/AccordionDetails.js","../../../node_modules/@mui/material/AccordionDetails/accordionDetailsClasses.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { getSession } from '@jbrowse/core/util'\nimport { FileLocation, isSessionWithShareURL } from '@jbrowse/core/util/types'\nimport { FileSelector } from '@jbrowse/core/ui'\nimport {\n  Button,\n  DialogContent,\n  DialogActions,\n  Typography,\n  TextField,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Tooltip,\n} from '@mui/material'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport { Dialog } from '@jbrowse/core/ui'\nimport AssemblySelector from '@jbrowse/core/ui/AssemblySelector'\nimport { makeStyles } from 'tss-react/mui'\n\n// icons\nimport ImportIcon from '@mui/icons-material/Publish'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport HelpIcon from '@mui/icons-material/Help'\n\n// locals\nimport { GridBookmarkModel } from '../model'\nimport { fromUrlSafeB64 } from '../utils'\nimport { readSessionFromDynamo } from '../sessionSharing'\n\nconst useStyles = makeStyles()(theme => ({\n  flexItem: {\n    margin: 5,\n  },\n  expandIcon: {\n    color: theme.palette.tertiary?.contrastText || '#fff',\n  },\n}))\n\nasync function getBookmarksFromShareLink(shareLink: string, shareURL: string) {\n  const defaultURL = 'https://share.jbrowse.org/api/v1/'\n  const urlParams = new URL(shareLink)\n  const sessionQueryParam = urlParams.searchParams.get('bookmarks')\n  const password = urlParams.searchParams.get('password')\n  const decryptedSession = await readSessionFromDynamo(\n    `${shareURL ?? defaultURL}load`,\n    sessionQueryParam || '',\n    password || '',\n  )\n\n  const sharedSession = JSON.parse(await fromUrlSafeB64(decryptedSession))\n\n  return sharedSession.sharedBookmarks\n}\n\nasync function getBookmarksFromFile(\n  location: FileLocation,\n  selectedAsm: string,\n) {\n  const data = await openLocation(location).readFile('utf8')\n  return data\n    .split(/\\n|\\r\\n|\\r/)\n    .filter(f => !!f.trim())\n    .filter(\n      f =>\n        !f.startsWith('#') &&\n        !f.startsWith('track') &&\n        !f.startsWith('browser'),\n    )\n    .map(line => {\n      const [refName, start, end, label, assembly] = line.split('\\t')\n      return {\n        assemblyName: assembly ?? selectedAsm,\n        refName,\n        start: +start,\n        end: +end,\n        label: label === '.' ? undefined : label,\n      }\n    })\n}\n\nconst ImportBookmarksDialog = observer(function ({\n  onClose,\n  model,\n}: {\n  onClose: () => void\n  model: GridBookmarkModel\n}) {\n  const { classes } = useStyles()\n  const [location, setLocation] = useState<FileLocation>()\n  const [error, setError] = useState<unknown>()\n  const [shareLink, setShareLink] = useState('')\n  const session = getSession(model)\n  const { assemblyNames } = session\n  const [selectedAsm, setSelectedAsm] = useState(assemblyNames[0])\n  const [expanded, setExpanded] = useState('shareLinkAccordion')\n\n  return (\n    <Dialog open onClose={onClose} maxWidth=\"xl\" title=\"Import bookmarks\">\n      <DialogContent>\n        <Accordion\n          expanded={expanded === 'shareLinkAccordion'}\n          onChange={() => setExpanded('shareLinkAccordion')}\n        >\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon className={classes.expandIcon} />}\n          >\n            <Typography\n              style={{ display: 'flex', alignItems: 'center', gap: '5px' }}\n            >\n              Import from share link{' '}\n              <Tooltip title=\"The appropriate share link for sharing bookmarks is one generated via the 'Share' button in the 'Bookmarked regions' drawer. Paste it below to import shared bookmarks.\">\n                <HelpIcon />\n              </Tooltip>\n            </Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <TextField\n              label=\"Enter URL\"\n              variant=\"outlined\"\n              style={{ width: '100%' }}\n              value={shareLink}\n              onChange={e => setShareLink(e.target.value)}\n            />\n          </AccordionDetails>\n        </Accordion>\n        <Accordion\n          expanded={expanded === 'fileAccordion'}\n          onChange={() => setExpanded('fileAccordion')}\n        >\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon className={classes.expandIcon} />}\n          >\n            <Typography>Import from file</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <FileSelector\n              location={location}\n              setLocation={setLocation}\n              name=\"File\"\n              description=\"Choose a BED or TSV format file to import.\"\n            />\n            <AssemblySelector\n              onChange={val => setSelectedAsm(val)}\n              helperText={`Select the assembly your bookmarks belong to (BED or TSV without assembly column).`}\n              session={session}\n              selected={selectedAsm}\n            />\n          </AccordionDetails>\n        </Accordion>\n        {error ? (\n          <Typography color=\"error\" variant=\"h6\">{`${error}`}</Typography>\n        ) : null}\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"contained\" color=\"secondary\" onClick={onClose}>\n          Cancel\n        </Button>\n        <Button\n          className={classes.flexItem}\n          data-testid=\"dialogImport\"\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={!location && !shareLink}\n          startIcon={<ImportIcon />}\n          onClick={async () => {\n            try {\n              if (location) {\n                model.importBookmarks(\n                  await getBookmarksFromFile(location, selectedAsm),\n                )\n              } else if (shareLink && isSessionWithShareURL(session)) {\n                model.importBookmarks(\n                  await getBookmarksFromShareLink(shareLink, session.shareURL),\n                )\n              }\n              onClose()\n            } catch (e) {\n              console.error(e)\n              setError(e)\n            }\n          }}\n        >\n          Import\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\nexport default ImportBookmarksDialog\n","// duplicated from products/jbrowse-web/src/sessionSharing.ts ; could possibly be moved into a higher directory and shared between the two\nimport { toUrlSafeB64 } from './utils'\n\n// from https://stackoverflow.com/questions/1349404/\nfunction generateUID(length: number) {\n  return window\n    .btoa(\n      [...window.crypto.getRandomValues(new Uint8Array(length * 2))]\n        .map(b => String.fromCharCode(b))\n        .join(''),\n    )\n    .replaceAll(/[+/]/g, '')\n    .slice(0, length)\n}\n\nconst encrypt = async (text: string, password: string) => {\n  const AES = await import('crypto-js/aes')\n  return AES.encrypt(text, password).toString()\n}\n\nconst decrypt = async (text: string, password: string) => {\n  const AES = await import('crypto-js/aes')\n  const Utf8 = await import('crypto-js/enc-utf8')\n  const bytes = AES.decrypt(text, password)\n  return bytes.toString(Utf8)\n}\n\nfunction getErrorMsg(err: string) {\n  try {\n    const obj = JSON.parse(err)\n    return obj.message\n  } catch (e) {\n    return err\n  }\n}\n// writes the encrypted session, current datetime, and referer to DynamoDB\nexport async function shareSessionToDynamo(\n  session: unknown,\n  url: string,\n  referer: string,\n) {\n  const sess = await toUrlSafeB64(JSON.stringify(session))\n  const password = generateUID(5)\n  const encryptedSession = await encrypt(sess, password)\n\n  const data = new FormData()\n  data.append('session', encryptedSession)\n  data.append('dateShared', `${Date.now()}`)\n  data.append('referer', referer)\n\n  const response = await fetch(`${url}share`, {\n    method: 'POST',\n    mode: 'cors',\n    body: data,\n  })\n\n  if (!response.ok) {\n    const err = await response.text()\n    throw new Error(getErrorMsg(err))\n  }\n  const json = await response.json()\n  return {\n    json,\n    encryptedSession,\n    password,\n  }\n}\n\nexport async function readSessionFromDynamo(\n  baseUrl: string,\n  sessionQueryParam: string,\n  password: string,\n  signal?: AbortSignal,\n) {\n  const sessionId = sessionQueryParam.split('share-')[1]\n  const url = `${baseUrl}?sessionId=${encodeURIComponent(sessionId)}`\n  const response = await fetch(url, {\n    signal,\n  })\n\n  if (!response.ok) {\n    const err = await response.text()\n    throw new Error(getErrorMsg(err))\n  }\n\n  const json = await response.json()\n  return decrypt(json.session, password)\n}\n","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getAccordionDetailsUtilityClass } from './accordionDetailsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getAccordionDetailsUtilityClass, classes);\n};\nconst AccordionDetailsRoot = styled('div', {\n  name: 'MuiAccordionDetails',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1, 2, 2)\n}));\nconst AccordionDetails = /*#__PURE__*/React.forwardRef(function AccordionDetails(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAccordionDetails'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(AccordionDetailsRoot, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionDetails.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AccordionDetails;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getAccordionDetailsUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordionDetails', slot);\n}\nconst accordionDetailsClasses = generateUtilityClasses('MuiAccordionDetails', ['root']);\nexport default accordionDetailsClasses;"],"names":["useStyles","makeStyles","theme","_theme$palette$tertia","flexItem","margin","expandIcon","color","palette","tertiary","contrastText","getBookmarksFromShareLink","_x","_x2","_getBookmarksFromShareLink","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","shareLink","shareURL","urlParams","sessionQueryParam","password","decryptedSession","sharedSession","wrap","_context2","prev","next","URL","searchParams","get","readSessionFromDynamo","concat","sent","t0","JSON","fromUrlSafeB64","t1","parse","call","abrupt","sharedBookmarks","stop","getBookmarksFromFile","_x3","_x4","_getBookmarksFromFile","_callee3","location","selectedAsm","data","_context3","openLocation","readFile","split","filter","f","trim","startsWith","map","line","_line$split","_line$split2","_slicedToArray","refName","start","end","label","assembly","assemblyName","undefined","ImportBookmarksDialog","observer","_ref","onClose","model","classes","_useState","useState","_useState2","setLocation","_useState3","_useState4","error","setError","_useState5","_useState6","setShareLink","session","getSession","assemblyNames","_useState7","_useState8","setSelectedAsm","_useState9","_useState10","expanded","setExpanded","_jsxs","Dialog","open","maxWidth","title","children","DialogContent","Accordion","onChange","_jsx","AccordionSummary","ExpandMoreIcon","className","Typography","style","display","alignItems","gap","Tooltip","HelpIcon","AccordionDetails","TextField","variant","width","value","e","target","FileSelector","name","description","AssemblySelector","val","helperText","selected","DialogActions","Button","onClick","disabled","startIcon","ImportIcon","_callee","_context","importBookmarks","isSessionWithShareURL","t2","t3","t4","console","encrypt","text","AES","toString","decrypt","_ref2","Utf8","bytes","getErrorMsg","err","message","shareSessionToDynamo","_x5","_x6","_x7","_shareSessionToDynamo","url","referer","sess","encryptedSession","response","json","toUrlSafeB64","stringify","length","window","btoa","_toConsumableArray","crypto","getRandomValues","Uint8Array","b","String","fromCharCode","join","replaceAll","slice","FormData","append","Date","now","fetch","method","mode","body","ok","Error","_x8","_x9","_x10","_x11","_readSessionFromDynamo","_callee4","baseUrl","signal","sessionId","_context4","encodeURIComponent","_excluded","AccordionDetailsRoot","styled","slot","overridesResolver","props","styles","root","padding","spacing","React","inProps","ref","useThemeProps","other","_objectWithoutPropertiesLoose","ownerState","composeClasses","getAccordionDetailsUtilityClass","useUtilityClasses","_extends","clsx","generateUtilityClass","accordionDetailsClasses","generateUtilityClasses"],"sourceRoot":""}