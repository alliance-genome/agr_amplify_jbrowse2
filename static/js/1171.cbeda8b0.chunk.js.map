{"version":3,"file":"static/js/1171.cbeda8b0.chunk.js","mappings":"kPAWA,MAqDA,GArDwBA,EAAAA,EAAAA,WAAS,SAAUC,GAIzC,MAAM,MAAEC,EAAK,YAAEC,GAAgBF,GACxBG,EAAKC,IAAUC,EAAAA,EAAAA,UAAS,IACzBC,EAAWH,EAAII,MAAM,yBAC3B,OACEC,EAAAA,cAACC,EAAAA,OAAM,CAACC,MAAI,EAACC,QAAST,EAAaU,MAAM,eACvCJ,EAAAA,cAACK,EAAAA,EAAa,KACZL,EAAAA,cAACM,EAAAA,EAAU,KAAC,0BACZN,EAAAA,cAACM,EAAAA,EAAU,CAACC,MAAM,iBAAgB,uDAGlCP,EAAAA,cAACQ,EAAAA,EAAS,CACRC,MAAOd,EACPe,SAAUC,GAASf,EAAOe,EAAMC,OAAOH,OACvCI,YAAY,iBACZC,WAAY,CACVC,UAAW,EACX,cAAe,uBAEjBC,MAAsB,IAAfrB,EAAIsB,SAAiBnB,EAC5BoB,WAA2B,IAAfvB,EAAIsB,QAAiBnB,EAA+B,GAApB,kBAC5CqB,aAAa,MACb,cAAY,kBAEdnB,EAAAA,cAACoB,EAAAA,EAAa,KACZpB,EAAAA,cAACqB,EAAAA,EAAM,CACLC,QAAQ,YACRf,MAAM,UACNgB,KAAK,SACLC,WAAS,EACTC,QAASA,KACPhC,EAAMiC,YAAY,MAAO/B,GACzBD,GAAa,GAEhB,UAGDM,EAAAA,cAACqB,EAAAA,EAAM,CACLC,QAAQ,YACRf,MAAM,YACNkB,QAASA,IAAM/B,KAChB,YAOX,G","sources":["../../../plugins/alignments/src/LinearPileupDisplay/components/SortByTag.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\n\nconst SortByTagDialog = observer(function (props: {\n  model: { setSortedBy: Function }\n  handleClose: () => void\n}) {\n  const { model, handleClose } = props\n  const [tag, setTag] = useState('')\n  const validTag = tag.match(/^[A-Za-z][A-Za-z0-9]$/)\n  return (\n    <Dialog open onClose={handleClose} title=\"Sort by tag\">\n      <DialogContent>\n        <Typography>Set the tag to sort by</Typography>\n        <Typography color=\"textSecondary\">\n          Examples: HP for haplotype, RG for read group, etc.\n        </Typography>\n        <TextField\n          value={tag}\n          onChange={event => setTag(event.target.value)}\n          placeholder=\"Enter tag name\"\n          inputProps={{\n            maxLength: 2,\n            'data-testid': 'sort-tag-name-input',\n          }}\n          error={tag.length === 2 && !validTag}\n          helperText={tag.length === 2 && !validTag ? 'Not a valid tag' : ''}\n          autoComplete=\"off\"\n          data-testid=\"sort-tag-name\"\n        />\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            autoFocus\n            onClick={() => {\n              model.setSortedBy('tag', tag)\n              handleClose()\n            }}\n          >\n            Submit\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => handleClose()}\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </Dialog>\n  )\n})\n\nexport default SortByTagDialog\n"],"names":["observer","props","model","handleClose","tag","setTag","useState","validTag","match","React","Dialog","open","onClose","title","DialogContent","Typography","color","TextField","value","onChange","event","target","placeholder","inputProps","maxLength","error","length","helperText","autoComplete","DialogActions","Button","variant","type","autoFocus","onClick","setSortedBy"],"sourceRoot":""}