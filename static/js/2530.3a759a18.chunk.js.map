{"version":3,"file":"static/js/2530.3a759a18.chunk.js","mappings":"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","sources":["../../../plugins/gff3/src/Gff3Adapter/Gff3Adapter.ts"],"sourcesContent":["import {\n  BaseFeatureDataAdapter,\n  BaseOptions,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { NoAssemblyRegion } from '@jbrowse/core/util/types'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport IntervalTree from '@flatten-js/interval-tree'\nimport SimpleFeature, { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { unzip } from '@gmod/bgzf-filehandle'\n\nimport gff, { GFF3FeatureLineWithRefs } from '@gmod/gff'\n\nfunction isGzip(buf: Buffer) {\n  return buf[0] === 31 && buf[1] === 139 && buf[2] === 8\n}\n\nexport default class extends BaseFeatureDataAdapter {\n  protected gffFeatures?: Promise<{\n    header: string\n    intervalTree: Record<string, IntervalTree>\n  }>\n\n  private async loadDataP() {\n    const pm = this.pluginManager\n    const buf = await openLocation(this.getConf('gffLocation'), pm).readFile()\n    const buffer = isGzip(buf) ? await unzip(buf) : buf\n    // 512MB  max chrome string length is 512MB\n    if (buffer.length > 536_870_888) {\n      throw new Error('Data exceeds maximum string length (512MB)')\n    }\n    const data = new TextDecoder('utf8', { fatal: true }).decode(buffer)\n    const lines = data.split(/\\n|\\r\\n|\\r/)\n    const headerLines = []\n    for (let i = 0; i < lines.length && lines[i].startsWith('#'); i++) {\n      headerLines.push(lines[i])\n    }\n    const header = headerLines.join('\\n')\n\n    const feats = gff.parseStringSync(data, {\n      parseFeatures: true,\n      parseComments: false,\n      parseDirectives: false,\n      parseSequences: false,\n      disableDerivesFromReferences: true,\n    })\n\n    const intervalTree = feats\n      .flat()\n      .map(\n        (f, i) =>\n          new SimpleFeature({\n            data: this.featureData(f),\n            id: `${this.id}-offset-${i}`,\n          }),\n      )\n      .reduce((acc, obj) => {\n        const key = obj.get('refName')\n        if (!acc[key]) {\n          acc[key] = new IntervalTree()\n        }\n        acc[key].insert([obj.get('start'), obj.get('end')], obj)\n        return acc\n      }, {} as Record<string, IntervalTree>)\n\n    return { header, intervalTree }\n  }\n\n  private async loadData() {\n    if (!this.gffFeatures) {\n      this.gffFeatures = this.loadDataP().catch(e => {\n        this.gffFeatures = undefined\n        throw e\n      })\n    }\n\n    return this.gffFeatures\n  }\n\n  public async getRefNames(opts: BaseOptions = {}) {\n    const { intervalTree } = await this.loadData()\n    return Object.keys(intervalTree)\n  }\n\n  public async getHeader() {\n    const { header } = await this.loadData()\n    return header\n  }\n\n  public getFeatures(query: NoAssemblyRegion, opts: BaseOptions = {}) {\n    return ObservableCreate<Feature>(async observer => {\n      try {\n        const { start, end, refName } = query\n        const { intervalTree } = await this.loadData()\n        intervalTree[refName]\n          ?.search([start, end])\n          .forEach(f => observer.next(f))\n        observer.complete()\n      } catch (e) {\n        observer.error(e)\n      }\n    }, opts.signal)\n  }\n\n  private featureData(data: GFF3FeatureLineWithRefs) {\n    const f: Record<string, unknown> = { ...data }\n    ;(f.start as number) -= 1 // convert to interbase\n    if (data.strand === '+') {\n      f.strand = 1\n    } else if (data.strand === '-') {\n      f.strand = -1\n    } else if (data.strand === '.') {\n      f.strand = 0\n    } else {\n      f.strand = undefined\n    }\n    f.phase = Number(data.phase)\n    f.refName = data.seq_id\n    if (data.score === null) {\n      delete f.score\n    }\n    if (data.phase === null) {\n      delete f.score\n    }\n    const defaultFields = [\n      'start',\n      'end',\n      'seq_id',\n      'score',\n      'type',\n      'source',\n      'phase',\n      'strand',\n    ]\n    const dataAttributes = data.attributes || {}\n    Object.keys(dataAttributes).forEach(a => {\n      let b = a.toLowerCase()\n      if (defaultFields.includes(b)) {\n        // add \"suffix\" to tag name if it already exists\n        // reproduces behavior of NCList\n        b += '2'\n      }\n      if (dataAttributes[a] !== null) {\n        let attr: string | string[] | undefined = dataAttributes[a]\n        if (Array.isArray(attr) && attr.length === 1) {\n          ;[attr] = attr\n        }\n        f[b] = attr\n      }\n    })\n    f.refName = f.seq_id\n\n    // the SimpleFeature constructor takes care of recursively inflating subfeatures\n    if (data.child_features && data.child_features.length) {\n      f.subfeatures = data.child_features\n        .map(childLocs => childLocs.map(childLoc => this.featureData(childLoc)))\n        .flat()\n    }\n\n    delete f.child_features\n    delete f.data\n    // delete f.derived_features\n    delete f.attributes\n    delete f.seq_id\n    return f\n  }\n\n  public freeResources(/* { region } */) {}\n}\n"],"names":["isGzip","buf","_default","_BaseFeatureDataAdapt","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","gffFeatures","_createClass","key","value","_loadDataP","_asyncToGenerator","_regeneratorRuntime","mark","_callee","pm","buffer","data","lines","headerLines","i","header","feats","intervalTree","_this2","wrap","_context","prev","next","this","pluginManager","openLocation","getConf","readFile","sent","unzip","t0","Error","TextDecoder","fatal","decode","split","startsWith","push","join","gff","parseFeatures","parseComments","parseDirectives","parseSequences","disableDerivesFromReferences","flat","map","f","SimpleFeature","featureData","id","reduce","acc","obj","get","IntervalTree","insert","abrupt","stop","_loadData","_callee2","_this3","_context2","loadDataP","catch","e","undefined","_getRefNames","_callee3","_yield$this$loadData","_args3","_context3","loadData","Object","keys","_getHeader","_callee4","_yield$this$loadData2","_context4","query","_this4","opts","ObservableCreate","_ref","_callee5","observer","_intervalTree$refName","start","end","refName","_yield$_this4$loadDat","_context5","search","forEach","complete","error","_x","signal","_this5","_objectSpread","strand","phase","Number","seq_id","score","defaultFields","dataAttributes","attributes","a","b","toLowerCase","includes","attr","isArray","_attr","_slicedToArray","child_features","subfeatures","childLocs","childLoc","BaseFeatureDataAdapter"],"sourceRoot":""}