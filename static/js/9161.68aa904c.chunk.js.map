{"version":3,"file":"static/js/9161.68aa904c.chunk.js","mappings":"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","sources":["NewSessionCards.tsx","RecentSessionCard.js","StartScreen.tsx","../../../node_modules/@material-ui/icons/Warning.js"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  Card,\n  CardMedia,\n  Container,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\n\nimport emptyIcon from './img/emptyIcon.png'\nimport linearGenomeViewIcon from './img/linearGenomeViewIcon.png'\nimport svInspectorIcon from './img/svInspectorIcon.png'\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    width: 200,\n    height: 150,\n    cursor: 'pointer',\n  },\n  name: {\n    marginTop: theme.spacing(),\n    textAlign: 'center',\n    maxWidth: 200,\n  },\n  media: {\n    height: 150,\n  },\n}))\n\nconst emptySessionSnapshot = {\n  name: `New session ${new Date().toLocaleString()}`,\n  connections: {},\n}\n\nfunction NewSessionCard({\n  name,\n  onClick = () => {},\n  image,\n}: {\n  name: string\n  onClick: () => void\n  image?: string\n}) {\n  const classes = useStyles()\n  const [hovered, setHovered] = useState(false)\n  return (\n    <Container>\n      <Card\n        className={classes.card}\n        onMouseOver={() => setHovered(true)}\n        onMouseOut={() => setHovered(false)}\n        onClick={onClick}\n        raised={Boolean(hovered)}\n      >\n        <CardMedia className={classes.media} image={image} />\n      </Card>\n      <Typography\n        variant=\"subtitle2\"\n        className={classes.name}\n        style={{ cursor: 'pointer' }}\n        onClick={onClick}\n      >\n        {name}\n      </Typography>\n    </Container>\n  )\n}\n\ninterface RootModel {\n  setSession: Function\n}\n\nexport function NewEmptySession({ rootModel }: { rootModel: RootModel }) {\n  return (\n    <NewSessionCard\n      name=\"Empty\"\n      image={emptyIcon}\n      onClick={() => {\n        rootModel.setSession(emptySessionSnapshot)\n      }}\n    />\n  )\n}\n\nexport function NewLinearGenomeViewSession({\n  rootModel,\n}: {\n  rootModel: RootModel\n}) {\n  return (\n    <NewSessionCard\n      name=\"Linear Genome View\"\n      image={linearGenomeViewIcon}\n      onClick={() => {\n        rootModel.setSession({\n          ...emptySessionSnapshot,\n          name: `New session ${new Date().toLocaleString()}`,\n          views: [{ type: 'LinearGenomeView' }],\n        })\n      }}\n    />\n  )\n}\n\nexport function NewSVInspectorSession({ rootModel }: { rootModel: RootModel }) {\n  return (\n    <NewSessionCard\n      name=\"Structural Variant Inspector\"\n      image={svInspectorIcon}\n      onClick={() => {\n        rootModel.setSession({\n          ...emptySessionSnapshot,\n          name: `New session ${new Date().toLocaleString()}`,\n          views: [{ type: 'SvInspectorView' }],\n        })\n      }}\n    />\n  )\n}\n","import IconButton from '@material-ui/core/IconButton'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\nimport { ListItem } from '@material-ui/core'\n\nimport PropTypes from 'prop-types'\nimport React, { useState } from 'react'\n\nconst useStyles = makeStyles({\n  menu: {\n    left: '65%',\n  },\n})\n\nfunction RecentSessionCard({ sessionName, onClick, onDelete }) {\n  const classes = useStyles()\n  const [hovered, setHovered] = useState(false)\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null)\n\n  function onMenuClick(event) {\n    event.stopPropagation()\n    setMenuAnchorEl(event.currentTarget)\n  }\n\n  const handleMenuClose = action => {\n    setMenuAnchorEl(null)\n    if (action === 'delete') {\n      return onDelete(sessionName)\n    }\n    return undefined\n  }\n\n  return (\n    <>\n      <ListItem\n        onMouseOver={() => setHovered(true)}\n        onMouseOut={() => setHovered(false)}\n        onClick={() => onClick(sessionName)}\n        raised={Boolean(hovered)}\n        button\n      >\n        <Tooltip title={sessionName} enterDelay={300}>\n          <Typography variant=\"body2\" noWrap style={{ width: 250 }}>\n            {sessionName}\n          </Typography>\n        </Tooltip>\n        <IconButton className={classes.menu} onClick={onMenuClick}>\n          <MoreVertIcon color=\"secondary\" />\n        </IconButton>\n      </ListItem>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={menuAnchorEl}\n        keepMounted\n        open={Boolean(menuAnchorEl)}\n        onClose={handleMenuClose}\n      >\n        <MenuItem onClick={() => handleMenuClose('delete')}>\n          <ListItemIcon>\n            <DeleteIcon color=\"secondary\" />\n          </ListItemIcon>\n          <Typography variant=\"inherit\">Delete</Typography>\n        </MenuItem>\n      </Menu>\n    </>\n  )\n}\n\nRecentSessionCard.propTypes = {\n  sessionName: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n}\n\nexport default RecentSessionCard\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useEffect, useState } from 'react'\nimport {\n  Button,\n  CircularProgress,\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n  IconButton,\n  List,\n  ListItemIcon,\n  ListSubheader,\n  Menu,\n  MenuItem,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport WarningIcon from '@material-ui/icons/Warning'\nimport SettingsIcon from '@material-ui/icons/Settings'\n\nimport { LogoFull, FactoryResetDialog } from '@jbrowse/core/ui'\nimport {\n  NewEmptySession,\n  NewLinearGenomeViewSession,\n  NewSVInspectorSession,\n} from './NewSessionCards'\nimport RecentSessionCard from './RecentSessionCard'\n\nconst useStyles = makeStyles(theme => ({\n  newSession: {\n    backgroundColor: theme.palette.grey['300'],\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(6),\n  },\n  header: {\n    margin: theme.spacing(2),\n  },\n  settings: {\n    float: 'right',\n  },\n}))\n\nconst DeleteSessionDialog = ({\n  sessionToDelete,\n  onClose,\n  rootModel,\n}: {\n  sessionToDelete?: string\n  onClose: (_arg0: boolean) => void\n  rootModel: any\n}) => {\n  const [deleteSession, setDeleteSession] = useState(false)\n  useEffect(() => {\n    ;(async () => {\n      try {\n        if (deleteSession) {\n          setDeleteSession(false)\n          rootModel.removeSavedSession({ name: sessionToDelete })\n          onClose(true)\n        }\n      } catch (e) {\n        setDeleteSession(() => {\n          throw e\n        })\n      }\n    })()\n  }, [deleteSession, onClose, rootModel, sessionToDelete])\n\n  return (\n    <Dialog open={!!sessionToDelete} onClose={() => onClose(false)}>\n      <DialogTitle id=\"alert-dialog-title\">\n        {`Delete session \"${sessionToDelete}\"?`}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          This action cannot be undone\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => onClose(false)} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={() => setDeleteSession(true)}\n          color=\"primary\"\n          variant=\"contained\"\n          autoFocus\n        >\n          Delete\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default function StartScreen({\n  rootModel,\n  onFactoryReset,\n}: {\n  rootModel: any\n  onFactoryReset: Function\n}) {\n  const classes = useStyles()\n\n  const [sessions, setSessions] = useState<Record<string, any>>()\n  const [sessionToDelete, setSessionToDelete] = useState<string>()\n  const [sessionToLoad, setSessionToLoad] = useState<string>()\n  const [updateSessionsList, setUpdateSessionsList] = useState(true)\n  const [menuAnchorEl, setMenuAnchorEl] = useState<null | HTMLElement>(null)\n  const [reset, setReset] = useState(false)\n\n  const sessionNames = sessions !== undefined ? sessions : []\n  useEffect(() => {\n    ;(async () => {\n      try {\n        if (sessionToLoad) {\n          rootModel.activateSession(sessionToLoad)\n        }\n      } catch (e) {\n        setSessions(() => {\n          throw e\n        })\n      }\n    })()\n  }, [rootModel, sessionToLoad])\n\n  useEffect(() => {\n    ;(async () => {\n      try {\n        if (updateSessionsList) {\n          setUpdateSessionsList(false)\n          const savedRootSessions = rootModel.savedSessions.map(\n            (rootSavedSession: any) => {\n              return JSON.parse(JSON.stringify(rootSavedSession))?.name\n            },\n          )\n          setSessions(savedRootSessions)\n        }\n      } catch (e) {\n        setSessions(() => {\n          throw e\n        })\n      }\n    })()\n  }, [rootModel.savedSessions, updateSessionsList])\n\n  if (!sessions) {\n    return (\n      <CircularProgress\n        style={{\n          position: 'fixed',\n          top: '50%',\n          left: '50%',\n          marginTop: -25,\n          marginLeft: -25,\n        }}\n        size={50}\n      />\n    )\n  }\n\n  return (\n    <>\n      <FactoryResetDialog\n        open={reset}\n        onFactoryReset={onFactoryReset}\n        onClose={() => {\n          setReset(false)\n        }}\n      />\n      <DeleteSessionDialog\n        rootModel={rootModel}\n        sessionToDelete={sessionToDelete}\n        onClose={update => {\n          setSessionToDelete(undefined)\n          setUpdateSessionsList(update)\n        }}\n      />\n      <IconButton\n        className={classes.settings}\n        onClick={event => {\n          event.stopPropagation()\n          setMenuAnchorEl(event.currentTarget)\n        }}\n      >\n        <SettingsIcon />\n      </IconButton>\n      <Container maxWidth=\"md\">\n        <LogoFull />\n        <div className={classes.newSession}>\n          <Typography variant=\"h5\" className={classes.header}>\n            Start a new session\n          </Typography>\n          <Grid container spacing={4}>\n            <Grid item>\n              <NewEmptySession rootModel={rootModel} />\n            </Grid>\n            <Grid item>\n              <NewLinearGenomeViewSession rootModel={rootModel} />\n            </Grid>\n            <Grid item>\n              <NewSVInspectorSession rootModel={rootModel} />\n            </Grid>\n          </Grid>\n        </div>\n        <div>\n          <Typography variant=\"h5\" className={classes.header}>\n            Recent sessions\n          </Typography>\n          <List\n            style={{\n              overflow: 'auto',\n              maxHeight: 200,\n            }}\n          >\n            {sessionNames?.map((sessionName: string) => (\n              <RecentSessionCard\n                key={sessionName}\n                sessionName={sessionName}\n                onClick={() => setSessionToLoad(sessionName)}\n                onDelete={() => setSessionToDelete(sessionName)}\n              />\n            ))}\n          </List>\n        </div>\n      </Container>\n\n      <Menu\n        anchorEl={menuAnchorEl}\n        keepMounted\n        open={Boolean(menuAnchorEl)}\n        onClose={() => {\n          setMenuAnchorEl(null)\n        }}\n      >\n        <ListSubheader>Advanced Settings</ListSubheader>\n        <MenuItem\n          onClick={() => {\n            setReset(true)\n            setMenuAnchorEl(null)\n          }}\n        >\n          <ListItemIcon>\n            <WarningIcon />\n          </ListItemIcon>\n          <Typography variant=\"inherit\">Reset</Typography>\n        </MenuItem>\n      </Menu>\n    </>\n  )\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"\n}), 'Warning');\n\nexports.default = _default;"],"names":["useStyles","makeStyles","theme","card","width","height","cursor","name","marginTop","spacing","textAlign","maxWidth","media","emptySessionSnapshot","Date","toLocaleString","connections","NewSessionCard","onClick","image","classes","useState","hovered","setHovered","Container","Card","className","onMouseOver","onMouseOut","raised","Boolean","CardMedia","Typography","variant","style","NewEmptySession","rootModel","emptyIcon","setSession","NewLinearGenomeViewSession","linearGenomeViewIcon","views","type","NewSVInspectorSession","svInspectorIcon","menu","left","sessionName","onDelete","menuAnchorEl","setMenuAnchorEl","handleMenuClose","action","ListItem","button","Tooltip","title","enterDelay","noWrap","IconButton","event","stopPropagation","currentTarget","MoreVert","color","Menu","id","anchorEl","keepMounted","open","onClose","MenuItem","ListItemIcon","Delete","newSession","backgroundColor","palette","grey","padding","header","margin","settings","float","DeleteSessionDialog","sessionToDelete","deleteSession","setDeleteSession","useEffect","removeSavedSession","e","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","StartScreen","onFactoryReset","sessions","setSessions","setSessionToDelete","sessionToLoad","setSessionToLoad","updateSessionsList","setUpdateSessionsList","reset","setReset","sessionNames","undefined","activateSession","savedRootSessions","savedSessions","map","rootSavedSession","JSON","parse","stringify","FactoryResetDialog","update","Settings","LogoFull","Grid","container","item","List","overflow","maxHeight","ListSubheader","Warning","CircularProgress","position","top","marginLeft","size","_interopRequireDefault","require","_interopRequireWildcard","exports","React","_default","default","createElement","d"],"sourceRoot":""}