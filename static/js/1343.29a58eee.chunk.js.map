{"version":3,"file":"static/js/1343.29a58eee.chunk.js","mappings":"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","sources":["../../../node_modules/@gmod/bam/src/virtualOffset.ts","../../../node_modules/@gmod/bam/src/chunk.ts","../../../node_modules/@gmod/bam/src/indexFile.ts","../../../node_modules/@gmod/bam/src/util.ts","../../../node_modules/@gmod/bam/src/bai.ts","../../../node_modules/@gmod/bam/src/csi.ts","../../../node_modules/@gmod/bam/src/constants.ts","../../../node_modules/@gmod/bam/src/record.ts","../../../node_modules/@gmod/bam/src/sam.ts","../../../node_modules/@gmod/bam/src/bamFile.ts","../../../node_modules/@gmod/bam/src/htsget.ts","../../../node_modules/@gmod/bam/node_modules/quick-lru/index.js","../../../node_modules/abortable-promise-cache/esm/AbortablePromiseCache.js","../../../node_modules/abortable-promise-cache/esm/AggregateAbortController.js","../../../node_modules/abortable-promise-cache/esm/AggregateStatusReporter.js","../../../node_modules/abortable-promise-cache/esm/abortcontroller-ponyfill.js","../../../node_modules/abortable-promise-cache/esm/index.js","../../../node_modules/cross-fetch/dist/browser-polyfill.js","../../../node_modules/@babel/runtime/helpers/esm/OverloadYield.js","../../../node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js","../../../node_modules/@babel/runtime/helpers/esm/asyncIterator.js","../../../node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js","../../../node_modules/@babel/runtime/helpers/esm/AsyncGenerator.js","../../../node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js"],"sourcesContent":["export default class VirtualOffset {\n  public blockPosition: number\n  public dataPosition: number\n  constructor(blockPosition: number, dataPosition: number) {\n    this.blockPosition = blockPosition // < offset of the compressed data block\n    this.dataPosition = dataPosition // < offset into the uncompressed data\n  }\n\n  toString() {\n    return `${this.blockPosition}:${this.dataPosition}`\n  }\n\n  compareTo(b: VirtualOffset) {\n    return (\n      this.blockPosition - b.blockPosition || this.dataPosition - b.dataPosition\n    )\n  }\n\n  static min(...args: VirtualOffset[]) {\n    let min\n    let i = 0\n    for (; !min; i += 1) {\n      min = args[i]\n    }\n    for (; i < args.length; i += 1) {\n      if (min.compareTo(args[i]) > 0) {\n        min = args[i]\n      }\n    }\n    return min\n  }\n}\nexport function fromBytes(bytes: Buffer, offset = 0, bigendian = false) {\n  if (bigendian) {\n    throw new Error('big-endian virtual file offsets not implemented')\n  }\n\n  return new VirtualOffset(\n    bytes[offset + 7] * 0x10000000000 +\n      bytes[offset + 6] * 0x100000000 +\n      bytes[offset + 5] * 0x1000000 +\n      bytes[offset + 4] * 0x10000 +\n      bytes[offset + 3] * 0x100 +\n      bytes[offset + 2],\n    (bytes[offset + 1] << 8) | bytes[offset],\n  )\n}\n","import VirtualOffset from './virtualOffset'\n\n// little class representing a chunk in the index\nexport default class Chunk {\n  public minv: VirtualOffset\n  public maxv: VirtualOffset\n  public bin: number\n  public _fetchedSize?: number\n\n  /**\n   * @param {VirtualOffset} minv\n   * @param {VirtualOffset} maxv\n   * @param {number} bin\n   * @param {number} [fetchedSize]\n   */\n  constructor(\n    minv: VirtualOffset,\n    maxv: VirtualOffset,\n    bin: number,\n    fetchedSize = undefined,\n  ) {\n    this.minv = minv\n    this.maxv = maxv\n    this.bin = bin\n    this._fetchedSize = fetchedSize\n  }\n\n  toUniqueString() {\n    return `${this.minv}..${this.maxv} (bin ${\n      this.bin\n    }, fetchedSize ${this.fetchedSize()})`\n  }\n\n  toString() {\n    return this.toUniqueString()\n  }\n\n  compareTo(b: Chunk) {\n    return (\n      this.minv.compareTo(b.minv) ||\n      this.maxv.compareTo(b.maxv) ||\n      this.bin - b.bin\n    )\n  }\n\n  fetchedSize() {\n    if (this._fetchedSize !== undefined) {\n      return this._fetchedSize\n    }\n    return this.maxv.blockPosition + (1 << 16) - this.minv.blockPosition\n  }\n}\n","import { GenericFilehandle } from 'generic-filehandle'\nimport VirtualOffset from './virtualOffset'\nimport Chunk from './chunk'\nimport { BaseOpts } from './util'\n\nexport default abstract class IndexFile {\n  public filehandle: GenericFilehandle\n  public renameRefSeq: (s: string) => string\n  public setupP?: Promise<any>\n\n  /**\n   * @param {filehandle} filehandle\n   * @param {function} [renameRefSeqs]\n   */\n  constructor({\n    filehandle,\n    renameRefSeq = (n: string) => n,\n  }: {\n    filehandle: GenericFilehandle\n    renameRefSeq?: (a: string) => string\n  }) {\n    this.filehandle = filehandle\n    this.renameRefSeq = renameRefSeq\n  }\n  public abstract lineCount(refId: number): Promise<number>\n  protected abstract _parse(opts?: BaseOpts): Promise<any>\n  public abstract indexCov(\n    refId: number,\n    start?: number,\n    end?: number,\n  ): Promise<{ start: number; end: number; score: number }[]>\n\n  public abstract blocksForRange(\n    chrId: number,\n    start: number,\n    end: number,\n    opts?: BaseOpts,\n  ): Promise<Chunk[]>\n\n  _findFirstData(data: any, virtualOffset: VirtualOffset) {\n    const currentFdl = data.firstDataLine\n    if (currentFdl) {\n      data.firstDataLine =\n        currentFdl.compareTo(virtualOffset) > 0 ? virtualOffset : currentFdl\n    } else {\n      data.firstDataLine = virtualOffset\n    }\n  }\n\n  async parse(opts: BaseOpts = {}) {\n    if (!this.setupP) {\n      this.setupP = this._parse(opts).catch(e => {\n        this.setupP = undefined\n        throw e\n      })\n    }\n    return this.setupP\n  }\n\n  async hasRefSeq(seqId: number, opts: BaseOpts = {}) {\n    return !!((await this.parse(opts)).indices[seqId] || {}).binIndex\n  }\n}\n","import Chunk from './chunk'\nimport VirtualOffset from './virtualOffset'\n\nexport function timeout(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n\nexport function longToNumber(long: Long) {\n  if (\n    long.greaterThan(Number.MAX_SAFE_INTEGER) ||\n    long.lessThan(Number.MIN_SAFE_INTEGER)\n  ) {\n    throw new Error('integer overflow')\n  }\n  return long.toNumber()\n}\n\n/**\n * Properly check if the given AbortSignal is aborted.\n * Per the standard, if the signal reads as aborted,\n * this function throws either a DOMException AbortError, or a regular error\n * with a `code` attribute set to `ERR_ABORTED`.\n *\n * For convenience, passing `undefined` is a no-op\n *\n * @param {AbortSignal} [signal] an AbortSignal, or anything with an `aborted` attribute\n * @returns nothing\n */\nexport function checkAbortSignal(signal?: AbortSignal) {\n  if (!signal) {\n    return\n  }\n\n  if (signal.aborted) {\n    // console.log('bam aborted!')\n    if (typeof DOMException !== 'undefined') {\n      throw new DOMException('aborted', 'AbortError')\n    } else {\n      const e = new Error('aborted')\n      //@ts-ignore\n      e.code = 'ERR_ABORTED'\n      throw e\n    }\n  }\n}\n\n/**\n * Skips to the next tick, then runs `checkAbortSignal`.\n * Await this to inside an otherwise synchronous loop to\n * provide a place to break when an abort signal is received.\n * @param {AbortSignal} signal\n */\nexport async function abortBreakPoint(signal?: AbortSignal) {\n  await Promise.resolve()\n  checkAbortSignal(signal)\n}\n\nexport function canMergeBlocks(chunk1: Chunk, chunk2: Chunk) {\n  return (\n    chunk2.minv.blockPosition - chunk1.maxv.blockPosition < 65000 &&\n    chunk2.maxv.blockPosition - chunk1.minv.blockPosition < 5000000\n  )\n}\n\nexport interface BamOpts {\n  viewAsPairs?: boolean\n  pairAcrossChr?: boolean\n  maxInsertSize?: number\n  signal?: AbortSignal\n}\n\nexport interface BaseOpts {\n  signal?: AbortSignal\n}\n\nexport function makeOpts(obj: AbortSignal | BaseOpts = {}): BaseOpts {\n  return 'aborted' in obj ? ({ signal: obj } as BaseOpts) : (obj as BaseOpts)\n}\n\nexport function optimizeChunks(chunks: Chunk[], lowest: VirtualOffset) {\n  const mergedChunks: Chunk[] = []\n  let lastChunk: Chunk | null = null\n\n  if (chunks.length === 0) {\n    return chunks\n  }\n\n  chunks.sort((c0, c1) => {\n    const dif = c0.minv.blockPosition - c1.minv.blockPosition\n    if (dif !== 0) {\n      return dif\n    } else {\n      return c0.minv.dataPosition - c1.minv.dataPosition\n    }\n  })\n\n  chunks.forEach(chunk => {\n    if (!lowest || chunk.maxv.compareTo(lowest) > 0) {\n      if (lastChunk === null) {\n        mergedChunks.push(chunk)\n        lastChunk = chunk\n      } else {\n        if (canMergeBlocks(lastChunk, chunk)) {\n          if (chunk.maxv.compareTo(lastChunk.maxv) > 0) {\n            lastChunk.maxv = chunk.maxv\n          }\n        } else {\n          mergedChunks.push(chunk)\n          lastChunk = chunk\n        }\n      }\n    }\n  })\n\n  return mergedChunks\n}\n","import Long from 'long'\nimport { fromBytes } from './virtualOffset'\nimport Chunk from './chunk'\n\nimport IndexFile from './indexFile'\nimport { longToNumber, optimizeChunks, BaseOpts } from './util'\n\nconst BAI_MAGIC = 21578050 // BAI\\1\n\nfunction roundDown(n: number, multiple: number) {\n  return n - (n % multiple)\n}\nfunction roundUp(n: number, multiple: number) {\n  return n - (n % multiple) + multiple\n}\n\nexport default class BAI extends IndexFile {\n  baiP?: Promise<Buffer>\n\n  parsePseudoBin(bytes: Buffer, offset: number) {\n    const lineCount = longToNumber(\n      Long.fromBytesLE(\n        Array.prototype.slice.call(bytes, offset + 16, offset + 24),\n        true,\n      ),\n    )\n    return { lineCount }\n  }\n\n  async lineCount(refId: number, opts: BaseOpts = {}) {\n    const prom = await this.parse(opts)\n    const index = prom.indices[refId]\n    if (!index) {\n      return -1\n    }\n    const ret = index.stats || {}\n    return ret.lineCount === undefined ? -1 : ret.lineCount\n  }\n\n  fetchBai(opts: BaseOpts = {}) {\n    if (!this.baiP) {\n      this.baiP = this.filehandle.readFile(opts).catch(e => {\n        this.baiP = undefined\n        throw e\n      }) as Promise<Buffer>\n    }\n    return this.baiP\n  }\n\n  // fetch and parse the index\n  async _parse() {\n    const data: { [key: string]: any } = { bai: true, maxBlockSize: 1 << 16 }\n    const bytes = await this.fetchBai()\n\n    // check BAI magic numbers\n    if (bytes.readUInt32LE(0) !== BAI_MAGIC) {\n      throw new Error('Not a BAI file')\n    }\n\n    data.refCount = bytes.readInt32LE(4)\n    const depth = 5\n    const binLimit = ((1 << ((depth + 1) * 3)) - 1) / 7\n\n    // read the indexes for each reference sequence\n    data.indices = new Array(data.refCount)\n    let currOffset = 8\n    for (let i = 0; i < data.refCount; i += 1) {\n      // the binning index\n      const binCount = bytes.readInt32LE(currOffset)\n      let stats\n\n      currOffset += 4\n      const binIndex: { [key: number]: Chunk[] } = {}\n      for (let j = 0; j < binCount; j += 1) {\n        const bin = bytes.readUInt32LE(currOffset)\n        currOffset += 4\n        if (bin === binLimit + 1) {\n          currOffset += 4\n          stats = this.parsePseudoBin(bytes, currOffset)\n          currOffset += 32\n        } else if (bin > binLimit + 1) {\n          throw new Error('bai index contains too many bins, please use CSI')\n        } else {\n          const chunkCount = bytes.readInt32LE(currOffset)\n          currOffset += 4\n          const chunks = new Array(chunkCount)\n          for (let k = 0; k < chunkCount; k += 1) {\n            const u = fromBytes(bytes, currOffset)\n            const v = fromBytes(bytes, currOffset + 8)\n            currOffset += 16\n            this._findFirstData(data, u)\n            chunks[k] = new Chunk(u, v, bin)\n          }\n          binIndex[bin] = chunks\n        }\n      }\n\n      const linearCount = bytes.readInt32LE(currOffset)\n      currOffset += 4\n      // as we're going through the linear index, figure out\n      // the smallest virtual offset in the indexes, which\n      // tells us where the BAM header ends\n      const linearIndex = new Array(linearCount)\n      for (let k = 0; k < linearCount; k += 1) {\n        linearIndex[k] = fromBytes(bytes, currOffset)\n        currOffset += 8\n        this._findFirstData(data, linearIndex[k])\n      }\n\n      data.indices[i] = { binIndex, linearIndex, stats }\n    }\n\n    return data\n  }\n\n  async indexCov(\n    seqId: number,\n    start?: number,\n    end?: number,\n    opts: BaseOpts = {},\n  ): Promise<{ start: number; end: number; score: number }[]> {\n    const v = 16384\n    const range = start !== undefined\n    const indexData = await this.parse(opts)\n    const seqIdx = indexData.indices[seqId]\n    if (!seqIdx) {\n      return []\n    }\n    const { linearIndex = [], stats } = seqIdx\n    if (!linearIndex.length) {\n      return []\n    }\n    const e = end !== undefined ? roundUp(end, v) : (linearIndex.length - 1) * v\n    const s = start !== undefined ? roundDown(start, v) : 0\n    let depths\n    if (range) {\n      depths = new Array((e - s) / v)\n    } else {\n      depths = new Array(linearIndex.length - 1)\n    }\n    const totalSize = linearIndex[linearIndex.length - 1].blockPosition\n    if (e > (linearIndex.length - 1) * v) {\n      throw new Error('query outside of range of linear index')\n    }\n    let currentPos = linearIndex[s / v].blockPosition\n    for (let i = s / v, j = 0; i < e / v; i++, j++) {\n      depths[j] = {\n        score: linearIndex[i + 1].blockPosition - currentPos,\n        start: i * v,\n        end: i * v + v,\n      }\n      currentPos = linearIndex[i + 1].blockPosition\n    }\n    return depths.map(d => {\n      return { ...d, score: (d.score * stats.lineCount) / totalSize }\n    })\n  }\n\n  /**\n   * calculate the list of bins that may overlap with region [beg,end) (zero-based half-open)\n   * @returns {Array[number]}\n   */\n  reg2bins(beg: number, end: number) {\n    end -= 1\n    return [\n      [0, 0],\n      [1 + (beg >> 26), 1 + (end >> 26)],\n      [9 + (beg >> 23), 9 + (end >> 23)],\n      [73 + (beg >> 20), 73 + (end >> 20)],\n      [585 + (beg >> 17), 585 + (end >> 17)],\n      [4681 + (beg >> 14), 4681 + (end >> 14)],\n    ]\n  }\n\n  async blocksForRange(\n    refId: number,\n    min: number,\n    max: number,\n    opts: BaseOpts = {},\n  ) {\n    if (min < 0) {\n      min = 0\n    }\n\n    const indexData = await this.parse(opts)\n    if (!indexData) {\n      return []\n    }\n    const ba = indexData.indices[refId]\n    if (!ba) {\n      return []\n    }\n\n    // List of bin #s that overlap min, max\n    const overlappingBins = this.reg2bins(min, max)\n    const chunks: Chunk[] = []\n\n    // Find chunks in overlapping bins.  Leaf bins (< 4681) are not pruned\n    for (const [start, end] of overlappingBins) {\n      for (let bin = start; bin <= end; bin++) {\n        if (ba.binIndex[bin]) {\n          const binChunks = ba.binIndex[bin]\n          for (let c = 0; c < binChunks.length; ++c) {\n            chunks.push(new Chunk(binChunks[c].minv, binChunks[c].maxv, bin))\n          }\n        }\n      }\n    }\n\n    // Use the linear index to find minimum file position of chunks that could\n    // contain alignments in the region\n    const nintv = ba.linearIndex.length\n    let lowest = null\n    const minLin = Math.min(min >> 14, nintv - 1)\n    const maxLin = Math.min(max >> 14, nintv - 1)\n    for (let i = minLin; i <= maxLin; ++i) {\n      const vp = ba.linearIndex[i]\n      if (vp) {\n        if (!lowest || vp.compareTo(lowest) < 0) {\n          lowest = vp\n        }\n      }\n    }\n\n    return optimizeChunks(chunks, lowest)\n  }\n}\n","import Long from 'long'\nimport { unzip } from '@gmod/bgzf-filehandle'\nimport VirtualOffset, { fromBytes } from './virtualOffset'\nimport Chunk from './chunk'\nimport { longToNumber, abortBreakPoint, optimizeChunks, BaseOpts } from './util'\n\nimport IndexFile from './indexFile'\n\nconst CSI1_MAGIC = 21582659 // CSI\\1\nconst CSI2_MAGIC = 38359875 // CSI\\2\n\nfunction lshift(num: number, bits: number) {\n  return num * 2 ** bits\n}\nfunction rshift(num: number, bits: number) {\n  return Math.floor(num / 2 ** bits)\n}\n\nexport default class CSI extends IndexFile {\n  private maxBinNumber: number\n  private depth: number\n  private minShift: number\n  constructor(args: any) {\n    super(args)\n    this.maxBinNumber = 0\n    this.depth = 0\n    this.minShift = 0\n  }\n  async lineCount(refId: number): Promise<number> {\n    const indexData = await this.parse()\n    if (!indexData) {\n      return -1\n    }\n    const idx = indexData.indices[refId]\n    if (!idx) {\n      return -1\n    }\n    const { stats } = indexData.indices[refId]\n    if (stats) {\n      return stats.lineCount\n    }\n    return -1\n  }\n\n  async indexCov() {\n    return []\n  }\n\n  parseAuxData(bytes: Buffer, offset: number, auxLength: number) {\n    if (auxLength < 30) {\n      return {}\n    }\n\n    const data: { [key: string]: any } = {}\n    data.formatFlags = bytes.readInt32LE(offset)\n    data.coordinateType =\n      data.formatFlags & 0x10000 ? 'zero-based-half-open' : '1-based-closed'\n    data.format = (\n      { 0: 'generic', 1: 'SAM', 2: 'VCF' } as {\n        [key: number]: string\n      }\n    )[data.formatFlags & 0xf]\n    if (!data.format) {\n      throw new Error(`invalid Tabix preset format flags ${data.formatFlags}`)\n    }\n    data.columnNumbers = {\n      ref: bytes.readInt32LE(offset + 4),\n      start: bytes.readInt32LE(offset + 8),\n      end: bytes.readInt32LE(offset + 12),\n    }\n    data.metaValue = bytes.readInt32LE(offset + 16)\n    data.metaChar = data.metaValue ? String.fromCharCode(data.metaValue) : ''\n    data.skipLines = bytes.readInt32LE(offset + 20)\n    const nameSectionLength = bytes.readInt32LE(offset + 24)\n\n    Object.assign(\n      data,\n      this._parseNameBytes(\n        bytes.subarray(offset + 28, offset + 28 + nameSectionLength),\n      ),\n    )\n    return data\n  }\n\n  _parseNameBytes(namesBytes: Buffer) {\n    let currRefId = 0\n    let currNameStart = 0\n    const refIdToName = []\n    const refNameToId: { [key: string]: number } = {}\n    for (let i = 0; i < namesBytes.length; i += 1) {\n      if (!namesBytes[i]) {\n        if (currNameStart < i) {\n          let refName = namesBytes.toString('utf8', currNameStart, i)\n          refName = this.renameRefSeq(refName)\n          refIdToName[currRefId] = refName\n          refNameToId[refName] = currRefId\n        }\n        currNameStart = i + 1\n        currRefId += 1\n      }\n    }\n    return { refNameToId, refIdToName }\n  }\n\n  // fetch and parse the index\n  async _parse(opts: { signal?: AbortSignal }) {\n    const data: { [key: string]: any } = { csi: true, maxBlockSize: 1 << 16 }\n    const buffer = (await this.filehandle.readFile(opts)) as Buffer\n    const bytes = await unzip(buffer)\n\n    // check TBI magic numbers\n    if (bytes.readUInt32LE(0) === CSI1_MAGIC) {\n      data.csiVersion = 1\n    } else if (bytes.readUInt32LE(0) === CSI2_MAGIC) {\n      data.csiVersion = 2\n    } else {\n      throw new Error('Not a CSI file')\n      // TODO: do we need to support big-endian CSI files?\n    }\n\n    this.minShift = bytes.readInt32LE(4)\n    this.depth = bytes.readInt32LE(8)\n    this.maxBinNumber = ((1 << ((this.depth + 1) * 3)) - 1) / 7\n    const auxLength = bytes.readInt32LE(12)\n    if (auxLength) {\n      Object.assign(data, this.parseAuxData(bytes, 16, auxLength))\n    }\n    data.refCount = bytes.readInt32LE(16 + auxLength)\n\n    // read the indexes for each reference sequence\n    data.indices = new Array(data.refCount)\n    let currOffset = 16 + auxLength + 4\n    for (let i = 0; i < data.refCount; i += 1) {\n      await abortBreakPoint(opts.signal)\n      // the binning index\n      const binCount = bytes.readInt32LE(currOffset)\n      currOffset += 4\n      const binIndex: { [key: string]: Chunk[] } = {}\n      let stats // < provided by parsing a pseudo-bin, if present\n      for (let j = 0; j < binCount; j += 1) {\n        const bin = bytes.readUInt32LE(currOffset)\n        if (bin > this.maxBinNumber) {\n          // this is a fake bin that actually has stats information\n          // about the reference sequence in it\n          stats = this.parsePseudoBin(bytes, currOffset + 4)\n          currOffset += 4 + 8 + 4 + 16 + 16\n        } else {\n          const loffset = fromBytes(bytes, currOffset + 4)\n          this._findFirstData(data, loffset)\n          const chunkCount = bytes.readInt32LE(currOffset + 12)\n          currOffset += 16\n          const chunks = new Array(chunkCount)\n          for (let k = 0; k < chunkCount; k += 1) {\n            const u = fromBytes(bytes, currOffset)\n            const v = fromBytes(bytes, currOffset + 8)\n            currOffset += 16\n            // this._findFirstData(data, u)\n            chunks[k] = new Chunk(u, v, bin)\n          }\n          binIndex[bin] = chunks\n        }\n      }\n\n      data.indices[i] = { binIndex, stats }\n    }\n\n    return data\n  }\n\n  parsePseudoBin(bytes: Buffer, offset: number) {\n    const lineCount = longToNumber(\n      Long.fromBytesLE(\n        Array.prototype.slice.call(bytes, offset + 28, offset + 36),\n        true,\n      ),\n    )\n    return { lineCount }\n  }\n\n  async blocksForRange(\n    refId: number,\n    min: number,\n    max: number,\n    opts: BaseOpts = {},\n  ) {\n    if (min < 0) {\n      min = 0\n    }\n\n    const indexData = await this.parse(opts)\n    const ba = indexData?.indices[refId]\n    if (!ba) {\n      return []\n    }\n\n    const overlappingBins = this.reg2bins(min, max) // List of bin #s that overlap min, max\n    const chunks = []\n\n    // Find chunks in overlapping bins.  Leaf bins (< 4681) are not pruned\n    for (const [start, end] of overlappingBins) {\n      for (let bin = start; bin <= end; bin++) {\n        if (ba.binIndex[bin]) {\n          const binChunks = ba.binIndex[bin]\n          for (let c = 0; c < binChunks.length; ++c) {\n            chunks.push(new Chunk(binChunks[c].minv, binChunks[c].maxv, bin))\n          }\n        }\n      }\n    }\n\n    return optimizeChunks(chunks, new VirtualOffset(0, 0))\n  }\n\n  /**\n   * calculate the list of bins that may overlap with region [beg,end)\n   * (zero-based half-open)\n   */\n  reg2bins(beg: number, end: number) {\n    beg -= 1 // < convert to 1-based closed\n    if (beg < 1) {\n      beg = 1\n    }\n    if (end > 2 ** 50) {\n      end = 2 ** 34\n    } // 17 GiB ought to be enough for anybody\n    end -= 1\n    let l = 0\n    let t = 0\n    let s = this.minShift + this.depth * 3\n    const bins = []\n    for (; l <= this.depth; s -= 3, t += lshift(1, l * 3), l += 1) {\n      const b = t + rshift(beg, s)\n      const e = t + rshift(end, s)\n      if (e - b + bins.length > this.maxBinNumber) {\n        throw new Error(\n          `query ${beg}-${end} is too large for current binning scheme (shift ${this.minShift}, depth ${this.depth}), try a smaller query or a coarser index binning scheme`,\n        )\n      }\n      bins.push([b, e])\n    }\n    return bins\n  }\n}\n","export default {\n  //  the read is paired in sequencing, no matter whether it is mapped in a pair\n  BAM_FPAIRED: 1,\n  //  the read is mapped in a proper pair\n  BAM_FPROPER_PAIR: 2,\n  //  the read itself is unmapped; conflictive with BAM_FPROPER_PAIR\n  BAM_FUNMAP: 4,\n  //  the mate is unmapped\n  BAM_FMUNMAP: 8,\n  //  the read is mapped to the reverse strand\n  BAM_FREVERSE: 16,\n  //  the mate is mapped to the reverse strand\n  BAM_FMREVERSE: 32,\n  //  this is read1\n  BAM_FREAD1: 64,\n  //  this is read2\n  BAM_FREAD2: 128,\n  //  not primary alignment\n  BAM_FSECONDARY: 256,\n  //  QC failure\n  BAM_FQCFAIL: 512,\n  //  optical or PCR duplicate\n  BAM_FDUP: 1024,\n  //  supplementary alignment\n  BAM_FSUPPLEMENTARY: 2048,\n}\n","/* eslint-disable @typescript-eslint/no-empty-function */\nimport Constants from './constants'\n\nconst SEQRET_DECODER = '=ACMGRSVTWYHKDBN'.split('')\nconst CIGAR_DECODER = 'MIDNSHP=X???????'.split('')\n\n/**\n * Class of each BAM record returned by this API.\n */\nexport default class BamRecord {\n  private data = {} as { [key: string]: any }\n  private bytes: { start: number; end: number; byteArray: Buffer }\n  private _id: number\n  private _tagOffset: number | undefined\n  private _tagList: string[] = []\n  private _allTagsParsed = false\n\n  public flags: any\n  public _refID: number\n  constructor(args: any) {\n    const { bytes, fileOffset } = args\n    const { byteArray, start } = bytes\n    this.data = {}\n    this.bytes = bytes\n    this._id = fileOffset\n    this._refID = byteArray.readInt32LE(start + 4)\n    this.data.start = byteArray.readInt32LE(start + 8)\n    this.flags = (byteArray.readInt32LE(start + 16) & 0xffff0000) >> 16\n  }\n\n  get(field: string) {\n    //@ts-ignore\n    if (this[field]) {\n      //@ts-ignore\n      if (this.data[field]) {\n        return this.data[field]\n      }\n      //@ts-ignore\n      this.data[field] = this[field]()\n      return this.data[field]\n    }\n    return this._get(field.toLowerCase())\n  }\n\n  end() {\n    return this.get('start') + this.get('length_on_ref')\n  }\n\n  seq_id() {\n    return this._refID\n  }\n\n  // same as get(), except requires lower-case arguments.  used\n  // internally to save lots of calls to field.toLowerCase()\n  _get(field: string) {\n    if (field in this.data) {\n      return this.data[field]\n    }\n    this.data[field] = this._parseTag(field)\n    return this.data[field]\n  }\n\n  _tags() {\n    this._parseAllTags()\n\n    let tags = ['seq']\n\n    if (!this.isSegmentUnmapped()) {\n      tags.push(\n        'start',\n        'end',\n        'strand',\n        'score',\n        'qual',\n        'MQ',\n        'CIGAR',\n        'length_on_ref',\n        'template_length',\n      )\n    }\n    if (this.isPaired()) {\n      tags.push('next_segment_position', 'pair_orientation')\n    }\n    tags = tags.concat(this._tagList || [])\n\n    Object.keys(this.data).forEach(k => {\n      if (k[0] !== '_' && k !== 'next_seq_id') {\n        tags.push(k)\n      }\n    })\n\n    const seen: { [key: string]: boolean } = {}\n    return tags.filter(t => {\n      if (\n        (t in this.data && this.data[t] === undefined) ||\n        t === 'CG' ||\n        t === 'cg'\n      ) {\n        return false\n      }\n\n      const lt = t.toLowerCase()\n      const s = seen[lt]\n      seen[lt] = true\n      return !s\n    })\n  }\n\n  parent() {\n    return undefined\n  }\n\n  children() {\n    return this.get('subfeatures')\n  }\n\n  id() {\n    return this._id\n  }\n\n  // special parsers\n  /**\n   * Mapping quality score.\n   */\n  mq() {\n    const mq = (this.get('_bin_mq_nl') & 0xff00) >> 8\n    return mq === 255 ? undefined : mq\n  }\n\n  score() {\n    return this.get('mq')\n  }\n\n  qual() {\n    return this.qualRaw()?.join(' ')\n  }\n\n  qualRaw() {\n    if (this.isSegmentUnmapped()) {\n      return undefined\n    }\n\n    const { start, byteArray } = this.bytes\n    const p =\n      start +\n      36 +\n      this.get('_l_read_name') +\n      this.get('_n_cigar_op') * 4 +\n      this.get('_seq_bytes')\n    const lseq = this.get('seq_length')\n    return byteArray.subarray(p, p + lseq)\n  }\n\n  strand() {\n    return this.isReverseComplemented() ? -1 : 1\n  }\n\n  multi_segment_next_segment_strand() {\n    if (this.isMateUnmapped()) {\n      return undefined\n    }\n    return this.isMateReverseComplemented() ? -1 : 1\n  }\n\n  name() {\n    return this.get('_read_name')\n  }\n\n  _read_name() {\n    const nl = this.get('_l_read_name')\n    const { byteArray, start } = this.bytes\n    return byteArray.toString('ascii', start + 36, start + 36 + nl - 1)\n  }\n\n  /**\n   * Get the value of a tag, parsing the tags as far as necessary.\n   * Only called if we have not already parsed that field.\n   */\n  _parseTag(tagName?: string) {\n    // if all of the tags have been parsed and we're still being\n    // called, we already know that we have no such tag, because\n    // it would already have been cached.\n    if (this._allTagsParsed) {\n      return undefined\n    }\n\n    const { byteArray, start } = this.bytes\n    let p =\n      this._tagOffset ||\n      start +\n        36 +\n        this.get('_l_read_name') +\n        this.get('_n_cigar_op') * 4 +\n        this.get('_seq_bytes') +\n        this.get('seq_length')\n\n    const blockEnd = this.bytes.end\n    let lcTag\n    while (p < blockEnd && lcTag !== tagName) {\n      const tag = String.fromCharCode(byteArray[p], byteArray[p + 1])\n      lcTag = tag.toLowerCase()\n      const type = String.fromCharCode(byteArray[p + 2])\n      p += 3\n\n      let value\n      switch (type) {\n        case 'A':\n          value = String.fromCharCode(byteArray[p])\n          p += 1\n          break\n        case 'i':\n          value = byteArray.readInt32LE(p)\n          p += 4\n          break\n        case 'I':\n          value = byteArray.readUInt32LE(p)\n          p += 4\n          break\n        case 'c':\n          value = byteArray.readInt8(p)\n          p += 1\n          break\n        case 'C':\n          value = byteArray.readUInt8(p)\n          p += 1\n          break\n        case 's':\n          value = byteArray.readInt16LE(p)\n          p += 2\n          break\n        case 'S':\n          value = byteArray.readUInt16LE(p)\n          p += 2\n          break\n        case 'f':\n          value = byteArray.readFloatLE(p)\n          p += 4\n          break\n        case 'Z':\n        case 'H':\n          value = ''\n          while (p <= blockEnd) {\n            const cc = byteArray[p++]\n            if (cc === 0) {\n              break\n            } else {\n              value += String.fromCharCode(cc)\n            }\n          }\n          break\n        case 'B': {\n          value = ''\n          const cc = byteArray[p++]\n          const Btype = String.fromCharCode(cc)\n          const limit = byteArray.readInt32LE(p)\n          p += 4\n          if (Btype === 'i') {\n            if (tag === 'CG') {\n              for (let k = 0; k < limit; k++) {\n                const cigop = byteArray.readInt32LE(p)\n                const lop = cigop >> 4\n                const op = CIGAR_DECODER[cigop & 0xf]\n                value += lop + op\n                p += 4\n              }\n            } else {\n              for (let k = 0; k < limit; k++) {\n                value += byteArray.readInt32LE(p)\n                if (k + 1 < limit) {\n                  value += ','\n                }\n                p += 4\n              }\n            }\n          }\n          if (Btype === 'I') {\n            if (tag === 'CG') {\n              for (let k = 0; k < limit; k++) {\n                const cigop = byteArray.readUInt32LE(p)\n                const lop = cigop >> 4\n                const op = CIGAR_DECODER[cigop & 0xf]\n                value += lop + op\n                p += 4\n              }\n            } else {\n              for (let k = 0; k < limit; k++) {\n                value += byteArray.readUInt32LE(p)\n                if (k + 1 < limit) {\n                  value += ','\n                }\n                p += 4\n              }\n            }\n          }\n          if (Btype === 's') {\n            for (let k = 0; k < limit; k++) {\n              value += byteArray.readInt16LE(p)\n              if (k + 1 < limit) {\n                value += ','\n              }\n              p += 2\n            }\n          }\n          if (Btype === 'S') {\n            for (let k = 0; k < limit; k++) {\n              value += byteArray.readUInt16LE(p)\n              if (k + 1 < limit) {\n                value += ','\n              }\n              p += 2\n            }\n          }\n          if (Btype === 'c') {\n            for (let k = 0; k < limit; k++) {\n              value += byteArray.readInt8(p)\n              if (k + 1 < limit) {\n                value += ','\n              }\n              p += 1\n            }\n          }\n          if (Btype === 'C') {\n            for (let k = 0; k < limit; k++) {\n              value += byteArray.readUInt8(p)\n              if (k + 1 < limit) {\n                value += ','\n              }\n              p += 1\n            }\n          }\n          if (Btype === 'f') {\n            for (let k = 0; k < limit; k++) {\n              value += byteArray.readFloatLE(p)\n              if (k + 1 < limit) {\n                value += ','\n              }\n              p += 4\n            }\n          }\n          break\n        }\n        default:\n          console.warn(`Unknown BAM tag type '${type}', tags may be incomplete`)\n          value = undefined\n          p = blockEnd // stop parsing tags\n      }\n\n      this._tagOffset = p\n\n      this._tagList.push(tag)\n      if (lcTag === tagName) {\n        return value\n      }\n\n      this.data[lcTag] = value\n    }\n    this._allTagsParsed = true\n    return undefined\n  }\n\n  _parseAllTags() {\n    this._parseTag('')\n  }\n\n  _parseCigar(cigar: string) {\n    return (\n      //@ts-ignore\n      cigar\n        .match(/\\d+\\D/g)\n        //@ts-ignore\n        .map(op => [op.match(/\\D/)[0].toUpperCase(), parseInt(op, 10)])\n    )\n  }\n\n  /**\n   * @returns {boolean} true if the read is paired, regardless of whether both segments are mapped\n   */\n  isPaired() {\n    return !!(this.flags & Constants.BAM_FPAIRED)\n  }\n\n  /** @returns {boolean} true if the read is paired, and both segments are mapped */\n  isProperlyPaired() {\n    return !!(this.flags & Constants.BAM_FPROPER_PAIR)\n  }\n\n  /** @returns {boolean} true if the read itself is unmapped; conflictive with isProperlyPaired */\n  isSegmentUnmapped() {\n    return !!(this.flags & Constants.BAM_FUNMAP)\n  }\n\n  /** @returns {boolean} true if the read itself is unmapped; conflictive with isProperlyPaired */\n  isMateUnmapped() {\n    return !!(this.flags & Constants.BAM_FMUNMAP)\n  }\n\n  /** @returns {boolean} true if the read is mapped to the reverse strand */\n  isReverseComplemented() {\n    return !!(this.flags & Constants.BAM_FREVERSE)\n  }\n\n  /** @returns {boolean} true if the mate is mapped to the reverse strand */\n  isMateReverseComplemented() {\n    return !!(this.flags & Constants.BAM_FMREVERSE)\n  }\n\n  /** @returns {boolean} true if this is read number 1 in a pair */\n  isRead1() {\n    return !!(this.flags & Constants.BAM_FREAD1)\n  }\n\n  /** @returns {boolean} true if this is read number 2 in a pair */\n  isRead2() {\n    return !!(this.flags & Constants.BAM_FREAD2)\n  }\n\n  /** @returns {boolean} true if this is a secondary alignment */\n  isSecondary() {\n    return !!(this.flags & Constants.BAM_FSECONDARY)\n  }\n\n  /** @returns {boolean} true if this read has failed QC checks */\n  isFailedQc() {\n    return !!(this.flags & Constants.BAM_FQCFAIL)\n  }\n\n  /** @returns {boolean} true if the read is an optical or PCR duplicate */\n  isDuplicate() {\n    return !!(this.flags & Constants.BAM_FDUP)\n  }\n\n  /** @returns {boolean} true if this is a supplementary alignment */\n  isSupplementary() {\n    return !!(this.flags & Constants.BAM_FSUPPLEMENTARY)\n  }\n\n  cigar() {\n    if (this.isSegmentUnmapped()) {\n      return undefined\n    }\n\n    const { byteArray, start } = this.bytes\n    const numCigarOps = this.get('_n_cigar_op')\n    let p = start + 36 + this.get('_l_read_name')\n    const seqLen = this.get('seq_length')\n    let cigar = ''\n    let lref = 0\n\n    // check for CG tag by inspecting whether the CIGAR field\n    // contains a clip that consumes entire seqLen\n    let cigop = byteArray.readInt32LE(p)\n    let lop = cigop >> 4\n    let op = CIGAR_DECODER[cigop & 0xf]\n    if (op === 'S' && lop === seqLen) {\n      // if there is a CG the second CIGAR field will\n      // be a N tag the represents the length on ref\n      p += 4\n      cigop = byteArray.readInt32LE(p)\n      lop = cigop >> 4\n      op = CIGAR_DECODER[cigop & 0xf]\n      if (op !== 'N') {\n        console.warn('CG tag with no N tag')\n      }\n      this.data.length_on_ref = lop\n      return this.get('CG')\n    } else {\n      for (let c = 0; c < numCigarOps; ++c) {\n        cigop = byteArray.readInt32LE(p)\n        lop = cigop >> 4\n        op = CIGAR_DECODER[cigop & 0xf]\n        cigar += lop + op\n\n        // soft clip, hard clip, and insertion don't count toward\n        // the length on the reference\n        if (op !== 'H' && op !== 'S' && op !== 'I') {\n          lref += lop\n        }\n\n        p += 4\n      }\n\n      this.data.length_on_ref = lref\n      return cigar\n    }\n  }\n\n  _flags() {}\n\n  length_on_ref() {\n    if (this.data.length_on_ref) {\n      return this.data.length_on_ref\n    } else {\n      this.get('cigar') // the length_on_ref is set as a side effect\n      return this.data.length_on_ref\n    }\n  }\n\n  _n_cigar_op() {\n    return this.get('_flag_nc') & 0xffff\n  }\n\n  _l_read_name() {\n    return this.get('_bin_mq_nl') & 0xff\n  }\n\n  /**\n   * number of bytes in the sequence field\n   */\n  _seq_bytes() {\n    return (this.get('seq_length') + 1) >> 1\n  }\n\n  getReadBases() {\n    return this.seq()\n  }\n\n  seq() {\n    const { byteArray, start } = this.bytes\n    const p =\n      start + 36 + this.get('_l_read_name') + this.get('_n_cigar_op') * 4\n    const seqBytes = this.get('_seq_bytes')\n    const len = this.get('seq_length')\n    let buf = ''\n    let i = 0\n    for (let j = 0; j < seqBytes; ++j) {\n      const sb = byteArray[p + j]\n      buf += SEQRET_DECODER[(sb & 0xf0) >> 4]\n      i++\n      if (i < len) {\n        buf += SEQRET_DECODER[sb & 0x0f]\n        i++\n      }\n    }\n    return buf\n  }\n\n  // adapted from igv.js\n  getPairOrientation() {\n    if (\n      !this.isSegmentUnmapped() &&\n      !this.isMateUnmapped() &&\n      this._refID === this._next_refid()\n    ) {\n      const s1 = this.isReverseComplemented() ? 'R' : 'F'\n      const s2 = this.isMateReverseComplemented() ? 'R' : 'F'\n      let o1 = ' '\n      let o2 = ' '\n      if (this.isRead1()) {\n        o1 = '1'\n        o2 = '2'\n      } else if (this.isRead2()) {\n        o1 = '2'\n        o2 = '1'\n      }\n\n      const tmp = []\n      const isize = this.template_length()\n      if (isize > 0) {\n        tmp[0] = s1\n        tmp[1] = o1\n        tmp[2] = s2\n        tmp[3] = o2\n      } else {\n        tmp[2] = s1\n        tmp[3] = o1\n        tmp[0] = s2\n        tmp[1] = o2\n      }\n      return tmp.join('')\n    }\n    return null\n  }\n\n  _bin_mq_nl() {\n    return this.bytes.byteArray.readInt32LE(this.bytes.start + 12)\n  }\n\n  _flag_nc() {\n    return this.bytes.byteArray.readInt32LE(this.bytes.start + 16)\n  }\n\n  seq_length() {\n    return this.bytes.byteArray.readInt32LE(this.bytes.start + 20)\n  }\n\n  _next_refid() {\n    return this.bytes.byteArray.readInt32LE(this.bytes.start + 24)\n  }\n\n  _next_pos() {\n    return this.bytes.byteArray.readInt32LE(this.bytes.start + 28)\n  }\n\n  template_length() {\n    return this.bytes.byteArray.readInt32LE(this.bytes.start + 32)\n  }\n\n  toJSON() {\n    const data: { [key: string]: any } = {}\n    Object.keys(this).forEach(k => {\n      if (k.charAt(0) === '_' || k === 'bytes') {\n        return\n      }\n      //@ts-ignore\n      data[k] = this[k]\n    })\n\n    return data\n  }\n}\n","export function parseHeaderText(text: string) {\n  const lines = text.split(/\\r?\\n/)\n  const data: { tag: string; data: { tag: string; value: string }[] }[] = []\n  lines.forEach(line => {\n    const [tag, ...fields] = line.split(/\\t/)\n    const parsedFields = fields.map(f => {\n      const [fieldTag, value] = f.split(':', 2)\n      return { tag: fieldTag, value }\n    })\n    if (tag) {\n      data.push({ tag: tag.substr(1), data: parsedFields })\n    }\n  })\n  return data\n}\n","import crc32 from 'buffer-crc32'\nimport { unzip, unzipChunkSlice } from '@gmod/bgzf-filehandle'\nimport entries from 'object.entries-ponyfill'\nimport { LocalFile, RemoteFile, GenericFilehandle } from 'generic-filehandle'\nimport AbortablePromiseCache from 'abortable-promise-cache'\nimport QuickLRU from 'quick-lru'\n//locals\nimport BAI from './bai'\nimport CSI from './csi'\nimport Chunk from './chunk'\nimport BAMFeature from './record'\nimport IndexFile from './indexFile'\nimport { parseHeaderText } from './sam'\nimport {\n  abortBreakPoint,\n  checkAbortSignal,\n  timeout,\n  makeOpts,\n  BamOpts,\n  BaseOpts,\n} from './util'\n\nexport const BAM_MAGIC = 21840194\n\nconst blockLen = 1 << 16\n\nfunction flat<T>(arr: T[][]) {\n  return ([] as T[]).concat(...arr)\n}\n\nasync function gen2array<T>(gen: AsyncIterable<T>): Promise<T[]> {\n  const out: T[] = []\n  for await (const x of gen) {\n    out.push(x)\n  }\n  return out\n}\n\nexport default class BamFile {\n  private renameRefSeq: (a: string) => string\n  private bam: GenericFilehandle\n  private index: IndexFile\n  private chunkSizeLimit: number\n  private fetchSizeLimit: number\n  private header: any\n  protected chrToIndex: any\n  protected indexToChr: any\n  private yieldThreadTime: number\n\n  private featureCache = new AbortablePromiseCache({\n    //@ts-ignore\n    cache: new QuickLRU({\n      maxSize: 50,\n    }),\n    //@ts-ignore\n    fill: async ({ chunk, opts }, signal) => {\n      const { data, cpositions, dpositions } = await this._readChunk({\n        chunk,\n        opts: { ...opts, signal },\n      })\n      const feats = await this.readBamFeatures(\n        data,\n        cpositions,\n        dpositions,\n        chunk,\n      )\n      return feats\n    },\n  })\n\n  /**\n   * @param {object} args\n   * @param {string} [args.bamPath]\n   * @param {FileHandle} [args.bamFilehandle]\n   * @param {string} [args.baiPath]\n   * @param {FileHandle} [args.baiFilehandle]\n   */\n  constructor({\n    bamFilehandle,\n    bamPath,\n    bamUrl,\n    baiPath,\n    baiFilehandle,\n    baiUrl,\n    csiPath,\n    csiFilehandle,\n    csiUrl,\n    fetchSizeLimit,\n    chunkSizeLimit,\n    yieldThreadTime = 100,\n    renameRefSeqs = n => n,\n  }: {\n    bamFilehandle?: GenericFilehandle\n    bamPath?: string\n    bamUrl?: string\n    baiPath?: string\n    baiFilehandle?: GenericFilehandle\n    baiUrl?: string\n    csiPath?: string\n    csiFilehandle?: GenericFilehandle\n    csiUrl?: string\n    fetchSizeLimit?: number\n    chunkSizeLimit?: number\n    renameRefSeqs?: (a: string) => string\n    yieldThreadTime?: number\n  }) {\n    this.renameRefSeq = renameRefSeqs\n\n    if (bamFilehandle) {\n      this.bam = bamFilehandle\n    } else if (bamPath) {\n      this.bam = new LocalFile(bamPath)\n    } else if (bamUrl) {\n      this.bam = new RemoteFile(bamUrl)\n    } else {\n      throw new Error('unable to initialize bam')\n    }\n    if (csiFilehandle) {\n      this.index = new CSI({ filehandle: csiFilehandle })\n    } else if (csiPath) {\n      this.index = new CSI({ filehandle: new LocalFile(csiPath) })\n    } else if (csiUrl) {\n      this.index = new CSI({ filehandle: new RemoteFile(csiUrl) })\n    } else if (baiFilehandle) {\n      this.index = new BAI({ filehandle: baiFilehandle })\n    } else if (baiPath) {\n      this.index = new BAI({ filehandle: new LocalFile(baiPath) })\n    } else if (baiUrl) {\n      this.index = new BAI({ filehandle: new RemoteFile(baiUrl) })\n    } else if (bamPath) {\n      this.index = new BAI({ filehandle: new LocalFile(`${bamPath}.bai`) })\n    } else if (bamUrl) {\n      this.index = new BAI({ filehandle: new RemoteFile(`${bamUrl}.bai`) })\n    } else {\n      throw new Error('unable to infer index format')\n    }\n    this.fetchSizeLimit = fetchSizeLimit || 500000000 // 500MB\n    this.chunkSizeLimit = chunkSizeLimit || 300000000 // 300MB\n    this.yieldThreadTime = yieldThreadTime\n  }\n\n  async getHeader(origOpts: AbortSignal | BaseOpts = {}) {\n    const opts = makeOpts(origOpts)\n    const indexData = await this.index.parse(opts)\n    const ret = indexData.firstDataLine\n      ? indexData.firstDataLine.blockPosition + 65535\n      : undefined\n    let buffer\n    if (ret) {\n      const res = await this.bam.read(\n        Buffer.alloc(ret + blockLen),\n        0,\n        ret + blockLen,\n        0,\n        opts,\n      )\n\n      const { bytesRead } = res\n      ;({ buffer } = res)\n      if (!bytesRead) {\n        throw new Error('Error reading header')\n      }\n      if (bytesRead < ret) {\n        buffer = buffer.subarray(0, bytesRead)\n      } else {\n        buffer = buffer.subarray(0, ret)\n      }\n    } else {\n      buffer = (await this.bam.readFile(opts)) as Buffer\n    }\n\n    const uncba = await unzip(buffer)\n\n    if (uncba.readInt32LE(0) !== BAM_MAGIC) {\n      throw new Error('Not a BAM file')\n    }\n    const headLen = uncba.readInt32LE(4)\n\n    this.header = uncba.toString('utf8', 8, 8 + headLen)\n    const { chrToIndex, indexToChr } = await this._readRefSeqs(\n      headLen + 8,\n      65535,\n      opts,\n    )\n    this.chrToIndex = chrToIndex\n    this.indexToChr = indexToChr\n\n    return parseHeaderText(this.header)\n  }\n\n  async getHeaderText(opts: BaseOpts = {}) {\n    await this.getHeader(opts)\n    return this.header\n  }\n\n  // the full length of the refseq block is not given in advance so this grabs\n  // a chunk and doubles it if all refseqs haven't been processed\n  async _readRefSeqs(\n    start: number,\n    refSeqBytes: number,\n    opts: BaseOpts = {},\n  ): Promise<{\n    chrToIndex: { [key: string]: number }\n    indexToChr: { refName: string; length: number }[]\n  }> {\n    if (start > refSeqBytes) {\n      return this._readRefSeqs(start, refSeqBytes * 2, opts)\n    }\n    const size = refSeqBytes + blockLen\n    const { bytesRead, buffer } = await this.bam.read(\n      Buffer.alloc(size),\n      0,\n      refSeqBytes,\n      0,\n      opts,\n    )\n    if (!bytesRead) {\n      throw new Error('Error reading refseqs from header')\n    }\n    const uncba = await unzip(\n      buffer.subarray(0, Math.min(bytesRead, refSeqBytes)),\n    )\n    const nRef = uncba.readInt32LE(start)\n    let p = start + 4\n    const chrToIndex: { [key: string]: number } = {}\n    const indexToChr: { refName: string; length: number }[] = []\n    for (let i = 0; i < nRef; i += 1) {\n      const lName = uncba.readInt32LE(p)\n      const refName = this.renameRefSeq(\n        uncba.toString('utf8', p + 4, p + 4 + lName - 1),\n      )\n      const lRef = uncba.readInt32LE(p + lName + 4)\n\n      chrToIndex[refName] = i\n      indexToChr.push({ refName, length: lRef })\n\n      p = p + 8 + lName\n      if (p > uncba.length) {\n        console.warn(\n          `BAM header is very big.  Re-fetching ${refSeqBytes} bytes.`,\n        )\n        return this._readRefSeqs(start, refSeqBytes * 2, opts)\n      }\n    }\n    return { chrToIndex, indexToChr }\n  }\n\n  async getRecordsForRange(\n    chr: string,\n    min: number,\n    max: number,\n    opts: BamOpts = {\n      viewAsPairs: false,\n      pairAcrossChr: false,\n      maxInsertSize: 200000,\n    },\n  ) {\n    return flat(\n      await gen2array(this.streamRecordsForRange(chr, min, max, opts)),\n    )\n  }\n\n  async *streamRecordsForRange(\n    chr: string,\n    min: number,\n    max: number,\n    opts: BamOpts = {},\n  ) {\n    const { signal } = opts\n    const chrId = this.chrToIndex && this.chrToIndex[chr]\n    let chunks: Chunk[]\n    if (!(chrId >= 0)) {\n      chunks = []\n    } else {\n      chunks = await this.index.blocksForRange(chrId, min - 1, max, opts)\n\n      if (!chunks) {\n        throw new Error('Error in index fetch')\n      }\n    }\n\n    for (let i = 0; i < chunks.length; i += 1) {\n      await abortBreakPoint(signal)\n      const size = chunks[i].fetchedSize()\n      if (size > this.chunkSizeLimit) {\n        throw new Error(\n          `Too many BAM features. BAM chunk size ${size} bytes exceeds chunkSizeLimit of ${this.chunkSizeLimit}`,\n        )\n      }\n    }\n\n    const totalSize = chunks\n      .map(s => s.fetchedSize())\n      .reduce((a, b) => a + b, 0)\n    if (totalSize > this.fetchSizeLimit) {\n      throw new Error(\n        `data size of ${totalSize.toLocaleString()} bytes exceeded fetch size limit of ${this.fetchSizeLimit.toLocaleString()} bytes`,\n      )\n    }\n    yield* this._fetchChunkFeatures(chunks, chrId, min, max, opts)\n  }\n\n  async *_fetchChunkFeatures(\n    chunks: Chunk[],\n    chrId: number,\n    min: number,\n    max: number,\n    opts: BamOpts,\n  ) {\n    const { viewAsPairs = false } = opts\n    const feats = []\n    let done = false\n\n    for (let i = 0; i < chunks.length; i++) {\n      const c = chunks[i]\n      const records = (await this.featureCache.get(\n        c.toString(),\n        {\n          chunk: c,\n          opts,\n        },\n        opts.signal,\n      )) as BAMFeature[]\n\n      const recs = []\n      for (let i = 0; i < records.length; i += 1) {\n        const feature = records[i]\n        if (feature.seq_id() === chrId) {\n          if (feature.get('start') >= max) {\n            // past end of range, can stop iterating\n            done = true\n            break\n          } else if (feature.get('end') >= min) {\n            // must be in range\n            recs.push(feature)\n          }\n        }\n      }\n      feats.push(recs)\n      yield recs\n      if (done) {\n        break\n      }\n    }\n\n    checkAbortSignal(opts.signal)\n    if (viewAsPairs) {\n      yield this.fetchPairs(chrId, feats, opts)\n    }\n  }\n\n  async fetchPairs(chrId: number, feats: BAMFeature[][], opts: BamOpts) {\n    const { pairAcrossChr = false, maxInsertSize = 200000 } = opts\n    const unmatedPairs: { [key: string]: boolean } = {}\n    const readIds: { [key: string]: number } = {}\n    feats.map(ret => {\n      const readNames: { [key: string]: number } = {}\n      for (let i = 0; i < ret.length; i++) {\n        const name = ret[i].name()\n        const id = ret[i].id()\n        if (!readNames[name]) {\n          readNames[name] = 0\n        }\n        readNames[name]++\n        readIds[id] = 1\n      }\n      entries(readNames).forEach(([k, v]: [string, number]) => {\n        if (v === 1) {\n          unmatedPairs[k] = true\n        }\n      })\n    })\n\n    const matePromises: Promise<Chunk[]>[] = []\n    feats.map(ret => {\n      for (let i = 0; i < ret.length; i++) {\n        const f = ret[i]\n        const name = f.name()\n        const start = f.get('start')\n        const pnext = f._next_pos()\n        const rnext = f._next_refid()\n        if (\n          unmatedPairs[name] &&\n          (pairAcrossChr ||\n            (rnext === chrId && Math.abs(start - pnext) < maxInsertSize))\n        ) {\n          matePromises.push(\n            this.index.blocksForRange(rnext, pnext, pnext + 1, opts),\n          )\n        }\n      }\n    })\n\n    // filter out duplicate chunks (the blocks are lists of chunks, blocks are\n    // concatenated, then filter dup chunks)\n    const mateChunks = flat(await Promise.all(matePromises))\n      .sort()\n      .filter(\n        (item, pos, ary) => !pos || item.toString() !== ary[pos - 1].toString(),\n      )\n\n    const mateTotalSize = mateChunks\n      .map(s => s.fetchedSize())\n      .reduce((a, b) => a + b, 0)\n    if (mateTotalSize > this.fetchSizeLimit) {\n      throw new Error(\n        `data size of ${mateTotalSize.toLocaleString()} bytes exceeded fetch size limit of ${this.fetchSizeLimit.toLocaleString()} bytes`,\n      )\n    }\n    const mateFeatPromises = mateChunks.map(async c => {\n      const { data, cpositions, dpositions, chunk } = await this._readChunk({\n        chunk: c,\n        opts,\n      })\n      const feats = await this.readBamFeatures(\n        data,\n        cpositions,\n        dpositions,\n        chunk,\n      )\n      const mateRecs = []\n      for (let i = 0; i < feats.length; i += 1) {\n        const feature = feats[i]\n        if (unmatedPairs[feature.get('name')] && !readIds[feature.id()]) {\n          mateRecs.push(feature)\n        }\n      }\n      return mateRecs\n    })\n    return flat(await Promise.all(mateFeatPromises))\n  }\n\n  async _readChunk({ chunk, opts }: { chunk: Chunk; opts: BaseOpts }) {\n    const size = chunk.fetchedSize()\n    const { buffer, bytesRead } = await this.bam.read(\n      Buffer.alloc(size),\n      0,\n      size,\n      chunk.minv.blockPosition,\n      opts,\n    )\n\n    const {\n      buffer: data,\n      cpositions,\n      dpositions,\n    } = await unzipChunkSlice(\n      buffer.subarray(0, Math.min(bytesRead, size)),\n      chunk,\n    )\n    return { data, cpositions, dpositions, chunk }\n  }\n\n  async readBamFeatures(\n    ba: Buffer,\n    cpositions: number[],\n    dpositions: number[],\n    chunk: Chunk,\n  ) {\n    let blockStart = 0\n    const sink = []\n    let pos = 0\n    let last = +Date.now()\n\n    while (blockStart + 4 < ba.length) {\n      const blockSize = ba.readInt32LE(blockStart)\n      const blockEnd = blockStart + 4 + blockSize - 1\n\n      // increment position to the current decompressed status\n      if (dpositions) {\n        while (blockStart + chunk.minv.dataPosition >= dpositions[pos++]) {}\n        pos--\n      }\n\n      // only try to read the feature if we have all the bytes for it\n      if (blockEnd < ba.length) {\n        const feature = new BAMFeature({\n          bytes: {\n            byteArray: ba,\n            start: blockStart,\n            end: blockEnd,\n          },\n          // the below results in an automatically calculated file-offset based ID\n          // if the info for that is available, otherwise crc32 of the features\n          //\n          // cpositions[pos] refers to actual file offset of a bgzip block boundaries\n          //\n          // we multiply by (1 <<8) in order to make sure each block has a \"unique\"\n          // address space so that data in that block could never overlap\n          //\n          // then the blockStart-dpositions is an uncompressed file offset from\n          // that bgzip block boundary, and since the cpositions are multiplied by\n          // (1 << 8) these uncompressed offsets get a unique space\n          //\n          // this has an extra chunk.minv.dataPosition added on because it blockStart\n          // starts at 0 instead of chunk.minv.dataPosition\n          //\n          // the +1 is just to avoid any possible uniqueId 0 but this does not realistically happen\n          fileOffset: cpositions\n            ? cpositions[pos] * (1 << 8) +\n              (blockStart - dpositions[pos]) +\n              chunk.minv.dataPosition +\n              1\n            : // must be slice, not subarray for buffer polyfill on web\n              crc32.signed(ba.slice(blockStart, blockEnd)),\n        })\n\n        sink.push(feature)\n        if (this.yieldThreadTime && +Date.now() - last > this.yieldThreadTime) {\n          await timeout(1)\n          last = +Date.now()\n        }\n      }\n\n      blockStart = blockEnd + 1\n    }\n    return sink\n  }\n\n  async hasRefSeq(seqName: string) {\n    const refId = this.chrToIndex && this.chrToIndex[seqName]\n    return this.index.hasRefSeq(refId)\n  }\n\n  async lineCount(seqName: string) {\n    const refId = this.chrToIndex && this.chrToIndex[seqName]\n    return this.index.lineCount(refId)\n  }\n\n  async indexCov(seqName: string, start?: number, end?: number) {\n    await this.index.parse()\n    const seqId = this.chrToIndex && this.chrToIndex[seqName]\n    return this.index.indexCov(seqId, start, end)\n  }\n\n  async blocksForRange(\n    seqName: string,\n    start: number,\n    end: number,\n    opts?: BaseOpts,\n  ) {\n    await this.index.parse()\n    const seqId = this.chrToIndex && this.chrToIndex[seqName]\n    return this.index.blocksForRange(seqId, start, end, opts)\n  }\n}\n","import { BaseOpts, BamOpts } from './util'\nimport BamFile, { BAM_MAGIC } from './bamFile'\nimport 'cross-fetch/polyfill'\nimport Chunk from './chunk'\nimport { unzip } from '@gmod/bgzf-filehandle'\nimport { parseHeaderText } from './sam'\n\ninterface HeaderLine {\n  tag: string\n  value: string\n}\n\ninterface HtsgetChunk {\n  url: string\n  headers?: Record<string, string>\n}\nasync function concat(arr: { url: string }[], opts: Record<string, any>) {\n  const res = await Promise.all(\n    arr.map(async (chunk: HtsgetChunk) => {\n      const { url, headers } = chunk\n      if (url.startsWith('data:')) {\n        return Buffer.from(url.split(',')[1], 'base64')\n      } else {\n        //remove referer header, it is not even allowed to be specified\n        //@ts-ignore\n        //eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { referer, ...rest } = headers\n        const res = await fetch(url, {\n          ...opts,\n          headers: { ...opts.headers, ...rest },\n        })\n        if (!res.ok) {\n          throw new Error(`Failed to fetch ${res.statusText}`)\n        }\n        return Buffer.from(await res.arrayBuffer())\n      }\n    }),\n  )\n\n  return Buffer.concat(await Promise.all(res.map(elt => unzip(elt))))\n}\n\nexport default class HtsgetFile extends BamFile {\n  private baseUrl: string\n\n  private trackId: string\n\n  constructor(args: { trackId: string; baseUrl: string }) {\n    // @ts-ignore override bam defaults\n    super({ bamFilehandle: '?', baiFilehandle: '?' })\n    this.baseUrl = args.baseUrl\n    this.trackId = args.trackId\n  }\n\n  async *streamRecordsForRange(\n    chr: string,\n    min: number,\n    max: number,\n    opts: BamOpts = {\n      viewAsPairs: false,\n      pairAcrossChr: false,\n      maxInsertSize: 200000,\n    },\n  ) {\n    const base = `${this.baseUrl}/${this.trackId}`\n    const url = `${base}?referenceName=${chr}&start=${min}&end=${max}&format=BAM`\n    const chrId = this.chrToIndex && this.chrToIndex[chr]\n    const result = await fetch(url, { ...opts })\n    if (!result.ok) {\n      throw new Error(result.statusText)\n    }\n    const data = await result.json()\n    const uncba = await concat(data.htsget.urls.slice(1), opts)\n    const chunk = {\n      buffer: uncba,\n      chunk: { minv: { dataPosition: 0 } },\n      toString() {\n        return `${chr}_${min}_${max}`\n      },\n    }\n\n    yield* this._fetchChunkFeatures(\n      // @ts-ignore\n      [chunk],\n      chrId,\n      min,\n      max,\n      opts,\n    )\n  }\n\n  //@ts-ignore\n  async _readChunk(params: {\n    chunk: { buffer: Buffer; chunk: Chunk }\n    opts: BaseOpts\n  }) {\n    const { chunk } = params\n    const { buffer, chunk: c2 } = chunk\n    return { data: buffer, cpositions: null, dpositions: null, chunk: c2 }\n  }\n\n  async getHeader(opts: BaseOpts = {}) {\n    const url = `${this.baseUrl}/${this.trackId}?referenceName=na&class=header`\n    const result = await fetch(url, opts)\n    if (!result.ok) {\n      throw new Error(`Failed to fetch ${result.statusText}`)\n    }\n    const data = await result.json()\n    const uncba = await concat(data.htsget.urls, opts)\n\n    if (uncba.readInt32LE(0) !== BAM_MAGIC) {\n      throw new Error('Not a BAM file')\n    }\n    const headLen = uncba.readInt32LE(4)\n\n    const headerText = uncba.toString('utf8', 8, 8 + headLen)\n    const samHeader = parseHeaderText(headerText)\n\n    // use the @SQ lines in the header to figure out the\n    // mapping between ref ref ID numbers and names\n    const idToName: string[] = []\n    const nameToId: Record<string, number> = {}\n    const sqLines = samHeader.filter((l: { tag: string }) => l.tag === 'SQ')\n    sqLines.forEach((sqLine: { data: HeaderLine[] }, refId: number) => {\n      sqLine.data.forEach((item: HeaderLine) => {\n        if (item.tag === 'SN') {\n          // this is the ref name\n          const refName = item.value\n          nameToId[refName] = refId\n          idToName[refId] = refName\n        }\n      })\n    })\n    this.chrToIndex = nameToId\n    this.indexToChr = idToName\n    return samHeader\n  }\n}\n","'use strict';\n\nclass QuickLRU {\n\tconstructor(options = {}) {\n\t\tif (!(options.maxSize && options.maxSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tthis.maxSize = options.maxSize;\n\t\tthis.cache = new Map();\n\t\tthis.oldCache = new Map();\n\t\tthis._size = 0;\n\t}\n\n\t_set(key, value) {\n\t\tthis.cache.set(key, value);\n\t\tthis._size++;\n\n\t\tif (this._size >= this.maxSize) {\n\t\t\tthis._size = 0;\n\t\t\tthis.oldCache = this.cache;\n\t\t\tthis.cache = new Map();\n\t\t}\n\t}\n\n\tget(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn this.cache.get(key);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\tconst value = this.oldCache.get(key);\n\t\t\tthis._set(key, value);\n\t\t\treturn value;\n\t\t}\n\t}\n\n\tset(key, value) {\n\t\tif (this.cache.has(key)) {\n\t\t\tthis.cache.set(key, value);\n\t\t} else {\n\t\t\tthis._set(key, value);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\thas(key) {\n\t\treturn this.cache.has(key) || this.oldCache.has(key);\n\t}\n\n\tpeek(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn this.cache.get(key);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\treturn this.oldCache.get(key);\n\t\t}\n\t}\n\n\tdelete(key) {\n\t\tconst deleted = this.cache.delete(key);\n\t\tif (deleted) {\n\t\t\tthis._size--;\n\t\t}\n\n\t\treturn this.oldCache.delete(key) || deleted;\n\t}\n\n\tclear() {\n\t\tthis.cache.clear();\n\t\tthis.oldCache.clear();\n\t\tthis._size = 0;\n\t}\n\n\t* keys() {\n\t\tfor (const [key] of this) {\n\t\t\tyield key;\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const [, value] of this) {\n\t\t\tyield value;\n\t\t}\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tfor (const item of this.cache) {\n\t\t\tyield item;\n\t\t}\n\n\t\tfor (const item of this.oldCache) {\n\t\t\tconst [key] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tyield item;\n\t\t\t}\n\t\t}\n\t}\n\n\tget size() {\n\t\tlet oldCacheSize = 0;\n\t\tfor (const key of this.oldCache.keys()) {\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\toldCacheSize++;\n\t\t\t}\n\t\t}\n\n\t\treturn this._size + oldCacheSize;\n\t}\n}\n\nmodule.exports = QuickLRU;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst abortcontroller_ponyfill_1 = require(\"./abortcontroller-ponyfill\");\nconst AggregateAbortController_1 = __importDefault(require(\"./AggregateAbortController\"));\nconst AggregateStatusReporter_1 = __importDefault(require(\"./AggregateStatusReporter\"));\nclass AbortablePromiseCache {\n    constructor({ fill, cache, }) {\n        if (typeof fill !== 'function') {\n            throw new TypeError('must pass a fill function');\n        }\n        if (typeof cache !== 'object') {\n            throw new TypeError('must pass a cache object');\n        }\n        if (typeof cache.get !== 'function' ||\n            typeof cache.set !== 'function' ||\n            typeof cache.delete !== 'function') {\n            throw new TypeError('cache must implement get(key), set(key, val), and and delete(key)');\n        }\n        this.cache = cache;\n        this.fillCallback = fill;\n    }\n    static isAbortException(exception) {\n        return (\n        // DOMException\n        exception.name === 'AbortError' ||\n            // standard-ish non-DOM abort exception\n            //@ts-ignore\n            exception.code === 'ERR_ABORTED' ||\n            // stringified DOMException\n            exception.message === 'AbortError: aborted' ||\n            // stringified standard-ish exception\n            exception.message === 'Error: aborted');\n    }\n    evict(key, entry) {\n        if (this.cache.get(key) === entry) {\n            this.cache.delete(key);\n        }\n    }\n    fill(key, data, signal, statusCallback) {\n        const aborter = new AggregateAbortController_1.default();\n        const statusReporter = new AggregateStatusReporter_1.default();\n        statusReporter.addCallback(statusCallback);\n        const newEntry = {\n            aborter: aborter,\n            promise: this.fillCallback(data, aborter.signal, (message) => {\n                statusReporter.callback(message);\n            }),\n            settled: false,\n            statusReporter,\n            get aborted() {\n                return this.aborter.signal.aborted;\n            },\n        };\n        newEntry.aborter.addSignal(signal);\n        // remove the fill from the cache when its abortcontroller fires, if still in there\n        newEntry.aborter.signal.addEventListener('abort', () => {\n            if (!newEntry.settled) {\n                this.evict(key, newEntry);\n            }\n        });\n        // chain off the cached promise to record when it settles\n        newEntry.promise\n            .then(() => {\n            newEntry.settled = true;\n        }, () => {\n            newEntry.settled = true;\n            // if the fill throws an error (including abort) and is still in the cache, remove it\n            this.evict(key, newEntry);\n        })\n            .catch(e => {\n            // this will only be reached if there is some kind of\n            // bad bug in this library\n            console.error(e);\n            throw e;\n        });\n        this.cache.set(key, newEntry);\n    }\n    static checkSinglePromise(promise, signal) {\n        // check just this signal for having been aborted, and abort the\n        // promise if it was, regardless of what happened with the cached\n        // response\n        function checkForSingleAbort() {\n            if (signal && signal.aborted) {\n                throw Object.assign(new Error('aborted'), { code: 'ERR_ABORTED' });\n            }\n        }\n        return promise.then(result => {\n            checkForSingleAbort();\n            return result;\n        }, error => {\n            checkForSingleAbort();\n            throw error;\n        });\n    }\n    has(key) {\n        return this.cache.has(key);\n    }\n    /**\n     * Callback for getting status of the pending async\n     *\n     * @callback statusCallback\n     * @param {any} status, current status string or message object\n     */\n    /**\n     * @param {any} key cache key to use for this request\n     * @param {any} data data passed as the first argument to the fill callback\n     * @param {AbortSignal} [signal] optional AbortSignal object that aborts the request\n     * @param {statusCallback} a callback to get the current status of a pending async operation\n     */\n    get(key, data, signal, statusCallback) {\n        if (!signal && data instanceof abortcontroller_ponyfill_1.AbortSignal) {\n            throw new TypeError('second get argument appears to be an AbortSignal, perhaps you meant to pass `null` for the fill data?');\n        }\n        const cacheEntry = this.cache.get(key);\n        if (cacheEntry) {\n            if (cacheEntry.aborted && !cacheEntry.settled) {\n                // if it's aborted but has not realized it yet, evict it and redispatch\n                this.evict(key, cacheEntry);\n                return this.get(key, data, signal, statusCallback);\n            }\n            if (cacheEntry.settled) {\n                // too late to abort, just return it\n                return cacheEntry.promise;\n            }\n            // request is in-flight, add this signal to its list of signals,\n            // or if there is no signal, the aborter will become non-abortable\n            cacheEntry.aborter.addSignal(signal);\n            cacheEntry.statusReporter.addCallback(statusCallback);\n            return AbortablePromiseCache.checkSinglePromise(cacheEntry.promise, signal);\n        }\n        // if we got here, it is not in the cache. fill.\n        this.fill(key, data, signal, statusCallback);\n        return AbortablePromiseCache.checkSinglePromise(\n        //see https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#non-null-assertion-operator-postfix-\n        //eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.cache.get(key).promise, signal);\n    }\n    /**\n     * delete the given entry from the cache. if it exists and its fill request has\n     * not yet settled, the fill will be signaled to abort.\n     *\n     * @param {any} key\n     */\n    delete(key) {\n        const cachedEntry = this.cache.get(key);\n        if (cachedEntry) {\n            if (!cachedEntry.settled) {\n                cachedEntry.aborter.abort();\n            }\n            this.cache.delete(key);\n        }\n    }\n    /**\n     * Clear all requests from the cache. Aborts any that have not settled.\n     * @returns {number} count of entries deleted\n     */\n    clear() {\n        // iterate without needing regenerator-runtime\n        const keyIter = this.cache.keys();\n        let deleteCount = 0;\n        for (let result = keyIter.next(); !result.done; result = keyIter.next()) {\n            this.delete(result.value);\n            deleteCount += 1;\n        }\n        return deleteCount;\n    }\n}\nexports.default = AbortablePromiseCache;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst abortcontroller_ponyfill_1 = require(\"./abortcontroller-ponyfill\");\nclass NullSignal {\n}\n/**\n * aggregates a number of abort signals, will only fire the aggregated\n * abort if all of the input signals have been aborted\n */\nclass AggregateAbortController {\n    constructor() {\n        this.signals = new Set();\n        this.abortController = new abortcontroller_ponyfill_1.AbortController();\n    }\n    /**\n     * @param {AbortSignal} [signal] optional AbortSignal to add. if falsy,\n     *  will be treated as a null-signal, and this abortcontroller will no\n     *  longer be abortable.\n     */\n    //@ts-ignore\n    addSignal(signal = new NullSignal()) {\n        if (this.signal.aborted) {\n            throw new Error('cannot add a signal, already aborted!');\n        }\n        // note that a NullSignal will never fire, so if we\n        // have one this thing will never actually abort\n        this.signals.add(signal);\n        if (signal.aborted) {\n            // handle the abort immediately if it is already aborted\n            // for some reason\n            this.handleAborted(signal);\n        }\n        else if (typeof signal.addEventListener === 'function') {\n            signal.addEventListener('abort', () => {\n                this.handleAborted(signal);\n            });\n        }\n    }\n    handleAborted(signal) {\n        this.signals.delete(signal);\n        if (this.signals.size === 0) {\n            this.abortController.abort();\n        }\n    }\n    get signal() {\n        return this.abortController.signal;\n    }\n    abort() {\n        this.abortController.abort();\n    }\n}\nexports.default = AggregateAbortController;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass AggregateStatusReporter {\n    constructor() {\n        this.callbacks = new Set();\n    }\n    addCallback(callback = () => { }) {\n        this.callbacks.add(callback);\n        callback(this.currentMessage);\n    }\n    callback(message) {\n        this.currentMessage = message;\n        this.callbacks.forEach(elt => {\n            elt(message);\n        });\n    }\n}\nexports.default = AggregateStatusReporter;\n","\"use strict\";\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbortSignal = exports.AbortController = void 0;\nconst cjs_ponyfill_1 = require(\"abortcontroller-polyfill/dist/cjs-ponyfill\");\nvar getGlobal = function () {\n    // the only reliable means to get the global object is\n    // `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    throw new Error('unable to locate global object');\n};\n//@ts-ignore\nlet AbortController = typeof getGlobal().AbortController === 'undefined' ? cjs_ponyfill_1.AbortController : getGlobal().AbortController;\nexports.AbortController = AbortController;\n//@ts-ignore\nlet AbortSignal = typeof getGlobal().AbortController === 'undefined' ? cjs_ponyfill_1.AbortSignal : getGlobal().AbortSignal;\nexports.AbortSignal = AbortSignal;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AbortablePromiseCache_1 = __importDefault(require(\"./AbortablePromiseCache\"));\nexports.default = AbortablePromiseCache_1.default;\n","(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(typeof self !== 'undefined' ? self : this);\n","export default function _OverloadYield(value, kind) {\n  this.v = value, this.k = kind;\n}","import OverloadYield from \"./OverloadYield.js\";\nexport default function _asyncGeneratorDelegate(inner) {\n  var iter = {},\n    waiting = !1;\n  function pump(key, value) {\n    return waiting = !0, value = new Promise(function (resolve) {\n      resolve(inner[key](value));\n    }), {\n      done: !1,\n      value: new OverloadYield(value, 1)\n    };\n  }\n  return iter[\"undefined\" != typeof Symbol && Symbol.iterator || \"@@iterator\"] = function () {\n    return this;\n  }, iter.next = function (value) {\n    return waiting ? (waiting = !1, value) : pump(\"next\", value);\n  }, \"function\" == typeof inner[\"throw\"] && (iter[\"throw\"] = function (value) {\n    if (waiting) throw waiting = !1, value;\n    return pump(\"throw\", value);\n  }), \"function\" == typeof inner[\"return\"] && (iter[\"return\"] = function (value) {\n    return waiting ? (waiting = !1, value) : pump(\"return\", value);\n  }), iter;\n}","export default function _asyncIterator(iterable) {\n  var method,\n    async,\n    sync,\n    retry = 2;\n  for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) {\n    if (async && null != (method = iterable[async])) return method.call(iterable);\n    if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable));\n    async = \"@@asyncIterator\", sync = \"@@iterator\";\n  }\n  throw new TypeError(\"Object is not async iterable\");\n}\nfunction AsyncFromSyncIterator(s) {\n  function AsyncFromSyncIteratorContinuation(r) {\n    if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\"));\n    var done = r.done;\n    return Promise.resolve(r.value).then(function (value) {\n      return {\n        value: value,\n        done: done\n      };\n    });\n  }\n  return AsyncFromSyncIterator = function AsyncFromSyncIterator(s) {\n    this.s = s, this.n = s.next;\n  }, AsyncFromSyncIterator.prototype = {\n    s: null,\n    n: null,\n    next: function next() {\n      return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));\n    },\n    \"return\": function _return(value) {\n      var ret = this.s[\"return\"];\n      return void 0 === ret ? Promise.resolve({\n        value: value,\n        done: !0\n      }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments));\n    },\n    \"throw\": function _throw(value) {\n      var thr = this.s[\"return\"];\n      return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments));\n    }\n  }, new AsyncFromSyncIterator(s);\n}","import OverloadYield from \"./OverloadYield.js\";\nexport default function _awaitAsyncGenerator(value) {\n  return new OverloadYield(value, 0);\n}","import OverloadYield from \"./OverloadYield.js\";\nexport default function AsyncGenerator(gen) {\n  var front, back;\n  function resume(key, arg) {\n    try {\n      var result = gen[key](arg),\n        value = result.value,\n        overloaded = value instanceof OverloadYield;\n      Promise.resolve(overloaded ? value.v : value).then(function (arg) {\n        if (overloaded) {\n          var nextKey = \"return\" === key ? \"return\" : \"next\";\n          if (!value.k || arg.done) return resume(nextKey, arg);\n          arg = gen[nextKey](arg).value;\n        }\n        settle(result.done ? \"return\" : \"normal\", arg);\n      }, function (err) {\n        resume(\"throw\", err);\n      });\n    } catch (err) {\n      settle(\"throw\", err);\n    }\n  }\n  function settle(type, value) {\n    switch (type) {\n      case \"return\":\n        front.resolve({\n          value: value,\n          done: !0\n        });\n        break;\n      case \"throw\":\n        front.reject(value);\n        break;\n      default:\n        front.resolve({\n          value: value,\n          done: !1\n        });\n    }\n    (front = front.next) ? resume(front.key, front.arg) : back = null;\n  }\n  this._invoke = function (key, arg) {\n    return new Promise(function (resolve, reject) {\n      var request = {\n        key: key,\n        arg: arg,\n        resolve: resolve,\n        reject: reject,\n        next: null\n      };\n      back ? back = back.next = request : (front = back = request, resume(key, arg));\n    });\n  }, \"function\" != typeof gen[\"return\"] && (this[\"return\"] = void 0);\n}\nAsyncGenerator.prototype[\"function\" == typeof Symbol && Symbol.asyncIterator || \"@@asyncIterator\"] = function () {\n  return this;\n}, AsyncGenerator.prototype.next = function (arg) {\n  return this._invoke(\"next\", arg);\n}, AsyncGenerator.prototype[\"throw\"] = function (arg) {\n  return this._invoke(\"throw\", arg);\n}, AsyncGenerator.prototype[\"return\"] = function (arg) {\n  return this._invoke(\"return\", arg);\n};","import AsyncGenerator from \"./AsyncGenerator.js\";\nexport default function _wrapAsyncGenerator(fn) {\n  return function () {\n    return new AsyncGenerator(fn.apply(this, arguments));\n  };\n}"],"names":["VirtualOffset","blockPosition","dataPosition","_classCallCheck","this","_createClass","key","value","concat","b","min","i","_len","arguments","length","args","Array","_key","compareTo","fromBytes","bytes","offset","undefined","Error","Chunk","minv","maxv","bin","fetchedSize","_fetchedSize","toUniqueString","IndexFile","_ref","filehandle","_ref$renameRefSeq","renameRefSeq","n","data","virtualOffset","currentFdl","firstDataLine","_parse","_asyncToGenerator","_regeneratorRuntime","mark","_callee","opts","_this","_args","wrap","_context","prev","next","setupP","catch","e","abrupt","stop","apply","_hasRefSeq","_callee2","seqId","_args2","_context2","parse","t1","t0","sent","indices","binIndex","_x","timeout","ms","Promise","resolve","setTimeout","longToNumber","long","greaterThan","Number","MAX_SAFE_INTEGER","lessThan","MIN_SAFE_INTEGER","toNumber","checkAbortSignal","signal","aborted","DOMException","code","abortBreakPoint","_abortBreakPoint","makeOpts","obj","optimizeChunks","chunks","lowest","mergedChunks","lastChunk","sort","c0","c1","dif","forEach","chunk","chunk1","chunk2","push","roundDown","multiple","BAI","_IndexFile","_inherits","_super","_createSuper","lineCount","Long","prototype","slice","call","_lineCount","refId","prom","index","ret","stats","baiP","readFile","_parse2","binLimit","currOffset","binCount","j","chunkCount","k","u","v","linearCount","linearIndex","_k","bai","maxBlockSize","fetchBai","readUInt32LE","refCount","readInt32LE","parsePseudoBin","_findFirstData","_indexCov","_callee3","start","end","range","indexData","seqIdx","_seqIdx$linearIndex","s","depths","totalSize","currentPos","_args3","_context3","score","map","d","_objectSpread","_x2","_x3","_x4","beg","_blocksForRange","_callee4","max","ba","overlappingBins","_iterator","_step","_step$value","binChunks","c","nintv","minLin","maxLin","vp","_args4","_context4","reg2bins","_createForOfIteratorHelper","done","_slicedToArray","err","f","Math","_x5","_x6","_x7","rshift","num","bits","floor","pow","CSI","maxBinNumber","depth","minShift","auxLength","formatFlags","coordinateType","format","columnNumbers","ref","metaValue","metaChar","String","fromCharCode","skipLines","nameSectionLength","Object","assign","_parseNameBytes","subarray","namesBytes","currRefId","currNameStart","refIdToName","refNameToId","refName","toString","buffer","loffset","csi","unzip","csiVersion","parseAuxData","l","t","bins","SEQRET_DECODER","split","CIGAR_DECODER","BamRecord","_tagList","_allTagsParsed","fileOffset","byteArray","_id","_refID","flags","field","_get","toLowerCase","get","_parseTag","_parseAllTags","tags","isSegmentUnmapped","isPaired","keys","seen","filter","lt","mq","_a","qualRaw","join","_this$bytes","p","lseq","isReverseComplemented","isMateUnmapped","isMateReverseComplemented","nl","_this$bytes2","tagName","lcTag","_this$bytes3","_tagOffset","blockEnd","tag","type","readInt8","readUInt8","readInt16LE","readUInt16LE","readFloatLE","cc","Btype","limit","cigop","console","warn","cigar","match","op","toUpperCase","parseInt","Constants","_this$bytes4","numCigarOps","seqLen","lref","lop","length_on_ref","seq","_this$bytes5","seqBytes","len","buf","sb","_next_refid","s1","s2","o1","o2","isRead1","isRead2","tmp","template_length","_this2","charAt","parseHeaderText","text","lines","line","_line$split","_line$split2","_toArray","parsedFields","_f$split","_f$split2","substr","BAM_MAGIC","blockLen","flat","arr","_toConsumableArray","gen2array","_gen2array","_callee16","gen","out","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","x","_context16","_asyncIterator","return","finish","BamFile","_ref2","_this3","bamFilehandle","bamPath","bamUrl","baiPath","baiFilehandle","baiUrl","csiPath","csiFilehandle","csiUrl","fetchSizeLimit","chunkSizeLimit","_ref2$yieldThreadTime","yieldThreadTime","_ref2$renameRefSeqs","renameRefSeqs","featureCache","AbortablePromiseCache","cache","QuickLRU","maxSize","fill","_fill","_ref3","_yield$_this3$_readCh","cpositions","dpositions","feats","_readChunk","readBamFeatures","bam","LocalFile","RemoteFile","_getHeader","res","bytesRead","uncba","headLen","_yield$this$_readRefS","chrToIndex","indexToChr","read","Buffer","alloc","header","_readRefSeqs","_getHeaderText","getHeader","_readRefSeqs2","refSeqBytes","size","_yield$this$bam$read","nRef","lName","lRef","_getRecordsForRange","_callee5","chr","_args5","_context5","viewAsPairs","pairAcrossChr","maxInsertSize","streamRecordsForRange","_x8","_wrapAsyncGenerator","_callee6","chrId","_context6","_awaitAsyncGenerator","blocksForRange","reduce","a","toLocaleString","delegateYield","_asyncGeneratorDelegate","_fetchChunkFeatures","_callee7","_opts$viewAsPairs","records","recs","_i","feature","_context7","seq_id","fetchPairs","_fetchPairs","_callee9","_opts$pairAcrossChr","_opts$maxInsertSize","unmatedPairs","readIds","matePromises","mateChunks","mateTotalSize","mateFeatPromises","_this4","_context9","readNames","name","id","entries","_ref4","_ref5","pnext","_next_pos","rnext","abs","all","item","pos","ary","_ref6","_callee8","_yield$_this4$_readCh","mateRecs","_context8","_x12","t2","t3","_x9","_x10","_x11","_readChunk2","_callee10","_ref7","_yield$this$bam$read2","_yield$unzipChunkSlic","_context10","unzipChunkSlice","_x13","_readBamFeatures","_callee11","blockStart","sink","last","blockSize","_context11","Date","now","BAMFeature","crc32","_x14","_x15","_x16","_x17","_callee12","seqName","_context12","hasRefSeq","_x18","_callee13","_context13","_x19","_callee14","_context14","indexCov","_x20","_x21","_x22","_callee15","_context15","_x23","_x24","_x25","_x26","_concat","url","headers","rest","_res","startsWith","from","referer","_objectWithoutProperties","_excluded","fetch","ok","statusText","arrayBuffer","elt","HtsgetFile","_BamFile","baseUrl","trackId","base","result","json","htsget","urls","params","c2","headerText","samHeader","idToName","nameToId","sqLine","require","_Symbol$iterator","options","TypeError","Map","oldCache","_size","set","has","_set","deleted","delete","clear","values","_iterator2","_step2","_step2$value","_iterator3","_step3","_iterator4","_step4","_item","_item2","_step5","oldCacheSize","_iterator5","Symbol","iterator","module","exports","__importDefault","mod","__esModule","defineProperty","abortcontroller_ponyfill_1","AggregateAbortController_1","AggregateStatusReporter_1","fillCallback","entry","statusCallback","aborter","default","statusReporter","addCallback","newEntry","promise","message","callback","settled","addSignal","addEventListener","evict","then","error","AbortSignal","cacheEntry","checkSinglePromise","cachedEntry","abort","keyIter","deleteCount","exception","checkForSingleAbort","NullSignal","AggregateAbortController","signals","Set","abortController","AbortController","add","handleAborted","AggregateStatusReporter","callbacks","currentMessage","cjs_ponyfill_1","getGlobal","self","window","global","AbortablePromiseCache_1","support","searchParams","iterable","blob","Blob","formData","viewClasses","isArrayBufferView","ArrayBuffer","isView","indexOf","normalizeName","test","normalizeValue","iteratorFor","items","shift","Headers","append","isArray","getOwnPropertyNames","consumed","body","bodyUsed","reject","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","FileReader","readAsArrayBuffer","bufferClone","view","Uint8Array","byteLength","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","rejected","readAsText","readBlobAsText","chars","readArrayBufferAsText","decode","JSON","oldValue","hasOwnProperty","thisArg","methods","Request","input","credentials","method","mode","upcased","normalizeMethod","referrer","form","trim","replace","decodeURIComponent","parseHeaders","rawHeaders","parts","Response","bodyInit","status","clone","response","redirectStatuses","redirect","RangeError","location","stack","create","constructor","init","request","xhr","XMLHttpRequest","abortXhr","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","onreadystatechange","readyState","removeEventListener","send","polyfill","_OverloadYield","kind","inner","iter","waiting","pump","async","sync","retry","asyncIterator","AsyncFromSyncIterator","AsyncFromSyncIteratorContinuation","r","thr","AsyncGenerator","front","back","resume","arg","overloaded","OverloadYield","nextKey","settle","_invoke","fn"],"sourceRoot":""}