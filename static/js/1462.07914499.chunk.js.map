{"version":3,"file":"static/js/1462.07914499.chunk.js","mappings":"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","sources":["NewSessionCards.tsx","RecentSessionCard.tsx","StartScreen.tsx","../../../node_modules/@mui/icons-material/Warning.js","../../../node_modules/@mui/material/Card/Card.js","../../../node_modules/@mui/material/Card/cardClasses.js","../../../node_modules/@mui/material/CardMedia/CardMedia.js","../../../node_modules/@mui/material/CardMedia/cardMediaClasses.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Card, CardMedia, Container, Typography } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nimport emptyIcon from './img/emptyIcon.png'\nimport linearGenomeViewIcon from './img/linearGenomeViewIcon.png'\nimport svInspectorIcon from './img/svInspectorIcon.png'\n\nconst useStyles = makeStyles()(theme => ({\n  card: {\n    width: 200,\n    height: 150,\n    cursor: 'pointer',\n  },\n  name: {\n    marginTop: 4, // theme.spacing(),\n    textAlign: 'center',\n    maxWidth: 200,\n  },\n  media: {\n    height: 150,\n  },\n}))\n\nconst emptySessionSnapshot = {\n  name: `New session ${new Date().toLocaleString()}`,\n  connections: {},\n}\n\nfunction NewSessionCard({\n  name,\n  onClick = () => {},\n  image,\n}: {\n  name: string\n  onClick: () => void\n  image?: string\n}) {\n  const { classes } = useStyles()\n  const [hovered, setHovered] = useState(false)\n  return (\n    <Container>\n      <Card\n        className={classes.card}\n        onMouseOver={() => setHovered(true)}\n        onMouseOut={() => setHovered(false)}\n        onClick={onClick}\n        raised={Boolean(hovered)}\n      >\n        <CardMedia className={classes.media} image={image} />\n      </Card>\n      <Typography\n        variant=\"subtitle2\"\n        className={classes.name}\n        style={{ cursor: 'pointer' }}\n        onClick={onClick}\n      >\n        {name}\n      </Typography>\n    </Container>\n  )\n}\n\ninterface RootModel {\n  setSession: Function\n}\n\nexport function NewEmptySession({ rootModel }: { rootModel: RootModel }) {\n  return (\n    <NewSessionCard\n      name=\"Empty\"\n      image={emptyIcon}\n      onClick={() => {\n        rootModel.setSession(emptySessionSnapshot)\n      }}\n    />\n  )\n}\n\nexport function NewLinearGenomeViewSession({\n  rootModel,\n}: {\n  rootModel: RootModel\n}) {\n  return (\n    <NewSessionCard\n      name=\"Linear Genome View\"\n      image={linearGenomeViewIcon}\n      onClick={() => {\n        rootModel.setSession({\n          ...emptySessionSnapshot,\n          name: `New session ${new Date().toLocaleString()}`,\n          views: [{ type: 'LinearGenomeView' }],\n        })\n      }}\n    />\n  )\n}\n\nexport function NewSVInspectorSession({ rootModel }: { rootModel: RootModel }) {\n  return (\n    <NewSessionCard\n      name=\"Structural Variant Inspector\"\n      image={svInspectorIcon}\n      onClick={() => {\n        rootModel.setSession({\n          ...emptySessionSnapshot,\n          name: `New session ${new Date().toLocaleString()}`,\n          views: [{ type: 'SvInspectorView' }],\n        })\n      }}\n    />\n  )\n}\n","import React, { useState } from 'react'\nimport {\n  IconButton,\n  ListItem,\n  ListItemIcon,\n  Menu,\n  MenuItem,\n  Tooltip,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\n\nconst useStyles = makeStyles()({\n  menu: {\n    left: '65%',\n  },\n})\n\nfunction RecentSessionCard({\n  sessionName,\n  onClick,\n  onDelete,\n}: {\n  sessionName: string\n  onClick: (arg: string) => void\n  onDelete: (arg: string) => void\n}) {\n  const { classes } = useStyles()\n  const [menuAnchorEl, setMenuAnchorEl] = useState<HTMLElement | null>(null)\n\n  const handleMenuClose = (action: string) => {\n    setMenuAnchorEl(null)\n    if (action === 'delete') {\n      return onDelete(sessionName)\n    }\n    return undefined\n  }\n\n  return (\n    <>\n      <ListItem onClick={() => onClick(sessionName)} button>\n        <Tooltip title={sessionName} enterDelay={300}>\n          <Typography variant=\"body2\" noWrap style={{ width: 250 }}>\n            {sessionName}\n          </Typography>\n        </Tooltip>\n        <IconButton\n          className={classes.menu}\n          onClick={event => {\n            event.stopPropagation()\n            setMenuAnchorEl(event.currentTarget)\n          }}\n        >\n          <MoreVertIcon />\n        </IconButton>\n      </ListItem>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={menuAnchorEl}\n        keepMounted\n        open={Boolean(menuAnchorEl)}\n        onClose={handleMenuClose}\n      >\n        <MenuItem onClick={() => handleMenuClose('delete')}>\n          <ListItemIcon>\n            <DeleteIcon />\n          </ListItemIcon>\n          <Typography variant=\"inherit\">Delete</Typography>\n        </MenuItem>\n      </Menu>\n    </>\n  )\n}\n\nexport default RecentSessionCard\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useEffect, useState } from 'react'\nimport {\n  Button,\n  CircularProgress,\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n  IconButton,\n  List,\n  ListItemIcon,\n  ListSubheader,\n  Menu,\n  MenuItem,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { LogoFull, FactoryResetDialog, ErrorMessage } from '@jbrowse/core/ui'\n\n// icons\nimport WarningIcon from '@mui/icons-material/Warning'\nimport SettingsIcon from '@mui/icons-material/Settings'\n\n// locals\nimport {\n  NewEmptySession,\n  NewLinearGenomeViewSession,\n  NewSVInspectorSession,\n} from './NewSessionCards'\nimport RecentSessionCard from './RecentSessionCard'\n\nconst useStyles = makeStyles()(theme => ({\n  newSession: {\n    backgroundColor: theme.palette?.grey['300'],\n    padding: 8,\n    marginTop: 8,\n  },\n  header: {\n    margin: 8, // theme.spacing(2),\n  },\n  settings: {\n    float: 'right',\n  },\n}))\n\nconst DeleteSessionDialog = ({\n  sessionToDelete,\n  onClose,\n  rootModel,\n}: {\n  sessionToDelete?: string\n  onClose: (_arg0: boolean) => void\n  rootModel: any\n}) => {\n  const [deleteSession, setDeleteSession] = useState(false)\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      try {\n        if (deleteSession) {\n          setDeleteSession(false)\n          rootModel.removeSavedSession({ name: sessionToDelete })\n          onClose(true)\n        }\n      } catch (e) {\n        setDeleteSession(() => {\n          throw e\n        })\n      }\n    })()\n  }, [deleteSession, onClose, rootModel, sessionToDelete])\n\n  return (\n    <Dialog open={!!sessionToDelete} onClose={() => onClose(false)}>\n      <DialogTitle id=\"alert-dialog-title\">\n        {`Delete session \"${sessionToDelete}\"?`}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          This action cannot be undone\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => onClose(false)} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={() => setDeleteSession(true)}\n          color=\"primary\"\n          variant=\"contained\"\n          autoFocus\n        >\n          Delete\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default function StartScreen({\n  rootModel,\n  onFactoryReset,\n}: {\n  rootModel: any\n  onFactoryReset: Function\n}) {\n  const { classes } = useStyles()\n\n  const [sessionNames, setSessionNames] = useState<string[]>([])\n  const [sessionToDelete, setSessionToDelete] = useState<string>()\n  const [sessionToLoad, setSessionToLoad] = useState<string>()\n  const [error, setError] = useState<unknown>()\n  const [updateSessionsList, setUpdateSessionsList] = useState(true)\n  const [menuAnchorEl, setMenuAnchorEl] = useState<null | HTMLElement>(null)\n  const [reset, setReset] = useState(false)\n\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      try {\n        if (sessionToLoad) {\n          rootModel.activateSession(sessionToLoad)\n        }\n      } catch (e) {\n        setError(e)\n      }\n    })()\n  }, [rootModel, sessionToLoad])\n\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      try {\n        if (updateSessionsList) {\n          setUpdateSessionsList(false)\n          setSessionNames(rootModel.savedSessions.map((s: any) => s?.name))\n        }\n      } catch (e) {\n        setError(e)\n      }\n    })()\n  }, [rootModel.savedSessions, updateSessionsList])\n\n  return !sessionNames ? (\n    <CircularProgress\n      style={{\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        marginTop: -25,\n        marginLeft: -25,\n      }}\n      size={50}\n    />\n  ) : (\n    <>\n      <FactoryResetDialog\n        open={reset}\n        onFactoryReset={onFactoryReset}\n        onClose={() => {\n          setReset(false)\n        }}\n      />\n      <DeleteSessionDialog\n        rootModel={rootModel}\n        sessionToDelete={sessionToDelete}\n        onClose={update => {\n          setSessionToDelete(undefined)\n          setUpdateSessionsList(update)\n        }}\n      />\n      <IconButton\n        className={classes.settings}\n        onClick={event => {\n          event.stopPropagation()\n          setMenuAnchorEl(event.currentTarget)\n        }}\n      >\n        <SettingsIcon />\n      </IconButton>\n      <Container maxWidth=\"md\">\n        <LogoFull />\n        <div className={classes.newSession}>\n          <Typography variant=\"h5\" className={classes.header}>\n            Start a new session\n          </Typography>\n          <Grid container spacing={4}>\n            <Grid item>\n              <NewEmptySession rootModel={rootModel} />\n            </Grid>\n            <Grid item>\n              <NewLinearGenomeViewSession rootModel={rootModel} />\n            </Grid>\n            <Grid item>\n              <NewSVInspectorSession rootModel={rootModel} />\n            </Grid>\n          </Grid>\n        </div>\n        <div>\n          <Typography variant=\"h5\" className={classes.header}>\n            Recent sessions\n          </Typography>\n          <List\n            style={{\n              overflow: 'auto',\n              maxHeight: 200,\n            }}\n          >\n            {sessionNames?.map((name: string) => (\n              <RecentSessionCard\n                key={name}\n                sessionName={name}\n                onClick={() => setSessionToLoad(name)}\n                onDelete={() => setSessionToDelete(name)}\n              />\n            ))}\n          </List>\n          {error ? <ErrorMessage error={error} /> : null}\n        </div>\n      </Container>\n\n      <Menu\n        anchorEl={menuAnchorEl}\n        keepMounted\n        open={Boolean(menuAnchorEl)}\n        onClose={() => setMenuAnchorEl(null)}\n      >\n        <ListSubheader>Advanced Settings</ListSubheader>\n        <MenuItem\n          onClick={() => {\n            setReset(true)\n            setMenuAnchorEl(null)\n          }}\n        >\n          <ListItemIcon>\n            <WarningIcon />\n          </ListItemIcon>\n          <Typography variant=\"inherit\">Reset</Typography>\n        </MenuItem>\n      </Menu>\n    </>\n  )\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"\n}), 'Warning');\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"image\", \"src\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCardMediaUtilityClass } from './cardMediaClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = ownerState;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\nconst CardMediaRoot = styled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = ownerState;\n    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center'\n}, ownerState.isMediaComponent && {\n  width: '100%'\n}, ownerState.isImageComponent && {\n  // ⚠️ object-fit is not supported by IE11.\n  objectFit: 'cover'\n}));\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      image,\n      src,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isMediaComponent = MEDIA_COMPONENTS.indexOf(component) !== -1;\n  const composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: `url(\"${image}\")`\n  }, style) : style;\n  const ownerState = _extends({}, props, {\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.indexOf(component) !== -1\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardMediaRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    role: !isMediaComponent && image ? 'img' : undefined,\n    ref: ref,\n    style: composedStyle,\n    ownerState: ownerState,\n    src: isMediaComponent ? image || src : undefined\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('MUI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardMedia;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;"],"names":["useStyles","makeStyles","theme","card","width","height","cursor","name","marginTop","textAlign","maxWidth","media","emptySessionSnapshot","Date","toLocaleString","connections","NewSessionCard","onClick","image","classes","useState","hovered","setHovered","Container","Card","className","onMouseOver","onMouseOut","raised","Boolean","CardMedia","Typography","variant","style","NewEmptySession","rootModel","emptyIcon","setSession","NewLinearGenomeViewSession","linearGenomeViewIcon","views","type","NewSVInspectorSession","svInspectorIcon","menu","left","sessionName","onDelete","menuAnchorEl","setMenuAnchorEl","handleMenuClose","action","ListItem","button","Tooltip","title","enterDelay","noWrap","IconButton","event","stopPropagation","currentTarget","MoreVert","Menu","id","anchorEl","keepMounted","open","onClose","MenuItem","ListItemIcon","Delete","newSession","backgroundColor","palette","grey","padding","header","margin","settings","float","DeleteSessionDialog","sessionToDelete","deleteSession","setDeleteSession","useEffect","removeSavedSession","e","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","color","autoFocus","StartScreen","onFactoryReset","sessionNames","setSessionNames","setSessionToDelete","sessionToLoad","setSessionToLoad","error","setError","updateSessionsList","setUpdateSessionsList","reset","setReset","activateSession","savedSessions","map","s","FactoryResetDialog","update","undefined","Settings","LogoFull","Grid","container","spacing","item","List","overflow","maxHeight","ErrorMessage","ListSubheader","Warning","CircularProgress","position","top","marginLeft","size","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","_excluded","CardRoot","styled","Paper","slot","overridesResolver","props","styles","root","React","inProps","ref","useThemeProps","other","_objectWithoutPropertiesLoose","ownerState","_extends","composeClasses","getCardUtilityClass","useUtilityClasses","_jsx","clsx","elevation","generateUtilityClass","cardClasses","generateUtilityClasses","CardMediaRoot","isMediaComponent","isImageComponent","img","display","backgroundSize","backgroundRepeat","backgroundPosition","objectFit","MEDIA_COMPONENTS","IMAGE_COMPONENTS","children","component","src","indexOf","composedStyle","backgroundImage","slots","getCardMediaUtilityClass","as","role","cardMediaClasses"],"sourceRoot":""}