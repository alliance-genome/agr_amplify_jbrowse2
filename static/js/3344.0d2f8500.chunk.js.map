{"version":3,"file":"static/js/3344.0d2f8500.chunk.js","mappings":"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","sources":["../../../plugins/alignments/src/BamAdapter/BamSlightlyLazyFeature.ts","../../../plugins/alignments/src/BamAdapter/BamAdapter.ts","../../../plugins/alignments/src/HtsgetBamAdapter/HtsgetBamAdapter.ts"],"sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport {\n  Feature,\n  SimpleFeatureSerialized,\n} from '@jbrowse/core/util/simpleFeature'\nimport { BamRecord } from '@gmod/bam'\n\n// locals\nimport { getClip, getMismatches } from '../MismatchParser'\nimport BamAdapter from './BamAdapter'\n\nexport default class BamSlightlyLazyFeature implements Feature {\n  // uses parameter properties to automatically create fields on the class\n  // https://www.typescriptlang.org/docs/handbook/classes.html#parameter-properties\n  constructor(\n    private record: BamRecord,\n    private adapter: BamAdapter,\n    private ref?: string,\n  ) {}\n\n  _get_name() {\n    return this.record.get('name')\n  }\n\n  _get_type(): string {\n    return 'match'\n  }\n\n  _get_score(): number {\n    return this.record.get('mq')\n  }\n\n  _get_flags(): string {\n    return this.record.flags\n  }\n\n  _get_strand(): number {\n    return this.record.isReverseComplemented() ? -1 : 1\n  }\n\n  _get_pair_orientation() {\n    return this.record.isPaired() ? this.record.getPairOrientation() : undefined\n  }\n\n  _get_next_ref() {\n    return this.record.isPaired()\n      ? this.adapter.refIdToName(this.record._next_refid())\n      : undefined\n  }\n\n  _get_next_pos() {\n    return this.record.isPaired() ? this.record._next_pos() : undefined\n  }\n\n  _get_next_segment_position() {\n    return this.record.isPaired()\n      ? `${this.adapter.refIdToName(this.record._next_refid())}:${\n          this.record._next_pos() + 1\n        }`\n      : undefined\n  }\n\n  _get_seq() {\n    return this.record.getReadBases()\n  }\n\n  qualRaw() {\n    return this.record.qualRaw()\n  }\n\n  set() {}\n\n  tags() {\n    const properties = Object.getOwnPropertyNames(\n      BamSlightlyLazyFeature.prototype,\n    )\n\n    return [\n      ...new Set(\n        properties\n          .filter(\n            prop =>\n              prop.startsWith('_get_') &&\n              prop !== '_get_mismatches' &&\n              prop !== '_get_tags',\n          )\n          .map(methodName => methodName.replace('_get_', ''))\n          .concat(this.record._tags()),\n      ),\n    ]\n  }\n\n  id() {\n    return `${this.adapter.id}-${this.record.id()}`\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  get(field: string): any {\n    const methodName = `_get_${field}`\n    // @ts-ignore\n    if (this[methodName]) {\n      // @ts-ignore\n      return this[methodName]()\n    }\n    return this.record.get(field)\n  }\n\n  _get_refName() {\n    return this.adapter.refIdToName(this.record.seq_id())\n  }\n\n  parent() {\n    return undefined\n  }\n\n  children() {\n    return undefined\n  }\n\n  pairedFeature() {\n    return false\n  }\n\n  toJSON(): SimpleFeatureSerialized {\n    return {\n      ...Object.fromEntries(\n        this.tags()\n          .map(t => [t, this.get(t)])\n          .filter(elt => elt[1] !== undefined),\n      ),\n      uniqueId: this.id(),\n    }\n  }\n\n  _get_mismatches() {\n    return getMismatches(\n      this.get('CIGAR'),\n      this.get('MD'),\n      this.get('seq'),\n      this.ref,\n      this.qualRaw(),\n    )\n  }\n\n  _get_clipPos() {\n    const cigar = this.get('CIGAR') || ''\n    return getClip(cigar, this.get('strand'))\n  }\n}\n","import { BamFile } from '@gmod/bam'\nimport {\n  BaseFeatureDataAdapter,\n  BaseOptions,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { Region } from '@jbrowse/core/util/types'\nimport { bytesForRegions, updateStatus, Feature } from '@jbrowse/core/util'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport { toArray } from 'rxjs/operators'\n\n// locals\nimport BamSlightlyLazyFeature from './BamSlightlyLazyFeature'\nimport { firstValueFrom } from 'rxjs'\n\ninterface Header {\n  idToName: string[]\n  nameToId: Record<string, number>\n}\n\nexport default class BamAdapter extends BaseFeatureDataAdapter {\n  private samHeader?: Header\n\n  private setupP?: Promise<Header>\n  private configureP?: Promise<{\n    bam: BamFile\n    sequenceAdapter?: BaseFeatureDataAdapter\n  }>\n\n  // derived classes may not use the same configuration so a custom\n  // configure method allows derived classes to override this behavior\n  protected async configurePre() {\n    const bamLocation = this.getConf('bamLocation')\n    const location = this.getConf(['index', 'location'])\n    const indexType = this.getConf(['index', 'indexType'])\n    const pm = this.pluginManager\n    const csi = indexType === 'CSI'\n    const bam = new BamFile({\n      bamFilehandle: openLocation(bamLocation, pm),\n      csiFilehandle: csi ? openLocation(location, pm) : undefined,\n      baiFilehandle: !csi ? openLocation(location, pm) : undefined,\n\n      // chunkSizeLimit and fetchSizeLimit are more troublesome than\n      // helpful, and have given overly large values on the ultra long\n      // nanopore reads even with 500MB limits, so disabled with infinity\n      chunkSizeLimit: Infinity,\n      fetchSizeLimit: Infinity,\n      yieldThreadTime: Infinity,\n    })\n\n    const adapterConfig = this.getConf('sequenceAdapter')\n    if (adapterConfig && this.getSubAdapter) {\n      const { dataAdapter } = await this.getSubAdapter(adapterConfig)\n      return {\n        bam,\n        sequenceAdapter: dataAdapter as BaseFeatureDataAdapter,\n      }\n    } else {\n      return { bam }\n    }\n  }\n\n  protected async configure() {\n    if (!this.configureP) {\n      this.configureP = this.configurePre().catch(e => {\n        this.configureP = undefined\n        throw e\n      })\n    }\n    return this.configureP\n  }\n\n  async getHeader(opts?: BaseOptions) {\n    const { bam } = await this.configure()\n    return bam.getHeaderText(opts)\n  }\n\n  private async setupPre(opts?: BaseOptions) {\n    const { statusCallback = () => {} } = opts || {}\n    const { bam } = await this.configure()\n    this.samHeader = await updateStatus(\n      'Downloading index',\n      statusCallback,\n      async () => {\n        const samHeader = await bam.getHeader(opts)\n\n        // use the @SQ lines in the header to figure out the\n        // mapping between ref ref ID numbers and names\n        const idToName: string[] = []\n        const nameToId: Record<string, number> = {}\n        samHeader\n          .filter(l => l.tag === 'SQ')\n          .forEach((sqLine, refId) => {\n            sqLine.data.forEach(item => {\n              if (item.tag === 'SN') {\n                // this is the ref name\n                const refName = item.value\n                nameToId[refName] = refId\n                idToName[refId] = refName\n              }\n            })\n          })\n\n        return { idToName, nameToId }\n      },\n    )\n    return this.samHeader\n  }\n\n  async setup(opts?: BaseOptions) {\n    if (!this.setupP) {\n      this.setupP = this.setupPre(opts).catch(e => {\n        this.setupP = undefined\n        throw e\n      })\n    }\n    return this.setupP\n  }\n\n  async getRefNames(opts?: BaseOptions) {\n    const { idToName } = await this.setup(opts)\n    return idToName\n  }\n\n  private async seqFetch(refName: string, start: number, end: number) {\n    const { sequenceAdapter } = await this.configure()\n    const refSeqStore = sequenceAdapter\n    if (!refSeqStore) {\n      return undefined\n    }\n    if (!refName) {\n      return undefined\n    }\n\n    const features = refSeqStore.getFeatures({\n      refName,\n      start,\n      end,\n      assemblyName: '',\n    })\n\n    const seqChunks = await firstValueFrom(features.pipe(toArray()))\n\n    let sequence = ''\n    seqChunks\n      .sort((a, b) => a.get('start') - b.get('start'))\n      .forEach(chunk => {\n        const chunkStart = chunk.get('start')\n        const chunkEnd = chunk.get('end')\n        const trimStart = Math.max(start - chunkStart, 0)\n        const trimEnd = Math.min(end - chunkStart, chunkEnd - chunkStart)\n        const trimLength = trimEnd - trimStart\n        const chunkSeq = chunk.get('seq') || chunk.get('residues')\n        sequence += chunkSeq.substr(trimStart, trimLength)\n      })\n\n    if (sequence.length !== end - start) {\n      throw new Error(\n        `sequence fetch failed: fetching ${refName}:${(\n          start - 1\n        ).toLocaleString()}-${end.toLocaleString()} returned ${sequence.length.toLocaleString()} bases, but should have returned ${(\n          end - start\n        ).toLocaleString()}`,\n      )\n    }\n    return sequence\n  }\n\n  getFeatures(\n    region: Region & { originalRefName?: string },\n    opts?: BaseOptions & {\n      filterBy: {\n        flagInclude: number\n        flagExclude: number\n        tagFilter: { tag: string; value: unknown }\n        readName: string\n      }\n    },\n  ) {\n    const { refName, start, end, originalRefName } = region\n    const { signal, filterBy, statusCallback = () => {} } = opts || {}\n    return ObservableCreate<Feature>(async observer => {\n      const { bam } = await this.configure()\n      await this.setup(opts)\n      statusCallback('Downloading alignments')\n      const records = await bam.getRecordsForRange(refName, start, end, opts)\n\n      const {\n        flagInclude = 0,\n        flagExclude = 0,\n        tagFilter,\n        readName,\n      } = filterBy || {}\n\n      for (const record of records) {\n        let ref: string | undefined\n        if (!record.get('MD')) {\n          ref = await this.seqFetch(\n            originalRefName || refName,\n            record.get('start'),\n            record.get('end'),\n          )\n        }\n\n        const flags = record.flags\n        if (\n          !((flags & flagInclude) === flagInclude && !(flags & flagExclude))\n        ) {\n          continue\n        }\n\n        if (tagFilter) {\n          const val = record.get(tagFilter.tag)\n          if (!(val === '*' ? val !== undefined : val === tagFilter.value)) {\n            continue\n          }\n        }\n\n        if (readName && record.get('name') !== readName) {\n          continue\n        }\n\n        observer.next(new BamSlightlyLazyFeature(record, this, ref))\n      }\n      statusCallback('')\n      observer.complete()\n    }, signal)\n  }\n\n  async estimateRegionsStats(regions: Region[], opts?: BaseOptions) {\n    const { bam } = await this.configure()\n    // this is a method to avoid calling on htsget adapters\n    // @ts-ignore\n    if (bam.index.filehandle !== '?') {\n      const bytes = await bytesForRegions(regions, bam)\n      const fetchSizeLimit = this.getConf('fetchSizeLimit')\n      return { bytes, fetchSizeLimit }\n    } else {\n      return super.estimateRegionsStats(regions, opts)\n    }\n  }\n\n  freeResources(/* { region } */): void {}\n\n  // depends on setup being called before the BAM constructor\n  refIdToName(refId: number) {\n    return this.samHeader?.idToName[refId]\n  }\n}\n","import { BamFile, HtsgetFile } from '@gmod/bam'\nimport { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport BamAdapter from '../BamAdapter/BamAdapter'\n\nexport default class HtsgetBamAdapter extends BamAdapter {\n  protected async configurePre() {\n    const htsgetBase = this.getConf('htsgetBase')\n    const htsgetTrackId = this.getConf('htsgetTrackId')\n    const bam = new HtsgetFile({\n      baseUrl: htsgetBase,\n      trackId: htsgetTrackId,\n    }) as unknown as BamFile\n\n    const adapterConfig = this.getConf('sequenceAdapter')\n    if (adapterConfig && this.getSubAdapter) {\n      const adapter = await this.getSubAdapter(adapterConfig)\n      return {\n        bam,\n        sequenceAdapter: adapter.dataAdapter as BaseFeatureDataAdapter,\n      }\n    }\n    return { bam }\n  }\n}\n"],"names":["BamSlightlyLazyFeature","record","adapter","ref","_classCallCheck","_createClass","key","value","this","get","flags","isReverseComplemented","isPaired","getPairOrientation","undefined","refIdToName","_next_refid","_next_pos","concat","getReadBases","qualRaw","properties","Object","getOwnPropertyNames","prototype","_toConsumableArray","Set","filter","prop","startsWith","map","methodName","replace","_tags","id","field","seq_id","_this","_objectSpread","fromEntries","tags","t","elt","uniqueId","getMismatches","cigar","getClip","BamAdapter","_BaseFeatureDataAdapt","_inherits","_super","_createSuper","_len","arguments","length","args","Array","_key","call","apply","samHeader","setupP","configureP","_configurePre","_asyncToGenerator","_regeneratorRuntime","mark","_callee","bamLocation","location","indexType","pm","csi","bam","adapterConfig","_yield$this$getSubAda","dataAdapter","wrap","_context","prev","next","getConf","pluginManager","BamFile","bamFilehandle","openLocation","csiFilehandle","baiFilehandle","chunkSizeLimit","Infinity","fetchSizeLimit","yieldThreadTime","getSubAdapter","sent","abrupt","sequenceAdapter","stop","_configure","_callee2","_this2","_context2","configurePre","catch","e","_getHeader","_callee3","opts","_yield$this$configure","_context3","configure","getHeaderText","_x","_setupPre","_callee5","_ref$statusCallback","statusCallback","_yield$this$configure2","_context5","updateStatus","_callee4","idToName","nameToId","_context4","getHeader","l","tag","forEach","sqLine","refId","data","item","refName","_x2","_setup","_callee6","_this3","_context6","setupPre","_x3","_getRefNames","_callee7","_yield$this$setup","_context7","setup","_x4","_seqFetch","_callee8","start","end","_yield$this$configure3","refSeqStore","features","seqChunks","sequence","_context8","getFeatures","assemblyName","firstValueFrom","pipe","toArray","sort","a","b","chunk","chunkStart","chunkEnd","trimStart","Math","max","trimLength","min","chunkSeq","substr","Error","toLocaleString","_x5","_x6","_x7","region","_this4","originalRefName","_ref3","signal","filterBy","_ref3$statusCallback","ObservableCreate","_ref4","_callee9","observer","_yield$_this4$configu","records","_ref5","_ref5$flagInclude","flagInclude","_ref5$flagExclude","flagExclude","tagFilter","readName","_iterator","_step","val","_context9","getRecordsForRange","_createForOfIteratorHelper","s","n","done","seqFetch","t0","f","finish","complete","_x8","_estimateRegionsStats","_callee10","regions","_yield$this$configure4","bytes","_context10","index","filehandle","bytesForRegions","_get","_getPrototypeOf","_x9","_x10","_this$samHeader","BaseFeatureDataAdapter","HtsgetBamAdapter","_BamAdapter","htsgetBase","htsgetTrackId","HtsgetFile","baseUrl","trackId"],"sourceRoot":""}