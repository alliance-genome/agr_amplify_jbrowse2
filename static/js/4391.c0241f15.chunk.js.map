{"version":3,"file":"static/js/4391.c0241f15.chunk.js","mappings":"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","sources":["../../../plugins/alignments/src/shared/FilterByTag.tsx","../../../node_modules/@mui/material/Link/getTextDecoration.js","../../../node_modules/@mui/material/Link/Link.js","../../../node_modules/@mui/material/Link/linkClasses.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  Link,\n  Paper,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(2),\n  },\n  field: {\n    margin: theme.spacing(2),\n  },\n}))\n\nconst flagNames = [\n  'read paired',\n  'read mapped in proper pair',\n  'read unmapped',\n  'mate unmapped',\n  'read reverse strand',\n  'mate reverse strand',\n  'first in pair',\n  'second in pair',\n  'not primary alignment',\n  'read fails platform/vendor quality checks',\n  'read is PCR or optical duplicate',\n  'supplementary alignment',\n]\n\nfunction Bitmask(props: { flag?: number; setFlag: Function }) {\n  const { flag = 0, setFlag } = props\n  return (\n    <>\n      <TextField\n        type=\"number\"\n        value={flag}\n        onChange={event => setFlag(+event.target.value)}\n      />\n      {flagNames.map((name, index) => {\n        const val = flag & (1 << index)\n        const key = `${name}_${val}`\n        return (\n          <div key={key}>\n            <input\n              type=\"checkbox\"\n              checked={Boolean(val)}\n              onChange={event => {\n                if (event.target.checked) {\n                  setFlag(flag | (1 << index))\n                } else {\n                  setFlag(flag & ~(1 << index))\n                }\n              }}\n            />\n            <label htmlFor={key}>{name}</label>\n          </div>\n        )\n      })}\n    </>\n  )\n}\n\nfunction FilterByTagDlg(props: {\n  model: {\n    filterBy?: {\n      flagExclude: number\n      flagInclude: number\n      readName?: string\n      tagFilter?: { tag: string; value: string }\n    }\n    setFilterBy: Function\n  }\n  handleClose: () => void\n}) {\n  const { model, handleClose } = props\n  const { classes } = useStyles()\n  const { filterBy } = model\n  const [flagInclude, setFlagInclude] = useState(filterBy?.flagInclude)\n  const [flagExclude, setFlagExclude] = useState(filterBy?.flagExclude)\n  const [tag, setTag] = useState(filterBy?.tagFilter?.tag || '')\n  const [tagValue, setTagValue] = useState(filterBy?.tagFilter?.value || '')\n  const [readName, setReadName] = useState(filterBy?.readName || '')\n  const validTag = tag.match(/^[A-Za-z][A-Za-z0-9]$/)\n\n  const site = 'https://broadinstitute.github.io/picard/explain-flags.html'\n\n  return (\n    <Dialog open onClose={handleClose} title=\"Filter options\">\n      <DialogContent>\n        <Typography>\n          Set filter bitmask options. Refer to <Link href={site}>{site}</Link>{' '}\n          for details\n        </Typography>\n        <Paper className={classes.paper} variant=\"outlined\">\n          <div style={{ display: 'flex' }}>\n            <div>\n              <Typography>Read must have ALL these flags</Typography>\n              <Bitmask flag={flagInclude} setFlag={setFlagInclude} />\n            </div>\n            <div>\n              <Typography>Read must have NONE of these flags</Typography>\n              <Bitmask flag={flagExclude} setFlag={setFlagExclude} />\n            </div>\n          </div>\n        </Paper>\n        <Paper className={classes.paper} variant=\"outlined\">\n          <Typography>\n            Filter by tag name and value. Use * in the value field to get all\n            reads containing any value for that tag. Example: filter tag name SA\n            with value * to get all split/supplementary reads. Other examples\n            include HP for haplotype, or RG for read group\n          </Typography>\n          <TextField\n            className={classes.field}\n            value={tag}\n            onChange={event => setTag(event.target.value)}\n            placeholder=\"Enter tag name\"\n            inputProps={{\n              maxLength: 2,\n              'data-testid': 'color-tag-name-input',\n            }}\n            error={tag.length === 2 && !validTag}\n            helperText={tag.length === 2 && !validTag ? 'Not a valid tag' : ''}\n            data-testid=\"color-tag-name\"\n          />\n          <TextField\n            className={classes.field}\n            value={tagValue}\n            onChange={event => setTagValue(event.target.value)}\n            placeholder=\"Enter tag value\"\n            inputProps={{\n              'data-testid': 'color-tag-name-input',\n            }}\n            data-testid=\"color-tag-value\"\n          />\n        </Paper>\n        <Paper className={classes.paper} variant=\"outlined\">\n          <Typography>Filter by read name</Typography>\n          <TextField\n            className={classes.field}\n            value={readName}\n            onChange={event => setReadName(event.target.value)}\n            placeholder=\"Enter read name\"\n            inputProps={{\n              'data-testid': 'color-tag-readname-input',\n            }}\n            data-testid=\"color-tag-readname\"\n          />\n        </Paper>\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            autoFocus\n            type=\"submit\"\n            onClick={() => {\n              model.setFilterBy({\n                flagInclude,\n                flagExclude,\n                readName,\n                tagFilter:\n                  tag !== ''\n                    ? {\n                        tag,\n                        value: tagValue,\n                      }\n                    : undefined,\n              })\n              handleClose()\n            }}\n          >\n            Submit\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => handleClose()}\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default observer(FilterByTagDlg)\n","import { alpha, getPath } from '@mui/system';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n    },\n\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const {\n      className,\n      color = 'primary',\n      component = 'a',\n      onBlur,\n      onFocus,\n      TypographyClasses,\n      underline = 'always',\n      variant = 'inherit',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n  const handleBlur = event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;"],"names":["useStyles","makeStyles","theme","paper","padding","spacing","margin","field","flagNames","Bitmask","props","_props$flag","flag","setFlag","_jsxs","_Fragment","children","_jsx","TextField","type","value","onChange","event","target","map","name","index","val","key","concat","checked","Boolean","htmlFor","observer","_filterBy$tagFilter","_filterBy$tagFilter2","model","handleClose","classes","filterBy","_useState","useState","flagInclude","_useState2","_slicedToArray","setFlagInclude","_useState3","flagExclude","_useState4","setFlagExclude","_useState5","tagFilter","tag","_useState6","setTag","_useState7","_useState8","tagValue","setTagValue","_useState9","readName","_useState10","setReadName","validTag","match","site","Dialog","open","onClose","title","DialogContent","Typography","Link","href","Paper","className","variant","style","display","placeholder","inputProps","maxLength","error","length","helperText","DialogActions","Button","color","autoFocus","onClick","setFilterBy","undefined","colorTransformations","primary","textPrimary","secondary","textSecondary","_ref","ownerState","transformedColor","transformDeprecatedColors","getPath","channelColor","alpha","_excluded","LinkRoot","styled","slot","overridesResolver","styles","root","capitalize","underline","component","button","_extends","textDecoration","textDecorationColor","getTextDecoration","_defineProperty","position","WebkitTapHighlightColor","backgroundColor","outline","border","borderRadius","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","React","inProps","ref","useThemeProps","_props$color","_props$component","onBlur","onFocus","TypographyClasses","_props$underline","_props$variant","sx","other","_objectWithoutPropertiesLoose","_useIsFocusVisible","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","_React$useState","_React$useState2","focusVisible","setFocusVisible","handlerRef","useForkRef","slots","composeClasses","getLinkUtilityClass","useUtilityClasses","clsx","current","_toConsumableArray","Object","keys","includes","Array","isArray","generateUtilityClass","generateUtilityClasses"],"sourceRoot":""}