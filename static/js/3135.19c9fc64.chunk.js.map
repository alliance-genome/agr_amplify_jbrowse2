{"version":3,"file":"static/js/3135.19c9fc64.chunk.js","mappings":"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","sources":["../../../plugins/spreadsheet-view/src/SpreadsheetView/components/NumberEditor.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/ImportWizard.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/RowMenu.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/CellData.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/DataRow.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/ColumnMenu.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/SortIndicator.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/util.ts","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/DataTableHeader.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/DataTable.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/Spreadsheet.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/GlobalFilterControls.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/ColumnFilterControls.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/RowCountMessage.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/StatusBar.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/SpreadsheetView.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { TextField } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\n\n// locals\nimport { ImportWizardModel } from '../models/ImportWizard'\n\nconst useStyles = makeStyles()({\n  textField: {\n    width: '2rem',\n    verticalAlign: 'baseline',\n  },\n})\n\nexport default observer(function ({\n  model,\n  disabled,\n  modelPropName,\n  modelSetterName,\n}: {\n  model: ImportWizardModel\n  disabled: boolean\n  modelPropName: string\n  modelSetterName: string\n}) {\n  // @ts-expect-error\n  const [val, setVal] = useState(model[modelPropName])\n  const { classes } = useStyles()\n  useEffect(() => {\n    const num = Number.parseInt(val, 10)\n    if (!Number.isNaN(num)) {\n      if (num > 0) {\n        // @ts-expect-error\n        model[modelSetterName](num)\n      } else {\n        setVal(1)\n      }\n    }\n  }, [model, modelSetterName, val])\n  return (\n    <TextField\n      value={val}\n      disabled={disabled}\n      type=\"number\"\n      onChange={evt => setVal(evt.target.value)}\n      className={classes.textField}\n    />\n  )\n})\n","import React, { useState } from 'react'\nimport {\n  Button,\n  Checkbox,\n  FormControl,\n  FormGroup,\n  FormLabel,\n  FormControlLabel,\n  RadioGroup,\n  Radio,\n} from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { getRoot } from 'mobx-state-tree'\nimport { AbstractRootModel, getSession } from '@jbrowse/core/util'\nimport { FileSelector, ErrorMessage, AssemblySelector } from '@jbrowse/core/ui'\n\n// locals\nimport { ImportWizardModel } from '../models/ImportWizard'\nimport NumberEditor from './NumberEditor'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()({\n  container: {\n    margin: '0 auto',\n    maxWidth: '25em',\n    padding: 20,\n  },\n})\n\nconst ImportWizard = observer(({ model }: { model: ImportWizardModel }) => {\n  const session = getSession(model)\n  const { classes } = useStyles()\n  const { assemblyNames, assemblyManager } = session\n  const {\n    fileType,\n    canCancel,\n    fileSource,\n    isReadyToOpen,\n    fileTypes,\n    hasColumnNameLine,\n    error,\n  } = model\n  const [selected, setSelected] = useState(assemblyNames[0])\n  const err = assemblyManager.get(selected)?.error || error\n  const showRowControls = fileType === 'CSV' || fileType === 'TSV'\n  const rootModel = getRoot(model)\n\n  return (\n    <div className={classes.container}>\n      {err ? <ErrorMessage error={err} /> : null}\n      <div>\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Tabular file</FormLabel>\n          <FormGroup>\n            <FileSelector\n              location={fileSource}\n              setLocation={arg => model.setFileSource(arg)}\n              rootModel={rootModel as AbstractRootModel}\n            />\n          </FormGroup>\n        </FormControl>\n      </div>\n      <div>\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">File Type</FormLabel>\n          <RadioGroup row aria-label=\"file type\" name=\"type\" value={fileType}>\n            {fileTypes.map(fileTypeName => (\n              <FormControlLabel\n                key={fileTypeName}\n                checked={fileType === fileTypeName}\n                value={fileTypeName}\n                onClick={() => model.setFileType(fileTypeName)}\n                control={<Radio />}\n                label={fileTypeName}\n              />\n            ))}\n          </RadioGroup>\n        </FormControl>\n      </div>\n      {showRowControls ? (\n        <div>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Column Names</FormLabel>\n            <FormControlLabel\n              disabled={!showRowControls}\n              label=\"has column names on line\"\n              labelPlacement=\"end\"\n              control={\n                <Checkbox\n                  checked={hasColumnNameLine}\n                  onClick={() => model.toggleHasColumnNameLine()}\n                />\n              }\n            />\n            <NumberEditor\n              model={model}\n              disabled={!showRowControls || !hasColumnNameLine}\n              modelPropName=\"columnNameLineNumber\"\n              modelSetterName=\"setColumnNameLineNumber\"\n            />\n          </FormControl>\n        </div>\n      ) : null}\n      <div>\n        <AssemblySelector\n          session={session}\n          selected={selected}\n          onChange={val => setSelected(val)}\n        />\n      </div>\n      <div>\n        {canCancel ? (\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => model.cancelButton()}\n            disabled={!canCancel}\n          >\n            Cancel\n          </Button>\n        ) : null}{' '}\n        <Button\n          disabled={!isReadyToOpen || !!err}\n          variant=\"contained\"\n          data-testid=\"open_spreadsheet\"\n          color=\"primary\"\n          onClick={() => {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            model.import(selected)\n          }}\n        >\n          Open\n        </Button>\n      </div>\n    </div>\n  )\n})\n\nexport default ImportWizard\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { Menu, MenuItem } from '@jbrowse/core/ui'\nimport { Instance } from 'mobx-state-tree'\n\n// locals\nimport SpreadsheetModel from '../models/Spreadsheet'\nimport ViewModel from '../models/SpreadsheetView'\n\nconst RowMenu = observer(function ({\n  viewModel,\n  spreadsheetModel,\n}: {\n  viewModel: Instance<typeof ViewModel>\n  spreadsheetModel: Instance<typeof SpreadsheetModel>\n}) {\n  const currentRowMenu = spreadsheetModel.rowMenuPosition\n  const { setRowMenuPosition } = spreadsheetModel\n\n  const rowMenuClose = () => {\n    setRowMenuPosition(null)\n  }\n\n  const rowNumber = spreadsheetModel.rowMenuPosition?.rowNumber\n  if (rowNumber === undefined) {\n    return null\n  }\n\n  const row = spreadsheetModel.rowSet.rows[+rowNumber - 1]\n\n  function handleMenuItemClick(_event: unknown, callback: Function) {\n    callback(viewModel, spreadsheetModel, rowNumber, row)\n    rowMenuClose()\n  }\n\n  // got through and evaluate all the `disabled` callbacks of the menu items\n  const menuItems: MenuItem[] = viewModel.rowMenuItems.map(item => {\n    if (typeof item.disabled === 'function') {\n      const disabled = item.disabled(\n        viewModel,\n        spreadsheetModel,\n        +rowNumber,\n        row,\n      )\n      return { ...item, disabled }\n    }\n    return item\n  })\n\n  return (\n    <Menu\n      anchorEl={currentRowMenu && currentRowMenu.anchorEl}\n      open={Boolean(currentRowMenu)}\n      onMenuItemClick={handleMenuItemClick}\n      onClose={rowMenuClose}\n      menuItems={menuItems}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'right',\n      }}\n    />\n  )\n})\n\nexport default RowMenu\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { Instance } from 'mobx-state-tree'\n\n// locals\nimport SpreadsheetStateModel from '../models/Spreadsheet'\n\ntype SpreadsheetModel = Instance<typeof SpreadsheetStateModel>\n\nconst CellData = observer(function ({\n  cell,\n  spreadsheetModel,\n  columnNumber,\n}: {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  cell: any\n  spreadsheetModel: SpreadsheetModel\n  columnNumber: number\n}) {\n  const ret = spreadsheetModel.columns[columnNumber]\n  if (ret && 'dataType' in ret && ret.dataType.DataCellReactComponent) {\n    return (\n      <ret.dataType.DataCellReactComponent\n        cell={cell}\n        dataType={ret.dataType}\n        columnNumber={columnNumber}\n        spreadsheet={spreadsheetModel}\n      />\n    )\n  }\n\n  return cell.text\n})\n\nexport default CellData\n","import React from 'react'\nimport { Checkbox, IconButton, FormControlLabel } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { Instance } from 'mobx-state-tree'\nimport { indigo } from '@mui/material/colors'\nimport { makeStyles } from 'tss-react/mui'\n\n// icons\nimport ArrowDropDown from '@mui/icons-material/ArrowDropDown'\n\n// locals\nimport SpreadsheetStateModel from '../models/Spreadsheet'\nimport RowStateModel from '../models/Row'\nimport CellData from './CellData'\n\ntype SpreadsheetModel = Instance<typeof SpreadsheetStateModel>\ntype RowModel = Instance<typeof RowStateModel>\n\nconst useStyles = makeStyles()(theme => ({\n  rowNumCell: {\n    textAlign: 'left',\n    border: `1px solid ${theme.palette.action.disabledBackground}`,\n    position: 'relative',\n    padding: '0 2px 0 0',\n    whiteSpace: 'nowrap',\n    userSelect: 'none',\n  },\n  rowNumber: {\n    fontWeight: 'normal',\n    display: 'inline-block',\n    flex: 'none',\n    paddingRight: '20px',\n    margin: 0,\n    whiteSpace: 'nowrap',\n  },\n  rowMenuButton: {\n    padding: 0,\n    margin: 0,\n    position: 'absolute',\n    right: 0,\n    display: 'inline-block',\n    whiteSpace: 'nowrap',\n    flex: 'none',\n  },\n  rowMenuButtonIcon: {},\n  rowSelector: {\n    position: 'relative',\n    top: '-2px',\n    margin: 0,\n    padding: '0 0.2rem',\n  },\n\n  dataRowSelected: {\n    background: indigo[100],\n    '& th': {\n      background: indigo[100],\n    },\n  },\n}))\n\nconst DataRow = observer(function ({\n  rowModel,\n  rowNumber,\n  spreadsheetModel,\n}: {\n  rowModel: RowModel\n  rowNumber: string\n  spreadsheetModel: SpreadsheetModel\n}) {\n  const { classes } = useStyles()\n  const { hideRowSelection, columnDisplayOrder } = spreadsheetModel\n  let rowClass = ''\n  if (rowModel.isSelected) {\n    rowClass += `${classes.dataRowSelected}`\n  }\n\n  function labelClick(evt: React.MouseEvent) {\n    rowModel.toggleSelect()\n    evt.stopPropagation()\n    evt.preventDefault()\n  }\n\n  return (\n    <tr className={rowClass}>\n      <td className={classes.rowNumCell} onClick={labelClick}>\n        {hideRowSelection ? (\n          <FormControlLabel\n            className={classes.rowNumber}\n            control={\n              <Checkbox\n                className={classes.rowSelector}\n                checked={rowModel.isSelected}\n                onClick={labelClick}\n              />\n            }\n            label={rowModel.id}\n          />\n        ) : null}\n        <IconButton\n          className={classes.rowMenuButton}\n          onClick={event => {\n            spreadsheetModel.setRowMenuPosition({\n              anchorEl: event.currentTarget,\n              rowNumber,\n            })\n            event.preventDefault()\n            event.stopPropagation()\n          }}\n        >\n          <ArrowDropDown className={classes.rowMenuButtonIcon} />\n        </IconButton>\n      </td>\n      {columnDisplayOrder.map(colNumber => (\n        <td key={colNumber}>\n          <CellData\n            cell={rowModel.cellsWithDerived[colNumber]}\n            spreadsheetModel={spreadsheetModel}\n            columnNumber={colNumber}\n          />\n        </td>\n      ))}\n    </tr>\n  )\n})\n\nexport default DataRow\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { iterMap } from '@jbrowse/core/util'\nimport { Menu } from '@jbrowse/core/ui'\nimport { MenuItem } from '@jbrowse/core/ui/Menu'\nimport { SpreadsheetModel } from '../models/Spreadsheet'\nimport { SpreadsheetViewModel } from '../models/SpreadsheetView'\n\n// icons\nimport CheckIcon from '@mui/icons-material/Check'\nimport FilterListIcon from '@mui/icons-material/FilterList'\nimport PermDataSettingIcon from '@mui/icons-material/PermDataSetting'\nimport SortIcon from '@mui/icons-material/Sort'\n\nconst ColumnMenu = observer(function ({\n  viewModel,\n  spreadsheetModel,\n  currentColumnMenu,\n  setColumnMenu,\n}: {\n  spreadsheetModel: SpreadsheetModel\n  viewModel: SpreadsheetViewModel\n  currentColumnMenu?: { colNumber: number; anchorEl: HTMLElement }\n  setColumnMenu: (arg?: { anchorEl: HTMLElement; colNumber: number }) => void\n}) {\n  const columnMenuClose = () => setColumnMenu(undefined)\n  const columnNumber = currentColumnMenu?.colNumber || 0\n  const sortMenuClick = (descending: boolean) => {\n    spreadsheetModel.setSortColumns([\n      {\n        columnNumber,\n        descending,\n      },\n    ])\n  }\n\n  const { dataTypeChoices } = spreadsheetModel\n\n  // make a Map of categoryName => [entry...]\n  type Record = (typeof dataTypeChoices)[0]\n  type RecordGroup = { isCategory: boolean; subMenuItems: Record[] }\n  const dataTypeTopLevelMenu = new Map<string, Record | RecordGroup>()\n  dataTypeChoices.forEach(dataTypeRecord => {\n    const { displayName, categoryName } = dataTypeRecord\n    if (categoryName) {\n      let entry = dataTypeTopLevelMenu.get(categoryName) as RecordGroup\n      if (!entry) {\n        entry = {\n          isCategory: true,\n          subMenuItems: [],\n        }\n        dataTypeTopLevelMenu.set(categoryName, entry)\n      }\n      entry.subMenuItems.push(dataTypeRecord)\n    } else {\n      dataTypeTopLevelMenu.set(displayName, dataTypeRecord)\n    }\n  })\n\n  const { columns, sortColumns } = spreadsheetModel\n  const dataType = currentColumnMenu && columns[columnNumber].dataType\n  const dataTypeName = dataType?.type || ''\n  const dataTypeDisplayName =\n    (currentColumnMenu && columns[columnNumber].dataType.displayName) || ''\n\n  const isSortingAscending =\n    !!currentColumnMenu &&\n    sortColumns.some(\n      c => c.columnNumber === currentColumnMenu.colNumber && !c.descending,\n    )\n  const isSortingDescending =\n    !!currentColumnMenu &&\n    sortColumns.some(\n      c => c.columnNumber === currentColumnMenu.colNumber && c.descending,\n    )\n\n  const menuItems = [\n    // top-level column menu\n    {\n      label: 'Sort ascending',\n      icon: SortIcon,\n      type: 'radio',\n      checked: isSortingAscending,\n      onClick: () => sortMenuClick(false),\n    },\n    {\n      label: 'Sort descending',\n      icon: SortIcon,\n      type: 'radio',\n      checked: isSortingDescending,\n      onClick: () => sortMenuClick(true),\n    },\n    {\n      label: 'No sort',\n      icon: SortIcon,\n      type: 'radio',\n      checked: !isSortingDescending && !isSortingAscending,\n      onClick: () => spreadsheetModel.setSortColumns([]),\n    },\n    // data type menu\n    {\n      label: `Type: ${dataTypeDisplayName}`,\n      icon: PermDataSettingIcon,\n      subMenu: iterMap(\n        dataTypeTopLevelMenu.entries(),\n        ([displayName, record]) => {\n          if ('typeName' in record && record.typeName) {\n            const { typeName } = record\n            return {\n              label: displayName || typeName,\n              icon: dataTypeName === typeName ? CheckIcon : undefined,\n              onClick: () =>\n                spreadsheetModel.setColumnType(columnNumber, typeName),\n            }\n          } else if ('subMenuItems' in record && record.subMenuItems) {\n            const { subMenuItems } = record\n            return {\n              label: displayName,\n              icon: subMenuItems.some(i => i.typeName === dataTypeName)\n                ? CheckIcon\n                : undefined,\n              subMenu: subMenuItems.map(({ typeName, displayName }) => ({\n                label: displayName,\n                icon: typeName === dataTypeName ? CheckIcon : undefined,\n                onClick: () =>\n                  spreadsheetModel.setColumnType(columnNumber, typeName),\n              })),\n            }\n          } else {\n            return null\n          }\n        },\n      ).filter(Boolean),\n    },\n  ] as MenuItem[]\n\n  // don't display the filter item if this data type doesn't have filtering\n  // implemented\n  if (dataType?.hasFilter) {\n    menuItems.push({\n      label: 'Create filter',\n      icon: FilterListIcon,\n      onClick: () =>\n        viewModel.filterControls.addBlankColumnFilter(columnNumber),\n    })\n  }\n\n  return (\n    <Menu\n      anchorEl={currentColumnMenu?.anchorEl}\n      open={Boolean(currentColumnMenu)}\n      onMenuItemClick={(_event, callback) => {\n        callback()\n        columnMenuClose()\n      }}\n      onClose={columnMenuClose}\n      menuItems={menuItems}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'right',\n      }}\n    />\n  )\n})\n\nexport default ColumnMenu\n","import React from 'react'\nimport { makeStyles } from 'tss-react/mui'\n\n// icons\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\nimport { SpreadsheetModel } from '../models/Spreadsheet'\n\nconst useStyles = makeStyles()({\n  sortIndicator: {\n    position: 'relative',\n    top: '0.2rem',\n    fontSize: '1rem',\n  },\n})\n\nexport default function SortIndicator({\n  model,\n  columnNumber,\n}: {\n  model: SpreadsheetModel\n  columnNumber: number\n}) {\n  const { classes } = useStyles()\n  const sortSpec = model.sortColumns.find(c => c.columnNumber === columnNumber)\n\n  if (sortSpec) {\n    const { descending } = sortSpec\n    return descending ? (\n      <KeyboardArrowUpIcon className={classes.sortIndicator} />\n    ) : (\n      <KeyboardArrowDownIcon className={classes.sortIndicator} />\n    )\n  }\n  return null\n}\n","function letterFor(n: number) {\n  return String.fromCharCode(n + 65)\n}\n\nexport function numToColName(num: number) {\n  if (num >= 0) {\n    if (num < 26) {\n      return letterFor(num)\n    }\n    if (num < 27 * 26) {\n      return letterFor(Math.floor(num / 26 - 1)) + letterFor(num % 26)\n    }\n  }\n\n  throw new RangeError('column number out of range')\n}\n","import React, { useState } from 'react'\nimport { IconButton, Tooltip } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { getParent } from 'mobx-state-tree'\nimport { makeStyles } from 'tss-react/mui'\n\n// icons\nimport CropFreeIcon from '@mui/icons-material/CropFree'\nimport ArrowDropDown from '@mui/icons-material/ArrowDropDown'\n\n// locals\nimport { SpreadsheetModel } from '../models/Spreadsheet'\nimport ColumnMenu from './ColumnMenu'\nimport SortIndicator from './SortIndicator'\nimport { numToColName } from './util'\n\ninterface ColMenu {\n  colNumber: number\n  anchorEl: HTMLElement\n}\n\nconst useStyles = makeStyles()(theme => ({\n  columnHead: {\n    fontWeight: 'normal',\n    background: theme.palette.mode === 'dark' ? '#333' : '#eee',\n    position: 'sticky',\n    top: 0,\n    zIndex: 2,\n    whiteSpace: 'nowrap',\n  },\n\n  columnButtonContainer: {\n    display: 'none',\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    background: theme.palette.background.paper,\n    height: '100%',\n  },\n\n  topLeftCorner: {\n    background: theme.palette.mode === 'dark' ? '#333' : '#eee',\n    zIndex: 2,\n    position: 'sticky',\n    top: 0,\n    minWidth: theme.spacing(2),\n    textAlign: 'left',\n  },\n}))\n\nconst DataTableHeader = observer(function ({\n  model,\n}: {\n  model: SpreadsheetModel\n}) {\n  const { classes } = useStyles()\n  const { columnDisplayOrder, columns, hasColumnNames, rowSet } = model\n  const [currentColumnMenu, setColumnMenu] = useState<ColMenu>()\n  const [currentHoveredColumn, setHoveredColumn] = useState<number>()\n\n  return (\n    <>\n      <thead>\n        <tr>\n          <th className={classes.topLeftCorner}>\n            <Tooltip title=\"Unselect all\" placement=\"right\">\n              <span>\n                <IconButton\n                  onClick={() => model.unselectAll()}\n                  disabled={!rowSet.selectedCount}\n                >\n                  <CropFreeIcon />\n                </IconButton>\n              </span>\n            </Tooltip>\n          </th>\n          {columnDisplayOrder.map(colNumber => (\n            <th\n              className={classes.columnHead}\n              key={colNumber}\n              onMouseOver={() => setHoveredColumn(colNumber)}\n              onMouseOut={() => setHoveredColumn(undefined)}\n            >\n              <SortIndicator model={model} columnNumber={colNumber} />\n              {(hasColumnNames && columns[colNumber]?.name) ||\n                numToColName(colNumber)}\n              <div\n                className={classes.columnButtonContainer}\n                style={{\n                  display:\n                    currentHoveredColumn === colNumber ||\n                    currentColumnMenu?.colNumber === colNumber\n                      ? 'block'\n                      : 'none',\n                }}\n              >\n                <IconButton\n                  onClick={evt => {\n                    setColumnMenu({\n                      colNumber,\n                      anchorEl: evt.currentTarget,\n                    })\n                  }}\n                >\n                  <ArrowDropDown />\n                </IconButton>\n              </div>\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <ColumnMenu\n        viewModel={getParent(model)}\n        spreadsheetModel={model}\n        currentColumnMenu={currentColumnMenu}\n        setColumnMenu={setColumnMenu}\n      />\n    </>\n  )\n})\n\nexport default DataTableHeader\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { getParent, Instance } from 'mobx-state-tree'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport SpreadsheetStateModel from '../models/Spreadsheet'\nimport RowStateModel from '../models/Row'\nimport RowMenu from './RowMenu'\nimport DataRow from './DataRow'\nimport DataTableHeader from './DataTableHeader'\n\ntype SpreadsheetModel = Instance<typeof SpreadsheetStateModel>\ntype RowModel = Instance<typeof RowStateModel>\n\nconst useStyles = makeStyles()(theme => ({\n  dataTable: {\n    borderCollapse: 'collapse',\n    '& td': {\n      border: `1px solid ${theme.palette.action.disabledBackground}`,\n      padding: '0.2rem',\n      maxWidth: '50em',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n    },\n  },\n\n  emptyMessage: {\n    captionSide: 'bottom',\n  },\n}))\n\nconst DataTableBody = observer(function ({\n  rows,\n  spreadsheetModel,\n  page,\n  rowsPerPage,\n}: {\n  rows: RowModel[]\n  spreadsheetModel: SpreadsheetModel\n  page: number\n  rowsPerPage: number\n}) {\n  return (\n    <tbody>\n      {rows.slice(rowsPerPage * page, rowsPerPage * (page + 1)).map(row => (\n        <DataRow\n          key={row.id}\n          rowNumber={row.id}\n          spreadsheetModel={spreadsheetModel}\n          rowModel={row}\n        />\n      ))}\n    </tbody>\n  )\n})\n\nconst DataTable = observer(function ({\n  model,\n  page,\n  rowsPerPage,\n}: {\n  model: SpreadsheetModel\n  page: number\n  rowsPerPage: number\n}) {\n  const { rowSet } = model\n  const { classes } = useStyles()\n  const rows = rowSet.sortedFilteredRows\n  return (\n    <>\n      <RowMenu viewModel={getParent(model)} spreadsheetModel={model} />\n      <table className={classes.dataTable}>\n        <DataTableHeader model={model} />\n        <DataTableBody\n          rows={rows}\n          spreadsheetModel={model}\n          page={page}\n          rowsPerPage={rowsPerPage}\n        />\n        {!rows.length ? (\n          <caption className={classes.emptyMessage}>\n            {rowSet.count ? 'no rows match criteria' : 'no rows present'}\n          </caption>\n        ) : null}\n      </table>\n    </>\n  )\n})\n\nexport default DataTable\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { Instance } from 'mobx-state-tree'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport SpreadsheetStateModel from '../models/Spreadsheet'\nimport { LoadingEllipses } from '@jbrowse/core/ui'\nimport DataTable from './DataTable'\n\ntype SpreadsheetModel = Instance<typeof SpreadsheetStateModel>\n\nconst useStyles = makeStyles()(theme => ({\n  root: {\n    position: 'relative',\n    marginBottom: theme.spacing(1),\n    background: theme.palette.background.paper,\n    overflow: 'auto',\n  },\n}))\n\nconst Spreadsheet = observer(function ({\n  model,\n  height,\n  page,\n  rowsPerPage,\n}: {\n  model: SpreadsheetModel\n  height: number\n  page: number\n  rowsPerPage: number\n}) {\n  const { classes } = useStyles()\n\n  return (\n    <div className={classes.root} style={{ height }}>\n      {model?.rowSet?.isLoaded && model.initialized ? (\n        <DataTable model={model} page={page} rowsPerPage={rowsPerPage} />\n      ) : (\n        <LoadingEllipses variant=\"h6\" />\n      )}\n    </div>\n  )\n})\n\nexport default Spreadsheet\n","import React, { useState, useEffect } from 'react'\n\nimport { IconButton, InputAdornment, TextField } from '@mui/material'\nimport ClearIcon from '@mui/icons-material/Clear'\nimport FilterIcon from '@mui/icons-material/FilterList'\n\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\nimport { useDebounce } from '@jbrowse/core/util'\n\nconst useStyles = makeStyles()({\n  textFilterControlEndAdornment: {\n    marginRight: '-18px',\n  },\n})\n\nconst TextFilter = observer(function ({\n  textFilter,\n}: {\n  textFilter: { stringToFind: string; setString: (arg: string) => void }\n}) {\n  const { classes } = useStyles()\n  // this paragraph is silliness to debounce the text filter input\n  const [textFilterValue, setTextFilterValue] = useState(\n    textFilter.stringToFind,\n  )\n  const debouncedTextFilter = useDebounce(textFilterValue, 500)\n  useEffect(() => {\n    textFilter.setString(debouncedTextFilter)\n  }, [debouncedTextFilter, textFilter])\n\n  return (\n    <div>\n      <TextField\n        label=\"text filter\"\n        value={textFilterValue}\n        onChange={evt => setTextFilterValue(evt.target.value)}\n        variant=\"outlined\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <FilterIcon />\n            </InputAdornment>\n          ),\n          endAdornment: (\n            <InputAdornment\n              className={classes.textFilterControlEndAdornment}\n              position=\"end\"\n            >\n              <IconButton\n                aria-label=\"clear filter\"\n                onClick={() => setTextFilterValue('')}\n              >\n                <ClearIcon />\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n    </div>\n  )\n})\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst GlobalFilterControls = observer(({ model }: { model: any }) => {\n  const textFilter = model.filterControls.rowFullText\n  return <TextFilter textFilter={textFilter} />\n})\n\nexport default GlobalFilterControls\n","import React from 'react'\nimport { Grid, IconButton, Typography } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { getParent } from 'mobx-state-tree'\nimport { makeStyles } from 'tss-react/mui'\n\n// icons\nimport FilterIcon from '@mui/icons-material/FilterList'\nimport CloseIcon from '@mui/icons-material/Close'\n\nconst useStyles = makeStyles()(theme => ({\n  columnName: {\n    verticalAlign: 'middle',\n    paddingRight: '0.3em',\n  },\n  columnFilter: {\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    boxSizing: 'border-box',\n    width: '100%',\n    position: 'relative',\n  },\n  filterIcon: {\n    position: 'relative',\n    top: '12px',\n  },\n  filterIconBg: {\n    background: theme.palette.tertiary.main,\n    color: 'white',\n    padding: theme.spacing(1.5),\n  },\n}))\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction FilterOperations({ filterModel }: { filterModel: any }) {\n  if (filterModel) {\n    return <filterModel.ReactComponent filterModel={filterModel} />\n  }\n  return null\n}\n\nconst ColumnFilterControls = observer(function ({\n  viewModel,\n  filterModel,\n  columnNumber,\n  height,\n}: // eslint-disable-next-line @typescript-eslint/no-explicit-any\nany) {\n  const { classes } = useStyles()\n\n  const columnDefinition = viewModel.spreadsheet.columns[columnNumber]\n  if (!columnDefinition) {\n    throw new Error('no column definition! filters are probably out of date')\n  }\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      className={classes.columnFilter}\n      style={{ height }}\n    >\n      <Grid item className={classes.filterIconBg}>\n        <FilterIcon className={classes.filterIcon} />\n      </Grid>\n      <Grid item>\n        <IconButton\n          onClick={() =>\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            getParent<any>(filterModel, 2).removeColumnFilter(filterModel)\n          }\n          title=\"remove filter\"\n        >\n          <CloseIcon />\n        </IconButton>\n        <Typography className={classes.columnName} component=\"span\">\n          {columnDefinition.name}\n        </Typography>{' '}\n        <FilterOperations filterModel={filterModel} />\n      </Grid>\n    </Grid>\n  )\n})\n\nexport default ColumnFilterControls\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { Instance } from 'mobx-state-tree'\n\n// locals\nimport SpreadsheetStateModel from '../models/Spreadsheet'\n\ntype SpreadsheetModel = Instance<typeof SpreadsheetStateModel>\n\nconst RowCountMessage = observer(function ({\n  spreadsheet,\n}: {\n  spreadsheet: SpreadsheetModel\n}) {\n  if (spreadsheet.rowSet.isLoaded) {\n    const {\n      passingFiltersCount,\n      count,\n      selectedCount,\n      selectedAndPassingFiltersCount,\n    } = spreadsheet.rowSet\n\n    let rowMessage\n    if (passingFiltersCount !== count) {\n      rowMessage = `${spreadsheet.rowSet.passingFiltersCount} rows of ${spreadsheet.rowSet.count} total`\n      if (selectedCount) {\n        rowMessage += `, ${selectedAndPassingFiltersCount} selected`\n        const selectedAndNotPassingFiltersCount =\n          selectedCount - selectedAndPassingFiltersCount\n        if (selectedAndNotPassingFiltersCount) {\n          rowMessage += ` (${selectedAndNotPassingFiltersCount} selected rows do not pass filters)`\n        }\n      }\n    } else {\n      rowMessage = `${spreadsheet.rowSet.count} rows`\n      if (selectedCount) {\n        rowMessage += `, ${selectedCount} selected`\n      }\n    }\n    return <>{rowMessage}</>\n  }\n  return null\n})\nexport default RowCountMessage\n","import React from 'react'\nimport { FormGroup, TablePagination } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport RowCountMessage from './RowCountMessage'\nimport { SpreadsheetModel } from '../models/Spreadsheet'\nimport { observer } from 'mobx-react'\n\nconst statusBarHeight = 40\n\nconst useStyles = makeStyles()(theme => ({\n  statusBar: {\n    height: statusBarHeight,\n    boxSizing: 'border-box',\n    borderTop: '1px outset #b1b1b1',\n    paddingLeft: theme.spacing(1),\n  },\n  verticallyCenter: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n}))\n\nconst StatusBar = observer(function StatusBar({\n  page,\n  rowsPerPage,\n  setPage,\n  setRowsPerPage,\n  spreadsheet,\n  mode,\n}: {\n  page: number\n  mode: string\n  spreadsheet: SpreadsheetModel\n  rowsPerPage: number\n  setPage: (arg: number) => void\n  setRowsPerPage: (arg: number) => void\n}) {\n  const { classes } = useStyles()\n  return (\n    <div\n      className={classes.statusBar}\n      style={{ display: mode === 'display' ? undefined : 'none' }}\n    >\n      {spreadsheet ? (\n        <FormGroup row>\n          <div className={classes.verticallyCenter}>\n            <RowCountMessage spreadsheet={spreadsheet} />\n          </div>\n          <div className={classes.spacer} />\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100, 1000]}\n            count={spreadsheet.rowSet.count}\n            component=\"div\"\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={(_, newPage) => setPage(newPage)}\n            onRowsPerPageChange={event => {\n              setRowsPerPage(+event.target.value)\n              setPage(0)\n            }}\n          />\n          <div className={classes.spacer} />\n        </FormGroup>\n      ) : null}\n    </div>\n  )\n})\n\nexport default StatusBar\n","import React, { useState } from 'react'\nimport { Grid } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { ResizeHandle } from '@jbrowse/core/ui'\n\n// locals\nimport ImportWizard from './ImportWizard'\nimport Spreadsheet from './Spreadsheet'\nimport GlobalFilterControls from './GlobalFilterControls'\nimport ColumnFilterControls from './ColumnFilterControls'\nimport { SpreadsheetViewModel } from '../models/SpreadsheetView'\nimport StatusBar from './StatusBar'\n\nconst headerHeight = 52\nconst colFilterHeight = 46\nconst statusBarHeight = 40\n\nconst useStyles = makeStyles()(theme => ({\n  header: {\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    boxSizing: 'border-box',\n    height: headerHeight,\n    paddingLeft: theme.spacing(1),\n  },\n  contentArea: {\n    overflow: 'auto',\n  },\n  resizeHandle: {\n    height: 3,\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    background: theme.palette.action.disabled,\n    boxSizing: 'border-box',\n    borderTop: '1px solid #fafafa',\n  },\n}))\n\nexport default observer(function ({ model }: { model: SpreadsheetViewModel }) {\n  const { classes } = useStyles()\n  const {\n    spreadsheet,\n    filterControls,\n    hideFilterControls,\n    hideVerticalResizeHandle,\n    mode,\n    height,\n  } = model\n  const [page, setPage] = useState(0)\n  const [rowsPerPage, setRowsPerPage] = useState(100)\n\n  return (\n    <div>\n      {mode !== 'display' || hideFilterControls ? null : (\n        <>\n          <Grid container direction=\"row\" className={classes.header}>\n            <Grid item>\n              <GlobalFilterControls model={model} />\n            </Grid>\n          </Grid>\n          {filterControls.columnFilters.map((f, i) => (\n            <ColumnFilterControls\n              key={`${f.columnNumber}-${i}`}\n              viewModel={model}\n              filterModel={f}\n              columnNumber={f.columnNumber}\n              height={colFilterHeight}\n            />\n          ))}\n        </>\n      )}\n\n      {mode === 'import' ? (\n        <ImportWizard model={model.importWizard} />\n      ) : (\n        <div className={classes.contentArea}>\n          <div\n            style={{\n              position: 'relative',\n              display: mode === 'display' ? undefined : 'none',\n            }}\n          >\n            {spreadsheet ? (\n              <Spreadsheet\n                page={page}\n                rowsPerPage={rowsPerPage}\n                model={spreadsheet}\n                height={\n                  height -\n                  headerHeight -\n                  filterControls.columnFilters.length * colFilterHeight -\n                  statusBarHeight\n                }\n              />\n            ) : null}\n          </div>\n        </div>\n      )}\n      {spreadsheet ? (\n        <StatusBar\n          page={page}\n          setPage={setPage}\n          rowsPerPage={rowsPerPage}\n          setRowsPerPage={setRowsPerPage}\n          mode={mode}\n          spreadsheet={spreadsheet}\n        />\n      ) : null}\n      {hideVerticalResizeHandle ? null : (\n        <ResizeHandle\n          onDrag={model.resizeHeight}\n          className={classes.resizeHandle}\n        />\n      )}\n    </div>\n  )\n})\n"],"names":["useStyles","makeStyles","textField","width","verticalAlign","observer","_ref","model","disabled","modelPropName","modelSetterName","_useState","useState","_useState2","_slicedToArray","val","setVal","classes","useEffect","num","Number","parseInt","isNaN","_jsx","TextField","value","type","onChange","evt","target","className","container","margin","maxWidth","padding","_assemblyManager$get","session","getSession","assemblyNames","assemblyManager","fileType","canCancel","fileSource","isReadyToOpen","fileTypes","hasColumnNameLine","error","selected","setSelected","err","get","showRowControls","rootModel","getRoot","_jsxs","children","ErrorMessage","FormControl","component","FormLabel","FormGroup","FileSelector","location","setLocation","arg","setFileSource","RadioGroup","row","name","map","fileTypeName","FormControlLabel","checked","onClick","setFileType","control","Radio","label","labelPlacement","Checkbox","toggleHasColumnNameLine","NumberEditor","AssemblySelector","Button","variant","color","cancelButton","import","_spreadsheetModel$row","viewModel","spreadsheetModel","currentRowMenu","rowMenuPosition","setRowMenuPosition","rowMenuClose","rowNumber","undefined","rowSet","rows","menuItems","rowMenuItems","item","_objectSpread","Menu","anchorEl","open","Boolean","onMenuItemClick","_event","callback","onClose","anchorOrigin","vertical","horizontal","cell","columnNumber","ret","columns","dataType","DataCellReactComponent","spreadsheet","text","theme","rowNumCell","textAlign","border","concat","palette","action","disabledBackground","position","whiteSpace","userSelect","fontWeight","display","flex","paddingRight","rowMenuButton","right","rowMenuButtonIcon","rowSelector","top","dataRowSelected","background","indigo","rowModel","hideRowSelection","columnDisplayOrder","rowClass","labelClick","toggleSelect","stopPropagation","preventDefault","isSelected","id","IconButton","event","currentTarget","ArrowDropDown","colNumber","CellData","cellsWithDerived","currentColumnMenu","setColumnMenu","columnMenuClose","sortMenuClick","descending","setSortColumns","dataTypeChoices","dataTypeTopLevelMenu","Map","forEach","dataTypeRecord","displayName","categoryName","entry","isCategory","subMenuItems","set","push","sortColumns","dataTypeName","dataTypeDisplayName","isSortingAscending","some","c","isSortingDescending","icon","SortIcon","PermDataSettingIcon","subMenu","iterMap","entries","_ref2","_ref3","record","typeName","CheckIcon","setColumnType","i","_ref4","filter","hasFilter","FilterListIcon","filterControls","addBlankColumnFilter","sortIndicator","fontSize","SortIndicator","sortSpec","find","KeyboardArrowUpIcon","KeyboardArrowDownIcon","letterFor","n","String","fromCharCode","numToColName","Math","floor","RangeError","columnHead","mode","zIndex","columnButtonContainer","paper","height","topLeftCorner","minWidth","spacing","hasColumnNames","_useState3","_useState4","currentHoveredColumn","setHoveredColumn","_Fragment","Tooltip","title","placement","unselectAll","selectedCount","CropFreeIcon","_columns$colNumber","onMouseOver","onMouseOut","style","ColumnMenu","getParent","dataTable","borderCollapse","overflow","textOverflow","emptyMessage","captionSide","DataTableBody","page","rowsPerPage","slice","DataRow","sortedFilteredRows","RowMenu","DataTableHeader","length","count","root","marginBottom","_model$rowSet","isLoaded","initialized","DataTable","LoadingEllipses","textFilterControlEndAdornment","marginRight","TextFilter","textFilter","stringToFind","textFilterValue","setTextFilterValue","debouncedTextFilter","useDebounce","setString","InputProps","startAdornment","InputAdornment","FilterIcon","endAdornment","ClearIcon","rowFullText","columnName","columnFilter","boxSizing","filterIcon","filterIconBg","tertiary","main","FilterOperations","filterModel","ReactComponent","columnDefinition","Error","Grid","direction","removeColumnFilter","CloseIcon","Typography","rowMessage","_spreadsheet$rowSet","passingFiltersCount","selectedAndPassingFiltersCount","selectedAndNotPassingFiltersCount","statusBar","borderTop","paddingLeft","verticallyCenter","justifyContent","flexDirection","spacer","flexGrow","setPage","setRowsPerPage","RowCountMessage","TablePagination","rowsPerPageOptions","onPageChange","_","newPage","onRowsPerPageChange","header","contentArea","resizeHandle","bottom","left","hideFilterControls","hideVerticalResizeHandle","GlobalFilterControls","columnFilters","f","ColumnFilterControls","ImportWizard","importWizard","Spreadsheet","StatusBar","ResizeHandle","onDrag","resizeHeight"],"sourceRoot":""}