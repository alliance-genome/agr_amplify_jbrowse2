"use strict";(globalThis.webpackChunk_jbrowse_web=globalThis.webpackChunk_jbrowse_web||[]).push([[8855],{88855:(e,t,a)=>{a.r(t),a.d(t,{default:()=>u});var n=a(72600),i=a(92813),r=a(95454),s=a(88276),c=a(25086),o=a(22289);const u=class extends n.BaseFeatureDataAdapter{async configurePre(){const e=this.pluginManager,t=this.getConf("vcfGzLocation"),a=this.getConf(["index","location"]),n=this.getConf(["index","indexType"]),r=(0,i.openLocation)(t,e),o="CSI"===n,u=new s.pC({filehandle:r,csiFilehandle:o?(0,i.openLocation)(a,e):void 0,tbiFilehandle:o?void 0:(0,i.openLocation)(a,e),chunkCacheSize:52428800,chunkSizeLimit:1e9}),g=await u.getHeader();return{vcf:u,parser:new c.Z({header:g})}}async configure(){return this.configured||(this.configured=this.configurePre().catch((e=>{throw this.configured=void 0,e}))),this.configured}async getRefNames(e={}){const{vcf:t}=await this.configure();return t.getReferenceSequenceNames(e)}async getHeader(){const{vcf:e}=await this.configure();return e.getHeader()}async getMetadata(){const{parser:e}=await this.configure();return e.getMetadata()}getFeatures(e,t={}){return(0,r.ObservableCreate)((async a=>{const{refName:n,start:i,end:r}=e,{vcf:s,parser:c}=await this.configure();await s.getLines(n,i,r,{lineCallback:(e,t)=>{a.next(new o.Z({variant:c.parseLine(e),parser:c,id:`${this.id}-vcf-${t}`}))},...t}),a.complete()}),t.signal)}freeResources(){}}}}]);
//# sourceMappingURL=8855.9599cd77.chunk.js.map