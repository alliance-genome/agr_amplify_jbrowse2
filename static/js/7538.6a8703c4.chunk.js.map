{"version":3,"file":"static/js/7538.6a8703c4.chunk.js","mappings":"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","sources":["../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/HierarchicalFab.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/util.ts","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/TrackCategory.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/TrackLabel.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/TrackListNode.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/HierarchicalTree.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/HamburgerMenu.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/HierarchicalHeader.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/HierarchicalTrackSelector.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/ShoppingCart.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Fab, Menu, MenuItem } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport {\n  getSession,\n  isSessionModelWithWidgets,\n  isSessionModelWithConnections,\n  isSessionWithAddTracks,\n} from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\n\n// icons\nimport AddIcon from '@mui/icons-material/Add'\n\n// locals\nimport { HierarchicalTrackSelectorModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(6),\n    right: theme.spacing(6),\n  },\n}))\n\nexport default observer(function HierarchicalFab({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { classes } = useStyles()\n  const session = getSession(model)\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null)\n\n  function handleFabClose() {\n    setAnchorEl(null)\n  }\n  const hasConnections = isSessionModelWithConnections(session)\n  const hasAddTrack = isSessionWithAddTracks(session)\n  return (\n    <>\n      {hasAddTrack || hasConnections ? (\n        <>\n          <Fab\n            color=\"secondary\"\n            className={classes.fab}\n            onClick={event => setAnchorEl(event.currentTarget)}\n          >\n            <AddIcon />\n          </Fab>\n          <Menu\n            anchorEl={anchorEl}\n            open={Boolean(anchorEl)}\n            onClose={() => setAnchorEl(null)}\n          >\n            {hasConnections ? (\n              <MenuItem\n                onClick={() => {\n                  handleFabClose()\n                  if (isSessionModelWithWidgets(session)) {\n                    session.showWidget(\n                      session.addWidget(\n                        'AddConnectionWidget',\n                        'addConnectionWidget',\n                      ),\n                    )\n                  }\n                }}\n              >\n                Add connection\n              </MenuItem>\n            ) : null}\n            {hasAddTrack ? (\n              <MenuItem\n                onClick={() => {\n                  handleFabClose()\n                  if (isSessionModelWithWidgets(session)) {\n                    session.showWidget(\n                      session.addWidget('AddTrackWidget', 'addTrackWidget', {\n                        view: model.view.id,\n                      }),\n                    )\n                  }\n                }}\n              >\n                Add track\n              </MenuItem>\n            ) : null}\n          </Menu>\n        </>\n      ) : null}\n    </>\n  )\n})\n","import { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { HierarchicalTrackSelectorModel } from '../model'\nimport { TreeNode } from '../generateHierarchy'\n\nexport interface NodeData {\n  nestingLevel: number\n  checked: boolean\n  conf: AnyConfigurationModel\n  drawerPosition: unknown\n  id: string\n  isLeaf: boolean\n  name: string\n  onChange: Function\n  toggleCollapse: (arg: string) => void\n  tree: TreeNode\n  selected: boolean\n  model: HierarchicalTrackSelectorModel\n}\n\nexport function getAllChildren(subtree?: TreeNode): AnyConfigurationModel[] {\n  // @ts-expect-error\n  return (\n    subtree?.children.map(t =>\n      t.children.length ? getAllChildren(t) : (t.conf as AnyConfigurationModel),\n    ) || []\n  ).flat(Infinity)\n}\n\nexport function treeToMap(tree: TreeNode, map = new Map<string, TreeNode>()) {\n  if (tree.id && tree.children.length) {\n    map.set(tree.id, tree)\n  }\n  for (let i = 0; i < tree.children.length; i++) {\n    const node = tree.children[i]\n    treeToMap(node, map)\n  }\n  return map\n}\n\nexport function isUnsupported(name = '') {\n  return name.endsWith('(Unsupported)') || name.endsWith('(Unknown)')\n}\n","import React, { useState } from 'react'\nimport { IconButton, Typography } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport JBrowseMenu from '@jbrowse/core/ui/Menu'\n\n// icons\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight'\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz'\n\n// locals\nimport { getAllChildren, treeToMap, NodeData } from '../util'\n\nconst useStyles = makeStyles()(theme => ({\n  contrastColor: {\n    color: theme.palette.tertiary.contrastText,\n  },\n\n  // margin:auto 0 to center text vertically\n  accordionText: {\n    margin: 'auto 0',\n    // width 100 so you can click anywhere on the category bar\n    width: '100%',\n  },\n}))\n\nexport default function Category({\n  isOpen,\n  setOpen,\n  data,\n}: {\n  isOpen: boolean\n  setOpen: (arg: boolean) => void\n  data: NodeData\n}) {\n  const { classes } = useStyles()\n  const [menuEl, setMenuEl] = useState<HTMLElement | null>(null)\n  const { name, model, id, tree, toggleCollapse } = data\n\n  return (\n    <div\n      className={classes.accordionText}\n      onClick={() => {\n        if (!menuEl) {\n          toggleCollapse(id)\n          setOpen(!isOpen)\n        }\n      }}\n    >\n      <Typography>\n        {isOpen ? <ArrowDropDownIcon /> : <ArrowRightIcon />}\n        {name}\n        <IconButton\n          onClick={event => {\n            setMenuEl(event.currentTarget)\n            event.stopPropagation()\n          }}\n          className={classes.contrastColor}\n        >\n          <MoreHorizIcon />\n        </IconButton>\n      </Typography>\n      {menuEl ? (\n        <JBrowseMenu\n          anchorEl={menuEl}\n          menuItems={[\n            {\n              label: 'Add to selection',\n              onClick: () => {\n                const r = treeToMap(tree).get(id)\n                model.addToSelection(getAllChildren(r))\n              },\n            },\n            {\n              label: 'Remove from selection',\n              onClick: () => {\n                const r = treeToMap(tree).get(id)\n                model.removeFromSelection(getAllChildren(r))\n              },\n            },\n            {\n              label: 'Show all tracks',\n              onClick: () => {\n                for (const entry of treeToMap(tree).get(id)?.children || []) {\n                  if (!entry.children.length) {\n                    model.view.showTrack(entry.id)\n                  }\n                }\n              },\n            },\n            {\n              label: 'Hide all tracks',\n              onClick: () => {\n                for (const entry of treeToMap(tree).get(id)?.children || []) {\n                  if (!entry.children.length) {\n                    model.view.hideTrack(entry.id)\n                  }\n                }\n              },\n            },\n          ]}\n          onMenuItemClick={(_event, callback) => {\n            callback()\n            setMenuEl(null)\n          }}\n          open={Boolean(menuEl)}\n          onClose={() => setMenuEl(null)}\n        />\n      ) : null}\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { Checkbox, FormControlLabel, IconButton, Tooltip } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport JBrowseMenu from '@jbrowse/core/ui/Menu'\nimport { getSession } from '@jbrowse/core/util'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\n\n// icons\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz'\n\n// locals\nimport { isUnsupported, NodeData } from '../util'\nimport { SanitizedHTML } from '@jbrowse/core/ui'\n\nconst useStyles = makeStyles()(theme => ({\n  compactCheckbox: {\n    padding: 0,\n  },\n\n  checkboxLabel: {\n    marginRight: 0,\n    '&:hover': {\n      backgroundColor: theme.palette.action.selected,\n    },\n  },\n}))\n\nexport interface InfoArgs {\n  target: HTMLElement\n  id: string\n  conf: AnyConfigurationModel\n}\n\nexport default function TrackLabel({ data }: { data: NodeData }) {\n  const { classes } = useStyles()\n  const { checked, conf, model, drawerPosition, id, name, onChange, selected } =\n    data\n  const [info, setInfo] = useState<InfoArgs>()\n  const description = (conf && readConfObject(conf, ['description'])) || ''\n  return (\n    <>\n      <Tooltip\n        title={description + (selected ? ' (in selection)' : '')}\n        placement={drawerPosition === 'left' ? 'right' : 'left'}\n      >\n        <FormControlLabel\n          className={classes.checkboxLabel}\n          control={\n            <Checkbox\n              className={classes.compactCheckbox}\n              checked={checked}\n              onChange={() => onChange(id)}\n              disabled={isUnsupported(name)}\n              inputProps={{\n                // @ts-expect-error\n                'data-testid': `htsTrackEntry-${id}`,\n              }}\n            />\n          }\n          label={\n            <div\n              data-testid={`htsTrackLabel-${id}`}\n              style={{ background: selected ? '#cccc' : undefined }}\n            >\n              <SanitizedHTML html={name} />\n            </div>\n          }\n        />\n      </Tooltip>\n      <IconButton\n        onClick={e => setInfo({ target: e.currentTarget, id, conf })}\n        style={{ padding: 0 }}\n        data-testid={`htsTrackEntryMenu-${id}`}\n      >\n        <MoreHorizIcon />\n      </IconButton>\n\n      {info ? (\n        <JBrowseMenu\n          anchorEl={info?.target}\n          menuItems={[\n            ...(getSession(model).getTrackActionMenuItems?.(info.conf) || []),\n            {\n              label: 'Add to selection',\n              onClick: () => model.addToSelection([info.conf]),\n            },\n            ...(selected\n              ? [\n                  {\n                    label: 'Remove from selection',\n                    onClick: () => model.removeFromSelection([info.conf]),\n                  },\n                ]\n              : []),\n          ]}\n          onMenuItemClick={(_event, callback) => {\n            callback()\n            setInfo(undefined)\n          }}\n          open={Boolean(info)}\n          onClose={() => setInfo(undefined)}\n        />\n      ) : null}\n    </>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport Category from './TrackCategory'\nimport TrackLabel from './TrackLabel'\nimport { NodeData } from '../util'\n\nconst useStyles = makeStyles()(theme => ({\n  // this accordionBase element's small padding is used to give a margin to\n  // accordionColor it a \"margin\" because the virtualized elements can't really\n  // use margin in a conventional way (it doesn't affect layout)\n  accordionBase: {\n    display: 'flex',\n  },\n\n  accordionCard: {\n    padding: 3,\n    cursor: 'pointer',\n    display: 'flex',\n  },\n\n  nestingLevelMarker: {\n    position: 'absolute',\n    borderLeft: '1.5px solid #555',\n  },\n  // accordionColor set's display:flex so that the child accordionText use\n  // vertically centered text\n  accordionColor: {\n    background: theme.palette.tertiary.main,\n    color: theme.palette.tertiary.contrastText,\n    width: '100%',\n    display: 'flex',\n    paddingLeft: 5,\n  },\n}))\n\n// An individual node in the track selector. Note: manually sets cursor:\n// pointer improves usability for what can be clicked\nexport default function Node({\n  data,\n  isOpen,\n  style,\n  setOpen,\n}: {\n  data: NodeData\n  isOpen: boolean\n  style?: { height: number }\n  setOpen: (arg: boolean) => void\n}) {\n  const { isLeaf, nestingLevel } = data\n\n  const { classes } = useStyles()\n  const width = 10\n  const marginLeft = nestingLevel * width + (isLeaf ? width : 0)\n\n  return (\n    <div style={style} className={!isLeaf ? classes.accordionBase : undefined}>\n      {new Array(nestingLevel).fill(0).map((_, idx) => (\n        <div\n          key={`mark-${idx}`}\n          style={{ left: idx * width + 4, height: style?.height }}\n          className={classes.nestingLevelMarker}\n        />\n      ))}\n      <div\n        className={!isLeaf ? classes.accordionCard : undefined}\n        style={{\n          marginLeft,\n          whiteSpace: 'nowrap',\n          width: '100%',\n        }}\n      >\n        <div className={!isLeaf ? classes.accordionColor : undefined}>\n          {!isLeaf ? (\n            <Category isOpen={isOpen} data={data} setOpen={setOpen} />\n          ) : (\n            <TrackLabel data={data} />\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useCallback, useMemo, useRef, useEffect } from 'react'\nimport { observer } from 'mobx-react'\nimport { VariableSizeTree } from 'react-vtree'\nimport { getSession } from '@jbrowse/core/util'\n// locals\nimport { TreeNode } from '../../generateHierarchy'\nimport { HierarchicalTrackSelectorModel } from '../../model'\nimport Node from './TrackListNode'\n\nfunction getNodeData(\n  node: TreeNode,\n  nestingLevel: number,\n  extra: Record<string, unknown>,\n  selection: Record<string, unknown>,\n) {\n  const isLeaf = !!node.conf\n  const selected = !!selection[node.id]\n  return {\n    data: {\n      defaultHeight: isLeaf ? 22 : 40,\n      isLeaf,\n      isOpenByDefault: true,\n      nestingLevel,\n      selected,\n      ...node,\n      ...extra,\n    },\n    nestingLevel,\n    node,\n  }\n}\n\ntype NodeData = ReturnType<typeof getNodeData>\n\n// this is the main tree component for the hierarchical track selector in note:\n// in jbrowse-web the toolbar is position=\"sticky\" which means the autosizer\n// includes the height of the toolbar, so we subtract the given offsets\nexport default observer(function HierarchicalTree({\n  height,\n  tree,\n  model,\n}: {\n  height: number\n  tree: TreeNode\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { filterText, selection, view } = model\n  const treeRef = useRef<NodeData>(null)\n  const session = getSession(model)\n  const { drawerPosition } = session\n  const obj = useMemo(\n    () => Object.fromEntries(selection.map(s => [s.trackId, s])),\n    [selection],\n  )\n\n  const extra = useMemo(\n    () => ({\n      onChange: (trackId: string) => view.toggleTrack(trackId),\n      toggleCollapse: (pathName: string) => model.toggleCategory(pathName),\n      tree,\n      model,\n      drawerPosition,\n    }),\n    [view, model, drawerPosition, tree],\n  )\n  const treeWalker = useCallback(\n    function* treeWalker() {\n      for (let i = 0; i < tree.children.length; i++) {\n        const r = tree.children[i]\n        yield getNodeData(r, 0, extra, obj)\n      }\n\n      while (true) {\n        // @ts-expect-error\n        const parentMeta = yield\n\n        for (let i = 0; i < parentMeta.node.children.length; i++) {\n          const curr = parentMeta.node.children[i]\n          yield getNodeData(curr, parentMeta.nestingLevel + 1, extra, obj)\n        }\n      }\n    },\n    [tree, extra, obj],\n  )\n\n  useEffect(() => {\n    // @ts-expect-error\n    treeRef.current.recomputeTree({\n      refreshNodes: true,\n      useDefaultHeight: true,\n    })\n  }, [tree, filterText])\n  return (\n    <>\n      {/* @ts-expect-error */}\n      <VariableSizeTree ref={treeRef} treeWalker={treeWalker} height={height}>\n        {/* @ts-expect-error */}\n        {Node}\n      </VariableSizeTree>\n    </>\n  )\n})\n","import React, { Suspense, lazy, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  getSession,\n  isSessionModelWithConnectionEditing,\n  isSessionModelWithConnections,\n  isSessionModelWithWidgets,\n  isSessionWithAddTracks,\n} from '@jbrowse/core/util'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport CascadingMenuButton from '@jbrowse/core/ui/CascadingMenuButton'\n\n// icons\nimport MenuIcon from '@mui/icons-material/Menu'\n\n// locals\nimport { HierarchicalTrackSelectorModel } from '../../model'\n\n// lazy components\nconst CloseConnectionDlg = lazy(\n  () => import('../dialogs/CloseConnectionDialog'),\n)\nconst DeleteConnectionDlg = lazy(\n  () => import('../dialogs/DeleteConnectionDialog'),\n)\nconst ManageConnectionsDlg = lazy(\n  () => import('../dialogs/ManageConnectionsDialog'),\n)\nconst ToggleConnectionsDlg = lazy(\n  () => import('../dialogs/ToggleConnectionsDialog'),\n)\n\ninterface ModalArgs {\n  connectionConf: AnyConfigurationModel\n  safelyBreakConnection: () => void\n  dereferenceTypeCount: { [key: string]: number }\n  name: string\n}\n\ninterface DialogDetails {\n  name: string\n  connectionConf: AnyConfigurationModel\n}\n\nexport default observer(function HamburgerMenu({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const session = getSession(model)\n  const [modalInfo, setModalInfo] = useState<ModalArgs>()\n  const [deleteDlgDetails, setDeleteDlgDetails] = useState<DialogDetails>()\n  const [connectionToggleOpen, setConnectionToggleOpen] = useState(false)\n  const [connectionManagerOpen, setConnectionManagerOpen] = useState(false)\n\n  function breakConnection(\n    connectionConf: AnyConfigurationModel,\n    deletingConnection?: boolean,\n  ) {\n    const name = readConfObject(connectionConf, 'name')\n    const result = session.prepareToBreakConnection(connectionConf)\n    if (result) {\n      const [safelyBreakConnection, dereferenceTypeCount] = result\n      if (Object.keys(dereferenceTypeCount).length > 0) {\n        setModalInfo({\n          connectionConf,\n          safelyBreakConnection,\n          dereferenceTypeCount,\n          name,\n        })\n      } else {\n        safelyBreakConnection()\n      }\n    }\n    if (deletingConnection) {\n      setDeleteDlgDetails({ name, connectionConf })\n    }\n  }\n\n  return (\n    <>\n      <CascadingMenuButton\n        menuItems={[\n          ...(isSessionWithAddTracks(session)\n            ? [\n                {\n                  label: 'Add track...',\n                  onClick: () => {\n                    if (isSessionModelWithWidgets(session)) {\n                      session.showWidget(\n                        session.addWidget('AddTrackWidget', 'addTrackWidget', {\n                          view: model.view.id,\n                        }),\n                      )\n                    }\n                  },\n                },\n              ]\n            : []),\n          ...(isSessionModelWithConnections(session)\n            ? [\n                {\n                  label: 'Turn on/off connections...',\n                  onClick: () => setConnectionToggleOpen(true),\n                },\n              ]\n            : []),\n          ...(isSessionModelWithConnectionEditing(session)\n            ? [\n                {\n                  label: 'Add connection...',\n                  onClick: () => {\n                    if (isSessionModelWithWidgets(session)) {\n                      session.showWidget(\n                        session.addWidget(\n                          'AddConnectionWidget',\n                          'addConnectionWidget',\n                        ),\n                      )\n                    }\n                  },\n                },\n                {\n                  label: 'Delete connections...',\n                  onClick: () => setConnectionManagerOpen(true),\n                },\n              ]\n            : []),\n          { type: 'divider' },\n          {\n            label: 'Sort tracks by name',\n            type: 'checkbox',\n            checked: model.activeSortTrackNames,\n            onClick: () => model.setSortTrackNames(!model.activeSortTrackNames),\n          },\n          {\n            label: 'Sort categories by name',\n            type: 'checkbox',\n            checked: model.activeSortCategories,\n            onClick: () => model.setSortCategories(!model.activeSortCategories),\n          },\n          { type: 'divider' },\n          ...(model.hasAnySubcategories\n            ? [\n                {\n                  label: 'Collapse subcategories',\n                  onClick: () => model.collapseSubCategories(),\n                },\n              ]\n            : []),\n          {\n            label: 'Collapse top-level categories',\n            onClick: () => model.collapseTopLevelCategories(),\n          },\n          {\n            label: 'Expand all categories',\n            onClick: () => model.expandAllCategories(),\n          },\n        ]}\n      >\n        <MenuIcon />\n      </CascadingMenuButton>\n      <Suspense fallback={<React.Fragment />}>\n        {modalInfo ? (\n          <CloseConnectionDlg\n            modalInfo={modalInfo}\n            onClose={() => setModalInfo(undefined)}\n          />\n        ) : null}\n        {deleteDlgDetails ? (\n          <DeleteConnectionDlg\n            handleClose={() => setDeleteDlgDetails(undefined)}\n            deleteDialogDetails={deleteDlgDetails}\n            session={session}\n          />\n        ) : null}\n        {connectionManagerOpen ? (\n          <ManageConnectionsDlg\n            handleClose={() => setConnectionManagerOpen(false)}\n            breakConnection={breakConnection}\n            session={session}\n          />\n        ) : null}\n        {connectionToggleOpen ? (\n          <ToggleConnectionsDlg\n            handleClose={() => setConnectionToggleOpen(false)}\n            session={session}\n            breakConnection={breakConnection}\n          />\n        ) : null}\n      </Suspense>\n    </>\n  )\n})\n","import React, { Suspense, lazy, useState } from 'react'\nimport { Button, IconButton, InputAdornment, TextField } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\n\n// icons\nimport ClearIcon from '@mui/icons-material/Clear'\n\n// locals\nimport { HierarchicalTrackSelectorModel } from '../../model'\nimport HamburgerMenu from './HamburgerMenu'\nimport ShoppingCart from '../ShoppingCart'\n\n// lazies\nconst FacetedDialog = lazy(() => import('../faceted/FacetedDialog'))\n\nconst useStyles = makeStyles()(theme => ({\n  searchBox: {\n    margin: theme.spacing(2),\n  },\n  menuIcon: {\n    marginRight: theme.spacing(1),\n    marginBottom: 0,\n  },\n}))\n\nconst SearchTracksTextField = observer(function ({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { filterText } = model\n  const { classes } = useStyles()\n  return (\n    <TextField\n      className={classes.searchBox}\n      label=\"Filter tracks\"\n      value={filterText}\n      onChange={event => model.setFilterText(event.target.value)}\n      fullWidth\n      InputProps={{\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <IconButton onClick={() => model.clearFilterText()}>\n              <ClearIcon />\n            </IconButton>\n          </InputAdornment>\n        ),\n      }}\n    />\n  )\n})\n\nfunction HierarchicalTrackSelectorHeader({\n  model,\n  setHeaderHeight,\n}: {\n  model: HierarchicalTrackSelectorModel\n  setHeaderHeight: (n: number) => void\n}) {\n  const { classes } = useStyles()\n  const [facetedOpen, setFacetedOpen] = useState(false)\n\n  return (\n    <div\n      ref={ref => setHeaderHeight(ref?.getBoundingClientRect().height || 0)}\n      data-testid=\"hierarchical_track_selector\"\n    >\n      <div style={{ display: 'flex' }}>\n        <HamburgerMenu model={model} />\n        <ShoppingCart model={model} />\n        <SearchTracksTextField model={model} />\n        <Button\n          className={classes.menuIcon}\n          onClick={() => setFacetedOpen(true)}\n        >\n          Open faceted selector\n        </Button>\n      </div>\n\n      <Suspense fallback={<div />}>\n        {facetedOpen ? (\n          <FacetedDialog\n            handleClose={() => setFacetedOpen(false)}\n            model={model}\n          />\n        ) : null}\n      </Suspense>\n    </div>\n  )\n}\n\nexport default observer(HierarchicalTrackSelectorHeader)\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport AutoSizer from 'react-virtualized-auto-sizer'\n\n// locals\nimport { HierarchicalTrackSelectorModel } from '../model'\nimport { TreeNode } from '../generateHierarchy'\nimport HierarchicalFab from './HierarchicalFab'\nimport HierarchicalTree from './tree/HierarchicalTree'\nimport HierarchicalHeader from './tree/HierarchicalHeader'\n\n// Don't use autosizer in jest and instead hardcode a height, otherwise fails\n// jest tests\nconst AutoSizedHierarchicalTree = ({\n  tree,\n  model,\n  offset,\n}: {\n  tree: TreeNode\n  model: HierarchicalTrackSelectorModel\n  offset: number\n}) => {\n  return typeof jest === 'undefined' ? (\n    <AutoSizer disableWidth>\n      {args => (\n        <HierarchicalTree\n          height={(args.height || offset) - offset}\n          model={model}\n          tree={tree}\n        />\n      )}\n    </AutoSizer>\n  ) : (\n    <HierarchicalTree height={9000} model={model} tree={tree} />\n  )\n}\n\nconst Wrapper = ({\n  overrideDimensions,\n  children,\n}: {\n  overrideDimensions?: { width: number; height: number }\n  children: React.ReactNode\n}) => {\n  return overrideDimensions ? (\n    <div style={{ ...overrideDimensions }}>{children}</div>\n  ) : (\n    <>{children}</>\n  )\n}\nconst HierarchicalTrackSelectorContainer = observer(function ({\n  model,\n  toolbarHeight,\n  overrideDimensions,\n}: {\n  model: HierarchicalTrackSelectorModel\n  toolbarHeight: number\n  overrideDimensions?: { width: number; height: number }\n}) {\n  return (\n    <Wrapper overrideDimensions={overrideDimensions}>\n      <HierarchicalTrackSelector model={model} toolbarHeight={toolbarHeight} />\n      <HierarchicalFab model={model} />\n    </Wrapper>\n  )\n})\n\nconst HierarchicalTrackSelector = observer(function ({\n  model,\n  toolbarHeight = 0,\n}: {\n  model: HierarchicalTrackSelectorModel\n  toolbarHeight?: number\n}) {\n  const [headerHeight, setHeaderHeight] = useState(0)\n  return (\n    <>\n      <HierarchicalHeader model={model} setHeaderHeight={setHeaderHeight} />\n      <AutoSizedHierarchicalTree\n        tree={model.hierarchy}\n        model={model}\n        offset={toolbarHeight + headerHeight}\n      />\n    </>\n  )\n})\n\nexport default HierarchicalTrackSelectorContainer\n","import React, { useState } from 'react'\nimport { Badge, IconButton } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport JBrowseMenu, { MenuItem } from '@jbrowse/core/ui/Menu'\nimport { getSession, getEnv } from '@jbrowse/core/util'\n\n// icons\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart'\n\n// locals\nimport { HierarchicalTrackSelectorModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  searchBox: {\n    margin: theme.spacing(2),\n  },\n  menuIcon: {\n    marginRight: theme.spacing(1),\n    marginBottom: 0,\n  },\n}))\n\nexport default observer(function ShoppingCart({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { classes } = useStyles()\n  const { selection } = model\n  const { pluginManager } = getEnv(model)\n  const session = getSession(model)\n  const [selectionEl, setSelectionEl] = useState<HTMLButtonElement>()\n  const items = pluginManager.evaluateExtensionPoint(\n    'TrackSelector-multiTrackMenuItems',\n    [],\n    { session },\n  ) as MenuItem[]\n\n  return (\n    <>\n      {selection.length ? (\n        <IconButton\n          className={classes.menuIcon}\n          onClick={event => setSelectionEl(event.currentTarget)}\n        >\n          <Badge badgeContent={selection.length} color=\"primary\">\n            <ShoppingCartIcon />\n          </Badge>\n        </IconButton>\n      ) : null}\n\n      <JBrowseMenu\n        anchorEl={selectionEl}\n        open={Boolean(selectionEl)}\n        onMenuItemClick={(_, callback) => {\n          callback()\n          setSelectionEl(undefined)\n        }}\n        onClose={() => setSelectionEl(undefined)}\n        menuItems={[\n          { label: 'Clear', onClick: () => model.clearSelection() },\n          ...items.map(item => ({\n            ...item,\n            ...('onClick' in item\n              ? { onClick: () => item.onClick(model) }\n              : {}),\n          })),\n        ]}\n      />\n    </>\n  )\n})\n"],"names":["useStyles","makeStyles","theme","fab","position","bottom","spacing","right","observer","_ref","model","classes","session","getSession","_useState","useState","_useState2","_slicedToArray","anchorEl","setAnchorEl","handleFabClose","hasConnections","isSessionModelWithConnections","hasAddTrack","isSessionWithAddTracks","_jsx","_Fragment","children","_jsxs","Fab","color","className","onClick","event","currentTarget","AddIcon","Menu","open","Boolean","onClose","MenuItem","isSessionModelWithWidgets","showWidget","addWidget","view","id","getAllChildren","subtree","map","t","length","conf","flat","Infinity","treeToMap","tree","arguments","undefined","Map","set","i","isUnsupported","name","endsWith","contrastColor","palette","tertiary","contrastText","accordionText","margin","width","Category","isOpen","setOpen","data","menuEl","setMenuEl","toggleCollapse","Typography","ArrowDropDownIcon","ArrowRightIcon","IconButton","stopPropagation","MoreHorizIcon","JBrowseMenu","menuItems","label","r","get","addToSelection","removeFromSelection","_treeToMap$get","_step","_iterator","_createForOfIteratorHelper","s","n","done","entry","value","showTrack","err","e","f","_treeToMap$get2","_step2","_iterator2","hideTrack","onMenuItemClick","_event","callback","compactCheckbox","padding","checkboxLabel","marginRight","backgroundColor","action","selected","TrackLabel","_getSession$getTrackA","_getSession","checked","drawerPosition","onChange","info","setInfo","description","readConfObject","Tooltip","title","placement","FormControlLabel","control","Checkbox","disabled","inputProps","concat","style","background","SanitizedHTML","html","target","_toConsumableArray","getTrackActionMenuItems","call","accordionBase","display","accordionCard","cursor","nestingLevelMarker","borderLeft","accordionColor","main","paddingLeft","Node","isLeaf","nestingLevel","marginLeft","Array","fill","_","idx","left","height","whiteSpace","getNodeData","node","extra","selection","_objectSpread","defaultHeight","isOpenByDefault","filterText","treeRef","useRef","obj","useMemo","Object","fromEntries","trackId","toggleTrack","pathName","toggleCategory","treeWalker","useCallback","_regeneratorRuntime","mark","parentMeta","_i","curr","wrap","_context","prev","next","sent","stop","useEffect","current","recomputeTree","refreshNodes","useDefaultHeight","VariableSizeTree","ref","CloseConnectionDlg","lazy","DeleteConnectionDlg","ManageConnectionsDlg","ToggleConnectionsDlg","modalInfo","setModalInfo","_useState3","_useState4","deleteDlgDetails","setDeleteDlgDetails","_useState5","_useState6","connectionToggleOpen","setConnectionToggleOpen","_useState7","_useState8","connectionManagerOpen","setConnectionManagerOpen","breakConnection","connectionConf","deletingConnection","result","prepareToBreakConnection","_result","safelyBreakConnection","dereferenceTypeCount","keys","CascadingMenuButton","isSessionModelWithConnectionEditing","type","activeSortTrackNames","setSortTrackNames","activeSortCategories","setSortCategories","hasAnySubcategories","collapseSubCategories","collapseTopLevelCategories","expandAllCategories","MenuIcon","Suspense","fallback","React","handleClose","deleteDialogDetails","FacetedDialog","searchBox","menuIcon","marginBottom","SearchTracksTextField","TextField","setFilterText","fullWidth","InputProps","endAdornment","InputAdornment","clearFilterText","ClearIcon","_ref2","setHeaderHeight","facetedOpen","setFacetedOpen","getBoundingClientRect","HamburgerMenu","ShoppingCart","Button","AutoSizedHierarchicalTree","offset","jest","AutoSizer","disableWidth","args","HierarchicalTree","Wrapper","overrideDimensions","HierarchicalTrackSelectorContainer","_ref3","toolbarHeight","HierarchicalTrackSelector","HierarchicalFab","_ref4","_ref4$toolbarHeight","headerHeight","HierarchicalHeader","hierarchy","pluginManager","getEnv","selectionEl","setSelectionEl","items","evaluateExtensionPoint","Badge","badgeContent","ShoppingCartIcon","clearSelection","item"],"sourceRoot":""}