{"version":3,"file":"static/js/1754.56d6e586.chunk.js","mappings":"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","sources":["../../../node_modules/for-each/index.js","../../../node_modules/hic-straw/dist/hic-straw.esm.js","../../../node_modules/inherits/inherits_browser.js","../../../node_modules/is-arguments/index.js","../../../node_modules/is-generator-function/index.js","../../../node_modules/is-typed-array/index.js","../../../node_modules/node-fetch/browser.js","../../../node_modules/util/support/isBufferBrowser.js","../../../node_modules/util/support/types.js","../../../node_modules/util/util.js","../../../node_modules/which-typed-array/index.js","../../../node_modules/available-typed-arrays/index.js"],"sourcesContent":["'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n","// from https://github.com/imaya/zlib.js\n\nvar Zlib = {\n  Huffman: {},\n  Util: {},\n  CRC32: {}\n};\n\n\n/**\n * Compression Method\n * @enum {number}\n */\nZlib.CompressionMethod = {\n  DEFLATE: 8,\n  RESERVED: 15\n};\n\n\n\n\n/**\n * @param {Object=} opt_params options.\n * @constructor\n */\nZlib.Zip = function(opt_params) {\n  opt_params = opt_params || {};\n  /** @type {Array.<{\n   *   buffer: !(Array.<number>|Uint8Array),\n   *   option: Object,\n   *   compressed: boolean,\n   *   encrypted: boolean,\n   *   size: number,\n   *   crc32: number\n   * }>} */\n  this.files = [];\n  /** @type {(Array.<number>|Uint8Array)} */\n  this.comment = opt_params['comment'];\n  /** @type {(Array.<number>|Uint8Array)} */\n  this.password;\n};\n\n\n/**\n * @enum {number}\n */\nZlib.Zip.CompressionMethod = {\n  STORE: 0,\n  DEFLATE: 8\n};\n\n/**\n * @enum {number}\n */\nZlib.Zip.OperatingSystem = {\n  MSDOS: 0,\n  UNIX: 3,\n  MACINTOSH: 7\n};\n\n/**\n * @enum {number}\n */\nZlib.Zip.Flags = {\n  ENCRYPT:    0x0001,\n  DESCRIPTOR: 0x0008,\n  UTF8:       0x0800\n};\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Zip.FileHeaderSignature = [0x50, 0x4b, 0x01, 0x02];\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Zip.LocalFileHeaderSignature = [0x50, 0x4b, 0x03, 0x04];\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Zip.CentralDirectorySignature = [0x50, 0x4b, 0x05, 0x06];\n\n/**\n * @param {Array.<number>|Uint8Array} input\n * @param {Object=} opt_params options.\n */\nZlib.Zip.prototype.addFile = function(input, opt_params) {\n  opt_params = opt_params || {};\n  /** @type {string} */\n  var filename =  opt_params['filename'];\n  /** @type {boolean} */\n  var compressed;\n  /** @type {number} */\n  var size = input.length;\n  /** @type {number} */\n  var crc32 = 0;\n\n  if ( input instanceof Array) {\n    input = new Uint8Array(input);\n  }\n\n  // default\n  if (typeof opt_params['compressionMethod'] !== 'number') {\n    opt_params['compressionMethod'] = Zlib.Zip.CompressionMethod.DEFLATE;\n  }\n\n  // その場で圧縮する場合\n  if (opt_params['compress']) {\n    switch (opt_params['compressionMethod']) {\n      case Zlib.Zip.CompressionMethod.STORE:\n        break;\n      case Zlib.Zip.CompressionMethod.DEFLATE:\n        crc32 = Zlib.CRC32.calc(input);\n        input = this.deflateWithOption(input, opt_params);\n        compressed = true;\n        break;\n      default:\n        throw new Error('unknown compression method:' + opt_params['compressionMethod']);\n    }\n  }\n\n  this.files.push({\n    buffer: input,\n    option: opt_params,\n    compressed: compressed,\n    encrypted: false,\n    size: size,\n    crc32: crc32\n  });\n};\n\n/**\n * @param {(Array.<number>|Uint8Array)} password\n */\nZlib.Zip.prototype.setPassword = function(password) {\n  this.password = password;\n};\n\nZlib.Zip.prototype.compress = function() {\n  /** @type {Array.<{\n   *   buffer: !(Array.<number>|Uint8Array),\n   *   option: Object,\n   *   compressed: boolean,\n   *   encrypted: boolean,\n   *   size: number,\n   *   crc32: number\n   * }>} */\n  var files = this.files;\n  /** @type {{\n   *   buffer: !(Array.<number>|Uint8Array),\n   *   option: Object,\n   *   compressed: boolean,\n   *   encrypted: boolean,\n   *   size: number,\n   *   crc32: number\n   * }} */\n  var file;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var output;\n  /** @type {number} */\n  var op1;\n  /** @type {number} */\n  var op2;\n  /** @type {number} */\n  var op3;\n  /** @type {number} */\n  var localFileSize = 0;\n  /** @type {number} */\n  var centralDirectorySize = 0;\n  /** @type {number} */\n  var endOfCentralDirectorySize;\n  /** @type {number} */\n  var offset;\n  /** @type {number} */\n  var needVersion;\n  /** @type {number} */\n  var flags;\n  /** @type {Zlib.Zip.CompressionMethod} */\n  var compressionMethod;\n  /** @type {Date} */\n  var date;\n  /** @type {number} */\n  var crc32;\n  /** @type {number} */\n  var size;\n  /** @type {number} */\n  var plainSize;\n  /** @type {number} */\n  var filenameLength;\n  /** @type {number} */\n  var extraFieldLength;\n  /** @type {number} */\n  var commentLength;\n  /** @type {(Array.<number>|Uint8Array)} */\n  var filename;\n  /** @type {(Array.<number>|Uint8Array)} */\n  var extraField;\n  /** @type {(Array.<number>|Uint8Array)} */\n  var comment;\n  /** @type {(Array.<number>|Uint8Array)} */\n  var buffer;\n  /** @type {*} */\n  var tmp;\n  /** @type {Array.<number>|Uint32Array|Object} */\n  var key;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n  /** @type {number} */\n  var j;\n  /** @type {number} */\n  var jl;\n\n  // ファイルの圧縮\n  for (i = 0, il = files.length; i < il; ++i) {\n    file = files[i];\n    filenameLength =\n      (file.option['filename']) ? file.option['filename'].length : 0;\n    extraFieldLength =\n      (file.option['extraField']) ? file.option['extraField'].length : 0;\n    commentLength =\n      (file.option['comment']) ? file.option['comment'].length : 0;\n\n    // 圧縮されていなかったら圧縮\n    if (!file.compressed) {\n      // 圧縮前に CRC32 の計算をしておく\n      file.crc32 = Zlib.CRC32.calc(file.buffer);\n\n      switch (file.option['compressionMethod']) {\n        case Zlib.Zip.CompressionMethod.STORE:\n          break;\n        case Zlib.Zip.CompressionMethod.DEFLATE:\n          file.buffer = this.deflateWithOption(file.buffer, file.option);\n          file.compressed = true;\n          break;\n        default:\n          throw new Error('unknown compression method:' + file.option['compressionMethod']);\n      }\n    }\n\n    // encryption\n    if (file.option['password'] !== void 0|| this.password !== void 0) {\n      // init encryption\n      key = this.createEncryptionKey(file.option['password'] || this.password);\n\n      // add header\n      buffer = file.buffer;\n      {\n        tmp = new Uint8Array(buffer.length + 12);\n        tmp.set(buffer, 12);\n        buffer = tmp;\n      }\n\n      for (j = 0; j < 12; ++j) {\n        buffer[j] = this.encode(\n          key,\n          i === 11 ? (file.crc32 & 0xff) : (Math.random() * 256 | 0)\n        );\n      }\n\n      // data encryption\n      for (jl = buffer.length; j < jl; ++j) {\n        buffer[j] = this.encode(key, buffer[j]);\n      }\n      file.buffer = buffer;\n    }\n\n    // 必要バッファサイズの計算\n    localFileSize +=\n      // local file header\n      30 + filenameLength +\n      // file data\n      file.buffer.length;\n\n    centralDirectorySize +=\n      // file header\n      46 + filenameLength + commentLength;\n  }\n\n  // end of central directory\n  endOfCentralDirectorySize = 22 + (this.comment ? this.comment.length : 0);\n  output = new ( Uint8Array )(\n    localFileSize + centralDirectorySize + endOfCentralDirectorySize\n  );\n  op1 = 0;\n  op2 = localFileSize;\n  op3 = op2 + centralDirectorySize;\n\n  // ファイルの圧縮\n  for (i = 0, il = files.length; i < il; ++i) {\n    file = files[i];\n    filenameLength =\n      file.option['filename'] ? file.option['filename'].length :  0;\n    extraFieldLength = 0; // TODO\n    commentLength =\n      file.option['comment'] ? file.option['comment'].length : 0;\n\n    //-------------------------------------------------------------------------\n    // local file header & file header\n    //-------------------------------------------------------------------------\n\n    offset = op1;\n\n    // signature\n    // local file header\n    output[op1++] = Zlib.Zip.LocalFileHeaderSignature[0];\n    output[op1++] = Zlib.Zip.LocalFileHeaderSignature[1];\n    output[op1++] = Zlib.Zip.LocalFileHeaderSignature[2];\n    output[op1++] = Zlib.Zip.LocalFileHeaderSignature[3];\n    // file header\n    output[op2++] = Zlib.Zip.FileHeaderSignature[0];\n    output[op2++] = Zlib.Zip.FileHeaderSignature[1];\n    output[op2++] = Zlib.Zip.FileHeaderSignature[2];\n    output[op2++] = Zlib.Zip.FileHeaderSignature[3];\n\n    // compressor info\n    needVersion = 20;\n    output[op2++] = needVersion & 0xff;\n    output[op2++] =\n      /** @type {Zlib.Zip.OperatingSystem} */\n      (file.option['os']) ||\n      Zlib.Zip.OperatingSystem.MSDOS;\n\n    // need version\n    output[op1++] = output[op2++] =  needVersion       & 0xff;\n    output[op1++] = output[op2++] = (needVersion >> 8) & 0xff;\n\n    // general purpose bit flag\n    flags = 0;\n    if (file.option['password'] || this.password) {\n      flags |= Zlib.Zip.Flags.ENCRYPT;\n    }\n    output[op1++] = output[op2++] =  flags       & 0xff;\n    output[op1++] = output[op2++] = (flags >> 8) & 0xff;\n\n    // compression method\n    compressionMethod =\n      /** @type {Zlib.Zip.CompressionMethod} */\n      (file.option['compressionMethod']);\n    output[op1++] = output[op2++] =  compressionMethod       & 0xff;\n    output[op1++] = output[op2++] = (compressionMethod >> 8) & 0xff;\n\n    // date\n    date = /** @type {(Date|undefined)} */(file.option['date']) || new Date();\n    output[op1++] = output[op2++] =\n      ((date.getMinutes() & 0x7) << 5) |\n      (date.getSeconds() / 2 | 0);\n    output[op1++] = output[op2++] =\n      (date.getHours()   << 3) |\n      (date.getMinutes() >> 3);\n    //\n    output[op1++] = output[op2++] =\n      ((date.getMonth() + 1 & 0x7) << 5) |\n      (date.getDate());\n    output[op1++] = output[op2++] =\n      ((date.getFullYear() - 1980 & 0x7f) << 1) |\n      (date.getMonth() + 1 >> 3);\n\n    // CRC-32\n    crc32 = file.crc32;\n    output[op1++] = output[op2++] =  crc32        & 0xff;\n    output[op1++] = output[op2++] = (crc32 >>  8) & 0xff;\n    output[op1++] = output[op2++] = (crc32 >> 16) & 0xff;\n    output[op1++] = output[op2++] = (crc32 >> 24) & 0xff;\n\n    // compressed size\n    size = file.buffer.length;\n    output[op1++] = output[op2++] =  size        & 0xff;\n    output[op1++] = output[op2++] = (size >>  8) & 0xff;\n    output[op1++] = output[op2++] = (size >> 16) & 0xff;\n    output[op1++] = output[op2++] = (size >> 24) & 0xff;\n\n    // uncompressed size\n    plainSize = file.size;\n    output[op1++] = output[op2++] =  plainSize        & 0xff;\n    output[op1++] = output[op2++] = (plainSize >>  8) & 0xff;\n    output[op1++] = output[op2++] = (plainSize >> 16) & 0xff;\n    output[op1++] = output[op2++] = (plainSize >> 24) & 0xff;\n\n    // filename length\n    output[op1++] = output[op2++] =  filenameLength       & 0xff;\n    output[op1++] = output[op2++] = (filenameLength >> 8) & 0xff;\n\n    // extra field length\n    output[op1++] = output[op2++] =  extraFieldLength       & 0xff;\n    output[op1++] = output[op2++] = (extraFieldLength >> 8) & 0xff;\n\n    // file comment length\n    output[op2++] =  commentLength       & 0xff;\n    output[op2++] = (commentLength >> 8) & 0xff;\n\n    // disk number start\n    output[op2++] = 0;\n    output[op2++] = 0;\n\n    // internal file attributes\n    output[op2++] = 0;\n    output[op2++] = 0;\n\n    // external file attributes\n    output[op2++] = 0;\n    output[op2++] = 0;\n    output[op2++] = 0;\n    output[op2++] = 0;\n\n    // relative offset of local header\n    output[op2++] =  offset        & 0xff;\n    output[op2++] = (offset >>  8) & 0xff;\n    output[op2++] = (offset >> 16) & 0xff;\n    output[op2++] = (offset >> 24) & 0xff;\n\n    // filename\n    filename = file.option['filename'];\n    if (filename) {\n      {\n        output.set(filename, op1);\n        output.set(filename, op2);\n        op1 += filenameLength;\n        op2 += filenameLength;\n      }\n    }\n\n    // extra field\n    extraField = file.option['extraField'];\n    if (extraField) {\n      {\n        output.set(extraField, op1);\n        output.set(extraField, op2);\n        op1 += extraFieldLength;\n        op2 += extraFieldLength;\n      }\n    }\n\n    // comment\n    comment = file.option['comment'];\n    if (comment) {\n      {\n        output.set(comment, op2);\n        op2 += commentLength;\n      }\n    }\n\n    //-------------------------------------------------------------------------\n    // file data\n    //-------------------------------------------------------------------------\n\n    {\n      output.set(file.buffer, op1);\n      op1 += file.buffer.length;\n    }\n  }\n\n  //-------------------------------------------------------------------------\n  // end of central directory\n  //-------------------------------------------------------------------------\n\n  // signature\n  output[op3++] = Zlib.Zip.CentralDirectorySignature[0];\n  output[op3++] = Zlib.Zip.CentralDirectorySignature[1];\n  output[op3++] = Zlib.Zip.CentralDirectorySignature[2];\n  output[op3++] = Zlib.Zip.CentralDirectorySignature[3];\n\n  // number of this disk\n  output[op3++] = 0;\n  output[op3++] = 0;\n\n  // number of the disk with the start of the central directory\n  output[op3++] = 0;\n  output[op3++] = 0;\n\n  // total number of entries in the central directory on this disk\n  output[op3++] =  il       & 0xff;\n  output[op3++] = (il >> 8) & 0xff;\n\n  // total number of entries in the central directory\n  output[op3++] =  il       & 0xff;\n  output[op3++] = (il >> 8) & 0xff;\n\n  // size of the central directory\n  output[op3++] =  centralDirectorySize        & 0xff;\n  output[op3++] = (centralDirectorySize >>  8) & 0xff;\n  output[op3++] = (centralDirectorySize >> 16) & 0xff;\n  output[op3++] = (centralDirectorySize >> 24) & 0xff;\n\n  // offset of start of central directory with respect to the starting disk number\n  output[op3++] =  localFileSize        & 0xff;\n  output[op3++] = (localFileSize >>  8) & 0xff;\n  output[op3++] = (localFileSize >> 16) & 0xff;\n  output[op3++] = (localFileSize >> 24) & 0xff;\n\n  // .ZIP file comment length\n  commentLength = this.comment ? this.comment.length : 0;\n  output[op3++] =  commentLength       & 0xff;\n  output[op3++] = (commentLength >> 8) & 0xff;\n\n  // .ZIP file comment\n  if (this.comment) {\n    {\n      output.set(this.comment, op3);\n      op3 += commentLength;\n    }\n  }\n\n  return output;\n};\n\n/**\n * @param {!(Array.<number>|Uint8Array)} input\n * @param {Object=} opt_params options.\n * @return {!(Array.<number>|Uint8Array)}\n */\nZlib.Zip.prototype.deflateWithOption = function(input, opt_params) {\n  /** @type {Zlib.RawDeflate} */\n  var deflator = new Zlib.RawDeflate(input, opt_params['deflateOption']);\n\n  return deflator.compress();\n};\n\n/**\n * @param {(Array.<number>|Uint32Array)} key\n * @return {number}\n */\nZlib.Zip.prototype.getByte = function(key) {\n  /** @type {number} */\n  var tmp = ((key[2] & 0xffff) | 2);\n\n  return ((tmp * (tmp ^ 1)) >> 8) & 0xff;\n};\n\n/**\n * @param {(Array.<number>|Uint32Array|Object)} key\n * @param {number} n\n * @return {number}\n */\nZlib.Zip.prototype.encode = function(key, n) {\n  /** @type {number} */\n  var tmp = this.getByte(/** @type {(Array.<number>|Uint32Array)} */(key));\n\n  this.updateKeys(/** @type {(Array.<number>|Uint32Array)} */(key), n);\n\n  return tmp ^ n;\n};\n\n/**\n * @param {(Array.<number>|Uint32Array)} key\n * @param {number} n\n */\nZlib.Zip.prototype.updateKeys = function(key, n) {\n  key[0] = Zlib.CRC32.single(key[0], n);\n  key[1] =\n    (((((key[1] + (key[0] & 0xff)) * 20173 >>> 0) * 6681) >>> 0) + 1) >>> 0;\n  key[2] = Zlib.CRC32.single(key[2], key[1] >>> 24);\n};\n\n/**\n * @param {(Array.<number>|Uint8Array)} password\n * @return {!(Array.<number>|Uint32Array|Object)}\n */\nZlib.Zip.prototype.createEncryptionKey = function(password) {\n  /** @type {!(Array.<number>|Uint32Array)} */\n  var key = [305419896, 591751049, 878082192];\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  {\n    key = new Uint32Array(key);\n  }\n\n  for (i = 0, il = password.length; i < il; ++i) {\n    this.updateKeys(key, password[i] & 0xff);\n  }\n\n  return key;\n};\n\n\n\n/**\n * build huffman table from length list.\n * @param {!(Array.<number>|Uint8Array)} lengths length list.\n * @return {!Array} huffman table.\n */\nZlib.Huffman.buildHuffmanTable = function(lengths) {\n  /** @type {number} length list size. */\n  var listSize = lengths.length;\n  /** @type {number} max code length for table size. */\n  var maxCodeLength = 0;\n  /** @type {number} min code length for table size. */\n  var minCodeLength = Number.POSITIVE_INFINITY;\n  /** @type {number} table size. */\n  var size;\n  /** @type {!(Array|Uint8Array)} huffman code table. */\n  var table;\n  /** @type {number} bit length. */\n  var bitLength;\n  /** @type {number} huffman code. */\n  var code;\n  /**\n   * サイズが 2^maxlength 個のテーブルを埋めるためのスキップ長.\n   * @type {number} skip length for table filling.\n   */\n  var skip;\n  /** @type {number} reversed code. */\n  var reversed;\n  /** @type {number} reverse temp. */\n  var rtemp;\n  /** @type {number} loop counter. */\n  var i;\n  /** @type {number} loop limit. */\n  var il;\n  /** @type {number} loop counter. */\n  var j;\n  /** @type {number} table value. */\n  var value;\n\n  // Math.max は遅いので最長の値は for-loop で取得する\n  for (i = 0, il = listSize; i < il; ++i) {\n    if (lengths[i] > maxCodeLength) {\n      maxCodeLength = lengths[i];\n    }\n    if (lengths[i] < minCodeLength) {\n      minCodeLength = lengths[i];\n    }\n  }\n\n  size = 1 << maxCodeLength;\n  table = new ( Uint32Array )(size);\n\n  // ビット長の短い順からハフマン符号を割り当てる\n  for (bitLength = 1, code = 0, skip = 2; bitLength <= maxCodeLength;) {\n    for (i = 0; i < listSize; ++i) {\n      if (lengths[i] === bitLength) {\n        // ビットオーダーが逆になるためビット長分並びを反転する\n        for (reversed = 0, rtemp = code, j = 0; j < bitLength; ++j) {\n          reversed = (reversed << 1) | (rtemp & 1);\n          rtemp >>= 1;\n        }\n\n        // 最大ビット長をもとにテーブルを作るため、\n        // 最大ビット長以外では 0 / 1 どちらでも良い箇所ができる\n        // そのどちらでも良い場所は同じ値で埋めることで\n        // 本来のビット長以上のビット数取得しても問題が起こらないようにする\n        value = (bitLength << 16) | i;\n        for (j = reversed; j < size; j += skip) {\n          table[j] = value;\n        }\n\n        ++code;\n      }\n    }\n\n    // 次のビット長へ\n    ++bitLength;\n    code <<= 1;\n    skip <<= 1;\n  }\n\n  return [table, maxCodeLength, minCodeLength];\n};\n\n\n\n\n//-----------------------------------------------------------------------------\n\n/** @define {number} buffer block size. */\nvar ZLIB_RAW_INFLATE_BUFFER_SIZE = 0x8000; // [ 0x8000 >= ZLIB_BUFFER_BLOCK_SIZE ]\n\n//-----------------------------------------------------------------------------\n\n\nvar buildHuffmanTable = Zlib.Huffman.buildHuffmanTable;\n\n/**\n * @constructor\n * @param {!(Uint8Array|Array.<number>)} input input buffer.\n * @param {Object} opt_params option parameter.\n *\n * opt_params は以下のプロパティを指定する事ができます。\n *   - index: input buffer の deflate コンテナの開始位置.\n *   - blockSize: バッファのブロックサイズ.\n *   - bufferType: Zlib.RawInflate.BufferType の値によってバッファの管理方法を指定する.\n *   - resize: 確保したバッファが実際の大きさより大きかった場合に切り詰める.\n */\nZlib.RawInflate = function(input, opt_params) {\n  /** @type {!(Array.<number>|Uint8Array)} inflated buffer */\n  this.buffer;\n  /** @type {!Array.<(Array.<number>|Uint8Array)>} */\n  this.blocks = [];\n  /** @type {number} block size. */\n  this.bufferSize = ZLIB_RAW_INFLATE_BUFFER_SIZE;\n  /** @type {!number} total output buffer pointer. */\n  this.totalpos = 0;\n  /** @type {!number} input buffer pointer. */\n  this.ip = 0;\n  /** @type {!number} bit stream reader buffer. */\n  this.bitsbuf = 0;\n  /** @type {!number} bit stream reader buffer size. */\n  this.bitsbuflen = 0;\n  /** @type {!(Array.<number>|Uint8Array)} input buffer. */\n  this.input =  new Uint8Array(input) ;\n  /** @type {!(Uint8Array|Array.<number>)} output buffer. */\n  this.output;\n  /** @type {!number} output buffer pointer. */\n  this.op;\n  /** @type {boolean} is final block flag. */\n  this.bfinal = false;\n  /** @type {Zlib.RawInflate.BufferType} buffer management. */\n  this.bufferType = Zlib.RawInflate.BufferType.ADAPTIVE;\n  /** @type {boolean} resize flag for memory size optimization. */\n  this.resize = false;\n\n  // option parameters\n  if (opt_params || !(opt_params = {})) {\n    if (opt_params['index']) {\n      this.ip = opt_params['index'];\n    }\n    if (opt_params['bufferSize']) {\n      this.bufferSize = opt_params['bufferSize'];\n    }\n    if (opt_params['bufferType']) {\n      this.bufferType = opt_params['bufferType'];\n    }\n    if (opt_params['resize']) {\n      this.resize = opt_params['resize'];\n    }\n  }\n\n  // initialize\n  switch (this.bufferType) {\n    case Zlib.RawInflate.BufferType.BLOCK:\n      this.op = Zlib.RawInflate.MaxBackwardLength;\n      this.output =\n        new ( Uint8Array )(\n          Zlib.RawInflate.MaxBackwardLength +\n          this.bufferSize +\n          Zlib.RawInflate.MaxCopyLength\n        );\n      break;\n    case Zlib.RawInflate.BufferType.ADAPTIVE:\n      this.op = 0;\n      this.output = new ( Uint8Array )(this.bufferSize);\n      break;\n    default:\n      throw new Error('invalid inflate mode');\n  }\n};\n\n/**\n * @enum {number}\n */\nZlib.RawInflate.BufferType = {\n  BLOCK: 0,\n  ADAPTIVE: 1\n};\n\n/**\n * decompress.\n * @return {!(Uint8Array|Array.<number>)} inflated buffer.\n */\nZlib.RawInflate.prototype.decompress = function() {\n  while (!this.bfinal) {\n    this.parseBlock();\n  }\n\n  switch (this.bufferType) {\n    case Zlib.RawInflate.BufferType.BLOCK:\n      return this.concatBufferBlock();\n    case Zlib.RawInflate.BufferType.ADAPTIVE:\n      return this.concatBufferDynamic();\n    default:\n      throw new Error('invalid inflate mode');\n  }\n};\n\n/**\n * @const\n * @type {number} max backward length for LZ77.\n */\nZlib.RawInflate.MaxBackwardLength = 32768;\n\n/**\n * @const\n * @type {number} max copy length for LZ77.\n */\nZlib.RawInflate.MaxCopyLength = 258;\n\n/**\n * huffman order\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflate.Order = (function(table) {\n  return  new Uint16Array(table) ;\n})([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n\n/**\n * huffman length code table.\n * @const\n * @type {!(Array.<number>|Uint16Array)}\n */\nZlib.RawInflate.LengthCodeTable = (function(table) {\n  return  new Uint16Array(table) ;\n})([\n  0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008, 0x0009, 0x000a, 0x000b,\n  0x000d, 0x000f, 0x0011, 0x0013, 0x0017, 0x001b, 0x001f, 0x0023, 0x002b,\n  0x0033, 0x003b, 0x0043, 0x0053, 0x0063, 0x0073, 0x0083, 0x00a3, 0x00c3,\n  0x00e3, 0x0102, 0x0102, 0x0102\n]);\n\n/**\n * huffman length extra-bits table.\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflate.LengthExtraTable = (function(table) {\n  return  new Uint8Array(table) ;\n})([\n  0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5,\n  5, 5, 0, 0, 0\n]);\n\n/**\n * huffman dist code table.\n * @const\n * @type {!(Array.<number>|Uint16Array)}\n */\nZlib.RawInflate.DistCodeTable = (function(table) {\n  return  new Uint16Array(table) ;\n})([\n  0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0007, 0x0009, 0x000d, 0x0011,\n  0x0019, 0x0021, 0x0031, 0x0041, 0x0061, 0x0081, 0x00c1, 0x0101, 0x0181,\n  0x0201, 0x0301, 0x0401, 0x0601, 0x0801, 0x0c01, 0x1001, 0x1801, 0x2001,\n  0x3001, 0x4001, 0x6001\n]);\n\n/**\n * huffman dist extra-bits table.\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflate.DistExtraTable = (function(table) {\n  return  new Uint8Array(table) ;\n})([\n  0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11,\n  11, 12, 12, 13, 13\n]);\n\n/**\n * fixed huffman length code table\n * @const\n * @type {!Array}\n */\nZlib.RawInflate.FixedLiteralLengthTable = (function(table) {\n  return table;\n})((function() {\n  var lengths = new ( Uint8Array )(288);\n  var i, il;\n\n  for (i = 0, il = lengths.length; i < il; ++i) {\n    lengths[i] =\n      (i <= 143) ? 8 :\n      (i <= 255) ? 9 :\n      (i <= 279) ? 7 :\n      8;\n  }\n\n  return buildHuffmanTable(lengths);\n})());\n\n/**\n * fixed huffman distance code table\n * @const\n * @type {!Array}\n */\nZlib.RawInflate.FixedDistanceTable = (function(table) {\n  return table;\n})((function() {\n  var lengths = new ( Uint8Array )(30);\n  var i, il;\n\n  for (i = 0, il = lengths.length; i < il; ++i) {\n    lengths[i] = 5;\n  }\n\n  return buildHuffmanTable(lengths);\n})());\n\n/**\n * parse deflated block.\n */\nZlib.RawInflate.prototype.parseBlock = function() {\n  /** @type {number} header */\n  var hdr = this.readBits(3);\n\n  // BFINAL\n  if (hdr & 0x1) {\n    this.bfinal = true;\n  }\n\n  // BTYPE\n  hdr >>>= 1;\n  switch (hdr) {\n    // uncompressed\n    case 0:\n      this.parseUncompressedBlock();\n      break;\n    // fixed huffman\n    case 1:\n      this.parseFixedHuffmanBlock();\n      break;\n    // dynamic huffman\n    case 2:\n      this.parseDynamicHuffmanBlock();\n      break;\n    // reserved or other\n    default:\n      throw new Error('unknown BTYPE: ' + hdr);\n  }\n};\n\n/**\n * read inflate bits\n * @param {number} length bits length.\n * @return {number} read bits.\n */\nZlib.RawInflate.prototype.readBits = function(length) {\n  var bitsbuf = this.bitsbuf;\n  var bitsbuflen = this.bitsbuflen;\n  var input = this.input;\n  var ip = this.ip;\n\n  /** @type {number} */\n  var inputLength = input.length;\n  /** @type {number} input and output byte. */\n  var octet;\n\n  // input byte\n  if (ip + ((length - bitsbuflen + 7) >> 3) >= inputLength) {\n    throw new Error('input buffer is broken');\n  }\n\n  // not enough buffer\n  while (bitsbuflen < length) {\n    bitsbuf |= input[ip++] << bitsbuflen;\n    bitsbuflen += 8;\n  }\n\n  // output byte\n  octet = bitsbuf & /* MASK */ ((1 << length) - 1);\n  bitsbuf >>>= length;\n  bitsbuflen -= length;\n\n  this.bitsbuf = bitsbuf;\n  this.bitsbuflen = bitsbuflen;\n  this.ip = ip;\n\n  return octet;\n};\n\n/**\n * read huffman code using table\n * @param {!(Array.<number>|Uint8Array|Uint16Array)} table huffman code table.\n * @return {number} huffman code.\n */\nZlib.RawInflate.prototype.readCodeByTable = function(table) {\n  var bitsbuf = this.bitsbuf;\n  var bitsbuflen = this.bitsbuflen;\n  var input = this.input;\n  var ip = this.ip;\n\n  /** @type {number} */\n  var inputLength = input.length;\n  /** @type {!(Array.<number>|Uint8Array)} huffman code table */\n  var codeTable = table[0];\n  /** @type {number} */\n  var maxCodeLength = table[1];\n  /** @type {number} code length & code (16bit, 16bit) */\n  var codeWithLength;\n  /** @type {number} code bits length */\n  var codeLength;\n\n  // not enough buffer\n  while (bitsbuflen < maxCodeLength) {\n    if (ip >= inputLength) {\n      break;\n    }\n    bitsbuf |= input[ip++] << bitsbuflen;\n    bitsbuflen += 8;\n  }\n\n  // read max length\n  codeWithLength = codeTable[bitsbuf & ((1 << maxCodeLength) - 1)];\n  codeLength = codeWithLength >>> 16;\n\n  if (codeLength > bitsbuflen) {\n    throw new Error('invalid code length: ' + codeLength);\n  }\n\n  this.bitsbuf = bitsbuf >> codeLength;\n  this.bitsbuflen = bitsbuflen - codeLength;\n  this.ip = ip;\n\n  return codeWithLength & 0xffff;\n};\n\n/**\n * parse uncompressed block.\n */\nZlib.RawInflate.prototype.parseUncompressedBlock = function() {\n  var input = this.input;\n  var ip = this.ip;\n  var output = this.output;\n  var op = this.op;\n\n  /** @type {number} */\n  var inputLength = input.length;\n  /** @type {number} block length */\n  var len;\n  /** @type {number} number for check block length */\n  var nlen;\n  /** @type {number} output buffer length */\n  var olength = output.length;\n  /** @type {number} copy counter */\n  var preCopy;\n\n  // skip buffered header bits\n  this.bitsbuf = 0;\n  this.bitsbuflen = 0;\n\n  // len\n  if (ip + 1 >= inputLength) {\n    throw new Error('invalid uncompressed block header: LEN');\n  }\n  len = input[ip++] | (input[ip++] << 8);\n\n  // nlen\n  if (ip + 1 >= inputLength) {\n    throw new Error('invalid uncompressed block header: NLEN');\n  }\n  nlen = input[ip++] | (input[ip++] << 8);\n\n  // check len & nlen\n  if (len === ~nlen) {\n    throw new Error('invalid uncompressed block header: length verify');\n  }\n\n  // check size\n  if (ip + len > input.length) { throw new Error('input buffer is broken'); }\n\n  // expand buffer\n  switch (this.bufferType) {\n    case Zlib.RawInflate.BufferType.BLOCK:\n      // pre copy\n      while (op + len > output.length) {\n        preCopy = olength - op;\n        len -= preCopy;\n        {\n          output.set(input.subarray(ip, ip + preCopy), op);\n          op += preCopy;\n          ip += preCopy;\n        }\n        this.op = op;\n        output = this.expandBufferBlock();\n        op = this.op;\n      }\n      break;\n    case Zlib.RawInflate.BufferType.ADAPTIVE:\n      while (op + len > output.length) {\n        output = this.expandBufferAdaptive({fixRatio: 2});\n      }\n      break;\n    default:\n      throw new Error('invalid inflate mode');\n  }\n\n  // copy\n  {\n    output.set(input.subarray(ip, ip + len), op);\n    op += len;\n    ip += len;\n  }\n\n  this.ip = ip;\n  this.op = op;\n  this.output = output;\n};\n\n/**\n * parse fixed huffman block.\n */\nZlib.RawInflate.prototype.parseFixedHuffmanBlock = function() {\n  switch (this.bufferType) {\n    case Zlib.RawInflate.BufferType.ADAPTIVE:\n      this.decodeHuffmanAdaptive(\n        Zlib.RawInflate.FixedLiteralLengthTable,\n        Zlib.RawInflate.FixedDistanceTable\n      );\n      break;\n    case Zlib.RawInflate.BufferType.BLOCK:\n      this.decodeHuffmanBlock(\n        Zlib.RawInflate.FixedLiteralLengthTable,\n        Zlib.RawInflate.FixedDistanceTable\n      );\n      break;\n    default:\n      throw new Error('invalid inflate mode');\n  }\n};\n\n/**\n * parse dynamic huffman block.\n */\nZlib.RawInflate.prototype.parseDynamicHuffmanBlock = function() {\n  /** @type {number} number of literal and length codes. */\n  var hlit = this.readBits(5) + 257;\n  /** @type {number} number of distance codes. */\n  var hdist = this.readBits(5) + 1;\n  /** @type {number} number of code lengths. */\n  var hclen = this.readBits(4) + 4;\n  /** @type {!(Uint8Array|Array.<number>)} code lengths. */\n  var codeLengths =\n    new ( Uint8Array )(Zlib.RawInflate.Order.length);\n  /** @type {!Array} code lengths table. */\n  var codeLengthsTable;\n  /** @type {!(Uint8Array|Array.<number>)} literal and length code table. */\n  var litlenTable;\n  /** @type {!(Uint8Array|Array.<number>)} distance code table. */\n  var distTable;\n  /** @type {!(Uint8Array|Array.<number>)} code length table. */\n  var lengthTable;\n  /** @type {number} */\n  var code;\n  /** @type {number} */\n  var prev;\n  /** @type {number} */\n  var repeat;\n  /** @type {number} loop counter. */\n  var i;\n  /** @type {number} loop limit. */\n  var il;\n\n  // decode code lengths\n  for (i = 0; i < hclen; ++i) {\n    codeLengths[Zlib.RawInflate.Order[i]] = this.readBits(3);\n  }\n\n  // decode length table\n  codeLengthsTable = buildHuffmanTable(codeLengths);\n  lengthTable = new ( Uint8Array )(hlit + hdist);\n  for (i = 0, il = hlit + hdist; i < il;) {\n    code = this.readCodeByTable(codeLengthsTable);\n    switch (code) {\n      case 16:\n        repeat = 3 + this.readBits(2);\n        while (repeat--) { lengthTable[i++] = prev; }\n        break;\n      case 17:\n        repeat = 3 + this.readBits(3);\n        while (repeat--) { lengthTable[i++] = 0; }\n        prev = 0;\n        break;\n      case 18:\n        repeat = 11 + this.readBits(7);\n        while (repeat--) { lengthTable[i++] = 0; }\n        prev = 0;\n        break;\n      default:\n        lengthTable[i++] = code;\n        prev = code;\n        break;\n    }\n  }\n\n  litlenTable =  buildHuffmanTable(lengthTable.subarray(0, hlit))\n    ;\n  distTable =  buildHuffmanTable(lengthTable.subarray(hlit))\n    ;\n\n  switch (this.bufferType) {\n    case Zlib.RawInflate.BufferType.ADAPTIVE:\n      this.decodeHuffmanAdaptive(litlenTable, distTable);\n      break;\n    case Zlib.RawInflate.BufferType.BLOCK:\n      this.decodeHuffmanBlock(litlenTable, distTable);\n      break;\n    default:\n      throw new Error('invalid inflate mode');\n  }\n};\n\n/**\n * decode huffman code\n * @param {!(Array.<number>|Uint16Array)} litlen literal and length code table.\n * @param {!(Array.<number>|Uint8Array)} dist distination code table.\n */\nZlib.RawInflate.prototype.decodeHuffmanBlock = function(litlen, dist) {\n  var output = this.output;\n  var op = this.op;\n\n  this.currentLitlenTable = litlen;\n\n  /** @type {number} output position limit. */\n  var olength = output.length - Zlib.RawInflate.MaxCopyLength;\n  /** @type {number} huffman code. */\n  var code;\n  /** @type {number} table index. */\n  var ti;\n  /** @type {number} huffman code distination. */\n  var codeDist;\n  /** @type {number} huffman code length. */\n  var codeLength;\n\n  var lengthCodeTable = Zlib.RawInflate.LengthCodeTable;\n  var lengthExtraTable = Zlib.RawInflate.LengthExtraTable;\n  var distCodeTable = Zlib.RawInflate.DistCodeTable;\n  var distExtraTable = Zlib.RawInflate.DistExtraTable;\n\n  while ((code = this.readCodeByTable(litlen)) !== 256) {\n    // literal\n    if (code < 256) {\n      if (op >= olength) {\n        this.op = op;\n        output = this.expandBufferBlock();\n        op = this.op;\n      }\n      output[op++] = code;\n\n      continue;\n    }\n\n    // length code\n    ti = code - 257;\n    codeLength = lengthCodeTable[ti];\n    if (lengthExtraTable[ti] > 0) {\n      codeLength += this.readBits(lengthExtraTable[ti]);\n    }\n\n    // dist code\n    code = this.readCodeByTable(dist);\n    codeDist = distCodeTable[code];\n    if (distExtraTable[code] > 0) {\n      codeDist += this.readBits(distExtraTable[code]);\n    }\n\n    // lz77 decode\n    if (op >= olength) {\n      this.op = op;\n      output = this.expandBufferBlock();\n      op = this.op;\n    }\n    while (codeLength--) {\n      output[op] = output[(op++) - codeDist];\n    }\n  }\n\n  while (this.bitsbuflen >= 8) {\n    this.bitsbuflen -= 8;\n    this.ip--;\n  }\n  this.op = op;\n};\n\n/**\n * decode huffman code (adaptive)\n * @param {!(Array.<number>|Uint16Array)} litlen literal and length code table.\n * @param {!(Array.<number>|Uint8Array)} dist distination code table.\n */\nZlib.RawInflate.prototype.decodeHuffmanAdaptive = function(litlen, dist) {\n  var output = this.output;\n  var op = this.op;\n\n  this.currentLitlenTable = litlen;\n\n  /** @type {number} output position limit. */\n  var olength = output.length;\n  /** @type {number} huffman code. */\n  var code;\n  /** @type {number} table index. */\n  var ti;\n  /** @type {number} huffman code distination. */\n  var codeDist;\n  /** @type {number} huffman code length. */\n  var codeLength;\n\n  var lengthCodeTable = Zlib.RawInflate.LengthCodeTable;\n  var lengthExtraTable = Zlib.RawInflate.LengthExtraTable;\n  var distCodeTable = Zlib.RawInflate.DistCodeTable;\n  var distExtraTable = Zlib.RawInflate.DistExtraTable;\n\n  while ((code = this.readCodeByTable(litlen)) !== 256) {\n    // literal\n    if (code < 256) {\n      if (op >= olength) {\n        output = this.expandBufferAdaptive();\n        olength = output.length;\n      }\n      output[op++] = code;\n\n      continue;\n    }\n\n    // length code\n    ti = code - 257;\n    codeLength = lengthCodeTable[ti];\n    if (lengthExtraTable[ti] > 0) {\n      codeLength += this.readBits(lengthExtraTable[ti]);\n    }\n\n    // dist code\n    code = this.readCodeByTable(dist);\n    codeDist = distCodeTable[code];\n    if (distExtraTable[code] > 0) {\n      codeDist += this.readBits(distExtraTable[code]);\n    }\n\n    // lz77 decode\n    if (op + codeLength > olength) {\n      output = this.expandBufferAdaptive();\n      olength = output.length;\n    }\n    while (codeLength--) {\n      output[op] = output[(op++) - codeDist];\n    }\n  }\n\n  while (this.bitsbuflen >= 8) {\n    this.bitsbuflen -= 8;\n    this.ip--;\n  }\n  this.op = op;\n};\n\n/**\n * expand output buffer.\n * @param {Object=} opt_param option parameters.\n * @return {!(Array.<number>|Uint8Array)} output buffer.\n */\nZlib.RawInflate.prototype.expandBufferBlock = function(opt_param) {\n  /** @type {!(Array.<number>|Uint8Array)} store buffer. */\n  var buffer =\n    new ( Uint8Array )(\n        this.op - Zlib.RawInflate.MaxBackwardLength\n    );\n  /** @type {number} backward base point */\n  var backward = this.op - Zlib.RawInflate.MaxBackwardLength;\n\n  var output = this.output;\n\n  // copy to output buffer\n  {\n    buffer.set(output.subarray(Zlib.RawInflate.MaxBackwardLength, buffer.length));\n  }\n\n  this.blocks.push(buffer);\n  this.totalpos += buffer.length;\n\n  // copy to backward buffer\n  {\n    output.set(\n      output.subarray(backward, backward + Zlib.RawInflate.MaxBackwardLength)\n    );\n  }\n\n  this.op = Zlib.RawInflate.MaxBackwardLength;\n\n  return output;\n};\n\n/**\n * expand output buffer. (adaptive)\n * @param {Object=} opt_param option parameters.\n * @return {!(Array.<number>|Uint8Array)} output buffer pointer.\n */\nZlib.RawInflate.prototype.expandBufferAdaptive = function(opt_param) {\n  /** @type {!(Array.<number>|Uint8Array)} store buffer. */\n  var buffer;\n  /** @type {number} expantion ratio. */\n  var ratio = (this.input.length / this.ip + 1) | 0;\n  /** @type {number} maximum number of huffman code. */\n  var maxHuffCode;\n  /** @type {number} new output buffer size. */\n  var newSize;\n  /** @type {number} max inflate size. */\n  var maxInflateSize;\n\n  var input = this.input;\n  var output = this.output;\n\n  if (opt_param) {\n    if (typeof opt_param.fixRatio === 'number') {\n      ratio = opt_param.fixRatio;\n    }\n    if (typeof opt_param.addRatio === 'number') {\n      ratio += opt_param.addRatio;\n    }\n  }\n\n  // calculate new buffer size\n  if (ratio < 2) {\n    maxHuffCode =\n      (input.length - this.ip) / this.currentLitlenTable[2];\n    maxInflateSize = (maxHuffCode / 2 * 258) | 0;\n    newSize = maxInflateSize < output.length ?\n      output.length + maxInflateSize :\n      output.length << 1;\n  } else {\n    newSize = output.length * ratio;\n  }\n\n  // buffer expantion\n  {\n    buffer = new Uint8Array(newSize);\n    buffer.set(output);\n  }\n\n  this.output = buffer;\n\n  return this.output;\n};\n\n/**\n * concat output buffer.\n * @return {!(Array.<number>|Uint8Array)} output buffer.\n */\nZlib.RawInflate.prototype.concatBufferBlock = function() {\n  /** @type {number} buffer pointer. */\n  var pos = 0;\n  /** @type {number} buffer pointer. */\n  var limit = this.totalpos + (this.op - Zlib.RawInflate.MaxBackwardLength);\n  /** @type {!(Array.<number>|Uint8Array)} output block array. */\n  var output = this.output;\n  /** @type {!Array} blocks array. */\n  var blocks = this.blocks;\n  /** @type {!(Array.<number>|Uint8Array)} output block array. */\n  var block;\n  /** @type {!(Array.<number>|Uint8Array)} output buffer. */\n  var buffer = new ( Uint8Array )(limit);\n  /** @type {number} loop counter. */\n  var i;\n  /** @type {number} loop limiter. */\n  var il;\n  /** @type {number} loop counter. */\n  var j;\n  /** @type {number} loop limiter. */\n  var jl;\n\n  // single buffer\n  if (blocks.length === 0) {\n    return       this.output.subarray(Zlib.RawInflate.MaxBackwardLength, this.op) ;\n  }\n\n  // copy to buffer\n  for (i = 0, il = blocks.length; i < il; ++i) {\n    block = blocks[i];\n    for (j = 0, jl = block.length; j < jl; ++j) {\n      buffer[pos++] = block[j];\n    }\n  }\n\n  // current buffer\n  for (i = Zlib.RawInflate.MaxBackwardLength, il = this.op; i < il; ++i) {\n    buffer[pos++] = output[i];\n  }\n\n  this.blocks = [];\n  this.buffer = buffer;\n\n  return this.buffer;\n};\n\n/**\n * concat output buffer. (dynamic)\n * @return {!(Array.<number>|Uint8Array)} output buffer.\n */\nZlib.RawInflate.prototype.concatBufferDynamic = function() {\n  /** @type {Array.<number>|Uint8Array} output buffer. */\n  var buffer;\n  var op = this.op;\n\n  {\n    if (this.resize) {\n      buffer = new Uint8Array(op);\n      buffer.set(this.output.subarray(0, op));\n    } else {\n      buffer = this.output.subarray(0, op);\n    }\n  }\n\n  this.buffer = buffer;\n\n  return this.buffer;\n};\n\n\n\n\nvar buildHuffmanTable = Zlib.Huffman.buildHuffmanTable;\n\n/**\n * @param {!(Uint8Array|Array.<number>)} input input buffer.\n * @param {number} ip input buffer pointer.\n * @param {number=} opt_buffersize buffer block size.\n * @constructor\n */\nZlib.RawInflateStream = function(input, ip, opt_buffersize) {\n  /** @type {!Array.<(Array|Uint8Array)>} */\n  this.blocks = [];\n  /** @type {number} block size. */\n  this.bufferSize =\n    opt_buffersize ? opt_buffersize : ZLIB_STREAM_RAW_INFLATE_BUFFER_SIZE;\n  /** @type {!number} total output buffer pointer. */\n  this.totalpos = 0;\n  /** @type {!number} input buffer pointer. */\n  this.ip = ip === void 0 ? 0 : ip;\n  /** @type {!number} bit stream reader buffer. */\n  this.bitsbuf = 0;\n  /** @type {!number} bit stream reader buffer size. */\n  this.bitsbuflen = 0;\n  /** @type {!(Array|Uint8Array)} input buffer. */\n  this.input =  new Uint8Array(input) ;\n  /** @type {!(Uint8Array|Array)} output buffer. */\n  this.output = new ( Uint8Array )(this.bufferSize);\n  /** @type {!number} output buffer pointer. */\n  this.op = 0;\n  /** @type {boolean} is final block flag. */\n  this.bfinal = false;\n  /** @type {number} uncompressed block length. */\n  this.blockLength;\n  /** @type {boolean} resize flag for memory size optimization. */\n  this.resize = false;\n  /** @type {Array} */\n  this.litlenTable;\n  /** @type {Array} */\n  this.distTable;\n  /** @type {number} */\n  this.sp = 0; // stream pointer\n  /** @type {Zlib.RawInflateStream.Status} */\n  this.status = Zlib.RawInflateStream.Status.INITIALIZED;\n\n  //\n  // backup\n  //\n  /** @type {!number} */\n  this.ip_;\n  /** @type {!number} */\n  this.bitsbuflen_;\n  /** @type {!number} */\n  this.bitsbuf_;\n};\n\n/**\n * @enum {number}\n */\nZlib.RawInflateStream.BlockType = {\n  UNCOMPRESSED: 0,\n  FIXED: 1,\n  DYNAMIC: 2\n};\n\n/**\n * @enum {number}\n */\nZlib.RawInflateStream.Status = {\n  INITIALIZED: 0,\n  BLOCK_HEADER_START: 1,\n  BLOCK_HEADER_END: 2,\n  BLOCK_BODY_START: 3,\n  BLOCK_BODY_END: 4,\n  DECODE_BLOCK_START: 5,\n  DECODE_BLOCK_END: 6\n};\n\n/**\n * decompress.\n * @return {!(Uint8Array|Array)} inflated buffer.\n */\nZlib.RawInflateStream.prototype.decompress = function(newInput, ip) {\n  /** @type {boolean} */\n  var stop = false;\n\n  if (newInput !== void 0) {\n    this.input = newInput;\n  }\n\n  if (ip !== void 0) {\n    this.ip = ip;\n  }\n\n  // decompress\n  while (!stop) {\n    switch (this.status) {\n      // block header\n      case Zlib.RawInflateStream.Status.INITIALIZED:\n      case Zlib.RawInflateStream.Status.BLOCK_HEADER_START:\n        if (this.readBlockHeader() < 0) {\n          stop = true;\n        }\n        break;\n      // block body\n      case Zlib.RawInflateStream.Status.BLOCK_HEADER_END: /* FALLTHROUGH */\n      case Zlib.RawInflateStream.Status.BLOCK_BODY_START:\n        switch(this.currentBlockType) {\n          case Zlib.RawInflateStream.BlockType.UNCOMPRESSED:\n            if (this.readUncompressedBlockHeader() < 0) {\n              stop = true;\n            }\n            break;\n          case Zlib.RawInflateStream.BlockType.FIXED:\n            if (this.parseFixedHuffmanBlock() < 0) {\n              stop = true;\n            }\n            break;\n          case Zlib.RawInflateStream.BlockType.DYNAMIC:\n            if (this.parseDynamicHuffmanBlock() < 0) {\n              stop = true;\n            }\n            break;\n        }\n        break;\n      // decode data\n      case Zlib.RawInflateStream.Status.BLOCK_BODY_END:\n      case Zlib.RawInflateStream.Status.DECODE_BLOCK_START:\n        switch(this.currentBlockType) {\n          case Zlib.RawInflateStream.BlockType.UNCOMPRESSED:\n            if (this.parseUncompressedBlock() < 0) {\n              stop = true;\n            }\n            break;\n          case Zlib.RawInflateStream.BlockType.FIXED: /* FALLTHROUGH */\n          case Zlib.RawInflateStream.BlockType.DYNAMIC:\n            if (this.decodeHuffman() < 0) {\n              stop = true;\n            }\n            break;\n        }\n        break;\n      case Zlib.RawInflateStream.Status.DECODE_BLOCK_END:\n        if (this.bfinal) {\n          stop = true;\n        } else {\n          this.status = Zlib.RawInflateStream.Status.INITIALIZED;\n        }\n        break;\n    }\n  }\n\n  return this.concatBuffer();\n};\n\n/**\n * @const\n * @type {number} max backward length for LZ77.\n */\nZlib.RawInflateStream.MaxBackwardLength = 32768;\n\n/**\n * @const\n * @type {number} max copy length for LZ77.\n */\nZlib.RawInflateStream.MaxCopyLength = 258;\n\n/**\n * huffman order\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflateStream.Order = (function(table) {\n  return  new Uint16Array(table) ;\n})([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n\n/**\n * huffman length code table.\n * @const\n * @type {!(Array.<number>|Uint16Array)}\n */\nZlib.RawInflateStream.LengthCodeTable = (function(table) {\n  return  new Uint16Array(table) ;\n})([\n  0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008, 0x0009, 0x000a, 0x000b,\n  0x000d, 0x000f, 0x0011, 0x0013, 0x0017, 0x001b, 0x001f, 0x0023, 0x002b,\n  0x0033, 0x003b, 0x0043, 0x0053, 0x0063, 0x0073, 0x0083, 0x00a3, 0x00c3,\n  0x00e3, 0x0102, 0x0102, 0x0102\n]);\n\n/**\n * huffman length extra-bits table.\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflateStream.LengthExtraTable = (function(table) {\n  return  new Uint8Array(table) ;\n})([\n  0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5,\n  5, 5, 0, 0, 0\n]);\n\n/**\n * huffman dist code table.\n * @const\n * @type {!(Array.<number>|Uint16Array)}\n */\nZlib.RawInflateStream.DistCodeTable = (function(table) {\n  return  new Uint16Array(table) ;\n})([\n  0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0007, 0x0009, 0x000d, 0x0011,\n  0x0019, 0x0021, 0x0031, 0x0041, 0x0061, 0x0081, 0x00c1, 0x0101, 0x0181,\n  0x0201, 0x0301, 0x0401, 0x0601, 0x0801, 0x0c01, 0x1001, 0x1801, 0x2001,\n  0x3001, 0x4001, 0x6001\n]);\n\n/**\n * huffman dist extra-bits table.\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflateStream.DistExtraTable = (function(table) {\n  return  new Uint8Array(table) ;\n})([\n  0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11,\n  11, 12, 12, 13, 13\n]);\n\n/**\n * fixed huffman length code table\n * @const\n * @type {!Array}\n */\nZlib.RawInflateStream.FixedLiteralLengthTable = (function(table) {\n  return table;\n})((function() {\n  var lengths = new ( Uint8Array )(288);\n  var i, il;\n\n  for (i = 0, il = lengths.length; i < il; ++i) {\n    lengths[i] =\n      (i <= 143) ? 8 :\n      (i <= 255) ? 9 :\n      (i <= 279) ? 7 :\n      8;\n  }\n\n  return buildHuffmanTable(lengths);\n})());\n\n/**\n * fixed huffman distance code table\n * @const\n * @type {!Array}\n */\nZlib.RawInflateStream.FixedDistanceTable = (function(table) {\n  return table;\n})((function() {\n  var lengths = new ( Uint8Array )(30);\n  var i, il;\n\n  for (i = 0, il = lengths.length; i < il; ++i) {\n    lengths[i] = 5;\n  }\n\n  return buildHuffmanTable(lengths);\n})());\n\n/**\n * parse deflated block.\n */\nZlib.RawInflateStream.prototype.readBlockHeader = function() {\n  /** @type {number} header */\n  var hdr;\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_HEADER_START;\n\n  this.save_();\n  if ((hdr = this.readBits(3)) < 0) {\n    this.restore_();\n    return -1;\n  }\n\n  // BFINAL\n  if (hdr & 0x1) {\n    this.bfinal = true;\n  }\n\n  // BTYPE\n  hdr >>>= 1;\n  switch (hdr) {\n    case 0: // uncompressed\n      this.currentBlockType = Zlib.RawInflateStream.BlockType.UNCOMPRESSED;\n      break;\n    case 1: // fixed huffman\n      this.currentBlockType = Zlib.RawInflateStream.BlockType.FIXED;\n      break;\n    case 2: // dynamic huffman\n      this.currentBlockType = Zlib.RawInflateStream.BlockType.DYNAMIC;\n      break;\n    default: // reserved or other\n      throw new Error('unknown BTYPE: ' + hdr);\n  }\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_HEADER_END;\n};\n\n/**\n * read inflate bits\n * @param {number} length bits length.\n * @return {number} read bits.\n */\nZlib.RawInflateStream.prototype.readBits = function(length) {\n  var bitsbuf = this.bitsbuf;\n  var bitsbuflen = this.bitsbuflen;\n  var input = this.input;\n  var ip = this.ip;\n\n  /** @type {number} input and output byte. */\n  var octet;\n\n  // not enough buffer\n  while (bitsbuflen < length) {\n    // input byte\n    if (input.length <= ip) {\n      return -1;\n    }\n    octet = input[ip++];\n\n    // concat octet\n    bitsbuf |= octet << bitsbuflen;\n    bitsbuflen += 8;\n  }\n\n  // output byte\n  octet = bitsbuf & /* MASK */ ((1 << length) - 1);\n  bitsbuf >>>= length;\n  bitsbuflen -= length;\n\n  this.bitsbuf = bitsbuf;\n  this.bitsbuflen = bitsbuflen;\n  this.ip = ip;\n\n  return octet;\n};\n\n/**\n * read huffman code using table\n * @param {Array} table huffman code table.\n * @return {number} huffman code.\n */\nZlib.RawInflateStream.prototype.readCodeByTable = function(table) {\n  var bitsbuf = this.bitsbuf;\n  var bitsbuflen = this.bitsbuflen;\n  var input = this.input;\n  var ip = this.ip;\n\n  /** @type {!(Array|Uint8Array)} huffman code table */\n  var codeTable = table[0];\n  /** @type {number} */\n  var maxCodeLength = table[1];\n  /** @type {number} input byte */\n  var octet;\n  /** @type {number} code length & code (16bit, 16bit) */\n  var codeWithLength;\n  /** @type {number} code bits length */\n  var codeLength;\n\n  // not enough buffer\n  while (bitsbuflen < maxCodeLength) {\n    if (input.length <= ip) {\n      return -1;\n    }\n    octet = input[ip++];\n    bitsbuf |= octet << bitsbuflen;\n    bitsbuflen += 8;\n  }\n\n  // read max length\n  codeWithLength = codeTable[bitsbuf & ((1 << maxCodeLength) - 1)];\n  codeLength = codeWithLength >>> 16;\n\n  if (codeLength > bitsbuflen) {\n    throw new Error('invalid code length: ' + codeLength);\n  }\n\n  this.bitsbuf = bitsbuf >> codeLength;\n  this.bitsbuflen = bitsbuflen - codeLength;\n  this.ip = ip;\n\n  return codeWithLength & 0xffff;\n};\n\n/**\n * read uncompressed block header\n */\nZlib.RawInflateStream.prototype.readUncompressedBlockHeader = function() {\n  /** @type {number} block length */\n  var len;\n  /** @type {number} number for check block length */\n  var nlen;\n\n  var input = this.input;\n  var ip = this.ip;\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_START;\n\n  if (ip + 4 >= input.length) {\n    return -1;\n  }\n\n  len = input[ip++] | (input[ip++] << 8);\n  nlen = input[ip++] | (input[ip++] << 8);\n\n  // check len & nlen\n  if (len === ~nlen) {\n    throw new Error('invalid uncompressed block header: length verify');\n  }\n\n  // skip buffered header bits\n  this.bitsbuf = 0;\n  this.bitsbuflen = 0;\n\n  this.ip = ip;\n  this.blockLength = len;\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_END;\n};\n\n/**\n * parse uncompressed block.\n */\nZlib.RawInflateStream.prototype.parseUncompressedBlock = function() {\n  var input = this.input;\n  var ip = this.ip;\n  var output = this.output;\n  var op = this.op;\n  var len = this.blockLength;\n\n  this.status = Zlib.RawInflateStream.Status.DECODE_BLOCK_START;\n\n  // copy\n  // XXX: とりあえず素直にコピー\n  while (len--) {\n    if (op === output.length) {\n      output = this.expandBuffer({fixRatio: 2});\n    }\n\n    // not enough input buffer\n    if (ip >= input.length) {\n      this.ip = ip;\n      this.op = op;\n      this.blockLength = len + 1; // コピーしてないので戻す\n      return -1;\n    }\n\n    output[op++] = input[ip++];\n  }\n\n  if (len < 0) {\n    this.status = Zlib.RawInflateStream.Status.DECODE_BLOCK_END;\n  }\n\n  this.ip = ip;\n  this.op = op;\n\n  return 0;\n};\n\n/**\n * parse fixed huffman block.\n */\nZlib.RawInflateStream.prototype.parseFixedHuffmanBlock = function() {\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_START;\n\n  this.litlenTable = Zlib.RawInflateStream.FixedLiteralLengthTable;\n  this.distTable = Zlib.RawInflateStream.FixedDistanceTable;\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_END;\n\n  return 0;\n};\n\n/**\n * オブジェクトのコンテキストを別のプロパティに退避する.\n * @private\n */\nZlib.RawInflateStream.prototype.save_ = function() {\n  this.ip_ = this.ip;\n  this.bitsbuflen_ = this.bitsbuflen;\n  this.bitsbuf_ = this.bitsbuf;\n};\n\n/**\n * 別のプロパティに退避したコンテキストを復元する.\n * @private\n */\nZlib.RawInflateStream.prototype.restore_ = function() {\n  this.ip = this.ip_;\n  this.bitsbuflen = this.bitsbuflen_;\n  this.bitsbuf = this.bitsbuf_;\n};\n\n/**\n * parse dynamic huffman block.\n */\nZlib.RawInflateStream.prototype.parseDynamicHuffmanBlock = function() {\n  /** @type {number} number of literal and length codes. */\n  var hlit;\n  /** @type {number} number of distance codes. */\n  var hdist;\n  /** @type {number} number of code lengths. */\n  var hclen;\n  /** @type {!(Uint8Array|Array)} code lengths. */\n  var codeLengths =\n    new ( Uint8Array )(Zlib.RawInflateStream.Order.length);\n  /** @type {!Array} code lengths table. */\n  var codeLengthsTable;\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_START;\n\n  this.save_();\n  hlit = this.readBits(5) + 257;\n  hdist = this.readBits(5) + 1;\n  hclen = this.readBits(4) + 4;\n  if (hlit < 0 || hdist < 0 || hclen < 0) {\n    this.restore_();\n    return -1;\n  }\n\n  try {\n    parseDynamicHuffmanBlockImpl.call(this);\n  } catch(e) {\n    this.restore_();\n    return -1;\n  }\n\n  function parseDynamicHuffmanBlockImpl() {\n    /** @type {number} */\n    var bits;\n    var code;\n    var prev = 0;\n    var repeat;\n    /** @type {!(Uint8Array|Array.<number>)} code length table. */\n    var lengthTable;\n    /** @type {number} loop counter. */\n    var i;\n    /** @type {number} loop limit. */\n    var il;\n\n    // decode code lengths\n    for (i = 0; i < hclen; ++i) {\n      if ((bits = this.readBits(3)) < 0) {\n        throw new Error('not enough input');\n      }\n      codeLengths[Zlib.RawInflateStream.Order[i]] = bits;\n    }\n\n    // decode length table\n    codeLengthsTable = buildHuffmanTable(codeLengths);\n    lengthTable = new ( Uint8Array )(hlit + hdist);\n    for (i = 0, il = hlit + hdist; i < il;) {\n      code = this.readCodeByTable(codeLengthsTable);\n      if (code < 0) {\n        throw new Error('not enough input');\n      }\n      switch (code) {\n        case 16:\n          if ((bits = this.readBits(2)) < 0) {\n            throw new Error('not enough input');\n          }\n          repeat = 3 + bits;\n          while (repeat--) { lengthTable[i++] = prev; }\n          break;\n        case 17:\n          if ((bits = this.readBits(3)) < 0) {\n            throw new Error('not enough input');\n          }\n          repeat = 3 + bits;\n          while (repeat--) { lengthTable[i++] = 0; }\n          prev = 0;\n          break;\n        case 18:\n          if ((bits = this.readBits(7)) < 0) {\n            throw new Error('not enough input');\n          }\n          repeat = 11 + bits;\n          while (repeat--) { lengthTable[i++] = 0; }\n          prev = 0;\n          break;\n        default:\n          lengthTable[i++] = code;\n          prev = code;\n          break;\n      }\n    }\n\n    this.litlenTable =  buildHuffmanTable(lengthTable.subarray(0, hlit))\n      ;\n    this.distTable =  buildHuffmanTable(lengthTable.subarray(hlit))\n      ;\n  }\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_END;\n\n  return 0;\n};\n\n/**\n * decode huffman code (dynamic)\n * @return {(number|undefined)} -1 is error.\n */\nZlib.RawInflateStream.prototype.decodeHuffman = function() {\n  var output = this.output;\n  var op = this.op;\n\n  /** @type {number} huffman code. */\n  var code;\n  /** @type {number} table index. */\n  var ti;\n  /** @type {number} huffman code distination. */\n  var codeDist;\n  /** @type {number} huffman code length. */\n  var codeLength;\n\n  var litlen = this.litlenTable;\n  var dist = this.distTable;\n\n  var olength = output.length;\n  var bits;\n\n  this.status = Zlib.RawInflateStream.Status.DECODE_BLOCK_START;\n\n  while (true) {\n    this.save_();\n\n    code = this.readCodeByTable(litlen);\n    if (code < 0) {\n      this.op = op;\n      this.restore_();\n      return -1;\n    }\n\n    if (code === 256) {\n      break;\n    }\n\n    // literal\n    if (code < 256) {\n      if (op === olength) {\n        output = this.expandBuffer();\n        olength = output.length;\n      }\n      output[op++] = code;\n\n      continue;\n    }\n\n    // length code\n    ti = code - 257;\n    codeLength = Zlib.RawInflateStream.LengthCodeTable[ti];\n    if (Zlib.RawInflateStream.LengthExtraTable[ti] > 0) {\n      bits = this.readBits(Zlib.RawInflateStream.LengthExtraTable[ti]);\n      if (bits < 0) {\n        this.op = op;\n        this.restore_();\n        return -1;\n      }\n      codeLength += bits;\n    }\n\n    // dist code\n    code = this.readCodeByTable(dist);\n    if (code < 0) {\n      this.op = op;\n      this.restore_();\n      return -1;\n    }\n    codeDist = Zlib.RawInflateStream.DistCodeTable[code];\n    if (Zlib.RawInflateStream.DistExtraTable[code] > 0) {\n      bits = this.readBits(Zlib.RawInflateStream.DistExtraTable[code]);\n      if (bits < 0) {\n        this.op = op;\n        this.restore_();\n        return -1;\n      }\n      codeDist += bits;\n    }\n\n    // lz77 decode\n    if (op + codeLength >= olength) {\n      output = this.expandBuffer();\n      olength = output.length;\n    }\n\n    while (codeLength--) {\n      output[op] = output[(op++) - codeDist];\n    }\n\n    // break\n    if (this.ip === this.input.length) {\n      this.op = op;\n      return -1;\n    }\n  }\n\n  while (this.bitsbuflen >= 8) {\n    this.bitsbuflen -= 8;\n    this.ip--;\n  }\n\n  this.op = op;\n  this.status = Zlib.RawInflateStream.Status.DECODE_BLOCK_END;\n};\n\n/**\n * expand output buffer. (dynamic)\n * @param {Object=} opt_param option parameters.\n * @return {!(Array|Uint8Array)} output buffer pointer.\n */\nZlib.RawInflateStream.prototype.expandBuffer = function(opt_param) {\n  /** @type {!(Array|Uint8Array)} store buffer. */\n  var buffer;\n  /** @type {number} expantion ratio. */\n  var ratio = (this.input.length / this.ip + 1) | 0;\n  /** @type {number} maximum number of huffman code. */\n  var maxHuffCode;\n  /** @type {number} new output buffer size. */\n  var newSize;\n  /** @type {number} max inflate size. */\n  var maxInflateSize;\n\n  var input = this.input;\n  var output = this.output;\n\n  if (opt_param) {\n    if (typeof opt_param.fixRatio === 'number') {\n      ratio = opt_param.fixRatio;\n    }\n    if (typeof opt_param.addRatio === 'number') {\n      ratio += opt_param.addRatio;\n    }\n  }\n\n  // calculate new buffer size\n  if (ratio < 2) {\n    maxHuffCode =\n      (input.length - this.ip) / this.litlenTable[2];\n    maxInflateSize = (maxHuffCode / 2 * 258) | 0;\n    newSize = maxInflateSize < output.length ?\n      output.length + maxInflateSize :\n      output.length << 1;\n  } else {\n    newSize = output.length * ratio;\n  }\n\n  // buffer expantion\n  {\n    buffer = new Uint8Array(newSize);\n    buffer.set(output);\n  }\n\n  this.output = buffer;\n\n  return this.output;\n};\n\n/**\n * concat output buffer. (dynamic)\n * @return {!(Array|Uint8Array)} output buffer.\n */\nZlib.RawInflateStream.prototype.concatBuffer = function() {\n  /** @type {!(Array|Uint8Array)} output buffer. */\n  var buffer;\n  /** @type {number} */\n  var op = this.op;\n  /** @type {Uint8Array} */\n  var tmp;\n\n  if (this.resize) {\n    {\n      buffer = new Uint8Array(this.output.subarray(this.sp, op));\n    }\n  } else {\n    buffer =\n       this.output.subarray(this.sp, op) ;\n  }\n\n  this.sp = op;\n\n  // compaction\n  if (op > Zlib.RawInflateStream.MaxBackwardLength + this.bufferSize) {\n    this.op = this.sp = Zlib.RawInflateStream.MaxBackwardLength;\n    {\n      tmp = /** @type {Uint8Array} */(this.output);\n      this.output = new Uint8Array(this.bufferSize + Zlib.RawInflateStream.MaxBackwardLength);\n      this.output.set(tmp.subarray(op - Zlib.RawInflateStream.MaxBackwardLength, op));\n    }\n  }\n\n  return buffer;\n};\n\n\n/**\n * @constructor\n * @param {!(Uint8Array|Array)} input deflated buffer.\n * @param {Object=} opt_params option parameters.\n *\n * opt_params は以下のプロパティを指定する事ができます。\n *   - index: input buffer の deflate コンテナの開始位置.\n *   - blockSize: バッファのブロックサイズ.\n *   - verify: 伸張が終わった後 adler-32 checksum の検証を行うか.\n *   - bufferType: Zlib.Inflate.BufferType の値によってバッファの管理方法を指定する.\n *       Zlib.Inflate.BufferType は Zlib.RawInflate.BufferType のエイリアス.\n */\nZlib.Inflate = function(input, opt_params) {\n  /** @type {number} */\n  var cmf;\n  /** @type {number} */\n  var flg;\n\n  /** @type {!(Uint8Array|Array)} */\n  this.input = input;\n  /** @type {number} */\n  this.ip = 0;\n  /** @type {Zlib.RawInflate} */\n  this.rawinflate;\n  /** @type {(boolean|undefined)} verify flag. */\n  this.verify;\n\n  // option parameters\n  if (opt_params || !(opt_params = {})) {\n    if (opt_params['index']) {\n      this.ip = opt_params['index'];\n    }\n    if (opt_params['verify']) {\n      this.verify = opt_params['verify'];\n    }\n  }\n\n  // Compression Method and Flags\n  cmf = input[this.ip++];\n  flg = input[this.ip++];\n\n  // compression method\n  switch (cmf & 0x0f) {\n    case Zlib.CompressionMethod.DEFLATE:\n      this.method = Zlib.CompressionMethod.DEFLATE;\n      break;\n    default:\n      throw new Error('unsupported compression method');\n  }\n\n  // fcheck\n  if (((cmf << 8) + flg) % 31 !== 0) {\n    throw new Error('invalid fcheck flag:' + ((cmf << 8) + flg) % 31);\n  }\n\n  // fdict (not supported)\n  if (flg & 0x20) {\n    throw new Error('fdict flag is not supported');\n  }\n\n  // RawInflate\n  this.rawinflate = new Zlib.RawInflate(input, {\n    'index': this.ip,\n    'bufferSize': opt_params['bufferSize'],\n    'bufferType': opt_params['bufferType'],\n    'resize': opt_params['resize']\n  });\n};\n\n/**\n * @enum {number}\n */\nZlib.Inflate.BufferType = Zlib.RawInflate.BufferType;\n\n/**\n * decompress.\n * @return {!(Uint8Array|Array)} inflated buffer.\n */\nZlib.Inflate.prototype.decompress = function() {\n  /** @type {!(Array|Uint8Array)} input buffer. */\n  var input = this.input;\n  /** @type {!(Uint8Array|Array)} inflated buffer. */\n  var buffer;\n  /** @type {number} adler-32 checksum */\n  var adler32;\n\n  buffer = this.rawinflate.decompress();\n  this.ip = this.rawinflate.ip;\n\n  // verify adler-32\n  if (this.verify) {\n    adler32 = (\n      input[this.ip++] << 24 | input[this.ip++] << 16 |\n      input[this.ip++] << 8 | input[this.ip++]\n    ) >>> 0;\n\n    if (adler32 !== Zlib.Adler32(buffer)) {\n      throw new Error('invalid adler-32 checksum');\n    }\n  }\n\n  return buffer;\n};\n\n\n/* vim:set expandtab ts=2 sw=2 tw=80: */\n\n\n/**\n * @param {!(Uint8Array|Array)} input deflated buffer.\n * @constructor\n */\nZlib.InflateStream = function(input) {\n  /** @type {!(Uint8Array|Array)} */\n  this.input = input === void 0 ? new ( Uint8Array )() : input;\n  /** @type {number} */\n  this.ip = 0;\n  /** @type {Zlib.RawInflateStream} */\n  this.rawinflate = new Zlib.RawInflateStream(this.input, this.ip);\n  /** @type {Zlib.CompressionMethod} */\n  this.method;\n  /** @type {!(Array|Uint8Array)} */\n  this.output = this.rawinflate.output;\n};\n\n/**\n * decompress.\n * @return {!(Uint8Array|Array)} inflated buffer.\n */\nZlib.InflateStream.prototype.decompress = function(input) {\n  /** @type {!(Uint8Array|Array)} inflated buffer. */\n  var buffer;\n\n  // 新しい入力を入力バッファに結合する\n  // XXX Array, Uint8Array のチェックを行うか確認する\n  if (input !== void 0) {\n    {\n      var tmp = new Uint8Array(this.input.length + input.length);\n      tmp.set(this.input, 0);\n      tmp.set(input, this.input.length);\n      this.input = tmp;\n    }\n  }\n\n  if (this.method === void 0) {\n    if(this.readHeader() < 0) {\n      return new ( Uint8Array )();\n    }\n  }\n\n  buffer = this.rawinflate.decompress(this.input, this.ip);\n  if (this.rawinflate.ip !== 0) {\n    this.input = \n      this.input.subarray(this.rawinflate.ip) ;\n    this.ip = 0;\n  }\n\n  // verify adler-32\n  /*\n  if (this.verify) {\n    adler32 =\n      input[this.ip++] << 24 | input[this.ip++] << 16 |\n      input[this.ip++] << 8 | input[this.ip++];\n\n    if (adler32 !== Zlib.Adler32(buffer)) {\n      throw new Error('invalid adler-32 checksum');\n    }\n  }\n  */\n\n  return buffer;\n};\n\nZlib.InflateStream.prototype.readHeader = function() {\n  var ip = this.ip;\n  var input = this.input;\n\n  // Compression Method and Flags\n  var cmf = input[ip++];\n  var flg = input[ip++];\n\n  if (cmf === void 0 || flg === void 0) {\n    return -1;\n  }\n\n  // compression method\n  switch (cmf & 0x0f) {\n    case Zlib.CompressionMethod.DEFLATE:\n      this.method = Zlib.CompressionMethod.DEFLATE;\n      break;\n    default:\n      throw new Error('unsupported compression method');\n  }\n\n  // fcheck\n  if (((cmf << 8) + flg) % 31 !== 0) {\n    throw new Error('invalid fcheck flag:' + ((cmf << 8) + flg) % 31);\n  }\n\n  // fdict (not supported)\n  if (flg & 0x20) {\n    throw new Error('fdict flag is not supported');\n  }\n\n  this.ip = ip;\n};\n\n\n/**\n * @fileoverview GZIP (RFC1952) 展開コンテナ実装.\n */\n\n/**\n * @constructor\n * @param {!(Array|Uint8Array)} input input buffer.\n * @param {Object=} opt_params option parameters.\n */\nZlib.Gunzip = function(input, opt_params) {\n  /** @type {!(Array.<number>|Uint8Array)} input buffer. */\n  this.input = input;\n  /** @type {number} input buffer pointer. */\n  this.ip = 0;\n  /** @type {Array.<Zlib.GunzipMember>} */\n  this.member = [];\n  /** @type {boolean} */\n  this.decompressed = false;\n};\n\n/**\n * @return {Array.<Zlib.GunzipMember>}\n */\nZlib.Gunzip.prototype.getMembers = function() {\n  if (!this.decompressed) {\n    this.decompress();\n  }\n\n  return this.member.slice();\n};\n\n/**\n * inflate gzip data.\n * @return {!(Array.<number>|Uint8Array)} inflated buffer.\n */\nZlib.Gunzip.prototype.decompress = function() {\n  /** @type {number} input length. */\n  var il = this.input.length;\n\n  while (this.ip < il) {\n    this.decodeMember();\n  }\n\n  this.decompressed = true;\n\n  return this.concatMember();\n};\n\n/**\n * decode gzip member.\n */\nZlib.Gunzip.prototype.decodeMember = function() {\n  /** @type {Zlib.GunzipMember} */\n  var member = new Zlib.GunzipMember();\n  /** @type {number} */\n  var isize;\n  /** @type {Zlib.RawInflate} RawInflate implementation. */\n  var rawinflate;\n  /** @type {!(Array.<number>|Uint8Array)} inflated data. */\n  var inflated;\n  /** @type {number} inflate size */\n  var inflen;\n  /** @type {number} character code */\n  var c;\n  /** @type {number} character index in string. */\n  var ci;\n  /** @type {Array.<string>} character array. */\n  var str;\n  /** @type {number} modification time. */\n  var mtime;\n  /** @type {number} */\n  var crc32;\n\n  var input = this.input;\n  var ip = this.ip;\n\n  member.id1 = input[ip++];\n  member.id2 = input[ip++];\n\n  // check signature\n  if (member.id1 !== 0x1f || member.id2 !== 0x8b) {\n    throw new Error('invalid file signature:' + member.id1 + ',' + member.id2);\n  }\n\n  // check compression method\n  member.cm = input[ip++];\n  switch (member.cm) {\n    case 8: /* XXX: use Zlib const */\n      break;\n    default:\n      throw new Error('unknown compression method: ' + member.cm);\n  }\n\n  // flags\n  member.flg = input[ip++];\n\n  // modification time\n  mtime = (input[ip++])       |\n          (input[ip++] << 8)  |\n          (input[ip++] << 16) |\n          (input[ip++] << 24);\n  member.mtime = new Date(mtime * 1000);\n\n  // extra flags\n  member.xfl = input[ip++];\n\n  // operating system\n  member.os = input[ip++];\n\n  // extra\n  if ((member.flg & Zlib.Gzip.FlagsMask.FEXTRA) > 0) {\n    member.xlen = input[ip++] | (input[ip++] << 8);\n    ip = this.decodeSubField(ip, member.xlen);\n  }\n\n  // fname\n  if ((member.flg & Zlib.Gzip.FlagsMask.FNAME) > 0) {\n    for(str = [], ci = 0; (c = input[ip++]) > 0;) {\n      str[ci++] = String.fromCharCode(c);\n    }\n    member.name = str.join('');\n  }\n\n  // fcomment\n  if ((member.flg & Zlib.Gzip.FlagsMask.FCOMMENT) > 0) {\n    for(str = [], ci = 0; (c = input[ip++]) > 0;) {\n      str[ci++] = String.fromCharCode(c);\n    }\n    member.comment = str.join('');\n  }\n\n  // fhcrc\n  if ((member.flg & Zlib.Gzip.FlagsMask.FHCRC) > 0) {\n    member.crc16 = Zlib.CRC32.calc(input, 0, ip) & 0xffff;\n    if (member.crc16 !== (input[ip++] | (input[ip++] << 8))) {\n      throw new Error('invalid header crc16');\n    }\n  }\n\n  // isize を事前に取得すると展開後のサイズが分かるため、\n  // inflate処理のバッファサイズが事前に分かり、高速になる\n  isize = (input[input.length - 4])       | (input[input.length - 3] << 8) |\n          (input[input.length - 2] << 16) | (input[input.length - 1] << 24);\n\n  // isize の妥当性チェック\n  // ハフマン符号では最小 2-bit のため、最大で 1/4 になる\n  // LZ77 符号では 長さと距離 2-Byte で最大 258-Byte を表現できるため、\n  // 1/128 になるとする\n  // ここから入力バッファの残りが isize の 512 倍以上だったら\n  // サイズ指定のバッファ確保は行わない事とする\n  if (input.length - ip - /* CRC-32 */4 - /* ISIZE */4 < isize * 512) {\n    inflen = isize;\n  }\n\n  // compressed block\n  rawinflate = new Zlib.RawInflate(input, {'index': ip, 'bufferSize': inflen});\n  member.data = inflated = rawinflate.decompress();\n  ip = rawinflate.ip;\n\n  // crc32\n  member.crc32 = crc32 =\n    ((input[ip++])       | (input[ip++] << 8) |\n     (input[ip++] << 16) | (input[ip++] << 24)) >>> 0;\n  if (Zlib.CRC32.calc(inflated) !== crc32) {\n    throw new Error('invalid CRC-32 checksum: 0x' +\n        Zlib.CRC32.calc(inflated).toString(16) + ' / 0x' + crc32.toString(16));\n  }\n\n  // input size\n  member.isize = isize =\n    ((input[ip++])       | (input[ip++] << 8) |\n     (input[ip++] << 16) | (input[ip++] << 24)) >>> 0;\n  if ((inflated.length & 0xffffffff) !== isize) {\n    throw new Error('invalid input size: ' +\n        (inflated.length & 0xffffffff) + ' / ' + isize);\n  }\n\n  this.member.push(member);\n  this.ip = ip;\n};\n\n/**\n * サブフィールドのデコード\n * XXX: 現在は何もせずスキップする\n */\nZlib.Gunzip.prototype.decodeSubField = function(ip, length) {\n  return ip + length;\n};\n\n/**\n * @return {!(Array.<number>|Uint8Array)}\n */\nZlib.Gunzip.prototype.concatMember = function() {\n  /** @type {Array.<Zlib.GunzipMember>} */\n  var member = this.member;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n  /** @type {number} */\n  var p = 0;\n  /** @type {number} */\n  var size = 0;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var buffer;\n\n  for (i = 0, il = member.length; i < il; ++i) {\n    size += member[i].data.length;\n  }\n\n  {\n    buffer = new Uint8Array(size);\n    for (i = 0; i < il; ++i) {\n      buffer.set(member[i].data, p);\n      p += member[i].data.length;\n    }\n  }\n\n  return buffer;\n};\n\n\n\n/**\n * @constructor\n */\nZlib.GunzipMember = function() {\n  /** @type {number} signature first byte. */\n  this.id1;\n  /** @type {number} signature second byte. */\n  this.id2;\n  /** @type {number} compression method. */\n  this.cm;\n  /** @type {number} flags. */\n  this.flg;\n  /** @type {Date} modification time. */\n  this.mtime;\n  /** @type {number} extra flags. */\n  this.xfl;\n  /** @type {number} operating system number. */\n  this.os;\n  /** @type {number} CRC-16 value for FHCRC flag. */\n  this.crc16;\n  /** @type {number} extra length. */\n  this.xlen;\n  /** @type {number} CRC-32 value for verification. */\n  this.crc32;\n  /** @type {number} input size modulo 32 value. */\n  this.isize;\n  /** @type {string} filename. */\n  this.name;\n  /** @type {string} comment. */\n  this.comment;\n  /** @type {!(Uint8Array|Array.<number>)} */\n  this.data;\n};\n\nZlib.GunzipMember.prototype.getName = function() {\n  return this.name;\n};\n\nZlib.GunzipMember.prototype.getData = function() {\n  return this.data;\n};\n\nZlib.GunzipMember.prototype.getMtime = function() {\n  return this.mtime;\n};\n\n/**\n * @fileoverview GZIP (RFC1952) 実装.\n */\n\n/**\n * @constructor\n * @param {!(Array|Uint8Array)} input input buffer.\n * @param {Object=} opt_params option parameters.\n */\nZlib.Gzip = function(input, opt_params) {\n  /** @type {!(Array.<number>|Uint8Array)} input buffer. */\n  this.input = input;\n  /** @type {number} input buffer pointer. */\n  this.ip = 0;\n  /** @type {!(Array.<number>|Uint8Array)} output buffer. */\n  this.output;\n  /** @type {number} output buffer. */\n  this.op = 0;\n  /** @type {!Object} flags option flags. */\n  this.flags = {};\n  /** @type {!string} filename. */\n  this.filename;\n  /** @type {!string} comment. */\n  this.comment;\n  /** @type {!Object} deflate options. */\n  this.deflateOptions;\n\n  // option parameters\n  if (opt_params) {\n    if (opt_params['flags']) {\n      this.flags = opt_params['flags'];\n    }\n    if (typeof opt_params['filename'] === 'string') {\n      this.filename = opt_params['filename'];\n    }\n    if (typeof opt_params['comment'] === 'string') {\n      this.comment = opt_params['comment'];\n    }\n    if (opt_params['deflateOptions']) {\n      this.deflateOptions = opt_params['deflateOptions'];\n    }\n  }\n\n  if (!this.deflateOptions) {\n    this.deflateOptions = {};\n  }\n};\n\n/**\n * @type {number}\n * @const\n */\nZlib.Gzip.DefaultBufferSize = 0x8000;\n\n/**\n * encode gzip members.\n * @return {!(Array|Uint8Array)} gzip binary array.\n */\nZlib.Gzip.prototype.compress = function() {\n  /** @type {number} flags. */\n  var flg;\n  /** @type {number} modification time. */\n  var mtime;\n  /** @type {number} CRC-16 value for FHCRC flag. */\n  var crc16;\n  /** @type {number} CRC-32 value for verification. */\n  var crc32;\n  /** @type {!Zlib.RawDeflate} raw deflate object. */\n  var rawdeflate;\n  /** @type {number} character code */\n  var c;\n  /** @type {number} loop counter. */\n  var i;\n  /** @type {number} loop limiter. */\n  var il;\n  /** @type {!(Array|Uint8Array)} output buffer. */\n  var output =\n    new ( Uint8Array )(Zlib.Gzip.DefaultBufferSize);\n  /** @type {number} output buffer pointer. */\n  var op = 0;\n\n  var input = this.input;\n  var ip = this.ip;\n  var filename = this.filename;\n  var comment = this.comment;\n\n  // check signature\n  output[op++] = 0x1f;\n  output[op++] = 0x8b;\n\n  // check compression method\n  output[op++] = 8; /* XXX: use Zlib const */\n\n  // flags\n  flg = 0;\n  if (this.flags['fname'])    flg |= Zlib.Gzip.FlagsMask.FNAME;\n  if (this.flags['fcomment']) flg |= Zlib.Gzip.FlagsMask.FCOMMENT;\n  if (this.flags['fhcrc'])    flg |= Zlib.Gzip.FlagsMask.FHCRC;\n  // XXX: FTEXT\n  // XXX: FEXTRA\n  output[op++] = flg;\n\n  // modification time\n  mtime = (Date.now ? Date.now() : +new Date()) / 1000 | 0;\n  output[op++] = mtime        & 0xff;\n  output[op++] = mtime >>>  8 & 0xff;\n  output[op++] = mtime >>> 16 & 0xff;\n  output[op++] = mtime >>> 24 & 0xff;\n\n  // extra flags\n  output[op++] = 0;\n\n  // operating system\n  output[op++] = Zlib.Gzip.OperatingSystem.UNKNOWN;\n\n  // extra\n  /* NOP */\n\n  // fname\n  if (this.flags['fname'] !== void 0) {\n    for (i = 0, il = filename.length; i < il; ++i) {\n      c = filename.charCodeAt(i);\n      if (c > 0xff) { output[op++] = (c >>> 8) & 0xff; }\n      output[op++] = c & 0xff;\n    }\n    output[op++] = 0; // null termination\n  }\n\n  // fcomment\n  if (this.flags['comment']) {\n    for (i = 0, il = comment.length; i < il; ++i) {\n      c = comment.charCodeAt(i);\n      if (c > 0xff) { output[op++] = (c >>> 8) & 0xff; }\n      output[op++] = c & 0xff;\n    }\n    output[op++] = 0; // null termination\n  }\n\n  // fhcrc\n  if (this.flags['fhcrc']) {\n    crc16 = Zlib.CRC32.calc(output, 0, op) & 0xffff;\n    output[op++] = (crc16      ) & 0xff;\n    output[op++] = (crc16 >>> 8) & 0xff;\n  }\n\n  // add compress option\n  this.deflateOptions['outputBuffer'] = output;\n  this.deflateOptions['outputIndex'] = op;\n\n  // compress\n  rawdeflate = new Zlib.RawDeflate(input, this.deflateOptions);\n  output = rawdeflate.compress();\n  op = rawdeflate.op;\n\n  // expand buffer\n  {\n    if (op + 8 > output.buffer.byteLength) {\n      this.output = new Uint8Array(op + 8);\n      this.output.set(new Uint8Array(output.buffer));\n      output = this.output;\n    } else {\n      output = new Uint8Array(output.buffer);\n    }\n  }\n\n  // crc32\n  crc32 = Zlib.CRC32.calc(input);\n  output[op++] = (crc32       ) & 0xff;\n  output[op++] = (crc32 >>>  8) & 0xff;\n  output[op++] = (crc32 >>> 16) & 0xff;\n  output[op++] = (crc32 >>> 24) & 0xff;\n\n  // input size\n  il = input.length;\n  output[op++] = (il       ) & 0xff;\n  output[op++] = (il >>>  8) & 0xff;\n  output[op++] = (il >>> 16) & 0xff;\n  output[op++] = (il >>> 24) & 0xff;\n\n  this.ip = ip;\n\n  if ( op < output.length) {\n    this.output = output = output.subarray(0, op);\n  }\n\n  return output;\n};\n\n/** @enum {number} */\nZlib.Gzip.OperatingSystem = {\n  FAT: 0,\n  AMIGA: 1,\n  VMS: 2,\n  UNIX: 3,\n  VM_CMS: 4,\n  ATARI_TOS: 5,\n  HPFS: 6,\n  MACINTOSH: 7,\n  Z_SYSTEM: 8,\n  CP_M: 9,\n  TOPS_20: 10,\n  NTFS: 11,\n  QDOS: 12,\n  ACORN_RISCOS: 13,\n  UNKNOWN: 255\n};\n\n/** @enum {number} */\nZlib.Gzip.FlagsMask = {\n  FTEXT: 0x01,\n  FHCRC: 0x02,\n  FEXTRA: 0x04,\n  FNAME: 0x08,\n  FCOMMENT: 0x10\n};\n\n\n/**\n * @fileoverview Heap Sort 実装. ハフマン符号化で使用する.\n */\n\n/**\n * カスタムハフマン符号で使用するヒープ実装\n * @param {number} length ヒープサイズ.\n * @constructor\n */\nZlib.Heap = function(length) {\n  this.buffer = new ( Uint16Array )(length * 2);\n  this.length = 0;\n};\n\n/**\n * 親ノードの index 取得\n * @param {number} index 子ノードの index.\n * @return {number} 親ノードの index.\n *\n */\nZlib.Heap.prototype.getParent = function(index) {\n  return ((index - 2) / 4 | 0) * 2;\n};\n\n/**\n * 子ノードの index 取得\n * @param {number} index 親ノードの index.\n * @return {number} 子ノードの index.\n */\nZlib.Heap.prototype.getChild = function(index) {\n  return 2 * index + 2;\n};\n\n/**\n * Heap に値を追加する\n * @param {number} index キー index.\n * @param {number} value 値.\n * @return {number} 現在のヒープ長.\n */\nZlib.Heap.prototype.push = function(index, value) {\n  var current, parent,\n      heap = this.buffer,\n      swap;\n\n  current = this.length;\n  heap[this.length++] = value;\n  heap[this.length++] = index;\n\n  // ルートノードにたどり着くまで入れ替えを試みる\n  while (current > 0) {\n    parent = this.getParent(current);\n\n    // 親ノードと比較して親の方が小さければ入れ替える\n    if (heap[current] > heap[parent]) {\n      swap = heap[current];\n      heap[current] = heap[parent];\n      heap[parent] = swap;\n\n      swap = heap[current + 1];\n      heap[current + 1] = heap[parent + 1];\n      heap[parent + 1] = swap;\n\n      current = parent;\n    // 入れ替えが必要なくなったらそこで抜ける\n    } else {\n      break;\n    }\n  }\n\n  return this.length;\n};\n\n/**\n * Heapから一番大きい値を返す\n * @return {{index: number, value: number, length: number}} {index: キーindex,\n *     value: 値, length: ヒープ長} の Object.\n */\nZlib.Heap.prototype.pop = function() {\n  var index, value,\n      heap = this.buffer, swap,\n      current, parent;\n\n  value = heap[0];\n  index = heap[1];\n\n  // 後ろから値を取る\n  this.length -= 2;\n  heap[0] = heap[this.length];\n  heap[1] = heap[this.length + 1];\n\n  parent = 0;\n  // ルートノードから下がっていく\n  while (true) {\n    current = this.getChild(parent);\n\n    // 範囲チェック\n    if (current >= this.length) {\n      break;\n    }\n\n    // 隣のノードと比較して、隣の方が値が大きければ隣を現在ノードとして選択\n    if (current + 2 < this.length && heap[current + 2] > heap[current]) {\n      current += 2;\n    }\n\n    // 親ノードと比較して親の方が小さい場合は入れ替える\n    if (heap[current] > heap[parent]) {\n      swap = heap[parent];\n      heap[parent] = heap[current];\n      heap[current] = swap;\n\n      swap = heap[parent + 1];\n      heap[parent + 1] = heap[current + 1];\n      heap[current + 1] = swap;\n    } else {\n      break;\n    }\n\n    parent = current;\n  }\n\n  return {index: index, value: value, length: this.length};\n};\n\n\n/* vim:set expandtab ts=2 sw=2 tw=80: */\n\n/**\n * @fileoverview Deflate (RFC1951) 符号化アルゴリズム実装.\n */\n\n\n/**\n * Raw Deflate 実装\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} input 符号化する対象のバッファ.\n * @param {Object=} opt_params option parameters.\n *\n * typed array が使用可能なとき、outputBuffer が Array は自動的に Uint8Array に\n * 変換されます.\n * 別のオブジェクトになるため出力バッファを参照している変数などは\n * 更新する必要があります.\n */\nZlib.RawDeflate = function(input, opt_params) {\n  /** @type {Zlib.RawDeflate.CompressionType} */\n  this.compressionType = Zlib.RawDeflate.CompressionType.DYNAMIC;\n  /** @type {number} */\n  this.lazy = 0;\n  /** @type {!(Array.<number>|Uint32Array)} */\n  this.freqsLitLen;\n  /** @type {!(Array.<number>|Uint32Array)} */\n  this.freqsDist;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.input =\n    ( input instanceof Array) ? new Uint8Array(input) : input;\n  /** @type {!(Array.<number>|Uint8Array)} output output buffer. */\n  this.output;\n  /** @type {number} pos output buffer position. */\n  this.op = 0;\n\n  // option parameters\n  if (opt_params) {\n    if (opt_params['lazy']) {\n      this.lazy = opt_params['lazy'];\n    }\n    if (typeof opt_params['compressionType'] === 'number') {\n      this.compressionType = opt_params['compressionType'];\n    }\n    if (opt_params['outputBuffer']) {\n      this.output =\n        ( opt_params['outputBuffer'] instanceof Array) ?\n        new Uint8Array(opt_params['outputBuffer']) : opt_params['outputBuffer'];\n    }\n    if (typeof opt_params['outputIndex'] === 'number') {\n      this.op = opt_params['outputIndex'];\n    }\n  }\n\n  if (!this.output) {\n    this.output = new ( Uint8Array )(0x8000);\n  }\n};\n\n/**\n * @enum {number}\n */\nZlib.RawDeflate.CompressionType = {\n  NONE: 0,\n  FIXED: 1,\n  DYNAMIC: 2,\n  RESERVED: 3\n};\n\n\n/**\n * LZ77 の最小マッチ長\n * @const\n * @type {number}\n */\nZlib.RawDeflate.Lz77MinLength = 3;\n\n/**\n * LZ77 の最大マッチ長\n * @const\n * @type {number}\n */\nZlib.RawDeflate.Lz77MaxLength = 258;\n\n/**\n * LZ77 のウィンドウサイズ\n * @const\n * @type {number}\n */\nZlib.RawDeflate.WindowSize = 0x8000;\n\n/**\n * 最長の符号長\n * @const\n * @type {number}\n */\nZlib.RawDeflate.MaxCodeLength = 16;\n\n/**\n * ハフマン符号の最大数値\n * @const\n * @type {number}\n */\nZlib.RawDeflate.HUFMAX = 286;\n\n/**\n * 固定ハフマン符号の符号化テーブル\n * @const\n * @type {Array.<Array.<number, number>>}\n */\nZlib.RawDeflate.FixedHuffmanTable = (function() {\n  var table = [], i;\n\n  for (i = 0; i < 288; i++) {\n    switch (true) {\n      case (i <= 143): table.push([i       + 0x030, 8]); break;\n      case (i <= 255): table.push([i - 144 + 0x190, 9]); break;\n      case (i <= 279): table.push([i - 256 + 0x000, 7]); break;\n      case (i <= 287): table.push([i - 280 + 0x0C0, 8]); break;\n      default:\n        throw 'invalid literal: ' + i;\n    }\n  }\n\n  return table;\n})();\n\n/**\n * DEFLATE ブロックの作成\n * @return {!(Array.<number>|Uint8Array)} 圧縮済み byte array.\n */\nZlib.RawDeflate.prototype.compress = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var blockArray;\n  /** @type {number} */\n  var position;\n  /** @type {number} */\n  var length;\n\n  var input = this.input;\n\n  // compression\n  switch (this.compressionType) {\n    case Zlib.RawDeflate.CompressionType.NONE:\n      // each 65535-Byte (length header: 16-bit)\n      for (position = 0, length = input.length; position < length;) {\n        blockArray = \n          input.subarray(position, position + 0xffff) ;\n        position += blockArray.length;\n        this.makeNocompressBlock(blockArray, (position === length));\n      }\n      break;\n    case Zlib.RawDeflate.CompressionType.FIXED:\n      this.output = this.makeFixedHuffmanBlock(input, true);\n      this.op = this.output.length;\n      break;\n    case Zlib.RawDeflate.CompressionType.DYNAMIC:\n      this.output = this.makeDynamicHuffmanBlock(input, true);\n      this.op = this.output.length;\n      break;\n    default:\n      throw 'invalid compression type';\n  }\n\n  return this.output;\n};\n\n/**\n * 非圧縮ブロックの作成\n * @param {!(Array.<number>|Uint8Array)} blockArray ブロックデータ byte array.\n * @param {!boolean} isFinalBlock 最後のブロックならばtrue.\n * @return {!(Array.<number>|Uint8Array)} 非圧縮ブロック byte array.\n */\nZlib.RawDeflate.prototype.makeNocompressBlock =\nfunction(blockArray, isFinalBlock) {\n  /** @type {number} */\n  var bfinal;\n  /** @type {Zlib.RawDeflate.CompressionType} */\n  var btype;\n  /** @type {number} */\n  var len;\n  /** @type {number} */\n  var nlen;\n\n  var output = this.output;\n  var op = this.op;\n\n  // expand buffer\n  {\n    output = new Uint8Array(this.output.buffer);\n    while (output.length <= op + blockArray.length + 5) {\n      output = new Uint8Array(output.length << 1);\n    }\n    output.set(this.output);\n  }\n\n  // header\n  bfinal = isFinalBlock ? 1 : 0;\n  btype = Zlib.RawDeflate.CompressionType.NONE;\n  output[op++] = (bfinal) | (btype << 1);\n\n  // length\n  len = blockArray.length;\n  nlen = (~len + 0x10000) & 0xffff;\n  output[op++] =          len & 0xff;\n  output[op++] =  (len >>> 8) & 0xff;\n  output[op++] =         nlen & 0xff;\n  output[op++] = (nlen >>> 8) & 0xff;\n\n  // copy buffer\n  {\n     output.set(blockArray, op);\n     op += blockArray.length;\n     output = output.subarray(0, op);\n  }\n\n  this.op = op;\n  this.output = output;\n\n  return output;\n};\n\n/**\n * 固定ハフマンブロックの作成\n * @param {!(Array.<number>|Uint8Array)} blockArray ブロックデータ byte array.\n * @param {!boolean} isFinalBlock 最後のブロックならばtrue.\n * @return {!(Array.<number>|Uint8Array)} 固定ハフマン符号化ブロック byte array.\n */\nZlib.RawDeflate.prototype.makeFixedHuffmanBlock =\nfunction(blockArray, isFinalBlock) {\n  /** @type {Zlib.BitStream} */\n  var stream = new Zlib.BitStream(\n    new Uint8Array(this.output.buffer) , this.op);\n  /** @type {number} */\n  var bfinal;\n  /** @type {Zlib.RawDeflate.CompressionType} */\n  var btype;\n  /** @type {!(Array.<number>|Uint16Array)} */\n  var data;\n\n  // header\n  bfinal = isFinalBlock ? 1 : 0;\n  btype = Zlib.RawDeflate.CompressionType.FIXED;\n\n  stream.writeBits(bfinal, 1, true);\n  stream.writeBits(btype, 2, true);\n\n  data = this.lz77(blockArray);\n  this.fixedHuffman(data, stream);\n\n  return stream.finish();\n};\n\n/**\n * 動的ハフマンブロックの作成\n * @param {!(Array.<number>|Uint8Array)} blockArray ブロックデータ byte array.\n * @param {!boolean} isFinalBlock 最後のブロックならばtrue.\n * @return {!(Array.<number>|Uint8Array)} 動的ハフマン符号ブロック byte array.\n */\nZlib.RawDeflate.prototype.makeDynamicHuffmanBlock =\nfunction(blockArray, isFinalBlock) {\n  /** @type {Zlib.BitStream} */\n  var stream = new Zlib.BitStream(\n    new Uint8Array(this.output.buffer) , this.op);\n  /** @type {number} */\n  var bfinal;\n  /** @type {Zlib.RawDeflate.CompressionType} */\n  var btype;\n  /** @type {!(Array.<number>|Uint16Array)} */\n  var data;\n  /** @type {number} */\n  var hlit;\n  /** @type {number} */\n  var hdist;\n  /** @type {number} */\n  var hclen;\n  /** @const @type {Array.<number>} */\n  var hclenOrder =\n        [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var litLenLengths;\n  /** @type {!(Array.<number>|Uint16Array)} */\n  var litLenCodes;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var distLengths;\n  /** @type {!(Array.<number>|Uint16Array)} */\n  var distCodes;\n  /** @type {{\n   *   codes: !(Array.<number>|Uint32Array),\n   *   freqs: !(Array.<number>|Uint8Array)\n   * }} */\n  var treeSymbols;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var treeLengths;\n  /** @type {Array} */\n  var transLengths = new Array(19);\n  /** @type {!(Array.<number>|Uint16Array)} */\n  var treeCodes;\n  /** @type {number} */\n  var code;\n  /** @type {number} */\n  var bitlen;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  // header\n  bfinal = isFinalBlock ? 1 : 0;\n  btype = Zlib.RawDeflate.CompressionType.DYNAMIC;\n\n  stream.writeBits(bfinal, 1, true);\n  stream.writeBits(btype, 2, true);\n\n  data = this.lz77(blockArray);\n\n  // リテラル・長さ, 距離のハフマン符号と符号長の算出\n  litLenLengths = this.getLengths_(this.freqsLitLen, 15);\n  litLenCodes = this.getCodesFromLengths_(litLenLengths);\n  distLengths = this.getLengths_(this.freqsDist, 7);\n  distCodes = this.getCodesFromLengths_(distLengths);\n\n  // HLIT, HDIST の決定\n  for (hlit = 286; hlit > 257 && litLenLengths[hlit - 1] === 0; hlit--) {}\n  for (hdist = 30; hdist > 1 && distLengths[hdist - 1] === 0; hdist--) {}\n\n  // HCLEN\n  treeSymbols =\n    this.getTreeSymbols_(hlit, litLenLengths, hdist, distLengths);\n  treeLengths = this.getLengths_(treeSymbols.freqs, 7);\n  for (i = 0; i < 19; i++) {\n    transLengths[i] = treeLengths[hclenOrder[i]];\n  }\n  for (hclen = 19; hclen > 4 && transLengths[hclen - 1] === 0; hclen--) {}\n\n  treeCodes = this.getCodesFromLengths_(treeLengths);\n\n  // 出力\n  stream.writeBits(hlit - 257, 5, true);\n  stream.writeBits(hdist - 1, 5, true);\n  stream.writeBits(hclen - 4, 4, true);\n  for (i = 0; i < hclen; i++) {\n    stream.writeBits(transLengths[i], 3, true);\n  }\n\n  // ツリーの出力\n  for (i = 0, il = treeSymbols.codes.length; i < il; i++) {\n    code = treeSymbols.codes[i];\n\n    stream.writeBits(treeCodes[code], treeLengths[code], true);\n\n    // extra bits\n    if (code >= 16) {\n      i++;\n      switch (code) {\n        case 16: bitlen = 2; break;\n        case 17: bitlen = 3; break;\n        case 18: bitlen = 7; break;\n        default:\n          throw 'invalid code: ' + code;\n      }\n\n      stream.writeBits(treeSymbols.codes[i], bitlen, true);\n    }\n  }\n\n  this.dynamicHuffman(\n    data,\n    [litLenCodes, litLenLengths],\n    [distCodes, distLengths],\n    stream\n  );\n\n  return stream.finish();\n};\n\n\n/**\n * 動的ハフマン符号化(カスタムハフマンテーブル)\n * @param {!(Array.<number>|Uint16Array)} dataArray LZ77 符号化済み byte array.\n * @param {!Zlib.BitStream} stream 書き込み用ビットストリーム.\n * @return {!Zlib.BitStream} ハフマン符号化済みビットストリームオブジェクト.\n */\nZlib.RawDeflate.prototype.dynamicHuffman =\nfunction(dataArray, litLen, dist, stream) {\n  /** @type {number} */\n  var index;\n  /** @type {number} */\n  var length;\n  /** @type {number} */\n  var literal;\n  /** @type {number} */\n  var code;\n  /** @type {number} */\n  var litLenCodes;\n  /** @type {number} */\n  var litLenLengths;\n  /** @type {number} */\n  var distCodes;\n  /** @type {number} */\n  var distLengths;\n\n  litLenCodes = litLen[0];\n  litLenLengths = litLen[1];\n  distCodes = dist[0];\n  distLengths = dist[1];\n\n  // 符号を BitStream に書き込んでいく\n  for (index = 0, length = dataArray.length; index < length; ++index) {\n    literal = dataArray[index];\n\n    // literal or length\n    stream.writeBits(litLenCodes[literal], litLenLengths[literal], true);\n\n    // 長さ・距離符号\n    if (literal > 256) {\n      // length extra\n      stream.writeBits(dataArray[++index], dataArray[++index], true);\n      // distance\n      code = dataArray[++index];\n      stream.writeBits(distCodes[code], distLengths[code], true);\n      // distance extra\n      stream.writeBits(dataArray[++index], dataArray[++index], true);\n    // 終端\n    } else if (literal === 256) {\n      break;\n    }\n  }\n\n  return stream;\n};\n\n/**\n * 固定ハフマン符号化\n * @param {!(Array.<number>|Uint16Array)} dataArray LZ77 符号化済み byte array.\n * @param {!Zlib.BitStream} stream 書き込み用ビットストリーム.\n * @return {!Zlib.BitStream} ハフマン符号化済みビットストリームオブジェクト.\n */\nZlib.RawDeflate.prototype.fixedHuffman = function(dataArray, stream) {\n  /** @type {number} */\n  var index;\n  /** @type {number} */\n  var length;\n  /** @type {number} */\n  var literal;\n\n  // 符号を BitStream に書き込んでいく\n  for (index = 0, length = dataArray.length; index < length; index++) {\n    literal = dataArray[index];\n\n    // 符号の書き込み\n    Zlib.BitStream.prototype.writeBits.apply(\n      stream,\n      Zlib.RawDeflate.FixedHuffmanTable[literal]\n    );\n\n    // 長さ・距離符号\n    if (literal > 0x100) {\n      // length extra\n      stream.writeBits(dataArray[++index], dataArray[++index], true);\n      // distance\n      stream.writeBits(dataArray[++index], 5);\n      // distance extra\n      stream.writeBits(dataArray[++index], dataArray[++index], true);\n    // 終端\n    } else if (literal === 0x100) {\n      break;\n    }\n  }\n\n  return stream;\n};\n\n/**\n * マッチ情報\n * @param {!number} length マッチした長さ.\n * @param {!number} backwardDistance マッチ位置との距離.\n * @constructor\n */\nZlib.RawDeflate.Lz77Match = function(length, backwardDistance) {\n  /** @type {number} match length. */\n  this.length = length;\n  /** @type {number} backward distance. */\n  this.backwardDistance = backwardDistance;\n};\n\n/**\n * 長さ符号テーブル.\n * [コード, 拡張ビット, 拡張ビット長] の配列となっている.\n * @const\n * @type {!(Array.<number>|Uint32Array)}\n */\nZlib.RawDeflate.Lz77Match.LengthCodeTable = (function(table) {\n  return  new Uint32Array(table) ;\n})((function() {\n  /** @type {!Array} */\n  var table = [];\n  /** @type {number} */\n  var i;\n  /** @type {!Array.<number>} */\n  var c;\n\n  for (i = 3; i <= 258; i++) {\n    c = code(i);\n    table[i] = (c[2] << 24) | (c[1] << 16) | c[0];\n  }\n\n  /**\n   * @param {number} length lz77 length.\n   * @return {!Array.<number>} lz77 codes.\n   */\n  function code(length) {\n    switch (true) {\n      case (length === 3): return [257, length - 3, 0];      case (length === 4): return [258, length - 4, 0];      case (length === 5): return [259, length - 5, 0];      case (length === 6): return [260, length - 6, 0];      case (length === 7): return [261, length - 7, 0];      case (length === 8): return [262, length - 8, 0];      case (length === 9): return [263, length - 9, 0];      case (length === 10): return [264, length - 10, 0];      case (length <= 12): return [265, length - 11, 1];      case (length <= 14): return [266, length - 13, 1];      case (length <= 16): return [267, length - 15, 1];      case (length <= 18): return [268, length - 17, 1];      case (length <= 22): return [269, length - 19, 2];      case (length <= 26): return [270, length - 23, 2];      case (length <= 30): return [271, length - 27, 2];      case (length <= 34): return [272, length - 31, 2];      case (length <= 42): return [273, length - 35, 3];      case (length <= 50): return [274, length - 43, 3];      case (length <= 58): return [275, length - 51, 3];      case (length <= 66): return [276, length - 59, 3];      case (length <= 82): return [277, length - 67, 4];      case (length <= 98): return [278, length - 83, 4];      case (length <= 114): return [279, length - 99, 4];      case (length <= 130): return [280, length - 115, 4];      case (length <= 162): return [281, length - 131, 5];      case (length <= 194): return [282, length - 163, 5];      case (length <= 226): return [283, length - 195, 5];      case (length <= 257): return [284, length - 227, 5];      case (length === 258): return [285, length - 258, 0];      default: throw 'invalid length: ' + length;\n    }\n  }\n\n  return table;\n})());\n\n/**\n * 距離符号テーブル\n * @param {!number} dist 距離.\n * @return {!Array.<number>} コード、拡張ビット、拡張ビット長の配列.\n * @private\n */\nZlib.RawDeflate.Lz77Match.prototype.getDistanceCode_ = function(dist) {\n  /** @type {!Array.<number>} distance code table. */\n  var r;\n\n  switch (true) {\n    case (dist === 1): r = [0, dist - 1, 0]; break;\n    case (dist === 2): r = [1, dist - 2, 0]; break;\n    case (dist === 3): r = [2, dist - 3, 0]; break;\n    case (dist === 4): r = [3, dist - 4, 0]; break;\n    case (dist <= 6): r = [4, dist - 5, 1]; break;\n    case (dist <= 8): r = [5, dist - 7, 1]; break;\n    case (dist <= 12): r = [6, dist - 9, 2]; break;\n    case (dist <= 16): r = [7, dist - 13, 2]; break;\n    case (dist <= 24): r = [8, dist - 17, 3]; break;\n    case (dist <= 32): r = [9, dist - 25, 3]; break;\n    case (dist <= 48): r = [10, dist - 33, 4]; break;\n    case (dist <= 64): r = [11, dist - 49, 4]; break;\n    case (dist <= 96): r = [12, dist - 65, 5]; break;\n    case (dist <= 128): r = [13, dist - 97, 5]; break;\n    case (dist <= 192): r = [14, dist - 129, 6]; break;\n    case (dist <= 256): r = [15, dist - 193, 6]; break;\n    case (dist <= 384): r = [16, dist - 257, 7]; break;\n    case (dist <= 512): r = [17, dist - 385, 7]; break;\n    case (dist <= 768): r = [18, dist - 513, 8]; break;\n    case (dist <= 1024): r = [19, dist - 769, 8]; break;\n    case (dist <= 1536): r = [20, dist - 1025, 9]; break;\n    case (dist <= 2048): r = [21, dist - 1537, 9]; break;\n    case (dist <= 3072): r = [22, dist - 2049, 10]; break;\n    case (dist <= 4096): r = [23, dist - 3073, 10]; break;\n    case (dist <= 6144): r = [24, dist - 4097, 11]; break;\n    case (dist <= 8192): r = [25, dist - 6145, 11]; break;\n    case (dist <= 12288): r = [26, dist - 8193, 12]; break;\n    case (dist <= 16384): r = [27, dist - 12289, 12]; break;\n    case (dist <= 24576): r = [28, dist - 16385, 13]; break;\n    case (dist <= 32768): r = [29, dist - 24577, 13]; break;\n    default: throw 'invalid distance';\n  }\n\n  return r;\n};\n\n/**\n * マッチ情報を LZ77 符号化配列で返す.\n * なお、ここでは以下の内部仕様で符号化している\n * [ CODE, EXTRA-BIT-LEN, EXTRA, CODE, EXTRA-BIT-LEN, EXTRA ]\n * @return {!Array.<number>} LZ77 符号化 byte array.\n */\nZlib.RawDeflate.Lz77Match.prototype.toLz77Array = function() {\n  /** @type {number} */\n  var length = this.length;\n  /** @type {number} */\n  var dist = this.backwardDistance;\n  /** @type {Array} */\n  var codeArray = [];\n  /** @type {number} */\n  var pos = 0;\n  /** @type {!Array.<number>} */\n  var code;\n\n  // length\n  code = Zlib.RawDeflate.Lz77Match.LengthCodeTable[length];\n  codeArray[pos++] = code & 0xffff;\n  codeArray[pos++] = (code >> 16) & 0xff;\n  codeArray[pos++] = code >> 24;\n\n  // distance\n  code = this.getDistanceCode_(dist);\n  codeArray[pos++] = code[0];\n  codeArray[pos++] = code[1];\n  codeArray[pos++] = code[2];\n\n  return codeArray;\n};\n\n/**\n * LZ77 実装\n * @param {!(Array.<number>|Uint8Array)} dataArray LZ77 符号化するバイト配列.\n * @return {!(Array.<number>|Uint16Array)} LZ77 符号化した配列.\n */\nZlib.RawDeflate.prototype.lz77 = function(dataArray) {\n  /** @type {number} input position */\n  var position;\n  /** @type {number} input length */\n  var length;\n  /** @type {number} loop counter */\n  var i;\n  /** @type {number} loop limiter */\n  var il;\n  /** @type {number} chained-hash-table key */\n  var matchKey;\n  /** @type {Object.<number, Array.<number>>} chained-hash-table */\n  var table = {};\n  /** @const @type {number} */\n  var windowSize = Zlib.RawDeflate.WindowSize;\n  /** @type {Array.<number>} match list */\n  var matchList;\n  /** @type {Zlib.RawDeflate.Lz77Match} longest match */\n  var longestMatch;\n  /** @type {Zlib.RawDeflate.Lz77Match} previous longest match */\n  var prevMatch;\n  /** @type {!(Array.<number>|Uint16Array)} lz77 buffer */\n  var lz77buf = \n    new Uint16Array(dataArray.length * 2) ;\n  /** @type {number} lz77 output buffer pointer */\n  var pos = 0;\n  /** @type {number} lz77 skip length */\n  var skipLength = 0;\n  /** @type {!(Array.<number>|Uint32Array)} */\n  var freqsLitLen = new ( Uint32Array )(286);\n  /** @type {!(Array.<number>|Uint32Array)} */\n  var freqsDist = new ( Uint32Array )(30);\n  /** @type {number} */\n  var lazy = this.lazy;\n  /** @type {*} temporary variable */\n  var tmp;\n  freqsLitLen[256] = 1; // EOB の最低出現回数は 1\n\n  /**\n   * マッチデータの書き込み\n   * @param {Zlib.RawDeflate.Lz77Match} match LZ77 Match data.\n   * @param {!number} offset スキップ開始位置(相対指定).\n   * @private\n   */\n  function writeMatch(match, offset) {\n    /** @type {Array.<number>} */\n    var lz77Array = match.toLz77Array();\n    /** @type {number} */\n    var i;\n    /** @type {number} */\n    var il;\n\n    for (i = 0, il = lz77Array.length; i < il; ++i) {\n      lz77buf[pos++] = lz77Array[i];\n    }\n    freqsLitLen[lz77Array[0]]++;\n    freqsDist[lz77Array[3]]++;\n    skipLength = match.length + offset - 1;\n    prevMatch = null;\n  }\n\n  // LZ77 符号化\n  for (position = 0, length = dataArray.length; position < length; ++position) {\n    // ハッシュキーの作成\n    for (matchKey = 0, i = 0, il = Zlib.RawDeflate.Lz77MinLength; i < il; ++i) {\n      if (position + i === length) {\n        break;\n      }\n      matchKey = (matchKey << 8) | dataArray[position + i];\n    }\n\n    // テーブルが未定義だったら作成する\n    if (table[matchKey] === void 0) { table[matchKey] = []; }\n    matchList = table[matchKey];\n\n    // skip\n    if (skipLength-- > 0) {\n      matchList.push(position);\n      continue;\n    }\n\n    // マッチテーブルの更新 (最大戻り距離を超えているものを削除する)\n    while (matchList.length > 0 && position - matchList[0] > windowSize) {\n      matchList.shift();\n    }\n\n    // データ末尾でマッチしようがない場合はそのまま流しこむ\n    if (position + Zlib.RawDeflate.Lz77MinLength >= length) {\n      if (prevMatch) {\n        writeMatch(prevMatch, -1);\n      }\n\n      for (i = 0, il = length - position; i < il; ++i) {\n        tmp = dataArray[position + i];\n        lz77buf[pos++] = tmp;\n        ++freqsLitLen[tmp];\n      }\n      break;\n    }\n\n    // マッチ候補から最長のものを探す\n    if (matchList.length > 0) {\n      longestMatch = this.searchLongestMatch_(dataArray, position, matchList);\n\n      if (prevMatch) {\n        // 現在のマッチの方が前回のマッチよりも長い\n        if (prevMatch.length < longestMatch.length) {\n          // write previous literal\n          tmp = dataArray[position - 1];\n          lz77buf[pos++] = tmp;\n          ++freqsLitLen[tmp];\n\n          // write current match\n          writeMatch(longestMatch, 0);\n        } else {\n          // write previous match\n          writeMatch(prevMatch, -1);\n        }\n      } else if (longestMatch.length < lazy) {\n        prevMatch = longestMatch;\n      } else {\n        writeMatch(longestMatch, 0);\n      }\n    // 前回マッチしていて今回マッチがなかったら前回のを採用\n    } else if (prevMatch) {\n      writeMatch(prevMatch, -1);\n    } else {\n      tmp = dataArray[position];\n      lz77buf[pos++] = tmp;\n      ++freqsLitLen[tmp];\n    }\n\n    matchList.push(position); // マッチテーブルに現在の位置を保存\n  }\n\n  // 終端処理\n  lz77buf[pos++] = 256;\n  freqsLitLen[256]++;\n  this.freqsLitLen = freqsLitLen;\n  this.freqsDist = freqsDist;\n\n  return /** @type {!(Uint16Array|Array.<number>)} */ (\n      lz77buf.subarray(0, pos) \n  );\n};\n\n/**\n * マッチした候補の中から最長一致を探す\n * @param {!Object} data plain data byte array.\n * @param {!number} position plain data byte array position.\n * @param {!Array.<number>} matchList 候補となる位置の配列.\n * @return {!Zlib.RawDeflate.Lz77Match} 最長かつ最短距離のマッチオブジェクト.\n * @private\n */\nZlib.RawDeflate.prototype.searchLongestMatch_ =\nfunction(data, position, matchList) {\n  var match,\n      currentMatch,\n      matchMax = 0, matchLength,\n      i, j, l, dl = data.length;\n\n  // 候補を後ろから 1 つずつ絞り込んでゆく\n  permatch:\n  for (i = 0, l = matchList.length; i < l; i++) {\n    match = matchList[l - i - 1];\n    matchLength = Zlib.RawDeflate.Lz77MinLength;\n\n    // 前回までの最長一致を末尾から一致検索する\n    if (matchMax > Zlib.RawDeflate.Lz77MinLength) {\n      for (j = matchMax; j > Zlib.RawDeflate.Lz77MinLength; j--) {\n        if (data[match + j - 1] !== data[position + j - 1]) {\n          continue permatch;\n        }\n      }\n      matchLength = matchMax;\n    }\n\n    // 最長一致探索\n    while (matchLength < Zlib.RawDeflate.Lz77MaxLength &&\n           position + matchLength < dl &&\n           data[match + matchLength] === data[position + matchLength]) {\n      ++matchLength;\n    }\n\n    // マッチ長が同じ場合は後方を優先\n    if (matchLength > matchMax) {\n      currentMatch = match;\n      matchMax = matchLength;\n    }\n\n    // 最長が確定したら後の処理は省略\n    if (matchLength === Zlib.RawDeflate.Lz77MaxLength) {\n      break;\n    }\n  }\n\n  return new Zlib.RawDeflate.Lz77Match(matchMax, position - currentMatch);\n};\n\n/**\n * Tree-Transmit Symbols の算出\n * reference: PuTTY Deflate implementation\n * @param {number} hlit HLIT.\n * @param {!(Array.<number>|Uint8Array)} litlenLengths リテラルと長さ符号の符号長配列.\n * @param {number} hdist HDIST.\n * @param {!(Array.<number>|Uint8Array)} distLengths 距離符号の符号長配列.\n * @return {{\n *   codes: !(Array.<number>|Uint32Array),\n *   freqs: !(Array.<number>|Uint8Array)\n * }} Tree-Transmit Symbols.\n */\nZlib.RawDeflate.prototype.getTreeSymbols_ =\nfunction(hlit, litlenLengths, hdist, distLengths) {\n  var src = new ( Uint32Array )(hlit + hdist),\n      i, j, runLength, l,\n      result = new ( Uint32Array )(286 + 30),\n      nResult,\n      rpt,\n      freqs = new ( Uint8Array )(19);\n\n  j = 0;\n  for (i = 0; i < hlit; i++) {\n    src[j++] = litlenLengths[i];\n  }\n  for (i = 0; i < hdist; i++) {\n    src[j++] = distLengths[i];\n  }\n\n  // 符号化\n  nResult = 0;\n  for (i = 0, l = src.length; i < l; i += j) {\n    // Run Length Encoding\n    for (j = 1; i + j < l && src[i + j] === src[i]; ++j) {}\n\n    runLength = j;\n\n    if (src[i] === 0) {\n      // 0 の繰り返しが 3 回未満ならばそのまま\n      if (runLength < 3) {\n        while (runLength-- > 0) {\n          result[nResult++] = 0;\n          freqs[0]++;\n        }\n      } else {\n        while (runLength > 0) {\n          // 繰り返しは最大 138 までなので切り詰める\n          rpt = (runLength < 138 ? runLength : 138);\n\n          if (rpt > runLength - 3 && rpt < runLength) {\n            rpt = runLength - 3;\n          }\n\n          // 3-10 回 -> 17\n          if (rpt <= 10) {\n            result[nResult++] = 17;\n            result[nResult++] = rpt - 3;\n            freqs[17]++;\n          // 11-138 回 -> 18\n          } else {\n            result[nResult++] = 18;\n            result[nResult++] = rpt - 11;\n            freqs[18]++;\n          }\n\n          runLength -= rpt;\n        }\n      }\n    } else {\n      result[nResult++] = src[i];\n      freqs[src[i]]++;\n      runLength--;\n\n      // 繰り返し回数が3回未満ならばランレングス符号は要らない\n      if (runLength < 3) {\n        while (runLength-- > 0) {\n          result[nResult++] = src[i];\n          freqs[src[i]]++;\n        }\n      // 3 回以上ならばランレングス符号化\n      } else {\n        while (runLength > 0) {\n          // runLengthを 3-6 で分割\n          rpt = (runLength < 6 ? runLength : 6);\n\n          if (rpt > runLength - 3 && rpt < runLength) {\n            rpt = runLength - 3;\n          }\n\n          result[nResult++] = 16;\n          result[nResult++] = rpt - 3;\n          freqs[16]++;\n\n          runLength -= rpt;\n        }\n      }\n    }\n  }\n\n  return {\n    codes:\n       result.subarray(0, nResult) ,\n    freqs: freqs\n  };\n};\n\n/**\n * ハフマン符号の長さを取得する\n * @param {!(Array.<number>|Uint8Array|Uint32Array)} freqs 出現カウント.\n * @param {number} limit 符号長の制限.\n * @return {!(Array.<number>|Uint8Array)} 符号長配列.\n * @private\n */\nZlib.RawDeflate.prototype.getLengths_ = function(freqs, limit) {\n  /** @type {number} */\n  var nSymbols = freqs.length;\n  /** @type {Zlib.Heap} */\n  var heap = new Zlib.Heap(2 * Zlib.RawDeflate.HUFMAX);\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var length = new ( Uint8Array )(nSymbols);\n  /** @type {Array} */\n  var nodes;\n  /** @type {!(Array.<number>|Uint32Array)} */\n  var values;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var codeLength;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  // ヒープの構築\n  for (i = 0; i < nSymbols; ++i) {\n    if (freqs[i] > 0) {\n      heap.push(i, freqs[i]);\n    }\n  }\n  nodes = new Array(heap.length / 2);\n  values = new ( Uint32Array )(heap.length / 2);\n\n  // 非 0 の要素が一つだけだった場合は、そのシンボルに符号長 1 を割り当てて終了\n  if (nodes.length === 1) {\n    length[heap.pop().index] = 1;\n    return length;\n  }\n\n  // Reverse Package Merge Algorithm による Canonical Huffman Code の符号長決定\n  for (i = 0, il = heap.length / 2; i < il; ++i) {\n    nodes[i] = heap.pop();\n    values[i] = nodes[i].value;\n  }\n  codeLength = this.reversePackageMerge_(values, values.length, limit);\n\n  for (i = 0, il = nodes.length; i < il; ++i) {\n    length[nodes[i].index] = codeLength[i];\n  }\n\n  return length;\n};\n\n/**\n * Reverse Package Merge Algorithm.\n * @param {!(Array.<number>|Uint32Array)} freqs sorted probability.\n * @param {number} symbols number of symbols.\n * @param {number} limit code length limit.\n * @return {!(Array.<number>|Uint8Array)} code lengths.\n */\nZlib.RawDeflate.prototype.reversePackageMerge_ = function(freqs, symbols, limit) {\n  /** @type {!(Array.<number>|Uint16Array)} */\n  var minimumCost = new ( Uint16Array )(limit);\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var flag = new ( Uint8Array )(limit);\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var codeLength = new ( Uint8Array )(symbols);\n  /** @type {Array} */\n  var value = new Array(limit);\n  /** @type {Array} */\n  var type  = new Array(limit);\n  /** @type {Array.<number>} */\n  var currentPosition = new Array(limit);\n  /** @type {number} */\n  var excess = (1 << limit) - symbols;\n  /** @type {number} */\n  var half = (1 << (limit - 1));\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var j;\n  /** @type {number} */\n  var t;\n  /** @type {number} */\n  var weight;\n  /** @type {number} */\n  var next;\n\n  /**\n   * @param {number} j\n   */\n  function takePackage(j) {\n    /** @type {number} */\n    var x = type[j][currentPosition[j]];\n\n    if (x === symbols) {\n      takePackage(j+1);\n      takePackage(j+1);\n    } else {\n      --codeLength[x];\n    }\n\n    ++currentPosition[j];\n  }\n\n  minimumCost[limit-1] = symbols;\n\n  for (j = 0; j < limit; ++j) {\n    if (excess < half) {\n      flag[j] = 0;\n    } else {\n      flag[j] = 1;\n      excess -= half;\n    }\n    excess <<= 1;\n    minimumCost[limit-2-j] = (minimumCost[limit-1-j] / 2 | 0) + symbols;\n  }\n  minimumCost[0] = flag[0];\n\n  value[0] = new Array(minimumCost[0]);\n  type[0]  = new Array(minimumCost[0]);\n  for (j = 1; j < limit; ++j) {\n    if (minimumCost[j] > 2 * minimumCost[j-1] + flag[j]) {\n      minimumCost[j] = 2 * minimumCost[j-1] + flag[j];\n    }\n    value[j] = new Array(minimumCost[j]);\n    type[j]  = new Array(minimumCost[j]);\n  }\n\n  for (i = 0; i < symbols; ++i) {\n    codeLength[i] = limit;\n  }\n\n  for (t = 0; t < minimumCost[limit-1]; ++t) {\n    value[limit-1][t] = freqs[t];\n    type[limit-1][t]  = t;\n  }\n\n  for (i = 0; i < limit; ++i) {\n    currentPosition[i] = 0;\n  }\n  if (flag[limit-1] === 1) {\n    --codeLength[0];\n    ++currentPosition[limit-1];\n  }\n\n  for (j = limit-2; j >= 0; --j) {\n    i = 0;\n    weight = 0;\n    next = currentPosition[j+1];\n\n    for (t = 0; t < minimumCost[j]; t++) {\n      weight = value[j+1][next] + value[j+1][next+1];\n\n      if (weight > freqs[i]) {\n        value[j][t] = weight;\n        type[j][t] = symbols;\n        next += 2;\n      } else {\n        value[j][t] = freqs[i];\n        type[j][t] = i;\n        ++i;\n      }\n    }\n\n    currentPosition[j] = 0;\n    if (flag[j] === 1) {\n      takePackage(j);\n    }\n  }\n\n  return codeLength;\n};\n\n/**\n * 符号長配列からハフマン符号を取得する\n * reference: PuTTY Deflate implementation\n * @param {!(Array.<number>|Uint8Array)} lengths 符号長配列.\n * @return {!(Array.<number>|Uint16Array)} ハフマン符号配列.\n * @private\n */\nZlib.RawDeflate.prototype.getCodesFromLengths_ = function(lengths) {\n  var codes = new ( Uint16Array )(lengths.length),\n      count = [],\n      startCode = [],\n      code = 0, i, il, j, m;\n\n  // Count the codes of each length.\n  for (i = 0, il = lengths.length; i < il; i++) {\n    count[lengths[i]] = (count[lengths[i]] | 0) + 1;\n  }\n\n  // Determine the starting code for each length block.\n  for (i = 1, il = Zlib.RawDeflate.MaxCodeLength; i <= il; i++) {\n    startCode[i] = code;\n    code += count[i] | 0;\n    code <<= 1;\n  }\n\n  // Determine the code for each symbol. Mirrored, of course.\n  for (i = 0, il = lengths.length; i < il; i++) {\n    code = startCode[lengths[i]];\n    startCode[lengths[i]] += 1;\n    codes[i] = 0;\n\n    for (j = 0, m = lengths[i]; j < m; j++) {\n      codes[i] = (codes[i] << 1) | (code & 1);\n      code >>>= 1;\n    }\n  }\n\n  return codes;\n};\n\n\n/**\n * @param {!(Array.<number>|Uint8Array)} input input buffer.\n * @param {Object=} opt_params options.\n * @constructor\n */\nZlib.Unzip = function(input, opt_params) {\n  opt_params = opt_params || {};\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.input =\n    ( (input instanceof Array)) ?\n    new Uint8Array(input) : input;\n  /** @type {number} */\n  this.ip = 0;\n  /** @type {number} */\n  this.eocdrOffset;\n  /** @type {number} */\n  this.numberOfThisDisk;\n  /** @type {number} */\n  this.startDisk;\n  /** @type {number} */\n  this.totalEntriesThisDisk;\n  /** @type {number} */\n  this.totalEntries;\n  /** @type {number} */\n  this.centralDirectorySize;\n  /** @type {number} */\n  this.centralDirectoryOffset;\n  /** @type {number} */\n  this.commentLength;\n  /** @type {(Array.<number>|Uint8Array)} */\n  this.comment;\n  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n  this.fileHeaderList;\n  /** @type {Object.<string, number>} */\n  this.filenameToIndex;\n  /** @type {boolean} */\n  this.verify = opt_params['verify'] || false;\n  /** @type {(Array.<number>|Uint8Array)} */\n  this.password = opt_params['password'];\n};\n\nZlib.Unzip.CompressionMethod = Zlib.Zip.CompressionMethod;\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Unzip.FileHeaderSignature = Zlib.Zip.FileHeaderSignature;\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Unzip.LocalFileHeaderSignature = Zlib.Zip.LocalFileHeaderSignature;\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Unzip.CentralDirectorySignature = Zlib.Zip.CentralDirectorySignature;\n\n/**\n * @param {!(Array.<number>|Uint8Array)} input input buffer.\n * @param {number} ip input position.\n * @constructor\n */\nZlib.Unzip.FileHeader = function(input, ip) {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.input = input;\n  /** @type {number} */\n  this.offset = ip;\n  /** @type {number} */\n  this.length;\n  /** @type {number} */\n  this.version;\n  /** @type {number} */\n  this.os;\n  /** @type {number} */\n  this.needVersion;\n  /** @type {number} */\n  this.flags;\n  /** @type {number} */\n  this.compression;\n  /** @type {number} */\n  this.time;\n  /** @type {number} */\n  this.date;\n  /** @type {number} */\n  this.crc32;\n  /** @type {number} */\n  this.compressedSize;\n  /** @type {number} */\n  this.plainSize;\n  /** @type {number} */\n  this.fileNameLength;\n  /** @type {number} */\n  this.extraFieldLength;\n  /** @type {number} */\n  this.fileCommentLength;\n  /** @type {number} */\n  this.diskNumberStart;\n  /** @type {number} */\n  this.internalFileAttributes;\n  /** @type {number} */\n  this.externalFileAttributes;\n  /** @type {number} */\n  this.relativeOffset;\n  /** @type {string} */\n  this.filename;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.extraField;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.comment;\n};\n\nZlib.Unzip.FileHeader.prototype.parse = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {number} */\n  var ip = this.offset;\n\n  // central file header signature\n  if (input[ip++] !== Zlib.Unzip.FileHeaderSignature[0] ||\n      input[ip++] !== Zlib.Unzip.FileHeaderSignature[1] ||\n      input[ip++] !== Zlib.Unzip.FileHeaderSignature[2] ||\n      input[ip++] !== Zlib.Unzip.FileHeaderSignature[3]) {\n    throw new Error('invalid file header signature');\n  }\n\n  // version made by\n  this.version = input[ip++];\n  this.os = input[ip++];\n\n  // version needed to extract\n  this.needVersion = input[ip++] | (input[ip++] << 8);\n\n  // general purpose bit flag\n  this.flags = input[ip++] | (input[ip++] << 8);\n\n  // compression method\n  this.compression = input[ip++] | (input[ip++] << 8);\n\n  // last mod file time\n  this.time = input[ip++] | (input[ip++] << 8);\n\n  //last mod file date\n  this.date = input[ip++] | (input[ip++] << 8);\n\n  // crc-32\n  this.crc32 = (\n    (input[ip++]      ) | (input[ip++] <<  8) |\n    (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // compressed size\n  this.compressedSize = (\n    (input[ip++]      ) | (input[ip++] <<  8) |\n    (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // uncompressed size\n  this.plainSize = (\n    (input[ip++]      ) | (input[ip++] <<  8) |\n    (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // file name length\n  this.fileNameLength = input[ip++] | (input[ip++] << 8);\n\n  // extra field length\n  this.extraFieldLength = input[ip++] | (input[ip++] << 8);\n\n  // file comment length\n  this.fileCommentLength = input[ip++] | (input[ip++] << 8);\n\n  // disk number start\n  this.diskNumberStart = input[ip++] | (input[ip++] << 8);\n\n  // internal file attributes\n  this.internalFileAttributes = input[ip++] | (input[ip++] << 8);\n\n  // external file attributes\n  this.externalFileAttributes =\n    (input[ip++]      ) | (input[ip++] <<  8) |\n    (input[ip++] << 16) | (input[ip++] << 24);\n\n  // relative offset of local header\n  this.relativeOffset = (\n    (input[ip++]      ) | (input[ip++] <<  8) |\n    (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // file name\n  this.filename = String.fromCharCode.apply(null, \n    input.subarray(ip, ip += this.fileNameLength) \n  );\n\n  // extra field\n  this.extraField = \n    input.subarray(ip, ip += this.extraFieldLength) ;\n\n  // file comment\n  this.comment = \n    input.subarray(ip, ip + this.fileCommentLength) ;\n\n  this.length = ip - this.offset;\n};\n\n/**\n * @param {!(Array.<number>|Uint8Array)} input input buffer.\n * @param {number} ip input position.\n * @constructor\n */\nZlib.Unzip.LocalFileHeader = function(input, ip) {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.input = input;\n  /** @type {number} */\n  this.offset = ip;\n  /** @type {number} */\n  this.length;\n  /** @type {number} */\n  this.needVersion;\n  /** @type {number} */\n  this.flags;\n  /** @type {number} */\n  this.compression;\n  /** @type {number} */\n  this.time;\n  /** @type {number} */\n  this.date;\n  /** @type {number} */\n  this.crc32;\n  /** @type {number} */\n  this.compressedSize;\n  /** @type {number} */\n  this.plainSize;\n  /** @type {number} */\n  this.fileNameLength;\n  /** @type {number} */\n  this.extraFieldLength;\n  /** @type {string} */\n  this.filename;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.extraField;\n};\n\nZlib.Unzip.LocalFileHeader.Flags = Zlib.Zip.Flags;\n\nZlib.Unzip.LocalFileHeader.prototype.parse = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {number} */\n  var ip = this.offset;\n\n  // local file header signature\n  if (input[ip++] !== Zlib.Unzip.LocalFileHeaderSignature[0] ||\n      input[ip++] !== Zlib.Unzip.LocalFileHeaderSignature[1] ||\n      input[ip++] !== Zlib.Unzip.LocalFileHeaderSignature[2] ||\n      input[ip++] !== Zlib.Unzip.LocalFileHeaderSignature[3]) {\n    throw new Error('invalid local file header signature');\n  }\n\n  // version needed to extract\n  this.needVersion = input[ip++] | (input[ip++] << 8);\n\n  // general purpose bit flag\n  this.flags = input[ip++] | (input[ip++] << 8);\n\n  // compression method\n  this.compression = input[ip++] | (input[ip++] << 8);\n\n  // last mod file time\n  this.time = input[ip++] | (input[ip++] << 8);\n\n  //last mod file date\n  this.date = input[ip++] | (input[ip++] << 8);\n\n  // crc-32\n  this.crc32 = (\n    (input[ip++]      ) | (input[ip++] <<  8) |\n    (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // compressed size\n  this.compressedSize = (\n    (input[ip++]      ) | (input[ip++] <<  8) |\n    (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // uncompressed size\n  this.plainSize = (\n    (input[ip++]      ) | (input[ip++] <<  8) |\n    (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // file name length\n  this.fileNameLength = input[ip++] | (input[ip++] << 8);\n\n  // extra field length\n  this.extraFieldLength = input[ip++] | (input[ip++] << 8);\n\n  // file name\n  this.filename = String.fromCharCode.apply(null, \n    input.subarray(ip, ip += this.fileNameLength) \n  );\n\n  // extra field\n  this.extraField = \n    input.subarray(ip, ip += this.extraFieldLength) ;\n\n  this.length = ip - this.offset;\n};\n\n\nZlib.Unzip.prototype.searchEndOfCentralDirectoryRecord = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {number} */\n  var ip;\n\n  for (ip = input.length - 12; ip > 0; --ip) {\n    if (input[ip  ] === Zlib.Unzip.CentralDirectorySignature[0] &&\n        input[ip+1] === Zlib.Unzip.CentralDirectorySignature[1] &&\n        input[ip+2] === Zlib.Unzip.CentralDirectorySignature[2] &&\n        input[ip+3] === Zlib.Unzip.CentralDirectorySignature[3]) {\n      this.eocdrOffset = ip;\n      return;\n    }\n  }\n\n  throw new Error('End of Central Directory Record not found');\n};\n\nZlib.Unzip.prototype.parseEndOfCentralDirectoryRecord = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {number} */\n  var ip;\n\n  if (!this.eocdrOffset) {\n    this.searchEndOfCentralDirectoryRecord();\n  }\n  ip = this.eocdrOffset;\n\n  // signature\n  if (input[ip++] !== Zlib.Unzip.CentralDirectorySignature[0] ||\n      input[ip++] !== Zlib.Unzip.CentralDirectorySignature[1] ||\n      input[ip++] !== Zlib.Unzip.CentralDirectorySignature[2] ||\n      input[ip++] !== Zlib.Unzip.CentralDirectorySignature[3]) {\n    throw new Error('invalid signature');\n  }\n\n  // number of this disk\n  this.numberOfThisDisk = input[ip++] | (input[ip++] << 8);\n\n  // number of the disk with the start of the central directory\n  this.startDisk = input[ip++] | (input[ip++] << 8);\n\n  // total number of entries in the central directory on this disk\n  this.totalEntriesThisDisk = input[ip++] | (input[ip++] << 8);\n\n  // total number of entries in the central directory\n  this.totalEntries = input[ip++] | (input[ip++] << 8);\n\n  // size of the central directory\n  this.centralDirectorySize = (\n    (input[ip++]      ) | (input[ip++] <<  8) |\n    (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // offset of start of central directory with respect to the starting disk number\n  this.centralDirectoryOffset = (\n    (input[ip++]      ) | (input[ip++] <<  8) |\n    (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // .ZIP file comment length\n  this.commentLength = input[ip++] | (input[ip++] << 8);\n\n  // .ZIP file comment\n  this.comment = \n    input.subarray(ip, ip + this.commentLength) ;\n};\n\nZlib.Unzip.prototype.parseFileHeader = function() {\n  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n  var filelist = [];\n  /** @type {Object.<string, number>} */\n  var filetable = {};\n  /** @type {number} */\n  var ip;\n  /** @type {Zlib.Unzip.FileHeader} */\n  var fileHeader;\n  /*: @type {number} */\n  var i;\n  /*: @type {number} */\n  var il;\n\n  if (this.fileHeaderList) {\n    return;\n  }\n\n  if (this.centralDirectoryOffset === void 0) {\n    this.parseEndOfCentralDirectoryRecord();\n  }\n  ip = this.centralDirectoryOffset;\n\n  for (i = 0, il = this.totalEntries; i < il; ++i) {\n    fileHeader = new Zlib.Unzip.FileHeader(this.input, ip);\n    fileHeader.parse();\n    ip += fileHeader.length;\n    filelist[i] = fileHeader;\n    filetable[fileHeader.filename] = i;\n  }\n\n  if (this.centralDirectorySize < ip - this.centralDirectoryOffset) {\n    throw new Error('invalid file header size');\n  }\n\n  this.fileHeaderList = filelist;\n  this.filenameToIndex = filetable;\n};\n\n/**\n * @param {number} index file header index.\n * @param {Object=} opt_params\n * @return {!(Array.<number>|Uint8Array)} file data.\n */\nZlib.Unzip.prototype.getFileData = function(index, opt_params) {\n  opt_params = opt_params || {};\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n  var fileHeaderList = this.fileHeaderList;\n  /** @type {Zlib.Unzip.LocalFileHeader} */\n  var localFileHeader;\n  /** @type {number} */\n  var offset;\n  /** @type {number} */\n  var length;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var buffer;\n  /** @type {number} */\n  var crc32;\n  /** @type {Array.<number>|Uint32Array|Object} */\n  var key;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  if (!fileHeaderList) {\n    this.parseFileHeader();\n  }\n\n  if (fileHeaderList[index] === void 0) {\n    throw new Error('wrong index');\n  }\n\n  offset = fileHeaderList[index].relativeOffset;\n  localFileHeader = new Zlib.Unzip.LocalFileHeader(this.input, offset);\n  localFileHeader.parse();\n  offset += localFileHeader.length;\n  length = localFileHeader.compressedSize;\n\n  // decryption\n  if ((localFileHeader.flags & Zlib.Unzip.LocalFileHeader.Flags.ENCRYPT) !== 0) {\n    if (!(opt_params['password'] || this.password)) {\n      throw new Error('please set password');\n    }\n    key =  this.createDecryptionKey(opt_params['password'] || this.password);\n\n    // encryption header\n    for(i = offset, il = offset + 12; i < il; ++i) {\n      this.decode(key, input[i]);\n    }\n    offset += 12;\n    length -= 12;\n\n    // decryption\n    for (i = offset, il = offset + length; i < il; ++i) {\n      input[i] = this.decode(key, input[i]);\n    }\n  }\n\n  switch (localFileHeader.compression) {\n    case Zlib.Unzip.CompressionMethod.STORE:\n      buffer = \n        this.input.subarray(offset, offset + length) ;\n      break;\n    case Zlib.Unzip.CompressionMethod.DEFLATE:\n      buffer = new Zlib.RawInflate(this.input, {\n        'index': offset,\n        'bufferSize': localFileHeader.plainSize\n      }).decompress();\n      break;\n    default:\n      throw new Error('unknown compression type');\n  }\n\n  if (this.verify) {\n    crc32 = Zlib.CRC32.calc(buffer);\n    if (localFileHeader.crc32 !== crc32) {\n      throw new Error(\n        'wrong crc: file=0x' + localFileHeader.crc32.toString(16) +\n        ', data=0x' + crc32.toString(16)\n      );\n    }\n  }\n\n  return buffer;\n};\n\n/**\n * @return {Array.<string>}\n */\nZlib.Unzip.prototype.getFilenames = function() {\n  /** @type {Array.<string>} */\n  var filenameList = [];\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n  var fileHeaderList;\n\n  if (!this.fileHeaderList) {\n    this.parseFileHeader();\n  }\n  fileHeaderList = this.fileHeaderList;\n\n  for (i = 0, il = fileHeaderList.length; i < il; ++i) {\n    filenameList[i] = fileHeaderList[i].filename;\n  }\n\n  return filenameList;\n};\n\n/**\n * @param {string} filename extract filename.\n * @param {Object=} opt_params\n * @return {!(Array.<number>|Uint8Array)} decompressed data.\n */\nZlib.Unzip.prototype.decompress = function(filename, opt_params) {\n  /** @type {number} */\n  var index;\n\n  if (!this.filenameToIndex) {\n    this.parseFileHeader();\n  }\n  index = this.filenameToIndex[filename];\n\n  if (index === void 0) {\n    throw new Error(filename + ' not found');\n  }\n\n  return this.getFileData(index, opt_params);\n};\n\n/**\n * @param {(Array.<number>|Uint8Array)} password\n */\nZlib.Unzip.prototype.setPassword = function(password) {\n  this.password = password;\n};\n\n/**\n * @param {(Array.<number>|Uint32Array|Object)} key\n * @param {number} n\n * @return {number}\n */\nZlib.Unzip.prototype.decode = function(key, n) {\n  n ^= this.getByte(/** @type {(Array.<number>|Uint32Array)} */(key));\n  this.updateKeys(/** @type {(Array.<number>|Uint32Array)} */(key), n);\n\n  return n;\n};\n\n// common method\nZlib.Unzip.prototype.updateKeys = Zlib.Zip.prototype.updateKeys;\nZlib.Unzip.prototype.createDecryptionKey = Zlib.Zip.prototype.createEncryptionKey;\nZlib.Unzip.prototype.getByte = Zlib.Zip.prototype.getByte;\n\n/**\n * @fileoverview 雑多な関数群をまとめたモジュール実装.\n */\n\n\n/**\n * Byte String から Byte Array に変換.\n * @param {!string} str byte string.\n * @return {!Array.<number>} byte array.\n */\nZlib.Util.stringToByteArray = function(str) {\n  /** @type {!Array.<(string|number)>} */\n  var tmp = str.split('');\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  for (i = 0, il = tmp.length; i < il; i++) {\n    tmp[i] = (tmp[i].charCodeAt(0) & 0xff) >>> 0;\n  }\n\n  return tmp;\n};\n\n\n/**\n * @fileoverview Adler32 checksum 実装.\n */\n\n\n/**\n * Adler32 ハッシュ値の作成\n * @param {!(Array|Uint8Array|string)} array 算出に使用する byte array.\n * @return {number} Adler32 ハッシュ値.\n */\nZlib.Adler32 = function(array) {\n  if (typeof(array) === 'string') {\n    array = Zlib.Util.stringToByteArray(array);\n  }\n  return Zlib.Adler32.update(1, array);\n};\n\n/**\n * Adler32 ハッシュ値の更新\n * @param {number} adler 現在のハッシュ値.\n * @param {!(Array|Uint8Array)} array 更新に使用する byte array.\n * @return {number} Adler32 ハッシュ値.\n */\nZlib.Adler32.update = function(adler, array) {\n  /** @type {number} */\n  var s1 = adler & 0xffff;\n  /** @type {number} */\n  var s2 = (adler >>> 16) & 0xffff;\n  /** @type {number} array length */\n  var len = array.length;\n  /** @type {number} loop length (don't overflow) */\n  var tlen;\n  /** @type {number} array index */\n  var i = 0;\n\n  while (len > 0) {\n    tlen = len > Zlib.Adler32.OptimizationParameter ?\n      Zlib.Adler32.OptimizationParameter : len;\n    len -= tlen;\n    do {\n      s1 += array[i++];\n      s2 += s1;\n    } while (--tlen);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return ((s2 << 16) | s1) >>> 0;\n};\n\n/**\n * Adler32 最適化パラメータ\n * 現状では 1024 程度が最適.\n * @see http://jsperf.com/adler-32-simple-vs-optimized/3\n * @define {number}\n */\nZlib.Adler32.OptimizationParameter = 1024;\n\n\n\n\n/**\n * ビットストリーム\n * @constructor\n * @param {!(Array|Uint8Array)=} buffer output buffer.\n * @param {number=} bufferPosition start buffer pointer.\n */\nZlib.BitStream = function(buffer, bufferPosition) {\n  /** @type {number} buffer index. */\n  this.index = typeof bufferPosition === 'number' ? bufferPosition : 0;\n  /** @type {number} bit index. */\n  this.bitindex = 0;\n  /** @type {!(Array|Uint8Array)} bit-stream output buffer. */\n  this.buffer = buffer instanceof ( Uint8Array ) ?\n    buffer :\n    new ( Uint8Array )(Zlib.BitStream.DefaultBlockSize);\n\n  // 入力された index が足りなかったら拡張するが、倍にしてもダメなら不正とする\n  if (this.buffer.length * 2 <= this.index) {\n    throw new Error(\"invalid index\");\n  } else if (this.buffer.length <= this.index) {\n    this.expandBuffer();\n  }\n};\n\n/**\n * デフォルトブロックサイズ.\n * @const\n * @type {number}\n */\nZlib.BitStream.DefaultBlockSize = 0x8000;\n\n/**\n * expand buffer.\n * @return {!(Array|Uint8Array)} new buffer.\n */\nZlib.BitStream.prototype.expandBuffer = function() {\n  /** @type {!(Array|Uint8Array)} old buffer. */\n  var oldbuf = this.buffer;\n  /** @type {number} loop limiter. */\n  var il = oldbuf.length;\n  /** @type {!(Array|Uint8Array)} new buffer. */\n  var buffer =\n    new ( Uint8Array )(il << 1);\n\n  // copy buffer\n  {\n    buffer.set(oldbuf);\n  }\n\n  return (this.buffer = buffer);\n};\n\n\n/**\n * 数値をビットで指定した数だけ書き込む.\n * @param {number} number 書き込む数値.\n * @param {number} n 書き込むビット数.\n * @param {boolean=} reverse 逆順に書き込むならば true.\n */\nZlib.BitStream.prototype.writeBits = function(number, n, reverse) {\n  var buffer = this.buffer;\n  var index = this.index;\n  var bitindex = this.bitindex;\n\n  /** @type {number} current octet. */\n  var current = buffer[index];\n  /** @type {number} loop counter. */\n  var i;\n\n  /**\n   * 32-bit 整数のビット順を逆にする\n   * @param {number} n 32-bit integer.\n   * @return {number} reversed 32-bit integer.\n   * @private\n   */\n  function rev32_(n) {\n    return (Zlib.BitStream.ReverseTable[n & 0xFF] << 24) |\n      (Zlib.BitStream.ReverseTable[n >>> 8 & 0xFF] << 16) |\n      (Zlib.BitStream.ReverseTable[n >>> 16 & 0xFF] << 8) |\n      Zlib.BitStream.ReverseTable[n >>> 24 & 0xFF];\n  }\n\n  if (reverse && n > 1) {\n    number = n > 8 ?\n      rev32_(number) >> (32 - n) :\n      Zlib.BitStream.ReverseTable[number] >> (8 - n);\n  }\n\n  // Byte 境界を超えないとき\n  if (n + bitindex < 8) {\n    current = (current << n) | number;\n    bitindex += n;\n  // Byte 境界を超えるとき\n  } else {\n    for (i = 0; i < n; ++i) {\n      current = (current << 1) | ((number >> n - i - 1) & 1);\n\n      // next byte\n      if (++bitindex === 8) {\n        bitindex = 0;\n        buffer[index++] = Zlib.BitStream.ReverseTable[current];\n        current = 0;\n\n        // expand\n        if (index === buffer.length) {\n          buffer = this.expandBuffer();\n        }\n      }\n    }\n  }\n  buffer[index] = current;\n\n  this.buffer = buffer;\n  this.bitindex = bitindex;\n  this.index = index;\n};\n\n\n/**\n * ストリームの終端処理を行う\n * @return {!(Array|Uint8Array)} 終端処理後のバッファを byte array で返す.\n */\nZlib.BitStream.prototype.finish = function() {\n  var buffer = this.buffer;\n  var index = this.index;\n\n  /** @type {!(Array|Uint8Array)} output buffer. */\n  var output;\n\n  // bitindex が 0 の時は余分に index が進んでいる状態\n  if (this.bitindex > 0) {\n    buffer[index] <<= 8 - this.bitindex;\n    buffer[index] = Zlib.BitStream.ReverseTable[buffer[index]];\n    index++;\n  }\n\n  // array truncation\n  {\n    output = buffer.subarray(0, index);\n  }\n\n  return output;\n};\n\n/**\n * 0-255 のビット順を反転したテーブル\n * @const\n * @type {!(Uint8Array|Array.<number>)}\n */\nZlib.BitStream.ReverseTable = (function(table) {\n  return table;\n})((function() {\n  /** @type {!(Array|Uint8Array)} reverse table. */\n  var table = new ( Uint8Array )(256);\n  /** @type {number} loop counter. */\n  var i;\n\n  // generate\n  for (i = 0; i < 256; ++i) {\n    table[i] = (function(n) {\n      var r = n;\n      var s = 7;\n\n      for (n >>>= 1; n; n >>>= 1) {\n        r <<= 1;\n        r |= n & 1;\n        --s;\n      }\n\n      return (r << s & 0xff) >>> 0;\n    })(i);\n  }\n\n  return table;\n})());\n\n/**\n * CRC32 ハッシュ値を取得\n * @param {!(Array.<number>|Uint8Array)} data data byte array.\n * @param {number=} pos data position.\n * @param {number=} length data length.\n * @return {number} CRC32.\n */\nZlib.CRC32.calc = function(data, pos, length) {\n  return Zlib.CRC32.update(data, 0, pos, length);\n};\n\n/**\n * CRC32ハッシュ値を更新\n * @param {!(Array.<number>|Uint8Array)} data data byte array.\n * @param {number} crc CRC32.\n * @param {number=} pos data position.\n * @param {number=} length data length.\n * @return {number} CRC32.\n */\nZlib.CRC32.update = function(data, crc, pos, length) {\n  var table = Zlib.CRC32.Table;\n  var i = (typeof pos === 'number') ? pos : (pos = 0);\n  var il = (typeof length === 'number') ? length : data.length;\n\n  crc ^= 0xffffffff;\n\n  // loop unrolling for performance\n  for (i = il & 7; i--; ++pos) {\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos]) & 0xff];\n  }\n  for (i = il >> 3; i--; pos += 8) {\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos    ]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 1]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 2]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 3]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 4]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 5]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 6]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 7]) & 0xff];\n  }\n\n  return (crc ^ 0xffffffff) >>> 0;\n};\n\n/**\n * @param {number} num\n * @param {number} crc\n * @returns {number}\n */\nZlib.CRC32.single = function(num, crc) {\n  return (Zlib.CRC32.Table[(num ^ crc) & 0xff] ^ (num >>> 8)) >>> 0;\n};\n\n/**\n * @type {Array.<number>}\n * @const\n * @private\n */\nZlib.CRC32.Table_ = [\n  0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f,\n  0xe963a535, 0x9e6495a3, 0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988,\n  0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91, 0x1db71064, 0x6ab020f2,\n  0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,\n  0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9,\n  0xfa0f3d63, 0x8d080df5, 0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172,\n  0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b, 0x35b5a8fa, 0x42b2986c,\n  0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,\n  0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423,\n  0xcfba9599, 0xb8bda50f, 0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924,\n  0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d, 0x76dc4190, 0x01db7106,\n  0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\n  0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d,\n  0x91646c97, 0xe6635c01, 0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e,\n  0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457, 0x65b0d9c6, 0x12b7e950,\n  0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,\n  0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7,\n  0xa4d1c46d, 0xd3d6f4fb, 0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0,\n  0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9, 0x5005713c, 0x270241aa,\n  0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n  0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81,\n  0xb7bd5c3b, 0xc0ba6cad, 0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a,\n  0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683, 0xe3630b12, 0x94643b84,\n  0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\n  0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb,\n  0x196c3671, 0x6e6b06e7, 0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc,\n  0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5, 0xd6d6a3e8, 0xa1d1937e,\n  0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,\n  0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55,\n  0x316e8eef, 0x4669be79, 0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236,\n  0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f, 0xc5ba3bbe, 0xb2bd0b28,\n  0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,\n  0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f,\n  0x72076785, 0x05005713, 0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38,\n  0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21, 0x86d3d2d4, 0xf1d4e242,\n  0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\n  0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69,\n  0x616bffd3, 0x166ccf45, 0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2,\n  0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db, 0xaed16a4a, 0xd9d65adc,\n  0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n  0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693,\n  0x54de5729, 0x23d967bf, 0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94,\n  0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d\n];\n\n/**\n * @type {!(Array.<number>|Uint32Array)} CRC-32 Table.\n * @const\n */\nZlib.CRC32.Table =   new Uint32Array(Zlib.CRC32.Table_) ;\n\n/**\n * @fileoverview Deflate (RFC1951) 実装.\n * Deflateアルゴリズム本体は Zlib.RawDeflate で実装されている.\n */\n\n/**\n * Zlib Deflate\n * @constructor\n * @param {!(Array|Uint8Array)} input 符号化する対象の byte array.\n * @param {Object=} opt_params option parameters.\n */\nZlib.Deflate = function(input, opt_params) {\n  /** @type {!(Array|Uint8Array)} */\n  this.input = input;\n  /** @type {!(Array|Uint8Array)} */\n  this.output =\n    new ( Uint8Array )(Zlib.Deflate.DefaultBufferSize);\n  /** @type {Zlib.Deflate.CompressionType} */\n  this.compressionType = Zlib.Deflate.CompressionType.DYNAMIC;\n  /** @type {Zlib.RawDeflate} */\n  this.rawDeflate;\n  /** @type {Object} */\n  var rawDeflateOption = {};\n  /** @type {string} */\n  var prop;\n\n  // option parameters\n  if (opt_params || !(opt_params = {})) {\n    if (typeof opt_params['compressionType'] === 'number') {\n      this.compressionType = opt_params['compressionType'];\n    }\n  }\n\n  // copy options\n  for (prop in opt_params) {\n    rawDeflateOption[prop] = opt_params[prop];\n  }\n\n  // set raw-deflate output buffer\n  rawDeflateOption['outputBuffer'] = this.output;\n\n  this.rawDeflate = new Zlib.RawDeflate(this.input, rawDeflateOption);\n};\n\n/**\n * @const\n * @type {number} デフォルトバッファサイズ.\n */\nZlib.Deflate.DefaultBufferSize = 0x8000;\n\n/**\n * @enum {number}\n */\nZlib.Deflate.CompressionType = Zlib.RawDeflate.CompressionType;\n\n/**\n * 直接圧縮に掛ける.\n * @param {!(Array|Uint8Array)} input target buffer.\n * @param {Object=} opt_params option parameters.\n * @return {!(Array|Uint8Array)} compressed data byte array.\n */\nZlib.Deflate.compress = function(input, opt_params) {\n  return (new Zlib.Deflate(input, opt_params)).compress();\n};\n\n/**\n * Deflate Compression.\n * @return {!(Array|Uint8Array)} compressed data byte array.\n */\nZlib.Deflate.prototype.compress = function() {\n  /** @type {Zlib.CompressionMethod} */\n  var cm;\n  /** @type {number} */\n  var cinfo;\n  /** @type {number} */\n  var cmf;\n  /** @type {number} */\n  var flg;\n  /** @type {number} */\n  var fcheck;\n  /** @type {number} */\n  var fdict;\n  /** @type {number} */\n  var flevel;\n  /** @type {number} */\n  var adler;\n  /** @type {!(Array|Uint8Array)} */\n  var output;\n  /** @type {number} */\n  var pos = 0;\n\n  output = this.output;\n\n  // Compression Method and Flags\n  cm = Zlib.CompressionMethod.DEFLATE;\n  switch (cm) {\n    case Zlib.CompressionMethod.DEFLATE:\n      cinfo = Math.LOG2E * Math.log(Zlib.RawDeflate.WindowSize) - 8;\n      break;\n    default:\n      throw new Error('invalid compression method');\n  }\n  cmf = (cinfo << 4) | cm;\n  output[pos++] = cmf;\n\n  // Flags\n  fdict = 0;\n  switch (cm) {\n    case Zlib.CompressionMethod.DEFLATE:\n      switch (this.compressionType) {\n        case Zlib.Deflate.CompressionType.NONE: flevel = 0; break;\n        case Zlib.Deflate.CompressionType.FIXED: flevel = 1; break;\n        case Zlib.Deflate.CompressionType.DYNAMIC: flevel = 2; break;\n        default: throw new Error('unsupported compression type');\n      }\n      break;\n    default:\n      throw new Error('invalid compression method');\n  }\n  flg = (flevel << 6) | (fdict << 5);\n  fcheck = 31 - (cmf * 256 + flg) % 31;\n  flg |= fcheck;\n  output[pos++] = flg;\n\n  // Adler-32 checksum\n  adler = Zlib.Adler32(this.input);\n\n  this.rawDeflate.op = pos;\n  output = this.rawDeflate.compress();\n  pos = output.length;\n\n  {\n    // subarray 分を元にもどす\n    output = new Uint8Array(output.buffer);\n    // expand buffer\n    if (output.length <= pos + 4) {\n      this.output = new Uint8Array(output.length + 4);\n      this.output.set(output);\n      output = this.output;\n    }\n    output = output.subarray(0, pos + 4);\n  }\n\n  // adler32\n  output[pos++] = (adler >> 24) & 0xff;\n  output[pos++] = (adler >> 16) & 0xff;\n  output[pos++] = (adler >>  8) & 0xff;\n  output[pos++] = (adler      ) & 0xff;\n\n  return output;\n};\n\nconst isNode =\n    typeof process !== 'undefined' &&\n    process.versions != null &&\n    process.versions.node != null;\n\n\nconst crossFetch = isNode ? require(\"node-fetch\") : fetch;\n\nclass BrowserLocalFile {\n\n    constructor(blob) {\n        this.file = blob;\n    }\n\n    async read(position, length) {\n        const file = this.file;\n        if (position !== undefined) {\n            return file.slice(position, position + length).arrayBuffer()\n\n        } else {\n            return file.arrayBuffer()\n\n        }\n    }\n}\n\nconst isNode$1 = typeof process !== 'undefined' && process.versions != null && process.versions.node != null;\n\nlet fs;\nlet fsOpen;\nlet fsRead;\n\nif (isNode$1) {\n    const util = require('util');\n    fs = require('fs');\n    fsOpen = fs && util.promisify(fs.open);\n    fsRead = fs && util.promisify(fs.read);\n}\n\nclass NodeLocalFile {\n\n    constructor(args) {\n        this.path = args.path;\n    }\n\n\n    async read(position, length) {\n\n        const buffer = Buffer.alloc(length);\n        const fd = await fsOpen(this.path, 'r');\n        const result = await fsRead(fd, buffer, 0, length, position);\n\n        fs.close(fd, function (error) {\n            // TODO Do something with error\n        });\n\n        //TODO -- compare result.bytesRead with length\n        const b = result.buffer;\n        const arrayBuffer = b.buffer.slice(b.byteOffset, b.byteOffset + b.byteLength);\n        return arrayBuffer\n    }\n}\n\nconst  isNode$2 = typeof process !== 'undefined' && process.versions != null && process.versions.node != null;\n\nclass RemoteFile {\n\n    constructor(args) {\n        this.config = args;\n        this.url = mapUrl(args.path || args.url);\n    }\n\n\n    async read(position, length) {\n\n        length = Math.ceil(length);\n        const headers = this.config.headers || {};\n        const rangeString = \"bytes=\" + position + \"-\" + (position + length - 1);\n        headers['Range'] = rangeString;\n\n        let url = this.url.slice();    // slice => copy\n        if (isNode$2) {\n            headers['User-Agent'] = 'straw';\n        } else {\n            if (this.config.oauthToken) {\n                const token = resolveToken(this.config.oauthToken);\n                headers['Authorization'] = `Bearer ${token}`;\n            }\n            const isSafari = navigator.vendor.indexOf(\"Apple\") == 0 && /\\sSafari\\//.test(navigator.userAgent);\n            const isChrome = navigator.userAgent.indexOf('Chrome') > -1;\n            const isAmazonV4Signed = this.url.indexOf(\"X-Amz-Signature\") > -1;\n\n            if (isChrome && !isAmazonV4Signed) {\n                url = addParameter(url, \"randomSeed\", Math.random().toString(36));\n            }\n        }\n\n        if (this.config.apiKey) {\n            url = addParameter(url, \"key\", this.config.apiKey);\n        }\n\n        const response = await crossFetch(url, {\n            method: 'GET',\n            headers: headers,\n            redirect: 'follow',\n            mode: 'cors',\n\n        });\n\n        const status = response.status;\n\n        if (status >= 400) {\n            console.error(`${status}  ${this.config.url}`);\n            const err = Error(response.statusText);\n            err.code = status;\n            throw err\n        } else {\n            return response.arrayBuffer();\n        }\n\n        /**\n         * token can be a string, a function that returns a string, or a function that returns a Promise for a string\n         * @param token\n         * @returns {Promise<*>}\n         */\n        async function resolveToken(token) {\n            if (typeof token === 'function') {\n                return await Promise.resolve(token())    // Normalize the result to a promise, since we don't know what the function returns\n            } else {\n                return token\n            }\n        }\n\n    }\n}\n\n\nfunction mapUrl(url) {\n\n    if (url.includes(\"//www.dropbox.com\")) {\n        return url.replace(\"//www.dropbox.com\", \"//dl.dropboxusercontent.com\");\n    } else if (url.startsWith(\"ftp://ftp.ncbi.nlm.nih.gov\")) {\n        return url.replace(\"ftp://\", \"https://\")\n    } else {\n        return url\n    }\n}\n\n\nfunction addParameter(url, name, value) {\n    const paramSeparator = url.includes(\"?\") ? \"&\" : \"?\";\n    return url + paramSeparator + name + \"=\" + value;\n}\n\nclass ThrottledFile {\n\n    constructor(file, rateLimiter) {\n        this.file = file;\n        this.rateLimiter = rateLimiter;\n    }\n\n\n    async read(position, length) {\n\n        const file = this.file;\n        const rateLimiter = this.rateLimiter;\n\n        return new Promise(function (fulfill, reject) {\n            rateLimiter.limiter(async function (f) {\n                try {\n                    const result = await f.read(position, length);\n                    fulfill(result);\n                } catch (e) {\n                    reject(e);\n                }\n            })(file);\n        })\n    }\n}\n\nclass RateLimiter {\n\n    constructor(wait) {\n        this.wait = wait === undefined ? 100 : wait;\n\n        this.isCalled = false;\n        this.calls = [];\n    }\n\n\n    limiter(fn) {\n\n        const self = this;\n\n        let caller = function () {\n\n            if (self.calls.length && !self.isCalled) {\n                self.isCalled = true;\n                self.calls.shift().call();\n                setTimeout(function () {\n                    self.isCalled = false;\n                    caller();\n                }, self.wait);\n            }\n        };\n\n        return function () {\n            self.calls.push(fn.bind(this, ...arguments));\n            caller();\n        };\n    }\n\n}\n\nclass BufferedFile {\n\n    constructor(args) {\n        this.file = args.file;\n        this.size = args.size || 64000;\n        this.position = 0;\n        this.bufferStart = 0;\n        this.bufferLength = 0;\n        this.buffer = undefined;\n    }\n\n\n    async read(position, length) {\n\n        const start = position;\n        const end = position + length;\n        const bufferStart = this.bufferStart;\n        const bufferEnd = this.bufferStart + this.bufferLength;\n\n\n        if (length > this.size) {\n            // Request larger than max buffer size,  pass through to underlying file\n            //console.log(\"0\")\n            this.buffer = undefined;\n            this.bufferStart = 0;\n            this.bufferLength = 0;\n            return this.file.read(position, length)\n        }\n\n        if (start >= bufferStart && end <= bufferEnd) {\n            // Request within buffer bounds\n            //console.log(\"1\")\n            const sliceStart = start - bufferStart;\n            const sliceEnd = sliceStart + length;\n            return this.buffer.slice(sliceStart, sliceEnd)\n        }\n\n        else if (start < bufferStart && end > bufferStart) {\n            // Overlap left, here for completness but this is an unexpected case in straw.  We don't adjust the buffer.\n            //console.log(\"2\")\n            const l1 = bufferStart - start;\n            const a1 = await this.file.read(position, l1);\n            const l2 = length - l1;\n            if (l2 > 0) {\n                //this.buffer = await this.file.read(bufferStart, this.size)\n                const a2 = this.buffer.slice(0, l2);\n                return concatBuffers(a1, a2)\n            } else {\n                return a1\n            }\n\n        }\n\n        else if (start < bufferEnd && end > bufferEnd) {\n            // Overlap right\n            // console.log(\"3\")\n            const l1 = bufferEnd - start;\n            const sliceStart = this.bufferLength - l1;\n            const a1 = this.buffer.slice(sliceStart, this.bufferLength);\n\n            const l2 = length - l1;\n            if (l2 > 0) {\n                try {\n                    this.buffer = await this.file.read(bufferEnd, this.size);\n                    this.bufferStart = bufferEnd;\n                    this.bufferLength = this.buffer.byteLength;\n                    const a2 = this.buffer.slice(0, l2);\n                    return concatBuffers(a1, a2)\n                } catch (e) {\n                    // A \"unsatisfiable range\" error is expected here if we overlap past the end of file\n                    if (e.code && e.code === 416) {\n                        return a1\n                    }\n                    else {\n                        throw e\n                    }\n                }\n\n            } else {\n                return a1\n            }\n\n        }\n\n        else {\n            // No overlap with buffer\n            // console.log(\"4\")\n            this.buffer = await this.file.read(position, this.size);\n            this.bufferStart = position;\n            this.bufferLength = this.buffer.byteLength;\n            return this.buffer.slice(0, length)\n        }\n\n    }\n\n}\n\n/**\n * concatenates 2 array buffers.\n * Credit: https://gist.github.com/72lions/4528834\n *\n * @private\n * @param {ArrayBuffers} buffer1 The first buffer.\n * @param {ArrayBuffers} buffer2 The second buffer.\n * @return {ArrayBuffers} The new ArrayBuffer created out of the two.\n */\nvar concatBuffers = function (buffer1, buffer2) {\n    var tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n    tmp.set(new Uint8Array(buffer1), 0);\n    tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\n    return tmp.buffer;\n};\n\n// TODO -- big endian\n\nconst BinaryParser = function (dataView, littleEndian) {\n\n    this.littleEndian = littleEndian !== undefined ? littleEndian : true;\n    this.position = 0;\n    this.view = dataView;\n    this.length = dataView.byteLength;\n};\n\nBinaryParser.prototype.available = function () {\n    return this.length - this.position;\n};\n\nBinaryParser.prototype.remLength = function () {\n    return this.length - this.position;\n};\n\nBinaryParser.prototype.hasNext = function () {\n    return this.position < this.length - 1;\n};\n\nBinaryParser.prototype.getByte = function () {\n    var retValue = this.view.getUint8(this.position, this.littleEndian);\n    this.position++;\n    return retValue;\n};\n\nBinaryParser.prototype.getShort = function () {\n\n    var retValue = this.view.getInt16(this.position, this.littleEndian);\n    this.position += 2;\n    return retValue;\n};\n\nBinaryParser.prototype.getUShort = function () {\n\n    // var byte1 = this.getByte(),\n    //     byte2 = this.getByte(),\n    //     retValue = ((byte2 << 24 >>> 16) + (byte1 << 24 >>> 24));\n    //     return retValue;\n\n    //\n    var retValue = this.view.getUint16(this.position, this.littleEndian);\n    this.position += 2;\n    return retValue;\n};\n\n\nBinaryParser.prototype.getInt = function () {\n\n    var retValue = this.view.getInt32(this.position, this.littleEndian);\n    this.position += 4;\n    return retValue;\n};\n\n\nBinaryParser.prototype.getUInt = function () {\n    var retValue = this.view.getUint32(this.position, this.littleEndian);\n    this.position += 4;\n    return retValue;\n};\n\nBinaryParser.prototype.getLong = function () {\n\n    // DataView doesn't support long. So we'll try manually\n\n    var b = [];\n    b[0] = this.view.getUint8(this.position);\n    b[1] = this.view.getUint8(this.position + 1);\n    b[2] = this.view.getUint8(this.position + 2);\n    b[3] = this.view.getUint8(this.position + 3);\n    b[4] = this.view.getUint8(this.position + 4);\n    b[5] = this.view.getUint8(this.position + 5);\n    b[6] = this.view.getUint8(this.position + 6);\n    b[7] = this.view.getUint8(this.position + 7);\n\n    var value = 0;\n    if (this.littleEndian) {\n        for (var i = b.length - 1; i >= 0; i--) {\n            value = (value * 256) + b[i];\n        }\n    } else {\n        for (var i = 0; i < b.length; i++) {\n            value = (value * 256) + b[i];\n        }\n    }\n\n\n    this.position += 8;\n    return value;\n};\n\nBinaryParser.prototype.getString = function (len) {\n\n    var s = \"\";\n    var c;\n    while ((c = this.view.getUint8(this.position++)) != 0) {\n        s += String.fromCharCode(c);\n        if (len && s.length == len) break;\n    }\n    return s;\n};\n\nBinaryParser.prototype.getFixedLengthString = function (len) {\n\n    var s = \"\";\n    var i;\n    var c;\n    for (i = 0; i < len; i++) {\n        c = this.view.getUint8(this.position++);\n        if (c > 0) {\n            s += String.fromCharCode(c);\n        }\n    }\n    return s;\n};\n\nBinaryParser.prototype.getFixedLengthTrimmedString = function (len) {\n\n    var s = \"\";\n    var i;\n    var c;\n    for (i = 0; i < len; i++) {\n        c = this.view.getUint8(this.position++);\n        if (c > 32) {\n            s += String.fromCharCode(c);\n        }\n    }\n    return s;\n};\n\nBinaryParser.prototype.getFloat = function () {\n\n    var retValue = this.view.getFloat32(this.position, this.littleEndian);\n    this.position += 4;\n    return retValue;\n\n\n};\n\nBinaryParser.prototype.getDouble = function () {\n\n    var retValue = this.view.getFloat64(this.position, this.littleEndian);\n    this.position += 8;\n    return retValue;\n};\n\nBinaryParser.prototype.skip = function (n) {\n\n    this.position += n;\n    return this.position;\n};\n\n\n/**\n * Return a bgzip (bam and tabix) virtual pointer\n * TODO -- why isn't 8th byte used ?\n * @returns {*}\n */\nBinaryParser.prototype.getVPointer = function () {\n\n    var position = this.position,\n        offset = (this.view.getUint8(position + 1) << 8) | (this.view.getUint8(position)),\n        byte6 = ((this.view.getUint8(position + 6) & 0xff) * 0x100000000),\n        byte5 = ((this.view.getUint8(position + 5) & 0xff) * 0x1000000),\n        byte4 = ((this.view.getUint8(position + 4) & 0xff) * 0x10000),\n        byte3 = ((this.view.getUint8(position + 3) & 0xff) * 0x100),\n        byte2 = ((this.view.getUint8(position + 2) & 0xff)),\n        block = byte6 + byte5 + byte4 + byte3 + byte2;\n    this.position += 8;\n\n    //       if (block == 0 && offset == 0) {\n    //           return null;\n    //       } else {\n    return new VPointer(block, offset);\n    //       }\n};\n\n\nfunction VPointer(block, offset) {\n    this.block = block;\n    this.offset = offset;\n}\n\nVPointer.prototype.isLessThan = function (vp) {\n    return this.block < vp.block ||\n        (this.block === vp.block && this.offset < vp.offset);\n};\n\nVPointer.prototype.isGreaterThan = function (vp) {\n    return this.block > vp.block ||\n        (this.block === vp.block && this.offset > vp.offset);\n};\n\nVPointer.prototype.print = function () {\n    return \"\" + this.block + \":\" + this.offset;\n};\n\nclass MatrixZoomData {\n\n    constructor(chr1, chr2) {\n\n        this.chr1 = chr1;    // chromosome index\n        this.chr2 = chr2;\n    }\n\n    getKey () {\n        return this.chr1.name + \"_\" + this.chr2.name + \"_\" + this.zoom.unit + \"_\" + this.zoom.binSize;\n    }\n\n    getBlockNumbers(region1, region2, version) {\n\n        // Verify region chromosomes and swap if neccessary\n        if(region1.chr == this.chr2 && region2.chr === this.chr1) {\n            const tmp = region1;\n            region1 = region2;\n            region2 = tmp;\n        }\n\n        const sameChr = this.chr1 === this.chr2;\n        const binsize = this.zoom.binSize;\n        const blockBinCount = this.blockBinCount;\n        const blockColumnCount = this.blockColumnCount;\n        return (version < 9 || !sameChr) ? getBlockNumbersV8() : getBlockNumbersV9();\n\n        function getBlockNumbersV8()\n        {\n            const x1 = region1.start / binsize;\n            const x2 = region1.end / binsize;\n            const y1 = region2.start / binsize;\n            const y2 = region2.end / binsize;\n\n            const col1 = Math.floor(x1 / blockBinCount);\n            const col2 = Math.floor((x2 - 1) / blockBinCount);\n            const row1 = Math.floor(y1 / blockBinCount);\n            const row2 = Math.floor((y2 - 1) / blockBinCount);\n\n            const blockNumbers = [];\n            for (let row = row1; row <= row2; row++) {\n                for (let column = col1; column <= col2; column++) {\n                    let blockNumber;\n                    if (sameChr && row < column) {\n                        blockNumber = column * blockColumnCount + row;\n                    } else {\n                        blockNumber = row * blockColumnCount + column;\n                    }\n                    if (!blockNumbers.includes(blockNumber)) {  // possible from transposition\n                        blockNumbers.push(blockNumber);\n                    }\n                }\n            }\n            return blockNumbers\n        }\n\n        function getBlockNumbersV9()\n        {\n\n            const binX1 = region1.start / binsize;\n            const binX2 = region1.end / binsize;\n            const binY1 = region2.start / binsize;\n            const binY2 = region2.end / binsize;\n\n            // PAD = positionAlongDiagonal (~projected)\n            // Depth is axis perpendicular to diagonal; nearer means closer to diagonal\n            const translatedLowerPAD = Math.floor((binX1 + binY1) / 2 / blockBinCount);\n            const translatedHigherPAD = Math.floor((binX2 + binY2) / 2 / blockBinCount);\n            const translatedNearerDepth = Math.floor(Math.log2(1 + Math.abs(binX1 - binY2) / Math.sqrt(2) / blockBinCount));\n            const translatedFurtherDepth = Math.floor(Math.log2(1 + Math.abs(binX2 - binY1) / Math.sqrt(2) / blockBinCount));\n\n            // because code above assume above diagonal; but we could be below diagonal\n            const containsDiagonal = (binX2 - binY1) * (binX1 - binY2) < 0;   // i.e. sign of (x-y) opposite on 2 corners\n            const nearerDepth = containsDiagonal ? 0 : Math.min(translatedNearerDepth, translatedFurtherDepth);\n            const furtherDepth = Math.max(translatedNearerDepth, translatedFurtherDepth);\n\n            const blockNumbers = [];\n            for (let depth = nearerDepth; depth <= furtherDepth; depth++) {\n                for (let pad = translatedLowerPAD; pad <= translatedHigherPAD; pad++) {\n                    const block_number = depth * blockColumnCount + pad;\n                    blockNumbers.push(block_number);\n                }\n            }\n            return blockNumbers\n        }\n    }\n\n    static parseMatrixZoomData(chr1, chr2, dis) {\n\n        const zd = new MatrixZoomData(chr1, chr2);\n\n        const unit = dis.getString();\n        const zoomIndex = dis.getInt();\n        const sumCounts = dis.getFloat();\n        const occupiedCellCount = dis.getFloat();\n        const stdDev = dis.getFloat();\n        const percent95 = dis.getFloat();\n        const binSize = dis.getInt();\n        zd. blockBinCount = dis.getInt();\n        zd. blockColumnCount = dis.getInt();\n        const nBlocks = dis.getInt();\n\n        zd. zoom = {index: zoomIndex, unit: unit, binSize: binSize};\n\n        zd.blockIndex = new StaticBlockIndex(nBlocks, dis);\n\n        const nBins1 = (chr1.size / binSize);\n        const nBins2 = (chr2.size / binSize);\n        const avgCount = (sumCounts / nBins1) / nBins2;   // <= trying to avoid overflows\n\n        zd.averageCount = avgCount;\n        zd.sumCounts = sumCounts;\n        zd.stdDev = stdDev;\n        zd.occupiedCellCount = occupiedCellCount;\n        zd.percent95 = percent95;\n\n        return zd;\n    }\n}\n\n\nclass StaticBlockIndex {\n\n    constructor(nBlocks, dis) {\n        this.blockIndex = {};\n        while (nBlocks-- > 0) {\n            const blockNumber = dis.getInt();\n            const filePosition = dis.getLong();\n            const size = dis.getInt();\n            this.blockIndex[blockNumber] = {filePosition, size};\n        }\n    }\n\n    getBlockIndexEntry(blockNumber) {\n        return this.blockIndex[blockNumber];\n    }\n}\n\nclass Matrix {\n\n    constructor(chr1, chr2, zoomDataList) {\n        this.chr1 = chr1;\n        this.chr2 = chr2;\n        this.bpZoomData = [];\n        this.fragZoomData = [];\n        for (let zd of zoomDataList) {\n            if (zd.zoom.unit === \"BP\") {\n                this.bpZoomData.push(zd);\n            } else {\n                this.fragZoomData.push(zd);\n            }\n        }\n    }\n\n    /**\n     * Find the best zoom level for the given bin size\n     * @param binSize\n     * @param unit\n     * @returns {number}\n     */\n    findZoomForResolution(binSize, unit) {\n        const zdArray = \"FRAG\" === unit ? this.fragZoomData : this.bpZoomData;\n        for (let i = 1; i < zdArray.length; i++) {\n            var zd = zdArray[i];\n            if (zd.zoom.binSize < binSize) {\n                return i - 1\n            }\n        }\n        return zdArray.length - 1\n    }\n\n    /**\n     * Fetch zoom data by bin size.  If no matching level exists return undefined.\n     *\n     * @param unit\n     * @param binSize\n     * @param zoom\n     * @returns {undefined|*}\n     */\n    getZoomData(binSize, unit) {\n        unit = unit || \"BP\";\n        const zdArray = unit === \"BP\" ? this.bpZoomData : this.fragZoomData;\n        for (let i = 0; i < zdArray.length; i++) {\n            var zd = zdArray[i];\n            if (binSize === zd.zoom.binSize) {\n                return zd\n            }\n        }\n        return undefined\n    }\n\n    /**\n     * Return zoom data by resolution index.\n     * @param index\n     * @param unit\n     * @returns {*}\n     */\n    getZoomDataByIndex(index, unit) {\n        const zdArray = \"FRAG\" === unit ? this.fragZoomData : this.bpZoomData;\n        return zdArray[index]\n    }\n\n    static getKey(chrIdx1, chrIdx2) {\n        if (chrIdx1 > chrIdx2) {\n            const tmp = chrIdx1;\n            chrIdx1 = chrIdx2;\n            chrIdx2 = tmp;\n        }\n        return `${chrIdx1}_${chrIdx2}`;\n    }\n\n    static parseMatrix(data, chromosomes) {\n\n        const dis = new BinaryParser(new DataView(data));\n        const c1 = dis.getInt();     // Should equal chrIdx1\n        const c2 = dis.getInt();     // Should equal chrIdx2\n\n        // TODO validate this\n        const chr1 = chromosomes[c1];\n        const chr2 = chromosomes[c2];\n\n        // # of resolution levels (bp and frags)\n        let nResolutions = dis.getInt();\n        const zdList = [];\n\n        while (nResolutions-- > 0) {\n            const zd = MatrixZoomData.parseMatrixZoomData(chr1, chr2, dis);\n            zdList.push(zd);\n        }\n        return new Matrix(c1, c2, zdList);\n    }\n\n}\n\nclass ContactRecord {\n\n    constructor(bin1, bin2, counts) {\n        this.bin1 = bin1;\n        this.bin2 = bin2;\n        this.counts = counts;\n    };\n\n    getKey() {\n        return \"\" + this.bin1 + \"_\" + this.bin2;\n    }\n}\n\nclass LRU {\n    constructor(max = 10) {\n        this.max = max;\n        this.map = new Map();\n    }\n\n    get(key) {\n        let item = this.map.get(key);\n        if (item) {\n            // refresh key\n            this.map.delete(key);\n            this.map.set(key, item);\n        }\n        return item;\n    }\n\n    set(key, val) {\n        // refresh key\n        if (this.map.has(key)) this.map.delete(key);\n        // evict oldest\n        else if (this.map.size === this.max) {\n            this.map.delete(this.first());\n        }\n        this.map.set(key, val);\n    }\n\n    has(key) {\n        return this.map.has(key);\n    }\n\n    clear() {\n        this.map.clear();\n    }\n\n    first() {\n        return this.map.keys().next().value;\n    }\n}\n\n/*\n *  The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n * associated documentation files (the \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial\n * portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n * BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nconst DOUBLE = 8;\n\nclass NormalizationVector {\n\n    constructor(file, filePosition, nValues, dataType) {\n        this.file = file;\n        this.filePosition = filePosition;\n        this.nValues = nValues;\n        this.dataType = dataType;\n        this.cache = undefined;\n    }\n\n    async getValues(start, end) {\n\n        if(!this.cache || start < this.cache.start || end > this.cache.end) {\n            const adjustedStart = Math.max(0, start - 1000);\n            const adjustedEnd = Math.min(this.nValues, end + 1000);\n            const startPosition = this.filePosition + adjustedStart * this.dataType;\n            const n = adjustedEnd - adjustedStart;\n            const sizeInBytes = n  * this.dataType;\n            const data = await this.file.read(startPosition, sizeInBytes);\n            if (!data) {\n                return undefined;\n            }\n            const parser = new BinaryParser(new DataView(data));\n\n            const values = [];\n            for (let i = 0; i < n; i++) {\n                values[i] = this.dataType === DOUBLE ? parser.getDouble() : parser.getFloat();\n\n            }\n            this.cache = {\n                start: adjustedStart,\n                end: adjustedEnd,\n                values: values\n            };\n        }\n\n        const sliceStart = start - this.cache.start;\n        const sliceEnd = sliceStart + (end - start);\n        return this.cache.values.slice(sliceStart, sliceEnd);\n    }\n\n    getKey() {\n        return NormalizationVector.getKey(this.type, this.chrIdx, this.unit, this.resolution);\n    }\n\n\n    static getNormalizationVectorKey(type, chrIdx, unit, resolution) {\n        return type + \"_\" + chrIdx + \"_\" + unit + \"_\" + resolution;\n    }\n}\n\nconst isNode$3 = typeof process !== 'undefined' && process.versions != null && process.versions.node != null;\nconst Short_MIN_VALUE = -32768;\nconst DOUBLE$1 = 8;\nconst FLOAT = 4;\nconst INT = 4;\nconst GoogleRateLimiter = new RateLimiter(100);\n\n\nclass HicFile {\n\n    constructor(args) {\n\n        this.config = args;\n\n        this.loadFragData = args.loadFragData;\n        this.fragmentSitesCache = {};\n        this.normVectorCache = new LRU(10);\n        this.normalizationTypes = ['NONE'];\n        this.matrixCache = new LRU(10);\n        this.blockCache = new BlockCache();\n\n        // args may specify an io.File object, a local path (Node only), or a url\n        if (args.file) {\n            this.file = args.file;\n        } else if (args.blob) {\n            this.file = new BrowserLocalFile(args.blob);\n        } else if (args.url || (args.path && !isNode$3)) {\n            this.url = args.url || this.path;\n            this.remote = true;\n\n            // Google drive must be rate limited.  Perhaps all remote files should be rate limited?\n            const remoteFile = new RemoteFile(args);\n            if (isGoogleDrive(this.url)) {\n                this.file = new ThrottledFile(remoteFile, GoogleRateLimiter);\n            } else {\n                this.file = remoteFile;\n            }\n        } else if (args.path) {\n            // path argument, assumed local file\n            this.file = new NodeLocalFile({path: args.path});\n\n        } else {\n            throw Error(\"Arguments must include file, blob, url, or path\")\n        }\n    }\n\n\n    async init() {\n\n        if (this.initialized) {\n            return;\n        } else {\n            await this.readHeaderAndFooter();\n            // Footer is read with header\n            //await this.readFooter()\n            this.initialized = true;\n        }\n    }\n\n    async getVersion() {\n        if (this.version === undefined) {\n            const data = await this.file.read(0, 128);\n            if (!data) {\n                return undefined;\n            }\n            const binaryParser = new BinaryParser(new DataView(data));\n            this.magic = binaryParser.getString();\n            this.version = binaryParser.getInt();\n            return this.version\n        } else {\n            return this.version\n        }\n    }\n\n    async getMetaData() {\n        await this.init();\n        return this.meta\n    }\n\n    async readHeaderAndFooter() {\n\n        // Read initial fields magic, version, and footer position\n        let data = await this.file.read(0, 16);\n        if (!data || data.byteLength === 0) {\n            throw Error(\"File content is empty\")\n        }\n        let binaryParser = new BinaryParser(new DataView(data));\n        this.magic = binaryParser.getString();\n        this.version = binaryParser.getInt();\n        if (this.version < 5) {\n            throw Error(\"Unsupported hic version: \" + this.version)\n        }\n        this.footerPosition = binaryParser.getLong();\n\n        // Read footer and determine file position for body section (i.e. end of header)\n\n        await this.readFooter();\n\n        const bodyPostion = Object.values(this.masterIndex).reduce((min, currentValue) => {\n            return Math.min(min, currentValue.start)\n        }, Number.MAX_VALUE);\n\n        const remainingSize = bodyPostion - 16;\n        data = await this.file.read(16, remainingSize);\n        binaryParser = new BinaryParser(new DataView(data));\n\n        this.genomeId = binaryParser.getString();\n\n        if (this.version >= 9) {\n            this.normVectorIndexPosition = binaryParser.getLong();\n            this.normVectorIndexSize = binaryParser.getLong();\n        }\n\n        this.attributes = {};\n        let nAttributes = binaryParser.getInt();\n        while (nAttributes-- > 0) {\n            this.attributes[binaryParser.getString()] = binaryParser.getString();\n        }\n\n        this.chromosomes = [];\n        this.chromosomeIndexMap = {};\n        let nChrs = binaryParser.getInt();\n        let i = 0;\n        while (nChrs-- > 0) {\n            const chr = {\n                index: i,\n                name: binaryParser.getString(),\n                size: this.version < 9 ? binaryParser.getInt() : binaryParser.getLong()\n            };\n            if (chr.name.toLowerCase() === \"all\") {\n                this.wholeGenomeChromosome = chr;\n                this.wholeGenomeResolution = Math.round(chr.size * (1000 / 500));    // Hardcoded in juicer\n            }\n            this.chromosomes.push(chr);\n            this.chromosomeIndexMap[chr.name] = chr.index;\n            i++;\n        }\n\n        this.bpResolutions = [];\n        let nBpResolutions = binaryParser.getInt();\n        while (nBpResolutions-- > 0) {\n            this.bpResolutions.push(binaryParser.getInt());\n        }\n\n        if (this.loadFragData) {\n            this.fragResolutions = [];\n            let nFragResolutions = binaryParser.getInt();\n            if (nFragResolutions > 0) {\n                while (nFragResolutions-- > 0) {\n                    this.fragResolutions.push(binaryParser.getInt());\n                }\n\n                // this.sites = [];\n                // for(let i=0; i<this.chromosomes.length - 1; i++) {\n                //     const chrSites = [];\n                //     this.sites.push(chrSites);\n                //     let nSites = binaryParser.getInt();\n                //     console.log(nSites);\n                //     for(let s=0; s<nSites; s++) {\n                //         chrSites.push(binaryParser.getInt());\n                //     }\n                // }\n            }\n        }\n\n        // Build lookup table for well-known chr aliases\n        this.chrAliasTable = {};\n        for (let chrName of Object.keys(this.chromosomeIndexMap)) {\n\n            if (chrName.startsWith(\"chr\")) {\n                this.chrAliasTable[chrName.substr(3)] = chrName;\n            } else if (chrName === \"MT\") {\n                this.chrAliasTable[\"chrM\"] = chrName;\n            } else {\n                this.chrAliasTable[\"chr\" + chrName] = chrName;\n            }\n        }\n\n\n        // Meta data for the API\n        this.meta = {\n            \"version\": this.version,\n            \"genome\": this.genomeId,\n            \"chromosomes\": this.chromosomes,\n            \"resolutions\": this.bpResolutions,\n        };\n\n\n    }\n\n    async readFooter() {\n\n\n        const skip = this.version < 9 ? 8 : 12;\n        let data = await this.file.read(this.footerPosition, skip);\n        if (!data) {\n            return null;\n        }\n\n        let binaryParser = new BinaryParser(new DataView(data));\n        const nBytes = this.version < 9 ? binaryParser.getInt() : binaryParser.getLong();  // Total size, master index + expected values\n        let nEntries = binaryParser.getInt();\n\n        // Estimate the size of the master index. String length of key is unknown, be conservative (100 bytes)\n\n        const miSize = nEntries * (100 + 64 + 32);\n        data = await this.file.read(this.footerPosition + skip, Math.min(miSize, nBytes));\n\n        binaryParser = new BinaryParser(new DataView(data));\n\n        this.masterIndex = {};\n        while (nEntries-- > 0) {\n            const key = binaryParser.getString();\n            const pos = binaryParser.getLong();\n            const size = binaryParser.getInt();\n            this.masterIndex[key] = {start: pos, size: size};\n        }\n\n        this.expectedValueVectors = {};\n\n        // Expected values\n        // const nExpValues = binaryParser.readInt();\n        // while (nExpValues-- > 0) {\n        //     type = \"NONE\";\n        //     unit = binaryParser.getString();\n        //     binSize = binaryParser.getInt();\n        //     nValues = binaryParser.getInt();\n        //     values = [];\n        //     while (nValues-- > 0) {\n        //         values.push(binaryParser.getDouble());\n        //     }\n        //\n        //     nChrScaleFactors = binaryParser.getInt();\n        //     normFactors = {};\n        //     while (nChrScaleFactors-- > 0) {\n        //         normFactors[binaryParser.getInt()] = binaryParser.getDouble();\n        //     }\n        //\n        //     // key = unit + \"_\" + binSize + \"_\" + type;\n        //     //  NOT USED YET SO DON'T STORE\n        //     //  dataset.expectedValueVectors[key] =\n        //     //      new ExpectedValueFunction(type, unit, binSize, values, normFactors);\n        // }\n\n        // normalized expected values start after expected value.  Add 4 for\n        if (this.version > 5) {\n            const skip = this.version < 9 ? 4 : 8;\n            this.normExpectedValueVectorsPosition = this.footerPosition + skip + nBytes;\n        }\n        return this;\n    };\n\n    async printIndexStats() {\n\n        let totalSize = 0;\n        let maxSize = 0;\n        await await this.init();\n        for (let key of Object.keys(this.masterIndex)) {\n            const entry = this.masterIndex[key];\n            //  console.log(`${key}\\t${entry.start}\\t${entry.size}`)\n            totalSize += entry.size;\n            if (entry.size > maxSize) {\n                maxSize = entry.size;\n            }\n        }\n        // console.log(`Total size  = ${totalSize}`);\n    }\n\n    async getMatrix(chrIdx1, chrIdx2) {\n        const key = Matrix.getKey(chrIdx1, chrIdx2);\n        if (this.matrixCache.has(key)) {\n            return this.matrixCache.get(key);\n        } else {\n            const matrix = await this.readMatrix(chrIdx1, chrIdx2);\n            this.matrixCache.set(key, matrix);\n            return matrix;\n        }\n    }\n\n    async readMatrix(chrIdx1, chrIdx2) {\n\n        await this.init();\n\n        if (chrIdx1 > chrIdx2) {\n            const tmp = chrIdx1;\n            chrIdx1 = chrIdx2;\n            chrIdx2 = tmp;\n        }\n\n        const key = Matrix.getKey(chrIdx1 , chrIdx2);\n        const idx = this.masterIndex[key];\n        if (!idx) {\n            return undefined\n        }\n        const data = await this.file.read(idx.start, idx.size);\n        if (!data) {\n            return undefined\n        }\n\n        return Matrix.parseMatrix(data, this.chromosomes);\n\n    }\n\n    async getContactRecords(normalization, region1, region2, units, binsize, allRecords = false) {\n\n        await this.init();\n\n        const idx1 = this.chromosomeIndexMap[this.getFileChrName(region1.chr)];\n        const idx2 = this.chromosomeIndexMap[this.getFileChrName(region2.chr)];\n\n        const transpose = (idx1 > idx2) || (idx1 === idx2 && region1.start >= region2.end);\n        if (transpose) {\n            const tmp = region1;\n            region1 = region2;\n            region2 = tmp;\n        }\n\n        const blocks = await this.getBlocks(region1, region2, units, binsize);\n        if (!blocks || blocks.length === 0) {\n            return []\n        }\n\n        const contactRecords = [];\n        const x1 = region1.start / binsize;\n        const x2 = region1.end / binsize;\n        const y1 = region2.start / binsize;\n        const y2 = region2.end / binsize;\n        const nvX1 = Math.floor(x1);\n        const nvX2 = Math.ceil(x2);\n        const nvY1 = Math.floor(y1);\n        const nvY2 = Math.ceil(y2);\n        for (let block of blocks) {\n            if (block) { // An undefined block is most likely caused by a base pair range outside the chromosome\n                let normVector1;\n                let normVector2;\n                let isNorm = normalization && normalization !== \"NONE\";\n                const chr1 = this.getFileChrName(region1.chr);\n                const chr2 = this.getFileChrName(region2.chr);\n                if (isNorm) {\n                    const nv1 = await this.getNormalizationVector(normalization, chr1, units, binsize);\n                    const nv2 = (chr1 === chr2) ? nv1 : await this.getNormalizationVector(normalization, chr2, units, binsize);\n\n                    if (nv1 && nv2) {\n                        normVector1 = await nv1.getValues(nvX1, nvX2);\n                        normVector2 = await nv2.getValues(nvY1, nvY2);\n                    } else {\n                        isNorm = false;\n                        // Raise message and switch pulldown\n                    }\n                }\n\n                for (let rec of block.records) {\n                    if (allRecords || (rec.bin1 >= x1 && rec.bin1 < x2 && rec.bin2 >= y1 && rec.bin2 < y2)) {\n                        if (isNorm) {\n                            const x = rec.bin1;\n                            const y = rec.bin2;\n                            const nvnv = normVector1[x - nvX1] * normVector2[y - nvY1];\n                            if (nvnv !== 0 && !isNaN(nvnv)) {\n                                const counts = rec.counts / nvnv;\n                                contactRecords.push(new ContactRecord(x, y, counts));\n                            }\n                        } else {\n                            contactRecords.push(rec);\n                        }\n                    }\n                }\n            }\n        }\n\n        return contactRecords;\n    }\n\n    async getBlocks(region1, region2, unit, binSize) {\n\n        await this.init();\n        const chr1 = this.getFileChrName(region1.chr);\n        const chr2 = this.getFileChrName(region2.chr);\n        const idx1 = this.chromosomeIndexMap[chr1];\n        const idx2 = this.chromosomeIndexMap[chr2];\n\n        if (idx1 === undefined) {\n            return []\n        }\n        if (idx2 === undefined) {\n            return []\n        }\n\n        const matrix = await this.getMatrix(idx1, idx2);\n        if (!matrix) {\n            return []\n        }\n\n        const zd = matrix.getZoomData(binSize, unit);\n        if (!zd) {\n            let msg = `No data avalailble for resolution: ${binSize}  for map ${region1.chr}-${region2.chr}`;\n            throw new Error(msg)\n        }\n\n        const blockNumbers = zd.getBlockNumbers(region1, region2, this.version);\n\n        const blocks = [];\n        const blockNumbersToQuery = [];\n        for (let num of blockNumbers) {\n            if (this.blockCache.has(binSize, num)) {\n                blocks.push(this.blockCache.get(binSize, num));\n            } else {\n                blockNumbersToQuery.push(num);\n            }\n        }\n\n        const promises = blockNumbersToQuery.map(blockNumber => this.readBlock(blockNumber, zd));\n        const newBlocks = await Promise.all(promises);\n        for (let block of newBlocks) {\n            if (block) {\n                this.blockCache.set(binSize, block.blockNumber, block);\n            }\n        }\n        return blocks.concat(newBlocks);\n    }\n\n    async readBlock(blockNumber, zd) {\n\n        const idx = await zd.blockIndex.getBlockIndexEntry(blockNumber);\n\n        if (!idx) {\n            return undefined\n        } else {\n            let data = await this.file.read(idx.filePosition, idx.size);\n            if (!data) {\n                return undefined;\n            }\n\n            const inflate = new Zlib.Inflate(new Uint8Array(data));\n            const plain = inflate.decompress();\n            //var plain = zlib.inflateSync(Buffer.from(data))   //.decompress();\n            data = plain.buffer;\n\n            const parser = new BinaryParser(new DataView(data));\n            const nRecords = parser.getInt();\n            const records = [];\n\n            if (this.version < 7) {\n                for (let i = 0; i < nRecords; i++) {\n                    const binX = parser.getInt();\n                    const binY = parser.getInt();\n                    const counts = parser.getFloat();\n                    records.push(new ContactRecord(binX, binY, counts));\n                }\n            } else {\n\n                const binXOffset = parser.getInt();\n                const binYOffset = parser.getInt();\n\n                const useFloatContact = parser.getByte() === 1;\n                const useIntXPos = this.version < 9 ? false : parser.getByte() == 1;\n                const useIntYPos = this.version < 9 ? false : parser.getByte() == 1;\n                const type = parser.getByte();\n\n                if (type === 1) {\n                    // List-of-rows representation\n                    const rowCount = useIntYPos ? parser.getInt() : parser.getShort();\n                    for (let i = 0; i < rowCount; i++) {\n                        const dy = useIntYPos ? parser.getInt() : parser.getShort();\n                        const binY = binYOffset + dy;\n                        const colCount = useIntXPos ? parser.getInt() : parser.getShort();\n                        for (let j = 0; j < colCount; j++) {\n                            const dx = useIntXPos ? parser.getInt() : parser.getShort();\n                            const binX = binXOffset + dx;\n                            const counts = useFloatContact ? parser.getFloat() : parser.getShort();\n                            records.push(new ContactRecord(binX, binY, counts));\n                        }\n                    }\n                } else if (type == 2) {\n\n                    const nPts = parser.getInt();\n                    const w = parser.getShort();\n\n                    for (let i = 0; i < nPts; i++) {\n                        //int idx = (p.y - binOffset2) * w + (p.x - binOffset1);\n                        const row = Math.floor(i / w);\n                        const col = i - row * w;\n                        const bin1 = binXOffset + col;\n                        const bin2 = binYOffset + row;\n\n                        if (useFloatContact) {\n                            const counts = parser.getFloat();\n                            if (!isNaN(counts)) {\n                                records.push(new ContactRecord(bin1, bin2, counts));\n                            }\n                        } else {\n                            const counts = parser.getShort();\n                            if (counts != Short_MIN_VALUE) {\n                                records.push(new ContactRecord(bin1, bin2, counts));\n                            }\n                        }\n                    }\n                } else {\n                    throw new Error(\"Unknown block type: \" + type);\n                }\n\n            }\n\n            return new Block(blockNumber, zd, records, idx);\n\n\n        }\n    };\n\n    async hasNormalizationVector(type, chr, unit, binSize) {\n        await this.init();\n        let chrIdx;\n        if (Number.isInteger(chr)) {\n            chrIdx = chr;\n        } else {\n            const canonicalName = this.getFileChrName(chr);\n            chrIdx = this.chromosomeIndexMap[canonicalName];\n        }\n        const key = getNormalizationVectorKey(type, chrIdx, unit.toString(), binSize);\n        const normVectorIndex = await this.getNormVectorIndex();\n        return normVectorIndex && normVectorIndex[key];\n    }\n\n    async getNormalizationVector(type, chr, unit, binSize) {\n\n        await this.init();\n\n        let chrIdx;\n        if (Number.isInteger(chr)) {\n            chrIdx = chr;\n        } else {\n            const canonicalName = this.getFileChrName(chr);\n            chrIdx = this.chromosomeIndexMap[canonicalName];\n        }\n\n        const key = getNormalizationVectorKey(type, chrIdx, unit.toString(), binSize);\n\n        if (this.normVectorCache.has(key)) {\n            return this.normVectorCache.get(key);\n        }\n\n        const normVectorIndex = await this.getNormVectorIndex();\n\n        if (!normVectorIndex) {\n            return undefined\n        }\n\n        const idx = normVectorIndex[key];\n        if (!idx) {\n            // TODO -- alert in browsers\n            return undefined;\n        }\n\n        const data = await this.file.read(idx.filePosition, 8);\n\n        if (!data) {\n            return undefined;\n        }\n\n        const parser = new BinaryParser(new DataView(data));\n        const nValues = this.version < 9 ? parser.getInt() : parser.getLong();\n        const dataType = this.version < 9 ? DOUBLE$1 : FLOAT;\n        const filePosition = this.version < 9 ? idx.filePosition + 4 : idx.filePosition + 8;\n        const nv = new NormalizationVector(this.file, filePosition, nValues, dataType);\n        this.normVectorCache.set(key, nv);\n        return nv;\n\n    }\n\n    async getNormVectorIndex() {\n\n        if (this.version < 6) {\n            return undefined;\n        }\n\n        if (!this.normVectorIndex) {\n\n            // If nvi is not supplied, try reading from remote lambda service\n            if (!this.config.nvi && this.remote && this.url) {\n                const url = new URL(this.url);\n                const key = encodeURIComponent(url.hostname + url.pathname);\n                const nviResponse = await crossFetch('https://t5dvc6kn3f.execute-api.us-east-1.amazonaws.com/dev/nvi/' + key);\n                if (nviResponse.status === 200) {\n                    const nvi = await nviResponse.text();\n                    if (nvi) {\n                        this.config.nvi = nvi;\n                    }\n                }\n            }\n\n            if (this.config.nvi) {\n                const nviArray = decodeURIComponent(this.config.nvi).split(\",\");\n                const range = {start: parseInt(nviArray[0]), size: parseInt(nviArray[1])};\n                return this.readNormVectorIndex(range)\n            } else {\n                try {\n                    await this.readNormExpectedValuesAndNormVectorIndex();\n                    return this.normVectorIndex\n                } catch (e) {\n                    if (e.code === \"416\" || e.code === 416) {\n                        // This is expected if file does not contain norm vectors\n                        this.normExpectedValueVectorsPosition = undefined;\n                    } else {\n                        console.error(e);\n                    }\n                }\n            }\n        }\n\n        return this.normVectorIndex\n    }\n\n    async getNormalizationOptions() {\n        // Normalization options are computed as a side effect of loading the index.  A bit\n        // ugly but alternatives are worse.\n        await this.getNormVectorIndex();\n        return this.normalizationTypes;\n    }\n\n    /**\n     * Return a promise to load the normalization vector index\n     *\n     * @param dataset\n     * @param range  -- file range {position, size}\n     * @returns Promise for the normalization vector index\n     */\n    async readNormVectorIndex(range) {\n\n        await this.init();\n\n        this.normalizationVectorIndexRange = range;\n\n        const data = await this.file.read(range.start, range.size);\n\n        const binaryParser = new BinaryParser(new DataView(data));\n\n        this.normVectorIndex = {};\n\n        let nEntries = binaryParser.getInt();\n        while (nEntries-- > 0) {\n            this.parseNormVectorEntry(binaryParser);\n        }\n\n        return this.normVectorIndex;\n\n    }\n\n    /**\n     * This function is used when the position of the norm vector index is unknown.  We must read through the expected\n     * values to find the index\n     *\n     * @param dataset\n     * @returns {Promise}\n     */\n    async readNormExpectedValuesAndNormVectorIndex() {\n\n        await this.init();\n\n        if (this.normExpectedValueVectorsPosition === undefined) {\n            return;\n        }\n\n        const nviStart = await this.skipExpectedValues(this.normExpectedValueVectorsPosition);\n        let byteCount = INT;\n\n        let data = await this.file.read(nviStart, INT);\n        if (data.byteLength === 0) {\n            // This is possible if there are no norm vectors.  Its a legal v8 file, though uncommon\n            return;\n        }\n        const binaryParser = new BinaryParser(new DataView(data));\n        const nEntries = binaryParser.getInt();\n        const sizeEstimate = nEntries * 30;\n        const range = {start: nviStart + byteCount, size: sizeEstimate};\n\n        data = await this.file.read(range.start, range.size);\n        this.normalizedExpectedValueVectors = {};\n        this.normVectorIndex = {};\n\n        // Recursively process entries\n        await processEntries.call(this, nEntries, data);\n\n        this.config.nvi = nviStart.toString() + \",\" + byteCount;\n\n        async function processEntries(nEntries, data) {\n\n            const binaryParser = new BinaryParser(new DataView(data));\n\n            while (nEntries-- > 0) {\n\n                if (binaryParser.available() < 100) {\n\n                    nEntries++;   // Reset counter as entry is not processed\n\n                    byteCount += binaryParser.position;\n                    const sizeEstimate = Math.max(1000, nEntries * 30);\n                    const range = {start: nviStart + byteCount, size: sizeEstimate};\n                    const data = await this.file.read(range.start, range.size);\n                    return processEntries.call(this, nEntries, data);\n                }\n\n                this.parseNormVectorEntry(binaryParser);\n\n            }\n            byteCount += binaryParser.position;\n        }\n    }\n\n    /**\n     * This function is used when the position of the norm vector index is unknown.  We must read through the\n     * normalized expected values to find the index\n     *\n     * @param dataset\n     * @returns {Promise}\n     */\n    async skipExpectedValues(start) {\n\n        const version = this.version;\n        const file = new BufferedFile({file: this.file, size: 256000});\n        const range = {start: start, size: INT};\n        const data = await file.read(range.start, range.size);\n        const binaryParser = new BinaryParser(new DataView(data));\n        const nEntries = binaryParser.getInt();   // Total # of expected value chunks\n        if (nEntries === 0) {\n            return start + INT;\n        } else {\n            return parseNext(start + INT, nEntries);\n        }     // Skip 4 bytes for int\n\n\n        async function parseNext(start, nEntries) {\n\n            let range = {start: start, size: 500};\n            let chunkSize = 0;\n            let p0 = start;\n\n            let data = await file.read(range.start, range.size);\n            let binaryParser = new BinaryParser(new DataView(data));\n            const type = binaryParser.getString(); // type\n            const unit = binaryParser.getString(); // unit\n            const binSize = binaryParser.getInt(); // binSize\n            const nValues = version < 9 ? binaryParser.getInt() : binaryParser.getLong();\n\n            chunkSize += binaryParser.position + nValues * (version < 9 ? DOUBLE$1 : FLOAT);\n\n            range = {start: start + chunkSize, size: INT};\n            data = await file.read(range.start, range.size);\n            binaryParser = new BinaryParser(new DataView(data));\n            const nChrScaleFactors = binaryParser.getInt();\n            chunkSize += (INT + nChrScaleFactors * (INT + (version < 9 ? DOUBLE$1 : FLOAT)));\n\n\n            nEntries--;\n            if (nEntries === 0) {\n                return p0 + chunkSize;\n            } else {\n                return parseNext(p0 + chunkSize, nEntries);\n            }\n        }\n    }\n\n    getZoomIndexForBinSize(binSize, unit) {\n\n        unit = unit || \"BP\";\n\n        let resolutionArray;\n        if (unit === \"BP\") {\n            resolutionArray = this.bpResolutions;\n        } else if (unit === \"FRAG\") {\n            resolutionArray = this.fragResolutions;\n        } else {\n            throw new Error(\"Invalid unit: \" + unit);\n        }\n\n        for (let i = 0; i < resolutionArray.length; i++) {\n            if (resolutionArray[i] === binSize) return i;\n        }\n\n        return -1;\n    }\n\n    parseNormVectorEntry(binaryParser) {\n        const type = binaryParser.getString();      //15\n        const chrIdx = binaryParser.getInt();       //4\n        const unit = binaryParser.getString();      //3\n        const binSize = binaryParser.getInt();      //4\n        const filePosition = binaryParser.getLong();  //8\n        const sizeInBytes = this.version < 9 ? binaryParser.getInt() : binaryParser.getLong();     //4:8\n        const key = type + \"_\" + chrIdx + \"_\" + unit + \"_\" + binSize;\n        // TODO -- why does this not work?  NormalizationVector.getNormalizationVectorKey(type, chrIdx, unit, binSize);\n\n        if (!this.normalizationTypes.includes(type)) {\n            this.normalizationTypes.push(type);\n        }\n        this.normVectorIndex[key] = {filePosition: filePosition, size: sizeInBytes};\n    }\n\n    getFileChrName(chrAlias) {\n        if (this.chrAliasTable.hasOwnProperty(chrAlias)) {\n            return this.chrAliasTable[chrAlias]\n        } else {\n            return chrAlias\n        }\n    }\n\n\n    // NOTE sties are not currently used\n    // async getSites(chrName) {\n    //     let sites = this.fragmentSitesCache[chrName];\n    //     if (!sites) {\n    //         if (this.fragmentSitesIndex) {\n    //             const entry = self.fragmentSitesIndex[chrName];\n    //             if (entry && entry.nSites > 0) {\n    //                 sites = await this.readSites(entry.position, entry.nSites)\n    //                 this.fragmentSitesCache[chrName] = sites;\n    //             }\n    //         }\n    //     }\n    //     return sites;\n    // }\n    //\n\n}\n\n\nfunction getNormalizationVectorKey(type, chrIdx, unit, resolution) {\n    return type + \"_\" + chrIdx + \"_\" + unit + \"_\" + resolution;\n}\n\nfunction isGoogleDrive(url) {\n    return url.indexOf(\"drive.google.com\") >= 0 || url.indexOf(\"www.googleapis.com/drive\") > 0\n}\n\nclass Block {\n    constructor(blockNumber, zoomData, records, idx) {\n        this.blockNumber = blockNumber;\n        this.zoomData = zoomData;\n        this.records = records;\n        this.idx = idx;\n    }\n}\n\n\nclass BlockCache {\n\n    constructor() {\n        this.resolution = undefined;\n        this.map = new LRU(6);\n    }\n\n    set(resolution, key, value) {\n        if (this.resolution !== resolution) {\n            this.map.clear();\n        }\n        this.resolution = resolution;\n        this.map.set(key, value);\n    }\n\n    get(resolution, key) {\n        return this.resolution === resolution ? this.map.get(key) : undefined;\n    }\n\n    has(resolution, key) {\n        return this.resolution === resolution && this.map.has(key);\n    }\n}\n\nclass Straw {\n\n    constructor(config) {\n        this.config = config;\n        this.hicFile = new HicFile(config);\n    }\n\n    async getMetaData() {\n        return await this.hicFile.getMetaData()\n    }\n\n    //straw <NONE/VC/VC_SQRT/KR> <ile> <chr1>[:x1:x2] <chr2>[:y1:y2] <BP/FRAG> <binsize>\n    async getContactRecords(normalization, region1, region2, units, binsize) {\n        return this.hicFile.getContactRecords(normalization, region1, region2, units, binsize);\n    }\n\n    async getNormalizationOptions() {\n        return this.hicFile.getNormalizationOptions()\n    }\n\n    async getNVI() {\n        await this.hicFile.getNormVectorIndex();\n        return this.hicFile.config.nvi;\n    }\n\n    async printIndexStats() {\n        await this.hicFile.printIndexStats();\n    }\n\n    getFileChrName(chrAlias) {\n        if (this.hicFile.chrAliasTable.hasOwnProperty(chrAlias)) {\n            return this.hicFile.chrAliasTable[chrAlias]\n        } else {\n            return chrAlias\n        }\n    }\n}\n\nexport default Straw;\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn $toString(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\t$toString(value) !== '[object Array]' &&\n\t\t$toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n","'use strict';\n\nvar toStr = Object.prototype.toString;\nvar fnToStr = Function.prototype.toString;\nvar isFnRegex = /^\\s*(?:function)?\\*/;\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar getProto = Object.getPrototypeOf;\nvar getGeneratorFunc = function () { // eslint-disable-line consistent-return\n\tif (!hasToStringTag) {\n\t\treturn false;\n\t}\n\ttry {\n\t\treturn Function('return function*() {}')();\n\t} catch (e) {\n\t}\n};\nvar GeneratorFunction;\n\nmodule.exports = function isGeneratorFunction(fn) {\n\tif (typeof fn !== 'function') {\n\t\treturn false;\n\t}\n\tif (isFnRegex.test(fnToStr.call(fn))) {\n\t\treturn true;\n\t}\n\tif (!hasToStringTag) {\n\t\tvar str = toStr.call(fn);\n\t\treturn str === '[object GeneratorFunction]';\n\t}\n\tif (!getProto) {\n\t\treturn false;\n\t}\n\tif (typeof GeneratorFunction === 'undefined') {\n\t\tvar generatorFunc = getGeneratorFunc();\n\t\tGeneratorFunction = generatorFunc ? getProto(generatorFunc) : false;\n\t}\n\treturn getProto(fn) === GeneratorFunction;\n};\n","'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar gOPD = require('es-abstract/helpers/getOwnPropertyDescriptor');\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tif (Symbol.toStringTag in arr) {\n\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\tif (!descriptor) {\n\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t}\n\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar anyTrue = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!anyTrue) {\n\t\t\ttry {\n\t\t\t\tanyTrue = getter.call(value) === typedArray;\n\t\t\t} catch (e) { /**/ }\n\t\t}\n\t});\n\treturn anyTrue;\n};\n\nmodule.exports = function isTypedArray(value) {\n\tif (!value || typeof value !== 'object') { return false; }\n\tif (!hasToStringTag || !(Symbol.toStringTag in value)) {\n\t\tvar tag = $slice($toString(value), 8, -1);\n\t\treturn $indexOf(typedArrays, tag) > -1;\n\t}\n\tif (!gOPD) { return false; }\n\treturn tryTypedArrays(value);\n};\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nif (global.fetch) {\n\texports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Currently in sync with Node.js lib/internal/util/types.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n'use strict';\n\nvar isArgumentsObject = require('is-arguments');\nvar isGeneratorFunction = require('is-generator-function');\nvar whichTypedArray = require('which-typed-array');\nvar isTypedArray = require('is-typed-array');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar BigIntSupported = typeof BigInt !== 'undefined';\nvar SymbolSupported = typeof Symbol !== 'undefined';\n\nvar ObjectToString = uncurryThis(Object.prototype.toString);\n\nvar numberValue = uncurryThis(Number.prototype.valueOf);\nvar stringValue = uncurryThis(String.prototype.valueOf);\nvar booleanValue = uncurryThis(Boolean.prototype.valueOf);\n\nif (BigIntSupported) {\n  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);\n}\n\nif (SymbolSupported) {\n  var symbolValue = uncurryThis(Symbol.prototype.valueOf);\n}\n\nfunction checkBoxedPrimitive(value, prototypeValueOf) {\n  if (typeof value !== 'object') {\n    return false;\n  }\n  try {\n    prototypeValueOf(value);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n\nexports.isArgumentsObject = isArgumentsObject;\nexports.isGeneratorFunction = isGeneratorFunction;\nexports.isTypedArray = isTypedArray;\n\n// Taken from here and modified for better browser support\n// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\nfunction isPromise(input) {\n\treturn (\n\t\t(\n\t\t\ttypeof Promise !== 'undefined' &&\n\t\t\tinput instanceof Promise\n\t\t) ||\n\t\t(\n\t\t\tinput !== null &&\n\t\t\ttypeof input === 'object' &&\n\t\t\ttypeof input.then === 'function' &&\n\t\t\ttypeof input.catch === 'function'\n\t\t)\n\t);\n}\nexports.isPromise = isPromise;\n\nfunction isArrayBufferView(value) {\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    return ArrayBuffer.isView(value);\n  }\n\n  return (\n    isTypedArray(value) ||\n    isDataView(value)\n  );\n}\nexports.isArrayBufferView = isArrayBufferView;\n\n\nfunction isUint8Array(value) {\n  return whichTypedArray(value) === 'Uint8Array';\n}\nexports.isUint8Array = isUint8Array;\n\nfunction isUint8ClampedArray(value) {\n  return whichTypedArray(value) === 'Uint8ClampedArray';\n}\nexports.isUint8ClampedArray = isUint8ClampedArray;\n\nfunction isUint16Array(value) {\n  return whichTypedArray(value) === 'Uint16Array';\n}\nexports.isUint16Array = isUint16Array;\n\nfunction isUint32Array(value) {\n  return whichTypedArray(value) === 'Uint32Array';\n}\nexports.isUint32Array = isUint32Array;\n\nfunction isInt8Array(value) {\n  return whichTypedArray(value) === 'Int8Array';\n}\nexports.isInt8Array = isInt8Array;\n\nfunction isInt16Array(value) {\n  return whichTypedArray(value) === 'Int16Array';\n}\nexports.isInt16Array = isInt16Array;\n\nfunction isInt32Array(value) {\n  return whichTypedArray(value) === 'Int32Array';\n}\nexports.isInt32Array = isInt32Array;\n\nfunction isFloat32Array(value) {\n  return whichTypedArray(value) === 'Float32Array';\n}\nexports.isFloat32Array = isFloat32Array;\n\nfunction isFloat64Array(value) {\n  return whichTypedArray(value) === 'Float64Array';\n}\nexports.isFloat64Array = isFloat64Array;\n\nfunction isBigInt64Array(value) {\n  return whichTypedArray(value) === 'BigInt64Array';\n}\nexports.isBigInt64Array = isBigInt64Array;\n\nfunction isBigUint64Array(value) {\n  return whichTypedArray(value) === 'BigUint64Array';\n}\nexports.isBigUint64Array = isBigUint64Array;\n\nfunction isMapToString(value) {\n  return ObjectToString(value) === '[object Map]';\n}\nisMapToString.working = (\n  typeof Map !== 'undefined' &&\n  isMapToString(new Map())\n);\n\nfunction isMap(value) {\n  if (typeof Map === 'undefined') {\n    return false;\n  }\n\n  return isMapToString.working\n    ? isMapToString(value)\n    : value instanceof Map;\n}\nexports.isMap = isMap;\n\nfunction isSetToString(value) {\n  return ObjectToString(value) === '[object Set]';\n}\nisSetToString.working = (\n  typeof Set !== 'undefined' &&\n  isSetToString(new Set())\n);\nfunction isSet(value) {\n  if (typeof Set === 'undefined') {\n    return false;\n  }\n\n  return isSetToString.working\n    ? isSetToString(value)\n    : value instanceof Set;\n}\nexports.isSet = isSet;\n\nfunction isWeakMapToString(value) {\n  return ObjectToString(value) === '[object WeakMap]';\n}\nisWeakMapToString.working = (\n  typeof WeakMap !== 'undefined' &&\n  isWeakMapToString(new WeakMap())\n);\nfunction isWeakMap(value) {\n  if (typeof WeakMap === 'undefined') {\n    return false;\n  }\n\n  return isWeakMapToString.working\n    ? isWeakMapToString(value)\n    : value instanceof WeakMap;\n}\nexports.isWeakMap = isWeakMap;\n\nfunction isWeakSetToString(value) {\n  return ObjectToString(value) === '[object WeakSet]';\n}\nisWeakSetToString.working = (\n  typeof WeakSet !== 'undefined' &&\n  isWeakSetToString(new WeakSet())\n);\nfunction isWeakSet(value) {\n  return isWeakSetToString(value);\n}\nexports.isWeakSet = isWeakSet;\n\nfunction isArrayBufferToString(value) {\n  return ObjectToString(value) === '[object ArrayBuffer]';\n}\nisArrayBufferToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  isArrayBufferToString(new ArrayBuffer())\n);\nfunction isArrayBuffer(value) {\n  if (typeof ArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  return isArrayBufferToString.working\n    ? isArrayBufferToString(value)\n    : value instanceof ArrayBuffer;\n}\nexports.isArrayBuffer = isArrayBuffer;\n\nfunction isDataViewToString(value) {\n  return ObjectToString(value) === '[object DataView]';\n}\nisDataViewToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  typeof DataView !== 'undefined' &&\n  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))\n);\nfunction isDataView(value) {\n  if (typeof DataView === 'undefined') {\n    return false;\n  }\n\n  return isDataViewToString.working\n    ? isDataViewToString(value)\n    : value instanceof DataView;\n}\nexports.isDataView = isDataView;\n\n// Store a copy of SharedArrayBuffer in case it's deleted elsewhere\nvar SharedArrayBufferCopy = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : undefined;\nfunction isSharedArrayBufferToString(value) {\n  return ObjectToString(value) === '[object SharedArrayBuffer]';\n}\nfunction isSharedArrayBuffer(value) {\n  if (typeof SharedArrayBufferCopy === 'undefined') {\n    return false;\n  }\n\n  if (typeof isSharedArrayBufferToString.working === 'undefined') {\n    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());\n  }\n\n  return isSharedArrayBufferToString.working\n    ? isSharedArrayBufferToString(value)\n    : value instanceof SharedArrayBufferCopy;\n}\nexports.isSharedArrayBuffer = isSharedArrayBuffer;\n\nfunction isAsyncFunction(value) {\n  return ObjectToString(value) === '[object AsyncFunction]';\n}\nexports.isAsyncFunction = isAsyncFunction;\n\nfunction isMapIterator(value) {\n  return ObjectToString(value) === '[object Map Iterator]';\n}\nexports.isMapIterator = isMapIterator;\n\nfunction isSetIterator(value) {\n  return ObjectToString(value) === '[object Set Iterator]';\n}\nexports.isSetIterator = isSetIterator;\n\nfunction isGeneratorObject(value) {\n  return ObjectToString(value) === '[object Generator]';\n}\nexports.isGeneratorObject = isGeneratorObject;\n\nfunction isWebAssemblyCompiledModule(value) {\n  return ObjectToString(value) === '[object WebAssembly.Module]';\n}\nexports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\n\nfunction isNumberObject(value) {\n  return checkBoxedPrimitive(value, numberValue);\n}\nexports.isNumberObject = isNumberObject;\n\nfunction isStringObject(value) {\n  return checkBoxedPrimitive(value, stringValue);\n}\nexports.isStringObject = isStringObject;\n\nfunction isBooleanObject(value) {\n  return checkBoxedPrimitive(value, booleanValue);\n}\nexports.isBooleanObject = isBooleanObject;\n\nfunction isBigIntObject(value) {\n  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);\n}\nexports.isBigIntObject = isBigIntObject;\n\nfunction isSymbolObject(value) {\n  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);\n}\nexports.isSymbolObject = isSymbolObject;\n\nfunction isBoxedPrimitive(value) {\n  return (\n    isNumberObject(value) ||\n    isStringObject(value) ||\n    isBooleanObject(value) ||\n    isBigIntObject(value) ||\n    isSymbolObject(value)\n  );\n}\nexports.isBoxedPrimitive = isBoxedPrimitive;\n\nfunction isAnyArrayBuffer(value) {\n  return typeof Uint8Array !== 'undefined' && (\n    isArrayBuffer(value) ||\n    isSharedArrayBuffer(value)\n  );\n}\nexports.isAnyArrayBuffer = isAnyArrayBuffer;\n\n['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {\n  Object.defineProperty(exports, method, {\n    enumerable: false,\n    value: function() {\n      throw new Error(method + ' is not supported in userland');\n    }\n  });\n});\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnvRegex = /^$/;\n\nif (process.env.NODE_DEBUG) {\n  var debugEnv = process.env.NODE_DEBUG;\n  debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&')\n    .replace(/\\*/g, '.*')\n    .replace(/,/g, '$|^')\n    .toUpperCase();\n  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');\n}\nexports.debuglog = function(set) {\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (debugEnvRegex.test(set)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexports.types = require('./support/types');\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\nexports.types.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\nexports.types.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\nexports.types.isNativeError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },\n            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar gOPD = require('es-abstract/helpers/getOwnPropertyDescriptor');\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tif (typeof g[typedArray] === 'function') {\n\t\t\tvar arr = new g[typedArray]();\n\t\t\tif (Symbol.toStringTag in arr) {\n\t\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\t\tif (!descriptor) {\n\t\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t\t}\n\t\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t\t}\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar foundName = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!foundName) {\n\t\t\ttry {\n\t\t\t\tvar name = getter.call(value);\n\t\t\t\tif (name === typedArray) {\n\t\t\t\t\tfoundName = name;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t}\n\t});\n\treturn foundName;\n};\n\nvar isTypedArray = require('is-typed-array');\n\nmodule.exports = function whichTypedArray(value) {\n\tif (!isTypedArray(value)) { return false; }\n\tif (!hasToStringTag || !(Symbol.toStringTag in value)) { return $slice($toString(value), 8, -1); }\n\treturn tryTypedArrays(value);\n};\n","'use strict';\n\nvar possibleNames = [\n\t'BigInt64Array',\n\t'BigUint64Array',\n\t'Float32Array',\n\t'Float64Array',\n\t'Int16Array',\n\t'Int32Array',\n\t'Int8Array',\n\t'Uint16Array',\n\t'Uint32Array',\n\t'Uint8Array',\n\t'Uint8ClampedArray'\n];\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\n\nmodule.exports = function availableTypedArrays() {\n\tvar out = [];\n\tfor (var i = 0; i < possibleNames.length; i++) {\n\t\tif (typeof g[possibleNames[i]] === 'function') {\n\t\t\tout[out.length] = possibleNames[i];\n\t\t}\n\t}\n\treturn out;\n};\n"],"names":["isCallable","require","toStr","Object","prototype","toString","hasOwnProperty","forEachArray","array","iterator","receiver","i","len","length","call","forEachString","string","charAt","forEachObject","object","k","module","exports","list","thisArg","TypeError","arguments","Zlib","Huffman","Util","CRC32","DEFLATE","RESERVED","opt_params","this","files","comment","password","Zip","CompressionMethod","STORE","OperatingSystem","MSDOS","UNIX","MACINTOSH","Flags","ENCRYPT","DESCRIPTOR","UTF8","FileHeaderSignature","LocalFileHeaderSignature","CentralDirectorySignature","addFile","input","compressed","size","crc32","Array","Uint8Array","calc","deflateWithOption","Error","push","buffer","option","encrypted","setPassword","compress","file","output","op1","op2","op3","endOfCentralDirectorySize","offset","flags","compressionMethod","date","plainSize","filenameLength","extraFieldLength","commentLength","filename","extraField","tmp","key","il","j","jl","localFileSize","centralDirectorySize","createEncryptionKey","set","encode","Math","random","needVersion","Date","getMinutes","getSeconds","getHours","getMonth","getDate","getFullYear","RawDeflate","getByte","n","updateKeys","single","Uint32Array","buildHuffmanTable","lengths","table","bitLength","code","skip","reversed","rtemp","value","listSize","maxCodeLength","minCodeLength","Number","POSITIVE_INFINITY","RawInflate","blocks","bufferSize","totalpos","ip","bitsbuf","bitsbuflen","op","bfinal","bufferType","BufferType","ADAPTIVE","resize","BLOCK","MaxBackwardLength","MaxCopyLength","decompress","parseBlock","concatBufferBlock","concatBufferDynamic","Order","Uint16Array","LengthCodeTable","LengthExtraTable","DistCodeTable","DistExtraTable","FixedLiteralLengthTable","FixedDistanceTable","hdr","readBits","parseUncompressedBlock","parseFixedHuffmanBlock","parseDynamicHuffmanBlock","octet","readCodeByTable","codeWithLength","codeLength","inputLength","codeTable","preCopy","olength","subarray","expandBufferBlock","expandBufferAdaptive","fixRatio","decodeHuffmanAdaptive","decodeHuffmanBlock","codeLengthsTable","litlenTable","distTable","lengthTable","prev","repeat","hlit","hdist","hclen","codeLengths","litlen","dist","currentLitlenTable","ti","codeDist","lengthCodeTable","lengthExtraTable","distCodeTable","distExtraTable","opt_param","backward","newSize","maxInflateSize","ratio","addRatio","block","pos","limit","RawInflateStream","opt_buffersize","ZLIB_STREAM_RAW_INFLATE_BUFFER_SIZE","blockLength","sp","status","Status","INITIALIZED","ip_","bitsbuflen_","bitsbuf_","BlockType","UNCOMPRESSED","FIXED","DYNAMIC","BLOCK_HEADER_START","BLOCK_HEADER_END","BLOCK_BODY_START","BLOCK_BODY_END","DECODE_BLOCK_START","DECODE_BLOCK_END","newInput","stop","readBlockHeader","currentBlockType","readUncompressedBlockHeader","decodeHuffman","concatBuffer","save_","restore_","expandBuffer","bits","e","Inflate","cmf","flg","rawinflate","verify","method","Adler32","InflateStream","readHeader","Gunzip","member","decompressed","getMembers","slice","decodeMember","concatMember","isize","inflated","inflen","c","ci","str","mtime","GunzipMember","id1","id2","cm","xfl","os","Gzip","FlagsMask","FEXTRA","xlen","decodeSubField","FNAME","String","fromCharCode","name","join","FCOMMENT","FHCRC","crc16","data","p","getName","getData","getMtime","deflateOptions","DefaultBufferSize","rawdeflate","now","UNKNOWN","charCodeAt","byteLength","FAT","AMIGA","VMS","VM_CMS","ATARI_TOS","HPFS","Z_SYSTEM","CP_M","TOPS_20","NTFS","QDOS","ACORN_RISCOS","FTEXT","Heap","getParent","index","getChild","current","parent","swap","heap","pop","compressionType","CompressionType","lazy","freqsLitLen","freqsDist","NONE","Lz77MinLength","Lz77MaxLength","WindowSize","MaxCodeLength","HUFMAX","FixedHuffmanTable","blockArray","position","makeNocompressBlock","makeFixedHuffmanBlock","makeDynamicHuffmanBlock","isFinalBlock","btype","nlen","stream","BitStream","writeBits","lz77","fixedHuffman","finish","litLenLengths","litLenCodes","distLengths","distCodes","treeSymbols","treeLengths","treeCodes","bitlen","hclenOrder","transLengths","getLengths_","getCodesFromLengths_","getTreeSymbols_","freqs","codes","dynamicHuffman","dataArray","litLen","literal","apply","Lz77Match","backwardDistance","getDistanceCode_","r","toLz77Array","codeArray","matchKey","matchList","longestMatch","prevMatch","windowSize","lz77buf","skipLength","writeMatch","match","lz77Array","shift","searchLongestMatch_","currentMatch","matchLength","l","matchMax","dl","permatch","litlenLengths","runLength","nResult","rpt","src","result","nodes","values","nSymbols","reversePackageMerge_","symbols","t","weight","next","minimumCost","flag","type","currentPosition","excess","half","takePackage","x","m","count","startCode","Unzip","eocdrOffset","numberOfThisDisk","startDisk","totalEntriesThisDisk","totalEntries","centralDirectoryOffset","fileHeaderList","filenameToIndex","FileHeader","version","compression","time","compressedSize","fileNameLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","relativeOffset","parse","LocalFileHeader","searchEndOfCentralDirectoryRecord","parseEndOfCentralDirectoryRecord","parseFileHeader","fileHeader","filelist","filetable","getFileData","localFileHeader","createDecryptionKey","decode","getFilenames","filenameList","stringToByteArray","split","update","adler","tlen","s1","s2","OptimizationParameter","bufferPosition","bitindex","DefaultBlockSize","oldbuf","number","reverse","ReverseTable","rev32_","s","crc","Table","num","Table_","Deflate","rawDeflate","prop","rawDeflateOption","flevel","LOG2E","log","fdict","fs","fsOpen","fsRead","crossFetch","process","versions","node","fetch","BrowserLocalFile","blob","undefined","arrayBuffer","util","promisify","open","read","NodeLocalFile","args","path","Buffer","alloc","fd","close","error","b","byteOffset","isNode$2","RemoteFile","url","config","includes","replace","startsWith","resolveToken","token","Promise","resolve","ceil","headers","rangeString","oauthToken","navigator","vendor","indexOf","test","userAgent","isChrome","isAmazonV4Signed","addParameter","apiKey","redirect","mode","response","console","err","statusText","paramSeparator","ThrottledFile","rateLimiter","fulfill","reject","limiter","f","RateLimiter","wait","isCalled","calls","fn","self","caller","setTimeout","bind","BufferedFile","bufferStart","bufferLength","start","end","bufferEnd","sliceEnd","sliceStart","l1","a1","l2","a2","concatBuffers","buffer1","buffer2","BinaryParser","dataView","littleEndian","view","VPointer","available","remLength","hasNext","retValue","getUint8","getShort","getInt16","getUShort","getUint16","getInt","getInt32","getUInt","getUint32","getLong","getString","getFixedLengthString","getFixedLengthTrimmedString","getFloat","getFloat32","getDouble","getFloat64","getVPointer","isLessThan","vp","isGreaterThan","print","MatrixZoomData","chr1","chr2","zoom","unit","binSize","region1","region2","chr","sameChr","binsize","blockBinCount","blockColumnCount","x1","x2","y1","y2","col1","floor","col2","row1","row2","blockNumbers","row","column","blockNumber","getBlockNumbersV8","binX1","binX2","binY1","binY2","translatedLowerPAD","translatedHigherPAD","translatedNearerDepth","log2","abs","sqrt","translatedFurtherDepth","nearerDepth","min","furtherDepth","max","depth","pad","block_number","getBlockNumbersV9","dis","zd","zoomIndex","sumCounts","occupiedCellCount","stdDev","percent95","nBlocks","blockIndex","StaticBlockIndex","avgCount","averageCount","filePosition","Matrix","zoomDataList","bpZoomData","fragZoomData","zdArray","chrIdx1","chrIdx2","chromosomes","DataView","c1","c2","nResolutions","zdList","parseMatrixZoomData","ContactRecord","bin1","bin2","counts","LRU","map","Map","item","get","delete","val","has","first","clear","keys","NormalizationVector","nValues","dataType","cache","adjustedStart","adjustedEnd","startPosition","sizeInBytes","parser","getKey","chrIdx","resolution","isNode$3","GoogleRateLimiter","HicFile","loadFragData","fragmentSitesCache","normVectorCache","normalizationTypes","matrixCache","blockCache","BlockCache","remote","remoteFile","initialized","readHeaderAndFooter","binaryParser","magic","init","meta","footerPosition","readFooter","bodyPostion","masterIndex","reduce","currentValue","MAX_VALUE","remainingSize","genomeId","normVectorIndexPosition","normVectorIndexSize","attributes","nAttributes","chromosomeIndexMap","nChrs","toLowerCase","wholeGenomeChromosome","wholeGenomeResolution","round","bpResolutions","nBpResolutions","fragResolutions","nFragResolutions","chrAliasTable","chrName","substr","nBytes","nEntries","miSize","expectedValueVectors","normExpectedValueVectorsPosition","maxSize","entry","readMatrix","matrix","idx","parseMatrix","normalization","units","allRecords","idx1","getFileChrName","idx2","getBlocks","contactRecords","nvX1","nvX2","nvY1","nvY2","normVector1","normVector2","isNorm","getNormalizationVector","nv1","nv2","getValues","records","rec","y","nvnv","isNaN","getMatrix","getZoomData","msg","getBlockNumbers","blockNumbersToQuery","promises","readBlock","all","newBlocks","concat","getBlockIndexEntry","inflate","plain","nRecords","binX","binY","binXOffset","binYOffset","useFloatContact","useIntXPos","useIntYPos","rowCount","dy","colCount","dx","nPts","w","Block","isInteger","canonicalName","getNormalizationVectorKey","getNormVectorIndex","normVectorIndex","nv","nvi","URL","encodeURIComponent","hostname","pathname","nviResponse","text","nviArray","decodeURIComponent","range","parseInt","readNormVectorIndex","readNormExpectedValuesAndNormVectorIndex","normalizationVectorIndexRange","parseNormVectorEntry","processEntries","byteCount","sizeEstimate","nviStart","skipExpectedValues","normalizedExpectedValueVectors","parseNext","chunkSize","p0","nChrScaleFactors","resolutionArray","chrAlias","zoomData","Straw","hicFile","getMetaData","getContactRecords","getNormalizationOptions","printIndexStats","create","ctor","superCtor","super_","constructor","enumerable","writable","configurable","TempCtor","hasToStringTag","$toString","callBound","isStandardArguments","Symbol","toStringTag","isLegacyArguments","callee","supportsStandardArguments","GeneratorFunction","fnToStr","Function","isFnRegex","getProto","getPrototypeOf","generatorFunc","getGeneratorFunc","forEach","availableTypedArrays","g","globalThis","global","typedArrays","$indexOf","$slice","toStrTags","gOPD","typedArray","arr","proto","descriptor","superProto","tag","anyTrue","getter","tryTypedArrays","window","getGlobal","Headers","Request","Response","arg","copy","fill","readUInt8","isArgumentsObject","isGeneratorFunction","whichTypedArray","isTypedArray","uncurryThis","BigIntSupported","BigInt","SymbolSupported","ObjectToString","numberValue","valueOf","stringValue","booleanValue","Boolean","bigIntValue","symbolValue","checkBoxedPrimitive","prototypeValueOf","isMapToString","isSetToString","isWeakMapToString","isWeakSetToString","isArrayBufferToString","isArrayBuffer","ArrayBuffer","working","isDataViewToString","isDataView","isPromise","then","catch","isArrayBufferView","isView","isUint8Array","isUint8ClampedArray","isUint16Array","isUint32Array","isInt8Array","isInt16Array","isInt32Array","isFloat32Array","isFloat64Array","isBigInt64Array","isBigUint64Array","isMap","Set","isSet","WeakMap","isWeakMap","WeakSet","isWeakSet","SharedArrayBufferCopy","SharedArrayBuffer","isSharedArrayBufferToString","isSharedArrayBuffer","isNumberObject","isStringObject","isBooleanObject","isBigIntObject","isSymbolObject","isAsyncFunction","isMapIterator","isSetIterator","isGeneratorObject","isWebAssemblyCompiledModule","isBoxedPrimitive","isAnyArrayBuffer","defineProperty","getOwnPropertyDescriptors","obj","descriptors","getOwnPropertyDescriptor","formatRegExp","format","isString","objects","inspect","JSON","stringify","_","isNull","isObject","deprecate","noDeprecation","warned","throwDeprecation","traceDeprecation","trace","debugs","debugEnvRegex","NODE_DEBUG","debugEnv","toUpperCase","RegExp","opts","ctx","seen","stylize","stylizeNoColor","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","isFunction","ret","primitive","simple","isNumber","formatPrimitive","visibleKeys","hash","arrayToHash","getOwnPropertyNames","isError","formatError","isRegExp","isDate","base","braces","isArray","toUTCString","formatProperty","formatArray","cur","numLinesEst","reduceToSingleString","desc","line","ar","re","objectToString","d","o","debuglog","pid","types","isNullOrUndefined","isSymbol","isNativeError","isPrimitive","isBuffer","months","timestamp","inherits","origin","add","kCustomPromisifiedSymbol","callbackifyOnRejected","reason","cb","newReason","original","promiseResolve","promiseReject","promise","setPrototypeOf","defineProperties","custom","callbackify","callbackified","maybeCb","nextTick","rej","foundName","possibleNames","out"],"sourceRoot":""}