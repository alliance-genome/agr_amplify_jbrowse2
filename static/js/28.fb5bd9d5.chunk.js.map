{"version":3,"sources":["../../../node_modules/@material-ui/icons/KeyboardArrowLeft.js","../../../node_modules/@material-ui/icons/KeyboardArrowRight.js","../../../plugins/dotplot-view/src/DotplotView/components/ImportForm.tsx","../../../plugins/dotplot-view/src/DotplotView/components/Controls.tsx","../../../plugins/dotplot-view/src/DotplotView/components/util.ts","../../../plugins/dotplot-view/src/DotplotView/components/Axes.tsx","../../../plugins/dotplot-view/src/DotplotView/components/DotplotView.tsx","../../../node_modules/@material-ui/icons/KeyboardArrowUp.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","useStyles","makeStyles","theme","importFormContainer","padding","spacing","margin","DotplotImportForm","observer","model","classes","session","getSession","assemblyNames","assemblyManager","useState","trackData","setTrackData","selected1","setSelected1","selected2","setSelected2","selected","error","setError","assemblyError","length","map","a","get","filter","f","join","displayError","Container","className","ErrorMessage","Grid","container","justifyContent","alignItems","style","width","item","Paper","textAlign","AssemblySelector","onChange","val","href","name","description","location","setLocation","loc","Button","onClick","isSessionWithAddTracks","setViews","bpPerPx","offsetPx","setAssemblyNames","fileName","uri","slice","lastIndexOf","trackId","Date","now","addTrackConf","type","adapter","pafLocation","toggleTrack","e","console","disabled","variant","color","iconButton","controls","overflow","display","background","whiteSpace","boxSizing","border","DotplotControls","IconButton","hview","scroll","title","vview","zoomOutButton","zoomInButton","activateTrackSelector","squareView","locstr","px","view","pxToBp","refName","start","offset","oob","coord","Math","floor","toLocaleString","getBlockLabelKeysToHide","blocks","viewOffsetPx","blockLabelKeysToHide","sortedBlocks","sort","b","alen","end","positions","Array","round","forEach","key","y","labelBounds","max","some","Boolean","push","fill","chooseGridPitch","scale","minMajorPitchPx","minMinorPitchPx","minMajorPitchBp","abs","majorMagnitude","parseInt","Number","toExponential","split","majorPitch","majorPitchPx","minorPitch","makeTicks","regions","emitMajor","emitMinor","ticks","gridPitch","iterPitch","i","region","index","minBase","maxBase","base","ceil","vtext","gridColumn","gridRow","pointerEvents","userSelect","htext","majorTickLabel","fontSize","majorTick","stroke","minorTick","HorizontalAxis","viewWidth","borderY","htextRotation","hide","dynamicBlocks","contentBlocks","staticBlocks","height","includes","xoff","transform","JSON","stringify","x","dominantBaseline","textAnchor","tick","bpToPx","x1","x2","y1","y2","strokeWidth","VerticalAxis","borderX","viewHeight","vtextRotation","spacer","root","position","marginBottom","overlay","zIndex","cursor","content","popover","maxWidth","wordBreak","children","hblocks","vblocks","htop","displayedRegionsTotalPx","hbottom","vtop","vbottom","getOffset","rect","left","top","DotplotViewInternal","mousecurrClient","setMouseCurrClient","mousedownClient","setMouseDownClient","mouseOvered","setMouseOvered","mouseupClient","setMouseUpClient","ref","useRef","distanceX","distanceY","lref","rref","timeout","delta","scheduled","blank","svg","current","getBoundingClientRect","rrect","lrect","mousedown","mousecurr","mouseup","mouserect","useEffect","onWheel","origEvent","event","normalizeWheel","preventDefault","ctrlKey","pixelY","setScaleFactor","clearTimeout","setTimeout","transaction","zoomTo","pixelX","window","requestAnimationFrame","curr","addEventListener","removeEventListener","globalMouseMove","clientX","clientY","cleanup","globalMouseUp","undefined","Controls","onMouseLeave","onMouseEnter","scaleFactor","role","onMouseDown","button","min","tracks","track","displays","RenderingComponent","getConf","open","onMenuItemClick","_","callback","onClose","anchorReference","anchorPosition","menuItems","label","zoomIn","onDotplotView","onDrag","n","setHeight","borderTop","DotplotView","initialized","loading","ImportForm","LinearProgress"],"mappings":"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","file":"static/js/28.fb5bd9d5.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z\"\n}), 'KeyboardArrowLeft');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\n\nexports.default = _default;","import React, { useState } from 'react'\nimport { Button, Paper, Container, Grid, makeStyles } from '@material-ui/core'\nimport { FileSelector } from '@jbrowse/core/ui'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport { observer } from 'mobx-react'\nimport { getSession, isSessionWithAddTracks } from '@jbrowse/core/util'\nimport ErrorMessage from '@jbrowse/core/ui/ErrorMessage'\nimport AssemblySelector from '@jbrowse/core/ui/AssemblySelector'\nimport { DotplotViewModel } from '../model'\n\nconst useStyles = makeStyles(theme => ({\n  importFormContainer: {\n    padding: theme.spacing(4),\n    margin: '0 auto',\n  },\n}))\n\nconst DotplotImportForm = observer(({ model }: { model: DotplotViewModel }) => {\n  const classes = useStyles()\n  const session = getSession(model)\n  const { assemblyNames, assemblyManager } = session\n  const [trackData, setTrackData] = useState<FileLocation>()\n  const [selected1, setSelected1] = useState(assemblyNames[0])\n  const [selected2, setSelected2] = useState(assemblyNames[0])\n  const selected = [selected1, selected2]\n  const [error, setError] = useState<unknown>()\n\n  const assemblyError = assemblyNames.length\n    ? selected\n        .map(a => assemblyManager.get(a)?.error)\n        .filter(f => !!f)\n        .join(', ')\n    : 'No configured assemblies'\n\n  function onOpenClick() {\n    try {\n      if (!isSessionWithAddTracks(session)) {\n        return\n      }\n      model.setViews([\n        { bpPerPx: 0.1, offsetPx: 0 },\n        { bpPerPx: 0.1, offsetPx: 0 },\n      ])\n      model.setAssemblyNames([selected1, selected2])\n\n      if (trackData) {\n        const fileName =\n          trackData && 'uri' in trackData && trackData.uri\n            ? trackData.uri.slice(trackData.uri.lastIndexOf('/') + 1)\n            : 'MyTrack'\n\n        const trackId = `${fileName}-${Date.now()}`\n\n        session.addTrackConf({\n          trackId: trackId,\n          name: fileName,\n          assemblyNames: selected,\n          type: 'SyntenyTrack',\n          adapter: {\n            type: 'PAFAdapter',\n            pafLocation: trackData,\n            assemblyNames: selected,\n          },\n        })\n        model.toggleTrack(trackId)\n      }\n    } catch (e) {\n      console.error(e)\n      setError(e)\n    }\n  }\n\n  // this is a combination of any displayed error message we have\n  const displayError = error || assemblyError\n  return (\n    <Container className={classes.importFormContainer}>\n      {displayError ? <ErrorMessage error={displayError} /> : null}\n      <Grid\n        container\n        spacing={1}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        style={{ width: '50%', margin: '0 auto' }}\n      >\n        <Grid item>\n          <Paper style={{ padding: 12 }}>\n            <p style={{ textAlign: 'center' }}>\n              Select assemblies for dotplot view\n            </p>\n            <AssemblySelector\n              selected={selected1}\n              onChange={val => setSelected1(val)}\n              session={session}\n            />\n            <AssemblySelector\n              selected={selected2}\n              onChange={val => setSelected2(val)}\n              session={session}\n            />\n          </Paper>\n\n          <Paper style={{ padding: 12 }}>\n            <p style={{ textAlign: 'center' }}>\n              <b>Optional</b>: Add a PAF{' '}\n              <a href=\"https://github.com/lh3/miniasm/blob/master/PAF.md\">\n                (pairwise mapping format)\n              </a>{' '}\n              file for the dotplot view. Note that the first assembly should be\n              the left column of the PAF and the second assembly should be the\n              right column. PAF-like files from MashMap (.out) are also allowed\n            </p>\n            <Grid container justifyContent=\"center\">\n              <Grid item>\n                <FileSelector\n                  name=\"URL\"\n                  description=\"\"\n                  location={trackData}\n                  setLocation={loc => setTrackData(loc)}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid item>\n          <Button\n            data-testid=\"submitDotplot\"\n            onClick={onOpenClick}\n            // only disable button on assemblyError. for other types of errors\n            // in the useState can retry\n            disabled={!!assemblyError}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Open\n          </Button>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n})\n\nexport default DotplotImportForm\n","import React from 'react'\n\nimport { IconButton, makeStyles } from '@material-ui/core'\n\n// icons\nimport ZoomOut from '@material-ui/icons/ZoomOut'\nimport ZoomIn from '@material-ui/icons/ZoomIn'\nimport ArrowUp from '@material-ui/icons/KeyboardArrowUp'\nimport ArrowDown from '@material-ui/icons/KeyboardArrowDown'\nimport ArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport ArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport CropFreeIcon from '@material-ui/icons/CropFree'\n\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\n\nimport { observer } from 'mobx-react'\nimport { DotplotViewModel } from '../model'\n\nconst useStyles = makeStyles({\n  iconButton: {\n    margin: 5,\n  },\n  controls: {\n    overflow: 'hidden',\n    display: 'flex',\n    background: 'white',\n    whiteSpace: 'nowrap',\n    boxSizing: 'border-box',\n    border: '1px solid #a2a2a2',\n  },\n})\n\nconst DotplotControls = observer(({ model }: { model: DotplotViewModel }) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.controls}>\n      <IconButton\n        onClick={() => {\n          model.hview.scroll(-100)\n        }}\n        className={classes.iconButton}\n        title=\"left\"\n        color=\"secondary\"\n      >\n        <ArrowLeft />\n      </IconButton>\n\n      <IconButton\n        onClick={() => {\n          model.hview.scroll(100)\n        }}\n        className={classes.iconButton}\n        title=\"left\"\n        color=\"secondary\"\n      >\n        <ArrowRight />\n      </IconButton>\n      <IconButton\n        onClick={() => {\n          model.vview.scroll(100)\n        }}\n        className={classes.iconButton}\n        title=\"left\"\n        color=\"secondary\"\n      >\n        <ArrowDown />\n      </IconButton>\n      <IconButton\n        onClick={() => {\n          model.vview.scroll(-100)\n        }}\n        className={classes.iconButton}\n        title=\"left\"\n        color=\"secondary\"\n      >\n        <ArrowUp />\n      </IconButton>\n      <IconButton\n        onClick={model.zoomOutButton}\n        className={classes.iconButton}\n        color=\"secondary\"\n      >\n        <ZoomOut />\n      </IconButton>\n\n      <IconButton\n        onClick={model.zoomInButton}\n        className={classes.iconButton}\n        title=\"zoom in\"\n        color=\"secondary\"\n      >\n        <ZoomIn />\n      </IconButton>\n\n      <IconButton\n        onClick={model.activateTrackSelector}\n        className={classes.iconButton}\n        title=\"Open track selector\"\n        data-testid=\"circular_track_select\"\n        color=\"secondary\"\n      >\n        <TrackSelectorIcon />\n      </IconButton>\n\n      <IconButton\n        onClick={model.squareView}\n        className={classes.iconButton}\n        title=\"Square view\"\n        color=\"secondary\"\n      >\n        <CropFreeIcon />\n      </IconButton>\n    </div>\n  )\n})\n\nexport default DotplotControls\n","import { BaseBlock } from '@jbrowse/core/util/blockTypes'\nimport { Dotplot1DViewModel } from '../model'\n\nexport function locstr(px: number, view: Dotplot1DViewModel) {\n  const { refName, start, offset, oob } = view.pxToBp(px)\n  const coord = Math.floor(start + offset)\n  return oob ? 'out of bounds' : `${refName}:${coord.toLocaleString('en-US')}`\n}\n\nexport function getBlockLabelKeysToHide(\n  blocks: BaseBlock[],\n  length: number,\n  viewOffsetPx: number,\n) {\n  const blockLabelKeysToHide: string[] = []\n  const sortedBlocks = blocks.slice(0).sort((a, b) => {\n    const alen = a.end - a.start\n    const blen = b.end - b.start\n    return blen - alen\n  })\n  const positions = new Array(Math.round(length))\n  sortedBlocks.forEach(({ key, offsetPx }) => {\n    const y = Math.round(length - offsetPx + viewOffsetPx)\n    const labelBounds = [Math.max(y - 12, 0), y]\n    if (y === 0 || positions.slice(...labelBounds).some(Boolean)) {\n      blockLabelKeysToHide.push(key)\n    } else {\n      positions.fill(true, ...labelBounds)\n    }\n  })\n  return blockLabelKeysToHide\n}\n/**\n * Given a scale ( bp/px ) and minimum distances (px) between major and minor\n * gridlines, return an object like `{ majorPitch: bp, minorPitch: bp }` giving\n * the gridline pitches to use.\n */\nexport function chooseGridPitch(\n  scale: number,\n  minMajorPitchPx: number,\n  minMinorPitchPx: number,\n) {\n  scale = Math.abs(scale)\n  const minMajorPitchBp = minMajorPitchPx * scale\n  const majorMagnitude = parseInt(\n    Number(minMajorPitchBp).toExponential().split(/e/i)[1],\n    10,\n  )\n\n  let majorPitch = 10 ** majorMagnitude\n  while (majorPitch < minMajorPitchBp) {\n    majorPitch *= 2\n    if (majorPitch >= minMajorPitchBp) {\n      break\n    }\n    majorPitch *= 2.5\n  }\n\n  majorPitch = Math.max(majorPitch, 5)\n\n  const majorPitchPx = majorPitch / scale\n\n  let minorPitch = 0\n  if (!(majorPitch % 10) && majorPitchPx / 10 >= minMinorPitchPx) {\n    minorPitch = majorPitch / 10\n  } else if (!(majorPitch % 5) && majorPitchPx / 5 >= minMinorPitchPx) {\n    minorPitch = majorPitch / 5\n  } else if (!(majorPitch % 2) && majorPitchPx / 2 >= minMinorPitchPx) {\n    minorPitch = majorPitch / 2\n  }\n\n  return { majorPitch, minorPitch }\n}\n\nexport function makeTicks(\n  regions: BaseBlock[],\n  bpPerPx: number,\n  emitMajor = true,\n  emitMinor = true,\n) {\n  const ticks = []\n  const gridPitch = chooseGridPitch(bpPerPx, 60, 15)\n  const iterPitch = gridPitch.minorPitch || gridPitch.majorPitch\n  for (let i = 0; i < regions.length; i++) {\n    const region = regions[i]\n    const { start, end, refName } = region\n    let index = 0\n\n    const minBase = start\n    const maxBase = end\n    for (\n      let base = Math.ceil(minBase / iterPitch) * iterPitch;\n      base < maxBase;\n      base += iterPitch\n    ) {\n      if (emitMinor && base % gridPitch.majorPitch) {\n        ticks.push({ type: 'minor', base: base - 1, index, refName })\n        index += 1\n      } else if (\n        emitMajor &&\n        Math.abs(base - region.start) > gridPitch.minorPitch\n      ) {\n        ticks.push({ type: 'major', base: base - 1, index, refName })\n        index += 1\n      }\n    }\n  }\n  return ticks\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core'\nimport { observer } from 'mobx-react'\nimport { getBlockLabelKeysToHide, makeTicks } from './util'\nimport { DotplotViewModel } from '../model'\n\nconst useStyles = makeStyles(() => ({\n  vtext: {\n    gridColumn: '1/2',\n    gridRow: '1/2',\n    pointerEvents: 'none',\n    userSelect: 'none',\n  },\n  htext: {\n    gridColumn: '2/2',\n    gridRow: '2/2',\n    pointerEvents: 'none',\n    userSelect: 'none',\n  },\n  majorTickLabel: {\n    fontSize: '11px',\n  },\n  majorTick: {\n    stroke: '#555',\n  },\n  minorTick: {\n    stroke: '#999',\n  },\n}))\n\nexport const HorizontalAxis = observer(\n  ({ model }: { model: DotplotViewModel }) => {\n    const classes = useStyles()\n    const { viewWidth, borderY, hview, htextRotation } = model\n    const hide = getBlockLabelKeysToHide(\n      hview.dynamicBlocks.contentBlocks,\n      viewWidth,\n      hview.offsetPx,\n    )\n    const ticks =\n      hview.staticBlocks.contentBlocks.length > 5\n        ? []\n        : makeTicks(hview.staticBlocks.contentBlocks, hview.bpPerPx)\n    return (\n      <svg width={viewWidth} height={borderY} className={classes.htext}>\n        {hview.dynamicBlocks.contentBlocks\n          .filter(region => !hide.includes(region.key))\n          .map(region => {\n            const x = region.offsetPx\n            const y = 0\n            const xoff = x - hview.offsetPx\n            return (\n              <text\n                transform={`rotate(${htextRotation},${xoff},${y})`}\n                key={JSON.stringify(region)}\n                x={xoff}\n                y={y + 1}\n                fill=\"#000000\"\n                dominantBaseline=\"hanging\"\n                textAnchor=\"end\"\n              >\n                {[\n                  region.refName,\n                  region.start !== 0 ? Math.floor(region.start) : '',\n                ]\n                  .filter(f => !!f)\n                  .join(':')}\n              </text>\n            )\n          })}\n        {ticks.map(tick => {\n          const x =\n            (hview.bpToPx({ refName: tick.refName, coord: tick.base }) || 0) -\n            hview.offsetPx\n          return (\n            <line\n              key={`line-${JSON.stringify(tick)}`}\n              x1={x}\n              x2={x}\n              y1={0}\n              y2={tick.type === 'major' ? 6 : 4}\n              strokeWidth={1}\n              stroke={tick.type === 'major' ? '#555' : '#999'}\n              className={\n                tick.type === 'major' ? classes.majorTick : classes.minorTick\n              }\n              data-bp={tick.base}\n            />\n          )\n        })}\n        {ticks\n          .filter(tick => tick.type === 'major')\n          .map(tick => {\n            const x =\n              (hview.bpToPx({ refName: tick.refName, coord: tick.base }) || 0) -\n              hview.offsetPx\n            const y = 0\n            return (\n              <text\n                x={x - 7}\n                y={y}\n                transform={`rotate(${htextRotation},${x},${y})`}\n                key={`text-${JSON.stringify(tick)}`}\n                style={{ fontSize: '11px' }}\n                className={classes.majorTickLabel}\n                dominantBaseline=\"middle\"\n                textAnchor=\"end\"\n              >\n                {(tick.base + 1).toLocaleString('en-US')}\n              </text>\n            )\n          })}\n      </svg>\n    )\n  },\n)\nexport const VerticalAxis = observer(\n  ({ model }: { model: DotplotViewModel }) => {\n    const classes = useStyles()\n    const { borderX, viewHeight, vview, vtextRotation } = model\n    const hide = getBlockLabelKeysToHide(\n      vview.dynamicBlocks.contentBlocks,\n      viewHeight,\n      vview.offsetPx,\n    )\n    const ticks =\n      vview.staticBlocks.contentBlocks.length > 5\n        ? []\n        : makeTicks(vview.staticBlocks.contentBlocks, vview.bpPerPx)\n    return (\n      <svg className={classes.vtext} width={borderX} height={viewHeight}>\n        {vview.dynamicBlocks.contentBlocks\n          .filter(region => !hide.includes(region.key))\n          .map(region => {\n            const y = region.offsetPx\n            const x = borderX\n            return (\n              <text\n                transform={`rotate(${vtextRotation},${x},${y})`}\n                key={JSON.stringify(region)}\n                x={x}\n                y={viewHeight - y + vview.offsetPx}\n                fill=\"#000000\"\n                textAnchor=\"end\"\n              >\n                {[\n                  region.refName,\n                  region.start !== 0 ? Math.floor(region.start) : '',\n                ]\n                  .filter(f => !!f)\n                  .join(':')}\n              </text>\n            )\n          })}\n        {ticks.map(tick => {\n          const y =\n            (vview.bpToPx({ refName: tick.refName, coord: tick.base }) || 0) -\n            vview.offsetPx\n          return (\n            <line\n              key={`line-${JSON.stringify(tick)}`}\n              y1={viewHeight - y}\n              y2={viewHeight - y}\n              x1={borderX}\n              x2={borderX - (tick.type === 'major' ? 6 : 4)}\n              strokeWidth={1}\n              stroke={tick.type === 'major' ? '#555' : '#999'}\n              className={\n                tick.type === 'major' ? classes.majorTick : classes.minorTick\n              }\n              data-bp={tick.base}\n            />\n          )\n        })}\n        {ticks\n          .filter(tick => tick.type === 'major')\n          .map(tick => {\n            const y =\n              (vview.bpToPx({ refName: tick.refName, coord: tick.base }) || 0) -\n              vview.offsetPx\n            return (\n              <text\n                y={viewHeight - y - 3}\n                x={borderX - 7}\n                key={`text-${JSON.stringify(tick)}`}\n                textAnchor=\"end\"\n                dominantBaseline=\"hanging\"\n                style={{ fontSize: '11px' }}\n                className={classes.majorTickLabel}\n              >\n                {(tick.base + 1).toLocaleString('en-US')}\n              </text>\n            )\n          })}\n      </svg>\n    )\n  },\n)\n","import React, { useState, useEffect, useRef } from 'react'\nimport { observer } from 'mobx-react'\nimport { transaction } from 'mobx'\nimport { makeStyles, LinearProgress } from '@material-ui/core'\nimport { getConf } from '@jbrowse/core/configuration'\nimport { Menu, ResizeHandle } from '@jbrowse/core/ui'\nimport normalizeWheel from 'normalize-wheel'\nimport { DotplotViewModel } from '../model'\nimport ImportForm from './ImportForm'\nimport Controls from './Controls'\nimport { locstr } from './util'\nimport { HorizontalAxis, VerticalAxis } from './Axes'\n\nconst useStyles = makeStyles(theme => ({\n  spacer: {\n    gridColumn: '1/2',\n    gridRow: '2/2',\n  },\n  root: {\n    position: 'relative',\n    marginBottom: theme.spacing(1),\n    overflow: 'hidden',\n  },\n\n  container: {\n    display: 'grid',\n    padding: 5,\n    position: 'relative',\n  },\n  overlay: {\n    pointerEvents: 'none',\n    overflow: 'hidden',\n    display: 'flex',\n    width: '100%',\n    gridRow: '1/2',\n    gridColumn: '2/2',\n    zIndex: 100, // needs to be below controls\n    '& path': {\n      cursor: 'crosshair',\n      fill: 'none',\n    },\n  },\n\n  content: {\n    gridColumn: '2/2',\n    gridRow: '1/2',\n  },\n\n  popover: {\n    background: '#fff',\n    maxWidth: 400,\n    wordBreak: 'break-all',\n    zIndex: 1000,\n    border: '1px solid black',\n    pointerEvents: 'none',\n    position: 'absolute',\n  },\n}))\n\ntype Coord = [number, number] | undefined\ntype Timer = ReturnType<typeof setTimeout>\ntype Rect = { left: number; top: number }\n\nconst Grid = observer(\n  ({\n    model,\n    children,\n    stroke = '#000a',\n  }: {\n    model: DotplotViewModel\n    children: React.ReactNode\n    stroke?: string\n  }) => {\n    const { viewWidth, viewHeight, hview, vview } = model\n    const hblocks = hview.dynamicBlocks.contentBlocks\n    const vblocks = vview.dynamicBlocks.contentBlocks\n    const htop = hview.displayedRegionsTotalPx - hview.offsetPx\n    const hbottom = hblocks[0]?.offsetPx - hview.offsetPx\n    const vtop = vview.displayedRegionsTotalPx - vview.offsetPx\n    const vbottom = vblocks[0]?.offsetPx - vview.offsetPx\n    return (\n      <svg\n        style={{ background: 'rgba(0,0,0,0.12)' }}\n        width={viewWidth}\n        height={viewHeight}\n      >\n        <rect\n          x={hbottom}\n          y={viewHeight - vtop}\n          width={htop - hbottom}\n          height={vtop - vbottom}\n          fill=\"#fff\"\n        />\n        <g>\n          {hblocks.map(region => {\n            const x = region.offsetPx - hview.offsetPx\n            return (\n              <line\n                key={JSON.stringify(region)}\n                x1={x}\n                y1={0}\n                x2={x}\n                y2={viewHeight}\n                stroke={stroke}\n              />\n            )\n          })}\n          {vblocks.map(region => {\n            const y = viewHeight - (region.offsetPx - vview.offsetPx)\n            return (\n              <line\n                key={JSON.stringify(region)}\n                x1={0}\n                y1={y}\n                x2={viewWidth}\n                y2={y}\n                stroke={stroke}\n              />\n            )\n          })}\n          <line x1={htop} y1={0} x2={htop} y2={viewHeight} stroke={stroke} />\n          <line\n            x1={0}\n            y1={viewHeight - vtop}\n            x2={viewWidth}\n            y2={viewHeight - vtop}\n            stroke={stroke}\n          />\n        </g>\n        {children}\n      </svg>\n    )\n  },\n)\n// produces offsetX/offsetY coordinates from a clientX and an element's\n// getBoundingClientRect\nfunction getOffset(coord: Coord, rect: Rect) {\n  return coord && ([coord[0] - rect.left, coord[1] - rect.top] as Coord)\n}\n\nconst DotplotViewInternal = observer(\n  ({ model }: { model: DotplotViewModel }) => {\n    const { hview, vview, viewHeight } = model\n    const classes = useStyles()\n    const [mousecurrClient, setMouseCurrClient] = useState<Coord>()\n    const [mousedownClient, setMouseDownClient] = useState<Coord>()\n    const [mouseOvered, setMouseOvered] = useState(false)\n    const [mouseupClient, setMouseUpClient] = useState<Coord>()\n    const ref = useRef<HTMLDivElement>(null)\n    const root = useRef<HTMLDivElement>(null)\n    const distanceX = useRef(0)\n    const distanceY = useRef(0)\n    const lref = useRef<HTMLDivElement>(null)\n    const rref = useRef<HTMLDivElement>(null)\n    const timeout = useRef<Timer>()\n    const delta = useRef(0)\n    const scheduled = useRef(false)\n    const blank = { left: 0, top: 0, width: 0, height: 0 }\n    const svg = ref.current?.getBoundingClientRect() || blank\n    const rrect = rref.current?.getBoundingClientRect() || blank\n    const lrect = lref.current?.getBoundingClientRect() || blank\n    const mousedown = getOffset(mousedownClient, svg)\n    const mousecurr = getOffset(mousecurrClient, svg)\n    const mouseup = getOffset(mouseupClient, svg)\n    const mouserect = mouseup || mousecurr\n\n    // use non-React wheel handler to properly prevent body scrolling\n    useEffect(() => {\n      function onWheel(origEvent: WheelEvent) {\n        const event = normalizeWheel(origEvent)\n        origEvent.preventDefault()\n        if (origEvent.ctrlKey === true) {\n          delta.current += event.pixelY / 500\n          model.vview.setScaleFactor(\n            delta.current < 0 ? 1 - delta.current : 1 / (1 + delta.current),\n          )\n          model.hview.setScaleFactor(\n            delta.current < 0 ? 1 - delta.current : 1 / (1 + delta.current),\n          )\n          if (timeout.current) {\n            clearTimeout(timeout.current)\n          }\n          timeout.current = setTimeout(() => {\n            transaction(() => {\n              model.hview.setScaleFactor(1)\n              model.vview.setScaleFactor(1)\n              model.hview.zoomTo(\n                delta.current > 0\n                  ? model.hview.bpPerPx * (1 + delta.current)\n                  : model.hview.bpPerPx / (1 - delta.current),\n              )\n              model.vview.zoomTo(\n                delta.current > 0\n                  ? model.vview.bpPerPx * (1 + delta.current)\n                  : model.vview.bpPerPx / (1 - delta.current),\n              )\n            })\n            delta.current = 0\n          }, 300)\n        } else {\n          distanceX.current += event.pixelX\n          distanceY.current -= event.pixelY\n          if (!scheduled.current) {\n            scheduled.current = true\n\n            window.requestAnimationFrame(() => {\n              transaction(() => {\n                model.hview.scroll(distanceX.current)\n                model.vview.scroll(distanceY.current)\n              })\n              scheduled.current = false\n              distanceX.current = 0\n              distanceY.current = 0\n            })\n          }\n        }\n      }\n      if (ref.current) {\n        const curr = ref.current\n        curr.addEventListener('wheel', onWheel)\n        return () => {\n          curr.removeEventListener('wheel', onWheel)\n        }\n      }\n      return () => {}\n    }, [model.hview, model.vview])\n\n    useEffect(() => {\n      function globalMouseMove(event: MouseEvent) {\n        setMouseCurrClient([event.clientX, event.clientY])\n      }\n\n      window.addEventListener('mousemove', globalMouseMove)\n      return () => {\n        window.removeEventListener('mousemove', globalMouseMove)\n      }\n    }, [])\n\n    // detect a mouseup after a mousedown was submitted, autoremoves mouseup\n    // once that single mouseup is set\n    useEffect(() => {\n      let cleanup = () => {}\n\n      function globalMouseUp(event: MouseEvent) {\n        if (\n          mousedown &&\n          mousecurr &&\n          Math.abs(mousedown[0] - mousecurr[0]) > 3 &&\n          Math.abs(mousedown[1] - mousecurr[1]) > 3\n        ) {\n          setMouseUpClient([event.clientX, event.clientY])\n        } else {\n          setMouseDownClient(undefined)\n        }\n      }\n\n      if (mousedown && !mouseup) {\n        window.addEventListener('mouseup', globalMouseUp, true)\n        cleanup = () => {\n          window.removeEventListener('mouseup', globalMouseUp, true)\n        }\n      }\n      return cleanup\n    }, [mousedown, mousecurr, mouseup])\n\n    return (\n      <div>\n        <Controls model={model} />\n        <div\n          ref={root}\n          className={classes.root}\n          onMouseLeave={() => setMouseOvered(false)}\n          onMouseEnter={() => setMouseOvered(true)}\n        >\n          <div className={classes.container}>\n            <div\n              style={{\n                display: 'grid',\n                transform: `scaleX(${model.hview.scaleFactor}) scaleY(${model.vview.scaleFactor})`,\n              }}\n            >\n              <VerticalAxis model={model} />\n              <HorizontalAxis model={model} />\n              <div\n                ref={ref}\n                style={{ position: 'relative' }}\n                className={classes.content}\n              >\n                {mouseOvered && mouserect ? (\n                  <div\n                    ref={lref}\n                    className={classes.popover}\n                    style={{\n                      left:\n                        mouserect[0] -\n                        (mousedown && mouserect[0] - mousedown[0] < 0\n                          ? lrect.width\n                          : 0),\n                      top:\n                        mouserect[1] -\n                        (mousedown && mouserect[1] - mousedown[1] < 0\n                          ? lrect.height\n                          : 0),\n                    }}\n                  >\n                    {`x-${locstr(mouserect[0], hview)}`}\n                    <br />\n                    {`y-${locstr(viewHeight - mouserect[1], vview)}`}\n                  </div>\n                ) : null}\n                {mousedown &&\n                mouserect &&\n                Math.abs(mousedown[0] - mouserect[0]) > 3 &&\n                Math.abs(mousedown[1] - mouserect[1]) > 3 ? (\n                  <div\n                    ref={rref}\n                    className={classes.popover}\n                    style={{\n                      left:\n                        mousedown[0] -\n                        (mouserect[0] - mousedown[0] < 0 ? 0 : rrect.width),\n                      top:\n                        mousedown[1] -\n                        (mouserect[1] - mousedown[1] < 0 ? 0 : rrect.height),\n                    }}\n                  >\n                    {`x-${locstr(mousedown[0], hview)}`}\n                    <br />\n                    {`y-${locstr(viewHeight - mousedown[1], vview)}`}\n                  </div>\n                ) : null}\n\n                <div\n                  role=\"presentation\"\n                  style={{ cursor: 'crosshair' }}\n                  onMouseDown={event => {\n                    if (event.button === 0) {\n                      setMouseDownClient([event.clientX, event.clientY])\n                      setMouseCurrClient([event.clientX, event.clientY])\n                    }\n                  }}\n                >\n                  <Grid model={model}>\n                    {mousedown && mouserect ? (\n                      <rect\n                        fill=\"rgba(255,0,0,0.3)\"\n                        x={Math.min(mouserect[0], mousedown[0])}\n                        y={Math.min(mouserect[1], mousedown[1])}\n                        width={Math.abs(mouserect[0] - mousedown[0])}\n                        height={Math.abs(mouserect[1] - mousedown[1])}\n                      />\n                    ) : null}\n                  </Grid>\n                </div>\n                <div className={classes.spacer} />\n              </div>\n              <div className={classes.overlay}>\n                {model.tracks.map(track => {\n                  const [display] = track.displays\n                  const { RenderingComponent } = display\n\n                  return RenderingComponent ? (\n                    <RenderingComponent\n                      key={getConf(track, 'trackId')}\n                      model={display}\n                    />\n                  ) : null\n                })}\n              </div>\n              <Menu\n                open={Boolean(mouseup)}\n                onMenuItemClick={(_, callback) => {\n                  callback()\n                  setMouseUpClient(undefined)\n                  setMouseDownClient(undefined)\n                }}\n                onClose={() => {\n                  setMouseUpClient(undefined)\n                  setMouseDownClient(undefined)\n                }}\n                anchorReference=\"anchorPosition\"\n                anchorPosition={\n                  mouseupClient\n                    ? {\n                        top: mouseupClient[1] + 30,\n                        left: mouseupClient[0] + 30,\n                      }\n                    : undefined\n                }\n                style={{ zIndex: 1000 }}\n                menuItems={[\n                  {\n                    label: 'Zoom in',\n                    onClick: () => {\n                      if (mousedown && mouseup) {\n                        model.zoomIn(mousedown, mouseup)\n                      }\n                    },\n                  },\n                  {\n                    label: 'Open linear synteny view',\n                    onClick: () => {\n                      if (mousedown && mouseup) {\n                        model.onDotplotView(mousedown, mouseup)\n                      }\n                    },\n                  },\n                ]}\n              />\n            </div>\n          </div>\n          <ResizeHandle\n            onDrag={n => model.setHeight(model.height + n)}\n            style={{\n              height: 4,\n              background: '#ccc',\n              boxSizing: 'border-box',\n              borderTop: '1px solid #fafafa',\n            }}\n          />\n        </div>\n      </div>\n    )\n  },\n)\nconst DotplotView = observer(({ model }: { model: DotplotViewModel }) => {\n  const { initialized, loading, error } = model\n\n  if ((!initialized && !loading) || error) {\n    return <ImportForm model={model} />\n  }\n\n  if (loading) {\n    return (\n      <div>\n        <p>Loading...</p>\n        <LinearProgress />\n      </div>\n    )\n  }\n\n  return <DotplotViewInternal model={model} />\n})\n\nexport default DotplotView\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z\"\n}), 'KeyboardArrowUp');\n\nexports.default = _default;"],"sourceRoot":""}