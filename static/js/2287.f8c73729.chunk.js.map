{"version":3,"file":"static/js/2287.f8c73729.chunk.js","mappings":"2OAmEA,UArDsB,SAAH,GAMZ,IALLA,EAAM,EAANA,OACAC,EAAO,EAAPA,QAKA,GAAsBC,EAAAA,EAAAA,UAAS,eAAiBC,KAAKC,OAAM,eAApDC,EAAG,KAAEC,EAAM,KACZC,EAAWP,EAAOQ,OAAM,SAAAC,GAAC,MAAe,sBAAXA,EAAEC,IAA4B,IACjE,OACE,UAAC,IAAM,CACLC,MAAI,EACJV,QAAS,kBAAMA,GAAQ,EAAM,EAC7BW,MAAM,oCAAmC,WAEzC,UAAC,IAAa,YACZ,UAAC,IAAU,WACPL,EAEE,KADA,+GACK,eAGX,wBACGP,EAAOa,KAAI,SAAAC,GAAK,OACf,2BACGC,EAAAA,EAAAA,gBAAeD,EAAO,QAAQ,MAAIA,EAAMJ,OADlCI,EAAME,QAEV,OAGT,SAAC,IAAS,CACRC,MAAOZ,EACPa,SAAU,SAAAC,GAAK,OAAIb,EAAOa,EAAMC,OAAOH,MAAM,EAC7CI,WAAW,gBAEb,SAAC,IAAU,UAAC,mCAEd,UAAC,IAAa,YACZ,SAAC,IAAM,CAACC,QAAS,kBAAMrB,GAAQ,EAAM,EAAEsB,MAAM,UAAS,SAAC,YAGvD,SAAC,IAAM,CACLD,QAAS,kBAAMrB,GAAQ,EAAM,CAAEuB,KAAMnB,GAAM,EAC3CkB,MAAM,UACNE,QAAQ,YACRC,WAAS,WACV,gBAMT,C","sources":["../../../plugins/wiggle/src/CreateMultiWiggleExtension/ConfirmDialog.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport Dialog from '@jbrowse/core/ui/Dialog'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\n\nconst ConfirmDialog = ({\n  tracks,\n  onClose,\n}: {\n  tracks: AnyConfigurationModel[]\n  onClose: (arg: boolean, arg1?: { name: string }) => void\n}) => {\n  const [val, setVal] = useState('MultiWiggle ' + Date.now())\n  const allQuant = tracks.every(t => t.type === 'QuantitativeTrack')\n  return (\n    <Dialog\n      open\n      onClose={() => onClose(false)}\n      title=\"Confirm multi-wiggle track create\"\n    >\n      <DialogContent>\n        <Typography>\n          {!allQuant\n            ? 'Not every track looks like a QuantitativeTrack. This could have unexpected behavior, confirm if it looks ok.'\n            : null}\n          Listing:\n        </Typography>\n        <ul>\n          {tracks.map(track => (\n            <li key={track.trackId}>\n              {readConfObject(track, 'name')} - {track.type}\n            </li>\n          ))}\n        </ul>\n        <TextField\n          value={val}\n          onChange={event => setVal(event.target.value)}\n          helperText=\"Track name\"\n        />\n        <Typography>Confirm creation of track?</Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => onClose(false)} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={() => onClose(true, { name: val })}\n          color=\"primary\"\n          variant=\"contained\"\n          autoFocus\n        >\n          Submit\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default ConfirmDialog\n"],"names":["tracks","onClose","useState","Date","now","val","setVal","allQuant","every","t","type","open","title","map","track","readConfObject","trackId","value","onChange","event","target","helperText","onClick","color","name","variant","autoFocus"],"sourceRoot":""}