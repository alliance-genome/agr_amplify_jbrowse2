{"version":3,"file":"static/js/3531.32e48aa0.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/material/LinearProgress/LinearProgress.js","../../../node_modules/@mui/material/LinearProgress/linearProgressClasses.js","../../../node_modules/@mui/material/Skeleton/Skeleton.js","../../../node_modules/@mui/material/Skeleton/skeletonClasses.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js","../../../node_modules/@mui/x-internals/EventManager/EventManager.js","../../../node_modules/@mui/x-data-grid/utils/Store.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridPipeProcessing.js","../../../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridStrategyProcessing.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridRefs.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridTheme.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridLocaleText.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridInitializeState.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/serializers/csvSerializer.js","../../../node_modules/@mui/x-data-grid/hooks/features/clipboard/useGridClipboard.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenu.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeApplier.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumns.js","../../../node_modules/@mui/x-data-grid/hooks/features/density/useGridDensity.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/utils.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/useGridCsvExport.js","../../../node_modules/@mui/x-data-grid/utils/exportAs.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationModel.js","../../../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridRegisterStrategyProcessor.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/useGridFilter.js","../../../node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js","../../../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/useGridKeyboardNavigation.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridCellEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridRowEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRows.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsPreProcessors.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelection.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/useGridSorting.js","../../../node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js","../../../node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsMeta.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumnSpanning.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGrouping.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnResize/useGridColumnResize.js","../../../node_modules/@mui/x-data-grid/utils/createControllablePromise.js","../../../node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelectionPreProcessors.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationMeta.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridRowCount.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js","../../../node_modules/@mui/x-data-grid/utils/throttle.js","../../../node_modules/@mui/x-data-grid/hooks/features/events/useGridEvents.js","../../../node_modules/@mui/x-data-grid/hooks/features/statePersistence/useGridStatePersistence.js","../../../node_modules/@mui/x-data-grid/DataGrid/DataGrid.js","../../../node_modules/@mui/x-data-grid/components/GridNoResultsOverlay.js","../../../node_modules/@mui/x-data-grid/material/icons/GridColumnUnsortedIcon.js","../../../node_modules/@mui/x-data-grid/material/components/MUISelectOption.js","../../../node_modules/@mui/x-data-grid/material/index.js","../../../node_modules/@mui/x-data-grid/constants/defaultGridSlotsComponents.js","../../../node_modules/@mui/x-data-grid/components/GridDetailPanels.js","../../../node_modules/@mui/x-data-grid/components/GridPinnedRows.js","../../../node_modules/@mui/x-data-grid/DataGrid/useDataGridProps.js","../../../node_modules/@mui/x-data-grid/internals/utils/useProps.js","../../../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../../../node_modules/@mui/x-data-grid/internals/utils/computeSlots.js","../../../node_modules/@mui/x-data-grid/colDef/gridActionsColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridBooleanColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridBooleanOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridCheckboxSelectionColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridDateColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridDateOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridDefaultColumnTypes.js","../../../node_modules/@mui/x-data-grid/colDef/gridNumericColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridNumericOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridSingleSelectColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridSingleSelectOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridStringColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridStringOperators.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnGroupHeader.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridBaseColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/GridColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/GridFooter.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js","../../../node_modules/@mui/x-data-grid/components/GridHeader.js","../../../node_modules/@mui/x-data-grid/components/GridSkeletonLoadingOverlay.js","../../../node_modules/@mui/x-data-grid/components/GridLoadingOverlay.js","../../../node_modules/@mui/x-data-grid/components/GridNoRowsOverlay.js","../../../node_modules/@mui/x-data-grid/components/GridPagination.js","../../../node_modules/@mui/x-data-grid/components/GridRow.js","../../../node_modules/@mui/x-data-grid/components/GridRowCount.js","../../../node_modules/@mui/x-data-grid/components/GridScrollbarFillerCell.js","../../../node_modules/@mui/x-data-grid/components/GridSelectedRowCount.js","../../../node_modules/@mui/x-data-grid/components/base/GridFooterPlaceholder.js","../../../node_modules/@mui/x-data-grid/components/base/GridOverlays.js","../../../node_modules/@mui/x-data-grid/components/cell/GridActionsCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridBooleanCell.js","../../../node_modules/@mui/x-data-grid/utils/doesSupportPreventScroll.js","../../../node_modules/@mui/x-data-grid/components/cell/GridCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditBooleanCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditDateCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditInputCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditSingleSelectCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridSkeletonCell.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderFilterIconButton.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/ColumnHeaderMenuIcon.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderItem.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSeparator.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSortIcon.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderTitle.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridGenericColumnHeaderItem.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridIconButtonContainer.js","../../../node_modules/@mui/x-data-grid/components/columnSelection/GridCellCheckboxRenderer.js","../../../node_modules/@mui/x-data-grid/components/columnSelection/GridHeaderCheckbox.js","../../../node_modules/@mui/x-data-grid/components/columnsManagement/utils.js","../../../node_modules/@mui/x-data-grid/components/columnsManagement/GridColumnsManagement.js","../../../node_modules/@mui/x-data-grid/components/containers/GridFooterContainer.js","../../../node_modules/@mui/x-data-grid/components/containers/GridOverlay.js","../../../node_modules/@mui/x-data-grid/components/containers/GridRootStyles.js","../../../node_modules/@mui/x-data-grid/components/containers/GridRoot.js","../../../node_modules/@mui/x-data-grid/components/menu/GridMenu.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenuSlots.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenu.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenuContainer.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuColumnsItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuFilterItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuHideItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuManageItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuSortItem.js","../../../node_modules/@mui/x-data-grid/components/panel/GridColumnsPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelContent.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelFooter.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelWrapper.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterForm.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputBoolean.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputDate.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleValue.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputSingleSelect.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputValue.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/filterPanelUtils.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExport.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExportContainer.js","../../../node_modules/@mui/x-data-grid/components/GridScrollArea.js","../../../node_modules/@mui/x-data-grid/hooks/features/overlays/useGridOverlays.js","../../../node_modules/@mui/x-data-grid/components/GridHeaders.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridAriaAttributes.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridMainContainer.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridTopContainer.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridBottomContainer.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerContent.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerFiller.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerRenderZone.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollbar.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScroller.js","../../../node_modules/@mui/x-data-grid/constants/gridClasses.js","../../../node_modules/@mui/x-data-grid/constants/gridDetailPanelToggleField.js","../../../node_modules/@mui/x-data-grid/constants/localeTextConstants.js","../../../node_modules/@mui/x-data-grid/context/GridContextProvider.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/columnMenuSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnResize/gridColumnResizeApi.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsInterfaces.js","../../../node_modules/@mui/x-data-grid/hooks/core/gridCoreSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/density/densitySelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/dimensions/gridDimensionsSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/gridEditingSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterState.js","../../../node_modules/@mui/x-data-grid/utils/getPublicApiRef.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/focus/gridFocusStateSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/headerFiltering/gridHeaderFilteringSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelsValue.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/gridRowSelectionSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/utils.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsMetaSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridParamsApi.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/gridVirtualizationSelectors.js","../../../node_modules/@mui/x-internals/useResizeObserver/useResizeObserver.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualScroller.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualization.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useFirstRender.js","../../../node_modules/@mui/x-data-grid/utils/cleanupTracking/TimerBasedCleanupTracking.js","../../../node_modules/@mui/x-data-grid/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridApiEventHandler.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridApiMethod.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridLogger.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridPrivateApiContext.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridVisibleRows.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useRunOnce.js","../../../node_modules/@mui/x-data-grid/internals/utils/getPinnedCellOffset.js","../../../node_modules/@mui/x-data-grid/material/icons/index.js","../../../node_modules/@mui/x-data-grid/models/gridColumnGrouping.js","../../../node_modules/@mui/x-data-grid/models/gridEditRowModel.js","../../../node_modules/@mui/x-data-grid/models/gridFilterItem.js","../../../node_modules/@mui/x-data-grid/models/params/gridEditCellParams.js","../../../node_modules/@mui/x-data-grid/models/params/gridRowParams.js","../../../node_modules/@mui/x-data-grid/utils/cellBorderUtils.js","../../../node_modules/reselect/es/index.js","../../../node_modules/@mui/x-data-grid/utils/createSelector.js","../../../node_modules/@mui/x-data-grid/utils/domUtils.js","../../../node_modules/@mui/x-data-grid/utils/fastMemo.js","../../../node_modules/@mui/x-data-grid/utils/fastObjectShallowCompare.js","../../../node_modules/@mui/x-data-grid/utils/keyboardUtils.js","../../../node_modules/@mui/x-data-grid/utils/utils.js","../../../node_modules/@mui/x-data-grid/utils/warning.js","../../../node_modules/prop-types/factoryWithThrowingShims.js","../../../node_modules/prop-types/index.js","../../../node_modules/prop-types/lib/ReactPropTypesSecret.js","../../../node_modules/reselect/es/defaultMemoize.js"],"sourcesContent":["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"value\", \"valueBuffer\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4,\n  _t5,\n  _t6;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { keyframes, css } from '@mui/system';\nimport { darken, lighten } from '@mui/system/colorManipulator';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getLinearProgressUtilityClass } from './linearProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TRANSITION_DURATION = 4; // seconds\nconst indeterminate1Keyframe = keyframes(_t || (_t = _`\n  0% {\n    left: -35%;\n    right: 100%;\n  }\n\n  60% {\n    left: 100%;\n    right: -90%;\n  }\n\n  100% {\n    left: 100%;\n    right: -90%;\n  }\n`));\nconst indeterminate2Keyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    left: -200%;\n    right: 100%;\n  }\n\n  60% {\n    left: 107%;\n    right: -8%;\n  }\n\n  100% {\n    left: 107%;\n    right: -8%;\n  }\n`));\nconst bufferKeyframe = keyframes(_t3 || (_t3 = _`\n  0% {\n    opacity: 1;\n    background-position: 0 -23px;\n  }\n\n  60% {\n    opacity: 0;\n    background-position: 0 -23px;\n  }\n\n  100% {\n    opacity: 1;\n    background-position: -200px -23px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, variant],\n    dashed: ['dashed', `dashedColor${capitalize(color)}`],\n    bar1: ['bar', `barColor${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar1Indeterminate', variant === 'determinate' && 'bar1Determinate', variant === 'buffer' && 'bar1Buffer'],\n    bar2: ['bar', variant !== 'buffer' && `barColor${capitalize(color)}`, variant === 'buffer' && `color${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar2Indeterminate', variant === 'buffer' && 'bar2Buffer']\n  };\n  return composeClasses(slots, getLinearProgressUtilityClass, classes);\n};\nconst getColorShade = (theme, color) => {\n  if (color === 'inherit') {\n    return 'currentColor';\n  }\n  if (theme.vars) {\n    return theme.vars.palette.LinearProgress[`${color}Bg`];\n  }\n  return theme.palette.mode === 'light' ? lighten(theme.palette[color].main, 0.62) : darken(theme.palette[color].main, 0.5);\n};\nconst LinearProgressRoot = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`color${capitalize(ownerState.color)}`], styles[ownerState.variant]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'block',\n  height: 4,\n  zIndex: 0,\n  // Fix Safari's bug during composition of different paint.\n  '@media print': {\n    colorAdjust: 'exact'\n  },\n  backgroundColor: getColorShade(theme, ownerState.color)\n}, ownerState.color === 'inherit' && ownerState.variant !== 'buffer' && {\n  backgroundColor: 'none',\n  '&::before': {\n    content: '\"\"',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'currentColor',\n    opacity: 0.3\n  }\n}, ownerState.variant === 'buffer' && {\n  backgroundColor: 'transparent'\n}, ownerState.variant === 'query' && {\n  transform: 'rotate(180deg)'\n}));\nconst LinearProgressDashed = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Dashed',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.dashed, styles[`dashedColor${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => {\n  const backgroundColor = getColorShade(theme, ownerState.color);\n  return _extends({\n    position: 'absolute',\n    marginTop: 0,\n    height: '100%',\n    width: '100%'\n  }, ownerState.color === 'inherit' && {\n    opacity: 0.3\n  }, {\n    backgroundImage: `radial-gradient(${backgroundColor} 0%, ${backgroundColor} 16%, transparent 42%)`,\n    backgroundSize: '10px 10px',\n    backgroundPosition: '0 -23px'\n  });\n}, css(_t4 || (_t4 = _`\n    animation: ${0} 3s infinite linear;\n  `), bufferKeyframe));\nconst LinearProgressBar1 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar1',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar1Indeterminate, ownerState.variant === 'determinate' && styles.bar1Determinate, ownerState.variant === 'buffer' && styles.bar1Buffer];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left',\n  backgroundColor: ownerState.color === 'inherit' ? 'currentColor' : (theme.vars || theme).palette[ownerState.color].main\n}, ownerState.variant === 'determinate' && {\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}, ownerState.variant === 'buffer' && {\n  zIndex: 1,\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}), ({\n  ownerState\n}) => (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && css(_t5 || (_t5 = _`\n      width: auto;\n      animation: ${0} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;\n    `), indeterminate1Keyframe));\nconst LinearProgressBar2 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar2',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar2Indeterminate, ownerState.variant === 'buffer' && styles.bar2Buffer];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left'\n}, ownerState.variant !== 'buffer' && {\n  backgroundColor: ownerState.color === 'inherit' ? 'currentColor' : (theme.vars || theme).palette[ownerState.color].main\n}, ownerState.color === 'inherit' && {\n  opacity: 0.3\n}, ownerState.variant === 'buffer' && {\n  backgroundColor: getColorShade(theme, ownerState.color),\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}), ({\n  ownerState\n}) => (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && css(_t6 || (_t6 = _`\n      width: auto;\n      animation: ${0} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;\n    `), indeterminate2Keyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst LinearProgress = /*#__PURE__*/React.forwardRef(function LinearProgress(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiLinearProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      value,\n      valueBuffer,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const isRtl = useRtl();\n  const rootProps = {};\n  const inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      rootProps['aria-valuemin'] = 0;\n      rootProps['aria-valuemax'] = 100;\n      let transform = value - 100;\n      if (isRtl) {\n        transform = -transform;\n      }\n      inlineStyles.bar1.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      let transform = (valueBuffer || 0) - 100;\n      if (isRtl) {\n        transform = -transform;\n      }\n      inlineStyles.bar2.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n  return /*#__PURE__*/_jsxs(LinearProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    role: \"progressbar\"\n  }, rootProps, {\n    ref: ref\n  }, other, {\n    children: [variant === 'buffer' ? /*#__PURE__*/_jsx(LinearProgressDashed, {\n      className: classes.dashed,\n      ownerState: ownerState\n    }) : null, /*#__PURE__*/_jsx(LinearProgressBar1, {\n      className: classes.bar1,\n      ownerState: ownerState,\n      style: inlineStyles.bar1\n    }), variant === 'determinate' ? null : /*#__PURE__*/_jsx(LinearProgressBar2, {\n      className: classes.bar2,\n      ownerState: ownerState,\n      style: inlineStyles.bar2\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['buffer', 'determinate', 'indeterminate', 'query'])\n} : void 0;\nexport default LinearProgress;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getLinearProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiLinearProgress', slot);\n}\nconst linearProgressClasses = generateUtilityClasses('MuiLinearProgress', ['root', 'colorPrimary', 'colorSecondary', 'determinate', 'indeterminate', 'buffer', 'query', 'dashed', 'dashedColorPrimary', 'dashedColorSecondary', 'bar', 'barColorPrimary', 'barColorSecondary', 'bar1Indeterminate', 'bar1Determinate', 'bar1Buffer', 'bar2Indeterminate', 'bar2Buffer']);\nexport default linearProgressClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.variant === 'rounded' && {\n    borderRadius: (theme.vars || theme).shape.borderRadius\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 2s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 2s linear 0.5s infinite;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${0},\n          transparent\n        );\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, (theme.vars || theme).palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n      animation = 'pulse',\n      className,\n      component = 'span',\n      height,\n      style,\n      variant = 'text',\n      width\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","import * as React from 'react';\nimport { localStorageAvailable } from '../../utils/utils';\nimport { useGridApiMethod } from '../utils';\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\nconst noop = () => {};\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI X: Log level ${logLevel} not recognized.`);\n  }\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI X: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n    return loggerObj;\n  }, {});\n  return logger;\n}\nexport const useGridLoggerFactory = (apiRef, props) => {\n  const getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n  useGridApiMethod(apiRef, {\n    getLogger\n  }, 'private');\n};","// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  constructor() {\n    this.maxListeners = 20;\n    this.warnOnce = false;\n    this.events = {};\n  }\n  on(eventName, listener, options = {}) {\n    let collection = this.events[eventName];\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`].join('\\n'));\n      }\n    }\n  }\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n  removeAllListeners() {\n    this.events = {};\n  }\n  emit(eventName, ...args) {\n    const collection = this.events[eventName];\n    if (!collection) {\n      return;\n    }\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener(...args) {\n      that.removeListener(eventName, oneTimeListener);\n      listener.apply(that, args);\n    });\n  }\n}","export class Store {\n  static create(value) {\n    return new Store(value);\n  }\n  constructor(_value) {\n    this.value = void 0;\n    this.listeners = void 0;\n    this.subscribe = fn => {\n      this.listeners.add(fn);\n      return () => {\n        this.listeners.delete(fn);\n      };\n    };\n    this.getSnapshot = () => {\n      return this.value;\n    };\n    this.update = value => {\n      this.value = value;\n      this.listeners.forEach(l => l(value));\n    };\n    this.value = _value;\n    this.listeners = new Set();\n  }\n}","import * as React from 'react';\nimport { EventManager } from '@mui/x-internals/EventManager';\nimport { Store } from '../../utils/Store';\nimport { useGridApiMethod } from '../utils/useGridApiMethod';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nconst SYMBOL_API_PRIVATE = Symbol('mui.api_private');\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\nexport function unwrapPrivateAPI(publicApi) {\n  return publicApi[SYMBOL_API_PRIVATE];\n}\nlet globalId = 0;\nfunction createPrivateAPI(publicApiRef) {\n  const existingPrivateApi = publicApiRef.current?.[SYMBOL_API_PRIVATE];\n  if (existingPrivateApi) {\n    return existingPrivateApi;\n  }\n  const state = {};\n  const privateApi = {\n    state,\n    store: Store.create(state),\n    instanceId: {\n      id: globalId\n    }\n  };\n  globalId += 1;\n  privateApi.getPublicApi = () => publicApiRef.current;\n  privateApi.register = (visibility, methods) => {\n    Object.keys(methods).forEach(methodName => {\n      const method = methods[methodName];\n      const currentPrivateMethod = privateApi[methodName];\n      if (currentPrivateMethod?.spying === true) {\n        currentPrivateMethod.target = method;\n      } else {\n        privateApi[methodName] = method;\n      }\n      if (visibility === 'public') {\n        const publicApi = publicApiRef.current;\n        const currentPublicMethod = publicApi[methodName];\n        if (currentPublicMethod?.spying === true) {\n          currentPublicMethod.target = method;\n        } else {\n          publicApi[methodName] = method;\n        }\n      }\n    });\n  };\n  privateApi.register('private', {\n    caches: {},\n    eventManager: new EventManager()\n  });\n  return privateApi;\n}\nfunction createPublicAPI(privateApiRef) {\n  const publicApi = {\n    get state() {\n      return privateApiRef.current.state;\n    },\n    get store() {\n      return privateApiRef.current.store;\n    },\n    get instanceId() {\n      return privateApiRef.current.instanceId;\n    },\n    [SYMBOL_API_PRIVATE]: privateApiRef.current\n  };\n  return publicApi;\n}\nexport function useGridApiInitialization(inputApiRef, props) {\n  const publicApiRef = React.useRef();\n  const privateApiRef = React.useRef();\n  if (!privateApiRef.current) {\n    privateApiRef.current = createPrivateAPI(publicApiRef);\n  }\n  if (!publicApiRef.current) {\n    publicApiRef.current = createPublicAPI(privateApiRef);\n  }\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n    const details = props.signature === GridSignature.DataGridPro ? {\n      api: privateApiRef.current.getPublicApi()\n    } : {};\n    privateApiRef.current.eventManager.emit(name, params, event, details);\n  }, [privateApiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    privateApiRef.current.eventManager.on(event, handler, options);\n    const api = privateApiRef.current;\n    return () => {\n      api.eventManager.removeListener(event, handler);\n    };\n  }, [privateApiRef]);\n  useGridApiMethod(privateApiRef, {\n    subscribeEvent,\n    publishEvent\n  }, 'public');\n  if (inputApiRef && !inputApiRef.current?.state) {\n    inputApiRef.current = publicApiRef.current;\n  }\n  React.useImperativeHandle(inputApiRef, () => publicApiRef.current, [publicApiRef]);\n  React.useEffect(() => {\n    const api = privateApiRef.current;\n    return () => {\n      api.publishEvent('unmount');\n    };\n  }, [privateApiRef]);\n  return privateApiRef;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.requestPipeProcessorsApplication` is called for the given group.\n */\nexport const useGridPipeProcessing = apiRef => {\n  const cache = React.useRef({});\n  const isRunning = React.useRef(false);\n  const runAppliers = React.useCallback(groupCache => {\n    if (isRunning.current || !groupCache) {\n      return;\n    }\n    isRunning.current = true;\n    Object.values(groupCache.appliers).forEach(callback => {\n      callback();\n    });\n    isRunning.current = false;\n  }, []);\n  const registerPipeProcessor = React.useCallback((group, id, processor) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    const groupCache = cache.current[group];\n    const oldProcessor = groupCache.processors.get(id);\n    if (oldProcessor !== processor) {\n      groupCache.processors.set(id, processor);\n      groupCache.processorsAsArray = Array.from(cache.current[group].processors.values());\n      runAppliers(groupCache);\n    }\n    return () => {\n      cache.current[group].processors.delete(id);\n      cache.current[group].processorsAsArray = Array.from(cache.current[group].processors.values());\n    };\n  }, [runAppliers]);\n  const registerPipeApplier = React.useCallback((group, id, applier) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    cache.current[group].appliers[id] = applier;\n    return () => {\n      const _appliers = cache.current[group].appliers,\n        otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n      cache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  const requestPipeProcessorsApplication = React.useCallback(group => {\n    runAppliers(cache.current[group]);\n  }, [runAppliers]);\n  const applyPipeProcessors = React.useCallback((...args) => {\n    const [group, value, context] = args;\n    if (!cache.current[group]) {\n      return value;\n    }\n    const processors = cache.current[group].processorsAsArray;\n    let result = value;\n    for (let i = 0; i < processors.length; i += 1) {\n      result = processors[i](result, context);\n    }\n    return result;\n  }, []);\n  const preProcessingPrivateApi = {\n    registerPipeProcessor,\n    registerPipeApplier,\n    requestPipeProcessorsApplication\n  };\n  const preProcessingPublicApi = {\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingPrivateApi, 'private');\n  useGridApiMethod(apiRef, preProcessingPublicApi, 'public');\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport const GRID_DEFAULT_STRATEGY = 'none';\nexport const GRID_STRATEGIES_PROCESSORS = {\n  rowTreeCreation: 'rowTree',\n  filtering: 'rowTree',\n  sorting: 'rowTree',\n  visibleRowsLookupCreation: 'rowTree'\n};\n/**\n * Implements a variant of the Strategy Pattern (see https://en.wikipedia.org/wiki/Strategy_pattern)\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic that must only be applied if the right strategy is active.\n * For instance, the row grouping plugin has a custom filtering algorithm.\n * This algorithm must be applied by the filtering plugin if the row grouping is the current way of grouping rows,\n * but not if the tree data is the current way of grouping rows.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterStrategyProcessor` to register their processor.\n *   When the processor of the active strategy changes, it will fire `\"activeStrategyProcessorChange\"` to re-apply the processor.\n *\n * - `apiRef.current.setStrategyAvailability` to tell if their strategy can be used.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to apply the custom logic of the current strategy must use:\n *\n * - `apiRef.current.applyStrategyProcessor` to run the processor of the active strategy for a given processor name.\n *\n * - the \"strategyAvailabilityChange\" event to update something when the active strategy changes.\n *    Warning: Be careful not to apply the processor several times.\n *    For instance \"rowsSet\" is fired by `useGridRows` whenever the active strategy changes.\n *    So listening to both would most likely run your logic twice.\n *\n * - The \"activeStrategyProcessorChange\" event to update something when the processor of the active strategy changes.\n *\n * =====================================================================================================================\n *\n * Each processor name is part of a strategy group which can only have one active strategy at the time.\n * For now, there is only one strategy group named `rowTree` which customize\n * - row tree creation algorithm.\n * - sorting algorithm.\n * - filtering algorithm.\n */\nexport const useGridStrategyProcessing = apiRef => {\n  const availableStrategies = React.useRef(new Map());\n  const strategiesCache = React.useRef({});\n  const registerStrategyProcessor = React.useCallback((strategyName, processorName, processor) => {\n    const cleanup = () => {\n      const _ref = strategiesCache.current[processorName],\n        otherProcessors = _objectWithoutPropertiesLoose(_ref, [strategyName].map(_toPropertyKey));\n      strategiesCache.current[processorName] = otherProcessors;\n    };\n    if (!strategiesCache.current[processorName]) {\n      strategiesCache.current[processorName] = {};\n    }\n    const groupPreProcessors = strategiesCache.current[processorName];\n    const previousProcessor = groupPreProcessors[strategyName];\n    groupPreProcessors[strategyName] = processor;\n    if (!previousProcessor || previousProcessor === processor) {\n      return cleanup;\n    }\n    if (strategyName === apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName])) {\n      apiRef.current.publishEvent('activeStrategyProcessorChange', processorName);\n    }\n    return cleanup;\n  }, [apiRef]);\n  const applyStrategyProcessor = React.useCallback((processorName, params) => {\n    const activeStrategy = apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName]);\n    if (activeStrategy == null) {\n      throw new Error(\"Can't apply a strategy processor before defining an active strategy\");\n    }\n    const groupCache = strategiesCache.current[processorName];\n    if (!groupCache || !groupCache[activeStrategy]) {\n      throw new Error(`No processor found for processor \"${processorName}\" on strategy \"${activeStrategy}\"`);\n    }\n    const processor = groupCache[activeStrategy];\n    return processor(params);\n  }, [apiRef]);\n  const getActiveStrategy = React.useCallback(strategyGroup => {\n    const strategyEntries = Array.from(availableStrategies.current.entries());\n    const availableStrategyEntry = strategyEntries.find(([, strategy]) => {\n      if (strategy.group !== strategyGroup) {\n        return false;\n      }\n      return strategy.isAvailable();\n    });\n    return availableStrategyEntry?.[0] ?? GRID_DEFAULT_STRATEGY;\n  }, []);\n  const setStrategyAvailability = React.useCallback((strategyGroup, strategyName, isAvailable) => {\n    availableStrategies.current.set(strategyName, {\n      group: strategyGroup,\n      isAvailable\n    });\n    apiRef.current.publishEvent('strategyAvailabilityChange');\n  }, [apiRef]);\n  const strategyProcessingApi = {\n    registerStrategyProcessor,\n    applyStrategyProcessor,\n    getActiveStrategy,\n    setStrategyAvailability\n  };\n  useGridApiMethod(apiRef, strategyProcessingApi, 'private');\n};","import { useGridRefs } from './useGridRefs';\nimport { useGridTheme } from './useGridTheme';\nimport { useGridLoggerFactory } from './useGridLoggerFactory';\nimport { useGridApiInitialization } from './useGridApiInitialization';\nimport { useGridLocaleText } from './useGridLocaleText';\nimport { useGridPipeProcessing } from './pipeProcessing';\nimport { useGridStrategyProcessing } from './strategyProcessing';\nimport { useGridStateInitialization } from './useGridStateInitialization';\n\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\nexport const useGridInitialization = (inputApiRef, props) => {\n  const privateApiRef = useGridApiInitialization(inputApiRef, props);\n  useGridRefs(privateApiRef);\n  useGridTheme(privateApiRef);\n  useGridLoggerFactory(privateApiRef, props);\n  useGridStateInitialization(privateApiRef);\n  useGridPipeProcessing(privateApiRef);\n  useGridStrategyProcessing(privateApiRef);\n  useGridLocaleText(privateApiRef, props);\n  privateApiRef.current.register('private', {\n    rootProps: props\n  });\n  return privateApiRef;\n};","import * as React from 'react';\nexport const useGridRefs = apiRef => {\n  const rootElementRef = React.useRef(null);\n  const mainElementRef = React.useRef(null);\n  const virtualScrollerRef = React.useRef(null);\n  apiRef.current.register('public', {\n    rootElementRef\n  });\n  apiRef.current.register('private', {\n    mainElementRef,\n    virtualScrollerRef\n  });\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nexport const useGridTheme = apiRef => {\n  const theme = useTheme();\n  if (!apiRef.current.state.theme) {\n    apiRef.current.state.theme = theme;\n  }\n  const isFirstEffect = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstEffect.current) {\n      isFirstEffect.current = false;\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        theme\n      }));\n    }\n  }, [apiRef, theme]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../utils';\nimport { isFunction } from '../../utils/utils';\nexport const useGridStateInitialization = apiRef => {\n  const controlStateMapRef = React.useRef({});\n  const [, rawForceUpdate] = React.useState();\n  const registerControlState = React.useCallback(controlStateItem => {\n    controlStateMapRef.current[controlStateItem.stateId] = controlStateItem;\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n    let ignoreSetState = false;\n\n    // Apply the control state constraints\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (newSubState === oldSubState) {\n        return;\n      }\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      });\n\n      // The state is controlled, the prop should always win\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n      if (apiRef.current.publishEvent) {\n        apiRef.current.publishEvent('stateChange', newState);\n      }\n      apiRef.current.store.update(newState);\n    }\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (controlState.propOnChange && hasPropChanged) {\n        controlState.propOnChange(model, {\n          reason,\n          api: apiRef.current\n        });\n      }\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n    return !ignoreSetState;\n  }, [apiRef]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return _extends({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const forceUpdate = React.useCallback(() => rawForceUpdate(() => apiRef.current.state), [apiRef]);\n  const publicStateApi = {\n    setState,\n    forceUpdate\n  };\n  const privateStateApi = {\n    updateControlState,\n    registerControlState\n  };\n  useGridApiMethod(apiRef, publicStateApi, 'public');\n  useGridApiMethod(apiRef, privateStateApi, 'private');\n};","import * as React from 'react';\nexport const useGridLocaleText = (apiRef, props) => {\n  const getLocaleText = React.useCallback(key => {\n    if (props.localeText[key] == null) {\n      throw new Error(`Missing translation for key ${key}.`);\n    }\n    return props.localeText[key];\n  }, [props.localeText]);\n  apiRef.current.register('public', {\n    getLocaleText\n  });\n};","import * as React from 'react';\nexport const useGridInitializeState = (initializer, privateApiRef, props) => {\n  const isInitialized = React.useRef(false);\n  if (!isInitialized.current) {\n    privateApiRef.current.state = initializer(privateApiRef.current.state, props, privateApiRef);\n    isInitialized.current = true;\n  }\n};","import { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../../colDef';\nimport { buildWarning } from '../../../../utils/warning';\nfunction sanitizeCellValue(value, csvOptions) {\n  const valueStr = typeof value === 'string' ? value : `${value}`;\n  if (csvOptions.shouldAppendQuotes || csvOptions.escapeFormulas) {\n    const escapedValue = valueStr.replace(/\"/g, '\"\"');\n    // Make sure value containing delimiter or line break won't be split into multiple cells\n    if ([csvOptions.delimiter, '\\n', '\\r', '\"'].some(delimiter => valueStr.includes(delimiter))) {\n      return `\"${escapedValue}\"`;\n    }\n    if (csvOptions.escapeFormulas) {\n      // See https://owasp.org/www-community/attacks/CSV_Injection\n      if (['=', '+', '-', '@', '\\t', '\\r'].includes(escapedValue[0])) {\n        return `'${escapedValue}`;\n      }\n    }\n    return escapedValue;\n  }\n  return valueStr;\n}\nexport const serializeCellValue = (cellParams, options) => {\n  const {\n    csvOptions,\n    ignoreValueFormatter\n  } = options;\n  let value;\n  if (ignoreValueFormatter) {\n    const columnType = cellParams.colDef.type;\n    if (columnType === 'number') {\n      value = String(cellParams.value);\n    } else if (columnType === 'date' || columnType === 'dateTime') {\n      value = cellParams.value?.toISOString();\n    } else if (typeof cellParams.value?.toString === 'function') {\n      value = cellParams.value.toString();\n    } else {\n      value = cellParams.value;\n    }\n  } else {\n    value = cellParams.formattedValue;\n  }\n  return sanitizeCellValue(value, csvOptions);\n};\nconst objectFormattedValueWarning = buildWarning(['MUI X: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\nclass CSVRow {\n  constructor(options) {\n    this.options = void 0;\n    this.rowString = '';\n    this.isEmpty = true;\n    this.options = options;\n  }\n  addValue(value) {\n    if (!this.isEmpty) {\n      this.rowString += this.options.csvOptions.delimiter;\n    }\n    if (value === null || value === undefined) {\n      this.rowString += '';\n    } else if (typeof this.options.sanitizeCellValue === 'function') {\n      this.rowString += this.options.sanitizeCellValue(value, this.options.csvOptions);\n    } else {\n      this.rowString += value;\n    }\n    this.isEmpty = false;\n  }\n  getRowString() {\n    return this.rowString;\n  }\n}\nconst serializeRow = ({\n  id,\n  columns,\n  getCellParams,\n  csvOptions,\n  ignoreValueFormatter\n}) => {\n  const row = new CSVRow({\n    csvOptions\n  });\n  columns.forEach(column => {\n    const cellParams = getCellParams(id, column.field);\n    if (process.env.NODE_ENV !== 'production') {\n      if (String(cellParams.formattedValue) === '[object Object]') {\n        objectFormattedValueWarning();\n      }\n    }\n    row.addValue(serializeCellValue(cellParams, {\n      ignoreValueFormatter,\n      csvOptions\n    }));\n  });\n  return row.getRowString();\n};\nexport function buildCSV(options) {\n  const {\n    columns,\n    rowIds,\n    csvOptions,\n    ignoreValueFormatter,\n    apiRef\n  } = options;\n  const CSVBody = rowIds.reduce((acc, id) => `${acc}${serializeRow({\n    id,\n    columns,\n    getCellParams: apiRef.current.getCellParams,\n    ignoreValueFormatter,\n    csvOptions\n  })}\\r\\n`, '').trim();\n  if (!csvOptions.includeHeaders) {\n    return CSVBody;\n  }\n  const filteredColumns = columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field);\n  const headerRows = [];\n  if (csvOptions.includeColumnGroupsHeaders) {\n    const columnGroupLookup = apiRef.current.getAllGroupDetails();\n    let maxColumnGroupsDepth = 0;\n    const columnGroupPathsLookup = filteredColumns.reduce((acc, column) => {\n      const columnGroupPath = apiRef.current.getColumnGroupPath(column.field);\n      acc[column.field] = columnGroupPath;\n      maxColumnGroupsDepth = Math.max(maxColumnGroupsDepth, columnGroupPath.length);\n      return acc;\n    }, {});\n    for (let i = 0; i < maxColumnGroupsDepth; i += 1) {\n      const headerGroupRow = new CSVRow({\n        csvOptions,\n        sanitizeCellValue\n      });\n      headerRows.push(headerGroupRow);\n      filteredColumns.forEach(column => {\n        const columnGroupId = (columnGroupPathsLookup[column.field] || [])[i];\n        const columnGroup = columnGroupLookup[columnGroupId];\n        headerGroupRow.addValue(columnGroup ? columnGroup.headerName || columnGroup.groupId : '');\n      });\n    }\n  }\n  const mainHeaderRow = new CSVRow({\n    csvOptions,\n    sanitizeCellValue\n  });\n  filteredColumns.forEach(column => {\n    mainHeaderRow.addValue(column.headerName || column.field);\n  });\n  headerRows.push(mainHeaderRow);\n  const CSVHead = `${headerRows.map(row => row.getRowString()).join('\\r\\n')}\\r\\n`;\n  return `${CSVHead}${CSVBody}`.trim();\n}","import * as React from 'react';\nimport { useGridApiOptionHandler, useGridNativeEventListener } from '../../utils';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { serializeCellValue } from '../export/serializers/csvSerializer';\nfunction writeToClipboardPolyfill(data) {\n  const span = document.createElement('span');\n  span.style.whiteSpace = 'pre';\n  span.style.userSelect = 'all';\n  span.style.opacity = '0px';\n  span.textContent = data;\n  document.body.appendChild(span);\n  const range = document.createRange();\n  range.selectNode(span);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(span);\n  }\n}\nfunction copyToClipboard(data) {\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(data).catch(() => {\n      writeToClipboardPolyfill(data);\n    });\n  } else {\n    writeToClipboardPolyfill(data);\n  }\n}\nfunction hasNativeSelection(element) {\n  // When getSelection is called on an <iframe> that is not displayed Firefox will return null.\n  if (window.getSelection()?.toString()) {\n    return true;\n  }\n\n  // window.getSelection() returns an empty string in Firefox for selections inside a form element.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=85686.\n  // Instead, we can use element.selectionStart that is only defined on form elements.\n  if (element && (element.selectionEnd || 0) - (element.selectionStart || 0) > 0) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @requires useGridCsvExport (method)\n * @requires useGridSelection (method)\n */\nexport const useGridClipboard = (apiRef, props) => {\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.clipboardExport : ignoreValueFormatterProp) || false;\n  const clipboardCopyCellDelimiter = props.clipboardCopyCellDelimiter;\n  const handleCopy = React.useCallback(event => {\n    if (!((event.ctrlKey || event.metaKey) && event.key.toLowerCase() === 'c' && !event.shiftKey && !event.altKey)) {\n      return;\n    }\n\n    // Do nothing if there's a native selection\n    if (hasNativeSelection(event.target)) {\n      return;\n    }\n    let textToCopy = '';\n    const selectedRows = apiRef.current.getSelectedRows();\n    if (selectedRows.size > 0) {\n      textToCopy = apiRef.current.getDataAsCsv({\n        includeHeaders: false,\n        delimiter: clipboardCopyCellDelimiter,\n        shouldAppendQuotes: false,\n        escapeFormulas: false\n      });\n    } else {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell) {\n        const cellParams = apiRef.current.getCellParams(focusedCell.id, focusedCell.field);\n        textToCopy = serializeCellValue(cellParams, {\n          csvOptions: {\n            delimiter: clipboardCopyCellDelimiter,\n            shouldAppendQuotes: false,\n            escapeFormulas: false\n          },\n          ignoreValueFormatter\n        });\n      }\n    }\n    textToCopy = apiRef.current.unstable_applyPipeProcessors('clipboardCopy', textToCopy);\n    if (textToCopy) {\n      copyToClipboard(textToCopy);\n      apiRef.current.publishEvent('clipboardCopy', textToCopy);\n    }\n  }, [apiRef, ignoreValueFormatter, clipboardCopyCellDelimiter]);\n  useGridNativeEventListener(apiRef, apiRef.current.rootElementRef, 'keydown', handleCopy);\n  useGridApiOptionHandler(apiRef, 'clipboardCopy', props.onClipboardCopy);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { gridColumnMenuSelector } from './columnMenuSelector';\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from '../columns/gridColumnsSelector';\nexport const columnMenuStateInitializer = state => _extends({}, state, {\n  columnMenu: {\n    open: false\n  }\n});\n\n/**\n * @requires useGridColumnResize (event)\n * @requires useGridInfiniteLoader (event)\n */\nexport const useGridColumnMenu = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridColumnMenu');\n\n  /**\n   * API METHODS\n   */\n  const showColumnMenu = React.useCallback(field => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    const newState = {\n      open: true,\n      field\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        if (state.columnMenu.open && state.columnMenu.field === field) {\n          return state;\n        }\n        logger.debug('Opening Column Menu');\n        return _extends({}, state, {\n          columnMenu: {\n            open: true,\n            field\n          }\n        });\n      });\n      apiRef.current.hidePreferences();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const hideColumnMenu = React.useCallback(() => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    if (columnMenuState.field) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef);\n      let fieldToFocus = columnMenuState.field;\n\n      // If the column was removed from the grid, we need to find the closest visible field\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      }\n\n      // If the field to focus is hidden, we need to find the closest visible field\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n      apiRef.current.setColumnHeaderFocus(fieldToFocus);\n    }\n    const newState = {\n      open: false,\n      field: undefined\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        logger.debug('Hiding Column Menu');\n        return _extends({}, state, {\n          columnMenu: newState\n        });\n      });\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const toggleColumnMenu = React.useCallback(field => {\n    logger.debug('Toggle Column Menu');\n    const columnMenu = gridColumnMenuSelector(apiRef.current.state);\n    if (!columnMenu.open || columnMenu.field !== field) {\n      showColumnMenu(field);\n    } else {\n      hideColumnMenu();\n    }\n  }, [apiRef, logger, showColumnMenu, hideColumnMenu]);\n  const columnMenuApi = {\n    showColumnMenu,\n    hideColumnMenu,\n    toggleColumnMenu\n  };\n  useGridApiMethod(apiRef, columnMenuApi, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStart', hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerWheel', apiRef.current.hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerTouchMove', apiRef.current.hideColumnMenu);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnFieldsSelector, gridColumnDefinitionsSelector, gridColumnLookupSelector, gridColumnsStateSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from './gridColumnsSelector';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridRegisterPipeProcessor, useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { EMPTY_PINNED_COLUMN_FIELDS } from './gridColumnsInterfaces';\nimport { hydrateColumnsWidth, createColumnsState, COLUMNS_DIMENSION_PROPERTIES } from './gridColumnsUtils';\nimport { GridPreferencePanelsValue } from '../preferencesPanel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const columnsStateInitializer = (state, props, apiRef) => {\n  const columnsState = createColumnsState({\n    apiRef,\n    columnsToUpsert: props.columns,\n    initialState: props.initialState?.columns,\n    columnVisibilityModel: props.columnVisibilityModel ?? props.initialState?.columns?.columnVisibilityModel ?? {},\n    keepOnlyColumnsToUpsert: true\n  });\n  return _extends({}, state, {\n    columns: columnsState,\n    // In pro/premium, this part of the state is defined. We give it an empty but defined value\n    // for the community version.\n    pinnedColumns: state.pinnedColumns ?? EMPTY_PINNED_COLUMN_FIELDS\n  });\n};\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridDimensions (method, event) - can be after\n * TODO: Impossible priority - useGridParamsApi also needs to be after useGridColumns\n */\nexport function useGridColumns(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useGridColumns');\n  const previousColumnsProp = React.useRef(props.columns);\n  apiRef.current.registerControlState({\n    stateId: 'visibleColumns',\n    propModel: props.columnVisibilityModel,\n    propOnChange: props.onColumnVisibilityModelChange,\n    stateSelector: gridColumnVisibilityModelSelector,\n    changeEvent: 'columnVisibilityModelChange'\n  });\n  const setGridColumnsState = React.useCallback(columnsState => {\n    logger.debug('Updating columns state.');\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    apiRef.current.updateRenderContext?.();\n    apiRef.current.forceUpdate();\n  }, [logger, apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const getColumn = React.useCallback(field => gridColumnLookupSelector(apiRef)[field], [apiRef]);\n  const getAllColumns = React.useCallback(() => gridColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getVisibleColumns = React.useCallback(() => gridVisibleColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getColumnIndex = React.useCallback((field, useVisibleColumns = true) => {\n    const columns = useVisibleColumns ? gridVisibleColumnDefinitionsSelector(apiRef) : gridColumnDefinitionsSelector(apiRef);\n    return columns.findIndex(col => col.field === field);\n  }, [apiRef]);\n  const getColumnPosition = React.useCallback(field => {\n    const index = getColumnIndex(field);\n    return gridColumnPositionsSelector(apiRef)[index];\n  }, [apiRef, getColumnIndex]);\n  const setColumnVisibilityModel = React.useCallback(model => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    if (currentModel !== model) {\n      apiRef.current.setState(state => _extends({}, state, {\n        columns: createColumnsState({\n          apiRef,\n          columnsToUpsert: [],\n          initialState: undefined,\n          columnVisibilityModel: model,\n          keepOnlyColumnsToUpsert: false\n        })\n      }));\n      apiRef.current.updateRenderContext?.();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef]);\n  const updateColumns = React.useCallback(columns => {\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: columns,\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, setGridColumnsState]);\n  const setColumnVisibility = React.useCallback((field, isVisible) => {\n    const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n    const isCurrentlyVisible = columnVisibilityModel[field] ?? true;\n    if (isVisible !== isCurrentlyVisible) {\n      const newModel = _extends({}, columnVisibilityModel, {\n        [field]: isVisible\n      });\n      apiRef.current.setColumnVisibilityModel(newModel);\n    }\n  }, [apiRef]);\n  const getColumnIndexRelativeToVisibleColumns = React.useCallback(field => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    return allColumns.findIndex(col => col === field);\n  }, [apiRef]);\n  const setColumnIndex = React.useCallback((field, targetIndexPosition) => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    const oldIndexPosition = getColumnIndexRelativeToVisibleColumns(field);\n    if (oldIndexPosition === targetIndexPosition) {\n      return;\n    }\n    logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);\n    const updatedColumns = [...allColumns];\n    const fieldRemoved = updatedColumns.splice(oldIndexPosition, 1)[0];\n    updatedColumns.splice(targetIndexPosition, 0, fieldRemoved);\n    setGridColumnsState(_extends({}, gridColumnsStateSelector(apiRef.current.state), {\n      orderedFields: updatedColumns\n    }));\n    const params = {\n      column: apiRef.current.getColumn(field),\n      targetIndex: apiRef.current.getColumnIndexRelativeToVisibleColumns(field),\n      oldIndex: oldIndexPosition\n    };\n    apiRef.current.publishEvent('columnIndexChange', params);\n  }, [apiRef, logger, setGridColumnsState, getColumnIndexRelativeToVisibleColumns]);\n  const setColumnWidth = React.useCallback((field, width) => {\n    logger.debug(`Updating column ${field} width to ${width}`);\n    const columnsState = gridColumnsStateSelector(apiRef.current.state);\n    const column = columnsState.lookup[field];\n    const newColumn = _extends({}, column, {\n      width,\n      hasBeenResized: true\n    });\n    setGridColumnsState(hydrateColumnsWidth(_extends({}, columnsState, {\n      lookup: _extends({}, columnsState.lookup, {\n        [field]: newColumn\n      })\n    }), apiRef.current.getRootDimensions()));\n    apiRef.current.publishEvent('columnWidthChange', {\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: newColumn,\n      width\n    });\n  }, [apiRef, logger, setGridColumnsState]);\n  const columnApi = {\n    getColumn,\n    getAllColumns,\n    getColumnIndex,\n    getColumnPosition,\n    getVisibleColumns,\n    getColumnIndexRelativeToVisibleColumns,\n    updateColumns,\n    setColumnVisibilityModel,\n    setColumnVisibility,\n    setColumnWidth\n  };\n  const columnReorderApi = {\n    setColumnIndex\n  };\n  useGridApiMethod(apiRef, columnApi, 'public');\n  useGridApiMethod(apiRef, columnReorderApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const columnsStateToExport = {};\n    const columnVisibilityModelToExport = gridColumnVisibilityModelSelector(apiRef);\n    const shouldExportColumnVisibilityModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.columnVisibilityModel != null ||\n    // Always export if the model has been initialized\n    // TODO v6 Do a nullish check instead to export even if the initial model equals \"{}\"\n    Object.keys(props.initialState?.columns?.columnVisibilityModel ?? {}).length > 0 ||\n    // Always export if the model is not empty\n    Object.keys(columnVisibilityModelToExport).length > 0;\n    if (shouldExportColumnVisibilityModel) {\n      columnsStateToExport.columnVisibilityModel = columnVisibilityModelToExport;\n    }\n    columnsStateToExport.orderedFields = gridColumnFieldsSelector(apiRef);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const dimensions = {};\n    columns.forEach(colDef => {\n      if (colDef.hasBeenResized) {\n        const colDefDimensions = {};\n        COLUMNS_DIMENSION_PROPERTIES.forEach(propertyName => {\n          let propertyValue = colDef[propertyName];\n          if (propertyValue === Infinity) {\n            propertyValue = -1;\n          }\n          colDefDimensions[propertyName] = propertyValue;\n        });\n        dimensions[colDef.field] = colDefDimensions;\n      }\n    });\n    if (Object.keys(dimensions).length > 0) {\n      columnsStateToExport.dimensions = dimensions;\n    }\n    return _extends({}, prevState, {\n      columns: columnsStateToExport\n    });\n  }, [apiRef, props.columnVisibilityModel, props.initialState?.columns]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const columnVisibilityModelToImport = context.stateToRestore.columns?.columnVisibilityModel;\n    const initialState = context.stateToRestore.columns;\n    if (columnVisibilityModelToImport == null && initialState == null) {\n      return params;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState,\n      columnVisibilityModel: columnVisibilityModelToImport,\n      keepOnlyColumnsToUpsert: false\n    });\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    if (initialState != null) {\n      apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    }\n    return params;\n  }, [apiRef]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.columns) {\n      const ColumnsPanel = props.slots.columnsPanel;\n      return /*#__PURE__*/_jsx(ColumnsPanel, _extends({}, props.slotProps?.columnsPanel));\n    }\n    return initialValue;\n  }, [props.slots.columnsPanel, props.slotProps?.columnsPanel]);\n  const addColumnMenuItems = React.useCallback(columnMenuItems => {\n    if (props.disableColumnSelector) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuColumnsItem'];\n  }, [props.disableColumnSelector]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItems);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n\n  /*\n   * EVENTS\n   */\n\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      setGridColumnsState(hydrateColumnsWidth(gridColumnsStateSelector(apiRef.current.state), apiRef.current.getRootDimensions()));\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n\n  /**\n   * APPLIERS\n   */\n  const hydrateColumns = React.useCallback(() => {\n    logger.info(`Columns pipe processing have changed, regenerating the columns`);\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, logger, setGridColumnsState]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateColumns', hydrateColumns);\n\n  /*\n   * EFFECTS\n   */\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    logger.info(`GridColumns have changed, new length ${props.columns.length}`);\n    if (previousColumnsProp.current === props.columns) {\n      return;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      initialState: undefined,\n      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`\n      columnsToUpsert: props.columns,\n      keepOnlyColumnsToUpsert: true\n    });\n    previousColumnsProp.current = props.columns;\n    setGridColumnsState(columnsState);\n  }, [logger, apiRef, setGridColumnsState, props.columns]);\n  React.useEffect(() => {\n    if (props.columnVisibilityModel !== undefined) {\n      apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel);\n    }\n  }, [apiRef, logger, props.columnVisibilityModel]);\n}\nfunction mergeColumnsState(columnsState) {\n  return state => _extends({}, state, {\n    columns: columnsState\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridDensitySelector } from './densitySelector';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nexport const densityStateInitializer = (state, props) => _extends({}, state, {\n  density: props.initialState?.density ?? props.density ?? 'standard'\n});\nexport const useGridDensity = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useDensity');\n  apiRef.current.registerControlState({\n    stateId: 'density',\n    propModel: props.density,\n    propOnChange: props.onDensityChange,\n    stateSelector: gridDensitySelector,\n    changeEvent: 'densityChange'\n  });\n  const setDensity = useEventCallback(newDensity => {\n    const currentDensity = gridDensitySelector(apiRef.current.state);\n    if (currentDensity === newDensity) {\n      return;\n    }\n    logger.debug(`Set grid density to ${newDensity}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: newDensity\n    }));\n  });\n  const densityApi = {\n    setDensity\n  };\n  useGridApiMethod(apiRef, densityApi, 'public');\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedDensity = gridDensitySelector(apiRef.current.state);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `density` is controlled\n    props.density != null ||\n    // Always export if the `density` has been initialized\n    props.initialState?.density != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      density: exportedDensity\n    });\n  }, [apiRef, props.density, props.initialState?.density]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredDensity = context.stateToRestore?.density ? context.stateToRestore.density : gridDensitySelector(apiRef.current.state);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: restoredDensity\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  React.useEffect(() => {\n    if (props.density) {\n      apiRef.current.setDensity(props.density);\n    }\n  }, [apiRef, props.density]);\n};","import { gridColumnDefinitionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns';\nimport { gridFilteredSortedRowIdsSelector } from '../filter';\nimport { gridPinnedRowsSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\nexport const getColumnsToExport = ({\n  apiRef,\n  options\n}) => {\n  const columns = gridColumnDefinitionsSelector(apiRef);\n  if (options.fields) {\n    return options.fields.reduce((currentColumns, field) => {\n      const column = columns.find(col => col.field === field);\n      if (column) {\n        currentColumns.push(column);\n      }\n      return currentColumns;\n    }, []);\n  }\n  const validColumns = options.allColumns ? columns : gridVisibleColumnDefinitionsSelector(apiRef);\n  return validColumns.filter(column => !column.disableExport);\n};\nexport const defaultGetRowsToExport = ({\n  apiRef\n}) => {\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  const rowTree = gridRowTreeSelector(apiRef);\n  const selectedRows = apiRef.current.getSelectedRows();\n  const bodyRows = filteredSortedRowIds.filter(id => rowTree[id].type !== 'footer');\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsIds = pinnedRows?.top?.map(row => row.id) || [];\n  const bottomPinnedRowsIds = pinnedRows?.bottom?.map(row => row.id) || [];\n  bodyRows.unshift(...topPinnedRowsIds);\n  bodyRows.push(...bottomPinnedRowsIds);\n  if (selectedRows.size > 0) {\n    return bodyRows.filter(id => selectedRows.has(id));\n  }\n  return bodyRows;\n};","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { exportAs } from '../../../utils/exportAs';\nimport { buildCSV } from './serializers/csvSerializer';\nimport { getColumnsToExport, defaultGetRowsToExport } from './utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridCsvExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridCsvExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridCsvExport');\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.csvExport : ignoreValueFormatterProp) || false;\n  const getDataAsCsv = React.useCallback((options = {}) => {\n    logger.debug(`Get data as CSV`);\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const getRowsToExport = options.getRowsToExport ?? defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    return buildCSV({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      csvOptions: {\n        delimiter: options.delimiter || ',',\n        shouldAppendQuotes: options.shouldAppendQuotes ?? true,\n        includeHeaders: options.includeHeaders ?? true,\n        includeColumnGroupsHeaders: options.includeColumnGroupsHeaders ?? true,\n        escapeFormulas: options.escapeFormulas ?? true\n      },\n      ignoreValueFormatter,\n      apiRef\n    });\n  }, [logger, apiRef, ignoreValueFormatter]);\n  const exportDataAsCsv = React.useCallback(options => {\n    logger.debug(`Export data as CSV`);\n    const csv = getDataAsCsv(options);\n    const blob = new Blob([options?.utf8WithBom ? new Uint8Array([0xef, 0xbb, 0xbf]) : '', csv], {\n      type: 'text/csv'\n    });\n    exportAs(blob, 'csv', options?.fileName);\n  }, [logger, getDataAsCsv]);\n  const csvExportApi = {\n    getDataAsCsv,\n    exportDataAsCsv\n  };\n  useGridApiMethod(apiRef, csvExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.csvOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridCsvExportMenuItem, {\n        options: options.csvOptions\n      }),\n      componentName: 'csvExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","/**\n * I have hesitated to use https://github.com/eligrey/FileSaver.js.\n * If we get bug reports that this project solves, we should consider using it.\n *\n * Related resources.\n * https://blog.logrocket.com/programmatic-file-downloads-in-the-browser-9a5186298d5c/\n * https://github.com/mbrn/filefy/blob/ec4ed0b7415d93be7158c23029f2ea1fa0b8e2d9/src/core/BaseBuilder.ts\n * https://unpkg.com/browse/@progress/kendo-file-saver@1.0.7/dist/es/save-as.js\n * https://github.com/ag-grid/ag-grid/blob/9565c219b6210aa85fa833c929d0728f9d163a91/community-modules/csv-export/src/csvExport/downloader.ts\n */\n\nexport function exportAs(blob, extension = 'csv', filename = document.title || 'untitled') {\n  const fullName = `${filename}.${extension}`;\n\n  // Test download attribute first\n  // https://github.com/eligrey/FileSaver.js/issues/193\n  if ('download' in HTMLAnchorElement.prototype) {\n    // Create an object URL for the blob object\n    const url = URL.createObjectURL(blob);\n\n    // Create a new anchor element\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fullName;\n\n    // Programmatically trigger a click on the anchor element\n    // Useful if you want the download to happen automatically\n    // Without attaching the anchor element to the DOM\n    a.click();\n\n    // https://github.com/eligrey/FileSaver.js/issues/205\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    });\n    return;\n  }\n  throw new Error('MUI X: exportAs not supported.');\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridDensityFactorSelector } from '../density';\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPageCountSelector, gridPaginationModelSelector } from './gridPaginationSelector';\nimport { getPageCount, defaultPageSize, throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel, getValidPage } from './gridPaginationUtils';\nexport const getDerivedPaginationModel = (paginationState, signature, paginationModelProp) => {\n  let paginationModel = paginationState.paginationModel;\n  const rowCount = paginationState.rowCount;\n  const pageSize = paginationModelProp?.pageSize ?? paginationModel.pageSize;\n  const page = paginationModelProp?.page ?? paginationModel.page;\n  const pageCount = getPageCount(rowCount, pageSize, page);\n  if (paginationModelProp && (paginationModelProp?.page !== paginationModel.page || paginationModelProp?.pageSize !== paginationModel.pageSize)) {\n    paginationModel = paginationModelProp;\n  }\n  const validPage = getValidPage(paginationModel.page, pageCount);\n  if (validPage !== paginationModel.page) {\n    paginationModel = _extends({}, paginationModel, {\n      page: validPage\n    });\n  }\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, signature);\n  return paginationModel;\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPaginationModel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationModel');\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  apiRef.current.registerControlState({\n    stateId: 'paginationModel',\n    propModel: props.paginationModel,\n    propOnChange: props.onPaginationModelChange,\n    stateSelector: gridPaginationModelSelector,\n    changeEvent: 'paginationModelChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPage = React.useCallback(page => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (page === currentModel.page) {\n      return;\n    }\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setPaginationModel({\n      page,\n      pageSize: currentModel.pageSize\n    });\n  }, [apiRef, logger]);\n  const setPageSize = React.useCallback(pageSize => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (pageSize === currentModel.pageSize) {\n      return;\n    }\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setPaginationModel({\n      pageSize,\n      page: currentModel.page\n    });\n  }, [apiRef, logger]);\n  const setPaginationModel = React.useCallback(paginationModel => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (paginationModel === currentModel) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationModel' to\", paginationModel);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n  }, [apiRef, logger, props.signature]);\n  const paginationModelApi = {\n    setPage,\n    setPageSize,\n    setPaginationModel\n  };\n  useGridApiMethod(apiRef, paginationModelApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const shouldExportPaginationModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationModel` is controlled\n    props.paginationModel != null ||\n    // Always export if the `paginationModel` has been initialized\n    props.initialState?.pagination?.paginationModel != null ||\n    // Export if `page` or `pageSize` is not equal to the default value\n    paginationModel.page !== 0 && paginationModel.pageSize !== defaultPageSize(props.autoPageSize);\n    if (!shouldExportPaginationModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        paginationModel\n      })\n    });\n  }, [apiRef, props.paginationModel, props.initialState?.pagination?.paginationModel, props.autoPageSize]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const paginationModel = context.stateToRestore.pagination?.paginationModel ? _extends({}, getDefaultGridPaginationModel(props.autoPageSize), context.stateToRestore.pagination?.paginationModel) : gridPaginationModelSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n    return params;\n  }, [apiRef, props.autoPageSize, props.signature]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = () => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    if (apiRef.current.virtualScrollerRef?.current) {\n      apiRef.current.scrollToIndexes({\n        rowIndex: paginationModel.page * paginationModel.pageSize\n      });\n    }\n  };\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    if (!props.autoPageSize) {\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions();\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  const handleRowCountChange = React.useCallback(newRowCount => {\n    if (newRowCount == null) {\n      return;\n    }\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const pageCount = gridPageCountSelector(apiRef);\n    if (paginationModel.page > pageCount - 1) {\n      apiRef.current.setPage(Math.max(0, pageCount - 1));\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n  useGridApiEventHandler(apiRef, 'rowCountChange', handleRowCountChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, props.paginationModel)\n      })\n    }));\n  }, [apiRef, props.paginationModel, props.paginationMode, props.signature]);\n  React.useEffect(handleUpdateAutoPageSize, [handleUpdateAutoPageSize]);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterStrategyProcessor = (apiRef, strategyName, group, processor) => {\n  const registerPreProcessor = React.useCallback(() => {\n    apiRef.current.registerStrategyProcessor(strategyName, group, processor);\n  }, [apiRef, processor, group, strategyName]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { defaultMemoize } from 'reselect';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useLazyRef } from '../../utils/useLazyRef';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { GridPreferencePanelsValue } from '../preferencesPanel/gridPreferencePanelsValue';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { gridFilterModelSelector } from './gridFilterSelector';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { gridRowsLookupSelector } from '../rows';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\nimport { buildAggregatedFilterApplier, sanitizeFilterModel, mergeStateWithFilterModel, cleanFilterItem, passFilterLogic, shouldQuickFilterExcludeHiddenColumns } from './gridFilterUtils';\nimport { isDeepEqual } from '../../../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const filterStateInitializer = (state, props, apiRef) => {\n  const filterModel = props.filterModel ?? props.initialState?.filter?.filterModel ?? getDefaultGridFilterModel();\n  return _extends({}, state, {\n    filter: {\n      filterModel: sanitizeFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef),\n      filteredRowsLookup: {},\n      filteredDescendantCountLookup: {}\n    },\n    visibleRowsLookup: {}\n  });\n};\nconst getVisibleRowsLookup = params => {\n  // For flat tree, the `visibleRowsLookup` and the `filteredRowsLookup` are equals since no row is collapsed.\n  return params.filteredRowsLookup;\n};\nfunction getVisibleRowsLookupState(apiRef, state) {\n  return apiRef.current.applyStrategyProcessor('visibleRowsLookupCreation', {\n    tree: state.rows.tree,\n    filteredRowsLookup: state.filter.filteredRowsLookup\n  });\n}\nfunction createMemoizedValues() {\n  return defaultMemoize(Object.values);\n}\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n * @requires useGridRows (event)\n */\nexport const useGridFilter = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFilter');\n  apiRef.current.registerControlState({\n    stateId: 'filter',\n    propModel: props.filterModel,\n    propOnChange: props.onFilterModelChange,\n    stateSelector: gridFilterModelSelector,\n    changeEvent: 'filterModelChange'\n  });\n  const updateFilteredRows = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const filterModel = gridFilterModelSelector(state, apiRef.current.instanceId);\n      const filterState = apiRef.current.getFilterState(filterModel);\n      const newState = _extends({}, state, {\n        filter: _extends({}, state.filter, filterState)\n      });\n      const visibleRowsLookupState = getVisibleRowsLookupState(apiRef, newState);\n      return _extends({}, newState, {\n        visibleRowsLookup: visibleRowsLookupState\n      });\n    });\n    apiRef.current.publishEvent('filteredRowsSet');\n  }, [apiRef]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.filterable === false || props.disableColumnFilter) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuFilterItem'];\n  }, [props.disableColumnFilter]);\n\n  /**\n   * API METHODS\n   */\n  const applyFilters = React.useCallback(() => {\n    updateFilteredRows();\n    apiRef.current.forceUpdate();\n  }, [apiRef, updateFilteredRows]);\n  const upsertFilterItem = React.useCallback(item => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = [...filterModel.items];\n    const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n    if (itemIndex === -1) {\n      items.push(item);\n    } else {\n      items[itemIndex] = item;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItem');\n  }, [apiRef]);\n  const upsertFilterItems = React.useCallback(items => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const existingItems = [...filterModel.items];\n    items.forEach(item => {\n      const itemIndex = existingItems.findIndex(filterItem => filterItem.id === item.id);\n      if (itemIndex === -1) {\n        existingItems.push(item);\n      } else {\n        existingItems[itemIndex] = item;\n      }\n    });\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: existingItems\n    }), 'upsertFilterItems');\n  }, [apiRef]);\n  const deleteFilterItem = React.useCallback(itemToDelete => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = filterModel.items.filter(item => item.id !== itemToDelete.id);\n    if (items.length === filterModel.items.length) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'deleteFilterItem');\n  }, [apiRef]);\n  const showFilterPanel = React.useCallback((targetColumnField, panelId, labelId) => {\n    logger.debug('Displaying filter panel');\n    if (targetColumnField) {\n      const filterModel = gridFilterModelSelector(apiRef);\n      const filterItemsWithValue = filterModel.items.filter(item => {\n        if (item.value !== undefined) {\n          // Some filters like `isAnyOf` support array as `item.value`.\n          // If array is empty, we want to remove it from the filter model.\n          if (Array.isArray(item.value) && item.value.length === 0) {\n            return false;\n          }\n          return true;\n        }\n        const column = apiRef.current.getColumn(item.field);\n        const filterOperator = column.filterOperators?.find(operator => operator.value === item.operator);\n        const requiresFilterValue = typeof filterOperator?.requiresFilterValue === 'undefined' ? true : filterOperator?.requiresFilterValue;\n\n        // Operators like `isEmpty` don't have and don't require `item.value`.\n        // So we don't want to remove them from the filter model if `item.value === undefined`.\n        // See https://github.com/mui/mui-x/issues/5402\n        if (requiresFilterValue) {\n          return false;\n        }\n        return true;\n      });\n      let newFilterItems;\n      const filterItemOnTarget = filterItemsWithValue.find(item => item.field === targetColumnField);\n      const targetColumn = apiRef.current.getColumn(targetColumnField);\n      if (filterItemOnTarget) {\n        newFilterItems = filterItemsWithValue;\n      } else if (props.disableMultipleColumnsFiltering) {\n        newFilterItems = [cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      } else {\n        newFilterItems = [...filterItemsWithValue, cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      }\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n    apiRef.current.showPreferences(GridPreferencePanelsValue.filters, panelId, labelId);\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const hideFilterPanel = React.useCallback(() => {\n    logger.debug('Hiding filter panel');\n    apiRef.current.hidePreferences();\n  }, [apiRef, logger]);\n  const setFilterLogicOperator = React.useCallback(logicOperator => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.logicOperator === logicOperator) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      logicOperator\n    }), 'changeLogicOperator');\n  }, [apiRef]);\n  const setQuickFilterValues = React.useCallback(values => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (isDeepEqual(filterModel.quickFilterValues, values)) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      quickFilterValues: [...values]\n    }));\n  }, [apiRef]);\n  const setFilterModel = React.useCallback((model, reason) => {\n    const currentModel = gridFilterModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug('Setting filter model');\n      apiRef.current.updateControlState('filter', mergeStateWithFilterModel(model, props.disableMultipleColumnsFiltering, apiRef), reason);\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const getFilterState = React.useCallback(inputFilterModel => {\n    const filterModel = sanitizeFilterModel(inputFilterModel, props.disableMultipleColumnsFiltering, apiRef);\n    const isRowMatchingFilters = props.filterMode === 'client' ? buildAggregatedFilterApplier(filterModel, apiRef, props.disableEval) : null;\n    const filterResult = apiRef.current.applyStrategyProcessor('filtering', {\n      isRowMatchingFilters,\n      filterModel: filterModel ?? getDefaultGridFilterModel()\n    });\n    return _extends({}, filterResult, {\n      filterModel\n    });\n  }, [props.disableMultipleColumnsFiltering, props.filterMode, props.disableEval, apiRef]);\n  const filterApi = {\n    setFilterLogicOperator,\n    unstable_applyFilters: applyFilters,\n    deleteFilterItem,\n    upsertFilterItem,\n    upsertFilterItems,\n    setFilterModel,\n    showFilterPanel,\n    hideFilterPanel,\n    setQuickFilterValues,\n    ignoreDiacritics: props.ignoreDiacritics,\n    getFilterState\n  };\n  useGridApiMethod(apiRef, filterApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const filterModelToExport = gridFilterModelSelector(apiRef);\n    const shouldExportFilterModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.filterModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.filter?.filterModel != null ||\n    // Export if the model is not equal to the default value\n    !isDeepEqual(filterModelToExport, getDefaultGridFilterModel());\n    if (!shouldExportFilterModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      filter: {\n        filterModel: filterModelToExport\n      }\n    });\n  }, [apiRef, props.filterModel, props.initialState?.filter?.filterModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const filterModel = context.stateToRestore.filter?.filterModel;\n    if (filterModel == null) {\n      return params;\n    }\n    apiRef.current.updateControlState('filter', mergeStateWithFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef), 'restoreState');\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.unstable_applyFilters]\n    });\n  }, [apiRef, props.disableMultipleColumnsFiltering]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.filters) {\n      const FilterPanel = props.slots.filterPanel;\n      return /*#__PURE__*/_jsx(FilterPanel, _extends({}, props.slotProps?.filterPanel));\n    }\n    return initialValue;\n  }, [props.slots.filterPanel, props.slotProps?.filterPanel]);\n  const {\n    getRowId\n  } = props;\n  const getRowsRef = useLazyRef(createMemoizedValues);\n  const flatFilteringMethod = React.useCallback(params => {\n    if (props.filterMode !== 'client' || !params.isRowMatchingFilters) {\n      return {\n        filteredRowsLookup: {},\n        filteredDescendantCountLookup: {}\n      };\n    }\n    const dataRowIdToModelLookup = gridRowsLookupSelector(apiRef);\n    const filteredRowsLookup = {};\n    const {\n      isRowMatchingFilters\n    } = params;\n    const filterCache = {};\n    const result = {\n      passingFilterItems: null,\n      passingQuickFilterValues: null\n    };\n    const rows = getRowsRef.current(apiRef.current.state.rows.dataRowIdToModelLookup);\n    for (let i = 0; i < rows.length; i += 1) {\n      const row = rows[i];\n      const id = getRowId ? getRowId(row) : row.id;\n      isRowMatchingFilters(row, undefined, result);\n      const isRowPassing = passFilterLogic([result.passingFilterItems], [result.passingQuickFilterValues], params.filterModel, apiRef, filterCache);\n      filteredRowsLookup[id] = isRowPassing;\n    }\n    const footerId = 'auto-generated-group-footer-root';\n    const footer = dataRowIdToModelLookup[footerId];\n    if (footer) {\n      filteredRowsLookup[footerId] = true;\n    }\n    return {\n      filteredRowsLookup,\n      filteredDescendantCountLookup: {}\n    };\n  }, [apiRef, props.filterMode, getRowId, getRowsRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'filtering', flatFilteringMethod);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'visibleRowsLookupCreation', getVisibleRowsLookup);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnsChange = React.useCallback(() => {\n    logger.debug('onColUpdated - GridColumns changed, applying filters');\n    const filterModel = gridFilterModelSelector(apiRef);\n    const columnsLookup = gridColumnLookupSelector(apiRef);\n    const newFilterItems = filterModel.items.filter(item => item.field && columnsLookup[item.field]);\n    if (newFilterItems.length < filterModel.items.length) {\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n  }, [apiRef, logger]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'filtering') {\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef]);\n  const updateVisibleRowsLookupState = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        visibleRowsLookup: getVisibleRowsLookupState(apiRef, state)\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n\n  // Do not call `apiRef.current.forceUpdate` to avoid re-render before updating the sorted rows.\n  // Otherwise, the state is not consistent during the render\n  useGridApiEventHandler(apiRef, 'rowsSet', updateFilteredRows);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', updateVisibleRowsLookupState);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.quickFilterValues && shouldQuickFilterExcludeHiddenColumns(filterModel)) {\n      // re-apply filters because the quick filter results may have changed\n      apiRef.current.unstable_applyFilters();\n    }\n  });\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.unstable_applyFilters();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.filterModel !== undefined) {\n      apiRef.current.setFilterModel(props.filterModel);\n    }\n  }, [apiRef, logger, props.filterModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventcallback } from '@mui/utils';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { gridFocusCellSelector, gridFocusColumnGroupHeaderSelector } from './gridFocusStateSelector';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { clamp } from '../../../utils/utils';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  }\n});\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const publishCellFocusOut = React.useCallback((cell, event) => {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if (focusedCell?.id === id && focusedCell?.field === field) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFilterFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header filter with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnGroupHeaderFocus = React.useCallback((field, depth, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell) {\n      apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        },\n        focus: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const getColumnGroupHeaderFocus = React.useCallback(() => gridFocusColumnGroupHeaderSelector(apiRef), [apiRef]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const pinnedRows = gridPinnedRowsSelector(apiRef);\n\n    // Include pinned rows as well\n    const currentPageRows = [].concat(pinnedRows.top || [], currentPage.rows, pinnedRows.bottom || []);\n    let rowIndexToFocus = currentPageRows.findIndex(row => row.id === id);\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n      if (rowIndexToFocus < currentPageRows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPageRows.length - 1);\n    const rowToFocus = currentPageRows[rowIndexToFocus];\n    if (!rowToFocus) {\n      return;\n    }\n    const colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || event.key === 'Shift' || isNavigationKey(event.key)) {\n      return;\n    }\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleColumnGroupHeaderFocus = React.useCallback(({\n    fields,\n    depth\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup !== null && focusedColumnGroup.depth === depth && fields.includes(focusedColumnGroup.field)) {\n      // This group cell has already been focused\n      return;\n    }\n    apiRef.current.setColumnGroupHeaderFocus(fields[0], depth, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback((_, event) => {\n    if (event.relatedTarget?.getAttribute('class')?.includes(gridClasses.columnHeader)) {\n      return;\n    }\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null,\n        columnHeaderFilter: null,\n        columnGroupHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseDown = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n      return;\n    }\n    if (cellParams?.id === focusedCell.id && cellParams?.field === focusedCell.field) {\n      return;\n    }\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n    if (cellElement?.contains(event.target)) {\n      return;\n    }\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate();\n\n      // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell?.id !== params.id || cell?.field !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    // If the focused cell is in a row which does not exist anymore, then remove the focus\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n    }\n  }, [apiRef]);\n  const handlePaginationModelChange = useEventcallback(() => {\n    const currentFocusedCell = gridFocusCellSelector(apiRef);\n    if (!currentFocusedCell) {\n      return;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const rowIsInCurrentPage = currentPage.rows.find(row => row.id === currentFocusedCell.id);\n    if (rowIsInCurrentPage) {\n      return;\n    }\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id: currentPage.rows[0].id,\n            field: visibleColumns[0].field\n          },\n          columnGroupHeader: null,\n          columnHeader: null,\n          columnHeaderFilter: null\n        }\n      });\n    });\n  });\n  const focusApi = {\n    setCellFocus,\n    setColumnHeaderFocus,\n    setColumnHeaderFilterFocus\n  };\n  const focusPrivateApi = {\n    moveFocusToRelativeCell,\n    setColumnGroupHeaderFocus,\n    getColumnGroupHeaderFocus\n  };\n  useGridApiMethod(apiRef, focusApi, 'public');\n  useGridApiMethod(apiRef, focusPrivateApi, 'private');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('mouseup', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('mouseup', handleDocumentClick);\n    };\n  }, [apiRef, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', handleCellMouseDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderFocus', handleColumnGroupHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n};","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { gridExpandedSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../colDef/gridCheckboxSelectionColDef';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nimport { gridFocusColumnGroupHeaderSelector } from '../focus';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../columnGrouping/gridColumnGroupsSelector';\nimport { gridHeaderFilteringEditFieldSelector, gridHeaderFilteringMenuSelector } from '../headerFiltering/gridHeaderFilteringSelectors';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { isEventTargetInPortal } from '../../../utils/domUtils';\nfunction enrichPageRowsWithPinnedRows(apiRef, rows) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef) || {};\n  return [...(pinnedRows.top || []), ...rows, ...(pinnedRows.bottom || [])];\n}\nconst getLeftColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  direction\n}) => {\n  if (direction === 'rtl') {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  } else if (direction === 'ltr') {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  }\n  return null;\n};\nconst getRightColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  direction\n}) => {\n  if (direction === 'rtl') {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  } else if (direction === 'ltr') {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  }\n  return null;\n};\n\n/**\n * @requires useGridSorting (method) - can be after\n * @requires useGridFilter (state) - can be after\n * @requires useGridColumns (state, method) - can be after\n * @requires useGridDimensions (method) - can be after\n * @requires useGridFocus (method) - can be after\n * @requires useGridScroll (method) - can be after\n * @requires useGridColumnSpanning (method) - can be after\n */\nexport const useGridKeyboardNavigation = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridKeyboardNavigation');\n  const initialCurrentPageRows = useGridVisibleRows(apiRef, props).rows;\n  const theme = useTheme();\n  const currentPageRows = React.useMemo(() => enrichPageRowsWithPinnedRows(apiRef, initialCurrentPageRows), [apiRef, initialCurrentPageRows]);\n  const headerFilteringEnabled = props.signature !== 'DataGrid' && props.headerFilters;\n\n  /**\n   * @param {number} colIndex Index of the column to focus\n   * @param {number} rowIndex index of the row to focus\n   * @param {string} closestColumnToUse Which closest column cell to use when the cell is spanned by `colSpan`.\n   * TODO replace with apiRef.current.moveFocusToRelativeCell()\n   */\n  const goToCell = React.useCallback((colIndex, rowId, closestColumnToUse = 'left') => {\n    const visibleSortedRows = gridExpandedSortedRowEntriesSelector(apiRef);\n    const nextCellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (nextCellColSpanInfo && nextCellColSpanInfo.spannedByColSpan) {\n      if (closestColumnToUse === 'left') {\n        colIndex = nextCellColSpanInfo.leftVisibleCellIndex;\n      } else if (closestColumnToUse === 'right') {\n        colIndex = nextCellColSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    // `scrollToIndexes` requires a rowIndex relative to all visible rows.\n    // Those rows do not include pinned rows, but pinned rows do not need scroll anyway.\n    const rowIndexRelativeToAllRows = visibleSortedRows.findIndex(row => row.id === rowId);\n    logger.debug(`Navigating to cell row ${rowIndexRelativeToAllRows}, col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex,\n      rowIndex: rowIndexRelativeToAllRows\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setCellFocus(rowId, field);\n  }, [apiRef, logger]);\n  const goToHeader = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef, logger]);\n  const goToHeaderFilter = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header filter col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFilterFocus(field, event);\n  }, [apiRef, logger]);\n  const goToGroupHeader = React.useCallback((colIndex, depth, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const {\n      field\n    } = apiRef.current.getVisibleColumns()[colIndex];\n    apiRef.current.setColumnGroupHeaderFocus(field, depth, event);\n  }, [apiRef, logger]);\n  const getRowIdFromIndex = React.useCallback(rowIndex => {\n    return currentPageRows[rowIndex]?.id;\n  }, [currentPageRows]);\n  const handleColumnHeaderKeyDown = React.useCallback((params, event) => {\n    const headerTitleNode = event.currentTarget.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n    const isFromInsideContent = !!headerTitleNode && headerTitleNode.contains(event.target);\n    if (isFromInsideContent && params.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // When focus is on a nested input, keyboard events have no effect to avoid conflicts with native events.\n      // There is one exception for the checkBoxHeader\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = currentPageRows.length > 0 ? 0 : null;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    const columnGroupMaxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (firstRowIndexInPage !== null) {\n            if (headerFilteringEnabled) {\n              goToHeaderFilter(colIndexBefore, event);\n            } else {\n              goToCell(colIndexBefore, getRowIdFromIndex(firstRowIndexInPage));\n            }\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (rightColIndex !== null) {\n            goToHeader(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (leftColIndex !== null) {\n            goToHeader(leftColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (columnGroupMaxDepth > 0) {\n            goToGroupHeader(colIndexBefore, columnGroupMaxDepth - 1, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeader(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeader(lastColIndex, event);\n          break;\n        }\n      case 'Enter':\n        {\n          if (event.ctrlKey || event.metaKey) {\n            apiRef.current.toggleColumnMenu(params.field);\n          }\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, headerFilteringEnabled, goToHeaderFilter, goToCell, getRowIdFromIndex, theme.direction, goToHeader, goToGroupHeader]);\n  const handleHeaderFilterKeyDown = React.useCallback((params, event) => {\n    const isEditing = gridHeaderFilteringEditFieldSelector(apiRef) === params.field;\n    const isHeaderMenuOpen = gridHeaderFilteringMenuSelector(apiRef) === params.field;\n    if (isEditing || isHeaderMenuOpen || !isNavigationKey(event.key)) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          const rowId = getRowIdFromIndex(firstRowIndexInPage);\n          if (firstRowIndexInPage !== null && rowId != null) {\n            goToCell(colIndexBefore, rowId);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (rightColIndex !== null) {\n            goToHeaderFilter(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (leftColIndex !== null) {\n            goToHeaderFilter(leftColIndex, event);\n          } else {\n            apiRef.current.setColumnHeaderFilterFocus(params.field, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          goToHeader(colIndexBefore, event);\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeaderFilter(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeaderFilter(lastColIndex, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeaderFilter, theme.direction, goToHeader, goToCell, getRowIdFromIndex]);\n  const handleColumnGroupHeaderKeyDown = React.useCallback((params, event) => {\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup === null) {\n      return;\n    }\n    const {\n      field: currentField,\n      depth: currentDepth\n    } = focusedColumnGroup;\n    const {\n      fields,\n      depth,\n      maxDepth\n    } = params;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const currentColIndex = apiRef.current.getColumnIndex(currentField);\n    const colIndexBefore = currentField ? apiRef.current.getColumnIndex(currentField) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (depth === maxDepth - 1) {\n            goToHeader(currentColIndex, event);\n          } else {\n            goToGroupHeader(currentColIndex, currentDepth + 1, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (depth > 0) {\n            goToGroupHeader(currentColIndex, currentDepth - 1, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const remainingRightColumns = fields.length - fields.indexOf(currentField) - 1;\n          if (currentColIndex + remainingRightColumns + 1 <= lastColIndex) {\n            goToGroupHeader(currentColIndex + remainingRightColumns + 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const remainingLeftColumns = fields.indexOf(currentField);\n          if (currentColIndex - remainingLeftColumns - 1 >= firstColIndex) {\n            goToGroupHeader(currentColIndex - remainingLeftColumns - 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToGroupHeader(firstColIndex, currentDepth, event);\n          break;\n        }\n      case 'End':\n        {\n          goToGroupHeader(lastColIndex, currentDepth, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeader, goToGroupHeader, goToCell, getRowIdFromIndex]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // Get the most recent params because the cell mode may have changed by another listener\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n    if (cellParams.cellMode === GridCellModes.Edit || !isNavigationKey(event.key)) {\n      return;\n    }\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (currentPageRows.length === 0) {\n      return;\n    }\n    const direction = theme.direction;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const rowIndexBefore = currentPageRows.findIndex(row => row.id === params.id);\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          // \"Enter\" is only triggered by the row / cell editing feature\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore + 1));\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (rowIndexBefore > firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore - 1));\n          } else if (headerFilteringEnabled) {\n            goToHeaderFilter(colIndexBefore, event);\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction\n          });\n          if (rightColIndex !== null) {\n            goToCell(rightColIndex, getRowIdFromIndex(rowIndexBefore), direction === 'rtl' ? 'left' : 'right');\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction\n          });\n          if (leftColIndex !== null) {\n            goToCell(leftColIndex, getRowIdFromIndex(rowIndexBefore), direction === 'rtl' ? 'right' : 'left');\n          }\n          break;\n        }\n      case 'Tab':\n        {\n          // \"Tab\" is only triggered by the row / cell editing feature\n          if (event.shiftKey && colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore), 'left');\n          } else if (!event.shiftKey && colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n          break;\n        }\n      case ' ':\n        {\n          const field = params.field;\n          if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n            break;\n          }\n          const colDef = params.colDef;\n          if (colDef &&\n          // `GRID_TREE_DATA_GROUPING_FIELD` from the Pro package\n          colDef.field === '__tree_data_group__') {\n            break;\n          }\n          if (!event.shiftKey && rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageUp':\n        {\n          // Go to the first row before going to header\n          const nextRowIndex = Math.max(rowIndexBefore - viewportPageSize, firstRowIndexInPage);\n          if (nextRowIndex !== rowIndexBefore && nextRowIndex >= firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(nextRowIndex));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'Home':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(firstColIndex, getRowIdFromIndex(firstRowIndexInPage));\n          } else {\n            goToCell(firstColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      case 'End':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(lastColIndex, getRowIdFromIndex(lastRowIndexInPage));\n          } else {\n            goToCell(lastColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows, theme.direction, goToCell, getRowIdFromIndex, headerFilteringEnabled, goToHeaderFilter, goToHeader]);\n  const checkIfCanStartEditing = React.useCallback((initialValue, {\n    event\n  }) => {\n    if (event.key === ' ') {\n      // Space scrolls to the last row\n      return false;\n    }\n    return initialValue;\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'canStartEditing', checkIfCanStartEditing);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'headerFilterKeyDown', handleHeaderFilterKeyDown);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderKeyDown', handleColumnGroupHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel } from './gridPaginationUtils';\nimport { useGridPaginationModel } from './useGridPaginationModel';\nimport { useGridRowCount } from './useGridRowCount';\nimport { useGridPaginationMeta } from './useGridPaginationMeta';\nexport const paginationStateInitializer = (state, props) => {\n  const paginationModel = _extends({}, getDefaultGridPaginationModel(props.autoPageSize), props.paginationModel ?? props.initialState?.pagination?.paginationModel);\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, props.signature);\n  const rowCount = props.rowCount ?? props.initialState?.pagination?.rowCount;\n  const meta = props.paginationMeta ?? props.initialState?.pagination?.meta ?? {};\n  return _extends({}, state, {\n    pagination: {\n      paginationModel,\n      rowCount,\n      meta\n    }\n  });\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPagination = (apiRef, props) => {\n  useGridPaginationMeta(apiRef, props);\n  useGridPaginationModel(apiRef, props);\n  useGridRowCount(apiRef, props);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPreferencePanelStateSelector } from './gridPreferencePanelSelector';\nexport const preferencePanelStateInitializer = (state, props) => _extends({}, state, {\n  preferencePanel: props.initialState?.preferencePanel ?? {\n    open: false\n  }\n});\n\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\nexport const useGridPreferencesPanel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n  const hideTimeout = React.useRef();\n  const immediateTimeout = React.useRef();\n\n  /**\n   * API METHODS\n   */\n  const hidePreferences = React.useCallback(() => {\n    logger.debug('Hiding Preferences Panel');\n    const preferencePanelState = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (preferencePanelState.openedPanelValue) {\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: {\n        open: false\n      }\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n\n  // This is to prevent the preferences from closing when you open a select box or another panel,\n  // The issue is in MUI core V4 => Fixed in V5\n  const doNotHidePanel = React.useCallback(() => {\n    immediateTimeout.current = setTimeout(() => clearTimeout(hideTimeout.current), 0);\n  }, []);\n\n  // This is a hack for the issue with Core V4, by delaying hiding the panel on the clickAwayListener,\n  // we can cancel the action if the trigger element still need the panel...\n  const hidePreferencesDelayed = React.useCallback(() => {\n    hideTimeout.current = setTimeout(hidePreferences, 100);\n  }, [hidePreferences]);\n  const showPreferences = React.useCallback((newValue, panelId, labelId) => {\n    logger.debug('Opening Preferences Panel');\n    doNotHidePanel();\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue,\n        panelId,\n        labelId\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, doNotHidePanel, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences: hidePreferencesDelayed\n  }, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n    const shouldExportPreferencePanel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the panel was initialized\n    props.initialState?.preferencePanel != null ||\n    // Always export if the panel is opened\n    preferencePanelToExport.open;\n    if (!shouldExportPreferencePanel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef, props.initialState?.preferencePanel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(hideTimeout.current);\n      clearTimeout(immediateTimeout.current);\n    };\n  }, []);\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"field\"],\n  _excluded2 = [\"id\", \"field\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isPrintableKey, isPasteShortcut } from '../../../utils/keyboardUtils';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsDataRowIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { deepClone } from '../../../utils/utils';\nimport { GridCellEditStartReasons, GridCellEditStopReasons } from '../../../models/params/gridEditCellParams';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\nexport const useGridCellEditing = (apiRef, props) => {\n  const [cellModesModel, setCellModesModel] = React.useState({});\n  const cellModesModelRef = React.useRef(cellModesModel);\n  const prevCellModesModel = React.useRef({});\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    cellModesModel: cellModesModelProp,\n    onCellModesModelChange\n  } = props;\n  const runIfEditModeIsCell = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) !== mode) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (params.cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('cellEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.View) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStopReasons.cellFocusOut\n    });\n    apiRef.current.publishEvent('cellEditStop', newParams, event);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is deprecated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridCellEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        reason = event.shiftKey ? GridCellEditStopReasons.shiftTabKeyDown : GridCellEditStopReasons.tabKeyDown;\n        event.preventDefault(); // Prevent going to the next element in the tab sequence\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n        apiRef.current.publishEvent('cellEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'cell'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridCellEditStartReasons.pasteKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridCellEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason,\n          key: event.key\n        });\n        apiRef.current.publishEvent('cellEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleCellEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startCellEditModeParams = {\n      id,\n      field\n    };\n    if (reason === GridCellEditStartReasons.printableKeyDown || reason === GridCellEditStartReasons.deleteKeyDown || reason === GridCellEditStartReasons.pasteKeyDown) {\n      startCellEditModeParams.deleteValue = true;\n    }\n    apiRef.current.startCellEditMode(startCellEditModeParams);\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    let cellToFocusAfter;\n    if (reason === GridCellEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridCellEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridCellEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopCellEditMode({\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  const runIfNoFieldErrors = callback => async (...args) => {\n    if (callback) {\n      const {\n        id,\n        field\n      } = args[0];\n      const editRowsState = apiRef.current.state.editRows;\n      const hasFieldErrors = editRowsState[id][field]?.error;\n      if (!hasFieldErrors) {\n        callback(...args);\n      }\n    }\n  };\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsCell(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsCell(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsCell(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellEditStart', runIfEditModeIsCell(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', runIfEditModeIsCell(handleCellEditStop));\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', runIfNoFieldErrors(props.onCellEditStop));\n  const getCellMode = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && editingState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]);\n  const updateCellModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.cellModesModel;\n    if (onCellModesModelChange && isNewModelDifferentFromProp) {\n      onCellModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.cellModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setCellModesModel(newModel);\n    cellModesModelRef.current = newModel;\n    apiRef.current.publishEvent('cellModesModelChange', newModel);\n  });\n  const updateFieldInCellModesModel = React.useCallback((id, field, newProps) => {\n    // We use the ref because it always contain the up-to-date value, different from the state\n    // that needs a rerender to reflect the new value\n    const newModel = _extends({}, cellModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newModel[id], {\n        [field]: _extends({}, newProps)\n      });\n    } else {\n      const _newModel$id = newModel[id],\n        otherFields = _objectWithoutPropertiesLoose(_newModel$id, [field].map(_toPropertyKey)); // Ensure that we have a new object, not a reference\n      newModel[id] = otherFields;\n      if (Object.keys(newModel[id]).length === 0) {\n        delete newModel[id];\n      }\n    }\n    updateCellModesModel(newModel);\n  }, [updateCellModesModel]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.View);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.Edit\n    }, other));\n  }, [throwIfNotEditable, throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStartCellEditMode = useEventCallback(params => {\n    const {\n      id,\n      field,\n      deleteValue,\n      initialValue\n    } = params;\n    let newValue = apiRef.current.getCellValue(id, field);\n    if (deleteValue) {\n      const fieldType = apiRef.current.getColumn(field).type;\n      switch (fieldType) {\n        case 'boolean':\n          newValue = false;\n          break;\n        case 'date':\n        case 'dateTime':\n        case 'number':\n          newValue = undefined;\n          break;\n        case 'singleSelect':\n          newValue = null;\n          break;\n        case 'string':\n        default:\n          newValue = '';\n          break;\n      }\n    } else if (initialValue) {\n      newValue = initialValue;\n    }\n    const newProps = {\n      value: newValue,\n      error: false,\n      isProcessingProps: false\n    };\n    updateOrDeleteFieldState(id, field, newProps);\n    apiRef.current.setCellFocus(id, field);\n  });\n  const stopCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.View\n    }, other));\n  }, [throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStopCellEditMode = useEventCallback(async params => {\n    const {\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter = 'none'\n    } = params;\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    const finishCellEditMode = () => {\n      updateOrDeleteFieldState(id, field, null);\n      updateFieldInCellModesModel(id, field, null);\n      if (cellToFocusAfter !== 'none') {\n        apiRef.current.moveFocusToRelativeCell(id, field, cellToFocusAfter);\n      }\n    };\n    if (ignoreModifications) {\n      finishCellEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      error,\n      isProcessingProps\n    } = editingState[id][field];\n    if (error || isProcessingProps) {\n      // Attempt to change cell mode to \"view\" was not successful\n      // Update previous mode to allow another attempt\n      prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n      // Revert the mode in the cellModesModel prop back to \"edit\"\n      updateFieldInCellModesModel(id, field, {\n        mode: GridCellModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n        // Revert the mode in the cellModesModel prop back to \"edit\"\n        updateFieldInCellModesModel(id, field, {\n          mode: GridCellModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n      try {\n        const row = apiRef.current.getRow(id);\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishCellEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishCellEditMode();\n    }\n  });\n  const setCellEditingEditCellValue = React.useCallback(async params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (column.preProcessEditCellProps) {\n      const hasChanged = value !== editingState[id][field].value;\n      newProps = _extends({}, newProps, {\n        isProcessingProps: true\n      });\n      updateOrDeleteFieldState(id, field, newProps);\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row,\n        props: newProps,\n        hasChanged\n      }));\n    }\n\n    // Check again if the cell is in edit mode because the user may have\n    // discarded the changes while the props were being processed.\n    if (apiRef.current.getCellMode(id, field) === GridCellModes.View) {\n      return false;\n    }\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    newProps = _extends({}, newProps, {\n      isProcessingProps: false\n    });\n    // We don't update the value with the one coming from the props pre-processing\n    // because when the promise resolves it may be already outdated. The only\n    // exception to this rule is when there's no pre-processing.\n    newProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n    updateOrDeleteFieldState(id, field, newProps);\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return !editingState[id]?.[field]?.error;\n  }, [apiRef, throwIfNotEditable, throwIfNotInMode, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromCellEditing = React.useCallback((id, field) => {\n    const column = apiRef.current.getColumn(field);\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id] || !editingState[id][field]) {\n      return apiRef.current.getRow(id);\n    }\n    const {\n      value\n    } = editingState[id][field];\n    return column.valueSetter ? column.valueSetter(value, row, column, apiRef) : _extends({}, row, {\n      [field]: value\n    });\n  }, [apiRef]);\n  const editingApi = {\n    getCellMode,\n    startCellEditMode,\n    stopCellEditMode\n  };\n  const editingPrivateApi = {\n    setCellEditingEditCellValue,\n    getRowWithUpdatedValuesFromCellEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (cellModesModelProp) {\n      updateCellModesModel(cellModesModelProp);\n    }\n  }, [cellModesModelProp, updateCellModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopCellEditMode may change it later\n    const copyOfPrevCellModes = prevCellModesModel.current;\n    prevCellModesModel.current = deepClone(cellModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(cellModesModel).forEach(([id, fields]) => {\n      Object.entries(fields).forEach(([field, params]) => {\n        const prevMode = copyOfPrevCellModes[id]?.[field]?.mode || GridCellModes.View;\n        const originalId = idToIdLookup[id] ?? id;\n        if (params.mode === GridCellModes.Edit && prevMode === GridCellModes.View) {\n          updateStateToStartCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        } else if (params.mode === GridCellModes.View && prevMode === GridCellModes.Edit) {\n          updateStateToStopCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        }\n      });\n    });\n  }, [apiRef, cellModesModel, updateStateToStartCellEditMode, updateStateToStopCellEditMode]);\n};","import _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\"],\n  _excluded2 = [\"id\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridRowModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isPrintableKey, isPasteShortcut } from '../../../utils/keyboardUtils';\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from '../columns/gridColumnsSelector';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsDataRowIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { deepClone } from '../../../utils/utils';\nimport { GridRowEditStopReasons, GridRowEditStartReasons } from '../../../models/params/gridRowParams';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../../../colDef';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\nexport const useGridRowEditing = (apiRef, props) => {\n  const [rowModesModel, setRowModesModel] = React.useState({});\n  const rowModesModelRef = React.useRef(rowModesModel);\n  const prevRowModesModel = React.useRef({});\n  const focusTimeout = React.useRef();\n  const nextFocusedCell = React.useRef(null);\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    rowModesModel: rowModesModelProp,\n    onRowModesModelChange\n  } = props;\n  const runIfEditModeIsRow = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, mode) => {\n    if (apiRef.current.getRowMode(id) !== mode) {\n      throw new Error(`MUI X: The row with id=${id} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const hasFieldsWithErrors = React.useCallback(rowId => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return Object.values(editingState[rowId]).some(fieldProps => fieldProps.error);\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.Edit) {\n      return;\n    }\n    const rowParams = apiRef.current.getRowParams(params.id);\n    const newParams = _extends({}, rowParams, {\n      field: params.field,\n      reason: GridRowEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('rowEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n      return;\n    }\n    // The mechanism to detect if we can stop editing a row is different from\n    // the cell editing. Instead of triggering it when clicking outside a cell,\n    // we must check if another cell in the same row was not clicked. To achieve\n    // that, first we keep track of all cells that gained focus. When a cell loses\n    // focus we check if the next cell that received focus is from a different row.\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(() => {\n      if (nextFocusedCell.current?.id !== params.id) {\n        // The row might have been deleted during the click\n        if (!apiRef.current.getRow(params.id)) {\n          return;\n        }\n\n        // The row may already changed its mode\n        if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n          return;\n        }\n        if (hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason: GridRowEditStopReasons.rowFocusOut\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    });\n  }, [apiRef, hasFieldsWithErrors]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(focusTimeout.current);\n    };\n  }, []);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridRowModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is deprecated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridRowEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        const columnFields = gridVisibleColumnFieldsSelector(apiRef).filter(field => {\n          const column = apiRef.current.getColumn(field);\n          if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n            return true;\n          }\n          return apiRef.current.isCellEditable(apiRef.current.getCellParams(params.id, field));\n        });\n        if (event.shiftKey) {\n          if (params.field === columnFields[0]) {\n            // Exit if user pressed Shift+Tab on the first field\n            reason = GridRowEditStopReasons.shiftTabKeyDown;\n          }\n        } else if (params.field === columnFields[columnFields.length - 1]) {\n          // Exit if user pressed Tab on the last field\n          reason = GridRowEditStopReasons.tabKeyDown;\n        }\n\n        // Always prevent going to the next element in the tab sequence because the focus is\n        // handled manually to support edit components rendered inside Portals\n        event.preventDefault();\n        if (!reason) {\n          const index = columnFields.findIndex(field => field === params.field);\n          const nextFieldToFocus = columnFields[event.shiftKey ? index - 1 : index + 1];\n          apiRef.current.setCellFocus(params.id, nextFieldToFocus);\n        }\n      }\n      if (reason) {\n        if (reason !== GridRowEditStopReasons.escapeKeyDown && hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const newParams = _extends({}, apiRef.current.getRowParams(params.id), {\n          reason,\n          field: params.field\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'row'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridRowEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason\n        });\n        apiRef.current.publishEvent('rowEditStart', newParams, event);\n      }\n    }\n  }, [apiRef, hasFieldsWithErrors]);\n  const handleRowEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startRowEditModeParams = {\n      id,\n      fieldToFocus: field\n    };\n    if (reason === GridRowEditStartReasons.printableKeyDown || reason === GridRowEditStartReasons.deleteKeyDown) {\n      startRowEditModeParams.deleteValue = !!field;\n    }\n    apiRef.current.startRowEditMode(startRowEditModeParams);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback(params => {\n    const {\n      id,\n      reason,\n      field\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    let cellToFocusAfter;\n    if (reason === GridRowEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridRowEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridRowEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopRowEditMode({\n      id,\n      ignoreModifications,\n      field,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsRow(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfEditModeIsRow(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsRow(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsRow(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'rowEditStart', runIfEditModeIsRow(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', runIfEditModeIsRow(handleRowEditStop));\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && Object.keys(editingState[id]).length > 0;\n    return isEditing ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const updateRowModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.rowModesModel;\n    if (onRowModesModelChange && isNewModelDifferentFromProp) {\n      onRowModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.rowModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setRowModesModel(newModel);\n    rowModesModelRef.current = newModel;\n    apiRef.current.publishEvent('rowModesModelChange', newModel);\n  });\n  const updateRowInRowModesModel = React.useCallback((id, newProps) => {\n    const newModel = _extends({}, rowModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newProps);\n    } else {\n      delete newModel[id];\n    }\n    updateRowModesModel(newModel);\n  }, [updateRowModesModel]);\n  const updateOrDeleteRowState = React.useCallback((id, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = newProps;\n      } else {\n        delete newEditingState[id];\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotInMode(id, GridRowModes.View);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.Edit\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStartRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      fieldToFocus,\n      deleteValue,\n      initialValue\n    } = params;\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const newProps = columnFields.reduce((acc, field) => {\n      const cellParams = apiRef.current.getCellParams(id, field);\n      if (!cellParams.isEditable) {\n        return acc;\n      }\n      let newValue = apiRef.current.getCellValue(id, field);\n      if (fieldToFocus === field && (deleteValue || initialValue)) {\n        newValue = deleteValue ? '' : initialValue;\n      }\n      acc[field] = {\n        value: newValue,\n        error: false,\n        isProcessingProps: false\n      };\n      return acc;\n    }, {});\n    updateOrDeleteRowState(id, newProps);\n    if (fieldToFocus) {\n      apiRef.current.setCellFocus(id, fieldToFocus);\n    }\n  });\n  const stopRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, GridRowModes.Edit);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.View\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStopRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      ignoreModifications,\n      field: focusedField,\n      cellToFocusAfter = 'none'\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    const finishRowEditMode = () => {\n      if (cellToFocusAfter !== 'none' && focusedField) {\n        apiRef.current.moveFocusToRelativeCell(id, focusedField, cellToFocusAfter);\n      }\n      updateOrDeleteRowState(id, null);\n      updateRowInRowModesModel(id, null);\n    };\n    if (ignoreModifications) {\n      finishRowEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    const isSomeFieldProcessingProps = Object.values(editingState[id]).some(fieldProps => fieldProps.isProcessingProps);\n    if (isSomeFieldProcessingProps) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      return;\n    }\n    if (hasFieldsWithErrors(id)) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      // Revert the mode in the rowModesModel prop back to \"edit\"\n      updateRowInRowModesModel(id, {\n        mode: GridRowModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevRowModesModel.current[id].mode = GridRowModes.Edit;\n        // Revert the mode in the rowModesModel prop back to \"edit\"\n        updateRowInRowModesModel(id, {\n          mode: GridRowModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n      try {\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishRowEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishRowEditMode();\n    }\n  });\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (!column.preProcessEditCellProps) {\n      updateOrDeleteFieldState(id, field, newProps);\n    }\n    return new Promise(resolve => {\n      const promises = [];\n      if (column.preProcessEditCellProps) {\n        const hasChanged = newProps.value !== editingState[id][field].value;\n        newProps = _extends({}, newProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, field, newProps);\n        const _editingState$id = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id, [field].map(_toPropertyKey));\n        const promise = Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: newProps,\n          hasChanged,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          // We don't reuse the value from the props pre-processing because when the\n          // promise resolves it may be already outdated. The only exception to this rule\n          // is when there's no pre-processing.\n          processedProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n          updateOrDeleteFieldState(id, field, processedProps);\n        });\n        promises.push(promise);\n      }\n      Object.entries(editingState[id]).forEach(([thisField, fieldProps]) => {\n        if (thisField === field) {\n          return;\n        }\n        const fieldColumn = apiRef.current.getColumn(thisField);\n        if (!fieldColumn.preProcessEditCellProps) {\n          return;\n        }\n        fieldProps = _extends({}, fieldProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, thisField, fieldProps);\n        editingState = gridEditRowsStateSelector(apiRef.current.state);\n        const _editingState$id2 = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id2, [thisField].map(_toPropertyKey));\n        const promise = Promise.resolve(fieldColumn.preProcessEditCellProps({\n          id,\n          row,\n          props: fieldProps,\n          hasChanged: false,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          updateOrDeleteFieldState(id, thisField, processedProps);\n        });\n        promises.push(promise);\n      });\n      Promise.all(promises).then(() => {\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          resolve(!editingState[id][field].error);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }, [apiRef, throwIfNotEditable, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromRowEditing = React.useCallback(id => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id]) {\n      return apiRef.current.getRow(id);\n    }\n    let rowUpdate = _extends({}, row);\n    Object.entries(editingState[id]).forEach(([field, fieldProps]) => {\n      const column = apiRef.current.getColumn(field);\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter(fieldProps.value, rowUpdate, column, apiRef);\n      } else {\n        rowUpdate[field] = fieldProps.value;\n      }\n    });\n    return rowUpdate;\n  }, [apiRef]);\n  const editingApi = {\n    getRowMode,\n    startRowEditMode,\n    stopRowEditMode\n  };\n  const editingPrivateApi = {\n    setRowEditingEditCellValue,\n    getRowWithUpdatedValuesFromRowEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (rowModesModelProp) {\n      updateRowModesModel(rowModesModelProp);\n    }\n  }, [rowModesModelProp, updateRowModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopRowEditMode may change it later\n    const copyOfPrevRowModesModel = prevRowModesModel.current;\n    prevRowModesModel.current = deepClone(rowModesModel); // Do a deep-clone because the attributes might be changed later\n\n    const ids = new Set([...Object.keys(rowModesModel), ...Object.keys(copyOfPrevRowModesModel)]);\n    Array.from(ids).forEach(id => {\n      const params = rowModesModel[id] ?? {\n        mode: GridRowModes.View\n      };\n      const prevMode = copyOfPrevRowModesModel[id]?.mode || GridRowModes.View;\n      const originalId = idToIdLookup[id] ?? id;\n      if (params.mode === GridRowModes.Edit && prevMode === GridRowModes.View) {\n        updateStateToStartRowEditMode(_extends({\n          id: originalId\n        }, params));\n      } else if (params.mode === GridRowModes.View && prevMode === GridRowModes.Edit) {\n        updateStateToStopRowEditMode(_extends({\n          id: originalId\n        }, params));\n      }\n    });\n  }, [apiRef, rowModesModel, updateStateToStartRowEditMode, updateStateToStopRowEditMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridCellEditing } from './useGridCellEditing';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { useGridRowEditing } from './useGridRowEditing';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isAutoGeneratedRow } from '../rows/gridRowsUtils';\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (isAutoGeneratedRow(params.rowNode)) {\n      return false;\n    }\n    if (!params.colDef.editable) {\n      return false;\n    }\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n    return true;\n  }, [isCellEditableProp]);\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    // To run the callback immediately without waiting the timeout\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.setRowEditingEditCellValue : apiRef.current.setCellEditingEditCellValue;\n\n        // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return editingState[id]?.[field] ?? null;\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  const editingSharedPrivateApi = {\n    runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'public');\n  useGridApiMethod(apiRef, editingSharedPrivateApi, 'private');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowCountSelector, gridRowsLookupSelector, gridRowTreeSelector, gridRowGroupingNameSelector, gridRowTreeDepthsSelector, gridDataRowIdsSelector, gridRowsDataRowIdToIdLookupSelector, gridRowMaximumTreeDepthSelector, gridRowGroupsToFetchSelector } from './gridRowsSelector';\nimport { useTimeout } from '../../utils/useTimeout';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridSortedRowIdsSelector } from '../sorting/gridSortingSelector';\nimport { gridFilteredRowsLookupSelector } from '../filter/gridFilterSelector';\nimport { getTreeNodeDescendants, createRowsInternalCache, getRowsStateFromCache, isAutoGeneratedRow, GRID_ROOT_GROUP_ID, GRID_ID_AUTOGENERATED, updateCacheWithNewRows, getTopLevelRowCount, getRowIdFromRowModel, computeRowsUpdates } from './gridRowsUtils';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nexport const rowsStateInitializer = (state, props, apiRef) => {\n  const isDataSourceAvailable = !!props.unstable_dataSource;\n  apiRef.current.caches.rows = createRowsInternalCache({\n    rows: isDataSourceAvailable ? [] : props.rows,\n    getRowId: props.getRowId,\n    loading: props.loading,\n    rowCount: props.rowCount\n  });\n  return _extends({}, state, {\n    rows: getRowsStateFromCache({\n      apiRef,\n      rowCountProp: props.rowCount,\n      loadingProp: isDataSourceAvailable ? true : props.loading,\n      previousTree: null,\n      previousTreeDepths: null\n    })\n  });\n};\nexport const useGridRows = (apiRef, props) => {\n  if (process.env.NODE_ENV !== 'production') {\n    try {\n      // Freeze the `rows` prop so developers have a fast failure if they try to use Array.prototype.push().\n      Object.freeze(props.rows);\n    } catch (error) {\n      // Sometimes, it's impossible to freeze, so we give up on it.\n    }\n  }\n  const logger = useGridLogger(apiRef, 'useGridRows');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const lastUpdateMs = React.useRef(Date.now());\n  const lastRowCount = React.useRef(props.rowCount);\n  const timeout = useTimeout();\n  const getRow = React.useCallback(id => {\n    const model = gridRowsLookupSelector(apiRef)[id];\n    if (model) {\n      return model;\n    }\n    const node = apiRef.current.getRowNode(id);\n    if (node && isAutoGeneratedRow(node)) {\n      return {\n        [GRID_ID_AUTOGENERATED]: id\n      };\n    }\n    return null;\n  }, [apiRef]);\n  const getRowIdProp = props.getRowId;\n  const getRowId = React.useCallback(row => {\n    if (GRID_ID_AUTOGENERATED in row) {\n      return row[GRID_ID_AUTOGENERATED];\n    }\n    if (getRowIdProp) {\n      return getRowIdProp(row);\n    }\n    return row.id;\n  }, [getRowIdProp]);\n  const lookup = React.useMemo(() => currentPage.rows.reduce((acc, {\n    id\n  }, index) => {\n    acc[id] = index;\n    return acc;\n  }, {}), [currentPage.rows]);\n  const throttledRowsChange = React.useCallback(({\n    cache,\n    throttle\n  }) => {\n    const run = () => {\n      lastUpdateMs.current = Date.now();\n      apiRef.current.setState(state => _extends({}, state, {\n        rows: getRowsStateFromCache({\n          apiRef,\n          rowCountProp: props.rowCount,\n          loadingProp: props.loading,\n          previousTree: gridRowTreeSelector(apiRef),\n          previousTreeDepths: gridRowTreeDepthsSelector(apiRef),\n          previousGroupsToFetch: gridRowGroupsToFetchSelector(apiRef)\n        })\n      }));\n      apiRef.current.publishEvent('rowsSet');\n      apiRef.current.forceUpdate();\n    };\n    timeout.clear();\n    apiRef.current.caches.rows = cache;\n    if (!throttle) {\n      run();\n      return;\n    }\n    const throttleRemainingTimeMs = props.throttleRowsMs - (Date.now() - lastUpdateMs.current);\n    if (throttleRemainingTimeMs > 0) {\n      timeout.start(throttleRemainingTimeMs, run);\n      return;\n    }\n    run();\n  }, [props.throttleRowsMs, props.rowCount, props.loading, apiRef, timeout]);\n\n  /**\n   * API METHODS\n   */\n  const setRows = React.useCallback(rows => {\n    logger.debug(`Updating all rows, new length ${rows.length}`);\n    const cache = createRowsInternalCache({\n      rows,\n      getRowId: props.getRowId,\n      loading: props.loading,\n      rowCount: props.rowCount\n    });\n    const prevCache = apiRef.current.caches.rows;\n    cache.rowsBeforePartialUpdates = prevCache.rowsBeforePartialUpdates;\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [logger, props.getRowId, props.loading, props.rowCount, throttledRowsChange, apiRef]);\n  const updateRows = React.useCallback(updates => {\n    if (props.signature === GridSignature.DataGrid && updates.length > 1) {\n      throw new Error(['MUI X: You cannot update several rows at once in `apiRef.current.updateRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    const nonPinnedRowsUpdates = computeRowsUpdates(apiRef, updates, props.getRowId);\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows\n    });\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [props.signature, props.getRowId, throttledRowsChange, apiRef]);\n  const updateServerRows = React.useCallback((updates, groupKeys) => {\n    const nonPinnedRowsUpdates = computeRowsUpdates(apiRef, updates, props.getRowId);\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows,\n      groupKeys: groupKeys ?? []\n    });\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [props.getRowId, throttledRowsChange, apiRef]);\n  const setLoading = React.useCallback(loading => {\n    if (loading === props.loading) {\n      return;\n    }\n    logger.debug(`Setting loading to ${loading}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        loading\n      })\n    }));\n    apiRef.current.caches.rows.loadingPropBeforePartialUpdates = loading;\n  }, [props.loading, apiRef, logger]);\n  const getRowModels = React.useCallback(() => {\n    const dataRows = gridDataRowIdsSelector(apiRef);\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    return new Map(dataRows.map(id => [id, idRowsLookup[id] ?? {}]));\n  }, [apiRef]);\n  const getRowsCount = React.useCallback(() => gridRowCountSelector(apiRef), [apiRef]);\n  const getAllRowIds = React.useCallback(() => gridDataRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndexRelativeToVisibleRows = React.useCallback(id => lookup[id], [lookup]);\n  const setRowChildrenExpansion = React.useCallback((id, isExpanded) => {\n    const currentNode = apiRef.current.getRowNode(id);\n    if (!currentNode) {\n      throw new Error(`MUI X: No row with id #${id} found.`);\n    }\n    if (currentNode.type !== 'group') {\n      throw new Error('MUI X: Only group nodes can be expanded or collapsed.');\n    }\n    const newNode = _extends({}, currentNode, {\n      childrenExpanded: isExpanded\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [id]: newNode\n          })\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('rowExpansionChange', newNode);\n  }, [apiRef]);\n  const getRowNode = React.useCallback(id => gridRowTreeSelector(apiRef)[id] ?? null, [apiRef]);\n  const getRowGroupChildren = React.useCallback(({\n    skipAutoGeneratedRows = true,\n    groupId,\n    applySorting,\n    applyFiltering\n  }) => {\n    const tree = gridRowTreeSelector(apiRef);\n    let children;\n    if (applySorting) {\n      const groupNode = tree[groupId];\n      if (!groupNode) {\n        return [];\n      }\n      const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n      children = [];\n      const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n      for (let index = startIndex; index < sortedRowIds.length && tree[sortedRowIds[index]].depth > groupNode.depth; index += 1) {\n        const id = sortedRowIds[index];\n        if (!skipAutoGeneratedRows || !isAutoGeneratedRow(tree[id])) {\n          children.push(id);\n        }\n      }\n    } else {\n      children = getTreeNodeDescendants(tree, groupId, skipAutoGeneratedRows);\n    }\n    if (applyFiltering) {\n      const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n      children = children.filter(childId => filteredRowsLookup[childId] !== false);\n    }\n    return children;\n  }, [apiRef]);\n  const setRowIndex = React.useCallback((rowId, targetIndex) => {\n    const node = apiRef.current.getRowNode(rowId);\n    if (!node) {\n      throw new Error(`MUI X: No row with id #${rowId} found.`);\n    }\n    if (node.parent !== GRID_ROOT_GROUP_ID) {\n      throw new Error(`MUI X: The row reordering do not support reordering of grouped rows yet.`);\n    }\n    if (node.type !== 'leaf') {\n      throw new Error(`MUI X: The row reordering do not support reordering of footer or grouping rows.`);\n    }\n    apiRef.current.setState(state => {\n      const group = gridRowTreeSelector(state, apiRef.current.instanceId)[GRID_ROOT_GROUP_ID];\n      const allRows = group.children;\n      const oldIndex = allRows.findIndex(row => row === rowId);\n      if (oldIndex === -1 || oldIndex === targetIndex) {\n        return state;\n      }\n      logger.debug(`Moving row ${rowId} to index ${targetIndex}`);\n      const updatedRows = [...allRows];\n      updatedRows.splice(targetIndex, 0, updatedRows.splice(oldIndex, 1)[0]);\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [GRID_ROOT_GROUP_ID]: _extends({}, group, {\n              children: updatedRows\n            })\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, logger]);\n  const replaceRows = React.useCallback((firstRowToRender, newRows) => {\n    if (props.signature === GridSignature.DataGrid && newRows.length > 1) {\n      throw new Error(['MUI X: You cannot replace rows using `apiRef.current.unstable_replaceRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    if (newRows.length === 0) {\n      return;\n    }\n    const treeDepth = gridRowMaximumTreeDepthSelector(apiRef);\n    if (treeDepth > 1) {\n      throw new Error('`apiRef.current.unstable_replaceRows` is not compatible with tree data and row grouping');\n    }\n    const tree = _extends({}, gridRowTreeSelector(apiRef));\n    const dataRowIdToModelLookup = _extends({}, gridRowsLookupSelector(apiRef));\n    const dataRowIdToIdLookup = _extends({}, gridRowsDataRowIdToIdLookupSelector(apiRef));\n    const rootGroup = tree[GRID_ROOT_GROUP_ID];\n    const rootGroupChildren = [...rootGroup.children];\n    const seenIds = new Set();\n    for (let i = 0; i < newRows.length; i += 1) {\n      const rowModel = newRows[i];\n      const rowId = getRowIdFromRowModel(rowModel, props.getRowId, 'A row was provided without id when calling replaceRows().');\n      const [removedRowId] = rootGroupChildren.splice(firstRowToRender + i, 1, rowId);\n      if (!seenIds.has(removedRowId)) {\n        delete dataRowIdToModelLookup[removedRowId];\n        delete dataRowIdToIdLookup[removedRowId];\n        delete tree[removedRowId];\n      }\n      const rowTreeNodeConfig = {\n        id: rowId,\n        depth: 0,\n        parent: GRID_ROOT_GROUP_ID,\n        type: 'leaf',\n        groupingKey: null\n      };\n      dataRowIdToModelLookup[rowId] = rowModel;\n      dataRowIdToIdLookup[rowId] = rowId;\n      tree[rowId] = rowTreeNodeConfig;\n      seenIds.add(rowId);\n    }\n    tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n      children: rootGroupChildren\n    });\n\n    // Removes potential remaining skeleton rows from the dataRowIds.\n    const dataRowIds = rootGroupChildren.filter(childId => tree[childId]?.type === 'leaf');\n    apiRef.current.caches.rows.dataRowIdToModelLookup = dataRowIdToModelLookup;\n    apiRef.current.caches.rows.dataRowIdToIdLookup = dataRowIdToIdLookup;\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        dataRowIdToModelLookup,\n        dataRowIdToIdLookup,\n        dataRowIds,\n        tree\n      })\n    }));\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, props.signature, props.getRowId]);\n  const rowApi = {\n    getRow,\n    setLoading,\n    getRowId,\n    getRowModels,\n    getRowsCount,\n    getAllRowIds,\n    setRows,\n    updateRows,\n    getRowNode,\n    getRowIndexRelativeToVisibleRows,\n    unstable_replaceRows: replaceRows\n  };\n  const rowProApi = {\n    setRowIndex,\n    setRowChildrenExpansion,\n    getRowGroupChildren\n  };\n  const rowProPrivateApi = {\n    updateServerRows\n  };\n\n  /**\n   * EVENTS\n   */\n  const groupRows = React.useCallback(() => {\n    logger.info(`Row grouping pre-processing have changed, regenerating the row tree`);\n    let cache;\n    if (apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows) {\n      // The `props.rows` did not change since the last row grouping\n      // We can use the current rows cache which contains the partial updates done recently.\n      cache = _extends({}, apiRef.current.caches.rows, {\n        updates: {\n          type: 'full',\n          rows: gridDataRowIdsSelector(apiRef)\n        }\n      });\n    } else {\n      // The `props.rows` has changed since the last row grouping\n      // We must use the new `props.rows` on the new grouping\n      // This occurs because this event is triggered before the `useEffect` on the rows when both the grouping pre-processing and the rows changes on the same render\n      cache = createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      });\n    }\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [logger, apiRef, props.rows, props.getRowId, props.loading, props.rowCount, throttledRowsChange]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'rowTreeCreation') {\n      groupRows();\n    }\n  }, [groupRows]);\n  const handleStrategyActivityChange = React.useCallback(() => {\n    // `rowTreeCreation` is the only processor ran when `strategyAvailabilityChange` is fired.\n    // All the other processors listen to `rowsSet` which will be published by the `groupRows` method below.\n    if (apiRef.current.getActiveStrategy('rowTree') !== gridRowGroupingNameSelector(apiRef)) {\n      groupRows();\n    }\n  }, [apiRef, groupRows]);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'strategyAvailabilityChange', handleStrategyActivityChange);\n\n  /**\n   * APPLIERS\n   */\n  const applyHydrateRowsProcessor = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const response = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n        tree: gridRowTreeSelector(state, apiRef.current.instanceId),\n        treeDepths: gridRowTreeDepthsSelector(state, apiRef.current.instanceId),\n        dataRowIds: gridDataRowIdsSelector(state, apiRef.current.instanceId),\n        dataRowIdToModelLookup: gridRowsLookupSelector(state, apiRef.current.instanceId),\n        dataRowIdToIdLookup: gridRowsDataRowIdToIdLookupSelector(state, apiRef.current.instanceId)\n      });\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, response, {\n          totalTopLevelRowCount: getTopLevelRowCount({\n            tree: response.tree,\n            rowCountProp: props.rowCount\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.rowCount]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateRows', applyHydrateRowsProcessor);\n  useGridApiMethod(apiRef, rowApi, 'public');\n  useGridApiMethod(apiRef, rowProApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n  useGridApiMethod(apiRef, rowProPrivateApi, 'private');\n\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridRows`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    let isRowCountPropUpdated = false;\n    if (props.rowCount !== lastRowCount.current) {\n      isRowCountPropUpdated = true;\n      lastRowCount.current = props.rowCount;\n    }\n    const areNewRowsAlreadyInState = apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows;\n    const isNewLoadingAlreadyInState = apiRef.current.caches.rows.loadingPropBeforePartialUpdates === props.loading;\n    const isNewRowCountAlreadyInState = apiRef.current.caches.rows.rowCountPropBeforePartialUpdates === props.rowCount;\n\n    // The new rows have already been applied (most likely in the `'rowGroupsPreProcessingChange'` listener)\n    if (areNewRowsAlreadyInState) {\n      // If the loading prop has changed, we need to update its value in the state because it won't be done by `throttledRowsChange`\n      if (!isNewLoadingAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            loading: props.loading\n          })\n        }));\n        apiRef.current.caches.rows.loadingPropBeforePartialUpdates = props.loading;\n        apiRef.current.forceUpdate();\n      }\n      if (!isNewRowCountAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            totalRowCount: Math.max(props.rowCount || 0, state.rows.totalRowCount),\n            totalTopLevelRowCount: Math.max(props.rowCount || 0, state.rows.totalTopLevelRowCount)\n          })\n        }));\n        apiRef.current.caches.rows.rowCountPropBeforePartialUpdates = props.rowCount;\n        apiRef.current.forceUpdate();\n      }\n      if (!isRowCountPropUpdated) {\n        return;\n      }\n    }\n    logger.debug(`Updating all rows, new length ${props.rows?.length}`);\n    throttledRowsChange({\n      cache: createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      }),\n      throttle: false\n    });\n  }, [props.rows, props.rowCount, props.getRowId, props.loading, logger, throttledRowsChange, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\nimport { buildRootGroup, GRID_ROOT_GROUP_ID } from './gridRowsUtils';\nconst createFlatRowTree = rows => {\n  const tree = {\n    [GRID_ROOT_GROUP_ID]: _extends({}, buildRootGroup(), {\n      children: rows\n    })\n  };\n  for (let i = 0; i < rows.length; i += 1) {\n    const rowId = rows[i];\n    tree[rowId] = {\n      id: rowId,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rows.length\n    },\n    dataRowIds: rows\n  };\n};\nconst updateFlatRowTree = ({\n  previousTree,\n  actions\n}) => {\n  const tree = _extends({}, previousTree);\n  const idsToRemoveFromRootGroup = {};\n  for (let i = 0; i < actions.remove.length; i += 1) {\n    const idToDelete = actions.remove[i];\n    idsToRemoveFromRootGroup[idToDelete] = true;\n    delete tree[idToDelete];\n  }\n  for (let i = 0; i < actions.insert.length; i += 1) {\n    const idToInsert = actions.insert[i];\n    tree[idToInsert] = {\n      id: idToInsert,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n\n  // TODO rows v6: Support row unpinning\n\n  const rootGroup = tree[GRID_ROOT_GROUP_ID];\n  let rootGroupChildren = [...rootGroup.children, ...actions.insert];\n  if (Object.values(idsToRemoveFromRootGroup).length) {\n    rootGroupChildren = rootGroupChildren.filter(id => !idsToRemoveFromRootGroup[id]);\n  }\n  tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n    children: rootGroupChildren\n  });\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rootGroupChildren.length\n    },\n    dataRowIds: rootGroupChildren\n  };\n};\nconst flatRowTreeCreationMethod = params => {\n  if (params.updates.type === 'full') {\n    return createFlatRowTree(params.updates.rows);\n  }\n  return updateFlatRowTree({\n    previousTree: params.previousTree,\n    actions: params.updates.actions\n  });\n};\nexport const useGridRowsPreProcessors = apiRef => {\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'rowTreeCreation', flatRowTreeCreationMethod);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nimport { gridRowSelectionStateSelector, selectedGridRowsSelector, selectedIdsLookupSelector } from './gridRowSelectionSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../pagination';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { gridExpandedSortedRowIdsSelector, gridFilterModelSelector } from '../filter/gridFilterSelector';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from '../../../colDef';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isKeyboardEvent, isNavigationKey } from '../../../utils/keyboardUtils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { isEventTargetInPortal } from '../../../utils/domUtils';\nimport { isMultipleRowSelectionEnabled } from './utils';\nconst getSelectionModelPropValue = (selectionModelProp, prevSelectionModel) => {\n  if (selectionModelProp == null) {\n    return selectionModelProp;\n  }\n  if (Array.isArray(selectionModelProp)) {\n    return selectionModelProp;\n  }\n  if (prevSelectionModel && prevSelectionModel[0] === selectionModelProp) {\n    return prevSelectionModel;\n  }\n  return [selectionModelProp];\n};\nexport const rowSelectionStateInitializer = (state, props) => _extends({}, state, {\n  rowSelection: props.rowSelection ? getSelectionModelPropValue(props.rowSelectionModel) ?? [] : []\n});\n\n/**\n * @requires useGridRows (state, method) - can be after\n * @requires useGridParamsApi (method) - can be after\n * @requires useGridFocus (state) - can be after\n * @requires useGridKeyboardNavigation (`cellKeyDown` event must first be consumed by it)\n */\nexport const useGridRowSelection = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSelection');\n  const runIfRowSelectionIsEnabled = callback => (...args) => {\n    if (props.rowSelection) {\n      callback(...args);\n    }\n  };\n  const propRowSelectionModel = React.useMemo(() => {\n    return getSelectionModelPropValue(props.rowSelectionModel, gridRowSelectionStateSelector(apiRef.current.state));\n  }, [apiRef, props.rowSelectionModel]);\n  const lastRowToggled = React.useRef(null);\n  apiRef.current.registerControlState({\n    stateId: 'rowSelection',\n    propModel: propRowSelectionModel,\n    propOnChange: props.onRowSelectionModelChange,\n    stateSelector: gridRowSelectionStateSelector,\n    changeEvent: 'rowSelectionChange'\n  });\n  const {\n    checkboxSelection,\n    disableRowSelectionOnClick,\n    isRowSelectable: propIsRowSelectable\n  } = props;\n  const canHaveMultipleSelection = isMultipleRowSelectionEnabled(props);\n  const visibleRows = useGridVisibleRows(apiRef, props);\n  const expandMouseRowRangeSelection = React.useCallback(id => {\n    let endId = id;\n    const startId = lastRowToggled.current ?? id;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (isSelected) {\n      const visibleRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n      const startIndex = visibleRowIds.findIndex(rowId => rowId === startId);\n      const endIndex = visibleRowIds.findIndex(rowId => rowId === endId);\n      if (startIndex === endIndex) {\n        return;\n      }\n      if (startIndex > endIndex) {\n        endId = visibleRowIds[endIndex + 1];\n      } else {\n        endId = visibleRowIds[endIndex - 1];\n      }\n    }\n    lastRowToggled.current = id;\n    apiRef.current.selectRowRange({\n      startId,\n      endId\n    }, !isSelected);\n  }, [apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const setRowSelectionModel = React.useCallback(model => {\n    if (props.signature === GridSignature.DataGrid && !canHaveMultipleSelection && Array.isArray(model) && model.length > 1) {\n      throw new Error(['MUI X: `rowSelectionModel` can only contain 1 item in DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection.'].join('\\n'));\n    }\n    const currentModel = gridRowSelectionStateSelector(apiRef.current.state);\n    if (currentModel !== model) {\n      logger.debug(`Setting selection model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        rowSelection: props.rowSelection ? model : []\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger, props.rowSelection, props.signature, canHaveMultipleSelection]);\n  const isRowSelected = React.useCallback(id => gridRowSelectionStateSelector(apiRef.current.state).includes(id), [apiRef]);\n  const isRowSelectable = React.useCallback(id => {\n    if (propIsRowSelectable && !propIsRowSelectable(apiRef.current.getRowParams(id))) {\n      return false;\n    }\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'footer' || rowNode?.type === 'pinnedRow') {\n      return false;\n    }\n    return true;\n  }, [apiRef, propIsRowSelectable]);\n  const getSelectedRows = React.useCallback(() => selectedGridRowsSelector(apiRef), [apiRef]);\n  const selectRow = React.useCallback((id, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.isRowSelectable(id)) {\n      return;\n    }\n    lastRowToggled.current = id;\n    if (resetSelection) {\n      logger.debug(`Setting selection for row ${id}`);\n      apiRef.current.setRowSelectionModel(isSelected ? [id] : []);\n    } else {\n      logger.debug(`Toggling selection for row ${id}`);\n      const selection = gridRowSelectionStateSelector(apiRef.current.state);\n      const newSelection = selection.filter(el => el !== id);\n      if (isSelected) {\n        newSelection.push(id);\n      }\n      const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n      if (isSelectionValid) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRows = React.useCallback((ids, isSelected = true, resetSelection = false) => {\n    logger.debug(`Setting selection for several rows`);\n    const selectableIds = ids.filter(id => apiRef.current.isRowSelectable(id));\n    let newSelection;\n    if (resetSelection) {\n      newSelection = isSelected ? selectableIds : [];\n    } else {\n      // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n      const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n      selectableIds.forEach(id => {\n        if (isSelected) {\n          selectionLookup[id] = id;\n        } else {\n          delete selectionLookup[id];\n        }\n      });\n      newSelection = Object.values(selectionLookup);\n    }\n    const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n    if (isSelectionValid) {\n      apiRef.current.setRowSelectionModel(newSelection);\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRowRange = React.useCallback(({\n    startId,\n    endId\n  }, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.getRow(startId) || !apiRef.current.getRow(endId)) {\n      return;\n    }\n    logger.debug(`Expanding selection from row ${startId} to row ${endId}`);\n\n    // Using rows from all pages allow to select a range across several pages\n    const allPagesRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n    const startIndex = allPagesRowIds.indexOf(startId);\n    const endIndex = allPagesRowIds.indexOf(endId);\n    const [start, end] = startIndex > endIndex ? [endIndex, startIndex] : [startIndex, endIndex];\n    const rowsBetweenStartAndEnd = allPagesRowIds.slice(start, end + 1);\n    apiRef.current.selectRows(rowsBetweenStartAndEnd, isSelected, resetSelection);\n  }, [apiRef, logger]);\n  const selectionPublicApi = {\n    selectRow,\n    setRowSelectionModel,\n    getSelectedRows,\n    isRowSelected,\n    isRowSelectable\n  };\n  const selectionPrivateApi = {\n    selectRows,\n    selectRowRange\n  };\n  useGridApiMethod(apiRef, selectionPublicApi, 'public');\n  useGridApiMethod(apiRef, selectionPrivateApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * EVENTS\n   */\n  const removeOutdatedSelection = React.useCallback(() => {\n    if (props.keepNonExistentRowsSelected) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    const rowsLookup = gridRowsLookupSelector(apiRef);\n\n    // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n    const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n    let hasChanged = false;\n    currentSelection.forEach(id => {\n      if (!rowsLookup[id]) {\n        delete selectionLookup[id];\n        hasChanged = true;\n      }\n    });\n    if (hasChanged) {\n      apiRef.current.setRowSelectionModel(Object.values(selectionLookup));\n    }\n  }, [apiRef, props.keepNonExistentRowsSelected]);\n  const handleSingleRowSelection = React.useCallback((id, event) => {\n    const hasCtrlKey = event.metaKey || event.ctrlKey;\n\n    // multiple selection is only allowed if:\n    // - it is a checkboxSelection\n    // - it is a keyboard selection\n    // - Ctrl is pressed\n\n    const isMultipleSelectionDisabled = !checkboxSelection && !hasCtrlKey && !isKeyboardEvent(event);\n    const resetSelection = !canHaveMultipleSelection || isMultipleSelectionDisabled;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (resetSelection) {\n      apiRef.current.selectRow(id, !isMultipleSelectionDisabled ? !isSelected : true, true);\n    } else {\n      apiRef.current.selectRow(id, !isSelected, false);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection]);\n  const handleRowClick = React.useCallback((params, event) => {\n    if (disableRowSelectionOnClick) {\n      return;\n    }\n    const field = event.target.closest(`.${gridClasses.cell}`)?.getAttribute('data-field');\n    if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // click on checkbox should not trigger row selection\n      return;\n    }\n    if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      // click to open the detail panel should not select the row\n      return;\n    }\n    if (field) {\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    const rowNode = apiRef.current.getRowNode(params.id);\n    if (rowNode.type === 'pinnedRow') {\n      return;\n    }\n    if (event.shiftKey && canHaveMultipleSelection) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      handleSingleRowSelection(params.id, event);\n    }\n  }, [disableRowSelectionOnClick, canHaveMultipleSelection, apiRef, expandMouseRowRangeSelection, handleSingleRowSelection]);\n  const preventSelectionOnShift = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.shiftKey) {\n      window.getSelection()?.removeAllRanges();\n    }\n  }, [canHaveMultipleSelection]);\n  const handleRowSelectionCheckboxChange = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.nativeEvent.shiftKey) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      apiRef.current.selectRow(params.id, params.value, !canHaveMultipleSelection);\n    }\n  }, [apiRef, expandMouseRowRangeSelection, canHaveMultipleSelection]);\n  const handleHeaderSelectionCheckboxChange = React.useCallback(params => {\n    const shouldLimitSelectionToCurrentPage = props.checkboxSelectionVisibleOnly && props.pagination;\n    const rowsToBeSelected = shouldLimitSelectionToCurrentPage ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridExpandedSortedRowIdsSelector(apiRef);\n    const filterModel = gridFilterModelSelector(apiRef);\n    apiRef.current.selectRows(rowsToBeSelected, params.value, filterModel?.items.length > 0);\n  }, [apiRef, props.checkboxSelectionVisibleOnly, props.pagination]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Get the most recent cell mode because it may have been changed by another listener\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.Edit) {\n      return;\n    }\n\n    // Ignore portal\n    // Do not apply shortcuts if the focus is not on the cell root component\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    if (isNavigationKey(event.key) && event.shiftKey) {\n      // The cell that has focus after the keyboard navigation\n      const focusCell = gridFocusCellSelector(apiRef);\n      if (focusCell && focusCell.id !== params.id) {\n        event.preventDefault();\n        const isNextRowSelected = apiRef.current.isRowSelected(focusCell.id);\n        if (!canHaveMultipleSelection) {\n          apiRef.current.selectRow(focusCell.id, !isNextRowSelected, true);\n          return;\n        }\n        const newRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id);\n        const previousRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\n        let start;\n        let end;\n        if (newRowIndex > previousRowIndex) {\n          if (isNextRowSelected) {\n            // We are navigating to the bottom of the page and adding selected rows\n            start = previousRowIndex;\n            end = newRowIndex - 1;\n          } else {\n            // We are navigating to the bottom of the page and removing selected rows\n            start = previousRowIndex;\n            end = newRowIndex;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isNextRowSelected) {\n            // We are navigating to the top of the page and removing selected rows\n            start = newRowIndex + 1;\n            end = previousRowIndex;\n          } else {\n            // We are navigating to the top of the page and adding selected rows\n            start = newRowIndex;\n            end = previousRowIndex;\n          }\n        }\n        const rowsBetweenStartAndEnd = visibleRows.rows.slice(start, end + 1).map(row => row.id);\n        apiRef.current.selectRows(rowsBetweenStartAndEnd, !isNextRowSelected);\n        return;\n      }\n    }\n    if (event.key === ' ' && event.shiftKey) {\n      event.preventDefault();\n      handleSingleRowSelection(params.id, event);\n      return;\n    }\n    if (event.key === 'a' && (event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n      selectRows(apiRef.current.getAllRowIds(), true);\n    }\n  }, [apiRef, handleSingleRowSelection, selectRows, visibleRows.rows, canHaveMultipleSelection]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', runIfRowSelectionIsEnabled(removeOutdatedSelection));\n  useGridApiEventHandler(apiRef, 'rowClick', runIfRowSelectionIsEnabled(handleRowClick));\n  useGridApiEventHandler(apiRef, 'rowSelectionCheckboxChange', runIfRowSelectionIsEnabled(handleRowSelectionCheckboxChange));\n  useGridApiEventHandler(apiRef, 'headerSelectionCheckboxChange', handleHeaderSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', runIfRowSelectionIsEnabled(preventSelectionOnShift));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfRowSelectionIsEnabled(handleCellKeyDown));\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (propRowSelectionModel !== undefined) {\n      apiRef.current.setRowSelectionModel(propRowSelectionModel);\n    }\n  }, [apiRef, propRowSelectionModel, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection) {\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, props.rowSelection]);\n  const isStateControlled = propRowSelectionModel != null;\n  React.useEffect(() => {\n    if (isStateControlled || !props.rowSelection) {\n      return;\n    }\n\n    // props.isRowSelectable changed\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (isRowSelectable) {\n      const newSelection = currentSelection.filter(id => isRowSelectable(id));\n      if (newSelection.length < currentSelection.length) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection || isStateControlled) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (!canHaveMultipleSelection && currentSelection.length > 1) {\n      // See https://github.com/mui/mui-x/issues/8455\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection, isStateControlled, props.rowSelection]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortModelSelector } from './gridSortingSelector';\nimport { GRID_ROOT_GROUP_ID, gridRowTreeSelector } from '../rows';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { useGridRegisterStrategyProcessor, GRID_DEFAULT_STRATEGY } from '../../core/strategyProcessing';\nimport { buildAggregatedSortingApplier, mergeStateWithSortModel, getNextGridSortDirection, sanitizeSortModel } from './gridSortingUtils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { getTreeNodeDescendants } from '../rows/gridRowsUtils';\nexport const sortingStateInitializer = (state, props) => {\n  const sortModel = props.sortModel ?? props.initialState?.sorting?.sortModel ?? [];\n  return _extends({}, state, {\n    sorting: {\n      sortModel: sanitizeSortModel(sortModel, props.disableMultipleColumnsSorting),\n      sortedRows: []\n    }\n  });\n};\n\n/**\n * @requires useGridRows (event)\n * @requires useGridColumns (event)\n */\nexport const useGridSorting = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSorting');\n  apiRef.current.registerControlState({\n    stateId: 'sortModel',\n    propModel: props.sortModel,\n    propOnChange: props.onSortModelChange,\n    stateSelector: gridSortModelSelector,\n    changeEvent: 'sortModelChange'\n  });\n  const upsertSortModel = React.useCallback((field, sortItem) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existingIdx = sortModel.findIndex(c => c.field === field);\n    let newSortModel = [...sortModel];\n    if (existingIdx > -1) {\n      if (sortItem?.sort == null) {\n        newSortModel.splice(existingIdx, 1);\n      } else {\n        newSortModel.splice(existingIdx, 1, sortItem);\n      }\n    } else {\n      newSortModel = [...sortModel, sortItem];\n    }\n    return newSortModel;\n  }, [apiRef]);\n  const createSortItem = React.useCallback((col, directionOverride) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existing = sortModel.find(c => c.field === col.field);\n    if (existing) {\n      const nextSort = directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder, existing.sort) : directionOverride;\n      return nextSort === undefined ? undefined : _extends({}, existing, {\n        sort: nextSort\n      });\n    }\n    return {\n      field: col.field,\n      sort: directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder) : directionOverride\n    };\n  }, [apiRef, props.sortingOrder]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.sortable === false || props.disableColumnSorting) {\n      return columnMenuItems;\n    }\n    const sortingOrder = colDef.sortingOrder || props.sortingOrder;\n    if (sortingOrder.some(item => !!item)) {\n      return [...columnMenuItems, 'columnMenuSortItem'];\n    }\n    return columnMenuItems;\n  }, [props.sortingOrder, props.disableColumnSorting]);\n\n  /**\n   * API METHODS\n   */\n  const applySorting = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (props.sortingMode === 'server') {\n        logger.debug('Skipping sorting rows as sortingMode = server');\n        return _extends({}, state, {\n          sorting: _extends({}, state.sorting, {\n            sortedRows: getTreeNodeDescendants(gridRowTreeSelector(apiRef), GRID_ROOT_GROUP_ID, false)\n          })\n        });\n      }\n      const sortModel = gridSortModelSelector(state, apiRef.current.instanceId);\n      const sortRowList = buildAggregatedSortingApplier(sortModel, apiRef);\n      const sortedRows = apiRef.current.applyStrategyProcessor('sorting', {\n        sortRowList\n      });\n      return _extends({}, state, {\n        sorting: _extends({}, state.sorting, {\n          sortedRows\n        })\n      });\n    });\n    apiRef.current.publishEvent('sortedRowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.sortingMode]);\n  const setSortModel = React.useCallback(model => {\n    const currentModel = gridSortModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug(`Setting sort model`);\n      apiRef.current.setState(mergeStateWithSortModel(model, props.disableMultipleColumnsSorting));\n      apiRef.current.forceUpdate();\n      apiRef.current.applySorting();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsSorting]);\n  const sortColumn = React.useCallback((field, direction, allowMultipleSorting) => {\n    const column = apiRef.current.getColumn(field);\n    const sortItem = createSortItem(column, direction);\n    let sortModel;\n    if (!allowMultipleSorting || props.disableMultipleColumnsSorting) {\n      sortModel = sortItem?.sort == null ? [] : [sortItem];\n    } else {\n      sortModel = upsertSortModel(column.field, sortItem);\n    }\n    apiRef.current.setSortModel(sortModel);\n  }, [apiRef, upsertSortModel, createSortItem, props.disableMultipleColumnsSorting]);\n  const getSortModel = React.useCallback(() => gridSortModelSelector(apiRef), [apiRef]);\n  const getSortedRows = React.useCallback(() => {\n    const sortedRows = gridSortedRowEntriesSelector(apiRef);\n    return sortedRows.map(row => row.model);\n  }, [apiRef]);\n  const getSortedRowIds = React.useCallback(() => gridSortedRowIdsSelector(apiRef), [apiRef]);\n  const getRowIdFromRowIndex = React.useCallback(index => apiRef.current.getSortedRowIds()[index], [apiRef]);\n  const sortApi = {\n    getSortModel,\n    getSortedRows,\n    getSortedRowIds,\n    getRowIdFromRowIndex,\n    setSortModel,\n    sortColumn,\n    applySorting\n  };\n  useGridApiMethod(apiRef, sortApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const sortModelToExport = gridSortModelSelector(apiRef);\n    const shouldExportSortModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.sortModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.sorting?.sortModel != null ||\n    // Export if the model is not empty\n    sortModelToExport.length > 0;\n    if (!shouldExportSortModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      sorting: {\n        sortModel: sortModelToExport\n      }\n    });\n  }, [apiRef, props.sortModel, props.initialState?.sorting?.sortModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const sortModel = context.stateToRestore.sorting?.sortModel;\n    if (sortModel == null) {\n      return params;\n    }\n    apiRef.current.setState(mergeStateWithSortModel(sortModel, props.disableMultipleColumnsSorting));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.applySorting]\n    });\n  }, [apiRef, props.disableMultipleColumnsSorting]);\n  const flatSortingMethod = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n    const rootGroupNode = rowTree[GRID_ROOT_GROUP_ID];\n    const sortedChildren = params.sortRowList ? params.sortRowList(rootGroupNode.children.map(childId => rowTree[childId])) : [...rootGroupNode.children];\n    if (rootGroupNode.footerId != null) {\n      sortedChildren.push(rootGroupNode.footerId);\n    }\n    return sortedChildren;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'sorting', flatSortingMethod);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnHeaderClick = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    const allowMultipleSorting = event.shiftKey || event.metaKey || event.ctrlKey;\n    sortColumn(field, undefined, allowMultipleSorting);\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnHeaderKeyDown = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    // Ctrl + Enter opens the column menu\n    if (event.key === 'Enter' && !event.ctrlKey && !event.metaKey) {\n      sortColumn(field, undefined, event.shiftKey);\n    }\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnsChange = React.useCallback(() => {\n    // When the columns change we check that the sorted columns are still part of the dataset\n    const sortModel = gridSortModelSelector(apiRef);\n    const latestColumns = gridColumnLookupSelector(apiRef);\n    if (sortModel.length > 0) {\n      const newModel = sortModel.filter(sortItem => latestColumns[sortItem.field]);\n      if (newModel.length < sortModel.length) {\n        apiRef.current.setSortModel(newModel);\n      }\n    }\n  }, [apiRef]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'sorting') {\n      apiRef.current.applySorting();\n    }\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridApiEventHandler(apiRef, 'columnHeaderClick', handleColumnHeaderClick);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'rowsSet', apiRef.current.applySorting);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.applySorting();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.sortModel !== undefined) {\n      apiRef.current.setSortModel(props.sortModel);\n    }\n  }, [apiRef, props.sortModel]);\n};","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridPageSelector, gridPageSizeSelector } from '../pagination/gridPaginationSelector';\nimport { gridRowCountSelector } from '../rows/gridRowsSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridExpandedSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridDimensionsSelector } from '../dimensions';\n\n// Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\nfunction scrollIntoView(dimensions) {\n  const {\n    clientHeight,\n    scrollTop,\n    offsetHeight,\n    offsetTop\n  } = dimensions;\n  const elementBottom = offsetTop + offsetHeight;\n  // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n  if (offsetHeight > clientHeight) {\n    return offsetTop;\n  }\n  if (elementBottom - clientHeight > scrollTop) {\n    return elementBottom - clientHeight;\n  }\n  if (offsetTop < scrollTop) {\n    return offsetTop;\n  }\n  return undefined;\n}\n\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\nexport const useGridScroll = (apiRef, props) => {\n  const theme = useTheme();\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersContainerRef;\n  const virtualScrollerRef = apiRef.current.virtualScrollerRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridExpandedSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n    if (params.colIndex !== undefined) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n      if (typeof params.rowIndex !== 'undefined') {\n        const rowId = visibleSortedRows[params.rowIndex]?.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n      // When using RTL, `scrollLeft` becomes negative, so we must ensure that we only compare values.\n      scrollCoordinates.left = scrollIntoView({\n        clientHeight: dimensions.viewportInnerSize.width,\n        scrollTop: Math.abs(virtualScrollerRef.current.scrollLeft),\n        offsetHeight: cellWidth,\n        offsetTop: columnPositions[params.colIndex]\n      });\n    }\n    if (params.rowIndex !== undefined) {\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      scrollCoordinates.top = scrollIntoView({\n        clientHeight: dimensions.viewportInnerSize.height,\n        scrollTop: virtualScrollerRef.current.scrollTop,\n        offsetHeight: targetOffsetHeight,\n        offsetTop: rowsMeta.positions[elementIndex]\n      });\n    }\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n    return false;\n  }, [logger, apiRef, virtualScrollerRef, props.pagination, visibleSortedRows]);\n  const scroll = React.useCallback(params => {\n    if (virtualScrollerRef.current && params.left !== undefined && colRef.current) {\n      const direction = theme.direction === 'rtl' ? -1 : 1;\n      colRef.current.scrollLeft = params.left;\n      virtualScrollerRef.current.scrollLeft = direction * params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n    if (virtualScrollerRef.current && params.top !== undefined) {\n      virtualScrollerRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [virtualScrollerRef, theme.direction, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!virtualScrollerRef?.current) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    return {\n      top: virtualScrollerRef.current.scrollTop,\n      left: virtualScrollerRef.current.scrollLeft\n    };\n  }, [virtualScrollerRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'public');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { throttle } from '../../../utils/throttle';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnsTotalWidthSelector, gridVisiblePinnedColumnDefinitionsSelector } from '../columns';\nimport { gridDimensionsSelector } from './gridDimensionsSelectors';\nimport { gridDensityFactorSelector } from '../density';\nimport { gridRenderContextSelector } from '../virtualization';\nimport { useGridSelector } from '../../utils';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { calculatePinnedRowsHeight } from '../rows/gridRowsUtils';\nimport { getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nconst EMPTY_SIZE = {\n  width: 0,\n  height: 0\n};\nconst EMPTY_DIMENSIONS = {\n  isReady: false,\n  root: EMPTY_SIZE,\n  viewportOuterSize: EMPTY_SIZE,\n  viewportInnerSize: EMPTY_SIZE,\n  contentSize: EMPTY_SIZE,\n  minimumSize: EMPTY_SIZE,\n  hasScrollX: false,\n  hasScrollY: false,\n  scrollbarSize: 0,\n  headerHeight: 0,\n  headerFilterHeight: 0,\n  rowWidth: 0,\n  rowHeight: 0,\n  columnsTotalWidth: 0,\n  leftPinnedWidth: 0,\n  rightPinnedWidth: 0,\n  headersTotalHeight: 0,\n  topContainerHeight: 0,\n  bottomContainerHeight: 0\n};\nexport const dimensionsStateInitializer = state => {\n  const dimensions = EMPTY_DIMENSIONS;\n  return _extends({}, state, {\n    dimensions\n  });\n};\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(EMPTY_SIZE);\n  const dimensionsState = useGridSelector(apiRef, gridDimensionsSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  const headerHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const headerFilterHeight = Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor);\n  const columnsTotalWidth = roundToDecimalPlaces(gridColumnsTotalWidthSelector(apiRef), 6);\n  const headersTotalHeight = getTotalHeaderHeight(apiRef, props);\n  const leftPinnedWidth = pinnedColumns.left.reduce((w, col) => w + col.computedWidth, 0);\n  const rightPinnedWidth = pinnedColumns.right.reduce((w, col) => w + col.computedWidth, 0);\n  const [savedSize, setSavedSize] = React.useState();\n  const debouncedSetSavedSize = React.useMemo(() => throttle(setSavedSize, props.resizeThrottleMs), [props.resizeThrottleMs]);\n  const previousSize = React.useRef();\n  const getRootDimensions = () => apiRef.current.state.dimensions;\n  const setDimensions = useEventCallback(dimensions => {\n    apiRef.current.setState(state => _extends({}, state, {\n      dimensions\n    }));\n  });\n  const resize = React.useCallback(() => {\n    const element = apiRef.current.mainElementRef.current;\n    if (!element) {\n      return;\n    }\n    const computedStyle = ownerWindow(element).getComputedStyle(element);\n    const newSize = {\n      width: parseFloat(computedStyle.width) || 0,\n      height: parseFloat(computedStyle.height) || 0\n    };\n    if (!previousSize.current || !areElementSizesEqual(previousSize.current, newSize)) {\n      apiRef.current.publishEvent('resize', newSize);\n      previousSize.current = newSize;\n    }\n  }, [apiRef]);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    if (!dimensions.isReady) {\n      return 0;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n\n    // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n    if (props.getRowHeight) {\n      const renderContext = gridRenderContextSelector(apiRef);\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.pagination, props.paginationMode, props.getRowHeight, rowHeight]);\n  const updateDimensions = React.useCallback(() => {\n    const rootElement = apiRef.current.rootElementRef.current;\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    const scrollbarSize = measureScrollbarSize(rootElement, columnsTotalWidth, props.scrollbarSize);\n    const topContainerHeight = headersTotalHeight + pinnedRowsHeight.top;\n    const bottomContainerHeight = pinnedRowsHeight.bottom;\n    const nonPinnedColumnsTotalWidth = columnsTotalWidth - leftPinnedWidth - rightPinnedWidth;\n    const contentSize = {\n      width: nonPinnedColumnsTotalWidth,\n      height: rowsMeta.currentPageTotalHeight\n    };\n    let viewportOuterSize;\n    let viewportInnerSize;\n    let hasScrollX = false;\n    let hasScrollY = false;\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > Math.round(rootDimensionsRef.current.width);\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: topContainerHeight + bottomContainerHeight + contentSize.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - (hasScrollY ? scrollbarSize : 0)),\n        height: Math.max(0, viewportOuterSize.height - (hasScrollX ? scrollbarSize : 0))\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rootDimensionsRef.current.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - leftPinnedWidth - rightPinnedWidth),\n        height: Math.max(0, viewportOuterSize.height - topContainerHeight - bottomContainerHeight)\n      };\n      const content = contentSize;\n      const container = viewportInnerSize;\n      const hasScrollXIfNoYScrollBar = content.width > container.width;\n      const hasScrollYIfNoXScrollBar = content.height > container.height;\n      if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n        hasScrollY = hasScrollYIfNoXScrollBar;\n        hasScrollX = content.width + (hasScrollY ? scrollbarSize : 0) > container.width;\n\n        // We recalculate the scroll y to consider the size of the x scrollbar.\n        if (hasScrollX) {\n          hasScrollY = content.height + scrollbarSize > container.height;\n        }\n      }\n      if (hasScrollY) {\n        viewportInnerSize.width -= scrollbarSize;\n      }\n      if (hasScrollX) {\n        viewportInnerSize.height -= scrollbarSize;\n      }\n    }\n    const rowWidth = Math.max(viewportOuterSize.width, columnsTotalWidth + (hasScrollY ? scrollbarSize : 0));\n    const minimumSize = {\n      width: columnsTotalWidth,\n      height: topContainerHeight + contentSize.height + bottomContainerHeight\n    };\n    const newDimensions = {\n      isReady: true,\n      root: rootDimensionsRef.current,\n      viewportOuterSize,\n      viewportInnerSize,\n      contentSize,\n      minimumSize,\n      hasScrollX,\n      hasScrollY,\n      scrollbarSize,\n      headerHeight,\n      headerFilterHeight,\n      rowWidth,\n      rowHeight,\n      columnsTotalWidth,\n      leftPinnedWidth,\n      rightPinnedWidth,\n      headersTotalHeight,\n      topContainerHeight,\n      bottomContainerHeight\n    };\n    const prevDimensions = apiRef.current.state.dimensions;\n    setDimensions(newDimensions);\n    if (!areElementSizesEqual(newDimensions.viewportInnerSize, prevDimensions.viewportInnerSize)) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newDimensions.viewportInnerSize);\n    }\n    apiRef.current.updateRenderContext?.();\n  }, [apiRef, setDimensions, props.scrollbarSize, props.autoHeight, rowsMeta.currentPageTotalHeight, rowHeight, headerHeight, headerFilterHeight, columnsTotalWidth, headersTotalHeight, leftPinnedWidth, rightPinnedWidth]);\n  const apiPublic = {\n    resize,\n    getRootDimensions\n  };\n  const apiPrivate = {\n    updateDimensions,\n    getViewportPageSize\n  };\n  useGridApiMethod(apiRef, apiPublic, 'public');\n  useGridApiMethod(apiRef, apiPrivate, 'private');\n  useEnhancedEffect(() => {\n    if (savedSize) {\n      updateDimensions();\n      apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n    }\n  }, [apiRef, savedSize, updateDimensions]);\n  const root = apiRef.current.rootElementRef.current;\n  useEnhancedEffect(() => {\n    if (!root) {\n      return;\n    }\n    const set = (k, v) => root.style.setProperty(k, v);\n    set('--DataGrid-width', `${dimensionsState.viewportOuterSize.width}px`);\n    set('--DataGrid-hasScrollX', `${Number(dimensionsState.hasScrollX)}`);\n    set('--DataGrid-hasScrollY', `${Number(dimensionsState.hasScrollY)}`);\n    set('--DataGrid-scrollbarSize', `${dimensionsState.scrollbarSize}px`);\n    set('--DataGrid-rowWidth', `${dimensionsState.rowWidth}px`);\n    set('--DataGrid-columnsTotalWidth', `${dimensionsState.columnsTotalWidth}px`);\n    set('--DataGrid-leftPinnedWidth', `${dimensionsState.leftPinnedWidth}px`);\n    set('--DataGrid-rightPinnedWidth', `${dimensionsState.rightPinnedWidth}px`);\n    set('--DataGrid-headerHeight', `${dimensionsState.headerHeight}px`);\n    set('--DataGrid-headersTotalHeight', `${dimensionsState.headersTotalHeight}px`);\n    set('--DataGrid-topContainerHeight', `${dimensionsState.topContainerHeight}px`);\n    set('--DataGrid-bottomContainerHeight', `${dimensionsState.bottomContainerHeight}px`);\n    set('--height', `${dimensionsState.rowHeight}px`);\n  }, [root, dimensionsState]);\n  const isFirstSizing = React.useRef(true);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size;\n\n    // jsdom has no layout capabilities\n    const isJSDOM = /jsdom/.test(window.navigator.userAgent);\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (isFirstSizing.current) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      setSavedSize(size);\n      isFirstSizing.current = false;\n      return;\n    }\n    debouncedSetSavedSize(size);\n  }, [props.autoHeight, debouncedSetSavedSize, logger]);\n  useEnhancedEffect(updateDimensions, [updateDimensions]);\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'paginationModelChange', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'columnsChange', updateDimensions);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}\nfunction measureScrollbarSize(rootElement, columnsTotalWidth, scrollbarSize) {\n  if (scrollbarSize !== undefined) {\n    return scrollbarSize;\n  }\n  if (rootElement === null || columnsTotalWidth === 0) {\n    return 0;\n  }\n  const doc = ownerDocument(rootElement);\n  const scrollDiv = doc.createElement('div');\n  scrollDiv.style.width = '99px';\n  scrollDiv.style.height = '99px';\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.overflow = 'scroll';\n  scrollDiv.className = 'scrollDiv';\n  rootElement.appendChild(scrollDiv);\n  const size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  rootElement.removeChild(scrollDiv);\n  return size;\n}\n\n// Get rid of floating point imprecision errors\n// https://github.com/mui/mui-x/issues/9550#issuecomment-1619020477\nfunction roundToDecimalPlaces(value, decimals) {\n  return Math.round(value * 10 ** decimals) / 10 ** decimals;\n}\nfunction areElementSizesEqual(a, b) {\n  return a.width === b.width && a.height === b.height;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_debounce as debounce } from '@mui/utils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridDensityFactorSelector } from '../density/densitySelector';\nimport { gridFilterModelSelector } from '../filter/gridFilterSelector';\nimport { gridPaginationSelector } from '../pagination/gridPaginationSelector';\nimport { gridSortModelSelector } from '../sorting/gridSortingSelector';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from '../../../DataGrid/useDataGridProps';\n\n// TODO: I think the row heights can now be encoded as a single `size` instead of `sizes.baseXxxx`\n\nexport const rowsMetaStateInitializer = state => _extends({}, state, {\n  rowsMeta: {\n    currentPageTotalHeight: 0,\n    positions: []\n  }\n});\nlet warnedOnceInvalidRowHeight = false;\nconst getValidRowHeight = (rowHeightProp, defaultRowHeight, warningMessage) => {\n  if (typeof rowHeightProp === 'number' && rowHeightProp > 0) {\n    return rowHeightProp;\n  }\n  if (process.env.NODE_ENV !== 'production' && !warnedOnceInvalidRowHeight && typeof rowHeightProp !== 'undefined' && rowHeightProp !== null) {\n    console.warn(warningMessage);\n    warnedOnceInvalidRowHeight = true;\n  }\n  return defaultRowHeight;\n};\nconst rowHeightWarning = [`MUI X: The \\`rowHeight\\` prop should be a number greater than 0.`, `The default value will be used instead.`].join('\\n');\nconst getRowHeightWarning = [`MUI X: The \\`getRowHeight\\` prop should return a number greater than 0 or 'auto'.`, `The default value will be used instead.`].join('\\n');\n\n/**\n * @requires useGridPageSize (method)\n * @requires useGridPage (method)\n */\nexport const useGridRowsMeta = (apiRef, props) => {\n  const {\n    getRowHeight: getRowHeightProp,\n    getRowSpacing,\n    getEstimatedRowHeight\n  } = props;\n  const rowsHeightLookup = React.useRef(Object.create(null));\n\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  const lastMeasuredRowIndex = React.useRef(-1);\n  const hasRowWithAutoHeight = React.useRef(false);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const validRowHeight = getValidRowHeight(props.rowHeight, DATA_GRID_PROPS_DEFAULT_VALUES.rowHeight, rowHeightWarning);\n  const rowHeight = Math.floor(validRowHeight * densityFactor);\n  const hydrateRowsMeta = React.useCallback(() => {\n    hasRowWithAutoHeight.current = false;\n    const calculateRowProcessedSizes = row => {\n      if (!rowsHeightLookup.current[row.id]) {\n        rowsHeightLookup.current[row.id] = {\n          sizes: {\n            baseCenter: rowHeight\n          },\n          isResized: false,\n          autoHeight: false,\n          needsFirstMeasurement: true // Assume all rows will need to be measured by default\n        };\n      }\n      const {\n        isResized,\n        needsFirstMeasurement,\n        sizes\n      } = rowsHeightLookup.current[row.id];\n      let baseRowHeight = typeof rowHeight === 'number' && rowHeight > 0 ? rowHeight : 52;\n      const existingBaseRowHeight = sizes.baseCenter;\n      if (isResized) {\n        // Do not recalculate resized row height and use the value from the lookup\n        baseRowHeight = existingBaseRowHeight;\n      } else if (getRowHeightProp) {\n        const rowHeightFromUser = getRowHeightProp(_extends({}, row, {\n          densityFactor\n        }));\n        if (rowHeightFromUser === 'auto') {\n          if (needsFirstMeasurement) {\n            const estimatedRowHeight = getEstimatedRowHeight ? getEstimatedRowHeight(_extends({}, row, {\n              densityFactor\n            })) : rowHeight;\n\n            // If the row was not measured yet use the estimated row height\n            baseRowHeight = estimatedRowHeight ?? rowHeight;\n          } else {\n            baseRowHeight = existingBaseRowHeight;\n          }\n          hasRowWithAutoHeight.current = true;\n          rowsHeightLookup.current[row.id].autoHeight = true;\n        } else {\n          // Default back to base rowHeight if getRowHeight returns invalid value.\n          baseRowHeight = getValidRowHeight(rowHeightFromUser, rowHeight, getRowHeightWarning);\n          rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n          rowsHeightLookup.current[row.id].autoHeight = false;\n        }\n      } else {\n        rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n      }\n      const initialHeights = {\n        baseCenter: baseRowHeight\n      };\n      if (getRowSpacing) {\n        const indexRelativeToCurrentPage = apiRef.current.getRowIndexRelativeToVisibleRows(row.id);\n        const spacing = getRowSpacing(_extends({}, row, {\n          isFirstVisible: indexRelativeToCurrentPage === 0,\n          isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n          indexRelativeToCurrentPage\n        }));\n        initialHeights.spacingTop = spacing.top ?? 0;\n        initialHeights.spacingBottom = spacing.bottom ?? 0;\n      }\n      const processedSizes = apiRef.current.unstable_applyPipeProcessors('rowHeight', initialHeights, row);\n      rowsHeightLookup.current[row.id].sizes = processedSizes;\n      return processedSizes;\n    };\n    const positions = [];\n    const currentPageTotalHeight = currentPage.rows.reduce((acc, row) => {\n      positions.push(acc);\n      let otherSizes = 0;\n      const processedSizes = calculateRowProcessedSizes(row);\n      /* eslint-disable-next-line guard-for-in */\n      for (const key in processedSizes) {\n        const value = processedSizes[key];\n        if (key !== 'baseCenter') {\n          otherSizes += value;\n        }\n      }\n      return acc + processedSizes.baseCenter + otherSizes;\n    }, 0);\n    pinnedRows?.top?.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    pinnedRows?.bottom?.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowsMeta: {\n          currentPageTotalHeight,\n          positions\n        }\n      });\n    });\n    if (!hasRowWithAutoHeight.current) {\n      // No row has height=auto, so all rows are already measured\n      lastMeasuredRowIndex.current = Infinity;\n    }\n    apiRef.current.forceUpdate();\n  }, [apiRef, currentPage.rows, rowHeight, getRowHeightProp, getRowSpacing, getEstimatedRowHeight, pinnedRows, densityFactor]);\n  const getRowHeight = React.useCallback(rowId => {\n    const height = rowsHeightLookup.current[rowId];\n    return height ? height.sizes.baseCenter : rowHeight;\n  }, [rowHeight]);\n  const getRowInternalSizes = rowId => rowsHeightLookup.current[rowId]?.sizes;\n  const setRowHeight = React.useCallback((id, height) => {\n    rowsHeightLookup.current[id].sizes.baseCenter = height;\n    rowsHeightLookup.current[id].isResized = true;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n  const debouncedHydrateRowsMeta = React.useMemo(() => debounce(hydrateRowsMeta, props.rowPositionsDebounceMs), [hydrateRowsMeta, props.rowPositionsDebounceMs]);\n  const storeMeasuredRowHeight = React.useCallback((id, height) => {\n    if (!rowsHeightLookup.current[id] || !rowsHeightLookup.current[id].autoHeight) {\n      return;\n    }\n\n    // Only trigger hydration if the value is different, otherwise we trigger a loop\n    const needsHydration = rowsHeightLookup.current[id].sizes.baseCenter !== height;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    rowsHeightLookup.current[id].sizes.baseCenter = height;\n    if (needsHydration) {\n      debouncedHydrateRowsMeta();\n    }\n  }, [debouncedHydrateRowsMeta]);\n  const rowHasAutoHeight = React.useCallback(id => {\n    return rowsHeightLookup.current[id]?.autoHeight || false;\n  }, []);\n  const getLastMeasuredRowIndex = React.useCallback(() => {\n    return lastMeasuredRowIndex.current;\n  }, []);\n  const setLastMeasuredRowIndex = React.useCallback(index => {\n    if (hasRowWithAutoHeight.current && index > lastMeasuredRowIndex.current) {\n      lastMeasuredRowIndex.current = index;\n    }\n  }, []);\n  const resetRowHeights = React.useCallback(() => {\n    rowsHeightLookup.current = {};\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n\n  // The effect is used to build the rows meta data - currentPageTotalHeight and positions.\n  // Because of variable row height this is needed for the virtualization\n  React.useEffect(() => {\n    hydrateRowsMeta();\n  }, [rowHeight, filterModel, paginationState, sortModel, hydrateRowsMeta]);\n  useGridRegisterPipeApplier(apiRef, 'rowHeight', hydrateRowsMeta);\n  const rowsMetaApi = {\n    unstable_setLastMeasuredRowIndex: setLastMeasuredRowIndex,\n    unstable_getRowHeight: getRowHeight,\n    unstable_getRowInternalSizes: getRowInternalSizes,\n    unstable_setRowHeight: setRowHeight,\n    unstable_storeRowHeightMeasurement: storeMeasuredRowHeight,\n    resetRowHeights\n  };\n  const rowsMetaPrivateApi = {\n    getLastMeasuredRowIndex,\n    rowHasAutoHeight\n  };\n  useGridApiMethod(apiRef, rowsMetaApi, 'public');\n  useGridApiMethod(apiRef, rowsMetaPrivateApi, 'private');\n};","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnSpanning = apiRef => {\n  const lookup = React.useRef({});\n  const getCellColSpanInfo = (rowId, columnIndex) => {\n    return lookup.current[rowId]?.[columnIndex];\n  };\n  const resetColSpan = () => {\n    lookup.current = {};\n  };\n\n  // Calculate `colSpan` for each cell in the row\n  const calculateColSpan = React.useCallback(({\n    rowId,\n    minFirstColumn,\n    maxLastColumn,\n    columns\n  }) => {\n    for (let i = minFirstColumn; i < maxLastColumn; i += 1) {\n      const cellProps = calculateCellColSpan({\n        apiRef,\n        lookup: lookup.current,\n        columnIndex: i,\n        rowId,\n        minFirstColumnIndex: minFirstColumn,\n        maxLastColumnIndex: maxLastColumn,\n        columns\n      });\n      if (cellProps.colSpan > 1) {\n        i += cellProps.colSpan - 1;\n      }\n    }\n  }, [apiRef]);\n  const columnSpanningPublicApi = {\n    unstable_getCellColSpanInfo: getCellColSpanInfo\n  };\n  const columnSpanningPrivateApi = {\n    resetColSpan,\n    calculateColSpan\n  };\n  useGridApiMethod(apiRef, columnSpanningPublicApi, 'public');\n  useGridApiMethod(apiRef, columnSpanningPrivateApi, 'private');\n  useGridApiEventHandler(apiRef, 'columnOrderChange', resetColSpan);\n};\nfunction calculateCellColSpan(params) {\n  const {\n    apiRef,\n    lookup,\n    columnIndex,\n    rowId,\n    minFirstColumnIndex,\n    maxLastColumnIndex,\n    columns\n  } = params;\n  const columnsLength = columns.length;\n  const column = columns[columnIndex];\n  const row = apiRef.current.getRow(rowId);\n  const value = apiRef.current.getRowValue(row, column);\n  const colSpan = typeof column.colSpan === 'function' ? column.colSpan(value, row, column, apiRef) : column.colSpan;\n  if (!colSpan || colSpan === 1) {\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan: 1,\n        width: column.computedWidth\n      }\n    });\n    return {\n      colSpan: 1\n    };\n  }\n  let width = column.computedWidth;\n  for (let j = 1; j < colSpan; j += 1) {\n    const nextColumnIndex = columnIndex + j;\n    // Cells should be spanned only within their column section (left-pinned, right-pinned and unpinned).\n    if (nextColumnIndex >= minFirstColumnIndex && nextColumnIndex < maxLastColumnIndex) {\n      const nextColumn = columns[nextColumnIndex];\n      width += nextColumn.computedWidth;\n      setCellColSpanInfo(lookup, rowId, columnIndex + j, {\n        spannedByColSpan: true,\n        rightVisibleCellIndex: Math.min(columnIndex + colSpan, columnsLength - 1),\n        leftVisibleCellIndex: columnIndex\n      });\n    }\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan,\n        width\n      }\n    });\n  }\n  return {\n    colSpan\n  };\n}\nfunction setCellColSpanInfo(lookup, rowId, columnIndex, cellColSpanInfo) {\n  if (!lookup[rowId]) {\n    lookup[rowId] = {};\n  }\n  lookup[rowId][columnIndex] = cellColSpanInfo;\n}","import { isLeaf } from '../../../models/gridColumnGrouping';\nimport { isDeepEqual } from '../../../utils/utils';\n// This is the recurrence function that help writing `unwrapGroupingColumnModel()`\nconst recurrentUnwrapGroupingColumnModel = (columnGroupNode, parents, unwrappedGroupingModelToComplete) => {\n  if (isLeaf(columnGroupNode)) {\n    if (unwrappedGroupingModelToComplete[columnGroupNode.field] !== undefined) {\n      throw new Error([`MUI X: columnGroupingModel contains duplicated field`, `column field ${columnGroupNode.field} occurs two times in the grouping model:`, `- ${unwrappedGroupingModelToComplete[columnGroupNode.field].join(' > ')}`, `- ${parents.join(' > ')}`].join('\\n'));\n    }\n    unwrappedGroupingModelToComplete[columnGroupNode.field] = parents;\n    return;\n  }\n  const {\n    groupId,\n    children\n  } = columnGroupNode;\n  children.forEach(child => {\n    recurrentUnwrapGroupingColumnModel(child, [...parents, groupId], unwrappedGroupingModelToComplete);\n  });\n};\n\n/**\n * This is a function that provide for each column the array of its parents.\n * Parents are ordered from the root to the leaf.\n * @param columnGroupingModel The model such as provided in DataGrid props\n * @returns An object `{[field]: groupIds}` where `groupIds` is the parents of the column `field`\n */\nexport const unwrapGroupingColumnModel = columnGroupingModel => {\n  if (!columnGroupingModel) {\n    return {};\n  }\n  const unwrappedSubTree = {};\n  columnGroupingModel.forEach(columnGroupNode => {\n    recurrentUnwrapGroupingColumnModel(columnGroupNode, [], unwrappedSubTree);\n  });\n  return unwrappedSubTree;\n};\nexport const getColumnGroupsHeaderStructure = (orderedColumns, unwrappedGroupingModel, pinnedFields) => {\n  const getParents = field => unwrappedGroupingModel[field] ?? [];\n  const groupingHeaderStructure = [];\n  const maxDepth = Math.max(...orderedColumns.map(field => getParents(field).length));\n  const haveSameParents = (field1, field2, depth) => isDeepEqual(getParents(field1).slice(0, depth + 1), getParents(field2).slice(0, depth + 1));\n  const haveDifferentContainers = (field1, field2) => {\n    if (pinnedFields?.left && pinnedFields.left.includes(field1) && !pinnedFields.left.includes(field2)) {\n      return true;\n    }\n    if (pinnedFields?.right && !pinnedFields.right.includes(field1) && pinnedFields.right.includes(field2)) {\n      return true;\n    }\n    return false;\n  };\n  for (let depth = 0; depth < maxDepth; depth += 1) {\n    const depthStructure = orderedColumns.reduce((structure, newField) => {\n      const groupId = getParents(newField)[depth] ?? null;\n      if (structure.length === 0) {\n        return [{\n          columnFields: [newField],\n          groupId\n        }];\n      }\n      const lastGroup = structure[structure.length - 1];\n      const prevField = lastGroup.columnFields[lastGroup.columnFields.length - 1];\n      const prevGroupId = lastGroup.groupId;\n      if (prevGroupId !== groupId || !haveSameParents(prevField, newField, depth) ||\n      // Fix for https://github.com/mui/mui-x/issues/7041\n      haveDifferentContainers(prevField, newField)) {\n        // It's a new group\n        return [...structure, {\n          columnFields: [newField],\n          groupId\n        }];\n      }\n\n      // It extends the previous group\n      return [...structure.slice(0, structure.length - 1), {\n        columnFields: [...lastGroup.columnFields, newField],\n        groupId\n      }];\n    }, []);\n    groupingHeaderStructure.push(depthStructure);\n  }\n  return groupingHeaderStructure;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"groupId\", \"children\"];\nimport * as React from 'react';\nimport { isLeaf } from '../../../models/gridColumnGrouping';\nimport { gridColumnGroupsLookupSelector, gridColumnGroupsUnwrappedModelSelector } from './gridColumnGroupsSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { getColumnGroupsHeaderStructure, unwrapGroupingColumnModel } from './gridColumnGroupsUtils';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from '../columns';\nconst createGroupLookup = columnGroupingModel => {\n  let groupLookup = {};\n  columnGroupingModel.forEach(node => {\n    if (isLeaf(node)) {\n      return;\n    }\n    const {\n        groupId,\n        children\n      } = node,\n      other = _objectWithoutPropertiesLoose(node, _excluded);\n    if (!groupId) {\n      throw new Error('MUI X: An element of the columnGroupingModel does not have either `field` or `groupId`.');\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!children) {\n        console.warn(`MUI X: group groupId=${groupId} has no children.`);\n      }\n    }\n    const groupParam = _extends({}, other, {\n      groupId\n    });\n    const subTreeLookup = createGroupLookup(children);\n    if (subTreeLookup[groupId] !== undefined || groupLookup[groupId] !== undefined) {\n      throw new Error(`MUI X: The groupId ${groupId} is used multiple times in the columnGroupingModel.`);\n    }\n    groupLookup = _extends({}, groupLookup, subTreeLookup, {\n      [groupId]: groupParam\n    });\n  });\n  return _extends({}, groupLookup);\n};\nexport const columnGroupsStateInitializer = (state, props, apiRef) => {\n  if (!props.columnGroupingModel) {\n    return state;\n  }\n  const columnFields = gridColumnFieldsSelector(apiRef);\n  const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n  const groupLookup = createGroupLookup(props.columnGroupingModel ?? []);\n  const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n  const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, apiRef.current.state.pinnedColumns ?? {});\n  const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n  return _extends({}, state, {\n    columnGrouping: {\n      lookup: groupLookup,\n      unwrappedGroupingModel,\n      headerStructure: columnGroupsHeaderStructure,\n      maxDepth\n    }\n  });\n};\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnGrouping = (apiRef, props) => {\n  /**\n   * API METHODS\n   */\n  const getColumnGroupPath = React.useCallback(field => {\n    const unwrappedGroupingModel = gridColumnGroupsUnwrappedModelSelector(apiRef);\n    return unwrappedGroupingModel[field] ?? [];\n  }, [apiRef]);\n  const getAllGroupDetails = React.useCallback(() => {\n    const columnGroupLookup = gridColumnGroupsLookupSelector(apiRef);\n    return columnGroupLookup;\n  }, [apiRef]);\n  const columnGroupingApi = {\n    getColumnGroupPath,\n    getAllGroupDetails\n  };\n  useGridApiMethod(apiRef, columnGroupingApi, 'public');\n  const handleColumnIndexChange = React.useCallback(() => {\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n    apiRef.current.setState(state => {\n      const orderedFields = state.columns?.orderedFields ?? [];\n      const pinnedColumns = state.pinnedColumns ?? {};\n      const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(orderedFields, unwrappedGroupingModel, pinnedColumns);\n      return _extends({}, state, {\n        columnGrouping: _extends({}, state.columnGrouping, {\n          headerStructure: columnGroupsHeaderStructure\n        })\n      });\n    });\n  }, [apiRef, props.columnGroupingModel]);\n  const updateColumnGroupingState = React.useCallback(columnGroupingModel => {\n    // @ts-expect-error Move this logic to `Pro` package\n    const pinnedColumns = apiRef.current.getPinnedColumns?.() ?? {};\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n    const groupLookup = createGroupLookup(columnGroupingModel ?? []);\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(columnGroupingModel ?? []);\n    const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, pinnedColumns);\n    const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        columnGrouping: {\n          lookup: groupLookup,\n          unwrappedGroupingModel,\n          headerStructure: columnGroupsHeaderStructure,\n          maxDepth\n        }\n      });\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnIndexChange', handleColumnIndexChange);\n  useGridApiEventHandler(apiRef, 'columnsChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  }, [updateColumnGroupingState, props.columnGroupingModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { useTheme } from '@mui/material/styles';\nimport { findGridCellElementsFromCol, findGridElement, findLeftPinnedCellsAfterCol, findRightPinnedCellsBeforeCol, getFieldFromHeaderElem, findHeaderElementFromField, getFieldsFromGroupHeaderElem, findGroupHeaderElementsFromField, findGridHeader, findGridCells, findParentElementFromClassName, findLeftPinnedHeadersAfterCol, findRightPinnedHeadersBeforeCol, escapeOperandAttributeSelector } from '../../../utils/domUtils';\nimport { DEFAULT_GRID_AUTOSIZE_OPTIONS } from './gridColumnResizeApi';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiEventHandler, useGridApiMethod, useGridApiOptionHandler, useGridLogger, useGridNativeEventListener, useGridSelector, useOnMount } from '../../utils';\nimport { gridVirtualizationColumnEnabledSelector } from '../virtualization';\nimport { createControllablePromise } from '../../../utils/createControllablePromise';\nimport { clamp } from '../../../utils/utils';\nimport { useTimeout } from '../../utils/useTimeout';\nimport { GridPinnedColumnPosition } from '../columns/gridColumnsInterfaces';\nimport { gridColumnsStateSelector } from '../columns';\nfunction trackFinger(event, currentTouchId) {\n  if (currentTouchId !== undefined && event.changedTouches) {\n    for (let i = 0; i < event.changedTouches.length; i += 1) {\n      const touch = event.changedTouches[i];\n      if (touch.identifier === currentTouchId) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n    return false;\n  }\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\nfunction computeNewWidth(initialOffsetToSeparator, clickX, columnBounds, resizeDirection) {\n  let newWidth = initialOffsetToSeparator;\n  if (resizeDirection === 'Right') {\n    newWidth += clickX - columnBounds.left;\n  } else {\n    newWidth += columnBounds.right - clickX;\n  }\n  return newWidth;\n}\nfunction computeOffsetToSeparator(clickX, columnBounds, resizeDirection) {\n  if (resizeDirection === 'Left') {\n    return clickX - columnBounds.left;\n  }\n  return columnBounds.right - clickX;\n}\nfunction flipResizeDirection(side) {\n  if (side === 'Right') {\n    return 'Left';\n  }\n  return 'Right';\n}\nfunction getResizeDirection(separator, direction) {\n  const side = separator.classList.contains(gridClasses['columnSeparator--sideRight']) ? 'Right' : 'Left';\n  if (direction === 'rtl') {\n    // Resizing logic should be mirrored in the RTL case\n    return flipResizeDirection(side);\n  }\n  return side;\n}\nfunction preventClick(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n\n/**\n * Checker that returns a promise that resolves when the column virtualization\n * is disabled.\n */\nfunction useColumnVirtualizationDisabled(apiRef) {\n  const promise = React.useRef();\n  const selector = () => gridVirtualizationColumnEnabledSelector(apiRef);\n  const value = useGridSelector(apiRef, selector);\n  React.useEffect(() => {\n    if (promise.current && value === false) {\n      promise.current.resolve();\n      promise.current = undefined;\n    }\n  });\n  const asyncCheck = () => {\n    if (!promise.current) {\n      if (selector() === false) {\n        return Promise.resolve();\n      }\n      promise.current = createControllablePromise();\n    }\n    return promise.current;\n  };\n  return asyncCheck;\n}\n\n/**\n * Basic statistical outlier detection, checks if the value is `F * IQR` away from\n * the Q1 and Q3 boundaries. IQR: interquartile range.\n */\nfunction excludeOutliers(inputValues, factor) {\n  if (inputValues.length < 4) {\n    return inputValues;\n  }\n  const values = inputValues.slice();\n  values.sort((a, b) => a - b);\n  const q1 = values[Math.floor(values.length * 0.25)];\n  const q3 = values[Math.floor(values.length * 0.75) - 1];\n  const iqr = q3 - q1;\n\n  // We make a small adjustment if `iqr < 5` for the cases where the IQR is\n  // very small (for example zero) due to very close by values in the input data.\n  // Otherwise, with an IQR of `0`, anything outside that would be considered\n  // an outlier, but it makes more sense visually to allow for this 5px variance\n  // rather than showing a cropped cell.\n  const deviation = iqr < 5 ? 5 : iqr * factor;\n  return values.filter(v => v > q1 - deviation && v < q3 + deviation);\n}\nfunction extractColumnWidths(apiRef, options, columns) {\n  const widthByField = {};\n  const root = apiRef.current.rootElementRef.current;\n  root.classList.add(gridClasses.autosizing);\n  columns.forEach(column => {\n    const cells = findGridCells(apiRef.current, column.field);\n    const widths = cells.map(cell => {\n      return cell.getBoundingClientRect().width ?? 0;\n    });\n    const filteredWidths = options.includeOutliers ? widths : excludeOutliers(widths, options.outliersFactor);\n    if (options.includeHeaders) {\n      const header = findGridHeader(apiRef.current, column.field);\n      if (header) {\n        const title = header.querySelector(`.${gridClasses.columnHeaderTitle}`);\n        const content = header.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n        const iconContainer = header.querySelector(`.${gridClasses.iconButtonContainer}`);\n        const menuContainer = header.querySelector(`.${gridClasses.menuIcon}`);\n        const element = title ?? content;\n        const style = window.getComputedStyle(header, null);\n        const paddingWidth = parseInt(style.paddingLeft, 10) + parseInt(style.paddingRight, 10);\n        const contentWidth = element.scrollWidth + 1;\n        const width = contentWidth + paddingWidth + (iconContainer?.clientWidth ?? 0) + (menuContainer?.clientWidth ?? 0);\n        filteredWidths.push(width);\n      }\n    }\n    const hasColumnMin = column.minWidth !== -Infinity && column.minWidth !== undefined;\n    const hasColumnMax = column.maxWidth !== Infinity && column.maxWidth !== undefined;\n    const min = hasColumnMin ? column.minWidth : 0;\n    const max = hasColumnMax ? column.maxWidth : Infinity;\n    const maxContent = filteredWidths.length === 0 ? 0 : Math.max(...filteredWidths);\n    widthByField[column.field] = clamp(maxContent, min, max);\n  });\n  root.classList.remove(gridClasses.autosizing);\n  return widthByField;\n}\nexport const columnResizeStateInitializer = state => _extends({}, state, {\n  columnResize: {\n    resizingColumnField: ''\n  }\n});\nfunction createResizeRefs() {\n  return {\n    colDef: undefined,\n    initialColWidth: 0,\n    initialTotalWidth: 0,\n    previousMouseClickEvent: undefined,\n    columnHeaderElement: undefined,\n    headerFilterElement: undefined,\n    groupHeaderElements: [],\n    cellElements: [],\n    leftPinnedCellsAfter: [],\n    rightPinnedCellsBefore: [],\n    fillerLeft: undefined,\n    fillerRight: undefined,\n    leftPinnedHeadersAfter: [],\n    rightPinnedHeadersBefore: []\n  };\n}\n\n/**\n * @requires useGridColumns (method, event)\n * TODO: improve experience for last column\n */\nexport const useGridColumnResize = (apiRef, props) => {\n  const theme = useTheme();\n  const logger = useGridLogger(apiRef, 'useGridColumnResize');\n  const refs = useLazyRef(createResizeRefs).current;\n\n  // To improve accessibility, the separator has padding on both sides.\n  // Clicking inside the padding area should be treated as a click in the separator.\n  // This ref stores the offset between the click and the separator.\n  const initialOffsetToSeparator = React.useRef();\n  const resizeDirection = React.useRef();\n  const stopResizeEventTimeout = useTimeout();\n  const touchId = React.useRef();\n  const updateWidth = newWidth => {\n    logger.debug(`Updating width to ${newWidth} for col ${refs.colDef.field}`);\n    const prevWidth = refs.columnHeaderElement.offsetWidth;\n    const widthDiff = newWidth - prevWidth;\n    const columnWidthDiff = newWidth - refs.initialColWidth;\n    const newTotalWidth = refs.initialTotalWidth + columnWidthDiff;\n    apiRef.current.rootElementRef?.current?.style.setProperty('--DataGrid-rowWidth', `${newTotalWidth}px`);\n    refs.colDef.computedWidth = newWidth;\n    refs.colDef.width = newWidth;\n    refs.colDef.flex = 0;\n    refs.columnHeaderElement.style.width = `${newWidth}px`;\n    refs.columnHeaderElement.style.minWidth = `${newWidth}px`;\n    refs.columnHeaderElement.style.maxWidth = `${newWidth}px`;\n    const headerFilterElement = refs.headerFilterElement;\n    if (headerFilterElement) {\n      headerFilterElement.style.width = `${newWidth}px`;\n      headerFilterElement.style.minWidth = `${newWidth}px`;\n      headerFilterElement.style.maxWidth = `${newWidth}px`;\n    }\n    refs.groupHeaderElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.width = finalWidth;\n      div.style.minWidth = finalWidth;\n      div.style.maxWidth = finalWidth;\n    });\n    refs.cellElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.setProperty('--width', finalWidth);\n    });\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      updateProperty(refs.fillerLeft, 'width', widthDiff);\n      refs.leftPinnedCellsAfter.forEach(cell => {\n        updateProperty(cell, 'left', widthDiff);\n      });\n      refs.leftPinnedHeadersAfter.forEach(header => {\n        updateProperty(header, 'left', widthDiff);\n      });\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      updateProperty(refs.fillerRight, 'width', widthDiff);\n      refs.rightPinnedCellsBefore.forEach(cell => {\n        updateProperty(cell, 'right', widthDiff);\n      });\n      refs.rightPinnedHeadersBefore.forEach(header => {\n        updateProperty(header, 'right', widthDiff);\n      });\n    }\n  };\n  const finishResize = nativeEvent => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    stopListening();\n\n    // Prevent double-clicks from being interpreted as two separate clicks\n    if (refs.previousMouseClickEvent) {\n      const prevEvent = refs.previousMouseClickEvent;\n      const prevTimeStamp = prevEvent.timeStamp;\n      const prevClientX = prevEvent.clientX;\n      const prevClientY = prevEvent.clientY;\n\n      // Check if the current event is part of a double-click\n      if (nativeEvent.timeStamp - prevTimeStamp < 300 && nativeEvent.clientX === prevClientX && nativeEvent.clientY === prevClientY) {\n        refs.previousMouseClickEvent = undefined;\n        apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n        return;\n      }\n    }\n    if (refs.colDef) {\n      apiRef.current.setColumnWidth(refs.colDef.field, refs.colDef.width);\n      logger.debug(`Updating col ${refs.colDef.field} with new width: ${refs.colDef.width}`);\n\n      // Since during resizing we update the columns width outside of React, React is unable to\n      // reapply the right style properties. We need to sync the state manually.\n      // So we reapply the same logic as in https://github.com/mui/mui-x/blob/0511bf65543ca05d2602a5a3e0a6156f2fc8e759/packages/x-data-grid/src/hooks/features/columnHeaders/useGridColumnHeaders.tsx#L405\n      const columnsState = gridColumnsStateSelector(apiRef.current.state);\n      refs.groupHeaderElements.forEach(element => {\n        const fields = getFieldsFromGroupHeaderElem(element);\n        const div = element;\n        const newWidth = fields.reduce((acc, field) => {\n          if (columnsState.columnVisibilityModel[field] !== false) {\n            return acc + columnsState.lookup[field].computedWidth;\n          }\n          return acc;\n        }, 0);\n        const finalWidth = `${newWidth}px`;\n        div.style.width = finalWidth;\n        div.style.minWidth = finalWidth;\n        div.style.maxWidth = finalWidth;\n      });\n    }\n    stopResizeEventTimeout.start(0, () => {\n      apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n    });\n  };\n  const storeReferences = (colDef, separator, xStart) => {\n    const root = apiRef.current.rootElementRef.current;\n    refs.initialColWidth = colDef.computedWidth;\n    refs.initialTotalWidth = apiRef.current.getRootDimensions().rowWidth;\n    refs.colDef = colDef;\n    refs.columnHeaderElement = findHeaderElementFromField(apiRef.current.columnHeadersContainerRef.current, colDef.field);\n    const headerFilterElement = root.querySelector(`.${gridClasses.headerFilterRow} [data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (headerFilterElement) {\n      refs.headerFilterElement = headerFilterElement;\n    }\n    refs.groupHeaderElements = findGroupHeaderElementsFromField(apiRef.current.columnHeadersContainerRef?.current, colDef.field);\n    refs.cellElements = findGridCellElementsFromCol(refs.columnHeaderElement, apiRef.current);\n    refs.fillerLeft = findGridElement(apiRef.current, 'filler--pinnedLeft');\n    refs.fillerRight = findGridElement(apiRef.current, 'filler--pinnedRight');\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    refs.leftPinnedCellsAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedCellsAfterCol(apiRef.current, refs.columnHeaderElement);\n    refs.rightPinnedCellsBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedCellsBeforeCol(apiRef.current, refs.columnHeaderElement);\n    refs.leftPinnedHeadersAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedHeadersAfterCol(apiRef.current, refs.columnHeaderElement);\n    refs.rightPinnedHeadersBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedHeadersBeforeCol(apiRef.current, refs.columnHeaderElement);\n    resizeDirection.current = getResizeDirection(separator, theme.direction);\n    initialOffsetToSeparator.current = computeOffsetToSeparator(xStart, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n  };\n  const handleResizeMouseUp = useEventCallback(finishResize);\n  const handleResizeMouseMove = useEventCallback(nativeEvent => {\n    // Cancel move in case some other element consumed a mouseup event and it was not fired.\n    if (nativeEvent.buttons === 0) {\n      handleResizeMouseUp(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, nativeEvent.clientX, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchEnd = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n    finishResize(nativeEvent);\n  });\n  const handleTouchMove = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n\n    // Cancel move in case some other element consumed a touchmove event and it was not fired.\n    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {\n      handleTouchEnd(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, finger.x, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchStart = useEventCallback(event => {\n    const cellSeparator = findParentElementFromClassName(event.target, gridClasses['columnSeparator--resizable']);\n    // Let the event bubble if the target is not a col separator\n    if (!cellSeparator) {\n      return;\n    }\n    const touch = event.changedTouches[0];\n    if (touch != null) {\n      // A number that uniquely identifies the current finger in the touch session.\n      touchId.current = touch.identifier;\n    }\n    const columnHeaderElement = findParentElementFromClassName(event.target, gridClasses.columnHeader);\n    const field = getFieldFromHeaderElem(columnHeaderElement);\n    const colDef = apiRef.current.getColumn(field);\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field\n    }, event);\n    storeReferences(colDef, cellSeparator, touch.clientX);\n    const doc = ownerDocument(event.currentTarget);\n    doc.addEventListener('touchmove', handleTouchMove);\n    doc.addEventListener('touchend', handleTouchEnd);\n  });\n  const stopListening = React.useCallback(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.removeProperty('cursor');\n    doc.removeEventListener('mousemove', handleResizeMouseMove);\n    doc.removeEventListener('mouseup', handleResizeMouseUp);\n    doc.removeEventListener('touchmove', handleTouchMove);\n    doc.removeEventListener('touchend', handleTouchEnd);\n    // The click event runs right after the mouseup event, we want to wait until it\n    // has been canceled before removing our handler.\n    setTimeout(() => {\n      doc.removeEventListener('click', preventClick, true);\n    }, 100);\n    if (refs.columnHeaderElement) {\n      refs.columnHeaderElement.style.pointerEvents = 'unset';\n    }\n  }, [apiRef, refs, handleResizeMouseMove, handleResizeMouseUp, handleTouchMove, handleTouchEnd]);\n  const handleResizeStart = React.useCallback(({\n    field\n  }) => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: field\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleResizeStop = React.useCallback(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: ''\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleColumnResizeMouseDown = useEventCallback(({\n    colDef\n  }, event) => {\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Skip if the column isn't resizable\n    if (!event.currentTarget.classList.contains(gridClasses['columnSeparator--resizable'])) {\n      return;\n    }\n\n    // Avoid text selection\n    event.preventDefault();\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field: colDef.field\n    }, event);\n    storeReferences(colDef, event.currentTarget, event.clientX);\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.cursor = 'col-resize';\n    refs.previousMouseClickEvent = event.nativeEvent;\n    doc.addEventListener('mousemove', handleResizeMouseMove);\n    doc.addEventListener('mouseup', handleResizeMouseUp);\n\n    // Prevent the click event if we have resized the column.\n    // Fixes https://github.com/mui/mui-x/issues/4777\n    doc.addEventListener('click', preventClick, true);\n  });\n  const handleColumnSeparatorDoubleClick = useEventCallback((params, event) => {\n    if (props.disableAutosize) {\n      return;\n    }\n\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n    const column = apiRef.current.state.columns.lookup[params.field];\n    if (column.resizable === false) {\n      return;\n    }\n    apiRef.current.autosizeColumns(_extends({}, props.autosizeOptions, {\n      columns: [column.field]\n    }));\n  });\n\n  /**\n   * API METHODS\n   */\n\n  const columnVirtualizationDisabled = useColumnVirtualizationDisabled(apiRef);\n  const isAutosizingRef = React.useRef(false);\n  const autosizeColumns = React.useCallback(async userOptions => {\n    const root = apiRef.current.rootElementRef?.current;\n    if (!root) {\n      return;\n    }\n    if (isAutosizingRef.current) {\n      return;\n    }\n    isAutosizingRef.current = true;\n    const state = gridColumnsStateSelector(apiRef.current.state);\n    const options = _extends({}, DEFAULT_GRID_AUTOSIZE_OPTIONS, userOptions, {\n      columns: userOptions?.columns ?? state.orderedFields\n    });\n    options.columns = options.columns.filter(c => state.columnVisibilityModel[c] !== false);\n    const columns = options.columns.map(c => apiRef.current.state.columns.lookup[c]);\n    try {\n      apiRef.current.unstable_setColumnVirtualization(false);\n      await columnVirtualizationDisabled();\n      const widthByField = extractColumnWidths(apiRef, options, columns);\n      const newColumns = columns.map(column => _extends({}, column, {\n        width: widthByField[column.field],\n        computedWidth: widthByField[column.field]\n      }));\n      if (options.expand) {\n        const visibleColumns = state.orderedFields.map(field => state.lookup[field]).filter(c => state.columnVisibilityModel[c.field] !== false);\n        const totalWidth = visibleColumns.reduce((total, column) => total + (widthByField[column.field] ?? column.computedWidth ?? column.width), 0);\n        const availableWidth = apiRef.current.getRootDimensions().viewportInnerSize.width;\n        const remainingWidth = availableWidth - totalWidth;\n        if (remainingWidth > 0) {\n          const widthPerColumn = remainingWidth / (newColumns.length || 1);\n          newColumns.forEach(column => {\n            column.width += widthPerColumn;\n            column.computedWidth += widthPerColumn;\n          });\n        }\n      }\n      apiRef.current.updateColumns(newColumns);\n      newColumns.forEach((newColumn, index) => {\n        if (newColumn.width !== columns[index].width) {\n          const width = newColumn.width;\n          apiRef.current.publishEvent('columnWidthChange', {\n            element: apiRef.current.getColumnHeaderElement(newColumn.field),\n            colDef: newColumn,\n            width\n          });\n        }\n      });\n    } finally {\n      apiRef.current.unstable_setColumnVirtualization(true);\n      isAutosizingRef.current = false;\n    }\n  }, [apiRef, columnVirtualizationDisabled]);\n\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => stopListening, [stopListening]);\n  useOnMount(() => {\n    if (props.autosizeOnMount) {\n      Promise.resolve().then(() => {\n        apiRef.current.autosizeColumns(props.autosizeOptions);\n      });\n    }\n  });\n  useGridNativeEventListener(apiRef, () => apiRef.current.columnHeadersContainerRef?.current, 'touchstart', handleTouchStart, {\n    passive: true\n  });\n  useGridApiMethod(apiRef, {\n    autosizeColumns\n  }, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleResizeStop);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleResizeStart);\n  useGridApiEventHandler(apiRef, 'columnSeparatorMouseDown', handleColumnResizeMouseDown);\n  useGridApiEventHandler(apiRef, 'columnSeparatorDoubleClick', handleColumnSeparatorDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnResize', props.onColumnResize);\n  useGridApiOptionHandler(apiRef, 'columnWidthChange', props.onColumnWidthChange);\n};\nfunction updateProperty(element, property, delta) {\n  if (!element) {\n    return;\n  }\n  element.style[property] = `${parseInt(element.style[property], 10) + delta}px`;\n}","export function createControllablePromise() {\n  let resolve;\n  let reject;\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  promise.resolve = resolve;\n  promise.reject = reject;\n  return promise;\n}","import { useGridInitialization } from '../hooks/core/useGridInitialization';\nimport { useGridInitializeState } from '../hooks/utils/useGridInitializeState';\nimport { useGridClipboard } from '../hooks/features/clipboard/useGridClipboard';\nimport { columnMenuStateInitializer, useGridColumnMenu } from '../hooks/features/columnMenu/useGridColumnMenu';\nimport { useGridColumns, columnsStateInitializer } from '../hooks/features/columns/useGridColumns';\nimport { densityStateInitializer, useGridDensity } from '../hooks/features/density/useGridDensity';\nimport { useGridCsvExport } from '../hooks/features/export/useGridCsvExport';\nimport { useGridPrintExport } from '../hooks/features/export/useGridPrintExport';\nimport { useGridFilter, filterStateInitializer } from '../hooks/features/filter/useGridFilter';\nimport { focusStateInitializer, useGridFocus } from '../hooks/features/focus/useGridFocus';\nimport { useGridKeyboardNavigation } from '../hooks/features/keyboardNavigation/useGridKeyboardNavigation';\nimport { useGridPagination, paginationStateInitializer } from '../hooks/features/pagination/useGridPagination';\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from '../hooks/features/preferencesPanel/useGridPreferencesPanel';\nimport { useGridEditing, editingStateInitializer } from '../hooks/features/editing/useGridEditing';\nimport { useGridRows, rowsStateInitializer } from '../hooks/features/rows/useGridRows';\nimport { useGridRowsPreProcessors } from '../hooks/features/rows/useGridRowsPreProcessors';\nimport { useGridParamsApi } from '../hooks/features/rows/useGridParamsApi';\nimport { rowSelectionStateInitializer, useGridRowSelection } from '../hooks/features/rowSelection/useGridRowSelection';\nimport { useGridRowSelectionPreProcessors } from '../hooks/features/rowSelection/useGridRowSelectionPreProcessors';\nimport { useGridSorting, sortingStateInitializer } from '../hooks/features/sorting/useGridSorting';\nimport { useGridScroll } from '../hooks/features/scroll/useGridScroll';\nimport { useGridEvents } from '../hooks/features/events/useGridEvents';\nimport { dimensionsStateInitializer, useGridDimensions } from '../hooks/features/dimensions/useGridDimensions';\nimport { rowsMetaStateInitializer, useGridRowsMeta } from '../hooks/features/rows/useGridRowsMeta';\nimport { useGridStatePersistence } from '../hooks/features/statePersistence/useGridStatePersistence';\nimport { useGridColumnSpanning } from '../hooks/features/columns/useGridColumnSpanning';\nimport { useGridColumnGrouping, columnGroupsStateInitializer } from '../hooks/features/columnGrouping/useGridColumnGrouping';\nimport { useGridVirtualization, virtualizationStateInitializer } from '../hooks/features/virtualization';\nimport { columnResizeStateInitializer, useGridColumnResize } from '../hooks/features/columnResize/useGridColumnResize';\nexport const useDataGridComponent = (inputApiRef, props) => {\n  const apiRef = useGridInitialization(inputApiRef, props);\n\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n  useGridRowSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n\n  /**\n   * Register all state initializers here.\n   */\n  useGridInitializeState(dimensionsStateInitializer, apiRef, props);\n  useGridInitializeState(rowSelectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState(editingStateInitializer, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(columnResizeStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\n  useGridInitializeState(virtualizationStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridRowSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridParamsApi(apiRef);\n  useGridColumnSpanning(apiRef);\n  useGridColumnGrouping(apiRef, props);\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridColumnResize(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef, props);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef, props);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  useGridVirtualization(apiRef, props);\n  return apiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { getDataGridUtilityClass } from '../../../constants';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from '../../../colDef';\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\nexport const useGridRowSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.orderedFields = [GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.orderedFields];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridSelector, useGridApiMethod } from '../../utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPaginationMetaSelector } from './gridPaginationSelector';\nexport const useGridPaginationMeta = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationMeta');\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  apiRef.current.registerControlState({\n    stateId: 'paginationMeta',\n    propModel: props.paginationMeta,\n    propOnChange: props.onPaginationMetaChange,\n    stateSelector: gridPaginationMetaSelector,\n    changeEvent: 'paginationMetaChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPaginationMeta = React.useCallback(newPaginationMeta => {\n    if (paginationMeta === newPaginationMeta) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationMeta' to\", newPaginationMeta);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: newPaginationMeta\n      })\n    }));\n  }, [apiRef, logger, paginationMeta]);\n  const paginationMetaApi = {\n    setPaginationMeta\n  };\n  useGridApiMethod(apiRef, paginationMetaApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedPaginationMeta = gridPaginationMetaSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationMeta` is controlled\n    props.paginationMeta != null ||\n    // Always export if the `paginationMeta` has been initialized\n    props.initialState?.pagination?.meta != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        meta: exportedPaginationMeta\n      })\n    });\n  }, [apiRef, props.paginationMeta, props.initialState?.pagination?.meta]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredPaginationMeta = context.stateToRestore.pagination?.meta ? context.stateToRestore.pagination.meta : gridPaginationMetaSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: restoredPaginationMeta\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMeta) {\n      apiRef.current.setPaginationMeta(props.paginationMeta);\n    }\n  }, [apiRef, props.paginationMeta]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { gridFilteredTopLevelRowCountSelector } from '../filter';\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPaginationRowCountSelector, gridPaginationMetaSelector, gridPaginationModelSelector } from './gridPaginationSelector';\nexport const useGridRowCount = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridRowCount');\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const rowCountState = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const previousPageSize = useLazyRef(() => gridPaginationModelSelector(apiRef).pageSize);\n  apiRef.current.registerControlState({\n    stateId: 'paginationRowCount',\n    propModel: props.rowCount,\n    propOnChange: props.onRowCountChange,\n    stateSelector: gridPaginationRowCountSelector,\n    changeEvent: 'rowCountChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setRowCount = React.useCallback(newRowCount => {\n    if (rowCountState === newRowCount) {\n      return;\n    }\n    logger.debug(\"Setting 'rowCount' to\", newRowCount);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: newRowCount\n      })\n    }));\n  }, [apiRef, logger, rowCountState]);\n  const paginationRowCountApi = {\n    setRowCount\n  };\n  useGridApiMethod(apiRef, paginationRowCountApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedRowCount = gridPaginationRowCountSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `rowCount` is controlled\n    props.rowCount != null ||\n    // Always export if the `rowCount` has been initialized\n    props.initialState?.pagination?.rowCount != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        rowCount: exportedRowCount\n      })\n    });\n  }, [apiRef, props.rowCount, props.initialState?.pagination?.rowCount]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredRowCount = context.stateToRestore.pagination?.rowCount ? context.stateToRestore.pagination.rowCount : gridPaginationRowCountSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: restoredRowCount\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = React.useCallback(model => {\n    if (props.paginationMode === 'client' || !previousPageSize.current) {\n      return;\n    }\n    if (model.pageSize !== previousPageSize.current) {\n      previousPageSize.current = model.pageSize;\n      if (rowCountState === -1) {\n        // Row count unknown and page size changed, reset the page\n        apiRef.current.setPage(0);\n      }\n    }\n  }, [props.paginationMode, previousPageSize, rowCountState, apiRef]);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMode === 'client') {\n      apiRef.current.setRowCount(visibleTopLevelRowCount);\n    } else if (props.rowCount != null) {\n      apiRef.current.setRowCount(props.rowCount);\n    }\n  }, [apiRef, props.paginationMode, visibleTopLevelRowCount, props.rowCount]);\n  const isLastPage = paginationMeta.hasNextPage === false;\n  React.useEffect(() => {\n    if (isLastPage && rowCountState === -1) {\n      apiRef.current.setRowCount(paginationModel.pageSize * paginationModel.page + visibleTopLevelRowCount);\n    }\n  }, [apiRef, visibleTopLevelRowCount, isLastPage, rowCountState, paginationModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridExpandedRowCountSelector } from '../filter/gridFilterSelector';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../columns/gridColumnsSelector';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { GRID_ID_AUTOGENERATED } from '../rows/gridRowsUtils';\nimport { defaultGetRowsToExport, getColumnsToExport } from './utils';\nimport { getDerivedPaginationModel } from '../pagination/useGridPaginationModel';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridPrintExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../colDef/gridCheckboxSelectionColDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction raf() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      resolve();\n    });\n  });\n}\nfunction buildPrintWindow(title) {\n  const iframeEl = document.createElement('iframe');\n  iframeEl.style.position = 'absolute';\n  iframeEl.style.width = '0px';\n  iframeEl.style.height = '0px';\n  iframeEl.title = title || document.title;\n  return iframeEl;\n}\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  const previousRows = React.useRef([]);\n  const previousVirtualizationState = React.useRef();\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef]);\n\n  // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns, includeCheckboxes) => new Promise(resolve => {\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    if (includeCheckboxes) {\n      newColumnVisibilityModel[GRID_CHECKBOX_SELECTION_COL_DEF.field] = true;\n    }\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]);\n  const updateGridRowsForPrint = React.useCallback(getRowsToExport => {\n    const rowsToExportIds = getRowsToExport({\n      apiRef\n    });\n    const newRows = rowsToExportIds.reduce((acc, id) => {\n      const row = apiRef.current.getRow(id);\n      if (!row[GRID_ID_AUTOGENERATED]) {\n        acc.push(row);\n      }\n      return acc;\n    }, []);\n    apiRef.current.setRows(newRows);\n  }, [apiRef]);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false,\n      includeCheckboxes: false\n    }, options);\n    const printDoc = printWindow.contentDocument;\n    if (!printDoc) {\n      return;\n    }\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n\n    // Allow to overflow to not hide the border of the last row\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n\n    // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n    gridClone.style.contain = 'size';\n    let gridToolbarElementHeight = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)?.offsetHeight || 0;\n    let gridFooterElementHeight = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)?.offsetHeight || 0;\n    if (normalizeOptions.hideToolbar) {\n      gridClone.querySelector(`.${gridClasses.toolbarContainer}`)?.remove();\n      gridToolbarElementHeight = 0;\n    }\n    if (normalizeOptions.hideFooter) {\n      gridClone.querySelector(`.${gridClasses.footerContainer}`)?.remove();\n      gridFooterElementHeight = 0;\n    }\n\n    // Expand container height to accommodate all rows\n    const computedTotalHeight = rowsMeta.currentPageTotalHeight + getTotalHeaderHeight(apiRef, props) + gridToolbarElementHeight + gridFooterElementHeight;\n    gridClone.style.height = `${computedTotalHeight}px`;\n    // The height above does not include grid border width, so we need to exclude it\n    gridClone.style.boxSizing = 'content-box';\n    if (!normalizeOptions.hideFooter) {\n      // the footer is always being placed at the bottom of the page as if all rows are exported\n      // so if getRowsToExport is being used to only export a subset of rows then we need to\n      // adjust the footer position to be correctly placed at the bottom of the grid\n      const gridFooterElement = gridClone.querySelector(`.${gridClasses.footerContainer}`);\n      gridFooterElement.style.position = 'absolute';\n      gridFooterElement.style.width = '100%';\n      gridFooterElement.style.top = `${computedTotalHeight - gridFooterElementHeight}px`;\n    }\n\n    // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n    const container = document.createElement('div');\n    container.appendChild(gridClone);\n    // To avoid an empty page in start on Chromium based browsers\n    printDoc.body.style.marginTop = '0px';\n    printDoc.body.innerHTML = container.innerHTML;\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n    const stylesheetLoadPromises = [];\n    if (normalizeOptions.copyStyles) {\n      const rootCandidate = gridRootElement.getRootNode();\n      const root = rootCandidate.constructor.name === 'ShadowRoot' ? rootCandidate : doc.current;\n      const headStyleElements = root.querySelectorAll(\"style, link[rel='stylesheet']\");\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n          if (sheet) {\n            let styleCSS = '';\n            // NOTE: for-of is not supported by IE\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n          stylesheetLoadPromises.push(new Promise(resolve => {\n            newHeadStyleElements.addEventListener('load', () => resolve());\n          }));\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    }\n\n    // Trigger print\n    if (process.env.NODE_ENV !== 'test') {\n      // wait for remote stylesheets to load\n      Promise.all(stylesheetLoadPromises).then(() => {\n        printWindow.contentWindow.print();\n      });\n    }\n  }, [apiRef, doc, props]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow);\n\n    // Revert grid to previous state\n    apiRef.current.restoreState(previousGridState.current || {});\n    if (!previousGridState.current?.columns?.columnVisibilityModel) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: previousVirtualizationState.current\n    }));\n    apiRef.current.setRows(previousRows.current);\n\n    // Clear local state\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n    previousRows.current = [];\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI X: No grid root element available.');\n    }\n    previousGridState.current = apiRef.current.exportState();\n    // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n    previousRows.current = apiRef.current.getSortedRows().filter(row => !row[GRID_ID_AUTOGENERATED]);\n    if (props.pagination) {\n      const visibleRowCount = gridExpandedRowCountSelector(apiRef);\n      const paginationModel = {\n        page: 0,\n        pageSize: visibleRowCount\n      };\n      apiRef.current.setState(state => _extends({}, state, {\n        pagination: _extends({}, state.pagination, {\n          paginationModel: getDerivedPaginationModel(state.pagination,\n          // Using signature `DataGridPro` to allow more than 100 rows in the print export\n          'DataGridPro', paginationModel)\n        })\n      }));\n    }\n    previousVirtualizationState.current = apiRef.current.state.virtualization;\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled: false,\n        enabledForColumns: false\n      })\n    }));\n    await updateGridColumnsForPrint(options?.fields, options?.allColumns, options?.includeCheckboxes);\n    updateGridRowsForPrint(options?.getRowsToExport ?? defaultGetRowsToExport);\n    await raf(); // wait for the state changes to take action\n    const printWindow = buildPrintWindow(options?.fileName);\n    if (process.env.NODE_ENV === 'test') {\n      doc.current.body.appendChild(printWindow);\n      // In test env, run the all pipeline without waiting for loading\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => {\n        handlePrintWindowLoad(printWindow, options);\n        const mediaQueryList = printWindow.contentWindow.matchMedia('print');\n        mediaQueryList.addEventListener('change', mql => {\n          const isAfterPrint = mql.matches === false;\n          if (isAfterPrint) {\n            handlePrintWindowAfterPrint(printWindow);\n          }\n        });\n      };\n      doc.current.body.appendChild(printWindow);\n    }\n  }, [props, logger, apiRef, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint, updateGridRowsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.printOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","export function throttle(func, wait = 166) {\n  let timeout;\n  let lastArgs;\n  const later = () => {\n    timeout = undefined;\n    func(...lastArgs);\n  };\n  function throttled(...args) {\n    lastArgs = args;\n    if (timeout === undefined) {\n      timeout = setTimeout(later, wait);\n    }\n  }\n  throttled.clear = () => {\n    clearTimeout(timeout);\n    timeout = undefined;\n  };\n  return throttled;\n}","import { useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\n/**\n * @requires useGridFocus (event) - can be after, async only\n * @requires useGridColumns (event) - can be after, async only\n */\nexport function useGridEvents(apiRef, props) {\n  useGridApiOptionHandler(apiRef, 'columnHeaderClick', props.onColumnHeaderClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderDoubleClick', props.onColumnHeaderDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOver', props.onColumnHeaderOver);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOut', props.onColumnHeaderOut);\n  useGridApiOptionHandler(apiRef, 'columnHeaderEnter', props.onColumnHeaderEnter);\n  useGridApiOptionHandler(apiRef, 'columnHeaderLeave', props.onColumnHeaderLeave);\n  useGridApiOptionHandler(apiRef, 'cellClick', props.onCellClick);\n  useGridApiOptionHandler(apiRef, 'cellDoubleClick', props.onCellDoubleClick);\n  useGridApiOptionHandler(apiRef, 'cellKeyDown', props.onCellKeyDown);\n  useGridApiOptionHandler(apiRef, 'preferencePanelClose', props.onPreferencePanelClose);\n  useGridApiOptionHandler(apiRef, 'preferencePanelOpen', props.onPreferencePanelOpen);\n  useGridApiOptionHandler(apiRef, 'menuOpen', props.onMenuOpen);\n  useGridApiOptionHandler(apiRef, 'menuClose', props.onMenuClose);\n  useGridApiOptionHandler(apiRef, 'rowDoubleClick', props.onRowDoubleClick);\n  useGridApiOptionHandler(apiRef, 'rowClick', props.onRowClick);\n  useGridApiOptionHandler(apiRef, 'stateChange', props.onStateChange);\n}","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils';\nexport const useGridStatePersistence = apiRef => {\n  const exportState = React.useCallback((params = {}) => {\n    const stateToExport = apiRef.current.unstable_applyPipeProcessors('exportState', {}, params);\n    return stateToExport;\n  }, [apiRef]);\n  const restoreState = React.useCallback(stateToRestore => {\n    const response = apiRef.current.unstable_applyPipeProcessors('restoreState', {\n      callbacks: []\n    }, {\n      stateToRestore\n    });\n    response.callbacks.forEach(callback => {\n      callback();\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const statePersistenceApi = {\n    exportState,\n    restoreState\n  };\n  useGridApiMethod(apiRef, statePersistenceApi, 'public');\n};","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridBody, GridFooterPlaceholder, GridHeader, GridRoot } from '../components';\nimport { GridContextProvider } from '../context/GridContextProvider';\nimport { useDataGridComponent } from './useDataGridComponent';\nimport { useDataGridProps } from './useDataGridProps';\nimport { propValidatorsDataGrid, validateProps } from '../internals/utils/propValidation';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nlet propValidators;\nif (process.env.NODE_ENV !== 'production') {\n  propValidators = [...propValidatorsDataGrid,\n  // Only validate in MIT version\n  props => props.columns && props.columns.some(column => column.resizable) && [`MUI X: \\`column.resizable = true\\` is not a valid prop.`, 'Column resizing is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n') || undefined];\n}\nconst DataGridRaw = /*#__PURE__*/React.forwardRef(function DataGrid(inProps, ref) {\n  const props = useDataGridProps(inProps);\n  const privateApiRef = useDataGridComponent(props.apiRef, props);\n  if (process.env.NODE_ENV !== 'production') {\n    validateProps(props, propValidators);\n  }\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    privateApiRef: privateApiRef,\n    props: props,\n    children: /*#__PURE__*/_jsxs(GridRoot, _extends({\n      className: props.className,\n      style: props.style,\n      sx: props.sx,\n      ref: ref\n    }, props.forwardedProps, {\n      children: [/*#__PURE__*/_jsx(GridHeader, {}), /*#__PURE__*/_jsx(GridBody, {}), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\n    }))\n  });\n});\n/**\n * Demos:\n * - [DataGrid](https://mui.com/x/react-data-grid/demo/)\n *\n * API:\n * - [DataGrid API](https://mui.com/x/api/data-grid/data-grid/)\n */\nexport const DataGrid = /*#__PURE__*/React.memo(DataGridRaw);\nDataGridRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The ref object that allows Data Grid manipulation. Can be instantiated with `useGridApiRef()`.\n   */\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }),\n  /**\n   * The label of the Data Grid.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * The id of the element containing a label for the Data Grid.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the Data Grid height is dynamic and follows the number of rows in the Data Grid.\n   * @default false\n   */\n  autoHeight: PropTypes.bool,\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n  /**\n   * If `true`, columns are autosized after the datagrid is mounted.\n   * @default false\n   */\n  autosizeOnMount: PropTypes.bool,\n  /**\n   * The options for autosize when user-initiated.\n   */\n  autosizeOptions: PropTypes.shape({\n    columns: PropTypes.arrayOf(PropTypes.string),\n    expand: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    includeOutliers: PropTypes.bool,\n    outliersFactor: PropTypes.number\n  }),\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n  /**\n   * If `true`, the Data Grid will display an extra column with checkboxes for selecting rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The character used to separate cell values when copying to the clipboard.\n   * @default '\\t'\n   */\n  clipboardCopyCellDelimiter: PropTypes.string,\n  /**\n   * Column region in pixels to render before/after the viewport\n   * @default 150\n   */\n  columnBufferPx: PropTypes.number,\n  columnGroupingModel: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * Sets the height in pixel of the column headers in the Data Grid.\n   * @default 56\n   */\n  columnHeaderHeight: PropTypes.number,\n  /**\n   * Set of columns of type [[GridColDef]][].\n   */\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /**\n   * Set the column visibility model of the Data Grid.\n   * If defined, the Data Grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n  /**\n   * Set the density of the Data Grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n  /**\n   * If `true`, column autosizing on header separator double-click is disabled.\n   * @default false\n   */\n  disableAutosize: PropTypes.bool,\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n  /**\n   * If `true`, resizing columns is disabled.\n   * @default false\n   */\n  disableColumnResize: PropTypes.bool,\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n  /**\n   * If `true`, the column sorting feature will be disabled.\n   * @default false\n   */\n  disableColumnSorting: PropTypes.bool,\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n  /**\n   * If `true`, `eval()` is not used for performance optimization.\n   * @default false\n   */\n  disableEval: PropTypes.bool,\n  /**\n   * If `true`, multiple selection using the Ctrl/CMD or Shift key is disabled.\n   * The MIT DataGrid will ignore this prop, unless `checkboxSelection` is enabled.\n   * @default false (`!props.checkboxSelection` for MIT Data Grid)\n   */\n  disableMultipleRowSelection: PropTypes.bool,\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableRowSelectionOnClick: PropTypes.bool,\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n  /**\n   * Use if the actual rowCount is not known upfront, but an estimation is available.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Applicable only with `paginationMode=\"server\"` and when `rowCount=\"-1\"`\n   */\n  estimatedRowCount: PropTypes.number,\n  /**\n   * Unstable features, breaking changes might be introduced.\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n  /**\n   * The milliseconds delay to wait after a keystroke before triggering filtering.\n   * @default 150\n   */\n  filterDebounceMs: PropTypes.number,\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * Set the filter model of the Data Grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      field: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operator: PropTypes.string.isRequired,\n      value: PropTypes.any\n    })).isRequired,\n    logicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterExcludeHiddenColumns: PropTypes.bool,\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n  /**\n   * Forwarded props for the Data Grid root element.\n   * @ignore - do not document.\n   */\n  forwardedProps: PropTypes.object,\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {React.JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n  /**\n   * If `true`, the diacritics (accents) are ignored when filtering or quick filtering.\n   * E.g. when filter value is `cafe`, the rows with `café` will be visible.\n   * @default false\n   */\n  ignoreDiacritics: PropTypes.bool,\n  /**\n   * If `true`, the Data Grid will not use `valueFormatter` when exporting to CSV or copying to clipboard.\n   * If an object is provided, you can choose to ignore the `valueFormatter` for CSV export or clipboard export.\n   * @default false\n   */\n  ignoreValueFormatterDuringExport: PropTypes.oneOfType([PropTypes.shape({\n    clipboardExport: PropTypes.bool,\n    csvExport: PropTypes.bool\n  }), PropTypes.bool]),\n  /**\n   * The initial state of the DataGrid.\n   * The data in it will be set in the state on initialization but will not be controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the cell is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n  /**\n   * If `true`, a loading overlay is displayed.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Set the locale text of the Data Grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"error\" (\"warn\" in dev mode)\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containing which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n  /**\n   * Callback called when the data is copied to the clipboard.\n   * @param {string} data The data copied to the clipboard.\n   */\n  onClipboardCopy: PropTypes.func,\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n  /**\n   * Callback fired while a column is being resized.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnResize: PropTypes.func,\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n  /**\n   * Callback fired when the width of a column is changed.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnWidthChange: PropTypes.func,\n  /**\n   * Callback fired when the density changes.\n   * @param {GridDensity} density New density value.\n   */\n  onDensityChange: PropTypes.func,\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n  /**\n   * Callback fired when the pagination meta has changed.\n   * @param {GridPaginationMeta} paginationMeta Updated pagination meta.\n   */\n  onPaginationMetaChange: PropTypes.func,\n  /**\n   * Callback fired when the pagination model has changed.\n   * @param {GridPaginationModel} model Updated pagination model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPaginationModelChange: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n  /**\n   * Callback fired when the Data Grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n  /**\n   * Callback fired when the row count has changed.\n   * @param {number} count Updated row count.\n   */\n  onRowCountChange: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containing which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridRowSelectionModel} rowSelectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowSelectionModelChange: PropTypes.func,\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n  /**\n   * Callback fired when the state of the Data Grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @ignore - do not document.\n   */\n  onStateChange: PropTypes.func,\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  pagination: PropTypes.oneOf([true]),\n  /**\n   * The extra information about the pagination state of the Data Grid.\n   * Only applicable with `paginationMode=\"server\"`.\n   */\n  paginationMeta: PropTypes.shape({\n    hasNextPage: PropTypes.bool\n  }),\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The pagination model of type [[GridPaginationModel]] which refers to current `page` and `pageSize`.\n   */\n  paginationModel: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired\n  }),\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n  /**\n   * The milliseconds throttle delay for resizing the grid.\n   * @default 60\n   */\n  resizeThrottleMs: PropTypes.number,\n  /**\n   * Row region in pixels to render before/after the viewport\n   * @default 150\n   */\n  rowBufferPx: PropTypes.number,\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Only works with `paginationMode=\"server\"`, ignored when `paginationMode=\"client\"`.\n   */\n  rowCount: PropTypes.number,\n  /**\n   * Sets the height in pixel of a row in the Data Grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n  /**\n   * The milliseconds delay to wait after measuring the row height before recalculating row positions.\n   * Setting it to a lower value could be useful when using dynamic row height,\n   * but might reduce performance when displaying a large number of rows.\n   * @default 166\n   */\n  rowPositionsDebounceMs: PropTypes.number,\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   * @default []\n   */\n  rows: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * If `false`, the row selection mode is disabled.\n   * @default true\n   */\n  rowSelection: PropTypes.bool,\n  /**\n   * Sets the row selection model of the Data Grid.\n   */\n  rowSelectionModel: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired), PropTypes.number, PropTypes.string]),\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n  /**\n   * Override the height/width of the Data Grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n  /**\n   * If `true`, the vertical borders of the cells are displayed.\n   * @default false\n   */\n  showCellVerticalBorder: PropTypes.bool,\n  /**\n   * If `true`, the right border of the column headers are displayed.\n   * @default false\n   */\n  showColumnVerticalBorder: PropTypes.bool,\n  /**\n   * Overridable components props dynamically passed to the component at rendering.\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable components.\n   */\n  slots: PropTypes.object,\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n  /**\n   * Set the sort model of the Data Grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridNoResultsOverlay = /*#__PURE__*/React.forwardRef(function GridNoResultsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noResultsOverlayLabel = apiRef.current.getLocaleText('noResultsOverlayLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noResultsOverlayLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sortingOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridColumnUnsortedIcon = /*#__PURE__*/React.memo(function GridColumnHeaderSortIcon(props) {\n  const {\n      sortingOrder\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const [nextSortDirection] = sortingOrder;\n  const Icon = nextSortDirection === 'asc' ? rootProps.slots.columnSortedAscendingIcon : rootProps.slots.columnSortedDescendingIcon;\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({}, other)) : null;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"native\"];\nimport * as React from 'react';\nimport MUIMenuItem from '@mui/material/MenuItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MUISelectOption(_ref) {\n  let {\n      native\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (native) {\n    return /*#__PURE__*/_jsx(\"option\", _extends({}, props));\n  }\n  return /*#__PURE__*/_jsx(MUIMenuItem, _extends({}, props));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport MUICheckbox from '@mui/material/Checkbox';\nimport MUITextField from '@mui/material/TextField';\nimport MUIFormControl from '@mui/material/FormControl';\nimport MUISelect from '@mui/material/Select';\nimport MUIButton from '@mui/material/Button';\nimport MUIIconButton from '@mui/material/IconButton';\nimport MUIInputAdornment from '@mui/material/InputAdornment';\nimport MUITooltip from '@mui/material/Tooltip';\nimport MUIPopper from '@mui/material/Popper';\nimport MUIInputLabel from '@mui/material/InputLabel';\nimport MUIChip from '@mui/material/Chip';\nimport { GridColumnUnsortedIcon } from './icons/GridColumnUnsortedIcon';\nimport { GridAddIcon, GridArrowDownwardIcon, GridArrowUpwardIcon, GridCheckIcon, GridCloseIcon, GridColumnIcon, GridDragIcon, GridExpandMoreIcon, GridFilterAltIcon, GridFilterListIcon, GridKeyboardArrowRight, GridMoreVertIcon, GridRemoveIcon, GridSaveAltIcon, GridSearchIcon, GridSeparatorIcon, GridTableRowsIcon, GridTripleDotsVerticalIcon, GridViewHeadlineIcon, GridViewStreamIcon, GridVisibilityOffIcon, GridViewColumnIcon, GridClearIcon, GridLoadIcon, GridDeleteForeverIcon } from './icons';\nimport MUISelectOption from './components/MUISelectOption';\nconst iconSlots = {\n  booleanCellTrueIcon: GridCheckIcon,\n  booleanCellFalseIcon: GridCloseIcon,\n  columnMenuIcon: GridTripleDotsVerticalIcon,\n  openFilterButtonIcon: GridFilterListIcon,\n  filterPanelDeleteIcon: GridCloseIcon,\n  columnFilteredIcon: GridFilterAltIcon,\n  columnSelectorIcon: GridColumnIcon,\n  columnUnsortedIcon: GridColumnUnsortedIcon,\n  columnSortedAscendingIcon: GridArrowUpwardIcon,\n  columnSortedDescendingIcon: GridArrowDownwardIcon,\n  columnResizeIcon: GridSeparatorIcon,\n  densityCompactIcon: GridViewHeadlineIcon,\n  densityStandardIcon: GridTableRowsIcon,\n  densityComfortableIcon: GridViewStreamIcon,\n  exportIcon: GridSaveAltIcon,\n  moreActionsIcon: GridMoreVertIcon,\n  treeDataCollapseIcon: GridExpandMoreIcon,\n  treeDataExpandIcon: GridKeyboardArrowRight,\n  groupingCriteriaCollapseIcon: GridExpandMoreIcon,\n  groupingCriteriaExpandIcon: GridKeyboardArrowRight,\n  detailPanelExpandIcon: GridAddIcon,\n  detailPanelCollapseIcon: GridRemoveIcon,\n  rowReorderIcon: GridDragIcon,\n  quickFilterIcon: GridSearchIcon,\n  quickFilterClearIcon: GridCloseIcon,\n  columnMenuHideIcon: GridVisibilityOffIcon,\n  columnMenuSortAscendingIcon: GridArrowUpwardIcon,\n  columnMenuSortDescendingIcon: GridArrowDownwardIcon,\n  columnMenuFilterIcon: GridFilterAltIcon,\n  columnMenuManageColumnsIcon: GridViewColumnIcon,\n  columnMenuClearIcon: GridClearIcon,\n  loadIcon: GridLoadIcon,\n  filterPanelAddIcon: GridAddIcon,\n  filterPanelRemoveAllIcon: GridDeleteForeverIcon,\n  columnReorderIcon: GridDragIcon\n};\nconst materialSlots = _extends({}, iconSlots, {\n  baseCheckbox: MUICheckbox,\n  baseTextField: MUITextField,\n  baseFormControl: MUIFormControl,\n  baseSelect: MUISelect,\n  baseButton: MUIButton,\n  baseIconButton: MUIIconButton,\n  baseInputAdornment: MUIInputAdornment,\n  baseTooltip: MUITooltip,\n  basePopper: MUIPopper,\n  baseInputLabel: MUIInputLabel,\n  baseSelectOption: MUISelectOption,\n  baseChip: MUIChip\n});\nexport default materialSlots;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridSkeletonCell, GridColumnsPanel, GridFilterPanel, GridFooter, GridLoadingOverlay, GridNoRowsOverlay, GridPagination, GridPanel, GridRow, GridColumnHeaderFilterIconButton, GridRowCount, GridColumnsManagement, GridColumnHeaderSortIcon } from '../components';\nimport { GridCell } from '../components/cell/GridCell';\nimport { GridColumnHeaders } from '../components/GridColumnHeaders';\nimport { GridColumnMenu } from '../components/menu/columnMenu/GridColumnMenu';\nimport { GridDetailPanels } from '../components/GridDetailPanels';\nimport { GridPinnedRows } from '../components/GridPinnedRows';\nimport { GridNoResultsOverlay } from '../components/GridNoResultsOverlay';\nimport materialSlots from '../material';\n\n// TODO: camelCase these key. It's a private helper now.\n// Remove then need to call `uncapitalizeObjectKeys`.\nexport const DATA_GRID_DEFAULT_SLOTS_COMPONENTS = _extends({}, materialSlots, {\n  cell: GridCell,\n  skeletonCell: GridSkeletonCell,\n  columnHeaderFilterIconButton: GridColumnHeaderFilterIconButton,\n  columnHeaderSortIcon: GridColumnHeaderSortIcon,\n  columnMenu: GridColumnMenu,\n  columnHeaders: GridColumnHeaders,\n  detailPanels: GridDetailPanels,\n  footer: GridFooter,\n  footerRowCount: GridRowCount,\n  toolbar: null,\n  pinnedRows: GridPinnedRows,\n  loadingOverlay: GridLoadingOverlay,\n  noResultsOverlay: GridNoResultsOverlay,\n  noRowsOverlay: GridNoRowsOverlay,\n  pagination: GridPagination,\n  filterPanel: GridFilterPanel,\n  columnsPanel: GridColumnsPanel,\n  columnsManagement: GridColumnsManagement,\n  panel: GridPanel,\n  row: GridRow\n});","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridDetailPanels(_) {\n  return null;\n}","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridPinnedRows(_) {\n  return null;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { GRID_DEFAULT_LOCALE_TEXT } from '../constants';\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS } from '../constants/defaultGridSlotsComponents';\nimport { GridEditModes } from '../models';\nimport { computeSlots, useProps } from '../internals/utils';\nconst DATA_GRID_FORCED_PROPS = {\n  disableMultipleColumnsFiltering: true,\n  disableMultipleColumnsSorting: true,\n  throttleRowsMs: undefined,\n  hideFooterRowCount: false,\n  pagination: true,\n  checkboxSelectionVisibleOnly: false,\n  disableColumnReorder: true,\n  keepColumnPositionIfDraggedOutside: false,\n  signature: 'DataGrid'\n};\n\n/**\n * The default values of `DataGridPropsWithDefaultValues` to inject in the props of DataGrid.\n */\nexport const DATA_GRID_PROPS_DEFAULT_VALUES = {\n  autoHeight: false,\n  autoPageSize: false,\n  autosizeOnMount: false,\n  checkboxSelection: false,\n  checkboxSelectionVisibleOnly: false,\n  clipboardCopyCellDelimiter: '\\t',\n  columnBufferPx: 150,\n  columnHeaderHeight: 56,\n  disableAutosize: false,\n  disableColumnFilter: false,\n  disableColumnMenu: false,\n  disableColumnReorder: false,\n  disableColumnResize: false,\n  disableColumnSelector: false,\n  disableColumnSorting: false,\n  disableDensitySelector: false,\n  disableEval: false,\n  disableMultipleColumnsFiltering: false,\n  disableMultipleColumnsSorting: false,\n  disableMultipleRowSelection: false,\n  disableRowSelectionOnClick: false,\n  disableVirtualization: false,\n  editMode: GridEditModes.Cell,\n  filterDebounceMs: 150,\n  filterMode: 'client',\n  hideFooter: false,\n  hideFooterPagination: false,\n  hideFooterRowCount: false,\n  hideFooterSelectedRowCount: false,\n  ignoreDiacritics: false,\n  ignoreValueFormatterDuringExport: false,\n  keepColumnPositionIfDraggedOutside: false,\n  keepNonExistentRowsSelected: false,\n  loading: false,\n  logger: console,\n  logLevel: process.env.NODE_ENV === 'production' ? 'error' : 'warn',\n  pageSizeOptions: [25, 50, 100],\n  pagination: false,\n  paginationMode: 'client',\n  resizeThrottleMs: 60,\n  rowBufferPx: 150,\n  rowHeight: 52,\n  rowPositionsDebounceMs: 166,\n  rows: [],\n  rowSelection: true,\n  rowSpacingType: 'margin',\n  showCellVerticalBorder: false,\n  showColumnVerticalBorder: false,\n  sortingMode: 'client',\n  sortingOrder: ['asc', 'desc', null],\n  throttleRowsMs: 0\n};\nconst defaultSlots = DATA_GRID_DEFAULT_SLOTS_COMPONENTS;\nexport const useDataGridProps = inProps => {\n  const themedProps = useProps(\n  // eslint-disable-next-line material-ui/mui-name-matches-component-name\n  useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  }));\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const slots = React.useMemo(() => computeSlots({\n    defaultSlots,\n    slots: themedProps.slots\n  }), [themedProps.slots]);\n  const injectDefaultProps = React.useMemo(() => {\n    return Object.keys(DATA_GRID_PROPS_DEFAULT_VALUES).reduce((acc, key) => {\n      // @ts-ignore\n      acc[key] = themedProps[key] ?? DATA_GRID_PROPS_DEFAULT_VALUES[key];\n      return acc;\n    }, {});\n  }, [themedProps]);\n  return React.useMemo(() => _extends({}, themedProps, injectDefaultProps, {\n    localeText,\n    slots\n  }, DATA_GRID_FORCED_PROPS), [themedProps, localeText, slots, injectDefaultProps]);\n};","import _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\n\n/** Gathers props for the root element into a single `.forwardedProps` field */\nfunction groupForwardedProps(props) {\n  const keys = Object.keys(props);\n  if (!keys.some(key => key.startsWith('aria-') || key.startsWith('data-'))) {\n    return props;\n  }\n  const newProps = {};\n  const forwardedProps = props.forwardedProps ?? {};\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    if (key.startsWith('aria-') || key.startsWith('data-')) {\n      forwardedProps[key] = props[key];\n    } else {\n      newProps[key] = props[key];\n    }\n  }\n  newProps.forwardedProps = forwardedProps;\n  return newProps;\n}\nexport function useProps(allProps) {\n  return React.useMemo(() => {\n    const themedProps = _extends({}, (_objectDestructuringEmpty(allProps), allProps));\n    return groupForwardedProps(themedProps);\n  }, [allProps]);\n}","function _objectDestructuringEmpty(t) {\n  if (null == t) throw new TypeError(\"Cannot destructure \" + t);\n}\nexport { _objectDestructuringEmpty as default };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function computeSlots({\n  defaultSlots,\n  slots\n}) {\n  const overrides = slots;\n  if (!overrides || Object.keys(overrides).length === 0) {\n    return defaultSlots;\n  }\n  const result = _extends({}, defaultSlots);\n  Object.keys(overrides).forEach(key => {\n    const k = key;\n    if (overrides[k] !== undefined) {\n      result[k] = overrides[k];\n    }\n  });\n  return result;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderActionsCell } from '../components/cell/GridActionsCell';\nexport const GRID_ACTIONS_COLUMN_TYPE = 'actions';\nexport const GRID_ACTIONS_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  width: 100,\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  headerName: '',\n  disableColumnMenu: true,\n  disableExport: true,\n  renderCell: renderActionsCell,\n  getApplyQuickFilterFn: undefined\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderBooleanCell } from '../components/cell/GridBooleanCell';\nimport { renderEditBooleanCell } from '../components/cell/GridEditBooleanCell';\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridBooleanOperators } from './gridBooleanOperators';\nconst gridBooleanFormatter = (value, row, column, apiRef) => {\n  return value ? apiRef.current.getLocaleText('booleanCellTrueLabel') : apiRef.current.getLocaleText('booleanCellFalseLabel');\n};\nconst stringToBoolean = value => {\n  switch (value.toLowerCase().trim()) {\n    case 'true':\n    case 'yes':\n    case '1':\n      return true;\n    case 'false':\n    case 'no':\n    case '0':\n    case 'null':\n    case 'undefined':\n      return false;\n    default:\n      return undefined;\n  }\n};\nexport const GRID_BOOLEAN_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'boolean',\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  renderCell: renderBooleanCell,\n  renderEditCell: renderEditBooleanCell,\n  sortComparator: gridNumberComparator,\n  valueFormatter: gridBooleanFormatter,\n  filterOperators: getGridBooleanOperators(),\n  getApplyQuickFilterFn: undefined,\n  // @ts-ignore\n  aggregable: false,\n  // @ts-ignore\n  pastedValueParser: value => stringToBoolean(value)\n});","import { GridFilterInputBoolean } from '../components/panel/filterPanel/GridFilterInputBoolean';\nexport const getGridBooleanOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const valueAsBoolean = String(filterItem.value) === 'true';\n    return value => {\n      return Boolean(value) === valueAsBoolean;\n    };\n  },\n  InputComponent: GridFilterInputBoolean\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from '../components/columnSelection/GridCellCheckboxRenderer';\nimport { GridHeaderCheckbox } from '../components/columnSelection/GridHeaderCheckbox';\nimport { selectedIdsLookupSelector } from '../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_CHECKBOX_SELECTION_FIELD = '__check__';\nexport const GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  type: 'custom',\n  field: GRID_CHECKBOX_SELECTION_FIELD,\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  display: 'flex',\n  valueGetter: (value, row, column, apiRef) => {\n    const selectionLookup = selectedIdsLookupSelector(apiRef);\n    const rowId = apiRef.current.getRowId(row);\n    return selectionLookup[rowId] !== undefined;\n  },\n  renderHeader: params => /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params)),\n  renderCell: params => /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params))\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridDateComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridDateOperators } from './gridDateOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditDateCell } from '../components/cell/GridEditDateCell';\nfunction throwIfNotDateObject({\n  value,\n  columnType,\n  rowId,\n  field\n}) {\n  if (!(value instanceof Date)) {\n    throw new Error([`MUI X: \\`${columnType}\\` column type only accepts \\`Date\\` objects as values.`, 'Use `valueGetter` to transform the value into a `Date` object.', `Row ID: ${rowId}, field: \"${field}\".`].join('\\n'));\n  }\n}\nexport const gridDateFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'date',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleDateString();\n};\nexport const gridDateTimeFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'dateTime',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleString();\n};\nexport const GRID_DATE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'date',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateFormatter,\n  filterOperators: getGridDateOperators(),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});\nexport const GRID_DATETIME_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'dateTime',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateTimeFormatter,\n  filterOperators: getGridDateOperators(true),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});","import { GridFilterInputDate } from '../components/panel/filterPanel/GridFilterInputDate';\nfunction buildApplyFilterFn(filterItem, compareFn, showTime, keepHours) {\n  if (!filterItem.value) {\n    return null;\n  }\n  const date = new Date(filterItem.value);\n  if (showTime) {\n    date.setSeconds(0, 0);\n  } else {\n    // In GMT-X timezone, the date will be one day behind.\n    // For 2022-08-16:\n    // GMT+2: Tue Aug 16 2022 02:00:00 GMT+0200\n    // GMT-4: Mon Aug 15 2022 20:00:00 GMT-0400\n    //\n    // We need to add the offset before resetting the hours.\n    date.setMinutes(date.getMinutes() + date.getTimezoneOffset());\n    date.setHours(0, 0, 0, 0);\n  }\n  const time = date.getTime();\n  return value => {\n    if (!value) {\n      return false;\n    }\n    if (keepHours) {\n      return compareFn(value.getTime(), time);\n    }\n\n    // Make a copy of the date to not reset the hours in the original object\n    const dateCopy = new Date(value);\n    if (showTime) {\n      dateCopy.setSeconds(0, 0);\n    } else {\n      dateCopy.setHours(0, 0, 0, 0);\n    }\n    return compareFn(dateCopy.getTime(), time);\n  };\n}\nexport const getGridDateOperators = showTime => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 === value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 !== value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'after',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 > value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrAfter',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 >= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'before',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 < value2, showTime, !showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrBefore',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 <= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}];","import { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { GRID_NUMERIC_COL_DEF } from './gridNumericColDef';\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from './gridDateColDef';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { GRID_SINGLE_SELECT_COL_DEF } from './gridSingleSelectColDef';\nimport { GRID_ACTIONS_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from './gridActionsColDef';\nexport const DEFAULT_GRID_COL_TYPE_KEY = 'string';\nexport const getGridDefaultColumnTypes = () => {\n  const nativeColumnTypes = {\n    string: GRID_STRING_COL_DEF,\n    number: GRID_NUMERIC_COL_DEF,\n    date: GRID_DATE_COL_DEF,\n    dateTime: GRID_DATETIME_COL_DEF,\n    boolean: GRID_BOOLEAN_COL_DEF,\n    singleSelect: GRID_SINGLE_SELECT_COL_DEF,\n    [GRID_ACTIONS_COLUMN_TYPE]: GRID_ACTIONS_COL_DEF,\n    custom: GRID_STRING_COL_DEF\n  };\n  return nativeColumnTypes;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { isNumber } from '../utils/utils';\nimport { getGridNumericOperators, getGridNumericQuickFilterFn } from './gridNumericOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nexport const GRID_NUMERIC_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'number',\n  align: 'right',\n  headerAlign: 'right',\n  sortComparator: gridNumberComparator,\n  valueParser: value => value === '' ? null : Number(value),\n  valueFormatter: value => isNumber(value) ? value.toLocaleString() : value || '',\n  filterOperators: getGridNumericOperators(),\n  getApplyQuickFilterFn: getGridNumericQuickFilterFn\n});","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nconst parseNumericValue = value => {\n  if (value == null) {\n    return null;\n  }\n  return Number(value);\n};\nexport const getGridNumericQuickFilterFn = value => {\n  if (value == null || Number.isNaN(value) || value === '') {\n    return null;\n  }\n  return columnValue => {\n    return parseNumericValue(columnValue) === parseNumericValue(value);\n  };\n};\nexport const getGridNumericOperators = () => [{\n  value: '=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) === filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '!=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) !== filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) > filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) >= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) < filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) <= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    return value => {\n      return value != null && filterItem.value.includes(Number(value));\n    };\n  },\n  InputComponent: GridFilterInputMultipleValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditSingleSelectCell } from '../components/cell/GridEditSingleSelectCell';\nimport { getGridSingleSelectOperators } from './gridSingleSelectOperators';\nimport { getValueOptions, isSingleSelectColDef } from '../components/panel/filterPanel/filterPanelUtils';\nimport { isObject } from '../utils/utils';\nconst isArrayOfObjects = options => {\n  return typeof options[0] === 'object';\n};\nconst defaultGetOptionValue = value => {\n  return isObject(value) ? value.value : value;\n};\nconst defaultGetOptionLabel = value => {\n  return isObject(value) ? value.label : String(value);\n};\nexport const GRID_SINGLE_SELECT_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'singleSelect',\n  getOptionLabel: defaultGetOptionLabel,\n  getOptionValue: defaultGetOptionValue,\n  valueFormatter(value, row, colDef, apiRef) {\n    // const { id, field, value, api } = params;\n    const rowId = apiRef.current.getRowId(row);\n    if (!isSingleSelectColDef(colDef)) {\n      return '';\n    }\n    const valueOptions = getValueOptions(colDef, {\n      id: rowId,\n      row\n    });\n    if (value == null) {\n      return '';\n    }\n    if (!valueOptions) {\n      return value;\n    }\n    if (!isArrayOfObjects(valueOptions)) {\n      return colDef.getOptionLabel(value);\n    }\n    const valueOption = valueOptions.find(option => colDef.getOptionValue(option) === value);\n    return valueOption ? colDef.getOptionLabel(valueOption) : '';\n  },\n  renderEditCell: renderEditSingleSelectCell,\n  filterOperators: getGridSingleSelectOperators(),\n  // @ts-ignore\n  pastedValueParser: (value, row, column) => {\n    const colDef = column;\n    const valueOptions = getValueOptions(colDef) || [];\n    const getOptionValue = colDef.getOptionValue;\n    const valueOption = valueOptions.find(option => {\n      if (getOptionValue(option) === value) {\n        return true;\n      }\n      return false;\n    });\n    if (valueOption) {\n      return value;\n    }\n    // do not paste the value if it is not in the valueOptions\n    return undefined;\n  }\n});","import { GridFilterInputSingleSelect } from '../components/panel/filterPanel/GridFilterInputSingleSelect';\nimport { GridFilterInputMultipleSingleSelect } from '../components/panel/filterPanel/GridFilterInputMultipleSingleSelect';\nimport { isObject } from '../utils/utils';\nconst parseObjectValue = value => {\n  if (value == null || !isObject(value)) {\n    return value;\n  }\n  return value.value;\n};\nexport const getGridSingleSelectOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) === parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) !== parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValues = filterItem.value.map(parseObjectValue);\n    return value => filterItemValues.includes(parseObjectValue(value));\n  },\n  InputComponent: GridFilterInputMultipleSingleSelect\n}];","import { renderEditInputCell } from '../components/cell/GridEditInputCell';\nimport { gridStringOrNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridStringOperators, getGridStringQuickFilterFn } from './gridStringOperators';\n\n/**\n * TODO: Move pro and premium properties outside of this Community file\n */\nexport const GRID_STRING_COL_DEF = {\n  width: 100,\n  minWidth: 50,\n  maxWidth: Infinity,\n  hideable: true,\n  sortable: true,\n  resizable: true,\n  filterable: true,\n  groupable: true,\n  pinnable: true,\n  // @ts-ignore\n  aggregable: true,\n  editable: false,\n  sortComparator: gridStringOrNumberComparator,\n  type: 'string',\n  align: 'left',\n  filterOperators: getGridStringOperators(),\n  renderEditCell: renderEditInputCell,\n  getApplyQuickFilterFn: getGridStringQuickFilterFn\n};","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { escapeRegExp } from '../utils/utils';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nimport { removeDiacritics } from '../hooks/features/filter/gridFilterUtils';\nexport const getGridStringQuickFilterFn = value => {\n  if (!value) {\n    return null;\n  }\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return (_, row, column, apiRef) => {\n    let columnValue = apiRef.current.getRowFormattedValue(row, column);\n    if (apiRef.current.ignoreDiacritics) {\n      columnValue = removeDiacritics(columnValue);\n    }\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n};\nexport const getGridStringOperators = (disableTrim = false) => [{\n  value: 'contains',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(escapeRegExp(filterItemValue), 'i');\n    return value => {\n      return value != null ? filterRegex.test(String(value)) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'equals',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => {\n      return value != null ? collator.compare(filterItemValue, value.toString()) === 0 : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'startsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`^${escapeRegExp(filterItemValue)}.*$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'endsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`.*${escapeRegExp(filterItemValue)}$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value === '' || value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value !== '' && value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(val => val.trim());\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => value != null ? filterItemValue.some(filterValue => {\n      return collator.compare(filterValue, value.toString() || '') === 0;\n    }) : false;\n  },\n  InputComponent: GridFilterInputMultipleValue\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridColumnGroupsLookupSelector } from '../../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { isEventTargetInPortal } from '../../utils/domUtils';\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from '../../utils/cellBorderUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    headerAlign,\n    isDragging,\n    showLeftBorder,\n    showRightBorder,\n    groupId,\n    pinnedPosition\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', headerAlign === 'left' && 'columnHeader--alignLeft', headerAlign === 'center' && 'columnHeader--alignCenter', headerAlign === 'right' && 'columnHeader--alignRight', isDragging && 'columnHeader--moving', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', 'withBorderColor', groupId === null ? 'columnHeader--emptyGroup' : 'columnHeader--filledGroup', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer', 'withBorderColor'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnGroupHeader(props) {\n  const {\n    groupId,\n    width,\n    depth,\n    maxDepth,\n    fields,\n    height,\n    colIndex,\n    hasFocus,\n    tabIndex,\n    isLastColumn,\n    pinnedPosition,\n    style,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const columnGroupsLookup = useGridSelector(apiRef, gridColumnGroupsLookupSelector);\n  const group = groupId ? columnGroupsLookup[groupId] : {};\n  const {\n    headerName = groupId ?? '',\n    description = '',\n    headerAlign = undefined\n  } = group;\n  let headerComponent;\n  const render = groupId && columnGroupsLookup[groupId]?.renderHeaderGroup;\n  const renderParams = React.useMemo(() => ({\n    groupId,\n    headerName,\n    description,\n    depth,\n    maxDepth,\n    fields,\n    colIndex,\n    isLastColumn\n  }), [groupId, headerName, description, depth, maxDepth, fields, colIndex, isLastColumn]);\n  if (groupId && render) {\n    headerComponent = render(renderParams);\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showLeftBorder,\n    showRightBorder,\n    headerAlign,\n    depth,\n    isDragging: false\n  });\n  const label = headerName ?? groupId;\n  const id = useId();\n  const elementId = groupId === null ? `empty-group-cell-${id}` : groupId;\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (hasFocus) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n    }\n  }, [apiRef, hasFocus]);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, renderParams, event);\n  },\n  // For now this is stupid, because renderParams change all the time.\n  // Need to move it's computation in the api, such that for a given depth+columnField, I can get the group parameters\n  [apiRef, renderParams]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onKeyDown: publish('columnGroupHeaderKeyDown'),\n    onFocus: publish('columnGroupHeaderFocus'),\n    onBlur: publish('columnGroupHeaderBlur')\n  }), [publish]);\n  const headerClassName = typeof group.headerClassName === 'function' ? group.headerClassName(renderParams) : group.headerClassName;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: false,\n    colIndex: colIndex,\n    height: height,\n    isResizing: false,\n    sortDirection: null,\n    hasFocus: false,\n    tabIndex: tabIndex,\n    isDraggable: false,\n    headerComponent: headerComponent,\n    headerClassName: headerClassName,\n    description: description,\n    elementId: elementId,\n    width: width,\n    columnMenuIconButton: null,\n    columnTitleIconButtons: null,\n    resizable: false,\n    label: label,\n    \"aria-colspan\": fields.length\n    // The fields are wrapped between |-...-| to avoid confusion between fields \"id\" and \"id2\" when using selector data-fields~=\n    ,\n    \"data-fields\": `|-${fields.join('-|-')}-|`,\n    style: style\n  }, mouseEventsHandlers));\n}\nexport { GridColumnGroupHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled, useTheme } from '@mui/material/styles';\nimport { useGridSelector } from '../../utils';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridColumnHeaderItem } from '../../../components/columnHeaders/GridColumnHeaderItem';\nimport { gridDimensionsSelector } from '../dimensions';\nimport { gridRenderContextColumnsSelector, gridVirtualizationColumnEnabledSelector } from '../virtualization';\nimport { computeOffsetLeft } from '../virtualization/useGridVirtualScroller';\nimport { GridColumnGroupHeader } from '../../../components/columnHeaders/GridColumnGroupHeader';\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridVisiblePinnedColumnDefinitionsSelector } from '../columns';\nimport { gridColumnGroupsUnwrappedModelSelector } from '../columnGrouping/gridColumnGroupsSelector';\nimport { GridScrollbarFillerCell as ScrollbarFiller } from '../../../components/GridScrollbarFillerCell';\nimport { getPinnedCellOffset } from '../../../internals/utils/getPinnedCellOffset';\nimport { GridColumnHeaderSeparatorSides } from '../../../components/columnHeaders/GridColumnHeaderSeparator';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (_, styles) => styles.columnHeaderRow\n})({\n  display: 'flex'\n});\nexport const useGridColumnHeaders = props => {\n  const {\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridPrivateApiContext();\n  const theme = useTheme();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const hasVirtualization = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector);\n  const columnGroupsModel = useGridSelector(apiRef, gridColumnGroupsUnwrappedModelSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const renderContext = useGridSelector(apiRef, gridRenderContextColumnsSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const offsetLeft = computeOffsetLeft(columnPositions, renderContext, theme.direction, pinnedColumns.left.length);\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  React.useEffect(() => {\n    apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n  }, [apiRef]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  const leftRenderContext = React.useMemo(() => {\n    return pinnedColumns.left.length ? {\n      firstColumnIndex: 0,\n      lastColumnIndex: pinnedColumns.left.length\n    } : null;\n  }, [pinnedColumns.left.length]);\n  const rightRenderContext = React.useMemo(() => {\n    return pinnedColumns.right.length ? {\n      firstColumnIndex: visibleColumns.length - pinnedColumns.right.length,\n      lastColumnIndex: visibleColumns.length\n    } : null;\n  }, [pinnedColumns.right.length, visibleColumns.length]);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  const getColumnsToRender = params => {\n    const {\n      renderContext: currentContext = renderContext,\n      // TODO: `minFirstColumn` is not used anymore, could be refactored out.\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n    const firstColumnToRender = !hasVirtualization ? 0 : currentContext.firstColumnIndex;\n    const lastColumnToRender = !hasVirtualization ? maxLastColumn : currentContext.lastColumnIndex;\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    };\n  };\n  const getFillers = (params, children, leftOverflow, borderTop = false) => {\n    const isPinnedRight = params?.position === GridPinnedColumnPosition.RIGHT;\n    const isNotPinned = params?.position === undefined;\n    const hasScrollbarFiller = pinnedColumns.right.length > 0 && isPinnedRight || pinnedColumns.right.length === 0 && isNotPinned;\n    const leftOffsetWidth = offsetLeft - leftOverflow;\n    return /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        style: {\n          width: leftOffsetWidth\n        }\n      }), children, isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        className: clsx(gridClasses.filler, borderTop && gridClasses['filler--borderTop'])\n      }), hasScrollbarFiller && /*#__PURE__*/_jsx(ScrollbarFiller, {\n        header: true,\n        borderTop: borderTop,\n        pinnedRight: isPinnedRight\n      })]\n    });\n  };\n  const getCellOffsetStyle = ({\n    pinnedPosition,\n    columnIndex,\n    computedWidth\n  }) => {\n    let style;\n    if (pinnedPosition === 'left' || pinnedPosition === 'right') {\n      const pinnedOffset = getPinnedCellOffset(pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions);\n      if (pinnedPosition === 'left') {\n        style = {\n          left: pinnedOffset\n        };\n      }\n      if (pinnedPosition === 'right') {\n        style = {\n          right: pinnedOffset\n        };\n      }\n    }\n    return style;\n  };\n  const getColumnHeaders = (params, other = {}) => {\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = getColumnsToRender(params);\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      const pinnedPosition = params?.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: colDef.computedWidth\n      });\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: dimensions.headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        isLast: columnIndex === columnPositions.length - 1,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: i,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller\n      }, other), colDef.field));\n    }\n    return getFillers(params, columns, 0);\n  };\n  const getColumnHeadersRow = () => {\n    return /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      children: [leftRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.LEFT,\n        renderContext: leftRenderContext,\n        minFirstColumn: leftRenderContext.firstColumnIndex,\n        maxLastColumn: leftRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true\n      }), getColumnHeaders({\n        renderContext,\n        minFirstColumn: pinnedColumns.left.length,\n        maxLastColumn: visibleColumns.length - pinnedColumns.right.length\n      }), rightRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.RIGHT,\n        renderContext: rightRenderContext,\n        minFirstColumn: rightRenderContext.firstColumnIndex,\n        maxLastColumn: rightRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true,\n        separatorSide: GridColumnHeaderSeparatorSides.Left\n      })]\n    });\n  };\n  const getColumnGroupHeaders = ({\n    depth,\n    params\n  }) => {\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const rowStructure = columnGroupsHeaderStructure[depth];\n    const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n    const firstGroupToRender = columnGroupsModel[firstColumnFieldToRender]?.[depth] ?? null;\n    const firstGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender));\n    const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n    const lastGroupToRender = columnGroupsModel[lastColumnFieldToRender]?.[depth] ?? null;\n    const lastGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender));\n    const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n      return _extends({}, groupStructure, {\n        columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n      });\n    }).filter(groupStructure => groupStructure.columnFields.length > 0);\n    const firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n    const hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n    const leftOverflow = hiddenGroupColumns.reduce((acc, field) => {\n      const column = apiRef.current.getColumn(field);\n      return acc + (column.computedWidth ?? 0);\n    }, 0);\n    let columnIndex = firstColumnToRender;\n    const children = visibleColumnGroupHeader.map(({\n      groupId,\n      columnFields\n    }, index) => {\n      const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n      const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n      const headerInfo = {\n        groupId,\n        width: columnFields.reduce((acc, field) => acc + apiRef.current.getColumn(field).computedWidth, 0),\n        fields: columnFields,\n        colIndex: columnIndex,\n        hasFocus,\n        tabIndex\n      };\n      const pinnedPosition = params.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: headerInfo.width\n      });\n      columnIndex += columnFields.length;\n      let indexInSection = index;\n      if (pinnedPosition === 'left') {\n        // Group headers can expand to multiple columns, we need to adjust the index\n        indexInSection = columnIndex - 1;\n      }\n      return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n        groupId: groupId,\n        width: headerInfo.width,\n        fields: headerInfo.fields,\n        colIndex: headerInfo.colIndex,\n        depth: depth,\n        isLastColumn: headerInfo.colIndex === visibleColumns.length - headerInfo.fields.length,\n        maxDepth: headerGroupingMaxDepth,\n        height: dimensions.headerHeight,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: indexInSection,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller\n      }, index);\n    });\n    return getFillers(params, children, leftOverflow);\n  };\n  const getColumnGroupHeadersRows = () => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const headerRows = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      headerRows.push( /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n        role: \"row\",\n        \"aria-rowindex\": depth + 1,\n        ownerState: rootProps,\n        children: [leftRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.LEFT,\n            renderContext: leftRenderContext,\n            minFirstColumn: leftRenderContext.firstColumnIndex,\n            maxLastColumn: leftRenderContext.lastColumnIndex\n          }\n        }), getColumnGroupHeaders({\n          depth,\n          params: {\n            renderContext\n          }\n        }), rightRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.RIGHT,\n            renderContext: rightRenderContext,\n            minFirstColumn: rightRenderContext.firstColumnIndex,\n            maxLastColumn: rightRenderContext.lastColumnIndex\n          }\n        })]\n      }, depth));\n    }\n    return headerRows;\n  };\n  return {\n    renderContext,\n    leftRenderContext,\n    rightRenderContext,\n    pinnedColumns,\n    visibleColumns,\n    getCellOffsetStyle,\n    getFillers,\n    getColumnHeadersRow,\n    getColumnsToRender,\n    getColumnGroupHeadersRows,\n    isDragging: !!dragCol,\n    getInnerProps: () => ({\n      role: 'rowgroup'\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaders']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeadersRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaders',\n  overridesResolver: (props, styles) => styles.columnHeaders\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n  borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n});\nexport const GridBaseColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeadersRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other, {\n    role: \"presentation\"\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"visibleColumns\", \"sortColumnLookup\", \"filterColumnLookup\", \"columnHeaderTabIndexState\", \"columnGroupHeaderTabIndexState\", \"columnHeaderFocus\", \"columnGroupHeaderFocus\", \"headerGroupingMaxDepth\", \"columnMenuState\", \"columnVisibility\", \"columnGroupsHeaderStructure\", \"hasOtherElementInTabSequence\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { fastMemo } from '../utils/fastMemo';\nimport { useGridColumnHeaders } from '../hooks/features/columnHeaders/useGridColumnHeaders';\nimport { GridBaseColumnHeaders } from './columnHeaders/GridBaseColumnHeaders';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      visibleColumns,\n      sortColumnLookup,\n      filterColumnLookup,\n      columnHeaderTabIndexState,\n      columnGroupHeaderTabIndexState,\n      columnHeaderFocus,\n      columnGroupHeaderFocus,\n      headerGroupingMaxDepth,\n      columnMenuState,\n      columnVisibility,\n      columnGroupsHeaderStructure,\n      hasOtherElementInTabSequence\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getInnerProps,\n    getColumnHeadersRow,\n    getColumnGroupHeadersRows\n  } = useGridColumnHeaders({\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  });\n  return /*#__PURE__*/_jsxs(GridBaseColumnHeaders, _extends({\n    ref: ref\n  }, other, getInnerProps(), {\n    children: [getColumnGroupHeadersRows(), getColumnHeadersRow()]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaders.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnGroupHeaderFocus: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupHeaderTabIndexState: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupsHeaderStructure: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.shape({\n    columnFields: PropTypes.arrayOf(PropTypes.string).isRequired,\n    groupId: PropTypes.string\n  }))).isRequired,\n  columnHeaderFocus: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnHeaderTabIndexState: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnMenuState: PropTypes.shape({\n    field: PropTypes.string,\n    open: PropTypes.bool.isRequired\n  }).isRequired,\n  columnVisibility: PropTypes.object.isRequired,\n  filterColumnLookup: PropTypes.object.isRequired,\n  hasOtherElementInTabSequence: PropTypes.bool.isRequired,\n  headerGroupingMaxDepth: PropTypes.number.isRequired,\n  sortColumnLookup: PropTypes.object.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridColumnHeaders = fastMemo(GridColumnHeaders);\nexport { MemoizedGridColumnHeaders as GridColumnHeaders };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridTopLevelRowCountSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { selectedGridRowsCountSelector } from '../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { gridFilteredTopLevelRowCountSelector } from '../hooks/features/filter/gridFilterSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridSelectedRowCount } from './GridSelectedRowCount';\nimport { GridFooterContainer } from './containers/GridFooterContainer';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(rootProps.slots.footerRowCount, _extends({}, rootProps.slotProps?.footerRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  })) : null;\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.slots.pagination && /*#__PURE__*/_jsx(rootProps.slots.pagination, _extends({}, rootProps.slotProps?.pagination));\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({\n    ref: ref\n  }, props, {\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridPreferencesPanel = /*#__PURE__*/React.forwardRef(function GridPreferencesPanel(props, ref) {\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, preferencePanelState.openedPanelValue ?? GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.slots.panel, _extends({\n    ref: ref,\n    as: rootProps.slots.basePopper,\n    open: columns.length > 0 && preferencePanelState.open,\n    id: preferencePanelState.panelId,\n    \"aria-labelledby\": preferencePanelState.labelId\n  }, rootProps.slotProps?.panel, props, rootProps.slotProps?.basePopper, {\n    children: panelContent\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { GridPreferencesPanel } from './panel/GridPreferencesPanel';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridHeader() {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridPreferencesPanel, {}), rootProps.slots.toolbar && /*#__PURE__*/_jsx(rootProps.slots.toolbar, _extends({}, rootProps.slotProps?.toolbar))]\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport useForkRef from '@mui/utils/useForkRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridColumnsTotalWidthSelector, gridDimensionsSelector, gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, useGridApiEventHandler, useGridSelector } from '../hooks';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { getPinnedCellOffset } from '../internals/utils/getPinnedCellOffset';\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from '../utils/cellBorderUtils';\nimport { escapeOperandAttributeSelector } from '../utils/domUtils';\nimport { GridScrollbarFillerCell } from './GridScrollbarFillerCell';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SkeletonOverlay = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SkeletonLoadingOverlay',\n  overridesResolver: (props, styles) => styles.skeletonLoadingOverlay\n})({\n  minWidth: '100%',\n  width: 'max-content',\n  // prevents overflow: clip; cutting off the x axis\n  height: '100%',\n  overflow: 'clip' // y axis is hidden while the x axis is allowed to overflow\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['skeletonLoadingOverlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst getColIndex = el => parseInt(el.getAttribute('data-colindex'), 10);\nconst GridSkeletonLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridSkeletonLoadingOverlay(props, forwardedRef) {\n  const rootProps = useGridRootProps();\n  const {\n    slots\n  } = rootProps;\n  const classes = useUtilityClasses({\n    classes: rootProps.classes\n  });\n  const ref = React.useRef(null);\n  const handleRef = useForkRef(ref, forwardedRef);\n  const apiRef = useGridApiContext();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const viewportHeight = dimensions?.viewportInnerSize.height ?? 0;\n  const skeletonRowsCount = Math.ceil(viewportHeight / dimensions.rowHeight);\n  const totalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const positions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const inViewportCount = React.useMemo(() => positions.filter(value => value <= totalWidth).length, [totalWidth, positions]);\n  const allVisibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const columns = React.useMemo(() => allVisibleColumns.slice(0, inViewportCount), [allVisibleColumns, inViewportCount]);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const getPinnedStyle = React.useCallback((computedWidth, index, position) => {\n    const pinnedOffset = getPinnedCellOffset(position, computedWidth, index, positions, dimensions);\n    return {\n      [position]: pinnedOffset\n    };\n  }, [dimensions, positions]);\n  const getPinnedPosition = React.useCallback(field => {\n    if (pinnedColumns.left.findIndex(col => col.field === field) !== -1) {\n      return GridPinnedColumnPosition.LEFT;\n    }\n    if (pinnedColumns.right.findIndex(col => col.field === field) !== -1) {\n      return GridPinnedColumnPosition.RIGHT;\n    }\n    return undefined;\n  }, [pinnedColumns.left, pinnedColumns.right]);\n  const children = React.useMemo(() => {\n    const array = [];\n    for (let i = 0; i < skeletonRowsCount; i += 1) {\n      const rowCells = [];\n      for (let colIndex = 0; colIndex < columns.length; colIndex += 1) {\n        const column = columns[colIndex];\n        const pinnedPosition = getPinnedPosition(column.field);\n        const isPinnedLeft = pinnedPosition === GridPinnedColumnPosition.LEFT;\n        const isPinnedRight = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n        const sectionLength = pinnedPosition ? pinnedColumns[pinnedPosition].length // pinned section\n        : columns.length - pinnedColumns.left.length - pinnedColumns.right.length; // middle section\n        const sectionIndex = pinnedPosition ? pinnedColumns[pinnedPosition].findIndex(col => col.field === column.field) // pinned section\n        : colIndex - pinnedColumns.left.length; // middle section\n        const pinnedStyle = pinnedPosition && getPinnedStyle(column.computedWidth, colIndex, pinnedPosition);\n        const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n        const showRightBorder = shouldCellShowRightBorder(pinnedPosition, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n        const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, sectionIndex);\n        const isLastColumn = colIndex === columns.length - 1;\n        const isFirstPinnedRight = isPinnedRight && sectionIndex === 0;\n        const hasFillerBefore = isFirstPinnedRight && gridHasFiller;\n        const hasFillerAfter = isLastColumn && !isFirstPinnedRight && gridHasFiller;\n        const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth;\n        const emptyCellWidth = Math.max(0, expandedWidth);\n        const emptyCell = /*#__PURE__*/_jsx(slots.skeletonCell, {\n          width: emptyCellWidth,\n          empty: true\n        }, `skeleton-filler-column-${i}`);\n        const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n        const hasScrollbarFiller = isLastColumn && scrollbarWidth !== 0;\n        if (hasFillerBefore) {\n          rowCells.push(emptyCell);\n        }\n        rowCells.push( /*#__PURE__*/_jsx(slots.skeletonCell, {\n          field: column.field,\n          type: column.type,\n          align: column.align,\n          width: \"var(--width)\",\n          height: dimensions.rowHeight,\n          \"data-colindex\": colIndex,\n          className: clsx(isPinnedLeft && gridClasses['cell--pinnedLeft'], isPinnedRight && gridClasses['cell--pinnedRight'], showRightBorder && gridClasses['cell--withRightBorder'], showLeftBorder && gridClasses['cell--withLeftBorder']),\n          style: _extends({\n            '--width': `${column.computedWidth}px`\n          }, pinnedStyle)\n        }, `skeleton-column-${i}-${column.field}`));\n        if (hasFillerAfter) {\n          rowCells.push(emptyCell);\n        }\n        if (hasScrollbarFiller) {\n          rowCells.push( /*#__PURE__*/_jsx(GridScrollbarFillerCell, {\n            pinnedRight: pinnedColumns.right.length > 0\n          }));\n        }\n      }\n      array.push( /*#__PURE__*/_jsx(\"div\", {\n        className: clsx(gridClasses.row, gridClasses.rowSkeleton, i === 0 && gridClasses['row--firstVisible']),\n        children: rowCells\n      }, `skeleton-row-${i}`));\n    }\n    return array;\n  }, [slots, columns, pinnedColumns, skeletonRowsCount, rootProps.showCellVerticalBorder, dimensions.columnsTotalWidth, dimensions.viewportOuterSize.width, dimensions.rowHeight, dimensions.hasScrollY, dimensions.scrollbarSize, getPinnedPosition, getPinnedStyle]);\n\n  // Sync the column resize of the overlay columns with the grid\n  const handleColumnResize = params => {\n    const {\n      colDef,\n      width\n    } = params;\n    const cells = ref.current?.querySelectorAll(`[data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (!cells) {\n      throw new Error('MUI X: Expected skeleton cells to be defined with `data-field` attribute.');\n    }\n    const resizedColIndex = columns.findIndex(col => col.field === colDef.field);\n    const pinnedPosition = getPinnedPosition(colDef.field);\n    const isPinnedLeft = pinnedPosition === GridPinnedColumnPosition.LEFT;\n    const isPinnedRight = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n    const currentWidth = getComputedStyle(cells[0]).getPropertyValue('--width');\n    const delta = parseInt(currentWidth, 10) - width;\n    if (cells) {\n      cells.forEach(element => {\n        element.style.setProperty('--width', `${width}px`);\n      });\n    }\n    if (isPinnedLeft) {\n      const pinnedCells = ref.current?.querySelectorAll(`.${gridClasses['cell--pinnedLeft']}`);\n      pinnedCells?.forEach(element => {\n        const colIndex = getColIndex(element);\n        if (colIndex > resizedColIndex) {\n          element.style.left = `${parseInt(getComputedStyle(element).left, 10) - delta}px`;\n        }\n      });\n    }\n    if (isPinnedRight) {\n      const pinnedCells = ref.current?.querySelectorAll(`.${gridClasses['cell--pinnedRight']}`);\n      pinnedCells?.forEach(element => {\n        const colIndex = getColIndex(element);\n        if (colIndex < resizedColIndex) {\n          element.style.right = `${parseInt(getComputedStyle(element).right, 10) + delta}px`;\n        }\n      });\n    }\n  };\n  useGridApiEventHandler(apiRef, 'columnResize', handleColumnResize);\n  return /*#__PURE__*/_jsx(SkeletonOverlay, _extends({\n    className: classes.root,\n    ref: handleRef\n  }, props, {\n    children: children\n  }));\n});\nexport { GridSkeletonLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"variant\", \"noRowsVariant\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { GridSkeletonLoadingOverlay } from './GridSkeletonLoadingOverlay';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { gridRowCountSelector, useGridSelector } from '../hooks';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst LOADING_VARIANTS = {\n  'circular-progress': {\n    component: CircularProgress,\n    style: {}\n  },\n  'linear-progress': {\n    component: LinearProgress,\n    style: {\n      display: 'block'\n    }\n  },\n  skeleton: {\n    component: GridSkeletonLoadingOverlay,\n    style: {\n      display: 'block'\n    }\n  }\n};\nconst GridLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridLoadingOverlay(props, ref) {\n  const {\n      variant = 'circular-progress',\n      noRowsVariant = 'circular-progress',\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rowsCount = useGridSelector(apiRef, gridRowCountSelector);\n  const activeVariant = LOADING_VARIANTS[rowsCount === 0 ? noRowsVariant : variant];\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref,\n    style: _extends({}, activeVariant.style, style)\n  }, other, {\n    children: /*#__PURE__*/_jsx(activeVariant.component, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The variant of the overlay when no rows are displayed.\n   * @default 'circular-progress'\n   */\n  noRowsVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant of the overlay.\n   * @default 'circular-progress'\n   */\n  variant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton'])\n} : void 0;\nexport { GridLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = /*#__PURE__*/React.forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridPaginationModelSelector, gridPaginationRowCountSelector, gridPageCountSelector } from '../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\nconst wrapLabelDisplayedRows = (labelDisplayedRows, estimated) => {\n  return ({\n    from,\n    to,\n    count,\n    page\n  }) => labelDisplayedRows({\n    from,\n    to,\n    count,\n    page,\n    estimated\n  });\n};\nconst defaultLabelDisplayedRows = ({\n  from,\n  to,\n  count,\n  estimated\n}) => {\n  if (!estimated) {\n    return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n  }\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${estimated > to ? estimated : to}`}`;\n};\n\n// A mutable version of a readonly array.\n\nconst GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const rowCount = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n  const {\n    paginationMode,\n    loading,\n    estimatedRowCount\n  } = rootProps;\n  const computedProps = React.useMemo(() => {\n    if (rowCount === -1 && paginationMode === 'server' && loading) {\n      return {\n        backIconButtonProps: {\n          disabled: true\n        },\n        nextIconButtonProps: {\n          disabled: true\n        }\n      };\n    }\n    return {};\n  }, [loading, paginationMode, rowCount]);\n  const lastPage = React.useMemo(() => Math.max(0, pageCount - 1), [pageCount]);\n  const computedPage = React.useMemo(() => {\n    if (rowCount === -1) {\n      return paginationModel.page;\n    }\n    return paginationModel.page <= lastPage ? paginationModel.page : lastPage;\n  }, [lastPage, paginationModel.page, rowCount]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const pageSize = Number(event.target.value);\n    apiRef.current.setPageSize(pageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((_, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n  const isPageSizeIncludedInPageSizeOptions = pageSize => {\n    for (let i = 0; i < rootProps.pageSizeOptions.length; i += 1) {\n      const option = rootProps.pageSizeOptions[i];\n      if (typeof option === 'number') {\n        if (option === pageSize) {\n          return true;\n        }\n      } else if (option.value === pageSize) {\n        return true;\n      }\n    }\n    return false;\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingInPageSizeOptions = React.useRef(false);\n    const pageSize = rootProps.paginationModel?.pageSize ?? paginationModel.pageSize;\n    if (!warnedOnceMissingInPageSizeOptions.current && !rootProps.autoPageSize && !isPageSizeIncludedInPageSizeOptions(pageSize)) {\n      console.warn([`MUI X: The page size \\`${paginationModel.pageSize}\\` is not present in the \\`pageSizeOptions\\`.`, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingInPageSizeOptions.current = true;\n    }\n  }\n  const pageSizeOptions = isPageSizeIncludedInPageSizeOptions(paginationModel.pageSize) ? rootProps.pageSizeOptions : [];\n  const locales = apiRef.current.getLocaleText('MuiTablePagination');\n  const wrappedLabelDisplayedRows = wrapLabelDisplayedRows(locales.labelDisplayedRows || defaultLabelDisplayedRows, estimatedRowCount);\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref,\n    component: \"div\",\n    count: rowCount,\n    page: computedPage\n    // TODO: Remove the cast once the type is fixed in Material UI and that the min Material UI version\n    // for x-data-grid is past the fix.\n    // Note that Material UI will not mutate the array, so this is safe.\n    ,\n    rowsPerPageOptions: pageSizeOptions,\n    rowsPerPage: paginationModel.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, computedProps, locales, {\n    labelDisplayedRows: wrappedLabelDisplayedRows\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPagination.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  component: PropTypes.elementType\n} : void 0;\nexport { GridPagination };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"rowHeight\", \"className\", \"visibleColumns\", \"pinnedColumns\", \"offsetTop\", \"offsetLeft\", \"dimensions\", \"renderContext\", \"focusedColumnIndex\", \"isFirstVisible\", \"isLastVisible\", \"isNotVisible\", \"focusedCell\", \"tabbableCell\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\", \"onMouseOut\", \"onMouseOver\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { fastMemo } from '../utils/fastMemo';\nimport { GridEditModes, GridRowModes, GridCellModes } from '../models/gridEditRowModel';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridColumnPositionsSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector, objectShallowCompare } from '../hooks/utils/useGridSelector';\nimport { useGridVisibleRows } from '../hooks/utils/useGridVisibleRows';\nimport { findParentElementFromClassName, isEventTargetInPortal } from '../utils/domUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../colDef/gridCheckboxSelectionColDef';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../colDef/gridActionsColDef';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../constants/gridDetailPanelToggleField';\nimport { gridSortModelSelector } from '../hooks/features/sorting/gridSortingSelector';\nimport { gridRowMaximumTreeDepthSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { gridEditRowsStateSelector } from '../hooks/features/editing/gridEditingSelectors';\nimport { PinnedPosition, gridPinnedColumnPositionLookup } from './cell/GridCell';\nimport { GridScrollbarFillerCell as ScrollbarFiller } from './GridScrollbarFillerCell';\nimport { getPinnedCellOffset } from '../internals/utils/getPinnedCellOffset';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    editable,\n    editing,\n    selected,\n    isFirstVisible,\n    isLastVisible,\n    rowHeight,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isFirstVisible && 'row--firstVisible', isLastVisible && 'row--lastVisible', rowHeight === 'auto' && 'row--dynamicHeight']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction EmptyCell({\n  width\n}) {\n  if (!width) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(gridClasses.cell, gridClasses.cellEmpty),\n    style: {\n      '--width': `${width}px`\n    }\n  });\n}\nconst GridRow = /*#__PURE__*/React.forwardRef(function GridRow(props, refProp) {\n  const {\n      selected,\n      rowId,\n      row,\n      index,\n      style: styleProp,\n      rowHeight,\n      className,\n      visibleColumns,\n      pinnedColumns,\n      offsetLeft,\n      dimensions,\n      renderContext,\n      focusedColumnIndex,\n      isFirstVisible,\n      isLastVisible,\n      isNotVisible,\n      onClick,\n      onDoubleClick,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseOut,\n      onMouseOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\n  const handleRef = useForkRef(ref, refProp);\n  const rowNode = apiRef.current.getRowNode(rowId);\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  const hasFocusCell = focusedColumnIndex !== undefined;\n  const hasVirtualFocusCellLeft = hasFocusCell && focusedColumnIndex >= pinnedColumns.left.length && focusedColumnIndex < renderContext.firstColumnIndex;\n  const hasVirtualFocusCellRight = hasFocusCell && focusedColumnIndex < visibleColumns.length - pinnedColumns.right.length && focusedColumnIndex >= renderContext.lastColumnIndex;\n  const ariaRowIndex = index + headerGroupingMaxDepth + 2; // 1 for the header row and 1 as it's 1-based\n\n  const ownerState = {\n    selected,\n    isFirstVisible,\n    isLastVisible,\n    classes: rootProps.classes,\n    editing: apiRef.current.getRowMode(rowId) === GridRowModes.Edit,\n    editable: rootProps.editMode === GridEditModes.Row,\n    rowHeight\n  };\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      // The index prop is relative to the rows from all pages. As example, the index prop of the\n      // first row is 5 if `paginationModel.pageSize=5` and `paginationModel.page=1`. However, the index used by the virtualization\n      // doesn't care about pagination and considers the rows from the current page only, so the\n      // first row always has index=0. We need to subtract the index of the first row to make it\n      // compatible with the index used by the virtualization.\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId);\n      // pinned rows are not part of the visible rows\n      if (rowIndex != null) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n    const rootElement = ref.current;\n    const hasFixedHeight = rowHeight !== 'auto';\n    if (!rootElement || hasFixedHeight || typeof ResizeObserver === 'undefined') {\n      return undefined;\n    }\n    const resizeObserver = new ResizeObserver(entries => {\n      const [entry] = entries;\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height);\n    });\n    resizeObserver.observe(rootElement);\n    return () => resizeObserver.disconnect();\n  }, [apiRef, currentPage.range, index, rowHeight, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell?.getAttribute('data-field');\n\n    // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      }\n\n      // User opened a detail panel\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      }\n\n      // User reorders a row\n      if (field === '__reorder__') {\n        return;\n      }\n\n      // User is editing a cell\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      }\n\n      // User clicked a button from the \"actions\" column type\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const {\n    slots,\n    slotProps,\n    disableColumnReorder\n  } = rootProps;\n  const rowReordering = rootProps.rowReordering;\n  const sizes = useGridSelector(apiRef, () => _extends({}, apiRef.current.unstable_getRowInternalSizes(rowId)), objectShallowCompare);\n  let minHeight = rowHeight;\n  if (minHeight === 'auto' && sizes) {\n    const numberOfBaseSizes = 1;\n    const maximumSize = sizes.baseCenter ?? 0;\n    if (maximumSize > 0 && numberOfBaseSizes > 1) {\n      minHeight = maximumSize;\n    }\n  }\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        opacity: 0,\n        width: 0,\n        height: 0\n      };\n    }\n    const rowStyle = _extends({}, styleProp, {\n      maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n      // max-height doesn't support \"auto\"\n      minHeight,\n      '--height': typeof rowHeight === 'number' ? `${rowHeight}px` : rowHeight\n    });\n    if (sizes?.spacingTop) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n      rowStyle[property] = sizes.spacingTop;\n    }\n    if (sizes?.spacingBottom) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n      let propertyValue = rowStyle[property];\n      // avoid overriding existing value\n      if (typeof propertyValue !== 'number') {\n        propertyValue = parseInt(propertyValue || '0', 10);\n      }\n      propertyValue += sizes.spacingBottom;\n      rowStyle[property] = propertyValue;\n    }\n    return rowStyle;\n  }, [isNotVisible, rowHeight, styleProp, minHeight, sizes, rootProps.rowSpacingType]);\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n  if (typeof rootProps.getRowClassName === 'function') {\n    const indexRelativeToCurrentPage = index - (currentPage.range?.firstRowIndex || 0);\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n  const getCell = (column, indexInSection, indexRelativeToAllColumns, sectionLength, pinnedPosition = PinnedPosition.NONE) => {\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n    if (cellColSpanInfo?.spannedByColSpan) {\n      return null;\n    }\n    const width = cellColSpanInfo?.cellProps.width ?? column.computedWidth;\n    const colSpan = cellColSpanInfo?.cellProps.colSpan ?? 1;\n    const pinnedOffset = getPinnedCellOffset(gridPinnedColumnPositionLookup[pinnedPosition], column.computedWidth, indexRelativeToAllColumns, columnPositions, dimensions);\n    if (rowNode?.type === 'skeletonRow') {\n      return /*#__PURE__*/_jsx(slots.skeletonCell, {\n        type: column.type,\n        width: width,\n        height: rowHeight,\n        field: column.field,\n        align: column.align\n      }, column.field);\n    }\n    const editCellState = editRowsState[rowId]?.[column.field] ?? null;\n\n    // when the cell is a reorder cell we are not allowing to reorder the col\n    // fixes https://github.com/mui/mui-x/issues/11126\n    const isReorderCell = column.field === '__reorder__';\n    const isEditingRows = Object.keys(editRowsState).length > 0;\n    const canReorderColumn = !(disableColumnReorder || column.disableReorder);\n    const canReorderRow = rowReordering && !sortModel.length && treeDepth <= 1 && !isEditingRows;\n    const disableDragEvents = !(canReorderColumn || isReorderCell && canReorderRow);\n    const cellIsNotVisible = pinnedPosition === PinnedPosition.VIRTUAL;\n    return /*#__PURE__*/_jsx(slots.cell, _extends({\n      column: column,\n      width: width,\n      rowId: rowId,\n      align: column.align || 'left',\n      colIndex: indexRelativeToAllColumns,\n      colSpan: colSpan,\n      disableDragEvents: disableDragEvents,\n      editCellState: editCellState,\n      isNotVisible: cellIsNotVisible,\n      pinnedOffset: pinnedOffset,\n      pinnedPosition: pinnedPosition,\n      sectionIndex: indexInSection,\n      sectionLength: sectionLength,\n      gridHasFiller: gridHasFiller\n    }, slotProps?.cell), column.field);\n  };\n\n  /* Start of rendering */\n\n  if (!rowNode) {\n    return null;\n  }\n  const leftCells = pinnedColumns.left.map((column, i) => {\n    const indexRelativeToAllColumns = i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.left.length, PinnedPosition.LEFT);\n  });\n  const rightCells = pinnedColumns.right.map((column, i) => {\n    const indexRelativeToAllColumns = visibleColumns.length - pinnedColumns.right.length + i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.right.length, PinnedPosition.RIGHT);\n  });\n  const middleColumnsLength = visibleColumns.length - pinnedColumns.left.length - pinnedColumns.right.length;\n  const cells = [];\n  if (hasVirtualFocusCellLeft) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  for (let i = renderContext.firstColumnIndex; i < renderContext.lastColumnIndex; i += 1) {\n    const column = visibleColumns[i];\n    const indexInSection = i - pinnedColumns.left.length;\n    cells.push(getCell(column, indexInSection, i, middleColumnsLength));\n  }\n  if (hasVirtualFocusCellRight) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave),\n    onMouseOut: publish('rowMouseOut', onMouseOut),\n    onMouseOver: publish('rowMouseOver', onMouseOver)\n  } : null;\n  const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth - scrollbarWidth;\n  const emptyCellWidth = Math.max(0, expandedWidth);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className),\n    \"aria-rowindex\": ariaRowIndex,\n    \"aria-selected\": selected,\n    style: style\n  }, eventHandlers, other, {\n    children: [leftCells, /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.cellOffsetLeft,\n      style: {\n        width: offsetLeft\n      }\n    }), cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    }), rightCells.length > 0 && /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.filler\n    }), rightCells, scrollbarWidth !== 0 && /*#__PURE__*/_jsx(ScrollbarFiller, {\n      pinnedRight: pinnedColumns.right.length > 0\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  dimensions: PropTypes.shape({\n    bottomContainerHeight: PropTypes.number.isRequired,\n    columnsTotalWidth: PropTypes.number.isRequired,\n    contentSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    hasScrollX: PropTypes.bool.isRequired,\n    hasScrollY: PropTypes.bool.isRequired,\n    headerFilterHeight: PropTypes.number.isRequired,\n    headerHeight: PropTypes.number.isRequired,\n    headersTotalHeight: PropTypes.number.isRequired,\n    isReady: PropTypes.bool.isRequired,\n    leftPinnedWidth: PropTypes.number.isRequired,\n    minimumSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rightPinnedWidth: PropTypes.number.isRequired,\n    root: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rowHeight: PropTypes.number.isRequired,\n    rowWidth: PropTypes.number.isRequired,\n    scrollbarSize: PropTypes.number.isRequired,\n    topContainerHeight: PropTypes.number.isRequired,\n    viewportInnerSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    viewportOuterSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired\n  }).isRequired,\n  /**\n   * Determines which cell has focus.\n   * If `null`, no cell in this row has focus.\n   */\n  focusedColumnIndex: PropTypes.number,\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isFirstVisible: PropTypes.bool.isRequired,\n  isLastVisible: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  offsetLeft: PropTypes.number.isRequired,\n  offsetTop: PropTypes.number,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  pinnedColumns: PropTypes.object.isRequired,\n  renderContext: PropTypes.shape({\n    firstColumnIndex: PropTypes.number.isRequired,\n    firstRowIndex: PropTypes.number.isRequired,\n    lastColumnIndex: PropTypes.number.isRequired,\n    lastRowIndex: PropTypes.number.isRequired\n  }).isRequired,\n  row: PropTypes.object.isRequired,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  /**\n   * Determines which cell should be tabbable by having tabIndex=0.\n   * If `null`, no cell in this row is in the tab sequence.\n   */\n  tabbableCell: PropTypes.string,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridRow = fastMemo(GridRow);\nexport { MemoizedGridRow as GridRow };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"rowCount\", \"visibleRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'RowCount',\n  overridesResolver: (props, styles) => styles.rowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2)\n}));\nconst GridRowCount = /*#__PURE__*/React.forwardRef(function GridRowCount(props, ref) {\n  const {\n      className,\n      rowCount,\n      visibleRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  if (rowCount === 0) {\n    return null;\n  }\n  const text = visibleRowCount < rowCount ? apiRef.current.getLocaleText('footerTotalVisibleRows')(visibleRowCount, rowCount) : rowCount.toLocaleString();\n  return /*#__PURE__*/_jsxs(GridRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: [apiRef.current.getLocaleText('footerTotalRows'), \" \", text]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  rowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  visibleRowCount: PropTypes.number.isRequired\n} : void 0;\nexport { GridRowCount };","import * as React from 'react';\nimport clsx from 'clsx';\nimport { gridClasses } from '../constants';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst classes = {\n  root: gridClasses.scrollbarFiller,\n  header: gridClasses['scrollbarFiller--header'],\n  borderTop: gridClasses['scrollbarFiller--borderTop'],\n  pinnedRight: gridClasses['scrollbarFiller--pinnedRight']\n};\nfunction GridScrollbarFillerCell({\n  header,\n  borderTop = true,\n  pinnedRight\n}) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(classes.root, header && classes.header, borderTop && classes.borderTop, pinnedRight && classes.pinnedRight)\n  });\n}\nexport { GridScrollbarFillerCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selectedRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['selectedRowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridSelectedRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SelectedRowCount',\n  overridesResolver: (props, styles) => styles.selectedRowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2),\n  visibility: 'hidden',\n  width: 0,\n  height: 0,\n  [theme.breakpoints.up('sm')]: {\n    visibility: 'visible',\n    width: 'auto',\n    height: 'auto'\n  }\n}));\nconst GridSelectedRowCount = /*#__PURE__*/React.forwardRef(function GridSelectedRowCount(props, ref) {\n  const {\n      className,\n      selectedRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  const rowSelectedText = apiRef.current.getLocaleText('footerRowSelected')(selectedRowCount);\n  return /*#__PURE__*/_jsx(GridSelectedRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: rowSelectedText\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridSelectedRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  selectedRowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridSelectedRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridFooterPlaceholder() {\n  const rootProps = useGridRootProps();\n  if (rootProps.hideFooter) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.footer, _extends({}, rootProps.slotProps?.footer /* FIXME: typing error */));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport clsx from 'clsx';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridDimensionsSelector } from '../../hooks/features/dimensions';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridVisibleRows } from '../../hooks/utils/useGridVisibleRows';\nimport { getMinimalContentHeight } from '../../hooks/features/rows/gridRowsUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridOverlayWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapper',\n  shouldForwardProp: prop => prop !== 'overlayType' && prop !== 'loadingOverlayVariant',\n  overridesResolver: (props, styles) => styles.overlayWrapper\n})(({\n  overlayType,\n  loadingOverlayVariant\n}) =>\n// Skeleton overlay should flow with the scroll container and not be sticky\nloadingOverlayVariant !== 'skeleton' ? {\n  position: 'sticky',\n  // To stay in place while scrolling\n  top: 'var(--DataGrid-headersTotalHeight)',\n  left: 0,\n  width: 0,\n  // To stay above the content instead of shifting it down\n  height: 0,\n  // To stay above the content instead of shifting it down\n  zIndex: overlayType === 'loadingOverlay' ? 5 // Should be above pinned columns, pinned rows, and detail panel\n  : 4 // Should be above pinned columns and detail panel\n} : {});\nconst GridOverlayWrapperInner = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapperInner',\n  shouldForwardProp: prop => prop !== 'overlayType' && prop !== 'loadingOverlayVariant',\n  overridesResolver: (props, styles) => styles.overlayWrapperInner\n})({});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlayWrapper'],\n    inner: ['overlayWrapperInner']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridOverlayWrapper(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  let height = dimensions.viewportOuterSize.height - dimensions.topContainerHeight - dimensions.bottomContainerHeight - (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  if (rootProps.autoHeight && currentPage.rows.length === 0 || height === 0) {\n    height = getMinimalContentHeight(apiRef);\n  }\n  const classes = useUtilityClasses(_extends({}, props, {\n    classes: rootProps.classes\n  }));\n  return /*#__PURE__*/_jsx(GridOverlayWrapperRoot, _extends({\n    className: clsx(classes.root)\n  }, props, {\n    children: /*#__PURE__*/_jsx(GridOverlayWrapperInner, _extends({\n      className: clsx(classes.inner),\n      style: {\n        height,\n        width: dimensions.viewportOuterSize.width\n      }\n    }, props))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridOverlays.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  loadingOverlayVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  overlayType: PropTypes.oneOf(['loadingOverlay', 'noResultsOverlay', 'noRowsOverlay'])\n} : void 0;\nexport function GridOverlays(props) {\n  const {\n    overlayType\n  } = props;\n  const rootProps = useGridRootProps();\n  if (!overlayType) {\n    return null;\n  }\n  const Overlay = rootProps.slots?.[overlayType];\n  const overlayProps = rootProps.slotProps?.[overlayType];\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(Overlay, _extends({}, overlayProps))\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"api\", \"colDef\", \"id\", \"hasFocus\", \"isEditable\", \"field\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"cellMode\", \"tabIndex\", \"position\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuList from '@mui/material/MenuList';\nimport { useTheme } from '@mui/material/styles';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst hasActions = colDef => typeof colDef.getActions === 'function';\nfunction GridActionsCell(props) {\n  const {\n      colDef,\n      id,\n      hasFocus,\n      tabIndex,\n      position = 'bottom-end',\n      focusElementRef\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [focusedButtonIndex, setFocusedButtonIndex] = React.useState(-1);\n  const [open, setOpen] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootRef = React.useRef(null);\n  const buttonRef = React.useRef(null);\n  const ignoreCallToFocus = React.useRef(false);\n  const touchRippleRefs = React.useRef({});\n  const theme = useTheme();\n  const menuId = useId();\n  const buttonId = useId();\n  const rootProps = useGridRootProps();\n  if (!hasActions(colDef)) {\n    throw new Error('MUI X: Missing the `getActions` property in the `GridColDef`.');\n  }\n  const options = colDef.getActions(apiRef.current.getRowParams(id));\n  const iconButtons = options.filter(option => !option.props.showInMenu);\n  const menuButtons = options.filter(option => option.props.showInMenu);\n  const numberOfButtons = iconButtons.length + (menuButtons.length ? 1 : 0);\n  React.useLayoutEffect(() => {\n    if (!hasFocus) {\n      Object.entries(touchRippleRefs.current).forEach(([index, ref]) => {\n        ref?.stop({}, () => {\n          delete touchRippleRefs.current[index];\n        });\n      });\n    }\n  }, [hasFocus]);\n  React.useEffect(() => {\n    if (focusedButtonIndex < 0 || !rootRef.current) {\n      return;\n    }\n    if (focusedButtonIndex >= rootRef.current.children.length) {\n      return;\n    }\n    const child = rootRef.current.children[focusedButtonIndex];\n    child.focus({\n      preventScroll: true\n    });\n  }, [focusedButtonIndex]);\n  React.useEffect(() => {\n    if (!hasFocus) {\n      setFocusedButtonIndex(-1);\n      ignoreCallToFocus.current = false;\n    }\n  }, [hasFocus]);\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus() {\n      // If ignoreCallToFocus is true, then one of the buttons was clicked and the focus is already set\n      if (!ignoreCallToFocus.current) {\n        // find the first focusable button and pass the index to the state\n        const focusableButtonIndex = options.findIndex(o => !o.props.disabled);\n        setFocusedButtonIndex(focusableButtonIndex);\n      }\n    }\n  }), [options]);\n  React.useEffect(() => {\n    if (focusedButtonIndex >= numberOfButtons) {\n      setFocusedButtonIndex(numberOfButtons - 1);\n    }\n  }, [focusedButtonIndex, numberOfButtons]);\n  const showMenu = () => {\n    setOpen(true);\n    setFocusedButtonIndex(numberOfButtons - 1);\n    ignoreCallToFocus.current = true;\n  };\n  const hideMenu = () => {\n    setOpen(false);\n  };\n  const handleTouchRippleRef = index => instance => {\n    touchRippleRefs.current[index] = instance;\n  };\n  const handleButtonClick = (index, onClick) => event => {\n    setFocusedButtonIndex(index);\n    ignoreCallToFocus.current = true;\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const handleRootKeyDown = event => {\n    if (numberOfButtons <= 1) {\n      return;\n    }\n    const getNewIndex = (index, direction) => {\n      if (index < 0 || index > options.length) {\n        return index;\n      }\n\n      // for rtl mode we need to reverse the direction\n      const rtlMod = theme.direction === 'rtl' ? -1 : 1;\n      const indexMod = (direction === 'left' ? -1 : 1) * rtlMod;\n\n      // if the button that should receive focus is disabled go one more step\n      return options[index + indexMod]?.props.disabled ? getNewIndex(index + indexMod, direction) : index + indexMod;\n    };\n    let newIndex = focusedButtonIndex;\n    if (event.key === 'ArrowRight') {\n      newIndex = getNewIndex(focusedButtonIndex, 'right');\n    } else if (event.key === 'ArrowLeft') {\n      newIndex = getNewIndex(focusedButtonIndex, 'left');\n    }\n    if (newIndex < 0 || newIndex >= numberOfButtons) {\n      return; // We're already in the first or last item = do nothing and let the grid listen the event\n    }\n    if (newIndex !== focusedButtonIndex) {\n      event.preventDefault(); // Prevent scrolling\n      event.stopPropagation(); // Don't stop propagation for other keys, for example ArrowUp\n      setFocusedButtonIndex(newIndex);\n    }\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (['Tab', 'Escape'].includes(event.key)) {\n      hideMenu();\n    }\n  };\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    role: \"menu\",\n    ref: rootRef,\n    tabIndex: -1,\n    className: gridClasses.actionsCell,\n    onKeyDown: handleRootKeyDown\n  }, other, {\n    children: [iconButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      touchRippleRef: handleTouchRippleRef(index),\n      onClick: handleButtonClick(index, button.props.onClick),\n      tabIndex: focusedButtonIndex === index ? tabIndex : -1\n    })), menuButtons.length > 0 && buttonId && /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n      ref: buttonRef,\n      id: buttonId,\n      \"aria-label\": apiRef.current.getLocaleText('actionsCellMore'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-expanded\": open,\n      \"aria-controls\": open ? menuId : undefined,\n      role: \"menuitem\",\n      size: \"small\",\n      onClick: showMenu,\n      touchRippleRef: handleTouchRippleRef(buttonId),\n      tabIndex: focusedButtonIndex === iconButtons.length ? tabIndex : -1\n    }, rootProps.slotProps?.baseIconButton, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.moreActionsIcon, {\n        fontSize: \"small\"\n      })\n    })), menuButtons.length > 0 && /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      position: position,\n      onClose: hideMenu,\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        onKeyDown: handleListKeyDown,\n        \"aria-labelledby\": buttonId,\n        variant: \"menu\",\n        autoFocusItem: true,\n        children: menuButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n          key: index,\n          closeMenu: hideMenu\n        }))\n      })\n    })]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  api: PropTypes.object,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridActionsCell };\nexport const renderActionsCell = params => /*#__PURE__*/_jsx(GridActionsCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\", \"hideDescendantCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { isAutoGeneratedRow } from '../../hooks/features/rows/gridRowsUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridBooleanCellRaw(props) {\n  const {\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const Icon = React.useMemo(() => value ? rootProps.slots.booleanCellTrueIcon : rootProps.slots.booleanCellFalseIcon, [rootProps.slots.booleanCellFalseIcon, rootProps.slots.booleanCellTrueIcon, value]);\n  return /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: apiRef.current.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBooleanCellRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  hideDescendantCount: PropTypes.bool,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nconst GridBooleanCell = /*#__PURE__*/React.memo(GridBooleanCellRaw);\nexport { GridBooleanCell };\nexport const renderBooleanCell = params => {\n  if (params.field !== '__row_group_by_columns_group__' && isAutoGeneratedRow(params.rowNode)) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(GridBooleanCell, _extends({}, params));\n};","// Based on https://stackoverflow.com/a/59518678\nlet cachedSupportsPreventScroll;\nexport function doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n    });\n  }\n  return cachedSupportsPreventScroll;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"column\", \"rowId\", \"editCellState\", \"align\", \"children\", \"colIndex\", \"width\", \"className\", \"style\", \"gridHasScrollX\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"pinnedOffset\", \"pinnedPosition\", \"sectionIndex\", \"sectionLength\", \"gridHasFiller\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded2 = [\"changeReason\", \"unstable_updateValueOnRender\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_ownerDocument as ownerDocument, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { doesSupportPreventScroll } from '../../utils/doesSupportPreventScroll';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { GridCellModes } from '../../models';\nimport { useGridSelector, objectShallowCompare } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridFocusCellSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { MissingRowIdError } from '../../hooks/features/rows/useGridParamsApi';\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from '../../utils/cellBorderUtils';\nimport { GridPinnedColumnPosition } from '../../hooks/features/columns/gridColumnsInterfaces';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport let PinnedPosition = /*#__PURE__*/function (PinnedPosition) {\n  PinnedPosition[PinnedPosition[\"NONE\"] = 0] = \"NONE\";\n  PinnedPosition[PinnedPosition[\"LEFT\"] = 1] = \"LEFT\";\n  PinnedPosition[PinnedPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n  PinnedPosition[PinnedPosition[\"VIRTUAL\"] = 3] = \"VIRTUAL\";\n  return PinnedPosition;\n}({});\nexport const gridPinnedColumnPositionLookup = {\n  [PinnedPosition.LEFT]: GridPinnedColumnPosition.LEFT,\n  [PinnedPosition.RIGHT]: GridPinnedColumnPosition.RIGHT,\n  [PinnedPosition.NONE]: undefined,\n  [PinnedPosition.VIRTUAL]: undefined\n};\nconst EMPTY_CELL_PARAMS = {\n  id: -1,\n  field: '__unset__',\n  row: {},\n  rowNode: {\n    id: -1,\n    depth: 0,\n    type: 'leaf',\n    parent: -1,\n    groupingKey: null\n  },\n  colDef: {\n    type: 'string',\n    field: '__unset__',\n    computedWidth: 0\n  },\n  cellMode: GridCellModes.View,\n  hasFocus: false,\n  tabIndex: -1,\n  value: null,\n  formattedValue: '__unset__',\n  isEditable: false,\n  api: {}\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    pinnedPosition,\n    isEditable,\n    isSelected,\n    isSelectionMode,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isSelected && 'selected', isEditable && 'cell--editable', showLeftBorder && 'cell--withLeftBorder', showRightBorder && 'cell--withRightBorder', pinnedPosition === PinnedPosition.LEFT && 'cell--pinnedLeft', pinnedPosition === PinnedPosition.RIGHT && 'cell--pinnedRight', isSelectionMode && !isEditable && 'cell--selectionMode']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\n\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\n\nconst GridCell = /*#__PURE__*/React.forwardRef(function GridCell(props, ref) {\n  const {\n      column,\n      rowId,\n      editCellState,\n      align,\n      colIndex,\n      width,\n      className,\n      style: styleProp,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      pinnedOffset,\n      pinnedPosition,\n      sectionIndex,\n      sectionLength,\n      gridHasFiller,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const field = column.field;\n  const cellParamsWithAPI = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    try {\n      const cellParams = apiRef.current.getCellParams(rowId, field);\n      const result = cellParams;\n      result.api = apiRef.current;\n      return result;\n    } catch (e) {\n      if (e instanceof MissingRowIdError) {\n        return EMPTY_CELL_PARAMS;\n      }\n      throw e;\n    }\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const {\n    cellMode,\n    hasFocus,\n    isEditable = false,\n    value\n  } = cellParamsWithAPI;\n  const canManageOwnFocus = column.type === 'actions' && column.getActions?.(apiRef.current.getRowParams(rowId)).some(action => !action.props.disabled);\n  const tabIndex = (cellMode === 'view' || !isEditable) && !canManageOwnFocus ? cellParamsWithAPI.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n\n  // There is a hidden grid state access in `applyPipeProcessor('cellClassName', ...)`\n  const pipesClassName = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  }).filter(Boolean).join(' '));\n  const classNames = [pipesClassName];\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParamsWithAPI) : column.cellClassName);\n  }\n  if (column.display === 'flex') {\n    classNames.push(gridClasses['cell--flex']);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParamsWithAPI));\n  }\n  const valueToRender = cellParamsWithAPI.formattedValue ?? value;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const isSelectionMode = rootProps.cellSelection ?? false;\n  const position = gridPinnedColumnPositionLookup[pinnedPosition];\n  const showLeftBorder = shouldCellShowLeftBorder(position, sectionIndex);\n  const showRightBorder = shouldCellShowRightBorder(position, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    pinnedPosition,\n    isSelected,\n    isSelectionMode\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        border: 0\n      };\n    }\n    const cellStyle = _extends({\n      '--width': `${width}px`\n    }, styleProp);\n    if (pinnedPosition === PinnedPosition.LEFT) {\n      cellStyle.left = pinnedOffset;\n    }\n    if (pinnedPosition === PinnedPosition.RIGHT) {\n      cellStyle.right = pinnedOffset;\n    }\n    return cellStyle;\n  }, [width, isNotVisible, styleProp, pinnedOffset, pinnedPosition]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (cellParamsWithAPI === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && rootProps.experimentalFeatures?.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell?.id === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI X: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell?.id}, field=${focusedCell?.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  let children;\n  let title;\n  if (editCellState === null && column.renderCell) {\n    children = column.renderCell(cellParamsWithAPI);\n  }\n  if (editCellState !== null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n    const formattedValue = column.valueFormatter ? column.valueFormatter(editCellState.value, updatedRow, column, apiRef) : cellParamsWithAPI.formattedValue;\n    const params = _extends({}, cellParamsWithAPI, {\n      row: updatedRow,\n      formattedValue\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses?.['cell--editing']);\n  }\n  if (children === undefined) {\n    const valueString = valueToRender?.toString();\n    children = valueString;\n    title = valueString;\n  }\n  if ( /*#__PURE__*/React.isValidElement(children) && canManageOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(className, classNames, classes.root),\n    role: \"gridcell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    style: style,\n    title: title,\n    tabIndex: tabIndex,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseOver: publish('cellMouseOver', onMouseOver),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onKeyUp: publish('cellKeyUp', onKeyUp)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  gridHasFiller: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  pinnedOffset: PropTypes.number.isRequired,\n  pinnedPosition: PropTypes.oneOf([0, 1, 2, 3]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  sectionIndex: PropTypes.number.isRequired,\n  sectionLength: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCell = fastMemo(GridCell);\nexport { MemoizedGridCell as GridCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditBooleanCell(props) {\n  const {\n      id: idProp,\n      value,\n      field,\n      className,\n      hasFocus,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.checked;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    setValueState(newValue);\n    await apiRef.current.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [apiRef, field, idProp, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, rootProps.slotProps?.baseCheckbox))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditBooleanCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditBooleanCell };\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"inputProps\", \"isValidating\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport InputBase from '@mui/material/InputBase';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledInputBase = styled(InputBase)({\n  fontSize: 'inherit'\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditDateCell(props) {\n  const {\n      id,\n      value: valueProp,\n      field,\n      colDef,\n      hasFocus,\n      inputProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isDateTime = colDef.type === 'dateTime';\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const valueTransformed = React.useMemo(() => {\n    let parsedDate;\n    if (valueProp == null) {\n      parsedDate = null;\n    } else if (valueProp instanceof Date) {\n      parsedDate = valueProp;\n    } else {\n      parsedDate = new Date((valueProp ?? '').toString());\n    }\n    let formattedDate;\n    if (parsedDate == null || Number.isNaN(parsedDate.getTime())) {\n      formattedDate = '';\n    } else {\n      const localDate = new Date(parsedDate.getTime() - parsedDate.getTimezoneOffset() * 60 * 1000);\n      formattedDate = localDate.toISOString().substr(0, isDateTime ? 16 : 10);\n    }\n    return {\n      parsed: parsedDate,\n      formatted: formattedDate\n    };\n  }, [valueProp, isDateTime]);\n  const [valueState, setValueState] = React.useState(valueTransformed);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const parseValueToDate = React.useCallback(value => {\n    if (value === '') {\n      return null;\n    }\n    const [date, time] = value.split('T');\n    const [year, month, day] = date.split('-');\n    const parsedDate = new Date();\n    parsedDate.setFullYear(Number(year), Number(month) - 1, Number(day));\n    parsedDate.setHours(0, 0, 0, 0);\n    if (time) {\n      const [hours, minutes] = time.split(':');\n      parsedDate.setHours(Number(hours), Number(minutes), 0, 0);\n    }\n    return parsedDate;\n  }, []);\n  const handleChange = React.useCallback(async event => {\n    const newFormattedDate = event.target.value;\n    const newParsedDate = parseValueToDate(newFormattedDate);\n    if (onValueChange) {\n      await onValueChange(event, newParsedDate);\n    }\n    setValueState({\n      parsed: newParsedDate,\n      formatted: newFormattedDate\n    });\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newParsedDate\n    }, event);\n  }, [apiRef, field, id, onValueChange, parseValueToDate]);\n  React.useEffect(() => {\n    setValueState(state => {\n      if (valueTransformed.parsed !== state.parsed && valueTransformed.parsed?.getTime() !== state.parsed?.getTime()) {\n        return valueTransformed;\n      }\n      return state;\n    });\n  }, [valueTransformed]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(StyledInputBase, _extends({\n    inputRef: inputRef,\n    fullWidth: true,\n    className: classes.root,\n    type: isDateTime ? 'datetime-local' : 'date',\n    inputProps: _extends({\n      max: isDateTime ? '9999-12-31T23:59' : '9999-12-31'\n    }, inputProps),\n    value: valueState.formatted,\n    onChange: handleChange\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditDateCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditDateCell };\nexport const renderEditDateCell = params => /*#__PURE__*/_jsx(GridEditDateCell, _extends({}, params));","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"isValidating\", \"debounceMs\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridEditInputCellRoot = styled(InputBase, {\n  name: 'MuiDataGrid',\n  slot: 'EditInputCell',\n  overridesResolver: (props, styles) => styles.editInputCell\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  padding: '1px 0',\n  '& input': {\n    padding: '0 16px',\n    height: '100%'\n  }\n}));\nconst GridEditInputCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value,\n      field,\n      colDef,\n      hasFocus,\n      debounceMs = 200,\n      isProcessingProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const [valueState, setValueState] = React.useState(value);\n  const classes = useUtilityClasses(rootProps);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.value;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    const column = apiRef.current.getColumn(field);\n    let parsedValue = newValue;\n    if (column.valueParser) {\n      parsedValue = column.valueParser(newValue, apiRef.current.getRow(id), column, apiRef);\n    }\n    setValueState(parsedValue);\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: parsedValue,\n      debounceMs,\n      unstable_skipValueParser: true\n    }, event);\n  }, [apiRef, debounceMs, field, id, onValueChange]);\n  const meta = apiRef.current.unstable_getEditCellMeta(id, field);\n  React.useEffect(() => {\n    if (meta?.changeReason !== 'debouncedSetEditCellValue') {\n      setValueState(value);\n    }\n  }, [meta, value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(GridEditInputCellRoot, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    className: classes.root,\n    ownerState: rootProps,\n    fullWidth: true,\n    type: colDef.type === 'number' ? colDef.type : 'text',\n    value: valueState ?? '',\n    onChange: handleChange,\n    endAdornment: isProcessingProps ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n      fontSize: \"small\",\n      color: \"action\"\n    }) : undefined\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridEditInputCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  debounceMs: PropTypes.number,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditInputCell };\nexport const renderEditInputCell = params => /*#__PURE__*/_jsx(GridEditInputCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\", \"initialOpen\"],\n  _excluded2 = [\"MenuProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { GridCellEditStopReasons } from '../../models/params/gridEditCellParams';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridEditModes } from '../../models/gridEditRowModel';\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from '../panel/filterPanel/filterPanelUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isKeyboardEvent(event) {\n  return !!event.key;\n}\nfunction GridEditSingleSelectCell(props) {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value: valueProp,\n      field,\n      row,\n      colDef,\n      hasFocus,\n      error,\n      onValueChange,\n      initialOpen = rootProps.editMode === GridEditModes.Cell\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef();\n  const inputRef = React.useRef();\n  const [open, setOpen] = React.useState(initialOpen);\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const _ref = rootProps.slotProps?.baseSelect || {},\n    {\n      MenuProps\n    } = _ref,\n    otherBaseSelectProps = _objectWithoutPropertiesLoose(_ref, _excluded2);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current?.focus();\n    }\n  }, [hasFocus]);\n  if (!isSingleSelectColDef(colDef)) {\n    return null;\n  }\n  const valueOptions = getValueOptions(colDef, {\n    id,\n    row\n  });\n  if (!valueOptions) {\n    return null;\n  }\n  const getOptionValue = colDef.getOptionValue;\n  const getOptionLabel = colDef.getOptionLabel;\n  const handleChange = async event => {\n    if (!isSingleSelectColDef(colDef) || !valueOptions) {\n      return;\n    }\n    setOpen(false);\n    const target = event.target;\n    // NativeSelect casts the value to a string.\n    const formattedTargetValue = getValueFromValueOptions(target.value, valueOptions, getOptionValue);\n    if (onValueChange) {\n      await onValueChange(event, formattedTargetValue);\n    }\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: formattedTargetValue\n    }, event);\n  };\n  const handleClose = (event, reason) => {\n    if (rootProps.editMode === GridEditModes.Row) {\n      setOpen(false);\n      return;\n    }\n    if (reason === 'backdropClick' || isEscapeKey(event.key)) {\n      const params = apiRef.current.getCellParams(id, field);\n      apiRef.current.publishEvent('cellEditStop', _extends({}, params, {\n        reason: isEscapeKey(event.key) ? GridCellEditStopReasons.escapeKeyDown : GridCellEditStopReasons.cellFocusOut\n      }));\n    }\n  };\n  const handleOpen = event => {\n    if (isKeyboardEvent(event) && event.key === 'Enter') {\n      return;\n    }\n    setOpen(true);\n  };\n  if (!valueOptions || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    value: valueProp,\n    onChange: handleChange,\n    open: open,\n    onOpen: handleOpen,\n    MenuProps: _extends({\n      onClose: handleClose\n    }, MenuProps),\n    error: error,\n    native: isSelectNative,\n    fullWidth: true\n  }, other, otherBaseSelectProps, {\n    children: valueOptions.map(valueOption => {\n      const value = getOptionValue(valueOption);\n      return /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, rootProps.slotProps?.baseSelectOption || {}, {\n        native: isSelectNative,\n        key: value,\n        value: value\n      }), getOptionLabel(valueOption));\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditSingleSelectCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the select opens by default.\n   */\n  initialOpen: PropTypes.bool,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {SelectChangeEvent<any>} event The event source of the callback.\n   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditSingleSelectCell };\nexport const renderEditSingleSelectCell = params => /*#__PURE__*/_jsx(GridEditSingleSelectCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"type\", \"align\", \"width\", \"height\", \"empty\", \"style\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Skeleton from '@mui/material/Skeleton';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport clsx from 'clsx';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { createRandomNumberGenerator } from '../../utils/utils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CIRCULAR_CONTENT_SIZE = '1.3em';\nconst CONTENT_HEIGHT = '1.2em';\nconst DEFAULT_CONTENT_WIDTH_RANGE = [40, 80];\nconst CONTENT_WIDTH_RANGE_BY_TYPE = {\n  number: [40, 60],\n  string: [40, 80],\n  date: [40, 60],\n  dateTime: [60, 80],\n  singleSelect: [40, 80]\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    classes,\n    empty\n  } = ownerState;\n  const slots = {\n    root: ['cell', 'cellSkeleton', `cell--text${align ? capitalize(align) : 'Left'}`, empty && 'cellEmpty']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst randomNumberGenerator = createRandomNumberGenerator(12345);\nfunction GridSkeletonCell(props) {\n  const {\n      field,\n      type,\n      align,\n      width,\n      height,\n      empty = false,\n      style,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    align,\n    empty\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  // Memo prevents the non-circular skeleton widths changing to random widths on every render\n  const skeletonProps = React.useMemo(() => {\n    const isCircularContent = type === 'boolean' || type === 'actions';\n    if (isCircularContent) {\n      return {\n        variant: 'circular',\n        width: CIRCULAR_CONTENT_SIZE,\n        height: CIRCULAR_CONTENT_SIZE\n      };\n    }\n\n    // The width of the skeleton is a random number between the min and max values\n    // The min and max values are determined by the type of the column\n    const [min, max] = type ? CONTENT_WIDTH_RANGE_BY_TYPE[type] ?? DEFAULT_CONTENT_WIDTH_RANGE : DEFAULT_CONTENT_WIDTH_RANGE;\n    return {\n      variant: 'text',\n      width: `${Math.round(randomNumberGenerator(min, max))}%`,\n      height: CONTENT_HEIGHT\n    };\n  }, [type]);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    \"data-field\": field,\n    className: clsx(classes.root, className),\n    style: _extends({\n      height,\n      maxWidth: width,\n      minWidth: width\n    }, style)\n  }, other, {\n    children: !empty && /*#__PURE__*/_jsx(Skeleton, _extends({}, skeletonProps))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridSkeletonCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.string,\n  /**\n   * If `true`, the cell will not display the skeleton but still reserve the cell space.\n   * @default false\n   */\n  empty: PropTypes.bool,\n  field: PropTypes.string,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  type: PropTypes.oneOf(['actions', 'boolean', 'custom', 'date', 'dateTime', 'number', 'singleSelect', 'string']),\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nconst Memoized = fastMemo(GridSkeletonCell);\nexport { Memoized as GridSkeletonCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport Badge from '@mui/material/Badge';\nimport { useGridSelector } from '../../hooks';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['filterIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderFilterIconButton(props) {\n  const {\n    counter,\n    field,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const labelId = useId();\n  const panelId = useId();\n  const toggleFilter = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      open,\n      openedPanelValue\n    } = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel(undefined, panelId, labelId);\n    }\n    if (onClick) {\n      onClick(apiRef.current.getColumnHeaderParams(field), event);\n    }\n  }, [apiRef, field, onClick, panelId, labelId]);\n  if (!counter) {\n    return null;\n  }\n  const open = preferencePanel.open && preferencePanel.labelId === labelId;\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    id: labelId,\n    onClick: toggleFilter,\n    color: \"default\",\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderFiltersLabel'),\n    size: \"small\",\n    tabIndex: -1,\n    \"aria-haspopup\": \"menu\",\n    \"aria-expanded\": open,\n    \"aria-controls\": open ? panelId : undefined\n  }, rootProps.slotProps?.baseIconButton, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.columnFilteredIcon, {\n      className: classes.icon,\n      fontSize: \"small\"\n    })\n  }));\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: apiRef.current.getLocaleText('columnHeaderFiltersTooltipActive')(counter),\n    enterDelay: 1000\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n      children: [counter > 1 && /*#__PURE__*/_jsx(Badge, {\n        badgeContent: counter,\n        color: \"default\",\n        children: iconButton\n      }), counter === 1 && iconButton]\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderFilterIconButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  counter: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridColumnHeaderFilterIconButton };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['menuIcon', open && 'menuOpen'],\n    button: ['menuIconButton']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nexport const ColumnHeaderMenuIcon = /*#__PURE__*/React.memo(props => {\n  const {\n    colDef,\n    open,\n    columnMenuId,\n    columnMenuButtonId,\n    iconButtonRef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleMenuIconClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    apiRef.current.toggleColumnMenu(colDef.field);\n  }, [apiRef, colDef.field]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('columnMenuLabel'),\n      enterDelay: 1000\n    }, rootProps.slotProps?.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        ref: iconButtonRef,\n        tabIndex: -1,\n        className: classes.button,\n        \"aria-label\": apiRef.current.getLocaleText('columnMenuLabel'),\n        size: \"small\",\n        onClick: handleMenuIconClick,\n        \"aria-haspopup\": \"menu\",\n        \"aria-expanded\": open,\n        \"aria-controls\": open ? columnMenuId : undefined,\n        id: columnMenuButtonId\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    }))\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { ColumnHeaderMenuIcon } from './ColumnHeaderMenuIcon';\nimport { GridColumnHeaderMenu } from '../menu/columnMenu/GridColumnHeaderMenu';\nimport { gridClasses, getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { isEventTargetInPortal } from '../../utils/domUtils';\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from '../../utils/cellBorderUtils';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    colDef,\n    classes,\n    isDragging,\n    sortDirection,\n    showRightBorder,\n    showLeftBorder,\n    filterItemsCounter,\n    pinnedPosition\n  } = ownerState;\n  const isColumnSorted = sortDirection != null;\n  const isColumnFiltered = filterItemsCounter != null && filterItemsCounter > 0;\n  // todo refactor to a prop on col isNumeric or ?? ie: coltype===price wont work\n  const isColumnNumeric = colDef.type === 'number';\n  const slots = {\n    root: ['columnHeader', colDef.headerAlign === 'left' && 'columnHeader--alignLeft', colDef.headerAlign === 'center' && 'columnHeader--alignCenter', colDef.headerAlign === 'right' && 'columnHeader--alignRight', colDef.sortable && 'columnHeader--sortable', isDragging && 'columnHeader--moving', isColumnSorted && 'columnHeader--sorted', isColumnFiltered && 'columnHeader--filtered', isColumnNumeric && 'columnHeader--numeric', 'withBorderColor', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderItem(props) {\n  const {\n    colDef,\n    columnMenuOpen,\n    colIndex,\n    headerHeight,\n    isResizing,\n    isLast,\n    sortDirection,\n    sortIndex,\n    filterItemsCounter,\n    hasFocus,\n    tabIndex,\n    disableReorder,\n    separatorSide,\n    style,\n    pinnedPosition,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const columnMenuId = useId();\n  const columnMenuButtonId = useId();\n  const iconButtonRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const isDraggable = React.useMemo(() => !rootProps.disableColumnReorder && !disableReorder && !colDef.disableReorder, [rootProps.disableColumnReorder, disableReorder, colDef.disableReorder]);\n  let headerComponent;\n  if (colDef.renderHeader) {\n    headerComponent = colDef.renderHeader(apiRef.current.getColumnHeaderParams(colDef.field));\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder,\n    showLeftBorder\n  });\n  const classes = useUtilityClasses(ownerState);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(colDef.field), event);\n  }, [apiRef, colDef.field]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onClick: publish('columnHeaderClick'),\n    onDoubleClick: publish('columnHeaderDoubleClick'),\n    onMouseOver: publish('columnHeaderOver'),\n    // TODO remove as it's not used\n    onMouseOut: publish('columnHeaderOut'),\n    // TODO remove as it's not used\n    onMouseEnter: publish('columnHeaderEnter'),\n    // TODO remove as it's not used\n    onMouseLeave: publish('columnHeaderLeave'),\n    // TODO remove as it's not used\n    onKeyDown: publish('columnHeaderKeyDown'),\n    onFocus: publish('columnHeaderFocus'),\n    onBlur: publish('columnHeaderBlur')\n  }), [publish]);\n  const draggableEventHandlers = React.useMemo(() => isDraggable ? {\n    onDragStart: publish('columnHeaderDragStart'),\n    onDragEnter: publish('columnHeaderDragEnter'),\n    onDragOver: publish('columnHeaderDragOver'),\n    onDragEnd: publish('columnHeaderDragEnd')\n  } : {}, [isDraggable, publish]);\n  const columnHeaderSeparatorProps = React.useMemo(() => ({\n    onMouseDown: publish('columnSeparatorMouseDown'),\n    onDoubleClick: publish('columnSeparatorDoubleClick')\n  }), [publish]);\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  const handleExited = React.useCallback(() => {\n    setShowColumnMenuIcon(false);\n  }, []);\n  const columnMenuIconButton = !rootProps.disableColumnMenu && !colDef.disableColumnMenu && /*#__PURE__*/_jsx(ColumnHeaderMenuIcon, {\n    colDef: colDef,\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    open: showColumnMenuIcon,\n    iconButtonRef: iconButtonRef\n  });\n  const columnMenu = /*#__PURE__*/_jsx(GridColumnHeaderMenu, {\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    field: colDef.field,\n    open: columnMenuOpen,\n    target: iconButtonRef.current,\n    ContentComponent: rootProps.slots.columnMenu,\n    contentComponentProps: rootProps.slotProps?.columnMenu,\n    onExited: handleExited\n  });\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const showSortIcon = (colDef.sortable || sortDirection != null) && !colDef.hideSortIcons && !rootProps.disableColumnSorting;\n  const columnTitleIconButtons = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [!rootProps.disableColumnFilter && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderFilterIconButton, _extends({\n      field: colDef.field,\n      counter: filterItemsCounter\n    }, rootProps.slotProps?.columnHeaderFilterIconButton)), showSortIcon && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderSortIcon, _extends({\n      field: colDef.field,\n      direction: sortDirection,\n      index: sortIndex,\n      sortingOrder: sortingOrder,\n      disabled: !colDef.sortable\n    }, rootProps.slotProps?.columnHeaderSortIcon))]\n  });\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  const headerClassName = typeof colDef.headerClassName === 'function' ? colDef.headerClassName({\n    field: colDef.field,\n    colDef\n  }) : colDef.headerClassName;\n  const label = colDef.headerName ?? colDef.field;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: columnMenuOpen,\n    colIndex: colIndex,\n    height: headerHeight,\n    isResizing: isResizing,\n    sortDirection: sortDirection,\n    hasFocus: hasFocus,\n    tabIndex: tabIndex,\n    separatorSide: separatorSide,\n    isDraggable: isDraggable,\n    headerComponent: headerComponent,\n    description: colDef.description,\n    elementId: colDef.field,\n    width: colDef.computedWidth,\n    columnMenuIconButton: columnMenuIconButton,\n    columnTitleIconButtons: columnTitleIconButtons,\n    headerClassName: clsx(headerClassName, isLast && gridClasses['columnHeader--last']),\n    label: label,\n    resizable: !rootProps.disableColumnResize && !!colDef.resizable,\n    \"data-field\": colDef.field,\n    columnMenu: columnMenu,\n    draggableContainerProps: draggableEventHandlers,\n    columnHeaderSeparatorProps: columnHeaderSeparatorProps,\n    style: style\n  }, mouseEventsHandlers));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  colIndex: PropTypes.number.isRequired,\n  columnMenuOpen: PropTypes.bool.isRequired,\n  disableReorder: PropTypes.bool,\n  filterItemsCounter: PropTypes.number,\n  gridHasFiller: PropTypes.bool.isRequired,\n  hasFocus: PropTypes.bool,\n  headerHeight: PropTypes.number.isRequired,\n  indexInSection: PropTypes.number.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isLast: PropTypes.bool.isRequired,\n  isResizing: PropTypes.bool.isRequired,\n  pinnedPosition: PropTypes.oneOf(['left', 'right']),\n  sectionLength: PropTypes.number.isRequired,\n  separatorSide: PropTypes.oneOf(['left', 'right']),\n  sortDirection: PropTypes.oneOf(['asc', 'desc']),\n  sortIndex: PropTypes.number,\n  style: PropTypes.object,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired\n} : void 0;\nconst Memoized = fastMemo(GridColumnHeaderItem);\nexport { Memoized as GridColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"resizable\", \"resizing\", \"height\", \"side\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GridColumnHeaderSeparatorSides = /*#__PURE__*/function (GridColumnHeaderSeparatorSides) {\n  GridColumnHeaderSeparatorSides[\"Left\"] = \"left\";\n  GridColumnHeaderSeparatorSides[\"Right\"] = \"right\";\n  return GridColumnHeaderSeparatorSides;\n}(GridColumnHeaderSeparatorSides || {});\nconst useUtilityClasses = ownerState => {\n  const {\n    resizable,\n    resizing,\n    classes,\n    side\n  } = ownerState;\n  const slots = {\n    root: ['columnSeparator', resizable && 'columnSeparator--resizable', resizing && 'columnSeparator--resizing', side && `columnSeparator--side${capitalize(side)}`],\n    icon: ['iconSeparator']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderSeparatorRaw(props) {\n  const {\n      height,\n      side = GridColumnHeaderSeparatorSides.Right\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    side,\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const stopClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      className: classes.root,\n      style: {\n        minHeight: height,\n        opacity: rootProps.showColumnVerticalBorder ? 0 : 1\n      }\n    }, other, {\n      onClick: stopClick,\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnResizeIcon, {\n        className: classes.icon\n      })\n    }))\n  );\n}\nconst GridColumnHeaderSeparator = /*#__PURE__*/React.memo(GridColumnHeaderSeparatorRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSeparatorRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  height: PropTypes.number.isRequired,\n  resizable: PropTypes.bool.isRequired,\n  resizing: PropTypes.bool.isRequired,\n  side: PropTypes.oneOf(['left', 'right'])\n} : void 0;\nexport { GridColumnHeaderSeparator, GridColumnHeaderSeparatorSides };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"direction\", \"index\", \"sortingOrder\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport Badge from '@mui/material/Badge';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['sortIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction getIcon(icons, direction, className, sortingOrder) {\n  let Icon;\n  const iconProps = {};\n  if (direction === 'asc') {\n    Icon = icons.columnSortedAscendingIcon;\n  } else if (direction === 'desc') {\n    Icon = icons.columnSortedDescendingIcon;\n  } else {\n    Icon = icons.columnUnsortedIcon;\n    iconProps.sortingOrder = sortingOrder;\n  }\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: className\n  }, iconProps)) : null;\n}\nfunction GridColumnHeaderSortIconRaw(props) {\n  const {\n      direction,\n      index,\n      sortingOrder,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const iconElement = getIcon(rootProps.slots, direction, classes.icon, sortingOrder);\n  if (!iconElement) {\n    return null;\n  }\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    tabIndex: -1,\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    title: apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    size: \"small\",\n    disabled: disabled\n  }, rootProps.slotProps?.baseIconButton, other, {\n    children: iconElement\n  }));\n  return /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n    children: [index != null && /*#__PURE__*/_jsx(Badge, {\n      badgeContent: index,\n      color: \"default\",\n      overlap: \"circular\",\n      children: iconButton\n    }), index == null && iconButton]\n  });\n}\nconst GridColumnHeaderSortIcon = /*#__PURE__*/React.memo(GridColumnHeaderSortIconRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSortIconRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  disabled: PropTypes.bool,\n  field: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])).isRequired\n} : void 0;\nexport { GridColumnHeaderSortIcon };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { isOverflown } from '../../utils/domUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaderTitle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeaderTitleRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderTitle',\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\n})({\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  fontWeight: 'var(--unstable_DataGrid-headWeight)'\n});\nconst ColumnHeaderInnerTitle = /*#__PURE__*/React.forwardRef(function ColumnHeaderInnerTitle(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\nfunction GridColumnHeaderTitle(props) {\n  const {\n    label,\n    description\n  } = props;\n  const rootProps = useGridRootProps();\n  const titleRef = React.useRef(null);\n  const [tooltip, setTooltip] = React.useState('');\n  const handleMouseOver = React.useCallback(() => {\n    if (!description && titleRef?.current) {\n      const isOver = isOverflown(titleRef.current);\n      if (isOver) {\n        setTooltip(label);\n      } else {\n        setTooltip('');\n      }\n    }\n  }, [description, label]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: description || tooltip\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\n      onMouseOver: handleMouseOver,\n      ref: titleRef,\n      children: label\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnWidth: PropTypes.number.isRequired,\n  description: PropTypes.node,\n  label: PropTypes.string.isRequired\n} : void 0;\nexport { GridColumnHeaderTitle };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"classes\", \"columnMenuOpen\", \"colIndex\", \"height\", \"isResizing\", \"sortDirection\", \"hasFocus\", \"tabIndex\", \"separatorSide\", \"isDraggable\", \"headerComponent\", \"description\", \"elementId\", \"width\", \"columnMenuIconButton\", \"columnMenu\", \"columnTitleIconButtons\", \"headerClassName\", \"label\", \"resizable\", \"draggableContainerProps\", \"columnHeaderSeparatorProps\", \"style\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { GridColumnHeaderTitle } from './GridColumnHeaderTitle';\nimport { GridColumnHeaderSeparator } from './GridColumnHeaderSeparator';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridGenericColumnHeaderItem = /*#__PURE__*/React.forwardRef(function GridGenericColumnHeaderItem(props, ref) {\n  const {\n      classes,\n      colIndex,\n      height,\n      isResizing,\n      sortDirection,\n      hasFocus,\n      tabIndex,\n      separatorSide,\n      isDraggable,\n      headerComponent,\n      description,\n      width,\n      columnMenuIconButton = null,\n      columnMenu = null,\n      columnTitleIconButtons = null,\n      headerClassName,\n      label,\n      resizable,\n      draggableContainerProps,\n      columnHeaderSeparatorProps,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const handleRef = useForkRef(headerCellRef, ref);\n  let ariaSort = 'none';\n  if (sortDirection != null) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, headerClassName),\n    style: _extends({}, style, {\n      height,\n      width,\n      minWidth: width,\n      maxWidth: width\n    }),\n    role: \"columnheader\",\n    tabIndex: tabIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-sort\": ariaSort,\n    \"aria-label\": headerComponent == null ? label : undefined\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(\"div\", _extends({\n      className: classes.draggableContainer,\n      draggable: isDraggable,\n      role: \"presentation\"\n    }, draggableContainerProps, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.titleContainer,\n        role: \"presentation\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: classes.titleContainerContent,\n          children: headerComponent !== undefined ? headerComponent : /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n            label: label,\n            description: description,\n            columnWidth: width\n          })\n        }), columnTitleIconButtons]\n      }), columnMenuIconButton]\n    })), /*#__PURE__*/_jsx(GridColumnHeaderSeparator, _extends({\n      resizable: !rootProps.disableColumnResize && !!resizable,\n      resizing: isResizing,\n      height: height,\n      side: separatorSide\n    }, columnHeaderSeparatorProps)), columnMenu]\n  }));\n});\nexport { GridGenericColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['iconButtonContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridIconButtonContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'IconButtonContainer',\n  overridesResolver: (props, styles) => styles.iconButtonContainer\n})(() => ({\n  display: 'flex',\n  visibility: 'hidden',\n  width: 0\n}));\nexport const GridIconButtonContainer = /*#__PURE__*/React.forwardRef(function GridIconButtonContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridIconButtonContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"id\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"colDef\", \"isEditable\", \"cellMode\", \"hasFocus\", \"tabIndex\", \"api\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridCellCheckboxForwardRef = /*#__PURE__*/React.forwardRef(function GridCellCheckboxRenderer(props, ref) {\n  const {\n      field,\n      id,\n      value: isChecked,\n      rowNode,\n      hasFocus,\n      tabIndex\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const checkboxElement = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRef = useForkRef(checkboxElement, ref);\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked,\n      id\n    };\n    apiRef.current.publishEvent('rowSelectionCheckboxChange', params, event);\n  };\n  React.useLayoutEffect(() => {\n    if (tabIndex === 0) {\n      const element = apiRef.current.getCellElement(id, field);\n      if (element) {\n        element.tabIndex = -1;\n      }\n    }\n  }, [apiRef, tabIndex, id, field]);\n  React.useEffect(() => {\n    if (hasFocus) {\n      const input = checkboxElement.current?.querySelector('input');\n      input?.focus({\n        preventScroll: true\n      });\n    } else if (rippleRef.current) {\n      // Only available in @mui/material v5.4.1 or later\n      rippleRef.current.stop({});\n    }\n  }, [hasFocus]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // We call event.stopPropagation to avoid selecting the row and also scrolling to bottom\n      // TODO: Remove and add a check inside useGridKeyboardNavigation\n      event.stopPropagation();\n    }\n  }, []);\n  if (rowNode.type === 'footer' || rowNode.type === 'pinnedRow') {\n    return null;\n  }\n  const isSelectable = apiRef.current.isRowSelectable(id);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectRow' : 'checkboxSelectionSelectRow');\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: handleRef,\n    tabIndex: tabIndex,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    onKeyDown: handleKeyDown,\n    disabled: !isSelectable,\n    touchRippleRef: rippleRef /* FIXME: typing error */\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellCheckboxForwardRef.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridCellCheckboxForwardRef };\nexport const GridCellCheckboxRenderer = GridCellCheckboxForwardRef;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"colDef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { isMultipleRowSelectionEnabled } from '../../hooks/features/rowSelection/utils';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridTabIndexColumnHeaderSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { gridRowSelectionStateSelector } from '../../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridExpandedSortedRowIdsSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridHeaderCheckbox = /*#__PURE__*/React.forwardRef(function GridHeaderCheckbox(props, ref) {\n  const other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [, forceUpdate] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const selection = useGridSelector(apiRef, gridRowSelectionStateSelector);\n  const visibleRowIds = useGridSelector(apiRef, gridExpandedSortedRowIdsSelector);\n  const paginatedVisibleRowIds = useGridSelector(apiRef, gridPaginatedVisibleSortedGridRowIdsSelector);\n  const filteredSelection = React.useMemo(() => {\n    if (typeof rootProps.isRowSelectable !== 'function') {\n      return selection;\n    }\n    return selection.filter(id => {\n      // The row might have been deleted\n      if (!apiRef.current.getRow(id)) {\n        return false;\n      }\n      return rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n    });\n  }, [apiRef, rootProps.isRowSelectable, selection]);\n\n  // All the rows that could be selected / unselected by toggling this checkbox\n  const selectionCandidates = React.useMemo(() => {\n    const rowIds = !rootProps.pagination || !rootProps.checkboxSelectionVisibleOnly ? visibleRowIds : paginatedVisibleRowIds;\n\n    // Convert to an object to make O(1) checking if a row exists or not\n    // TODO create selector that returns visibleRowIds/paginatedVisibleRowIds as an object\n    return rowIds.reduce((acc, id) => {\n      acc[id] = true;\n      return acc;\n    }, {});\n  }, [rootProps.pagination, rootProps.checkboxSelectionVisibleOnly, paginatedVisibleRowIds, visibleRowIds]);\n\n  // Amount of rows selected and that are visible in the current page\n  const currentSelectionSize = React.useMemo(() => filteredSelection.filter(id => selectionCandidates[id]).length, [filteredSelection, selectionCandidates]);\n  const isIndeterminate = currentSelectionSize > 0 && currentSelectionSize < Object.keys(selectionCandidates).length;\n  const isChecked = currentSelectionSize > 0;\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked\n    };\n    apiRef.current.publishEvent('headerSelectionCheckboxChange', params);\n  };\n  const tabIndex = tabIndexState !== null && tabIndexState.field === props.field ? 0 : -1;\n  React.useLayoutEffect(() => {\n    const element = apiRef.current.getColumnHeaderElement(props.field);\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [tabIndex, apiRef, props.field]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // imperative toggle the checkbox because Space is disable by some preventDefault\n      apiRef.current.publishEvent('headerSelectionCheckboxChange', {\n        value: !isChecked\n      });\n    }\n  }, [apiRef, isChecked]);\n  const handleSelectionChange = React.useCallback(() => {\n    forceUpdate(p => !p);\n  }, []);\n  React.useEffect(() => {\n    return apiRef.current.subscribeEvent('rowSelectionChange', handleSelectionChange);\n  }, [apiRef, handleSelectionChange]);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectAllRows' : 'checkboxSelectionSelectAllRows');\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: ref,\n    indeterminate: isIndeterminate,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    tabIndex: tabIndex,\n    onKeyDown: handleKeyDown,\n    disabled: !isMultipleRowSelectionEnabled(rootProps)\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderCheckbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The column of the current header component.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the column that triggered the event\n   */\n  field: PropTypes.string.isRequired\n} : void 0;\nexport { GridHeaderCheckbox };","export const checkColumnVisibilityModelsSame = (a, b) => {\n  // Filter `false` values only, as `true` and not having a key are the same\n  const aFalseValues = new Set(Object.keys(a).filter(key => a[key] === false));\n  const bFalseValues = new Set(Object.keys(b).filter(key => b[key] === false));\n  if (aFalseValues.size !== bFalseValues.size) {\n    return false;\n  }\n  let result = true;\n  aFalseValues.forEach(key => {\n    if (!bFalseValues.has(key)) {\n      result = false;\n    }\n  });\n  return result;\n};\nexport const defaultSearchPredicate = (column, searchValue) => (column.headerName || column.field).toLowerCase().indexOf(searchValue) > -1;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useLazyRef } from '../../hooks/utils/useLazyRef';\nimport { checkColumnVisibilityModelsSame, defaultSearchPredicate } from './utils';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsManagement'],\n    header: ['columnsManagementHeader'],\n    footer: ['columnsManagementFooter'],\n    row: ['columnsManagementRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst collator = new Intl.Collator();\nfunction GridColumnsManagement(props) {\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const initialColumnVisibilityModel = useLazyRef(() => gridColumnVisibilityModelSelector(apiRef)).current;\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const classes = useUtilityClasses(rootProps);\n  const {\n    sort,\n    searchPredicate = defaultSearchPredicate,\n    autoFocusSearchField = true,\n    disableShowHideToggle = false,\n    disableResetButton = false,\n    toggleAllMode = 'all',\n    getTogglableColumns\n  } = props;\n  const isResetDisabled = React.useMemo(() => checkColumnVisibilityModelsSame(columnVisibilityModel, initialColumnVisibilityModel), [columnVisibilityModel, initialColumnVisibilityModel]);\n  const sortedColumns = React.useMemo(() => {\n    switch (sort) {\n      case 'asc':\n        return [...columns].sort((a, b) => collator.compare(a.headerName || a.field, b.headerName || b.field));\n      case 'desc':\n        return [...columns].sort((a, b) => -collator.compare(a.headerName || a.field, b.headerName || b.field));\n      default:\n        return columns;\n    }\n  }, [columns, sort]);\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n  const currentColumns = React.useMemo(() => {\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(sortedColumns) : null;\n    const togglableSortedColumns = togglableColumns ? sortedColumns.filter(({\n      field\n    }) => togglableColumns.includes(field)) : sortedColumns;\n    if (!searchValue) {\n      return togglableSortedColumns;\n    }\n    return togglableSortedColumns.filter(column => searchPredicate(column, searchValue.toLowerCase()));\n  }, [sortedColumns, searchValue, searchPredicate, getTogglableColumns]);\n  const toggleAllColumns = React.useCallback(isVisible => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    const newModel = _extends({}, currentModel);\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(columns) : null;\n    (toggleAllMode === 'filteredOnly' ? currentColumns : columns).forEach(col => {\n      if (col.hideable && (togglableColumns == null || togglableColumns.includes(col.field))) {\n        if (isVisible) {\n          // delete the key from the model instead of setting it to `true`\n          delete newModel[col.field];\n        } else {\n          newModel[col.field] = false;\n        }\n      }\n    });\n    return apiRef.current.setColumnVisibilityModel(newModel);\n  }, [apiRef, columns, getTogglableColumns, toggleAllMode, currentColumns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const hideableColumns = React.useMemo(() => currentColumns.filter(col => col.hideable), [currentColumns]);\n  const allHideableColumnsVisible = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] == null || columnVisibilityModel[column.field] !== false), [columnVisibilityModel, hideableColumns]);\n  const allHideableColumnsHidden = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] === false), [columnVisibilityModel, hideableColumns]);\n  const firstSwitchRef = React.useRef(null);\n  React.useEffect(() => {\n    if (autoFocusSearchField) {\n      searchInputRef.current.focus();\n    } else if (firstSwitchRef.current && typeof firstSwitchRef.current.focus === 'function') {\n      firstSwitchRef.current.focus();\n    }\n  }, [autoFocusSearchField]);\n  let firstHideableColumnFound = false;\n  const isFirstHideableColumn = column => {\n    if (firstHideableColumnFound === false && column.hideable !== false) {\n      firstHideableColumnFound = true;\n      return true;\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnsManagementHeader, {\n      className: classes.header,\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n        placeholder: apiRef.current.getLocaleText('columnsManagementSearchTitle'),\n        inputRef: searchInputRef,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"outlined\",\n        size: \"small\",\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsx(rootProps.slots.baseInputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsx(rootProps.slots.quickFilterIcon, {})\n          }),\n          sx: {\n            pl: 1.5\n          }\n        },\n        fullWidth: true\n      }, rootProps.slotProps?.baseTextField))\n    }), /*#__PURE__*/_jsxs(GridColumnsManagementBody, {\n      className: classes.root,\n      ownerState: rootProps,\n      children: [currentColumns.map(column => /*#__PURE__*/_jsx(FormControlLabel, {\n        className: classes.row,\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: column.hideable === false,\n          checked: columnVisibilityModel[column.field] !== false,\n          onClick: toggleColumn,\n          name: column.field,\n          sx: {\n            p: 0.5\n          },\n          inputRef: isFirstHideableColumn(column) ? firstSwitchRef : undefined\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: column.headerName || column.field\n      }, column.field)), currentColumns.length === 0 && /*#__PURE__*/_jsx(GridColumnsManagementEmptyText, {\n        ownerState: rootProps,\n        children: apiRef.current.getLocaleText('columnsManagementNoColumns')\n      })]\n    }), (!disableShowHideToggle || !disableResetButton) && currentColumns.length > 0 ? /*#__PURE__*/_jsxs(GridColumnsManagementFooter, {\n      ownerState: rootProps,\n      className: classes.footer,\n      children: [!disableShowHideToggle ? /*#__PURE__*/_jsx(FormControlLabel, {\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: hideableColumns.length === 0,\n          checked: allHideableColumnsVisible,\n          indeterminate: !allHideableColumnsVisible && !allHideableColumnsHidden,\n          onClick: () => toggleAllColumns(!allHideableColumnsVisible),\n          name: apiRef.current.getLocaleText('columnsManagementShowHideAllText'),\n          sx: {\n            p: 0.5\n          }\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: apiRef.current.getLocaleText('columnsManagementShowHideAllText')\n      }) : /*#__PURE__*/_jsx(\"span\", {}), !disableResetButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: () => apiRef.current.setColumnVisibilityModel(initialColumnVisibilityModel),\n        disabled: isResetDisabled\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('columnsManagementReset')\n      })) : null]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsManagement.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the column search field will be focused automatically.\n   * If `false`, the first column switch input will be focused automatically.\n   * This helps to avoid input keyboard panel to popup automatically on touch devices.\n   * @default true\n   */\n  autoFocusSearchField: PropTypes.bool,\n  /**\n   * If `true`, the `Reset` button will not be disabled\n   * @default false\n   */\n  disableResetButton: PropTypes.bool,\n  /**\n   * If `true`, the `Show/Hide all` toggle checkbox will not be displayed.\n   * @default false\n   */\n  disableShowHideToggle: PropTypes.bool,\n  /**\n   * Returns the list of togglable columns.\n   * If used, only those columns will be displayed in the panel\n   * which are passed as the return value of the function.\n   * @param {GridColDef[]} columns The `ColDef` list of all columns.\n   * @returns {GridColDef['field'][]} The list of togglable columns' field names.\n   */\n  getTogglableColumns: PropTypes.func,\n  searchPredicate: PropTypes.func,\n  sort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Changes the behavior of the `Show/Hide All` toggle when the search field is used:\n   * - `all`: Will toggle all columns.\n   * - `filteredOnly`: Will only toggle columns that match the search criteria.\n   * @default 'all'\n   */\n  toggleAllMode: PropTypes.oneOf(['all', 'filteredOnly'])\n} : void 0;\nconst GridColumnsManagementBody = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagement',\n  overridesResolver: (props, styles) => styles.columnsManagement\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0, 3, 1.5),\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400,\n  alignItems: 'flex-start'\n}));\nconst GridColumnsManagementHeader = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementHeader',\n  overridesResolver: (props, styles) => styles.columnsManagementHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1.5, 3)\n}));\nconst GridColumnsManagementFooter = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementFooter',\n  overridesResolver: (props, styles) => styles.columnsManagementFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 1, 0.5, 3),\n  display: 'flex',\n  justifyContent: 'space-between',\n  borderTop: `1px solid ${theme.palette.divider}`\n}));\nconst GridColumnsManagementEmptyText = styled('div')(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 0),\n  color: theme.palette.grey[500]\n}));\nexport { GridColumnsManagement };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerContainer', 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFooterContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterContainer',\n  overridesResolver: (props, styles) => styles.footerContainer\n})({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  minHeight: 52,\n  borderTop: '1px solid'\n});\nconst GridFooterContainer = /*#__PURE__*/React.forwardRef(function GridFooterContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridFooterContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooterContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooterContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridOverlayRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Overlay',\n  overridesResolver: (_, styles) => styles.overlay\n})({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignSelf: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'var(--unstable_DataGrid-overlayBackground)'\n});\nconst GridOverlay = /*#__PURE__*/React.forwardRef(function GridOverlay(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridOverlayRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { alpha, styled, darken, lighten, decomposeColor, recomposeColor } from '@mui/material/styles';\nimport { gridClasses as c } from '../../constants/gridClasses';\nfunction getBorderColor(theme) {\n  if (theme.vars) {\n    return theme.vars.palette.TableCell.border;\n  }\n  if (theme.palette.mode === 'light') {\n    return lighten(alpha(theme.palette.divider, 1), 0.88);\n  }\n  return darken(alpha(theme.palette.divider, 1), 0.68);\n}\nconst columnHeadersStyles = {\n  [`.${c.columnSeparator}, .${c['columnSeparator--resizing']}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  }\n};\nconst columnHeaderStyles = {\n  [`& .${c.iconButtonContainer}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  },\n  [`& .${c.menuIcon}`]: {\n    width: 'auto',\n    visibility: 'visible'\n  }\n};\nexport const GridRootStyles = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [{\n    [`&.${c.autoHeight}`]: styles.autoHeight\n  }, {\n    [`&.${c.aggregationColumnHeader}`]: styles.aggregationColumnHeader\n  }, {\n    [`&.${c['aggregationColumnHeader--alignLeft']}`]: styles['aggregationColumnHeader--alignLeft']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignCenter']}`]: styles['aggregationColumnHeader--alignCenter']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignRight']}`]: styles['aggregationColumnHeader--alignRight']\n  }, {\n    [`&.${c.aggregationColumnHeaderLabel}`]: styles.aggregationColumnHeaderLabel\n  }, {\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: styles['root--disableUserSelection']\n  }, {\n    [`&.${c.autosizing}`]: styles.autosizing\n  }, {\n    [`& .${c.editBooleanCell}`]: styles.editBooleanCell\n  }, {\n    [`& .${c.cell}`]: styles.cell\n  }, {\n    [`& .${c['cell--editing']}`]: styles['cell--editing']\n  }, {\n    [`& .${c['cell--textCenter']}`]: styles['cell--textCenter']\n  }, {\n    [`& .${c['cell--textLeft']}`]: styles['cell--textLeft']\n  }, {\n    [`& .${c['cell--textRight']}`]: styles['cell--textRight']\n  }, {\n    [`& .${c['cell--rangeTop']}`]: styles['cell--rangeTop']\n  }, {\n    [`& .${c['cell--rangeBottom']}`]: styles['cell--rangeBottom']\n  }, {\n    [`& .${c['cell--rangeLeft']}`]: styles['cell--rangeLeft']\n  }, {\n    [`& .${c['cell--rangeRight']}`]: styles['cell--rangeRight']\n  }, {\n    [`& .${c['cell--withRightBorder']}`]: styles['cell--withRightBorder']\n  }, {\n    [`& .${c.cellCheckbox}`]: styles.cellCheckbox\n  }, {\n    [`& .${c.cellSkeleton}`]: styles.cellSkeleton\n  }, {\n    [`& .${c.checkboxInput}`]: styles.checkboxInput\n  }, {\n    [`& .${c['columnHeader--alignCenter']}`]: styles['columnHeader--alignCenter']\n  }, {\n    [`& .${c['columnHeader--alignLeft']}`]: styles['columnHeader--alignLeft']\n  }, {\n    [`& .${c['columnHeader--alignRight']}`]: styles['columnHeader--alignRight']\n  }, {\n    [`& .${c['columnHeader--dragging']}`]: styles['columnHeader--dragging']\n  }, {\n    [`& .${c['columnHeader--moving']}`]: styles['columnHeader--moving']\n  }, {\n    [`& .${c['columnHeader--numeric']}`]: styles['columnHeader--numeric']\n  }, {\n    [`& .${c['columnHeader--sortable']}`]: styles['columnHeader--sortable']\n  }, {\n    [`& .${c['columnHeader--sorted']}`]: styles['columnHeader--sorted']\n  }, {\n    [`& .${c['columnHeader--withRightBorder']}`]: styles['columnHeader--withRightBorder']\n  }, {\n    [`& .${c.columnHeader}`]: styles.columnHeader\n  }, {\n    [`& .${c.headerFilterRow}`]: styles.headerFilterRow\n  }, {\n    [`& .${c.columnHeaderCheckbox}`]: styles.columnHeaderCheckbox\n  }, {\n    [`& .${c.columnHeaderDraggableContainer}`]: styles.columnHeaderDraggableContainer\n  }, {\n    [`& .${c.columnHeaderTitleContainer}`]: styles.columnHeaderTitleContainer\n  }, {\n    [`& .${c['columnSeparator--resizable']}`]: styles['columnSeparator--resizable']\n  }, {\n    [`& .${c['columnSeparator--resizing']}`]: styles['columnSeparator--resizing']\n  }, {\n    [`& .${c.columnSeparator}`]: styles.columnSeparator\n  }, {\n    [`& .${c.filterIcon}`]: styles.filterIcon\n  }, {\n    [`& .${c.iconSeparator}`]: styles.iconSeparator\n  }, {\n    [`& .${c.menuIcon}`]: styles.menuIcon\n  }, {\n    [`& .${c.menuIconButton}`]: styles.menuIconButton\n  }, {\n    [`& .${c.menuOpen}`]: styles.menuOpen\n  }, {\n    [`& .${c.menuList}`]: styles.menuList\n  }, {\n    [`& .${c['row--editable']}`]: styles['row--editable']\n  }, {\n    [`& .${c['row--editing']}`]: styles['row--editing']\n  }, {\n    [`& .${c['row--dragging']}`]: styles['row--dragging']\n  }, {\n    [`& .${c.row}`]: styles.row\n  }, {\n    [`& .${c.rowReorderCellPlaceholder}`]: styles.rowReorderCellPlaceholder\n  }, {\n    [`& .${c.rowReorderCell}`]: styles.rowReorderCell\n  }, {\n    [`& .${c['rowReorderCell--draggable']}`]: styles['rowReorderCell--draggable']\n  }, {\n    [`& .${c.sortIcon}`]: styles.sortIcon\n  }, {\n    [`& .${c.withBorderColor}`]: styles.withBorderColor\n  }, {\n    [`& .${c.treeDataGroupingCell}`]: styles.treeDataGroupingCell\n  }, {\n    [`& .${c.treeDataGroupingCellToggle}`]: styles.treeDataGroupingCellToggle\n  }, {\n    [`& .${c.treeDataGroupingCellLoadingContainer}`]: styles.treeDataGroupingCellLoadingContainer\n  }, {\n    [`& .${c.detailPanelToggleCell}`]: styles.detailPanelToggleCell\n  }, {\n    [`& .${c['detailPanelToggleCell--expanded']}`]: styles['detailPanelToggleCell--expanded']\n  }, styles.root]\n})(({\n  theme: t\n}) => {\n  const borderColor = getBorderColor(t);\n  const radius = t.shape.borderRadius;\n  const containerBackground = t.vars ? t.vars.palette.background.default : t.mixins.MuiDataGrid?.containerBackground ?? t.palette.background.default;\n  const pinnedBackground = t.mixins.MuiDataGrid?.pinnedBackground ?? containerBackground;\n  const overlayBackground = t.vars ? `rgba(${t.vars.palette.background.defaultChannel} / ${t.vars.palette.action.disabledOpacity})` : alpha(t.palette.background.default, t.palette.action.disabledOpacity);\n  const hoverOpacity = (t.vars || t).palette.action.hoverOpacity;\n  const hoverColor = (t.vars || t).palette.action.hover;\n  const selectedOpacity = (t.vars || t).palette.action.selectedOpacity;\n  const selectedBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / ${selectedOpacity})` : alpha(t.palette.primary.main, selectedOpacity);\n  const selectedHoverBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / calc(\n                ${t.vars.palette.action.selectedOpacity} +\n                ${t.vars.palette.action.hoverOpacity}\n              ))` : alpha(t.palette.primary.main, t.palette.action.selectedOpacity + t.palette.action.hoverOpacity);\n  const pinnedHoverBackground = t.vars ? hoverColor : blend(pinnedBackground, hoverColor, hoverOpacity);\n  const pinnedSelectedBackground = t.vars ? selectedBackground : blend(pinnedBackground, selectedBackground, selectedOpacity);\n  const pinnedSelectedHoverBackground = t.vars ? hoverColor : blend(pinnedSelectedBackground, hoverColor, hoverOpacity);\n  const selectedStyles = {\n    backgroundColor: selectedBackground,\n    '&:hover': {\n      backgroundColor: selectedHoverBackground,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: selectedBackground\n      }\n    }\n  };\n  const gridStyle = _extends({\n    '--unstable_DataGrid-radius': typeof radius === 'number' ? `${radius}px` : radius,\n    '--unstable_DataGrid-headWeight': t.typography.fontWeightMedium,\n    '--unstable_DataGrid-overlayBackground': overlayBackground,\n    '--DataGrid-containerBackground': containerBackground,\n    '--DataGrid-pinnedBackground': pinnedBackground,\n    '--DataGrid-rowBorderColor': borderColor,\n    '--DataGrid-cellOffsetMultiplier': 2,\n    '--DataGrid-width': '0px',\n    '--DataGrid-hasScrollX': '0',\n    '--DataGrid-hasScrollY': '0',\n    '--DataGrid-scrollbarSize': '10px',\n    '--DataGrid-rowWidth': '0px',\n    '--DataGrid-columnsTotalWidth': '0px',\n    '--DataGrid-leftPinnedWidth': '0px',\n    '--DataGrid-rightPinnedWidth': '0px',\n    '--DataGrid-headerHeight': '0px',\n    '--DataGrid-headersTotalHeight': '0px',\n    '--DataGrid-topContainerHeight': '0px',\n    '--DataGrid-bottomContainerHeight': '0px',\n    flex: 1,\n    boxSizing: 'border-box',\n    position: 'relative',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderColor,\n    borderRadius: 'var(--unstable_DataGrid-radius)',\n    color: (t.vars || t).palette.text.primary\n  }, t.typography.body2, {\n    outline: 'none',\n    height: '100%',\n    display: 'flex',\n    minWidth: 0,\n    // See https://github.com/mui/mui-x/issues/8547\n    minHeight: 0,\n    flexDirection: 'column',\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    // The selector we really want here is `:first-child`, but emotion thinks it knows better than use what we\n    // want and prints a warning to the console if we use it, about :first-child being \"unsafe\" in an SSR context.\n    // https://github.com/emotion-js/emotion/issues/1105\n    // Using `:first-of-type instead` is ironically less \"safe\" because if all our elements aren't `div`, this style\n    // will fail to apply.\n    [`.${c.main} > *:first-of-type`]: {\n      borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n      borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n    },\n    [`&.${c.autoHeight}`]: {\n      height: 'auto'\n    },\n    [`&.${c.autosizing}`]: {\n      [`& .${c.columnHeaderTitleContainerContent} > *`]: {\n        overflow: 'visible !important'\n      },\n      '@media (hover: hover)': {\n        [`& .${c.iconButtonContainer}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        },\n        [`& .${c.menuIcon}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        }\n      },\n      [`& .${c.cell}`]: {\n        overflow: 'visible !important',\n        whiteSpace: 'nowrap',\n        minWidth: 'max-content !important',\n        maxWidth: 'max-content !important'\n      },\n      [`& .${c.groupingCriteriaCell}`]: {\n        width: 'unset'\n      },\n      [`& .${c.treeDataGroupingCell}`]: {\n        width: 'unset'\n      }\n    },\n    [`& .${c.columnHeader}, & .${c.cell}`]: {\n      WebkitTapHighlightColor: 'transparent',\n      lineHeight: null,\n      padding: '0 10px',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.columnHeader}:focus-within, & .${c.cell}:focus-within`]: {\n      outline: `solid ${t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / 0.5)` : alpha(t.palette.primary.main, 0.5)} 1px`,\n      outlineWidth: 1,\n      outlineOffset: -1\n    },\n    [`& .${c.columnHeader}:focus, & .${c.cell}:focus`]: {\n      outline: `solid ${t.palette.primary.main} 1px`\n    },\n    [`& .${c.columnHeaderCheckbox}, & .${c.cellCheckbox}`]: {\n      padding: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeader}`]: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['columnHeader--last']}`]: {\n      overflow: 'hidden'\n    },\n    [`& .${c['columnHeader--sorted']} .${c.iconButtonContainer}, & .${c['columnHeader--filtered']} .${c.iconButtonContainer}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}) .${c.sortIcon}`]: {\n      opacity: 0,\n      transition: t.transitions.create(['opacity'], {\n        duration: t.transitions.duration.shorter\n      })\n    },\n    [`& .${c.columnHeaderTitleContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      minWidth: 0,\n      flex: 1,\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      // to anchor the aggregation label\n      position: 'relative'\n    },\n    [`& .${c.columnHeaderTitleContainerContent}`]: {\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['columnHeader--filledGroup']} .${c.columnHeaderTitleContainer}`]: {\n      borderBottomWidth: '1px',\n      borderBottomStyle: 'solid',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.sortIcon}, & .${c.filterIcon}`]: {\n      fontSize: 'inherit'\n    },\n    [`& .${c['columnHeader--sortable']}`]: {\n      cursor: 'pointer'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.columnHeaderTitleContainer}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.columnHeaderDraggableContainer}, & .${c['columnHeader--alignRight']} .${c.columnHeaderTitleContainer}`]: {\n      flexDirection: 'row-reverse'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.menuIcon}, & .${c['columnHeader--alignRight']} .${c.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -6\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.menuIcon}, & .${c['columnHeader--alignRight']} .${c.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -10\n    },\n    [`& .${c['columnHeader--moving']}`]: {\n      backgroundColor: (t.vars || t).palette.action.hover\n    },\n    [`& .${c['columnHeader--pinnedLeft']}, & .${c['columnHeader--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 4,\n      // Should be above the column separator\n      background: 'var(--DataGrid-pinnedBackground)'\n    },\n    [`& .${c.columnSeparator}`]: {\n      visibility: 'hidden',\n      position: 'absolute',\n      zIndex: 3,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      color: borderColor\n    },\n    [`& .${c.columnHeaders}`]: {\n      width: 'var(--DataGrid-rowWidth)'\n    },\n    '@media (hover: hover)': {\n      [`& .${c.columnHeaders}:hover`]: columnHeadersStyles,\n      [`& .${c.columnHeader}:hover`]: columnHeaderStyles,\n      [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}):hover .${c.sortIcon}`]: {\n        opacity: 0.5\n      }\n    },\n    '@media (hover: none)': {\n      [`& .${c.columnHeaders}`]: columnHeadersStyles,\n      [`& .${c.columnHeader}`]: columnHeaderStyles\n    },\n    [`& .${c['columnSeparator--sideLeft']}`]: {\n      left: -12\n    },\n    [`& .${c['columnSeparator--sideRight']}`]: {\n      right: -12\n    },\n    [`& .${c['columnSeparator--resizable']}`]: {\n      cursor: 'col-resize',\n      touchAction: 'none',\n      '&:hover': {\n        color: (t.vars || t).palette.text.primary,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          color: borderColor\n        }\n      },\n      [`&.${c['columnSeparator--resizing']}`]: {\n        color: (t.vars || t).palette.text.primary\n      },\n      '& svg': {\n        pointerEvents: 'none'\n      }\n    },\n    [`& .${c.iconSeparator}`]: {\n      color: 'inherit'\n    },\n    [`& .${c.menuIcon}`]: {\n      width: 0,\n      visibility: 'hidden',\n      fontSize: 20,\n      marginRight: -10,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`.${c.menuOpen}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.headerFilterRow}`]: {\n      [`& .${c.columnHeader}`]: {\n        boxSizing: 'border-box',\n        borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n      }\n    },\n    /* Row styles */\n    [`.${c.row}`]: {\n      display: 'flex',\n      width: 'var(--DataGrid-rowWidth)',\n      breakInside: 'avoid',\n      // Avoid the row to be broken in two different print pages.\n\n      '--rowBorderColor': 'var(--DataGrid-rowBorderColor)',\n      [`&.${c['row--firstVisible']}`]: {\n        '--rowBorderColor': 'transparent'\n      },\n      '&:hover': {\n        backgroundColor: (t.vars || t).palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      [`&.${c.rowSkeleton}:hover`]: {\n        backgroundColor: 'transparent'\n      },\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['container--top']}, & .${c['container--bottom']}`]: {\n      '[role=row]': {\n        background: 'var(--DataGrid-containerBackground)'\n      }\n    },\n    /* Cell styles */\n    [`& .${c.cell}`]: {\n      height: 'var(--height)',\n      minWidth: 'var(--width)',\n      maxWidth: 'var(--width)',\n      lineHeight: 'calc(var(--height) - 1px)',\n      // -1px for the border\n\n      boxSizing: 'border-box',\n      borderTop: `1px solid var(--rowBorderColor)`,\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['virtualScrollerContent--overflowed']} .${c['row--lastVisible']} .${c.cell}`]: {\n      borderTopColor: 'transparent'\n    },\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: {\n      userSelect: 'none'\n    },\n    [`& .${c['row--dynamicHeight']} > .${c.cell}`]: {\n      whiteSpace: 'initial',\n      lineHeight: 'inherit'\n    },\n    [`& .${c.cellEmpty}`]: {\n      padding: 0,\n      height: 'unset'\n    },\n    [`& .${c.cell}.${c['cell--selectionMode']}`]: {\n      cursor: 'default'\n    },\n    [`& .${c.cell}.${c['cell--editing']}`]: {\n      padding: 1,\n      display: 'flex',\n      boxShadow: t.shadows[2],\n      backgroundColor: (t.vars || t).palette.background.paper,\n      '&:focus-within': {\n        outline: `solid ${(t.vars || t).palette.primary.main} 1px`,\n        outlineOffset: '-1px'\n      }\n    },\n    [`& .${c['row--editing']}`]: {\n      boxShadow: t.shadows[2]\n    },\n    [`& .${c['row--editing']} .${c.cell}`]: {\n      boxShadow: t.shadows[0],\n      backgroundColor: (t.vars || t).palette.background.paper\n    },\n    [`& .${c.editBooleanCell}`]: {\n      display: 'flex',\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c.booleanCell}[data-value=\"true\"]`]: {\n      color: (t.vars || t).palette.text.secondary\n    },\n    [`& .${c.booleanCell}[data-value=\"false\"]`]: {\n      color: (t.vars || t).palette.text.disabled\n    },\n    [`& .${c.actionsCell}`]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gridGap: t.spacing(1)\n    },\n    [`& .${c.rowReorderCell}`]: {\n      display: 'inline-flex',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['rowReorderCell--draggable']}`]: {\n      cursor: 'move',\n      opacity: 1\n    },\n    [`& .${c.rowReorderCellContainer}`]: {\n      padding: 0,\n      display: 'flex',\n      alignItems: 'stretch'\n    },\n    [`.${c.withBorderColor}`]: {\n      borderColor\n    },\n    [`& .${c['cell--withLeftBorder']}, & .${c['columnHeader--withLeftBorder']}`]: {\n      borderLeftColor: 'var(--DataGrid-rowBorderColor)',\n      borderLeftWidth: '1px',\n      borderLeftStyle: 'solid'\n    },\n    [`& .${c['cell--withRightBorder']}, & .${c['columnHeader--withRightBorder']}`]: {\n      borderRightColor: 'var(--DataGrid-rowBorderColor)',\n      borderRightWidth: '1px',\n      borderRightStyle: 'solid'\n    },\n    [`& .${c['cell--flex']}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      lineHeight: 'inherit'\n    },\n    [`& .${c['cell--textLeft']}`]: {\n      textAlign: 'left',\n      justifyContent: 'flex-start'\n    },\n    [`& .${c['cell--textRight']}`]: {\n      textAlign: 'right',\n      justifyContent: 'flex-end'\n    },\n    [`& .${c['cell--textCenter']}`]: {\n      textAlign: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 3,\n      background: 'var(--DataGrid-pinnedBackground)'\n    },\n    [`& .${c.virtualScrollerContent} .${c.row}`]: {\n      '&:hover': {\n        [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n          backgroundColor: pinnedHoverBackground\n        }\n      },\n      [`&.Mui-selected`]: {\n        [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n          backgroundColor: pinnedSelectedBackground\n        },\n        '&:hover': {\n          [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n            backgroundColor: pinnedSelectedHoverBackground\n          }\n        }\n      }\n    },\n    [`& .${c.cellOffsetLeft}`]: {\n      flex: '0 0 auto',\n      display: 'inline-block'\n    },\n    [`& .${c.cellSkeleton}`]: {\n      flex: '0 0 auto',\n      height: '100%',\n      display: 'inline-flex',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeaderDraggableContainer}`]: {\n      display: 'flex',\n      width: '100%',\n      height: '100%'\n    },\n    [`& .${c.rowReorderCellPlaceholder}`]: {\n      display: 'none'\n    },\n    [`& .${c['columnHeader--dragging']}, & .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity,\n      [`& .${c.rowReorderCellPlaceholder}`]: {\n        display: 'flex'\n      }\n    },\n    [`& .${c.treeDataGroupingCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.treeDataGroupingCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    [`& .${c.treeDataGroupingCellLoadingContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100%'\n    },\n    [`& .${c.groupingCriteriaCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.groupingCriteriaCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    /* ScrollbarFiller styles */\n    [`.${c.scrollbarFiller}`]: {\n      minWidth: 'calc(var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize))',\n      alignSelf: 'stretch',\n      [`&.${c['scrollbarFiller--borderTop']}`]: {\n        borderTop: '1px solid var(--rowBorderColor)'\n      },\n      [`&.${c['scrollbarFiller--pinnedRight']}`]: {\n        backgroundColor: 'var(--DataGrid-pinnedBackground)',\n        position: 'sticky',\n        right: 0\n      }\n    },\n    [`& .${c.filler}`]: {\n      flex: 1\n    },\n    [`& .${c['filler--borderTop']}`]: {\n      borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n    },\n    /* Hide grid rows and vertical scrollbar when skeleton overlay is visible */\n    [`& .${c['main--hasSkeletonLoadingOverlay']}`]: {\n      [`& .${c.virtualScrollerContent}, & .${c['scrollbar--vertical']}, & .${c.pinnedRows}`]: {\n        display: 'none'\n      }\n    }\n  });\n  return gridStyle;\n});\n\n/**\n * Blend a transparent overlay color with a background color, resulting in a single\n * RGB color.\n */\nfunction blend(background, overlay, opacity, gamma = 1) {\n  const f = (b, o) => Math.round((b ** (1 / gamma) * (1 - opacity) + o ** (1 / gamma) * opacity) ** gamma);\n  const backgroundColor = decomposeColor(background);\n  const overlayColor = decomposeColor(overlay);\n  const rgb = [f(backgroundColor.values[0], overlayColor.values[0]), f(backgroundColor.values[1], overlayColor.values[1]), f(backgroundColor.values[2], overlayColor.values[2])];\n  return recomposeColor({\n    type: 'rgb',\n    values: rgb\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_capitalize as capitalize, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { GridRootStyles } from './GridRootStyles';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridDensitySelector } from '../../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    autoHeight,\n    density,\n    classes,\n    showCellVerticalBorder\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`, 'withBorderColor', showCellVerticalBorder && 'withVerticalBorder']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const density = useGridSelector(apiRef, gridDensitySelector);\n  const rootElementRef = apiRef.current.rootElementRef;\n  const handleRef = useForkRef(rootElementRef, ref);\n  const ownerState = _extends({}, rootProps, {\n    density\n  });\n  const classes = useUtilityClasses(ownerState);\n\n  // Our implementation of <NoSsr />\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  if (!mountedState) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(className, classes.root),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"open\", \"target\", \"onClose\", \"children\", \"position\", \"className\", \"onExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect, HTMLElementType } from '@mui/utils';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['menu']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridMenuRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Menu',\n  overridesResolver: (_, styles) => styles.menu\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal,\n  [`& .${gridClasses.menuList}`]: {\n    outline: 0\n  }\n}));\nconst transformOrigin = {\n  'bottom-start': 'top left',\n  'bottom-end': 'top right'\n};\nfunction GridMenu(props) {\n  const {\n      open,\n      target,\n      onClose,\n      children,\n      position,\n      className,\n      onExited\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const savedFocusRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (open) {\n      savedFocusRef.current = document.activeElement instanceof HTMLElement ? document.activeElement : null;\n    } else {\n      savedFocusRef.current?.focus?.();\n      savedFocusRef.current = null;\n    }\n  }, [open]);\n  React.useEffect(() => {\n    // Emit menuOpen or menuClose events\n    const eventName = open ? 'menuOpen' : 'menuClose';\n    apiRef.current.publishEvent(eventName, {\n      target\n    });\n  }, [apiRef, open, target]);\n  const handleExited = popperOnExited => node => {\n    if (popperOnExited) {\n      popperOnExited();\n    }\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleClickAway = event => {\n    if (event.target && (target === event.target || target?.contains(event.target))) {\n      return;\n    }\n    onClose(event);\n  };\n  return /*#__PURE__*/_jsx(GridMenuRoot, _extends({\n    as: rootProps.slots.basePopper,\n    className: clsx(className, classes.root),\n    ownerState: rootProps,\n    open: open,\n    anchorEl: target,\n    transition: true,\n    placement: position\n  }, other, rootProps.slotProps?.basePopper, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(ClickAwayListener, {\n      onClickAway: handleClickAway,\n      mouseEvent: \"onMouseDown\",\n      children: /*#__PURE__*/_jsx(Grow, _extends({}, TransitionProps, {\n        style: {\n          transformOrigin: transformOrigin[placement]\n        },\n        onExited: handleExited(TransitionProps?.onExited),\n        children: /*#__PURE__*/_jsx(Paper, {\n          children: children\n        })\n      }))\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  target: HTMLElementType\n} : void 0;\nexport { GridMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEventCallback as useEventCallback, HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../GridMenu';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const colDef = apiRef.current.getColumn(field);\n  const hideMenu = useEventCallback(event => {\n    if (event) {\n      // Prevent triggering the sorting\n      event.stopPropagation();\n      if (target?.contains(event.target)) {\n        return;\n      }\n    }\n    apiRef.current.hideColumnMenu();\n  });\n  if (!target || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${colDef.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClose: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      colDef: colDef,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"displayOrder\"];\nimport * as React from 'react';\nimport Divider from '@mui/material/Divider';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nconst useGridColumnMenuSlots = props => {\n  const apiRef = useGridPrivateApiContext();\n  const {\n    defaultSlots,\n    defaultSlotProps,\n    slots = {},\n    slotProps = {},\n    hideMenu,\n    colDef,\n    addDividers = true\n  } = props;\n  const processedComponents = React.useMemo(() => _extends({}, defaultSlots, slots), [defaultSlots, slots]);\n  const processedSlotProps = React.useMemo(() => {\n    if (!slotProps || Object.keys(slotProps).length === 0) {\n      return defaultSlotProps;\n    }\n    const mergedProps = _extends({}, slotProps);\n    Object.entries(defaultSlotProps).forEach(([key, currentSlotProps]) => {\n      mergedProps[key] = _extends({}, currentSlotProps, slotProps[key] || {});\n    });\n    return mergedProps;\n  }, [defaultSlotProps, slotProps]);\n  const defaultItems = apiRef.current.unstable_applyPipeProcessors('columnMenu', [], props.colDef);\n  const userItems = React.useMemo(() => {\n    const defaultComponentKeys = Object.keys(defaultSlots);\n    return Object.keys(slots).filter(key => !defaultComponentKeys.includes(key));\n  }, [slots, defaultSlots]);\n  return React.useMemo(() => {\n    const uniqueItems = Array.from(new Set([...defaultItems, ...userItems]));\n    const cleansedItems = uniqueItems.filter(key => processedComponents[key] != null);\n    const sorted = cleansedItems.sort((a, b) => {\n      const leftItemProps = processedSlotProps[a];\n      const rightItemProps = processedSlotProps[b];\n      const leftDisplayOrder = Number.isFinite(leftItemProps?.displayOrder) ? leftItemProps.displayOrder : 100;\n      const rightDisplayOrder = Number.isFinite(rightItemProps?.displayOrder) ? rightItemProps.displayOrder : 100;\n      return leftDisplayOrder - rightDisplayOrder;\n    });\n    return sorted.reduce((acc, key, index) => {\n      let itemProps = {\n        colDef,\n        onClick: hideMenu\n      };\n      const processedComponentProps = processedSlotProps[key];\n      if (processedComponentProps) {\n        const customProps = _objectWithoutPropertiesLoose(processedComponentProps, _excluded);\n        itemProps = _extends({}, itemProps, customProps);\n      }\n      return addDividers && index !== sorted.length - 1 ? [...acc, [processedComponents[key], itemProps], [Divider, {}]] : [...acc, [processedComponents[key], itemProps]];\n    }, []);\n  }, [addDividers, colDef, defaultItems, hideMenu, processedComponents, processedSlotProps, userItems]);\n};\nexport { useGridColumnMenuSlots };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"defaultSlots\", \"defaultSlotProps\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridColumnMenuSlots } from '../../../hooks/features/columnMenu/useGridColumnMenuSlots';\nimport { GridColumnMenuContainer } from './GridColumnMenuContainer';\nimport { GridColumnMenuColumnsItem } from './menuItems/GridColumnMenuColumnsItem';\nimport { GridColumnMenuFilterItem } from './menuItems/GridColumnMenuFilterItem';\nimport { GridColumnMenuSortItem } from './menuItems/GridColumnMenuSortItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_COLUMN_MENU_SLOTS = {\n  columnMenuSortItem: GridColumnMenuSortItem,\n  columnMenuFilterItem: GridColumnMenuFilterItem,\n  columnMenuColumnsItem: GridColumnMenuColumnsItem\n};\nexport const GRID_COLUMN_MENU_SLOT_PROPS = {\n  columnMenuSortItem: {\n    displayOrder: 10\n  },\n  columnMenuFilterItem: {\n    displayOrder: 20\n  },\n  columnMenuColumnsItem: {\n    displayOrder: 30\n  }\n};\nconst GridGenericColumnMenu = /*#__PURE__*/React.forwardRef(function GridGenericColumnMenu(props, ref) {\n  const {\n      defaultSlots,\n      defaultSlotProps,\n      slots,\n      slotProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const orderedSlots = useGridColumnMenuSlots(_extends({}, other, {\n    defaultSlots,\n    defaultSlotProps,\n    slots,\n    slotProps\n  }));\n  return /*#__PURE__*/_jsx(GridColumnMenuContainer, _extends({\n    ref: ref\n  }, other, {\n    children: orderedSlots.map(([Component, otherProps], index) => /*#__PURE__*/_jsx(Component, _extends({}, otherProps), index))\n  }));\n});\nconst GridColumnMenu = /*#__PURE__*/React.forwardRef(function GridColumnMenu(props, ref) {\n  return /*#__PURE__*/_jsx(GridGenericColumnMenu, _extends({}, props, {\n    ref: ref,\n    defaultSlots: GRID_COLUMN_MENU_SLOTS,\n    defaultSlotProps: GRID_COLUMN_MENU_SLOT_PROPS\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { GridColumnMenu, GridGenericColumnMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"colDef\", \"id\", \"labelledby\", \"className\", \"children\", \"open\"];\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport MenuList from '@mui/material/MenuList';\nimport { styled } from '@mui/material/styles';\nimport { isHideMenuKey, isTabKey } from '../../../utils/keyboardUtils';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledMenuList = styled(MenuList)(() => ({\n  minWidth: 248\n}));\nconst GridColumnMenuContainer = /*#__PURE__*/React.forwardRef(function GridColumnMenuContainer(props, ref) {\n  const {\n      hideMenu,\n      id,\n      labelledby,\n      className,\n      children,\n      open\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const handleListKeyDown = React.useCallback(event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      hideMenu(event);\n    }\n  }, [hideMenu]);\n  return /*#__PURE__*/_jsx(StyledMenuList, _extends({\n    id: id,\n    ref: ref,\n    className: clsx(gridClasses.menuList, className),\n    \"aria-labelledby\": labelledby,\n    onKeyDown: handleListKeyDown,\n    autoFocus: open\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenuContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridColumnMenuHideItem } from './GridColumnMenuHideItem';\nimport { GridColumnMenuManageItem } from './GridColumnMenuManageItem';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuColumnsItem(props) {\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnMenuHideItem, _extends({}, props)), /*#__PURE__*/_jsx(GridColumnMenuManageItem, _extends({}, props))]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuColumnsItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuColumnsItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuFilterItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showFilter = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showFilterPanel(colDef.field);\n  }, [apiRef, colDef.field, onClick]);\n  if (rootProps.disableColumnFilter || !colDef.filterable) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showFilter,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuFilterIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuFilter')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuFilterItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuFilterItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { gridVisibleColumnDefinitionsSelector } from '../../../../hooks/features/columns';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuHideItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true);\n  // do not allow to hide the last column with menu\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n    apiRef.current.setColumnVisibility(colDef.field, false);\n    onClick(event);\n  }, [apiRef, colDef.field, onClick, disabled]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  if (colDef.hideable === false) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuHideIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuHideColumn')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuHideItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuHideItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { GridPreferencePanelsValue } from '../../../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuManageItem(props) {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event); // hide column menu\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showColumns,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuManageColumnsIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuManageColumns')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuManageItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuManageItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridSelector } from '../../../../hooks/utils/useGridSelector';\nimport { gridSortModelSelector } from '../../../../hooks/features/sorting/gridSortingSelector';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuSortItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const rootProps = useGridRootProps();\n  const sortDirection = React.useMemo(() => {\n    if (!colDef) {\n      return null;\n    }\n    const sortItem = sortModel.find(item => item.field === colDef.field);\n    return sortItem?.sort;\n  }, [colDef, sortModel]);\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const onSortMenuItemClick = React.useCallback(event => {\n    onClick(event);\n    const direction = event.currentTarget.getAttribute('data-value') || null;\n    apiRef.current.sortColumn(colDef.field, direction === sortDirection ? null : direction);\n  }, [apiRef, colDef, onClick, sortDirection]);\n  if (rootProps.disableColumnSorting || !colDef || !colDef.sortable || !sortingOrder.some(item => !!item)) {\n    return null;\n  }\n  const getLabel = key => {\n    const label = apiRef.current.getLocaleText(key);\n    return typeof label === 'function' ? label(colDef) : label;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [sortingOrder.includes('asc') && sortDirection !== 'asc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"asc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortAscendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortAsc')\n      })]\n    }) : null, sortingOrder.includes('desc') && sortDirection !== 'desc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"desc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortDescendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortDesc')\n      })]\n    }) : null, sortingOrder.includes(null) && sortDirection != null ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {}), /*#__PURE__*/_jsx(ListItemText, {\n        children: apiRef.current.getLocaleText('columnMenuUnsort')\n      })]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuSortItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuSortItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridPanelWrapper } from './GridPanelWrapper';\nimport { GridColumnsManagement } from '../columnsManagement';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnsPanel(props) {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsx(GridPanelWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(GridColumnsManagement, _extends({}, rootProps.slotProps?.columnsManagement))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridColumnsPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPanelClasses = generateUtilityClasses('MuiDataGrid', ['panel', 'paper']);\nconst GridPanelRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Panel',\n  overridesResolver: (props, styles) => styles.panel\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst GridPaperRoot = styled(Paper, {\n  name: 'MuiDataGrid',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  minWidth: 300,\n  maxHeight: 450,\n  display: 'flex',\n  maxWidth: `calc(100vw - ${theme.spacing(0.5)})`,\n  overflow: 'auto'\n}));\nconst GridPanel = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = gridPanelClasses;\n  const [isPlaced, setIsPlaced] = React.useState(false);\n  const handleClickAway = React.useCallback(() => {\n    apiRef.current.hidePreferences();\n  }, [apiRef]);\n  const handleKeyDown = React.useCallback(event => {\n    if (isEscapeKey(event.key)) {\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef]);\n  const modifiers = React.useMemo(() => [{\n    name: 'flip',\n    enabled: true,\n    options: {\n      rootBoundary: 'document'\n    }\n  }, {\n    name: 'isPlaced',\n    enabled: true,\n    phase: 'main',\n    fn: () => {\n      setIsPlaced(true);\n    },\n    effect: () => () => {\n      setIsPlaced(false);\n    }\n  }], []);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  React.useEffect(() => {\n    const panelAnchor = apiRef.current.rootElementRef?.current?.querySelector('[data-id=\"gridPanelAnchor\"]');\n    if (panelAnchor) {\n      setAnchorEl(panelAnchor);\n    }\n  }, [apiRef]);\n  if (!anchorEl) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridPanelRoot, _extends({\n    ref: ref,\n    placement: \"bottom-start\",\n    className: clsx(className, classes.panel),\n    ownerState: rootProps,\n    anchorEl: anchorEl,\n    modifiers: modifiers\n  }, other, {\n    children: /*#__PURE__*/_jsx(ClickAwayListener, {\n      mouseEvent: \"onMouseUp\",\n      onClickAway: handleClickAway,\n      children: /*#__PURE__*/_jsx(GridPaperRoot, {\n        className: classes.paper,\n        ownerState: rootProps,\n        elevation: 8,\n        onKeyDown: handleKeyDown,\n        children: isPlaced && children\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Popper render function or node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  ownerState: PropTypes.object\n} : void 0;\nexport { GridPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelContent',\n  overridesResolver: (props, styles) => styles.panelContent\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400\n});\nfunction GridPanelContent(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelContentRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelFooter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelFooterRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelFooter',\n  overridesResolver: (props, styles) => styles.panelFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5),\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\nfunction GridPanelFooter(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelFooterRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport FocusTrap from '@mui/material/Unstable_TrapFocus';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelWrapper']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelWrapper',\n  overridesResolver: (props, styles) => styles.panelWrapper\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  '&:focus': {\n    outline: 0\n  }\n});\nconst isEnabled = () => true;\nconst GridPanelWrapper = /*#__PURE__*/React.forwardRef(function GridPanelWrapper(props, ref) {\n  const {\n      className,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(FocusTrap, _extends({\n    open: true,\n    disableEnforceFocus: true,\n    isEnabled: isEnabled\n  }, slotProps.TrapFocus, {\n    children: /*#__PURE__*/_jsx(GridPanelWrapperRoot, _extends({\n      ref: ref,\n      tabIndex: -1,\n      className: clsx(className, classes.root),\n      ownerState: rootProps\n    }, other))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanelWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridPanelWrapper };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"hasMultipleFilters\", \"deleteFilter\", \"applyFilterChanges\", \"showMultiFilterOperators\", \"disableMultiFilterOperator\", \"applyMultiFilterOperatorChanges\", \"focusElementRef\", \"logicOperators\", \"columnsSort\", \"filterColumns\", \"deleteIconProps\", \"logicOperatorInputProps\", \"operatorInputProps\", \"columnInputProps\", \"valueInputProps\", \"readOnly\", \"children\"],\n  _excluded2 = [\"InputComponentProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_capitalize as capitalize } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { gridFilterableColumnDefinitionsSelector, gridColumnLookupSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { gridFilterModelSelector } from '../../../hooks/features/filter/gridFilterSelector';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { GridLogicOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../../constants/gridClasses';\nimport { getValueFromValueOptions, getValueOptions } from './filterPanelUtils';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    logicOperatorInput: ['filterFormLogicOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  padding: theme.spacing(1)\n}));\nconst FilterFormDeleteIcon = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(({\n  theme\n}) => ({\n  flexShrink: 0,\n  justifyContent: 'flex-end',\n  marginRight: theme.spacing(0.5),\n  marginBottom: theme.spacing(0.2)\n}));\nconst FilterFormLogicOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLogicOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLogicOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 120\n});\nconst FilterFormValueInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\nconst getLogicOperatorLocaleKey = logicOperator => {\n  switch (logicOperator) {\n    case GridLogicOperator.And:\n      return 'filterPanelOperatorAnd';\n    case GridLogicOperator.Or:\n      return 'filterPanelOperatorOr';\n    default:\n      throw new Error('MUI X: Invalid `logicOperator` property in the `GridFilterPanel`.');\n  }\n};\nconst getColumnLabel = col => col.headerName || col.field;\nconst collator = new Intl.Collator();\nconst GridFilterForm = /*#__PURE__*/React.forwardRef(function GridFilterForm(props, ref) {\n  const {\n      item,\n      hasMultipleFilters,\n      deleteFilter,\n      applyFilterChanges,\n      showMultiFilterOperators,\n      disableMultiFilterOperator,\n      applyMultiFilterOperatorChanges,\n      focusElementRef,\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterColumns,\n      deleteIconProps = {},\n      logicOperatorInputProps = {},\n      operatorInputProps = {},\n      columnInputProps = {},\n      valueInputProps = {},\n      readOnly\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const columnLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const multiFilterOperator = filterModel.logicOperator ?? GridLogicOperator.And;\n  const hasLogicOperatorColumn = hasMultipleFilters && logicOperators.length > 0;\n  const baseFormControlProps = rootProps.slotProps?.baseFormControl || {};\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isBaseSelectNative = baseSelectProps.native ?? false;\n  const baseInputLabelProps = rootProps.slotProps?.baseInputLabel || {};\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const {\n      InputComponentProps\n    } = valueInputProps,\n    valueInputPropsOther = _objectWithoutPropertiesLoose(valueInputProps, _excluded2);\n  const {\n    filteredColumns,\n    selectedField\n  } = React.useMemo(() => {\n    let itemField = item.field;\n\n    // Yields a valid value if the current filter belongs to a column that is not filterable\n    const selectedNonFilterableColumn = columnLookup[item.field].filterable === false ? columnLookup[item.field] : null;\n    if (selectedNonFilterableColumn) {\n      return {\n        filteredColumns: [selectedNonFilterableColumn],\n        selectedField: itemField\n      };\n    }\n    if (filterColumns === undefined || typeof filterColumns !== 'function') {\n      return {\n        filteredColumns: filterableColumns,\n        selectedField: itemField\n      };\n    }\n    const filteredFields = filterColumns({\n      field: item.field,\n      columns: filterableColumns,\n      currentFilters: filterModel?.items || []\n    });\n    return {\n      filteredColumns: filterableColumns.filter(column => {\n        const isFieldIncluded = filteredFields.includes(column.field);\n        if (column.field === item.field && !isFieldIncluded) {\n          itemField = undefined;\n        }\n        return isFieldIncluded;\n      }),\n      selectedField: itemField\n    };\n  }, [filterColumns, filterModel?.items, filterableColumns, item.field, columnLookup]);\n  const sortedFilteredColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filteredColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      case 'desc':\n        return filteredColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      default:\n        return filteredColumns;\n    }\n  }, [filteredColumns, columnsSort]);\n  const currentColumn = item.field ? apiRef.current.getColumn(item.field) : null;\n  const currentOperator = React.useMemo(() => {\n    if (!item.operator || !currentColumn) {\n      return null;\n    }\n    return currentColumn.filterOperators?.find(operator => operator.value === item.operator);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const field = event.target.value;\n    const column = apiRef.current.getColumn(field);\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    }\n\n    // try to keep the same operator when column change\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operator) || column.filterOperators[0];\n\n    // Erase filter value if the input component or filtered column type is modified\n    const eraseFilterValue = !newOperator.InputComponent || newOperator.InputComponent !== currentOperator?.InputComponent || column.type !== currentColumn.type;\n    let filterValue = eraseFilterValue ? undefined : item.value;\n\n    // Check filter value against the new valueOptions\n    if (column.type === 'singleSelect' && filterValue !== undefined) {\n      const colDef = column;\n      const valueOptions = getValueOptions(colDef);\n      if (Array.isArray(filterValue)) {\n        filterValue = filterValue.filter(val => {\n          return (\n            // Only keep values that are in the new value options\n            getValueFromValueOptions(val, valueOptions, colDef?.getOptionValue) !== undefined\n          );\n        });\n      } else if (getValueFromValueOptions(item.value, valueOptions, colDef?.getOptionValue) === undefined) {\n        // Reset the filter value if it is not in the new value options\n        filterValue = undefined;\n      }\n    }\n    applyFilterChanges(_extends({}, item, {\n      field,\n      operator: newOperator.value,\n      value: filterValue\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operator = event.target.value;\n    const newOperator = currentColumn?.filterOperators.find(op => op.value === operator);\n    const eraseItemValue = !newOperator?.InputComponent || newOperator?.InputComponent !== currentOperator?.InputComponent;\n    applyFilterChanges(_extends({}, item, {\n      operator,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLogicOperator = React.useCallback(event => {\n    const logicOperator = event.target.value === GridLogicOperator.And.toString() ? GridLogicOperator.And : GridLogicOperator.Or;\n    applyMultiFilterOperatorChanges(logicOperator);\n  }, [applyMultiFilterOperatorChanges]);\n  const handleDeleteFilter = () => {\n    deleteFilter(item);\n  };\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator?.InputComponent) {\n        valueRef?.current?.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, _extends({\n    ref: ref,\n    className: classes.root,\n    \"data-id\": item.id,\n    ownerState: rootProps\n  }, other, {\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\",\n        disabled: readOnly\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.filterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    })), /*#__PURE__*/_jsx(FilterFormLogicOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, logicOperatorInputProps, {\n      sx: _extends({\n        display: hasLogicOperatorColumn ? 'flex' : 'none',\n        visibility: showMultiFilterOperators ? 'visible' : 'hidden'\n      }, baseFormControlProps.sx || {}, logicOperatorInputProps.sx || {}),\n      className: clsx(classes.logicOperatorInput, baseFormControlProps.className, logicOperatorInputProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLogicOperator')\n        },\n        value: multiFilterOperator ?? '',\n        onChange: changeLogicOperator,\n        disabled: !!disableMultiFilterOperator || logicOperators.length === 1,\n        native: isBaseSelectNative\n      }, rootProps.slotProps?.baseSelect, {\n        children: logicOperators.map(logicOperator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: logicOperator.toString(),\n          value: logicOperator.toString()\n        }), apiRef.current.getLocaleText(getLogicOperatorLocaleKey(logicOperator))))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: selectedField ?? '',\n        onChange: changeColumn,\n        native: isBaseSelectNative,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: sortedFilteredColumns.map(col => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: col.field,\n          value: col.field\n        }), getColumnLabel(col)))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperator')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperator'),\n        id: operatorSelectId,\n        value: item.operator,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: currentColumn?.filterOperators?.map(operator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: operator.value,\n          value: operator.value\n        }), operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, valueInputPropsOther, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputPropsOther.className),\n      ownerState: rootProps,\n      children: currentOperator?.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef,\n        disabled: readOnly\n      }, currentOperator.InputComponentProps, InputComponentProps), item.field) : null\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback called when the operator, column field or value is changed.\n   * @param {GridFilterItem} item The updated [[GridFilterItem]].\n   */\n  applyFilterChanges: PropTypes.func.isRequired,\n  /**\n   * Callback called when the logic operator is changed.\n   * @param {GridLogicOperator} operator The new logic operator.\n   */\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Props passed to the column input component.\n   * @default {}\n   */\n  columnInputProps: PropTypes.any,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Callback called when the delete button is clicked.\n   * @param {GridFilterItem} item The deleted [[GridFilterItem]].\n   */\n  deleteFilter: PropTypes.func.isRequired,\n  /**\n   * Props passed to the delete icon.\n   * @default {}\n   */\n  deleteIconProps: PropTypes.any,\n  /**\n   * If `true`, disables the logic operator field but still renders it.\n   */\n  disableMultiFilterOperator: PropTypes.bool,\n  /**\n   * Allows to filter the columns displayed in the filter form.\n   * @param {FilterColumnsArgs} args The columns of the grid and name of field.\n   * @returns {GridColDef['field'][]} The filtered fields array.\n   */\n  filterColumns: PropTypes.func,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the el\n   */\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the logic operator field is rendered.\n   * The field will be invisible if `showMultiFilterOperators` is also `true`.\n   */\n  hasMultipleFilters: PropTypes.bool.isRequired,\n  /**\n   * The [[GridFilterItem]] representing this form.\n   */\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  /**\n   * Props passed to the logic operator input component.\n   * @default {}\n   */\n  logicOperatorInputProps: PropTypes.any,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * Props passed to the operator input component.\n   * @default {}\n   */\n  operatorInputProps: PropTypes.any,\n  /**\n   * `true` if the filter is disabled/read only.\n   * i.e. `colDef.fiterable = false` but passed in `filterModel`\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the logic operator field is visible.\n   */\n  showMultiFilterOperators: PropTypes.bool,\n  /**\n   * Props passed to the value input component.\n   * @default {}\n   */\n  valueInputProps: PropTypes.any\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterForm API](https://mui.com/x/api/data-grid/grid-filter-form/)\n */\nexport { GridFilterForm };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"apiRef\", \"focusElementRef\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"label\", \"variant\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst BooleanOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'center',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputBoolean(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      clearButton,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const [filterValueState, setFilterValueState] = React.useState(item.value || '');\n  const rootProps = useGridRootProps();\n  const labelId = useId();\n  const selectId = useId();\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    setFilterValueState(value);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    setFilterValueState(item.value || '');\n  }, [item.value]);\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(BooleanOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsxs(rootProps.slots.baseSelect, _extends({\n        labelId: labelId,\n        id: selectId,\n        label: label,\n        value: filterValueState,\n        onChange: onFilterChange,\n        variant: variant,\n        notched: variant === 'outlined' ? true : undefined,\n        native: isSelectNative,\n        displayEmpty: true,\n        inputProps: {\n          ref: focusElementRef,\n          tabIndex\n        }\n      }, others /* FIXME: typing error */, baseSelectProps, {\n        children: [/*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"\",\n          children: apiRef.current.getLocaleText('filterValueAny')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"true\",\n          children: apiRef.current.getLocaleText('filterValueTrue')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"false\",\n          children: apiRef.current.getLocaleText('filterValueFalse')\n        }))]\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputBoolean.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: refType,\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputBoolean };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"InputProps\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from '../../../hooks/utils/useTimeout';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction convertFilterItemValueToInputValue(itemValue, inputType) {\n  if (itemValue == null) {\n    return '';\n  }\n  const dateCopy = new Date(itemValue);\n  if (Number.isNaN(dateCopy.getTime())) {\n    return '';\n  }\n  if (inputType === 'date') {\n    return dateCopy.toISOString().substring(0, 10);\n  }\n  if (inputType === 'datetime-local') {\n    // The date picker expects the date to be in the local timezone.\n    // But .toISOString() converts it to UTC with zero offset.\n    // So we need to subtract the timezone offset.\n    dateCopy.setMinutes(dateCopy.getMinutes() - dateCopy.getTimezoneOffset());\n    return dateCopy.toISOString().substring(0, 19);\n  }\n  return dateCopy.toISOString().substring(0, 10);\n}\nfunction GridFilterInputDate(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      InputProps,\n      clearButton,\n      tabIndex,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(() => convertFilterItemValueToInputValue(item.value, type));\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    filterTimeout.clear();\n    const value = event.target.value;\n    setFilterValueState(value);\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const date = new Date(value);\n      applyValue(_extends({}, item, {\n        value: Number.isNaN(date.getTime()) ? undefined : date\n      }));\n      setIsApplying(false);\n    });\n  }, [applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const value = convertFilterItemValueToInputValue(item.value, type);\n    setFilterValueState(value);\n  }, [item.value, type]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    fullWidth: true,\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        max: type === 'datetime-local' ? '9999-12-31T23:59' : '9999-12-31',\n        tabIndex\n      }, InputProps?.inputProps)\n    })\n  }, other, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputDate.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputDate };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"],\n  _excluded2 = [\"key\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { getValueOptions, isSingleSelectColDef } from './filterPanelUtils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst filter = createFilterOptions();\nfunction GridFilterInputMultipleSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const id = useId();\n  const rootProps = useGridRootProps();\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const isOptionEqualToValue = React.useCallback((option, value) => getOptionValue(option) === getOptionValue(value), [getOptionValue]);\n  const resolvedValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn) || [];\n  }, [resolvedColumn]);\n\n  // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n  const filteredValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n    return item.value.reduce((acc, value) => {\n      const resolvedValue = resolvedValueOptions.find(v => getOptionValue(v) === value);\n      if (resolvedValue != null) {\n        acc.push(resolvedValue);\n      }\n      return acc;\n    }, []);\n  }, [getOptionValue, item.value, resolvedValueOptions]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: value.map(getOptionValue)\n    }));\n  }, [applyValue, item, getOptionValue]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    options: resolvedValueOptions,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filteredValues,\n    onChange: handleChange,\n    getOptionLabel: getOptionLabel,\n    renderTags: (value, getTagProps) => value.map((option, index) => {\n      const _getTagProps = getTagProps({\n          index\n        }),\n        {\n          key\n        } = _getTagProps,\n        tagProps = _objectWithoutPropertiesLoose(_getTagProps, _excluded2);\n      return /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n        variant: \"outlined\",\n        size: \"small\",\n        label: getOptionLabel(option)\n      }, tagProps), key);\n    }),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: \"singleSelect\"\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputMultipleValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const [filterValueState, setFilterValueState] = React.useState(item.value || []);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  React.useEffect(() => {\n    const itemValue = item.value ?? [];\n    setFilterValueState(itemValue.map(String));\n  }, [item.value]);\n  const handleChange = React.useCallback((event, value) => {\n    setFilterValueState(value.map(String));\n    applyValue(_extends({}, item, {\n      value: [...value]\n    }));\n  }, [applyValue, item]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    freeSolo: true,\n    options: [],\n    filterOptions: (options, params) => {\n      const {\n        inputValue\n      } = params;\n      return inputValue == null || inputValue === '' ? [] : [inputValue];\n    },\n    id: id,\n    value: filterValueState,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: option\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: type || 'text'\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['date', 'datetime-local', 'number', 'text'])\n} : void 0;\nexport { GridFilterInputMultipleValue };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"placeholder\", \"tabIndex\", \"label\", \"variant\", \"isFilterActive\", \"clearButton\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from './filterPanelUtils';\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst renderSingleSelectOptions = ({\n  column,\n  OptionComponent,\n  getOptionLabel,\n  getOptionValue,\n  isSelectNative,\n  baseSelectOptionProps\n}) => {\n  const iterableColumnValues = ['', ...(getValueOptions(column) || [])];\n  return iterableColumnValues.map(option => {\n    const value = getOptionValue(option);\n    let label = getOptionLabel(option);\n    if (label === '') {\n      label = ' '; // To force the height of the empty option\n    }\n    return /*#__PURE__*/_createElement(OptionComponent, _extends({}, baseSelectOptionProps, {\n      native: isSelectNative,\n      key: value,\n      value: value\n    }), label);\n  });\n};\nconst SingleSelectOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'flex-end',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      placeholder,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard',\n      clearButton\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterValue = item.value ?? '';\n  const id = useId();\n  const labelId = useId();\n  const rootProps = useGridRootProps();\n  const isSelectNative = rootProps.slotProps?.baseSelect?.native ?? false;\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const currentValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn);\n  }, [resolvedColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value;\n\n    // NativeSelect casts the value to a string.\n    value = getValueFromValueOptions(value, currentValueOptions, getOptionValue);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [currentValueOptions, getOptionValue, applyValue, item]);\n  if (!isSingleSelectColDef(resolvedColumn)) {\n    return null;\n  }\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(SingleSelectOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        htmlFor: id,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        id: id,\n        label: label,\n        labelId: labelId,\n        value: filterValue,\n        onChange: onFilterChange,\n        variant: variant,\n        type: type || 'text',\n        inputProps: {\n          tabIndex,\n          ref: focusElementRef,\n          placeholder: placeholder ?? apiRef.current.getLocaleText('filterPanelInputPlaceholder')\n        },\n        native: isSelectNative,\n        notched: variant === 'outlined' ? true : undefined\n      }, others /* FIXME: typing error */, rootProps.slotProps?.baseSelect, {\n        children: renderSingleSelectOptions({\n          column: resolvedColumn,\n          OptionComponent: rootProps.slots.baseSelectOption,\n          getOptionLabel,\n          getOptionValue,\n          isSelectNative,\n          baseSelectOptionProps: rootProps.slotProps?.baseSelectOption\n        })\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"tabIndex\", \"disabled\", \"isFilterActive\", \"clearButton\", \"InputProps\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from '../../../hooks/utils/useTimeout';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      tabIndex,\n      disabled,\n      clearButton,\n      InputProps,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(item.value ?? '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const {\n      value\n    } = event.target;\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const newItem = _extends({}, item, {\n        value,\n        fromInput: id\n      });\n      applyValue(newItem);\n      setIsApplying(false);\n    });\n  }, [id, applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const itemPlusTag = item;\n    if (itemPlusTag.fromInput !== id || item.value === undefined) {\n      setFilterValueState(String(item.value ?? ''));\n    }\n  }, [id, item]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: variant,\n    type: type || 'text',\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        tabIndex\n      }, InputProps?.inputProps)\n    }),\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, others, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputValue };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"logicOperators\", \"columnsSort\", \"filterFormProps\", \"getColumnForNewFilter\", \"children\", \"disableAddFilterButton\", \"disableRemoveAllButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridLogicOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridPanelContent } from '../GridPanelContent';\nimport { GridPanelFooter } from '../GridPanelFooter';\nimport { GridPanelWrapper } from '../GridPanelWrapper';\nimport { GridFilterForm } from './GridFilterForm';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { gridFilterModelSelector } from '../../../hooks/features/filter/gridFilterSelector';\nimport { gridFilterableColumnDefinitionsSelector, gridFilterableColumnLookupSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getGridFilter = col => ({\n  field: col.field,\n  operator: col.filterOperators[0].value,\n  id: Math.round(Math.random() * 1e5)\n});\nconst GridFilterPanel = /*#__PURE__*/React.forwardRef(function GridFilterPanel(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterableColumnsLookup = useGridSelector(apiRef, gridFilterableColumnLookupSelector);\n  const lastFilterRef = React.useRef(null);\n  const placeholderFilter = React.useRef(null);\n  const {\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterFormProps,\n      getColumnForNewFilter,\n      disableAddFilterButton = false,\n      disableRemoveAllButton = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const applyFilter = apiRef.current.upsertFilterItem;\n  const applyFilterLogicOperator = React.useCallback(operator => {\n    apiRef.current.setFilterLogicOperator(operator);\n  }, [apiRef]);\n  const getDefaultFilter = React.useCallback(() => {\n    let nextColumnWithOperator;\n    if (getColumnForNewFilter && typeof getColumnForNewFilter === 'function') {\n      // To allow override the column for default (first) filter\n      const nextFieldName = getColumnForNewFilter({\n        currentFilters: filterModel?.items || [],\n        columns: filterableColumns\n      });\n      if (nextFieldName === null) {\n        return null;\n      }\n      nextColumnWithOperator = filterableColumns.find(({\n        field\n      }) => field === nextFieldName);\n    } else {\n      nextColumnWithOperator = filterableColumns.find(colDef => colDef.filterOperators?.length);\n    }\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel?.items, filterableColumns, getColumnForNewFilter]);\n  const getNewFilter = React.useCallback(() => {\n    if (getColumnForNewFilter === undefined || typeof getColumnForNewFilter !== 'function') {\n      return getDefaultFilter();\n    }\n    const currentFilters = filterModel.items.length ? filterModel.items : [getDefaultFilter()].filter(Boolean);\n\n    // If no items are there in filterModel, we have to pass defaultFilter\n    const nextColumnFieldName = getColumnForNewFilter({\n      currentFilters: currentFilters,\n      columns: filterableColumns\n    });\n    if (nextColumnFieldName === null) {\n      return null;\n    }\n    const nextColumnWithOperator = filterableColumns.find(({\n      field\n    }) => field === nextColumnFieldName);\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel.items, filterableColumns, getColumnForNewFilter, getDefaultFilter]);\n  const items = React.useMemo(() => {\n    if (filterModel.items.length) {\n      return filterModel.items;\n    }\n    if (!placeholderFilter.current) {\n      placeholderFilter.current = getDefaultFilter();\n    }\n    return placeholderFilter.current ? [placeholderFilter.current] : [];\n  }, [filterModel.items, getDefaultFilter]);\n  const hasMultipleFilters = items.length > 1;\n  const {\n    readOnlyFilters,\n    validFilters\n  } = React.useMemo(() => items.reduce((acc, item) => {\n    if (filterableColumnsLookup[item.field]) {\n      acc.validFilters.push(item);\n    } else {\n      acc.readOnlyFilters.push(item);\n    }\n    return acc;\n  }, {\n    readOnlyFilters: [],\n    validFilters: []\n  }), [items, filterableColumnsLookup]);\n  const addNewFilter = React.useCallback(() => {\n    const newFilter = getNewFilter();\n    if (!newFilter) {\n      return;\n    }\n    apiRef.current.upsertFilterItems([...items, newFilter]);\n  }, [apiRef, getNewFilter, items]);\n  const deleteFilter = React.useCallback(item => {\n    const shouldCloseFilterPanel = validFilters.length === 1;\n    apiRef.current.deleteFilterItem(item);\n    if (shouldCloseFilterPanel) {\n      apiRef.current.hideFilterPanel();\n    }\n  }, [apiRef, validFilters.length]);\n  const handleRemoveAll = React.useCallback(() => {\n    if (validFilters.length === 1 && validFilters[0].value === undefined) {\n      apiRef.current.deleteFilterItem(validFilters[0]);\n      return apiRef.current.hideFilterPanel();\n    }\n    return apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: readOnlyFilters\n    }), 'removeAllFilterItems');\n  }, [apiRef, readOnlyFilters, filterModel, validFilters]);\n  React.useEffect(() => {\n    if (logicOperators.length > 0 && filterModel.logicOperator && !logicOperators.includes(filterModel.logicOperator)) {\n      applyFilterLogicOperator(logicOperators[0]);\n    }\n  }, [logicOperators, applyFilterLogicOperator, filterModel.logicOperator]);\n  React.useEffect(() => {\n    if (validFilters.length > 0) {\n      lastFilterRef.current.focus();\n    }\n  }, [validFilters.length]);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(GridPanelContent, {\n      children: [readOnlyFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: index > 0,\n        disableMultiFilterOperator: index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: null,\n        readOnly: true,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index : item.id)), validFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: readOnlyFilters.length + index > 0,\n        disableMultiFilterOperator: readOnlyFilters.length + index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: index === validFilters.length - 1 ? lastFilterRef : null,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index + readOnlyFilters.length : item.id))]\n    }), !rootProps.disableMultipleColumnsFiltering && !(disableAddFilterButton && disableRemoveAllButton) ? /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [!disableAddFilterButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: addNewFilter,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelAddIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelAddFilter')\n      })) : /*#__PURE__*/_jsx(\"span\", {}), !disableRemoveAllButton && validFilters.length > 0 ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: handleRemoveAll,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelRemoveAllIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelRemoveAll')\n      })) : null]\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * If `true`, the `Add filter` button will not be displayed.\n   * @default false\n   */\n  disableAddFilterButton: PropTypes.bool,\n  /**\n   * If `true`, the `Remove all` button will be disabled\n   * @default false\n   */\n  disableRemoveAllButton: PropTypes.bool,\n  /**\n   * Props passed to each filter form.\n   */\n  filterFormProps: PropTypes.shape({\n    columnInputProps: PropTypes.any,\n    columnsSort: PropTypes.oneOf(['asc', 'desc']),\n    deleteIconProps: PropTypes.any,\n    filterColumns: PropTypes.func,\n    logicOperatorInputProps: PropTypes.any,\n    operatorInputProps: PropTypes.any,\n    valueInputProps: PropTypes.any\n  }),\n  /**\n   * Function that returns the next filter item to be picked as default filter.\n   * @param {GetColumnForNewFilterArgs} args Currently configured filters and columns.\n   * @returns {GridColDef['field']} The field to be used for the next filter or `null` to prevent adding a filter.\n   */\n  getColumnForNewFilter: PropTypes.func,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterPanel API](https://mui.com/x/api/data-grid/grid-filter-panel/)\n */\nexport { GridFilterPanel, getGridFilter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function isSingleSelectColDef(colDef) {\n  return colDef?.type === 'singleSelect';\n}\nexport function getValueOptions(column, additionalParams) {\n  if (!column) {\n    return undefined;\n  }\n  return typeof column.valueOptions === 'function' ? column.valueOptions(_extends({\n    field: column.field\n  }, additionalParams)) : column.valueOptions;\n}\nexport function getValueFromValueOptions(value, valueOptions, getOptionValue) {\n  if (valueOptions === undefined) {\n    return undefined;\n  }\n  const result = valueOptions.find(option => {\n    const optionValue = getOptionValue(option);\n    return String(optionValue) === String(value);\n  });\n  return getOptionValue(result);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"options\"],\n  _excluded2 = [\"hideMenu\", \"options\"],\n  _excluded3 = [\"csvOptions\", \"printOptions\", \"excelOptions\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridToolbarExportContainer } from './GridToolbarExportContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridCsvExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsCsv(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportCSV')\n  }));\n}\nexport function GridPrintExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsPrint(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportPrint')\n  }));\n}\nconst GridToolbarExport = /*#__PURE__*/React.forwardRef(function GridToolbarExport(props, ref) {\n  const {\n      csvOptions = {},\n      printOptions = {},\n      excelOptions\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded3);\n  const apiRef = useGridApiContext();\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('exportMenu', [], {\n    excelOptions,\n    csvOptions,\n    printOptions\n  }).sort((a, b) => a.componentName > b.componentName ? 1 : -1);\n  if (preProcessedButtons.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridToolbarExportContainer, _extends({}, other, {\n    ref: ref,\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button.component, {\n      key: index\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExport.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  csvOptions: PropTypes.object,\n  printOptions: PropTypes.object,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarExport };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport MenuList from '@mui/material/MenuList';\nimport { isHideMenuKey, isTabKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridToolbarExportContainer = /*#__PURE__*/React.forwardRef(function GridToolbarExportContainer(props, ref) {\n  const {\n    children,\n    slotProps = {}\n  } = props;\n  const buttonProps = slotProps.button || {};\n  const tooltipProps = slotProps.tooltip || {};\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const exportButtonId = useId();\n  const exportMenuId = useId();\n  const [open, setOpen] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const handleRef = useForkRef(ref, buttonRef);\n  const handleMenuOpen = event => {\n    setOpen(prevOpen => !prevOpen);\n    buttonProps.onClick?.(event);\n  };\n  const handleMenuClose = () => setOpen(false);\n  const handleListKeyDown = event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      handleMenuClose();\n    }\n  };\n  if (children == null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('toolbarExportLabel'),\n      enterDelay: 1000\n    }, tooltipProps, rootProps.slotProps?.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        ref: handleRef,\n        size: \"small\",\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.exportIcon, {}),\n        \"aria-expanded\": open,\n        \"aria-label\": apiRef.current.getLocaleText('toolbarExportLabel'),\n        \"aria-haspopup\": \"menu\",\n        \"aria-controls\": open ? exportMenuId : undefined,\n        id: exportButtonId\n      }, buttonProps, {\n        onClick: handleMenuOpen\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('toolbarExport')\n      }))\n    })), /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      onClose: handleMenuClose,\n      position: \"bottom-start\",\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: exportMenuId,\n        className: gridClasses.menuList,\n        \"aria-labelledby\": exportButtonId,\n        onKeyDown: handleListKeyDown,\n        autoFocusItem: open,\n        children: React.Children.map(children, child => {\n          if (! /*#__PURE__*/React.isValidElement(child)) {\n            return child;\n          }\n          return /*#__PURE__*/React.cloneElement(child, {\n            hideMenu: handleMenuClose\n          });\n        })\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExportContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarExportContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass, gridClasses } from '../constants';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridApiEventHandler } from '../hooks/utils/useGridApiEventHandler';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridDimensionsSelector } from '../hooks/features/dimensions/gridDimensionsSelectors';\nimport { gridDensityFactorSelector } from '../hooks/features/density/densitySelector';\nimport { gridColumnsTotalWidthSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { useTimeout } from '../hooks/utils/useTimeout';\nimport { getTotalHeaderHeight } from '../hooks/features/columns/gridColumnsUtils';\nimport { fastMemo } from '../utils/fastMemo';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', `scrollArea--${scrollDirection}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['scrollArea--left']}`]: styles['scrollArea--left']\n  }, {\n    [`&.${gridClasses['scrollArea--right']}`]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [`&.${gridClasses['scrollArea--left']}`]: {\n    left: 0\n  },\n  [`&.${gridClasses['scrollArea--right']}`]: {\n    right: 0\n  }\n}));\nfunction GridScrollAreaRaw(props) {\n  const {\n    scrollDirection\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = useTimeout();\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const scrollPosition = React.useRef({\n    left: 0,\n    top: 0\n  });\n  const getCanScrollMore = () => {\n    if (scrollDirection === 'left') {\n      // Only render if the user has not reached yet the start of the list\n      return scrollPosition.current.left > 0;\n    }\n    if (scrollDirection === 'right') {\n      // Only render if the user has not reached yet the end of the list\n      const maxScrollLeft = columnsTotalWidth - dimensions.viewportInnerSize.width;\n      return scrollPosition.current.left < maxScrollLeft;\n    }\n    return false;\n  };\n  const [dragging, setDragging] = React.useState(false);\n  const [canScrollMore, setCanScrollMore] = React.useState(getCanScrollMore);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    scrollDirection\n  });\n  const classes = useUtilityClasses(ownerState);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, rootProps);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  const style = {\n    height: headerHeight,\n    top: totalHeaderHeight - headerHeight\n  };\n  if (scrollDirection === 'left') {\n    style.left = dimensions.leftPinnedWidth;\n  } else if (scrollDirection === 'right') {\n    style.right = dimensions.rightPinnedWidth + (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  }\n  const handleScrolling = newScrollPosition => {\n    scrollPosition.current = newScrollPosition;\n    setCanScrollMore(getCanScrollMore);\n  };\n  const handleDragOver = useEventCallback(event => {\n    let offset;\n\n    // Prevents showing the forbidden cursor\n    event.preventDefault();\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI X: Wrong drag direction');\n    }\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n\n    // Avoid freeze and inertia.\n    timeout.start(0, () => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    setDragging(true);\n  });\n  const handleColumnHeaderDragEnd = useEventCallback(() => {\n    setDragging(false);\n  });\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScrolling);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnHeaderDragStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnHeaderDragEnd);\n  if (!dragging || !canScrollMore) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    ownerState: ownerState,\n    onDragOver: handleDragOver,\n    style: style\n  });\n}\nexport const GridScrollArea = fastMemo(GridScrollAreaRaw);","import { useGridSelector } from '../../utils';\nimport { useGridApiContext } from '../../utils/useGridApiContext';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { gridExpandedRowCountSelector } from '../filter';\nimport { gridRowCountSelector, gridRowsLoadingSelector } from '../rows';\n/**\n * Uses the grid state to determine which overlay to display.\n * Returns the active overlay type and the active loading overlay variant.\n */\nexport const useGridOverlays = () => {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const noRows = totalRowCount === 0;\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && noRows;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlayType = null;\n  let loadingOverlayVariant = null;\n  if (showNoRowsOverlay) {\n    overlayType = 'noRowsOverlay';\n  }\n  if (showNoResultsOverlay) {\n    overlayType = 'noResultsOverlay';\n  }\n  if (loading) {\n    overlayType = 'loadingOverlay';\n    loadingOverlayVariant = rootProps.slotProps?.loadingOverlay?.[noRows ? 'noRowsVariant' : 'variant'] || null;\n  }\n  return {\n    overlayType,\n    loadingOverlayVariant\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { fastMemo } from '../utils/fastMemo';\nimport { useGridPrivateApiContext } from '../hooks/utils/useGridPrivateApiContext';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { gridFilterActiveItemsLookupSelector } from '../hooks/features/filter/gridFilterSelector';\nimport { gridSortColumnLookupSelector } from '../hooks/features/sorting/gridSortingSelector';\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector, gridTabIndexColumnGroupHeaderSelector, gridFocusColumnGroupHeaderSelector } from '../hooks/features/focus/gridFocusStateSelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector, gridColumnGroupsHeaderStructureSelector } from '../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { gridColumnMenuSelector } from '../hooks/features/columnMenu/columnMenuSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridHeaders() {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const cellTabIndexState = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const columnGroupHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnGroupHeaderSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const columnGroupHeaderFocus = useGridSelector(apiRef, gridFocusColumnGroupHeaderSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const columnVisibility = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const columnGroupsHeaderStructure = useGridSelector(apiRef, gridColumnGroupsHeaderStructureSelector);\n  const hasOtherElementInTabSequence = !(columnGroupHeaderTabIndexState === null && columnHeaderTabIndexState === null && cellTabIndexState === null);\n  const columnsContainerRef = React.useRef(null);\n  apiRef.current.register('private', {\n    columnHeadersContainerRef: columnsContainerRef\n  });\n  return /*#__PURE__*/_jsx(rootProps.slots.columnHeaders, _extends({\n    ref: columnsContainerRef,\n    visibleColumns: visibleColumns,\n    filterColumnLookup: filterColumnLookup,\n    sortColumnLookup: sortColumnLookup,\n    columnHeaderTabIndexState: columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState: columnGroupHeaderTabIndexState,\n    columnHeaderFocus: columnHeaderFocus,\n    columnGroupHeaderFocus: columnGroupHeaderFocus,\n    headerGroupingMaxDepth: headerGroupingMaxDepth,\n    columnMenuState: columnMenuState,\n    columnVisibility: columnVisibility,\n    columnGroupsHeaderStructure: columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence: hasOtherElementInTabSequence\n  }, rootProps.slotProps?.columnHeaders));\n}\nconst MemoizedGridHeaders = fastMemo(GridHeaders);\nexport { MemoizedGridHeaders as GridHeaders };","import { gridVisibleColumnDefinitionsSelector } from '../features/columns/gridColumnsSelector';\nimport { useGridSelector } from './useGridSelector';\nimport { useGridRootProps } from './useGridRootProps';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../features/columnGrouping/gridColumnGroupsSelector';\nimport { gridPinnedRowsCountSelector, gridRowCountSelector } from '../features/rows/gridRowsSelector';\nimport { useGridPrivateApiContext } from './useGridPrivateApiContext';\nimport { isMultipleRowSelectionEnabled } from '../features/rowSelection/utils';\nexport const useGridAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  let role = 'grid';\n  if (rootProps.treeData) {\n    role = 'treegrid';\n  }\n  return {\n    role,\n    'aria-colcount': visibleColumns.length,\n    'aria-rowcount': headerGroupingMaxDepth + 1 + pinnedRowsCount + totalRowCount,\n    'aria-multiselectable': isMultipleRowSelectionEnabled(rootProps)\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridAriaAttributes } from '../../hooks/utils/useGridAriaAttributes';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridPanelAnchor = styled('div')({\n  position: 'absolute',\n  top: `var(--DataGrid-headersTotalHeight)`,\n  left: 0\n});\nconst Element = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Main',\n  overridesResolver: (props, styles) => styles.main\n})({\n  flexGrow: 1,\n  position: 'relative',\n  overflow: 'hidden'\n});\nexport const GridMainContainer = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const ariaAttributes = useGridAriaAttributes();\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(Element, _extends({\n    ref: ref,\n    ownerState: rootProps,\n    className: props.className,\n    tabIndex: -1\n  }, ariaAttributes, {\n    children: [/*#__PURE__*/_jsx(GridPanelAnchor, {\n      role: \"presentation\",\n      \"data-id\": \"gridPanelAnchor\"\n    }), props.children]\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { gridClasses, getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['topContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  top: 0,\n  '&::after': {\n    content: '\" \"',\n    position: 'absolute',\n    zIndex: 5,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    height: 1,\n    width: 'var(--DataGrid-rowWidth)',\n    backgroundColor: 'var(--DataGrid-rowBorderColor)'\n  }\n});\nexport function GridTopContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, props.className, gridClasses['container--top']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { gridClasses, getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['bottomContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  bottom: 'calc(var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize))'\n});\nexport function GridBottomContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, props.className, gridClasses['container--bottom']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (props, overflowedContent) => {\n  const {\n    classes\n  } = props;\n  const slots = {\n    root: ['virtualScrollerContent', overflowedContent && 'virtualScrollerContent--overflowed']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerContent',\n  overridesResolver: (props, styles) => styles.virtualScrollerContent\n})({});\nconst GridVirtualScrollerContent = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerContent(props, ref) {\n  const rootProps = useGridRootProps();\n  const overflowedContent = !rootProps.autoHeight && props.style?.minHeight === 'auto';\n  const classes = useUtilityClasses(rootProps, overflowedContent);\n  return /*#__PURE__*/_jsx(VirtualScrollerContentRoot, _extends({\n    ref: ref\n  }, props, {\n    ownerState: rootProps,\n    className: clsx(classes.root, props.className)\n  }));\n});\nexport { GridVirtualScrollerContent };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { gridDimensionsSelector } from '../../hooks/features/dimensions';\nimport { gridClasses } from '../../constants';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Filler = styled('div')({\n  display: 'flex',\n  flexDirection: 'row',\n  width: 'var(--DataGrid-rowWidth)',\n  boxSizing: 'border-box'\n});\nconst Pinned = styled('div')({\n  position: 'sticky',\n  height: '100%',\n  boxSizing: 'border-box',\n  borderTop: '1px solid var(--rowBorderColor)',\n  backgroundColor: 'var(--DataGrid-pinnedBackground)'\n});\nconst PinnedLeft = styled(Pinned)({\n  left: 0,\n  borderRight: '1px solid var(--rowBorderColor)'\n});\nconst PinnedRight = styled(Pinned)({\n  right: 0,\n  borderLeft: '1px solid var(--rowBorderColor)'\n});\nconst Main = styled('div')({\n  flexGrow: 1,\n  borderTop: '1px solid var(--rowBorderColor)'\n});\nfunction GridVirtualScrollerFiller({\n  rowsLength\n}) {\n  const apiRef = useGridApiContext();\n  const {\n    viewportOuterSize,\n    minimumSize,\n    hasScrollX,\n    hasScrollY,\n    scrollbarSize,\n    leftPinnedWidth,\n    rightPinnedWidth\n  } = useGridSelector(apiRef, gridDimensionsSelector);\n  const scrollbarHeight = hasScrollX ? scrollbarSize : 0;\n  const expandedHeight = viewportOuterSize.height - minimumSize.height - scrollbarHeight;\n  const height = Math.max(scrollbarHeight, expandedHeight);\n  if (height === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(Filler, {\n    className: gridClasses.filler,\n    role: \"presentation\",\n    style: {\n      height,\n      '--rowBorderColor': rowsLength === 0 ? 'transparent' : 'var(--DataGrid-rowBorderColor)'\n    },\n    children: [leftPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedLeft, {\n      className: gridClasses['filler--pinnedLeft'],\n      style: {\n        width: leftPinnedWidth\n      }\n    }), /*#__PURE__*/_jsx(Main, {}), rightPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedRight, {\n      className: gridClasses['filler--pinnedRight'],\n      style: {\n        width: rightPinnedWidth + (hasScrollY ? scrollbarSize : 0)\n      }\n    })]\n  });\n}\nconst Memoized = fastMemo(GridVirtualScrollerFiller);\nexport { Memoized as GridVirtualScrollerFiller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridRowsMetaSelector } from '../../hooks/features/rows';\nimport { gridRenderContextSelector } from '../../hooks/features/virtualization';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerRenderZone']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerRenderZoneRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerRenderZone',\n  overridesResolver: (props, styles) => styles.virtualScrollerRenderZone\n})({\n  position: 'absolute',\n  display: 'flex',\n  // Prevents margin collapsing when using `getRowSpacing`\n  flexDirection: 'column'\n});\nconst GridVirtualScrollerRenderZone = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerRenderZone(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const offsetTop = useGridSelector(apiRef, () => {\n    const renderContext = gridRenderContextSelector(apiRef);\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    return rowsMeta.positions[renderContext.firstRowIndex] ?? 0;\n  });\n  return /*#__PURE__*/_jsx(VirtualScrollerRenderZoneRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps,\n    style: {\n      transform: `translate3d(0, ${offsetTop}px, 0)`\n    }\n  }, other));\n});\nexport { GridVirtualScrollerRenderZone };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useOnMount } from '../../hooks/utils/useOnMount';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { gridDimensionsSelector, useGridSelector } from '../../hooks';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, position) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollbar', `scrollbar--${position}`],\n    content: ['scrollbarContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scrollbar = styled('div')({\n  position: 'absolute',\n  display: 'inline-block',\n  zIndex: 6,\n  '& > div': {\n    display: 'inline-block'\n  },\n  // In macOS Safari and Gnome Web, scrollbars are overlaid and don't affect the layout. So we consider\n  // their size to be 0px throughout all the calculations, but the floating scrollbar container does need\n  // to appear and have a real size. We set it to 14px because it seems like an acceptable value and we\n  // don't have a method to find the required size for scrollbars on those platforms.\n  '--size': 'calc(max(var(--DataGrid-scrollbarSize), 14px))'\n});\nconst ScrollbarVertical = styled(Scrollbar)({\n  width: 'var(--size)',\n  height: 'calc(var(--DataGrid-hasScrollY) * (100% - var(--DataGrid-topContainerHeight) - var(--DataGrid-bottomContainerHeight) - var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize)))',\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    width: 'var(--size)'\n  },\n  top: 'var(--DataGrid-topContainerHeight)',\n  right: '0px'\n});\nconst ScrollbarHorizontal = styled(Scrollbar)({\n  width: '100%',\n  height: 'var(--size)',\n  overflowY: 'hidden',\n  overflowX: 'auto',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    height: 'var(--size)'\n  },\n  bottom: '0px'\n});\nconst Content = styled('div')({\n  display: 'inline-block'\n});\nconst GridVirtualScrollbar = /*#__PURE__*/React.forwardRef(function GridVirtualScrollbar(props, ref) {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const isLocked = React.useRef(false);\n  const lastPosition = React.useRef(0);\n  const scrollbarRef = React.useRef(null);\n  const contentRef = React.useRef(null);\n  const classes = useUtilityClasses(rootProps, props.position);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const propertyDimension = props.position === 'vertical' ? 'height' : 'width';\n  const propertyScroll = props.position === 'vertical' ? 'scrollTop' : 'scrollLeft';\n  const hasScroll = props.position === 'vertical' ? dimensions.hasScrollX : dimensions.hasScrollY;\n  const contentSize = dimensions.minimumSize[propertyDimension] + (hasScroll ? dimensions.scrollbarSize : 0);\n  const scrollbarSize = props.position === 'vertical' ? dimensions.viewportInnerSize.height : dimensions.viewportOuterSize.width;\n  const scrollbarInnerSize = scrollbarSize * (contentSize / dimensions.viewportOuterSize[propertyDimension]);\n  const onScrollerScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (scroller[propertyScroll] === lastPosition.current) {\n      return;\n    }\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scroller[propertyScroll] / contentSize;\n    scrollbar[propertyScroll] = value * scrollbarInnerSize;\n    lastPosition.current = scroller[propertyScroll];\n  });\n  const onScrollbarScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scrollbar[propertyScroll] / scrollbarInnerSize;\n    scroller[propertyScroll] = value * contentSize;\n  });\n  useOnMount(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    scroller.addEventListener('scroll', onScrollerScroll, {\n      capture: true\n    });\n    scrollbar.addEventListener('scroll', onScrollbarScroll, {\n      capture: true\n    });\n    return () => {\n      scroller.removeEventListener('scroll', onScrollerScroll, {\n        capture: true\n      });\n      scrollbar.removeEventListener('scroll', onScrollbarScroll, {\n        capture: true\n      });\n    };\n  });\n  React.useEffect(() => {\n    const content = contentRef.current;\n    content.style.setProperty(propertyDimension, `${scrollbarInnerSize}px`);\n  }, [scrollbarInnerSize, propertyDimension]);\n  const Container = props.position === 'vertical' ? ScrollbarVertical : ScrollbarHorizontal;\n  return /*#__PURE__*/_jsx(Container, {\n    ref: useForkRef(ref, scrollbarRef),\n    className: classes.root,\n    tabIndex: -1,\n    children: /*#__PURE__*/_jsx(Content, {\n      ref: contentRef,\n      className: classes.content\n    })\n  });\n});\nexport { GridVirtualScrollbar };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { GridScrollArea } from '../GridScrollArea';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridDimensionsSelector } from '../../hooks/features/dimensions';\nimport { useGridVirtualScroller } from '../../hooks/features/virtualization/useGridVirtualScroller';\nimport { useGridOverlays } from '../../hooks/features/overlays/useGridOverlays';\nimport { GridOverlays as Overlays } from '../base/GridOverlays';\nimport { GridHeaders } from '../GridHeaders';\nimport { GridMainContainer as Container } from './GridMainContainer';\nimport { GridTopContainer as TopContainer } from './GridTopContainer';\nimport { GridBottomContainer as BottomContainer } from './GridBottomContainer';\nimport { GridVirtualScrollerContent as Content } from './GridVirtualScrollerContent';\nimport { GridVirtualScrollerFiller as SpaceFiller } from './GridVirtualScrollerFiller';\nimport { GridVirtualScrollerRenderZone as RenderZone } from './GridVirtualScrollerRenderZone';\nimport { GridVirtualScrollbar as Scrollbar } from './GridVirtualScrollbar';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, dimensions, loadingOverlayVariant) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['main', dimensions.rightPinnedWidth > 0 && 'main--hasPinnedRight', loadingOverlayVariant === 'skeleton' && 'main--hasSkeletonLoadingOverlay'],\n    scroller: ['virtualScroller']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scroller = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScroller',\n  overridesResolver: (props, styles) => styles.virtualScroller\n})({\n  position: 'relative',\n  height: '100%',\n  overflow: 'scroll',\n  scrollbarWidth: 'none' /* Firefox */,\n  '&::-webkit-scrollbar': {\n    display: 'none' /* Safari and Chrome */\n  },\n  '@media print': {\n    overflow: 'hidden'\n  },\n  // See https://github.com/mui/mui-x/issues/10547\n  zIndex: 0\n});\nfunction GridVirtualScroller(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const overlaysProps = useGridOverlays();\n  const classes = useUtilityClasses(rootProps, dimensions, overlaysProps.loadingOverlayVariant);\n  const virtualScroller = useGridVirtualScroller();\n  const {\n    getContainerProps,\n    getScrollerProps,\n    getContentProps,\n    getRenderZoneProps,\n    getScrollbarVerticalProps,\n    getScrollbarHorizontalProps,\n    getRows\n  } = virtualScroller;\n  const rows = getRows();\n  return /*#__PURE__*/_jsxs(Container, _extends({\n    className: classes.root\n  }, getContainerProps(), {\n    children: [/*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"left\"\n    }), /*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"right\"\n    }), /*#__PURE__*/_jsxs(Scroller, _extends({\n      className: classes.scroller\n    }, getScrollerProps(), {\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsxs(TopContainer, {\n        children: [/*#__PURE__*/_jsx(GridHeaders, {}), /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"top\",\n          virtualScroller: virtualScroller\n        })]\n      }), /*#__PURE__*/_jsx(Overlays, _extends({}, overlaysProps)), /*#__PURE__*/_jsx(Content, _extends({}, getContentProps(), {\n        children: /*#__PURE__*/_jsxs(RenderZone, _extends({}, getRenderZoneProps(), {\n          children: [rows, /*#__PURE__*/_jsx(rootProps.slots.detailPanels, {\n            virtualScroller: virtualScroller\n          })]\n        }))\n      })), /*#__PURE__*/_jsx(SpaceFiller, {\n        rowsLength: rows.length\n      }), /*#__PURE__*/_jsx(BottomContainer, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"bottom\",\n          virtualScroller: virtualScroller\n        })\n      })]\n    })), dimensions.hasScrollY && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"vertical\"\n    }, getScrollbarVerticalProps())), dimensions.hasScrollX && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"horizontal\"\n    }, getScrollbarHorizontalProps())), props.children]\n  }));\n}\nexport { GridVirtualScroller };","import { unstable_generateUtilityClasses as generateUtilityClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nexport function getDataGridUtilityClass(slot) {\n  return generateUtilityClass('MuiDataGrid', slot);\n}\nexport const gridClasses = generateUtilityClasses('MuiDataGrid', ['actionsCell', 'aggregationColumnHeader', 'aggregationColumnHeader--alignLeft', 'aggregationColumnHeader--alignCenter', 'aggregationColumnHeader--alignRight', 'aggregationColumnHeaderLabel', 'autoHeight', 'autosizing', 'booleanCell', 'cell--editable', 'cell--editing', 'cell--flex', 'cell--textCenter', 'cell--textLeft', 'cell--textRight', 'cell--rangeTop', 'cell--rangeBottom', 'cell--rangeLeft', 'cell--rangeRight', 'cell--pinnedLeft', 'cell--pinnedRight', 'cell--selectionMode', 'cell', 'cellCheckbox', 'cellEmpty', 'cellSkeleton', 'cellOffsetLeft', 'checkboxInput', 'columnHeader', 'columnHeader--alignCenter', 'columnHeader--alignLeft', 'columnHeader--alignRight', 'columnHeader--dragging', 'columnHeader--moving', 'columnHeader--numeric', 'columnHeader--sortable', 'columnHeader--sorted', 'columnHeader--filtered', 'columnHeader--pinnedLeft', 'columnHeader--pinnedRight', 'columnHeader--last', 'columnHeaderCheckbox', 'columnHeaderDraggableContainer', 'columnHeaderTitle', 'columnHeaderTitleContainer', 'columnHeaderTitleContainerContent', 'columnHeader--filledGroup', 'columnHeader--emptyGroup', 'columnHeaders', 'columnSeparator--resizable', 'columnSeparator--resizing', 'columnSeparator--sideLeft', 'columnSeparator--sideRight', 'columnSeparator', 'columnsManagement', 'columnsManagementRow', 'columnsManagementHeader', 'columnsManagementFooter', 'container--top', 'container--bottom', 'detailPanel', 'detailPanels', 'detailPanelToggleCell', 'detailPanelToggleCell--expanded', 'footerCell', 'panel', 'panelHeader', 'panelWrapper', 'panelContent', 'panelFooter', 'paper', 'editBooleanCell', 'editInputCell', 'filler', 'filler--borderTop', 'filler--pinnedLeft', 'filler--pinnedRight', 'filterForm', 'filterFormDeleteIcon', 'filterFormLogicOperatorInput', 'filterFormColumnInput', 'filterFormOperatorInput', 'filterFormValueInput', 'filterIcon', 'footerContainer', 'headerFilterRow', 'iconButtonContainer', 'iconSeparator', 'main', 'main--hasPinnedRight', 'main--hasSkeletonLoadingOverlay', 'menu', 'menuIcon', 'menuIconButton', 'menuOpen', 'menuList', 'overlay', 'overlayWrapper', 'overlayWrapperInner', 'root', 'root--densityStandard', 'root--densityComfortable', 'root--densityCompact', 'root--disableUserSelection', 'row', 'row--editable', 'row--editing', 'row--firstVisible', 'row--lastVisible', 'row--dragging', 'row--dynamicHeight', 'row--detailPanelExpanded', 'rowReorderCellPlaceholder', 'rowCount', 'rowReorderCellContainer', 'rowReorderCell', 'rowReorderCell--draggable', 'rowSkeleton', 'scrollArea--left', 'scrollArea--right', 'scrollArea', 'scrollbar', 'scrollbar--vertical', 'scrollbar--horizontal', 'scrollbarFiller', 'scrollbarFiller--header', 'scrollbarFiller--borderTop', 'scrollbarFiller--pinnedRight', 'selectedRowCount', 'sortIcon', 'toolbarContainer', 'toolbarFilterList', 'virtualScroller', 'virtualScrollerContent', 'virtualScrollerContent--overflowed', 'virtualScrollerRenderZone', 'pinnedColumns', 'withVerticalBorder', 'withBorderColor', 'cell--withRightBorder', 'cell--withLeftBorder', 'columnHeader--withRightBorder', 'columnHeader--withLeftBorder', 'treeDataGroupingCell', 'treeDataGroupingCellToggle', 'treeDataGroupingCellLoadingContainer', 'groupingCriteriaCell', 'groupingCriteriaCellToggle', 'pinnedRows', 'pinnedRows--top', 'pinnedRows--bottom', 'pinnedRowsRenderZone']);","// Can't import from pro package - hence duplication\nexport const GRID_DETAIL_PANEL_TOGGLE_FIELD = '__detail_panel_toggle__';","export const GRID_DEFAULT_LOCALE_TEXT = {\n  // Root\n  noRowsLabel: 'No rows',\n  noResultsOverlayLabel: 'No results found.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Density',\n  toolbarDensityLabel: 'Density',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Comfortable',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Columns',\n  toolbarColumnsLabel: 'Select columns',\n  // Filters toolbar button text\n  toolbarFilters: 'Filters',\n  toolbarFiltersLabel: 'Show filters',\n  toolbarFiltersTooltipHide: 'Hide filters',\n  toolbarFiltersTooltipShow: 'Show filters',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Search…',\n  toolbarQuickFilterLabel: 'Search',\n  toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Download as CSV',\n  toolbarExportPrint: 'Print',\n  toolbarExportExcel: 'Download as Excel',\n  // Columns management text\n  columnsManagementSearchTitle: 'Search',\n  columnsManagementNoColumns: 'No columns',\n  columnsManagementShowHideAllText: 'Show/Hide All',\n  columnsManagementReset: 'Reset',\n  // Filter panel text\n  filterPanelAddFilter: 'Add filter',\n  filterPanelRemoveAll: 'Remove all',\n  filterPanelDeleteIconLabel: 'Delete',\n  filterPanelLogicOperator: 'Logic operator',\n  filterPanelOperator: 'Operator',\n  filterPanelOperatorAnd: 'And',\n  filterPanelOperatorOr: 'Or',\n  filterPanelColumns: 'Columns',\n  filterPanelInputLabel: 'Value',\n  filterPanelInputPlaceholder: 'Filter value',\n  // Filter operators text\n  filterOperatorContains: 'contains',\n  filterOperatorEquals: 'equals',\n  filterOperatorStartsWith: 'starts with',\n  filterOperatorEndsWith: 'ends with',\n  filterOperatorIs: 'is',\n  filterOperatorNot: 'is not',\n  filterOperatorAfter: 'is after',\n  filterOperatorOnOrAfter: 'is on or after',\n  filterOperatorBefore: 'is before',\n  filterOperatorOnOrBefore: 'is on or before',\n  filterOperatorIsEmpty: 'is empty',\n  filterOperatorIsNotEmpty: 'is not empty',\n  filterOperatorIsAnyOf: 'is any of',\n  'filterOperator=': '=',\n  'filterOperator!=': '!=',\n  'filterOperator>': '>',\n  'filterOperator>=': '>=',\n  'filterOperator<': '<',\n  'filterOperator<=': '<=',\n  // Header filter operators text\n  headerFilterOperatorContains: 'Contains',\n  headerFilterOperatorEquals: 'Equals',\n  headerFilterOperatorStartsWith: 'Starts with',\n  headerFilterOperatorEndsWith: 'Ends with',\n  headerFilterOperatorIs: 'Is',\n  headerFilterOperatorNot: 'Is not',\n  headerFilterOperatorAfter: 'Is after',\n  headerFilterOperatorOnOrAfter: 'Is on or after',\n  headerFilterOperatorBefore: 'Is before',\n  headerFilterOperatorOnOrBefore: 'Is on or before',\n  headerFilterOperatorIsEmpty: 'Is empty',\n  headerFilterOperatorIsNotEmpty: 'Is not empty',\n  headerFilterOperatorIsAnyOf: 'Is any of',\n  'headerFilterOperator=': 'Equals',\n  'headerFilterOperator!=': 'Not equals',\n  'headerFilterOperator>': 'Greater than',\n  'headerFilterOperator>=': 'Greater than or equal to',\n  'headerFilterOperator<': 'Less than',\n  'headerFilterOperator<=': 'Less than or equal to',\n  // Filter values text\n  filterValueAny: 'any',\n  filterValueTrue: 'true',\n  filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Show columns',\n  columnMenuManageColumns: 'Manage columns',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Hide column',\n  columnMenuUnsort: 'Unsort',\n  columnMenuSortAsc: 'Sort by ASC',\n  columnMenuSortDesc: 'Sort by DESC',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  columnHeaderFiltersLabel: 'Show filters',\n  columnHeaderSortIconLabel: 'Sort',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rows selected` : `${count.toLocaleString()} row selected`,\n  // Total row amount footer text\n  footerTotalRows: 'Total Rows:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} of ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox selection',\n  checkboxSelectionSelectAllRows: 'Select all rows',\n  checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  checkboxSelectionSelectRow: 'Select row',\n  checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'yes',\n  booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'more',\n  // Column pinning text\n  pinToLeft: 'Pin to left',\n  pinToRight: 'Pin to right',\n  unpin: 'Unpin',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Group',\n  treeDataExpand: 'see children',\n  treeDataCollapse: 'hide children',\n  // Grouping columns\n  groupingColumnHeaderName: 'Group',\n  groupColumn: name => `Group by ${name}`,\n  unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Expand',\n  collapseDetailPanel: 'Collapse',\n  // Used core components translation keys\n  MuiTablePagination: {},\n  // Row reordering text\n  rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  aggregationMenuItemHeader: 'Aggregation',\n  aggregationFunctionLabelSum: 'sum',\n  aggregationFunctionLabelAvg: 'avg',\n  aggregationFunctionLabelMin: 'min',\n  aggregationFunctionLabelMax: 'max',\n  aggregationFunctionLabelSize: 'size'\n};","import * as React from 'react';\nimport { GridApiContext } from '../components/GridApiContext';\nimport { GridPrivateApiContext } from '../hooks/utils/useGridPrivateApiContext';\nimport { GridRootPropsContext } from './GridRootPropsContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridContextProvider({\n  privateApiRef,\n  props,\n  children\n}) {\n  const apiRef = React.useRef(privateApiRef.current.getPublicApi());\n  return /*#__PURE__*/_jsx(GridRootPropsContext.Provider, {\n    value: props,\n    children: /*#__PURE__*/_jsx(GridPrivateApiContext.Provider, {\n      value: privateApiRef,\n      children: /*#__PURE__*/_jsx(GridApiContext.Provider, {\n        value: apiRef,\n        children: children\n      })\n    })\n  });\n}","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\n/**\n * @category ColumnGrouping\n * @ignore - do not document.\n */\nexport const gridColumnGroupingSelector = state => state.columnGrouping;\nexport const gridColumnGroupsUnwrappedModelSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.unwrappedGroupingModel ?? {});\nexport const gridColumnGroupsLookupSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.lookup ?? {});\nexport const gridColumnGroupsHeaderStructureSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.headerStructure ?? []);\nexport const gridColumnGroupsHeaderMaxDepthSelector = createSelector(gridColumnGroupingSelector, columnGrouping => columnGrouping?.maxDepth ?? 0);","export const gridColumnMenuSelector = state => state.columnMenu;","export const DEFAULT_GRID_AUTOSIZE_OPTIONS = {\n  includeHeaders: true,\n  includeOutliers: false,\n  outliersFactor: 1.5,\n  expand: false\n};\n\n/**\n * The Resize API interface that is available in the grid `apiRef`.\n */","export let GridPinnedColumnPosition = /*#__PURE__*/function (GridPinnedColumnPosition) {\n  GridPinnedColumnPosition[\"LEFT\"] = \"left\";\n  GridPinnedColumnPosition[\"RIGHT\"] = \"right\";\n  return GridPinnedColumnPosition;\n}({});\nexport const EMPTY_PINNED_COLUMN_FIELDS = {\n  left: [],\n  right: []\n};","/**\n * Get the theme state\n * @category Core\n */\nexport const gridThemeSelector = state => state.theme;","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { EMPTY_PINNED_COLUMN_FIELDS } from './gridColumnsInterfaces';\nimport { gridThemeSelector } from '../../core/gridCoreSelector';\n\n/**\n * Get the columns state\n * @category Columns\n */\nexport const gridColumnsStateSelector = state => state.columns;\n\n/**\n * Get an array of column fields in the order rendered on screen.\n * @category Columns\n */\nexport const gridColumnFieldsSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.orderedFields);\n\n/**\n * Get the columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridColumnLookupSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.lookup);\n\n/**\n * Get an array of column definitions in the order rendered on screen..\n * @category Columns\n */\nexport const gridColumnDefinitionsSelector = createSelectorMemoized(gridColumnFieldsSelector, gridColumnLookupSelector, (allFields, lookup) => allFields.map(field => lookup[field]));\n\n/**\n * Get the column visibility model, containing the visibility status of each column.\n * If a column is not registered in the model, it is visible.\n * @category Visible Columns\n */\nexport const gridColumnVisibilityModelSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.columnVisibilityModel);\n\n/**\n * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Visible Columns\n */\nexport const gridVisibleColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector, (columns, columnVisibilityModel) => columns.filter(column => columnVisibilityModel[column.field] !== false));\n\n/**\n * Get the field of each visible column.\n * @category Visible Columns\n */\nexport const gridVisibleColumnFieldsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.map(column => column.field));\n\n/**\n * Get the visible pinned columns model.\n * @category Visible Columns\n */\nexport const gridPinnedColumnsSelector = state => state.pinnedColumns;\n\n/**\n * Get the visible pinned columns.\n * @category Visible Columns\n */\nexport const gridVisiblePinnedColumnDefinitionsSelector = createSelectorMemoized(gridColumnsStateSelector, gridPinnedColumnsSelector, gridVisibleColumnFieldsSelector, gridThemeSelector, (columnsState, model, visibleColumnFields, theme) => {\n  const visiblePinnedFields = filterVisibleColumns(model, visibleColumnFields, theme.direction === 'rtl');\n  const visiblePinnedColumns = {\n    left: visiblePinnedFields.left.map(field => columnsState.lookup[field]),\n    right: visiblePinnedFields.right.map(field => columnsState.lookup[field])\n  };\n  return visiblePinnedColumns;\n});\nfunction filterVisibleColumns(pinnedColumns, columns, invert) {\n  if (!Array.isArray(pinnedColumns.left) && !Array.isArray(pinnedColumns.right)) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  if (pinnedColumns.left?.length === 0 && pinnedColumns.right?.length === 0) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  const filter = (newPinnedColumns, remainingColumns) => {\n    if (!Array.isArray(newPinnedColumns)) {\n      return [];\n    }\n    return newPinnedColumns.filter(field => remainingColumns.includes(field));\n  };\n  const leftPinnedColumns = filter(pinnedColumns.left, columns);\n  const columnsWithoutLeftPinnedColumns = columns.filter(\n  // Filter out from the remaining columns those columns already pinned to the left\n  field => !leftPinnedColumns.includes(field));\n  const rightPinnedColumns = filter(pinnedColumns.right, columnsWithoutLeftPinnedColumns);\n  if (invert) {\n    return {\n      left: rightPinnedColumns,\n      right: leftPinnedColumns\n    };\n  }\n  return {\n    left: leftPinnedColumns,\n    right: rightPinnedColumns\n  };\n}\n\n/**\n * Get the left position in pixel of each visible columns relative to the left of the first column.\n * @category Visible Columns\n */\nexport const gridColumnPositionsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => {\n  const positions = [];\n  let currentPosition = 0;\n  for (let i = 0; i < visibleColumns.length; i += 1) {\n    positions.push(currentPosition);\n    currentPosition += visibleColumns[i].computedWidth;\n  }\n  return positions;\n});\n\n/**\n * Get the summed width of all the visible columns.\n * @category Visible Columns\n */\nexport const gridColumnsTotalWidthSelector = createSelector(gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n  if (colCount === 0) {\n    return 0;\n  }\n  return positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth;\n});\n\n/**\n * Get the filterable columns as an array.\n * @category Columns\n */\nexport const gridFilterableColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.filter(col => col.filterable));\n\n/**\n * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridFilterableColumnLookupSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.reduce((acc, col) => {\n  if (col.filterable) {\n    acc[col.field] = col;\n  }\n  return acc;\n}, {}));\n\n/**\n * Checks if some column has a colSpan field.\n * @category Columns\n * @ignore - Do not document\n */\nexport const gridHasColSpanSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.some(column => column.colSpan !== undefined));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { DEFAULT_GRID_COL_TYPE_KEY, GRID_STRING_COL_DEF, getGridDefaultColumnTypes } from '../../../colDef';\nimport { gridColumnsStateSelector, gridColumnVisibilityModelSelector } from './gridColumnsSelector';\nimport { clamp } from '../../../utils/utils';\nimport { gridDensityFactorSelector } from '../density/densitySelector';\nimport { gridHeaderFilteringEnabledSelector } from '../headerFiltering/gridHeaderFilteringSelectors';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../columnGrouping/gridColumnGroupsSelector';\nexport const COLUMNS_DIMENSION_PROPERTIES = ['maxWidth', 'minWidth', 'width', 'flex'];\nconst COLUMN_TYPES = getGridDefaultColumnTypes();\n\n/**\n * Computes width for flex columns.\n * Based on CSS Flexbox specification:\n * https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n */\nexport function computeFlexColumnsWidth({\n  initialFreeSpace,\n  totalFlexUnits,\n  flexColumns\n}) {\n  const uniqueFlexColumns = new Set(flexColumns.map(col => col.field));\n  const flexColumnsLookup = {\n    all: {},\n    frozenFields: [],\n    freeze: field => {\n      const value = flexColumnsLookup.all[field];\n      if (value && value.frozen !== true) {\n        flexColumnsLookup.all[field].frozen = true;\n        flexColumnsLookup.frozenFields.push(field);\n      }\n    }\n  };\n\n  // Step 5 of https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n  function loopOverFlexItems() {\n    // 5a: If all the flex items on the line are frozen, free space has been distributed.\n    if (flexColumnsLookup.frozenFields.length === uniqueFlexColumns.size) {\n      return;\n    }\n    const violationsLookup = {\n      min: {},\n      max: {}\n    };\n    let remainingFreeSpace = initialFreeSpace;\n    let flexUnits = totalFlexUnits;\n    let totalViolation = 0;\n\n    // 5b: Calculate the remaining free space\n    flexColumnsLookup.frozenFields.forEach(field => {\n      remainingFreeSpace -= flexColumnsLookup.all[field].computedWidth;\n      flexUnits -= flexColumnsLookup.all[field].flex;\n    });\n    for (let i = 0; i < flexColumns.length; i += 1) {\n      const column = flexColumns[i];\n      if (flexColumnsLookup.all[column.field] && flexColumnsLookup.all[column.field].frozen === true) {\n        continue;\n      }\n\n      // 5c: Distribute remaining free space proportional to the flex factors\n      const widthPerFlexUnit = remainingFreeSpace / flexUnits;\n      let computedWidth = widthPerFlexUnit * column.flex;\n\n      // 5d: Fix min/max violations\n      if (computedWidth < column.minWidth) {\n        totalViolation += column.minWidth - computedWidth;\n        computedWidth = column.minWidth;\n        violationsLookup.min[column.field] = true;\n      } else if (computedWidth > column.maxWidth) {\n        totalViolation += column.maxWidth - computedWidth;\n        computedWidth = column.maxWidth;\n        violationsLookup.max[column.field] = true;\n      }\n      flexColumnsLookup.all[column.field] = {\n        frozen: false,\n        computedWidth,\n        flex: column.flex\n      };\n    }\n\n    // 5e: Freeze over-flexed items\n    if (totalViolation < 0) {\n      // Freeze all the items with max violations\n      Object.keys(violationsLookup.max).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else if (totalViolation > 0) {\n      // Freeze all the items with min violations\n      Object.keys(violationsLookup.min).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else {\n      // Freeze all items\n      flexColumns.forEach(({\n        field\n      }) => {\n        flexColumnsLookup.freeze(field);\n      });\n    }\n\n    // 5f: Return to the start of this loop\n    loopOverFlexItems();\n  }\n  loopOverFlexItems();\n  return flexColumnsLookup.all;\n}\n\n/**\n * Compute the `computedWidth` (ie: the width the column should have during rendering) based on the `width` / `flex` / `minWidth` / `maxWidth` properties of `GridColDef`.\n * The columns already have been merged with there `type` default values for `minWidth`, `maxWidth` and `width`, thus the `!` for those properties below.\n * TODO: Unit test this function in depth and only keep basic cases for the whole grid testing.\n * TODO: Improve the `GridColDef` typing to reflect the fact that `minWidth` / `maxWidth` and `width` can't be null after the merge with the `type` default values.\n */\nexport const hydrateColumnsWidth = (rawState, dimensions) => {\n  const columnsLookup = {};\n  let totalFlexUnits = 0;\n  let widthAllocatedBeforeFlex = 0;\n  const flexColumns = [];\n\n  // For the non-flex columns, compute their width\n  // For the flex columns, compute their minimum width and how much width must be allocated during the flex allocation\n  rawState.orderedFields.forEach(columnField => {\n    let column = rawState.lookup[columnField];\n    let computedWidth = 0;\n    let isFlex = false;\n    if (rawState.columnVisibilityModel[columnField] !== false) {\n      if (column.flex && column.flex > 0) {\n        totalFlexUnits += column.flex;\n        isFlex = true;\n      } else {\n        computedWidth = clamp(column.width || GRID_STRING_COL_DEF.width, column.minWidth || GRID_STRING_COL_DEF.minWidth, column.maxWidth || GRID_STRING_COL_DEF.maxWidth);\n      }\n      widthAllocatedBeforeFlex += computedWidth;\n    }\n    if (column.computedWidth !== computedWidth) {\n      column = _extends({}, column, {\n        computedWidth\n      });\n    }\n    if (isFlex) {\n      flexColumns.push(column);\n    }\n    columnsLookup[columnField] = column;\n  });\n  const availableWidth = dimensions === undefined ? 0 : dimensions.viewportOuterSize.width - (dimensions.hasScrollY ? dimensions.scrollbarSize : 0);\n  const initialFreeSpace = Math.max(availableWidth - widthAllocatedBeforeFlex, 0);\n\n  // Allocate the remaining space to the flex columns\n  if (totalFlexUnits > 0 && availableWidth > 0) {\n    const computedColumnWidths = computeFlexColumnsWidth({\n      initialFreeSpace,\n      totalFlexUnits,\n      flexColumns\n    });\n    Object.keys(computedColumnWidths).forEach(field => {\n      columnsLookup[field].computedWidth = computedColumnWidths[field].computedWidth;\n    });\n  }\n  return _extends({}, rawState, {\n    lookup: columnsLookup\n  });\n};\n\n/**\n * Apply the order and the dimensions of the initial state.\n * The columns not registered in `orderedFields` will be placed after the imported columns.\n */\nexport const applyInitialState = (columnsState, initialState) => {\n  if (!initialState) {\n    return columnsState;\n  }\n  const {\n    orderedFields = [],\n    dimensions = {}\n  } = initialState;\n  const columnsWithUpdatedDimensions = Object.keys(dimensions);\n  if (columnsWithUpdatedDimensions.length === 0 && orderedFields.length === 0) {\n    return columnsState;\n  }\n  const orderedFieldsLookup = {};\n  const cleanOrderedFields = [];\n  for (let i = 0; i < orderedFields.length; i += 1) {\n    const field = orderedFields[i];\n\n    // Ignores the fields in the initialState that matches no field on the current column state\n    if (columnsState.lookup[field]) {\n      orderedFieldsLookup[field] = true;\n      cleanOrderedFields.push(field);\n    }\n  }\n  const newOrderedFields = cleanOrderedFields.length === 0 ? columnsState.orderedFields : [...cleanOrderedFields, ...columnsState.orderedFields.filter(field => !orderedFieldsLookup[field])];\n  const newColumnLookup = _extends({}, columnsState.lookup);\n  for (let i = 0; i < columnsWithUpdatedDimensions.length; i += 1) {\n    const field = columnsWithUpdatedDimensions[i];\n    const newColDef = _extends({}, newColumnLookup[field], {\n      hasBeenResized: true\n    });\n    Object.entries(dimensions[field]).forEach(([key, value]) => {\n      newColDef[key] = value === -1 ? Infinity : value;\n    });\n    newColumnLookup[field] = newColDef;\n  }\n  const newColumnsState = _extends({}, columnsState, {\n    orderedFields: newOrderedFields,\n    lookup: newColumnLookup\n  });\n  return newColumnsState;\n};\nfunction getDefaultColTypeDef(type) {\n  let colDef = COLUMN_TYPES[DEFAULT_GRID_COL_TYPE_KEY];\n  if (type && COLUMN_TYPES[type]) {\n    colDef = COLUMN_TYPES[type];\n  }\n  return colDef;\n}\nexport const createColumnsState = ({\n  apiRef,\n  columnsToUpsert,\n  initialState,\n  columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef),\n  keepOnlyColumnsToUpsert = false\n}) => {\n  const isInsideStateInitializer = !apiRef.current.state.columns;\n  let columnsState;\n  if (isInsideStateInitializer) {\n    columnsState = {\n      orderedFields: [],\n      lookup: {},\n      columnVisibilityModel\n    };\n  } else {\n    const currentState = gridColumnsStateSelector(apiRef.current.state);\n    columnsState = {\n      orderedFields: keepOnlyColumnsToUpsert ? [] : [...currentState.orderedFields],\n      lookup: _extends({}, currentState.lookup),\n      // Will be cleaned later if keepOnlyColumnsToUpsert=true\n      columnVisibilityModel\n    };\n  }\n  let columnsToKeep = {};\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    columnsToKeep = Object.keys(columnsState.lookup).reduce((acc, key) => _extends({}, acc, {\n      [key]: false\n    }), {});\n  }\n  const columnsToUpsertLookup = {};\n  columnsToUpsert.forEach(newColumn => {\n    const {\n      field\n    } = newColumn;\n    columnsToUpsertLookup[field] = true;\n    columnsToKeep[field] = true;\n    let existingState = columnsState.lookup[field];\n    if (existingState == null) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field,\n        hasBeenResized: false\n      });\n      columnsState.orderedFields.push(field);\n    } else if (keepOnlyColumnsToUpsert) {\n      columnsState.orderedFields.push(field);\n    }\n\n    // If the column type has changed - merge the existing state with the default column type definition\n    if (existingState && existingState.type !== newColumn.type) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field\n      });\n    }\n    let hasBeenResized = existingState.hasBeenResized;\n    COLUMNS_DIMENSION_PROPERTIES.forEach(key => {\n      if (newColumn[key] !== undefined) {\n        hasBeenResized = true;\n        if (newColumn[key] === -1) {\n          newColumn[key] = Infinity;\n        }\n      }\n    });\n    columnsState.lookup[field] = _extends({}, existingState, newColumn, {\n      hasBeenResized\n    });\n  });\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    Object.keys(columnsState.lookup).forEach(field => {\n      if (!columnsToKeep[field]) {\n        delete columnsState.lookup[field];\n      }\n    });\n  }\n  const columnsStateWithPreProcessing = apiRef.current.unstable_applyPipeProcessors('hydrateColumns', columnsState);\n  const columnsStateWithPortableColumns = applyInitialState(columnsStateWithPreProcessing, initialState);\n  return hydrateColumnsWidth(columnsStateWithPortableColumns, apiRef.current.getRootDimensions?.() ?? undefined);\n};\nexport function getFirstNonSpannedColumnToRender({\n  firstColumnToRender,\n  apiRef,\n  firstRowToRender,\n  lastRowToRender,\n  visibleRows\n}) {\n  let firstNonSpannedColumnToRender = firstColumnToRender;\n  for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n    const row = visibleRows[i];\n    if (row) {\n      const rowId = visibleRows[i].id;\n      const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, firstColumnToRender);\n      if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n        firstNonSpannedColumnToRender = cellColSpanInfo.leftVisibleCellIndex;\n      }\n    }\n  }\n  return firstNonSpannedColumnToRender;\n}\nexport function getTotalHeaderHeight(apiRef, props) {\n  const densityFactor = gridDensityFactorSelector(apiRef);\n  const maxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n  const isHeaderFilteringEnabled = gridHeaderFilteringEnabledSelector(apiRef);\n  const columnHeadersHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const filterHeadersHeight = isHeaderFilteringEnabled ? Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor) : 0;\n  return columnHeadersHeight * (1 + (maxDepth ?? 0)) + filterHeadersHeight;\n}","import { createSelector } from '../../../utils/createSelector';\nexport const COMPACT_DENSITY_FACTOR = 0.7;\nexport const COMFORTABLE_DENSITY_FACTOR = 1.3;\nconst DENSITY_FACTORS = {\n  compact: COMPACT_DENSITY_FACTOR,\n  comfortable: COMFORTABLE_DENSITY_FACTOR,\n  standard: 1\n};\nexport const gridDensitySelector = state => state.density;\nexport const gridDensityFactorSelector = createSelector(gridDensitySelector, density => DENSITY_FACTORS[density]);","export const gridDimensionsSelector = state => state.dimensions;","/**\n * Select the row editing state.\n */\nexport const gridEditRowsStateSelector = state => state.editRows;","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridSortedRowEntriesSelector } from '../sorting/gridSortingSelector';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\n\n/**\n * @category Filtering\n */\nconst gridFilterStateSelector = state => state.filter;\n\n/**\n * Get the current filter model.\n * @category Filtering\n */\nexport const gridFilterModelSelector = createSelector(gridFilterStateSelector, filterState => filterState.filterModel);\n\n/**\n * Get the current quick filter values.\n * @category Filtering\n */\nexport const gridQuickFilterValuesSelector = createSelector(gridFilterModelSelector, filterModel => filterModel.quickFilterValues);\n\n/**\n * @category Visible rows\n * @ignore - do not document.\n */\nexport const gridVisibleRowsLookupSelector = state => state.visibleRowsLookup;\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredRowsLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredDescendantCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredDescendantCountLookup);\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowEntriesSelector = createSelectorMemoized(gridVisibleRowsLookupSelector, gridSortedRowEntriesSelector, (visibleRowsLookup, sortedRows) => sortedRows.filter(row => visibleRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, visibleSortedRowEntries => visibleSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowEntriesSelector = createSelectorMemoized(gridFilteredRowsLookupSelector, gridSortedRowEntriesSelector, (filteredRowsLookup, sortedRows) => sortedRows.filter(row => filteredRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowIdsSelector = createSelectorMemoized(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredSortedTopLevelRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, (visibleSortedRows, rowTree, rowTreeDepth) => {\n  if (rowTreeDepth < 2) {\n    return visibleSortedRows;\n  }\n  return visibleSortedRows.filter(row => rowTree[row.id]?.depth === 0);\n});\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridExpandedRowCountSelector = createSelector(gridExpandedSortedRowEntriesSelector, visibleSortedRows => visibleSortedRows.length);\n\n/**\n * Get the amount of top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredTopLevelRowCountSelector = createSelector(gridFilteredSortedTopLevelRowEntriesSelector, visibleSortedTopLevelRows => visibleSortedTopLevelRows.length);\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * Includes top level and descendant rows.\n * @category Filtering\n */\nexport const gridFilteredRowCountSelector = createSelector(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.length);\n\n/**\n * Get the amount of descendant rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredDescendantRowCountSelector = createSelector(gridFilteredRowCountSelector, gridFilteredTopLevelRowCountSelector, (totalRowCount, topLevelRowCount) => totalRowCount - topLevelRowCount);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsSelector = createSelectorMemoized(gridFilterModelSelector, gridColumnLookupSelector, (filterModel, columnLookup) => filterModel.items?.filter(item => {\n  if (!item.field) {\n    return false;\n  }\n  const column = columnLookup[item.field];\n  if (!column?.filterOperators || column?.filterOperators?.length === 0) {\n    return false;\n  }\n  const filterOperator = column.filterOperators.find(operator => operator.value === item.operator);\n  if (!filterOperator) {\n    return false;\n  }\n  return !filterOperator.InputComponent || item.value != null && item.value?.toString() !== '';\n}));\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsLookupSelector = createSelectorMemoized(gridFilterActiveItemsSelector, activeFilters => {\n  const result = activeFilters.reduce((res, filterItem) => {\n    if (!res[filterItem.field]) {\n      res[filterItem.field] = [filterItem];\n    } else {\n      res[filterItem.field].push(filterItem);\n    }\n    return res;\n  }, {});\n  return result;\n});","import { GridLogicOperator } from '../../../models/gridFilterItem';\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  logicOperator: GridLogicOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLogicOperator.And\n});\n\n/**\n * @param {GridRowId} rowId The id of the row we want to filter.\n * @param {(filterItem: GridFilterItem) => boolean} shouldApplyItem An optional callback to allow the filtering engine to only apply some items.\n */\n\n/**\n * Visibility status for each row.\n * A row is visible if it is passing the filters AND if its parents are expanded.\n * If a row is not registered in this lookup, it is visible.\n */","export function getPublicApiRef(apiRef) {\n  return {\n    current: apiRef.current.getPublicApi()\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridLogicOperator } from '../../../models';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { buildWarning } from '../../../utils/warning';\nimport { getPublicApiRef } from '../../../utils/getPublicApiRef';\nimport { gridColumnFieldsSelector, gridColumnLookupSelector, gridVisibleColumnFieldsSelector } from '../columns';\nlet hasEval;\nfunction getHasEval() {\n  if (hasEval !== undefined) {\n    return hasEval;\n  }\n  try {\n    hasEval = new Function('return true')();\n  } catch (_) {\n    hasEval = false;\n  }\n  return hasEval;\n}\n/**\n * Adds default values to the optional fields of a filter items.\n * @param {GridFilterItem} item The raw filter item.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @return {GridFilterItem} The clean filter item with an uniq ID and an always-defined operator.\n * TODO: Make the typing reflect the different between GridFilterInputItem and GridFilterItem.\n */\nexport const cleanFilterItem = (item, apiRef) => {\n  const cleanItem = _extends({}, item);\n  if (cleanItem.id == null) {\n    cleanItem.id = Math.round(Math.random() * 1e5);\n  }\n  if (cleanItem.operator == null) {\n    // Selects a default operator\n    // We don't use `apiRef.current.getColumn` because it is not ready during state initialization\n    const column = gridColumnLookupSelector(apiRef)[cleanItem.field];\n    cleanItem.operator = column && column.filterOperators[0].value;\n  }\n  return cleanItem;\n};\nconst filterModelDisableMultiColumnsFilteringWarning = buildWarning(['MUI X: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nconst filterModelMissingItemIdWarning = buildWarning('MUI X: The `id` field is required on `filterModel.items` when you use multiple filters.', 'error');\nconst filterModelMissingItemOperatorWarning = buildWarning('MUI X: The `operator` field is required on `filterModel.items`, one or more of your filtering item has no `operator` provided.', 'error');\nexport const sanitizeFilterModel = (model, disableMultipleColumnsFiltering, apiRef) => {\n  const hasSeveralItems = model.items.length > 1;\n  let items;\n  if (hasSeveralItems && disableMultipleColumnsFiltering) {\n    filterModelDisableMultiColumnsFilteringWarning();\n    items = [model.items[0]];\n  } else {\n    items = model.items;\n  }\n  const hasItemsWithoutIds = hasSeveralItems && items.some(item => item.id == null);\n  const hasItemWithoutOperator = items.some(item => item.operator == null);\n  if (hasItemsWithoutIds) {\n    filterModelMissingItemIdWarning();\n  }\n  if (hasItemWithoutOperator) {\n    filterModelMissingItemOperatorWarning();\n  }\n  if (hasItemWithoutOperator || hasItemsWithoutIds) {\n    return _extends({}, model, {\n      items: items.map(item => cleanFilterItem(item, apiRef))\n    });\n  }\n  if (model.items !== items) {\n    return _extends({}, model, {\n      items\n    });\n  }\n  return model;\n};\nexport const mergeStateWithFilterModel = (filterModel, disableMultipleColumnsFiltering, apiRef) => filteringState => _extends({}, filteringState, {\n  filterModel: sanitizeFilterModel(filterModel, disableMultipleColumnsFiltering, apiRef)\n});\nexport const removeDiacritics = value => {\n  if (typeof value === 'string') {\n    return value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n  }\n  return value;\n};\nconst getFilterCallbackFromItem = (filterItem, apiRef) => {\n  if (!filterItem.field || !filterItem.operator) {\n    return null;\n  }\n  const column = apiRef.current.getColumn(filterItem.field);\n  if (!column) {\n    return null;\n  }\n  let parsedValue;\n  if (column.valueParser) {\n    const parser = column.valueParser;\n    parsedValue = Array.isArray(filterItem.value) ? filterItem.value?.map(x => parser(x, undefined, column, apiRef)) : parser(filterItem.value, undefined, column, apiRef);\n  } else {\n    parsedValue = filterItem.value;\n  }\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  if (ignoreDiacritics) {\n    parsedValue = removeDiacritics(parsedValue);\n  }\n  const newFilterItem = _extends({}, filterItem, {\n    value: parsedValue\n  });\n  const filterOperators = column.filterOperators;\n  if (!filterOperators?.length) {\n    throw new Error(`MUI X: No filter operators found for column '${column.field}'.`);\n  }\n  const filterOperator = filterOperators.find(operator => operator.value === newFilterItem.operator);\n  if (!filterOperator) {\n    throw new Error(`MUI X: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operator}'.`);\n  }\n  const publicApiRef = getPublicApiRef(apiRef);\n  const applyFilterOnRow = filterOperator.getApplyFilterFn(newFilterItem, column);\n  if (typeof applyFilterOnRow !== 'function') {\n    return null;\n  }\n  return {\n    item: newFilterItem,\n    fn: row => {\n      let value = apiRef.current.getRowValue(row, column);\n      if (ignoreDiacritics) {\n        value = removeDiacritics(value);\n      }\n      return applyFilterOnRow(value, row, column, publicApiRef);\n    }\n  };\n};\nlet filterItemsApplierId = 1;\n\n/**\n * Generates a method to easily check if a row is matching the current filter model.\n * @param {GridFilterModel} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedFilterItemsApplier = (filterModel, apiRef, disableEval) => {\n  const {\n    items\n  } = filterModel;\n  const appliers = items.map(item => getFilterCallbackFromItem(item, apiRef)).filter(callback => !!callback);\n  if (appliers.length === 0) {\n    return null;\n  }\n  if (disableEval || !getHasEval()) {\n    // This is the original logic, which is used if `eval()` is not supported (aka prevented by CSP).\n    return (row, shouldApplyFilter) => {\n      const resultPerItemId = {};\n      for (let i = 0; i < appliers.length; i += 1) {\n        const applier = appliers[i];\n        if (!shouldApplyFilter || shouldApplyFilter(applier.item.field)) {\n          resultPerItemId[applier.item.id] = applier.fn(row);\n        }\n      }\n      return resultPerItemId;\n    };\n  }\n\n  // We generate a new function with `new Function()` to avoid expensive patterns for JS engines\n  // such as a dynamic object assignment, for example `{ [dynamicKey]: value }`.\n  const filterItemCore = new Function('appliers', 'row', 'shouldApplyFilter', `\"use strict\";\n${appliers.map((applier, i) => `const shouldApply${i} = !shouldApplyFilter || shouldApplyFilter(${JSON.stringify(applier.item.field)});`).join('\\n')}\n\nconst result$$ = {\n${appliers.map((applier, i) => `  ${JSON.stringify(String(applier.item.id))}: !shouldApply${i} ? false : appliers[${i}].fn(row),`).join('\\n')}\n};\n\nreturn result$$;`.replaceAll('$$', String(filterItemsApplierId)));\n  filterItemsApplierId += 1;\n\n  // Assign to the arrow function a name to help debugging\n  const filterItem = (row, shouldApplyItem) => filterItemCore(appliers, row, shouldApplyItem);\n  return filterItem;\n};\nexport const shouldQuickFilterExcludeHiddenColumns = filterModel => {\n  return filterModel.quickFilterExcludeHiddenColumns ?? true;\n};\n\n/**\n * Generates a method to easily check if a row is matching the current quick filter.\n * @param {any[]} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedQuickFilterApplier = (filterModel, apiRef) => {\n  const quickFilterValues = filterModel.quickFilterValues?.filter(Boolean) ?? [];\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n  const columnFields = shouldQuickFilterExcludeHiddenColumns(filterModel) ? gridVisibleColumnFieldsSelector(apiRef) : gridColumnFieldsSelector(apiRef);\n  const appliersPerField = [];\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  const publicApiRef = getPublicApiRef(apiRef);\n  columnFields.forEach(field => {\n    const column = apiRef.current.getColumn(field);\n    const getApplyQuickFilterFn = column?.getApplyQuickFilterFn;\n    if (getApplyQuickFilterFn) {\n      appliersPerField.push({\n        column,\n        appliers: quickFilterValues.map(quickFilterValue => {\n          const value = ignoreDiacritics ? removeDiacritics(quickFilterValue) : quickFilterValue;\n          return {\n            fn: getApplyQuickFilterFn(value, column, publicApiRef)\n          };\n        })\n      });\n    }\n  });\n  return function isRowMatchingQuickFilter(row, shouldApplyFilter) {\n    const result = {};\n\n    /* eslint-disable no-labels */\n    outer: for (let v = 0; v < quickFilterValues.length; v += 1) {\n      const filterValue = quickFilterValues[v];\n      for (let i = 0; i < appliersPerField.length; i += 1) {\n        const {\n          column,\n          appliers\n        } = appliersPerField[i];\n        const {\n          field\n        } = column;\n        if (shouldApplyFilter && !shouldApplyFilter(field)) {\n          continue;\n        }\n        const applier = appliers[v];\n        let value = apiRef.current.getRowValue(row, column);\n        if (applier.fn === null) {\n          continue;\n        }\n        if (ignoreDiacritics) {\n          value = removeDiacritics(value);\n        }\n        const isMatching = applier.fn(value, row, column, publicApiRef);\n        if (isMatching) {\n          result[filterValue] = true;\n          continue outer;\n        }\n      }\n      result[filterValue] = false;\n    }\n    return result;\n  };\n};\nexport const buildAggregatedFilterApplier = (filterModel, apiRef, disableEval) => {\n  const isRowMatchingFilterItems = buildAggregatedFilterItemsApplier(filterModel, apiRef, disableEval);\n  const isRowMatchingQuickFilter = buildAggregatedQuickFilterApplier(filterModel, apiRef);\n  return function isRowMatchingFilters(row, shouldApplyFilter, result) {\n    result.passingFilterItems = isRowMatchingFilterItems?.(row, shouldApplyFilter) ?? null;\n    result.passingQuickFilterValues = isRowMatchingQuickFilter?.(row, shouldApplyFilter) ?? null;\n  };\n};\nconst isNotNull = result => result != null;\nconst filterModelItems = (cache, apiRef, items) => {\n  if (!cache.cleanedFilterItems) {\n    cache.cleanedFilterItems = items.filter(item => getFilterCallbackFromItem(item, apiRef) !== null);\n  }\n  return cache.cleanedFilterItems;\n};\nexport const passFilterLogic = (allFilterItemResults, allQuickFilterResults, filterModel, apiRef, cache) => {\n  const cleanedFilterItems = filterModelItems(cache, apiRef, filterModel.items);\n  const cleanedFilterItemResults = allFilterItemResults.filter(isNotNull);\n  const cleanedQuickFilterResults = allQuickFilterResults.filter(isNotNull);\n\n  // get result for filter items model\n  if (cleanedFilterItemResults.length > 0) {\n    // Return true if the item pass with one of the rows\n    const filterItemPredicate = item => {\n      return cleanedFilterItemResults.some(filterItemResult => filterItemResult[item.id]);\n    };\n    const logicOperator = filterModel.logicOperator ?? getDefaultGridFilterModel().logicOperator;\n    if (logicOperator === GridLogicOperator.And) {\n      const passesAllFilters = cleanedFilterItems.every(filterItemPredicate);\n      if (!passesAllFilters) {\n        return false;\n      }\n    } else {\n      const passesSomeFilters = cleanedFilterItems.some(filterItemPredicate);\n      if (!passesSomeFilters) {\n        return false;\n      }\n    }\n  }\n\n  // get result for quick filter model\n  if (cleanedQuickFilterResults.length > 0 && filterModel.quickFilterValues != null) {\n    // Return true if the item pass with one of the rows\n    const quickFilterValuePredicate = value => {\n      return cleanedQuickFilterResults.some(quickFilterValueResult => quickFilterValueResult[value]);\n    };\n    const quickFilterLogicOperator = filterModel.quickFilterLogicOperator ?? getDefaultGridFilterModel().quickFilterLogicOperator;\n    if (quickFilterLogicOperator === GridLogicOperator.And) {\n      const passesAllQuickFilterValues = filterModel.quickFilterValues.every(quickFilterValuePredicate);\n      if (!passesAllQuickFilterValues) {\n        return false;\n      }\n    } else {\n      const passesSomeQuickFilterValues = filterModel.quickFilterValues.some(quickFilterValuePredicate);\n      if (!passesSomeQuickFilterValues) {\n        return false;\n      }\n    }\n  }\n  return true;\n};","import { createSelector } from '../../../utils/createSelector';\nexport const gridFocusStateSelector = state => state.focus;\nexport const gridFocusCellSelector = createSelector(gridFocusStateSelector, focusState => focusState.cell);\nexport const gridFocusColumnHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeader);\nexport const gridFocusColumnHeaderFilterSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeaderFilter);\nexport const gridFocusColumnGroupHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnGroupHeader);\nexport const gridTabIndexStateSelector = state => state.tabIndex;\nexport const gridTabIndexCellSelector = createSelector(gridTabIndexStateSelector, state => state.cell);\nexport const gridTabIndexColumnHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeader);\nexport const gridTabIndexColumnHeaderFilterSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeaderFilter);\nexport const gridTabIndexColumnGroupHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnGroupHeader);","import { createSelector } from '../../../utils/createSelector';\nexport const gridHeaderFilteringStateSelector = state => state.headerFiltering;\nexport const gridHeaderFilteringEnabledSelector = createSelector(gridHeaderFilteringStateSelector,\n// No initialization in MIT, so we need to default to false to be used by `getTotalHeaderHeight`\nheaderFilteringState => headerFilteringState?.enabled ?? false);\nexport const gridHeaderFilteringEditFieldSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.editing);\nexport const gridHeaderFilteringMenuSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.menuOpen);","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridExpandedSortedRowEntriesSelector, gridExpandedSortedRowIdsSelector, gridFilteredSortedTopLevelRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\nimport { getPageCount } from './gridPaginationUtils';\n\n/**\n * @category Pagination\n * @ignore - do not document.\n */\nexport const gridPaginationSelector = state => state.pagination;\n\n/**\n * Get the pagination model\n * @category Pagination\n */\nexport const gridPaginationModelSelector = createSelector(gridPaginationSelector, pagination => pagination.paginationModel);\n\n/**\n * Get the row count\n * @category Pagination\n */\nexport const gridPaginationRowCountSelector = createSelector(gridPaginationSelector, pagination => pagination.rowCount);\n\n/**\n * Get the pagination meta\n * @category Pagination\n */\nexport const gridPaginationMetaSelector = createSelector(gridPaginationSelector, pagination => pagination.meta);\n\n/**\n * Get the index of the page to render if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.page);\n\n/**\n * Get the maximum amount of rows to display on a single page if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSizeSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.pageSize);\n\n/**\n * Get the amount of pages needed to display all the rows if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageCountSelector = createSelector(gridPaginationModelSelector, gridPaginationRowCountSelector, (paginationModel, rowCount) => getPageCount(rowCount, paginationModel.pageSize, paginationModel.page));\n\n/**\n * Get the index of the first and the last row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginationRowRangeSelector = createSelectorMemoized(gridPaginationModelSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, gridExpandedSortedRowEntriesSelector, gridFilteredSortedTopLevelRowEntriesSelector, (paginationModel, rowTree, rowTreeDepth, visibleSortedRowEntries, visibleSortedTopLevelRowEntries) => {\n  const visibleTopLevelRowCount = visibleSortedTopLevelRowEntries.length;\n  const topLevelFirstRowIndex = Math.min(paginationModel.pageSize * paginationModel.page, visibleTopLevelRowCount - 1);\n  const topLevelLastRowIndex = Math.min(topLevelFirstRowIndex + paginationModel.pageSize - 1, visibleTopLevelRowCount - 1);\n\n  // The range contains no element\n  if (topLevelFirstRowIndex === -1 || topLevelLastRowIndex === -1) {\n    return null;\n  }\n\n  // The tree is flat, there is no need to look for children\n  if (rowTreeDepth < 2) {\n    return {\n      firstRowIndex: topLevelFirstRowIndex,\n      lastRowIndex: topLevelLastRowIndex\n    };\n  }\n  const topLevelFirstRow = visibleSortedTopLevelRowEntries[topLevelFirstRowIndex];\n  const topLevelRowsInCurrentPageCount = topLevelLastRowIndex - topLevelFirstRowIndex + 1;\n  const firstRowIndex = visibleSortedRowEntries.findIndex(row => row.id === topLevelFirstRow.id);\n  let lastRowIndex = firstRowIndex;\n  let topLevelRowAdded = 0;\n  while (lastRowIndex < visibleSortedRowEntries.length && topLevelRowAdded <= topLevelRowsInCurrentPageCount) {\n    const row = visibleSortedRowEntries[lastRowIndex];\n    const depth = rowTree[row.id]?.depth;\n    if (depth === undefined) {\n      lastRowIndex += 1;\n    } else {\n      if (topLevelRowAdded < topLevelRowsInCurrentPageCount || depth > 0) {\n        lastRowIndex += 1;\n      }\n      if (depth === 0) {\n        topLevelRowAdded += 1;\n      }\n    }\n  }\n  return {\n    firstRowIndex,\n    lastRowIndex: lastRowIndex - 1\n  };\n});\n\n/**\n * Get the id and the model of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridPaginationRowRangeSelector, (visibleSortedRowEntries, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowEntries.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n\n/**\n * Get the id of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridPaginationRowRangeSelector, (visibleSortedRowIds, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowIds.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});","import { GridSignature } from '../../utils';\nconst MAX_PAGE_SIZE = 100;\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\nexport const getPageCount = (rowCount, pageSize, page) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n  if (rowCount === -1) {\n    // With unknown row-count, we can assume a page after the current one\n    return page + 2;\n  }\n  return 0;\n};\nexport const getDefaultGridPaginationModel = autoPageSize => ({\n  page: 0,\n  pageSize: autoPageSize ? 0 : 100\n});\nexport const getValidPage = (page, pageCount = 0) => {\n  if (pageCount === 0) {\n    return page;\n  }\n  return Math.max(Math.min(page, pageCount - 1), 0);\n};\nexport const throwIfPageSizeExceedsTheLimit = (pageSize, signatureProp) => {\n  if (signatureProp === GridSignature.DataGrid && pageSize > MAX_PAGE_SIZE) {\n    throw new Error(['MUI X: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n  }\n};","export const gridPreferencePanelStateSelector = state => state.preferencePanel;","var GridPreferencePanelsValue = /*#__PURE__*/function (GridPreferencePanelsValue) {\n  GridPreferencePanelsValue[\"filters\"] = \"filters\";\n  GridPreferencePanelsValue[\"columns\"] = \"columns\";\n  return GridPreferencePanelsValue;\n}(GridPreferencePanelsValue || {});\nexport { GridPreferencePanelsValue };","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nexport const gridRowSelectionStateSelector = state => state.rowSelection;\nexport const selectedGridRowsCountSelector = createSelector(gridRowSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelectorMemoized(gridRowSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelectorMemoized(gridRowSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));","import { GridSignature } from '../../utils/useGridApiEventHandler';\nexport function isMultipleRowSelectionEnabled(props) {\n  if (props.signature === GridSignature.DataGrid) {\n    // DataGrid Community has multiple row selection enabled only if checkbox selection is enabled.\n    return props.checkboxSelection && props.disableMultipleRowSelection !== true;\n  }\n  return !props.disableMultipleRowSelection;\n}","export const gridRowsMetaSelector = state => state.rowsMeta;","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nconst gridRowsStateSelector = state => state.rows;\nexport const gridRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalRowCount);\nexport const gridRowsLoadingSelector = createSelector(gridRowsStateSelector, rows => rows.loading);\nexport const gridTopLevelRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\n\n// TODO rows v6: Rename\nexport const gridRowsLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToModelLookup);\nexport const gridRowsDataRowIdToIdLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToIdLookup);\nexport const gridRowTreeSelector = createSelector(gridRowsStateSelector, rows => rows.tree);\nexport const gridRowGroupsToFetchSelector = createSelector(gridRowsStateSelector, rows => rows.groupsToFetch);\nexport const gridRowGroupingNameSelector = createSelector(gridRowsStateSelector, rows => rows.groupingName);\nexport const gridRowTreeDepthsSelector = createSelector(gridRowsStateSelector, rows => rows.treeDepths);\nexport const gridRowMaximumTreeDepthSelector = createSelectorMemoized(gridRowsStateSelector, rows => {\n  const entries = Object.entries(rows.treeDepths);\n  if (entries.length === 0) {\n    return 1;\n  }\n  return entries.filter(([, nodeCount]) => nodeCount > 0).map(([depth]) => Number(depth)).sort((a, b) => b - a)[0] + 1;\n});\nexport const gridDataRowIdsSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIds);\n\n/**\n * @ignore - do not document.\n */\nexport const gridAdditionalRowGroupsSelector = createSelector(gridRowsStateSelector, rows => rows?.additionalRowGroups);\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsSelector = createSelectorMemoized(gridAdditionalRowGroupsSelector, additionalRowGroups => {\n  const rawPinnedRows = additionalRowGroups?.pinnedRows;\n  return {\n    bottom: rawPinnedRows?.bottom?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? [],\n    top: rawPinnedRows?.top?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? []\n  };\n});\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsCountSelector = createSelector(gridPinnedRowsSelector, pinnedRows => {\n  return (pinnedRows?.top?.length || 0) + (pinnedRows?.bottom?.length || 0);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\nimport { gridDimensionsSelector } from '../dimensions/gridDimensionsSelectors';\nexport const GRID_ROOT_GROUP_ID = `auto-generated-group-node-root`;\nexport const GRID_ID_AUTOGENERATED = Symbol('mui.id_autogenerated');\nexport const buildRootGroup = () => ({\n  type: 'group',\n  id: GRID_ROOT_GROUP_ID,\n  depth: -1,\n  groupingField: null,\n  groupingKey: null,\n  isAutoGenerated: true,\n  children: [],\n  childrenFromPath: {},\n  childrenExpanded: true,\n  parent: null\n});\n\n/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\nexport function checkGridRowIdIsValid(id, row, detailErrorMessage = 'A row was provided without id in the rows prop:') {\n  if (id == null) {\n    throw new Error(['MUI X: The data grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport const getRowIdFromRowModel = (rowModel, getRowId, detailErrorMessage) => {\n  const id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n};\nexport const createRowsInternalCache = ({\n  rows,\n  getRowId,\n  loading,\n  rowCount\n}) => {\n  const updates = {\n    type: 'full',\n    rows: []\n  };\n  const dataRowIdToModelLookup = {};\n  const dataRowIdToIdLookup = {};\n  for (let i = 0; i < rows.length; i += 1) {\n    const model = rows[i];\n    const id = getRowIdFromRowModel(model, getRowId);\n    dataRowIdToModelLookup[id] = model;\n    dataRowIdToIdLookup[id] = id;\n    updates.rows.push(id);\n  }\n  return {\n    rowsBeforePartialUpdates: rows,\n    loadingPropBeforePartialUpdates: loading,\n    rowCountPropBeforePartialUpdates: rowCount,\n    updates,\n    dataRowIdToIdLookup,\n    dataRowIdToModelLookup\n  };\n};\nexport const getTopLevelRowCount = ({\n  tree,\n  rowCountProp = 0\n}) => {\n  const rootGroupNode = tree[GRID_ROOT_GROUP_ID];\n  return Math.max(rowCountProp, rootGroupNode.children.length + (rootGroupNode.footerId == null ? 0 : 1));\n};\nexport const getRowsStateFromCache = ({\n  apiRef,\n  rowCountProp = 0,\n  loadingProp,\n  previousTree,\n  previousTreeDepths,\n  previousGroupsToFetch\n}) => {\n  const cache = apiRef.current.caches.rows;\n\n  // 1. Apply the \"rowTreeCreation\" family processing.\n  const {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIds: unProcessedDataRowIds,\n    groupingName,\n    groupsToFetch = []\n  } = apiRef.current.applyStrategyProcessor('rowTreeCreation', {\n    previousTree,\n    previousTreeDepths,\n    updates: cache.updates,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup,\n    previousGroupsToFetch\n  });\n\n  // 2. Apply the \"hydrateRows\" pipe-processing.\n  const groupingParamsWithHydrateRows = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIds: unProcessedDataRowIds,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup\n  });\n\n  // 3. Reset the cache updates\n  apiRef.current.caches.rows.updates = {\n    type: 'partial',\n    actions: {\n      insert: [],\n      modify: [],\n      remove: []\n    },\n    idToActionLookup: {}\n  };\n  return _extends({}, groupingParamsWithHydrateRows, {\n    totalRowCount: Math.max(rowCountProp, groupingParamsWithHydrateRows.dataRowIds.length),\n    totalTopLevelRowCount: getTopLevelRowCount({\n      tree: groupingParamsWithHydrateRows.tree,\n      rowCountProp\n    }),\n    groupingName,\n    loading: loadingProp,\n    groupsToFetch\n  });\n};\nexport const isAutoGeneratedRow = rowNode => rowNode.type === 'skeletonRow' || rowNode.type === 'footer' || rowNode.type === 'group' && rowNode.isAutoGenerated || rowNode.type === 'pinnedRow' && rowNode.isAutoGenerated;\nexport const getTreeNodeDescendants = (tree, parentId, skipAutoGeneratedRows) => {\n  const node = tree[parentId];\n  if (node.type !== 'group') {\n    return [];\n  }\n  const validDescendants = [];\n  for (let i = 0; i < node.children.length; i += 1) {\n    const child = node.children[i];\n    if (!skipAutoGeneratedRows || !isAutoGeneratedRow(tree[child])) {\n      validDescendants.push(child);\n    }\n    const childDescendants = getTreeNodeDescendants(tree, child, skipAutoGeneratedRows);\n    for (let j = 0; j < childDescendants.length; j += 1) {\n      validDescendants.push(childDescendants[j]);\n    }\n  }\n  if (!skipAutoGeneratedRows && node.footerId != null) {\n    validDescendants.push(node.footerId);\n  }\n  return validDescendants;\n};\nexport const updateCacheWithNewRows = ({\n  previousCache,\n  getRowId,\n  updates,\n  groupKeys\n}) => {\n  if (previousCache.updates.type === 'full') {\n    throw new Error('MUI X: Unable to prepare a partial update if a full update is not applied yet.');\n  }\n\n  // Remove duplicate updates.\n  // A server can batch updates, and send several updates for the same row in one fn call.\n  const uniqueUpdates = new Map();\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    if (uniqueUpdates.has(id)) {\n      uniqueUpdates.set(id, _extends({}, uniqueUpdates.get(id), update));\n    } else {\n      uniqueUpdates.set(id, update);\n    }\n  });\n  const partialUpdates = {\n    type: 'partial',\n    actions: {\n      insert: [...(previousCache.updates.actions.insert ?? [])],\n      modify: [...(previousCache.updates.actions.modify ?? [])],\n      remove: [...(previousCache.updates.actions.remove ?? [])]\n    },\n    idToActionLookup: _extends({}, previousCache.updates.idToActionLookup),\n    groupKeys\n  };\n  const dataRowIdToModelLookup = _extends({}, previousCache.dataRowIdToModelLookup);\n  const dataRowIdToIdLookup = _extends({}, previousCache.dataRowIdToIdLookup);\n  const alreadyAppliedActionsToRemove = {\n    insert: {},\n    modify: {},\n    remove: {}\n  };\n\n  // Depending on the action already applied to the data row,\n  // We might want drop the already-applied-update.\n  // For instance:\n  // - if you delete then insert, then you don't want to apply the deletion in the tree.\n  // - if you insert, then modify, then you just want to apply the insertion in the tree.\n  uniqueUpdates.forEach((partialRow, id) => {\n    const actionAlreadyAppliedToRow = partialUpdates.idToActionLookup[id];\n\n    // Action === \"delete\"\n    // eslint-disable-next-line no-underscore-dangle\n    if (partialRow._action === 'delete') {\n      // If the data row has been removed since the last state update,\n      // Then do nothing.\n      if (actionAlreadyAppliedToRow === 'remove' || !dataRowIdToModelLookup[id]) {\n        return;\n      }\n\n      // If the data row has been inserted / modified since the last state update,\n      // Then drop this \"insert\" / \"modify\" update.\n      if (actionAlreadyAppliedToRow != null) {\n        alreadyAppliedActionsToRemove[actionAlreadyAppliedToRow][id] = true;\n      }\n\n      // Remove the data row from the lookups and add it to the \"delete\" update.\n      partialUpdates.actions.remove.push(id);\n      delete dataRowIdToModelLookup[id];\n      delete dataRowIdToIdLookup[id];\n      return;\n    }\n    const oldRow = dataRowIdToModelLookup[id];\n\n    // Action === \"modify\"\n    if (oldRow) {\n      // If the data row has been removed since the last state update,\n      // Then drop this \"remove\" update and add it to the \"modify\" update instead.\n      if (actionAlreadyAppliedToRow === 'remove') {\n        alreadyAppliedActionsToRemove.remove[id] = true;\n        partialUpdates.actions.modify.push(id);\n      }\n      // If the date has not been inserted / modified since the last state update,\n      // Then add it to the \"modify\" update (if it has been inserted it should just remain \"inserted\").\n      else if (actionAlreadyAppliedToRow == null) {\n        partialUpdates.actions.modify.push(id);\n      }\n\n      // Update the data row lookups.\n      dataRowIdToModelLookup[id] = _extends({}, oldRow, partialRow);\n      return;\n    }\n\n    // Action === \"insert\"\n    // If the data row has been removed since the last state update,\n    // Then drop the \"remove\" update and add it to the \"insert\" update instead.\n    if (actionAlreadyAppliedToRow === 'remove') {\n      alreadyAppliedActionsToRemove.remove[id] = true;\n      partialUpdates.actions.insert.push(id);\n    }\n    // If the data row has not been inserted since the last state update,\n    // Then add it to the \"insert\" update.\n    // `actionAlreadyAppliedToRow` can't be equal to \"modify\", otherwise we would have an `oldRow` above.\n    else if (actionAlreadyAppliedToRow == null) {\n      partialUpdates.actions.insert.push(id);\n    }\n\n    // Update the data row lookups.\n    dataRowIdToModelLookup[id] = partialRow;\n    dataRowIdToIdLookup[id] = id;\n  });\n  const actionTypeWithActionsToRemove = Object.keys(alreadyAppliedActionsToRemove);\n  for (let i = 0; i < actionTypeWithActionsToRemove.length; i += 1) {\n    const actionType = actionTypeWithActionsToRemove[i];\n    const idsToRemove = alreadyAppliedActionsToRemove[actionType];\n    if (Object.keys(idsToRemove).length > 0) {\n      partialUpdates.actions[actionType] = partialUpdates.actions[actionType].filter(id => !idsToRemove[id]);\n    }\n  }\n  return {\n    dataRowIdToModelLookup,\n    dataRowIdToIdLookup,\n    updates: partialUpdates,\n    rowsBeforePartialUpdates: previousCache.rowsBeforePartialUpdates,\n    loadingPropBeforePartialUpdates: previousCache.loadingPropBeforePartialUpdates,\n    rowCountPropBeforePartialUpdates: previousCache.rowCountPropBeforePartialUpdates\n  };\n};\nexport function calculatePinnedRowsHeight(apiRef) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsHeight = pinnedRows?.top?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  const bottomPinnedRowsHeight = pinnedRows?.bottom?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  return {\n    top: topPinnedRowsHeight,\n    bottom: bottomPinnedRowsHeight\n  };\n}\nexport function getMinimalContentHeight(apiRef) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  return `var(--DataGrid-overlayHeight, ${2 * dimensions.rowHeight}px)`;\n}\nexport function computeRowsUpdates(apiRef, updates, getRowId) {\n  const nonPinnedRowsUpdates = [];\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'pinnedRow') {\n      // @ts-ignore because otherwise `release:build` doesn't work\n      const pinnedRowsCache = apiRef.current.caches.pinnedRows;\n      const prevModel = pinnedRowsCache.idLookup[id];\n      if (prevModel) {\n        pinnedRowsCache.idLookup[id] = _extends({}, prevModel, update);\n      }\n    } else {\n      nonPinnedRowsUpdates.push(update);\n    }\n  });\n  return nonPinnedRowsUpdates;\n}","import * as React from 'react';\nimport { getGridCellElement, getGridColumnHeaderElement, getGridRowElement } from '../../../utils/domUtils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nexport class MissingRowIdError extends Error {}\n\n/**\n * @requires useGridColumns (method)\n * @requires useGridRows (method)\n * @requires useGridFocus (state)\n * @requires useGridEditing (method)\n * TODO: Impossible priority - useGridEditing also needs to be after useGridParamsApi\n * TODO: Impossible priority - useGridFocus also needs to be after useGridParamsApi\n */\nexport function useGridParamsApi(apiRef) {\n  const getColumnHeaderParams = React.useCallback(field => ({\n    field,\n    colDef: apiRef.current.getColumn(field)\n  }), [apiRef]);\n  const getRowParams = React.useCallback(id => {\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const params = {\n      id,\n      columns: apiRef.current.getAllColumns(),\n      row\n    };\n    return params;\n  }, [apiRef]);\n  const getCellParams = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n    if (!row || !rowNode) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const rawValue = row[field];\n    const value = colDef?.valueGetter ? colDef.valueGetter(rawValue, row, colDef, apiRef) : rawValue;\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      colDef,\n      cellMode: apiRef.current.getCellMode(id, field),\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1,\n      value,\n      formattedValue: value,\n      isEditable: false\n    };\n    if (colDef && colDef.valueFormatter) {\n      params.formattedValue = colDef.valueFormatter(value, row, colDef, apiRef);\n    }\n    params.isEditable = colDef && apiRef.current.isCellEditable(params);\n    return params;\n  }, [apiRef]);\n  const getCellValue = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    return colDef.valueGetter(row[colDef.field], row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowValue = React.useCallback((row, colDef) => {\n    const field = colDef.field;\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    const value = row[colDef.field];\n    return colDef.valueGetter(value, row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowFormattedValue = React.useCallback((row, colDef) => {\n    const value = getRowValue(row, colDef);\n    if (!colDef || !colDef.valueFormatter) {\n      return value;\n    }\n    return colDef.valueFormatter(value, row, colDef, apiRef);\n  }, [apiRef, getRowValue]);\n  const getColumnHeaderElement = React.useCallback(field => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridColumnHeaderElement(apiRef.current.rootElementRef.current, field);\n  }, [apiRef]);\n  const getRowElement = React.useCallback(id => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridRowElement(apiRef.current.rootElementRef.current, id);\n  }, [apiRef]);\n  const getCellElement = React.useCallback((id, field) => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridCellElement(apiRef.current.rootElementRef.current, {\n      id,\n      field\n    });\n  }, [apiRef]);\n  const paramsApi = {\n    getCellValue,\n    getCellParams,\n    getCellElement,\n    getRowValue,\n    getRowFormattedValue,\n    getRowParams,\n    getRowElement,\n    getColumnHeaderParams,\n    getColumnHeaderElement\n  };\n  useGridApiMethod(apiRef, paramsApi, 'public');\n}","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridRowTreeSelector, gridRowsLookupSelector } from '../rows/gridRowsSelector';\nimport { GRID_ID_AUTOGENERATED, isAutoGeneratedRow } from '../rows/gridRowsUtils';\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nconst gridSortingStateSelector = state => state.sorting;\n\n/**\n * Get the id of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowIdsSelector = createSelector(gridSortingStateSelector, sortingState => sortingState.sortedRows);\n\n/**\n * Get the id and the model of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowEntriesSelector = createSelectorMemoized(gridSortedRowIdsSelector, gridRowsLookupSelector, gridRowTreeSelector, (sortedIds, idRowsLookup, rowTree) => sortedIds.reduce((acc, id) => {\n  const model = idRowsLookup[id];\n  if (model) {\n    acc.push({\n      id,\n      model\n    });\n  }\n  const rowNode = rowTree[id];\n  if (rowNode && isAutoGeneratedRow(rowNode)) {\n    acc.push({\n      id,\n      model: {\n        [GRID_ID_AUTOGENERATED]: id\n      }\n    });\n  }\n  return acc;\n}, []));\n\n/**\n * Get the current sorting model.\n * @category Sorting\n */\nexport const gridSortModelSelector = createSelector(gridSortingStateSelector, sorting => sorting.sortModel);\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortColumnLookupSelector = createSelectorMemoized(gridSortModelSelector, sortModel => {\n  const result = sortModel.reduce((res, sortItem, index) => {\n    res[sortItem.field] = {\n      sortDirection: sortItem.sort,\n      sortIndex: sortModel.length > 1 ? index + 1 : undefined\n    };\n    return res;\n  }, {});\n  return result;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { buildWarning } from '../../../utils/warning';\nconst sortModelDisableMultiColumnsSortingWarning = buildWarning(['MUI X: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nexport const sanitizeSortModel = (model, disableMultipleColumnsSorting) => {\n  if (disableMultipleColumnsSorting && model.length > 1) {\n    if (process.env.NODE_ENV !== 'production') {\n      sortModelDisableMultiColumnsSortingWarning();\n    }\n    return [model[0]];\n  }\n  return model;\n};\nexport const mergeStateWithSortModel = (sortModel, disableMultipleColumnsSorting) => state => _extends({}, state, {\n  sorting: _extends({}, state.sorting, {\n    sortModel: sanitizeSortModel(sortModel, disableMultipleColumnsSorting)\n  })\n});\nconst isDesc = direction => direction === 'desc';\n\n/**\n * Transform an item of the sorting model into a method comparing two rows.\n * @param {GridSortItem} sortItem The sort item we want to apply.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridParsedSortItem | null} The parsed sort item. Returns `null` is the sort item is not valid.\n */\nconst parseSortItem = (sortItem, apiRef) => {\n  const column = apiRef.current.getColumn(sortItem.field);\n  if (!column || sortItem.sort === null) {\n    return null;\n  }\n  let comparator;\n  if (column.getSortComparator) {\n    comparator = column.getSortComparator(sortItem.sort);\n  } else {\n    comparator = isDesc(sortItem.sort) ? (...args) => -1 * column.sortComparator(...args) : column.sortComparator;\n  }\n  if (!comparator) {\n    return null;\n  }\n  const getSortCellParams = id => ({\n    id,\n    field: column.field,\n    rowNode: apiRef.current.getRowNode(id),\n    value: apiRef.current.getCellValue(id, column.field),\n    api: apiRef.current\n  });\n  return {\n    getSortCellParams,\n    comparator\n  };\n};\n/**\n * Compare two rows according to a list of valid sort items.\n * The `row1Params` and `row2Params` must have the same length as `parsedSortItems`,\n * and each of their index must contain the `GridSortCellParams` of the sort item with the same index.\n * @param {GridParsedSortItem[]} parsedSortItems All the sort items with which we want to compare the rows.\n * @param {GridRowAggregatedSortingParams} row1 The node and params of the 1st row for each sort item.\n * @param {GridRowAggregatedSortingParams} row2 The node and params of the 2nd row for each sort item.\n */\nconst compareRows = (parsedSortItems, row1, row2) => {\n  return parsedSortItems.reduce((res, item, index) => {\n    if (res !== 0) {\n      // return the results of the first comparator which distinguish the two rows\n      return res;\n    }\n    const sortCellParams1 = row1.params[index];\n    const sortCellParams2 = row2.params[index];\n    res = item.comparator(sortCellParams1.value, sortCellParams2.value, sortCellParams1, sortCellParams2);\n    return res;\n  }, 0);\n};\n\n/**\n * Generates a method to easily sort a list of rows according to the current sort model.\n * @param {GridSortModel} sortModel The model with which we want to sort the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridSortingModelApplier | null} A method that generates a list of sorted row ids from a list of rows according to the current sort model. If `null`, we consider that the rows should remain in the order there were provided.\n */\nexport const buildAggregatedSortingApplier = (sortModel, apiRef) => {\n  const comparatorList = sortModel.map(item => parseSortItem(item, apiRef)).filter(comparator => !!comparator);\n  if (comparatorList.length === 0) {\n    return null;\n  }\n  return rowList => rowList.map(node => ({\n    node,\n    params: comparatorList.map(el => el.getSortCellParams(node.id))\n  })).sort((a, b) => compareRows(comparatorList, a, b)).map(row => row.node.id);\n};\nexport const getNextGridSortDirection = (sortingOrder, current) => {\n  const currentIdx = sortingOrder.indexOf(current);\n  if (!current || currentIdx === -1 || currentIdx + 1 === sortingOrder.length) {\n    return sortingOrder[0];\n  }\n  return sortingOrder[currentIdx + 1];\n};\nconst gridNillComparator = (v1, v2) => {\n  if (v1 == null && v2 != null) {\n    return -1;\n  }\n  if (v2 == null && v1 != null) {\n    return 1;\n  }\n  if (v1 == null && v2 == null) {\n    return 0;\n  }\n  return null;\n};\nconst collator = new Intl.Collator();\nexport const gridStringOrNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (typeof value1 === 'string') {\n    return collator.compare(value1.toString(), value2.toString());\n  }\n  return value1 - value2;\n};\nexport const gridNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  return Number(value1) - Number(value2);\n};\nexport const gridDateComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (value1 > value2) {\n    return 1;\n  }\n  if (value1 < value2) {\n    return -1;\n  }\n  return 0;\n};","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\n/**\n * Get the columns state\n * @category Virtualization\n */\nexport const gridVirtualizationSelector = state => state.virtualization;\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabled);\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationColumnEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForColumns);\n\n/**\n * Get the render context\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextSelector = createSelector(gridVirtualizationSelector, state => state.renderContext);\n\n/**\n * Get the render context, with only columns filled in.\n * This is cached, so it can be used to only re-render when the column interval changes.\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextColumnsSelector = createSelectorMemoized(state => state.virtualization.renderContext.firstColumnIndex, state => state.virtualization.renderContext.lastColumnIndex, (firstColumnIndex, lastColumnIndex) => ({\n  firstColumnIndex,\n  lastColumnIndex\n}));","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst isDevEnvironment = process.env.NODE_ENV === 'development';\nconst noop = () => {};\nexport function useResizeObserver(ref, fn, enabled) {\n  const fnRef = React.useRef(null);\n  fnRef.current = fn;\n  useEnhancedEffect(() => {\n    if (enabled === false || typeof ResizeObserver === 'undefined') {\n      return noop;\n    }\n    let frameID = 0;\n    const target = ref.current;\n    const observer = new ResizeObserver(entries => {\n      // See https://github.com/mui/mui-x/issues/8733\n      // In dev, we avoid the React warning by moving the task to the next frame.\n      // In prod, we want the task to run in the same frame as to avoid tear.\n      if (isDevEnvironment) {\n        frameID = requestAnimationFrame(() => {\n          fnRef.current(entries);\n        });\n      } else {\n        fnRef.current(entries);\n      }\n    });\n    if (target) {\n      observer.observe(target);\n    }\n    return () => {\n      if (frameID) {\n        cancelAnimationFrame(frameID);\n      }\n      observer.disconnect();\n    };\n  }, [ref, enabled]);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport useTimeout from '@mui/utils/useTimeout';\nimport { useResizeObserver } from '@mui/x-internals/useResizeObserver';\nimport { useTheme } from '@mui/material/styles';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { useRunOnce } from '../../utils/useRunOnce';\nimport { gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnPositionsSelector, gridHasColSpanSelector } from '../columns/gridColumnsSelector';\nimport { gridDimensionsSelector } from '../dimensions/gridDimensionsSelectors';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nimport { useGridVisibleRows, getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiEventHandler } from '../../utils';\nimport { clamp, range } from '../../../utils/utils';\nimport { selectedIdsLookupSelector } from '../rowSelection/gridRowSelectionSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getFirstNonSpannedColumnToRender } from '../columns/gridColumnsUtils';\nimport { getMinimalContentHeight } from '../rows/gridRowsUtils';\nimport { gridRenderContextSelector, gridVirtualizationEnabledSelector, gridVirtualizationColumnEnabledSelector } from './gridVirtualizationSelectors';\nimport { EMPTY_RENDER_CONTEXT } from './useGridVirtualization';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MINIMUM_COLUMN_WIDTH = 50;\nvar ScrollDirection = /*#__PURE__*/function (ScrollDirection) {\n  ScrollDirection[ScrollDirection[\"NONE\"] = 0] = \"NONE\";\n  ScrollDirection[ScrollDirection[\"UP\"] = 1] = \"UP\";\n  ScrollDirection[ScrollDirection[\"DOWN\"] = 2] = \"DOWN\";\n  ScrollDirection[ScrollDirection[\"LEFT\"] = 3] = \"LEFT\";\n  ScrollDirection[ScrollDirection[\"RIGHT\"] = 4] = \"RIGHT\";\n  return ScrollDirection;\n}(ScrollDirection || {});\nconst EMPTY_SCROLL_POSITION = {\n  top: 0,\n  left: 0\n};\nexport const EMPTY_DETAIL_PANELS = Object.freeze(new Map());\nconst createScrollCache = (mode, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) => ({\n  direction: ScrollDirection.NONE,\n  buffer: bufferForDirection(mode, ScrollDirection.NONE, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer)\n});\nlet isJSDOM = false;\ntry {\n  if (typeof window !== 'undefined') {\n    isJSDOM = /jsdom/.test(window.navigator.userAgent);\n  }\n} catch (_) {\n  /* ignore */\n}\nexport const useGridVirtualScroller = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const enabled = useGridSelector(apiRef, gridVirtualizationEnabledSelector) && !isJSDOM;\n  const enabledForColumns = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector) && !isJSDOM;\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const outerSize = dimensions.viewportOuterSize;\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const hasBottomPinnedRows = pinnedRows.bottom.length > 0;\n  const [panels, setPanels] = React.useState(EMPTY_DETAIL_PANELS);\n  const theme = useTheme();\n  const cellFocus = useGridSelector(apiRef, gridFocusCellSelector);\n  const cellTabIndex = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const selectedRowsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const gridRootRef = apiRef.current.rootElementRef;\n  const mainRef = apiRef.current.mainElementRef;\n  const scrollerRef = apiRef.current.virtualScrollerRef;\n  const scrollbarVerticalRef = React.useRef(null);\n  const scrollbarHorizontalRef = React.useRef(null);\n  const contentHeight = dimensions.contentSize.height;\n  const columnsTotalWidth = dimensions.columnsTotalWidth;\n  const hasColSpan = useGridSelector(apiRef, gridHasColSpanSelector);\n  useResizeObserver(mainRef, () => apiRef.current.resize());\n\n  /*\n   * Scroll context logic\n   * ====================\n   * We only render the cells contained in the `renderContext`. However, when the user starts scrolling the grid\n   * in a direction, we want to render as many cells as possible in that direction, as to avoid presenting white\n   * areas if the user scrolls too fast/far and the viewport ends up in a region we haven't rendered yet. To render\n   * more cells, we store some offsets to add to the viewport in `scrollCache.buffer`. Those offsets make the render\n   * context wider in the direction the user is going, but also makes the buffer around the viewport `0` for the\n   * dimension (horizontal or vertical) in which the user is not scrolling. So if the normal viewport is 8 columns\n   * wide, with a 1 column buffer (10 columns total), then we want it to be exactly 8 columns wide during vertical\n   * scroll.\n   * However, we don't want the rows in the old context to re-render from e.g. 10 columns to 8 columns, because that's\n   * work that's not necessary. Thus we store the context at the start of the scroll in `frozenContext`, and the rows\n   * that are part of this old context will keep their same render context as to avoid re-rendering.\n   */\n  const scrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousContextScrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousRowContext = React.useRef(EMPTY_RENDER_CONTEXT);\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\n  const scrollTimeout = useTimeout();\n  const frozenContext = React.useRef(undefined);\n  const scrollCache = useLazyRef(() => createScrollCache(theme.direction, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6)).current;\n  const focusedCell = {\n    rowIndex: React.useMemo(() => cellFocus ? currentPage.rows.findIndex(row => row.id === cellFocus.id) : -1, [cellFocus, currentPage.rows]),\n    columnIndex: React.useMemo(() => cellFocus ? visibleColumns.findIndex(column => column.field === cellFocus.field) : -1, [cellFocus, visibleColumns])\n  };\n  const updateRenderContext = React.useCallback(nextRenderContext => {\n    if (areRenderContextsEqual(nextRenderContext, apiRef.current.state.virtualization.renderContext)) {\n      return;\n    }\n    const didRowsIntervalChange = nextRenderContext.firstRowIndex !== previousRowContext.current.firstRowIndex || nextRenderContext.lastRowIndex !== previousRowContext.current.lastRowIndex;\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        virtualization: _extends({}, state.virtualization, {\n          renderContext: nextRenderContext\n        })\n      });\n    });\n\n    // The lazy-loading hook is listening to `renderedRowsIntervalChange`,\n    // but only does something if the dimensions are also available.\n    // So we wait until we have valid dimensions before publishing the first event.\n    if (dimensions.isReady && didRowsIntervalChange) {\n      previousRowContext.current = nextRenderContext;\n      apiRef.current.publishEvent('renderedRowsIntervalChange', nextRenderContext);\n    }\n    previousContextScrollPosition.current = scrollPosition.current;\n  }, [apiRef, dimensions.isReady]);\n  const triggerUpdateRenderContext = () => {\n    const newScroll = {\n      top: scrollerRef.current.scrollTop,\n      left: scrollerRef.current.scrollLeft\n    };\n    const dx = newScroll.left - scrollPosition.current.left;\n    const dy = newScroll.top - scrollPosition.current.top;\n    const isScrolling = dx !== 0 || dy !== 0;\n    scrollPosition.current = newScroll;\n    const direction = isScrolling ? directionForDelta(dx, dy) : ScrollDirection.NONE;\n\n    // Since previous render, we have scrolled...\n    const rowScroll = Math.abs(scrollPosition.current.top - previousContextScrollPosition.current.top);\n    const columnScroll = Math.abs(scrollPosition.current.left - previousContextScrollPosition.current.left);\n\n    // PERF: use the computed minimum column width instead of a static one\n    const didCrossThreshold = rowScroll >= dimensions.rowHeight || columnScroll >= MINIMUM_COLUMN_WIDTH;\n    const didChangeDirection = scrollCache.direction !== direction;\n    const shouldUpdate = didCrossThreshold || didChangeDirection;\n    if (!shouldUpdate) {\n      return renderContext;\n    }\n\n    // Render a new context\n\n    if (didChangeDirection) {\n      switch (direction) {\n        case ScrollDirection.NONE:\n        case ScrollDirection.LEFT:\n        case ScrollDirection.RIGHT:\n          frozenContext.current = undefined;\n          break;\n        default:\n          frozenContext.current = renderContext;\n          break;\n      }\n    }\n    scrollCache.direction = direction;\n    scrollCache.buffer = bufferForDirection(theme.direction, direction, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6);\n    const inputs = inputsSelector(apiRef, rootProps, enabled, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n\n    // Prevents batching render context changes\n    ReactDOM.flushSync(() => {\n      updateRenderContext(nextRenderContext);\n    });\n    scrollTimeout.start(1000, triggerUpdateRenderContext);\n    return nextRenderContext;\n  };\n  const forceUpdateRenderContext = () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabled, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    updateRenderContext(nextRenderContext);\n  };\n  const handleScroll = useEventCallback(event => {\n    const {\n      scrollTop,\n      scrollLeft\n    } = event.currentTarget;\n\n    // On iOS and macOS, negative offsets are possible when swiping past the start\n    if (scrollTop < 0) {\n      return;\n    }\n    if (theme.direction === 'ltr') {\n      if (scrollLeft < 0) {\n        return;\n      }\n    }\n    if (theme.direction === 'rtl') {\n      if (scrollLeft > 0) {\n        return;\n      }\n    }\n    const nextRenderContext = triggerUpdateRenderContext();\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollTop,\n      left: scrollLeft,\n      renderContext: nextRenderContext\n    });\n  });\n  const handleWheel = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerWheel', {}, event);\n  });\n  const handleTouchMove = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerTouchMove', {}, event);\n  });\n  const getRows = (params = {}) => {\n    if (!params.rows && !currentPage.range) {\n      return [];\n    }\n    const baseRenderContext = params.renderContext ?? renderContext;\n    const isLastSection = !hasBottomPinnedRows && params.position === undefined || hasBottomPinnedRows && params.position === 'bottom';\n    const isPinnedSection = params.position !== undefined;\n    let rowIndexOffset;\n    // FIXME: Why is the switch check exhaustiveness not validated with typescript-eslint?\n    // eslint-disable-next-line default-case\n    switch (params.position) {\n      case 'top':\n        rowIndexOffset = 0;\n        break;\n      case 'bottom':\n        rowIndexOffset = pinnedRows.top.length + currentPage.rows.length;\n        break;\n      case undefined:\n        rowIndexOffset = pinnedRows.top.length;\n        break;\n    }\n    const rowModels = params.rows ?? currentPage.rows;\n    const firstRowToRender = baseRenderContext.firstRowIndex;\n    const lastRowToRender = Math.min(baseRenderContext.lastRowIndex, rowModels.length);\n    const rowIndexes = params.rows ? range(0, params.rows.length) : range(firstRowToRender, lastRowToRender);\n    let virtualRowIndex = -1;\n    if (!isPinnedSection && focusedCell.rowIndex !== -1) {\n      if (focusedCell.rowIndex < firstRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.unshift(virtualRowIndex);\n      }\n      if (focusedCell.rowIndex >= lastRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.push(virtualRowIndex);\n      }\n    }\n    const rows = [];\n    const rowProps = rootProps.slotProps?.row;\n    const columnPositions = gridColumnPositionsSelector(apiRef);\n    rowIndexes.forEach(rowIndexInPage => {\n      const {\n        id,\n        model\n      } = rowModels[rowIndexInPage];\n\n      // NOTE: This is an expensive feature, the colSpan code could be optimized.\n      if (hasColSpan) {\n        const minFirstColumn = pinnedColumns.left.length;\n        const maxLastColumn = visibleColumns.length - pinnedColumns.right.length;\n        apiRef.current.calculateColSpan({\n          rowId: id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n        if (pinnedColumns.left.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: 0,\n            maxLastColumn: pinnedColumns.left.length,\n            columns: visibleColumns\n          });\n        }\n        if (pinnedColumns.right.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: visibleColumns.length - pinnedColumns.right.length,\n            maxLastColumn: visibleColumns.length,\n            columns: visibleColumns\n          });\n        }\n      }\n      const hasFocus = cellFocus?.id === id;\n      const baseRowHeight = !apiRef.current.rowHasAutoHeight(id) ? apiRef.current.unstable_getRowHeight(id) : 'auto';\n      let isSelected;\n      if (selectedRowsLookup[id] == null) {\n        isSelected = false;\n      } else {\n        isSelected = apiRef.current.isRowSelectable(id);\n      }\n      let isFirstVisible = false;\n      if (params.position === undefined) {\n        isFirstVisible = rowIndexInPage === 0;\n      }\n      let isLastVisible = false;\n      if (isLastSection) {\n        if (!isPinnedSection) {\n          const lastIndex = currentPage.rows.length - 1;\n          const isLastVisibleRowIndex = rowIndexInPage === lastIndex;\n          if (isLastVisibleRowIndex) {\n            isLastVisible = true;\n          }\n        } else {\n          isLastVisible = rowIndexInPage === rowModels.length - 1;\n        }\n      }\n      const isVirtualRow = rowIndexInPage === virtualRowIndex;\n      const isNotVisible = isVirtualRow;\n      let tabbableCell = null;\n      if (cellTabIndex !== null && cellTabIndex.id === id) {\n        const cellParams = apiRef.current.getCellParams(id, cellTabIndex.field);\n        tabbableCell = cellParams.cellMode === 'view' ? cellTabIndex.field : null;\n      }\n      let currentRenderContext = baseRenderContext;\n      if (!isPinnedSection && frozenContext.current && rowIndexInPage >= frozenContext.current.firstRowIndex && rowIndexInPage < frozenContext.current.lastRowIndex) {\n        currentRenderContext = frozenContext.current;\n      }\n      const offsetLeft = computeOffsetLeft(columnPositions, currentRenderContext, theme.direction, pinnedColumns.left.length);\n      const rowIndex = (currentPage?.range?.firstRowIndex || 0) + rowIndexOffset + rowIndexInPage;\n      rows.push( /*#__PURE__*/_jsx(rootProps.slots.row, _extends({\n        row: model,\n        rowId: id,\n        index: rowIndex,\n        selected: isSelected,\n        offsetTop: params.rows ? undefined : rowsMeta.positions[rowIndexInPage],\n        offsetLeft: offsetLeft,\n        dimensions: dimensions,\n        rowHeight: baseRowHeight,\n        tabbableCell: tabbableCell,\n        pinnedColumns: pinnedColumns,\n        visibleColumns: visibleColumns,\n        renderContext: currentRenderContext,\n        focusedColumnIndex: hasFocus ? focusedCell.columnIndex : undefined,\n        isFirstVisible: isFirstVisible,\n        isLastVisible: isLastVisible,\n        isNotVisible: isNotVisible\n      }, rowProps), id));\n      if (isNotVisible) {\n        return;\n      }\n      const panel = panels.get(id);\n      if (panel) {\n        rows.push(panel);\n      }\n      if (isLastVisible) {\n        rows.push(apiRef.current.getInfiniteLoadingTriggerElement?.({\n          lastRowId: id\n        }));\n      }\n    });\n    return rows;\n  };\n  const needsHorizontalScrollbar = outerSize.width && columnsTotalWidth >= outerSize.width;\n  const scrollerStyle = React.useMemo(() => ({\n    overflowX: !needsHorizontalScrollbar ? 'hidden' : undefined,\n    overflowY: rootProps.autoHeight ? 'hidden' : undefined\n  }), [needsHorizontalScrollbar, rootProps.autoHeight]);\n  const contentSize = React.useMemo(() => {\n    const size = {\n      width: needsHorizontalScrollbar ? columnsTotalWidth : 'auto',\n      height: contentHeight\n    };\n    if (rootProps.autoHeight && currentPage.rows.length === 0) {\n      size.height = getMinimalContentHeight(apiRef); // Give room to show the overlay when there no rows.\n    }\n    return size;\n  }, [apiRef, columnsTotalWidth, contentHeight, needsHorizontalScrollbar, rootProps.autoHeight, currentPage.rows.length]);\n  React.useEffect(() => {\n    apiRef.current.publishEvent('virtualScrollerContentSizeChange');\n  }, [apiRef, contentSize]);\n  useEnhancedEffect(() => {\n    // FIXME: Is this really necessary?\n    apiRef.current.resize();\n  }, [apiRef, rowsMeta.currentPageTotalHeight]);\n  useEnhancedEffect(() => {\n    if (enabled) {\n      // TODO a scroll reset should not be necessary\n      scrollerRef.current.scrollLeft = 0;\n      scrollerRef.current.scrollTop = 0;\n    }\n  }, [enabled, gridRootRef, scrollerRef]);\n  useRunOnce(outerSize.width !== 0, () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabled, enabledForColumns);\n    const initialRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    updateRenderContext(initialRenderContext);\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollPosition.current.top,\n      left: scrollPosition.current.left,\n      renderContext: initialRenderContext\n    });\n  });\n  apiRef.current.register('private', {\n    updateRenderContext: forceUpdateRenderContext\n  });\n  useGridApiEventHandler(apiRef, 'columnsChange', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', forceUpdateRenderContext);\n  return {\n    renderContext,\n    setPanels,\n    getRows,\n    getContainerProps: () => ({\n      ref: mainRef\n    }),\n    getScrollerProps: () => ({\n      ref: scrollerRef,\n      tabIndex: -1,\n      onScroll: handleScroll,\n      onWheel: handleWheel,\n      onTouchMove: handleTouchMove,\n      style: scrollerStyle,\n      role: 'presentation'\n    }),\n    getContentProps: () => ({\n      style: contentSize,\n      role: 'presentation'\n    }),\n    getRenderZoneProps: () => ({\n      role: 'rowgroup'\n    }),\n    getScrollbarVerticalProps: () => ({\n      ref: scrollbarVerticalRef,\n      role: 'presentation'\n    }),\n    getScrollbarHorizontalProps: () => ({\n      ref: scrollbarHorizontalRef,\n      role: 'presentation'\n    })\n  };\n};\nfunction inputsSelector(apiRef, rootProps, enabled, enabledForColumns) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  const currentPage = getVisibleRows(apiRef, rootProps);\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const lastRowId = apiRef.current.state.rows.dataRowIds.at(-1);\n  const lastColumn = visibleColumns.at(-1);\n  return {\n    enabled,\n    enabledForColumns,\n    apiRef,\n    autoHeight: rootProps.autoHeight,\n    rowBufferPx: rootProps.rowBufferPx,\n    columnBufferPx: rootProps.columnBufferPx,\n    leftPinnedWidth: dimensions.leftPinnedWidth,\n    columnsTotalWidth: dimensions.columnsTotalWidth,\n    viewportInnerWidth: dimensions.viewportInnerSize.width,\n    viewportInnerHeight: dimensions.viewportInnerSize.height,\n    lastRowHeight: lastRowId !== undefined ? apiRef.current.unstable_getRowHeight(lastRowId) : 0,\n    lastColumnWidth: lastColumn?.computedWidth ?? 0,\n    rowsMeta: gridRowsMetaSelector(apiRef.current.state),\n    columnPositions: gridColumnPositionsSelector(apiRef),\n    rows: currentPage.rows,\n    range: currentPage.range,\n    pinnedColumns: gridVisiblePinnedColumnDefinitionsSelector(apiRef),\n    visibleColumns\n  };\n}\nfunction computeRenderContext(inputs, scrollPosition, scrollCache) {\n  let renderContext;\n  if (!inputs.enabled) {\n    renderContext = {\n      firstRowIndex: 0,\n      lastRowIndex: inputs.rows.length,\n      firstColumnIndex: 0,\n      lastColumnIndex: inputs.visibleColumns.length\n    };\n  } else {\n    const {\n      top,\n      left\n    } = scrollPosition;\n    const realLeft = Math.abs(left) + inputs.leftPinnedWidth;\n\n    // Clamp the value because the search may return an index out of bounds.\n    // In the last index, this is not needed because Array.slice doesn't include it.\n    const firstRowIndex = Math.min(getNearestIndexToRender(inputs, top, {\n      atStart: true,\n      lastPosition: inputs.rowsMeta.positions[inputs.rowsMeta.positions.length - 1] + inputs.lastRowHeight\n    }), inputs.rowsMeta.positions.length - 1);\n    const lastRowIndex = inputs.autoHeight ? firstRowIndex + inputs.rows.length : getNearestIndexToRender(inputs, top + inputs.viewportInnerHeight);\n    let firstColumnIndex = 0;\n    let lastColumnIndex = inputs.columnPositions.length;\n    if (inputs.enabledForColumns) {\n      let hasRowWithAutoHeight = false;\n      const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n        firstIndex: firstRowIndex,\n        lastIndex: lastRowIndex,\n        minFirstIndex: 0,\n        maxLastIndex: inputs.rows.length,\n        bufferBefore: scrollCache.buffer.rowBefore,\n        bufferAfter: scrollCache.buffer.rowAfter,\n        positions: inputs.rowsMeta.positions,\n        lastSize: inputs.lastRowHeight\n      });\n      for (let i = firstRowToRender; i < lastRowToRender && !hasRowWithAutoHeight; i += 1) {\n        const row = inputs.rows[i];\n        hasRowWithAutoHeight = inputs.apiRef.current.rowHasAutoHeight(row.id);\n      }\n      if (!hasRowWithAutoHeight) {\n        firstColumnIndex = binarySearch(realLeft, inputs.columnPositions, {\n          atStart: true,\n          lastPosition: inputs.columnsTotalWidth\n        });\n        lastColumnIndex = binarySearch(realLeft + inputs.viewportInnerWidth, inputs.columnPositions);\n      }\n    }\n    renderContext = {\n      firstRowIndex,\n      lastRowIndex,\n      firstColumnIndex,\n      lastColumnIndex\n    };\n  }\n  const actualRenderContext = deriveRenderContext(inputs, renderContext, scrollCache);\n  return actualRenderContext;\n}\nfunction getNearestIndexToRender(inputs, offset, options) {\n  const lastMeasuredIndexRelativeToAllRows = inputs.apiRef.current.getLastMeasuredRowIndex();\n  let allRowsMeasured = lastMeasuredIndexRelativeToAllRows === Infinity;\n  if (inputs.range?.lastRowIndex && !allRowsMeasured) {\n    // Check if all rows in this page are already measured\n    allRowsMeasured = lastMeasuredIndexRelativeToAllRows >= inputs.range.lastRowIndex;\n  }\n  const lastMeasuredIndexRelativeToCurrentPage = clamp(lastMeasuredIndexRelativeToAllRows - (inputs.range?.firstRowIndex || 0), 0, inputs.rowsMeta.positions.length);\n  if (allRowsMeasured || inputs.rowsMeta.positions[lastMeasuredIndexRelativeToCurrentPage] >= offset) {\n    // If all rows were measured (when no row has \"auto\" as height) or all rows before the offset\n    // were measured, then use a binary search because it's faster.\n    return binarySearch(offset, inputs.rowsMeta.positions, options);\n  }\n\n  // Otherwise, use an exponential search.\n  // If rows have \"auto\" as height, their positions will be based on estimated heights.\n  // In this case, we can skip several steps until we find a position higher than the offset.\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  return exponentialSearch(offset, inputs.rowsMeta.positions, lastMeasuredIndexRelativeToCurrentPage, options);\n}\n\n/**\n * Accepts as input a raw render context (the area visible in the viewport) and adds\n * computes the actual render context based on pinned elements, buffer dimensions and\n * spanning.\n */\nfunction deriveRenderContext(inputs, nextRenderContext, scrollCache) {\n  const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstRowIndex,\n    lastIndex: nextRenderContext.lastRowIndex,\n    minFirstIndex: 0,\n    maxLastIndex: inputs.rows.length,\n    bufferBefore: scrollCache.buffer.rowBefore,\n    bufferAfter: scrollCache.buffer.rowAfter,\n    positions: inputs.rowsMeta.positions,\n    lastSize: inputs.lastRowHeight\n  });\n  const [initialFirstColumnToRender, lastColumnToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstColumnIndex,\n    lastIndex: nextRenderContext.lastColumnIndex,\n    minFirstIndex: inputs.pinnedColumns.left.length,\n    maxLastIndex: inputs.visibleColumns.length - inputs.pinnedColumns.right.length,\n    bufferBefore: scrollCache.buffer.columnBefore,\n    bufferAfter: scrollCache.buffer.columnAfter,\n    positions: inputs.columnPositions,\n    lastSize: inputs.lastColumnWidth\n  });\n  const firstColumnToRender = getFirstNonSpannedColumnToRender({\n    firstColumnToRender: initialFirstColumnToRender,\n    apiRef: inputs.apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows: inputs.rows\n  });\n  return {\n    firstRowIndex: firstRowToRender,\n    lastRowIndex: lastRowToRender,\n    firstColumnIndex: firstColumnToRender,\n    lastColumnIndex: lastColumnToRender\n  };\n}\n/**\n * Use binary search to avoid looping through all possible positions.\n * The `options.atStart` provides the possibility to match for the first element that\n * intersects the screen, even if said element's start position is before `offset`. In\n * other words, we search for `offset + width`.\n */\nfunction binarySearch(offset, positions, options = undefined, sliceStart = 0, sliceEnd = positions.length) {\n  if (positions.length <= 0) {\n    return -1;\n  }\n  if (sliceStart >= sliceEnd) {\n    return sliceStart;\n  }\n  const pivot = sliceStart + Math.floor((sliceEnd - sliceStart) / 2);\n  const position = positions[pivot];\n  let isBefore;\n  if (options?.atStart) {\n    const width = (pivot === positions.length - 1 ? options.lastPosition : positions[pivot + 1]) - position;\n    isBefore = offset - width < position;\n  } else {\n    isBefore = offset <= position;\n  }\n  return isBefore ? binarySearch(offset, positions, options, sliceStart, pivot) : binarySearch(offset, positions, options, pivot + 1, sliceEnd);\n}\nfunction exponentialSearch(offset, positions, index, options = undefined) {\n  let interval = 1;\n  while (index < positions.length && Math.abs(positions[index]) < offset) {\n    index += interval;\n    interval *= 2;\n  }\n  return binarySearch(offset, positions, options, Math.floor(index / 2), Math.min(index, positions.length));\n}\nfunction getIndexesToRender({\n  firstIndex,\n  lastIndex,\n  bufferBefore,\n  bufferAfter,\n  minFirstIndex,\n  maxLastIndex,\n  positions,\n  lastSize\n}) {\n  const firstPosition = positions[firstIndex] - bufferBefore;\n  const lastPosition = positions[lastIndex] + bufferAfter;\n  const firstIndexPadded = binarySearch(firstPosition, positions, {\n    atStart: true,\n    lastPosition: positions[positions.length - 1] + lastSize\n  });\n  const lastIndexPadded = binarySearch(lastPosition, positions);\n  return [clamp(firstIndexPadded, minFirstIndex, maxLastIndex), clamp(lastIndexPadded, minFirstIndex, maxLastIndex)];\n}\nexport function areRenderContextsEqual(context1, context2) {\n  if (context1 === context2) {\n    return true;\n  }\n  return context1.firstRowIndex === context2.firstRowIndex && context1.lastRowIndex === context2.lastRowIndex && context1.firstColumnIndex === context2.firstColumnIndex && context1.lastColumnIndex === context2.lastColumnIndex;\n}\nexport function computeOffsetLeft(columnPositions, renderContext, direction, pinnedLeftLength) {\n  const factor = direction === 'ltr' ? 1 : -1;\n  const left = factor * (columnPositions[renderContext.firstColumnIndex] ?? 0) - (columnPositions[pinnedLeftLength] ?? 0);\n  return Math.abs(left);\n}\nfunction directionForDelta(dx, dy) {\n  if (dx === 0 && dy === 0) {\n    return ScrollDirection.NONE;\n  }\n  /* eslint-disable */\n  if (Math.abs(dy) >= Math.abs(dx)) {\n    if (dy > 0) {\n      return ScrollDirection.DOWN;\n    } else {\n      return ScrollDirection.UP;\n    }\n  } else {\n    if (dx > 0) {\n      return ScrollDirection.RIGHT;\n    } else {\n      return ScrollDirection.LEFT;\n    }\n  }\n  /* eslint-enable */\n}\nfunction bufferForDirection(mode, direction, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) {\n  if (mode === 'rtl') {\n    switch (direction) {\n      case ScrollDirection.LEFT:\n        direction = ScrollDirection.RIGHT;\n        break;\n      case ScrollDirection.RIGHT:\n        direction = ScrollDirection.LEFT;\n        break;\n      default:\n    }\n  }\n  switch (direction) {\n    case ScrollDirection.NONE:\n      return {\n        rowAfter: rowBufferPx,\n        rowBefore: rowBufferPx,\n        columnAfter: columnBufferPx,\n        columnBefore: columnBufferPx\n      };\n    case ScrollDirection.LEFT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: horizontalBuffer\n      };\n    case ScrollDirection.RIGHT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: horizontalBuffer,\n        columnBefore: 0\n      };\n    case ScrollDirection.UP:\n      return {\n        rowAfter: 0,\n        rowBefore: verticalBuffer,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    case ScrollDirection.DOWN:\n      return {\n        rowAfter: verticalBuffer,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    default:\n      // eslint unable to figure out enum exhaustiveness\n      throw new Error('unreachable');\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport const EMPTY_RENDER_CONTEXT = {\n  firstRowIndex: 0,\n  lastRowIndex: 0,\n  firstColumnIndex: 0,\n  lastColumnIndex: 0\n};\nexport const virtualizationStateInitializer = (state, props) => {\n  const virtualization = {\n    enabled: !props.disableVirtualization,\n    enabledForColumns: true,\n    renderContext: EMPTY_RENDER_CONTEXT\n  };\n  return _extends({}, state, {\n    virtualization\n  });\n};\nexport function useGridVirtualization(apiRef, props) {\n  /*\n   * API METHODS\n   */\n\n  const setVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled\n      })\n    }));\n  };\n  const setColumnVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabledForColumns: enabled\n      })\n    }));\n  };\n  const api = {\n    unstable_setVirtualization: setVirtualization,\n    unstable_setColumnVirtualization: setColumnVirtualization\n  };\n  useGridApiMethod(apiRef, api, 'public');\n\n  /*\n   * EFFECTS\n   */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(() => {\n    setVirtualization(!props.disableVirtualization);\n  }, [props.disableVirtualization]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","import * as React from 'react';\nexport const useFirstRender = callback => {\n  const isFirstRender = React.useRef(true);\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    callback();\n  }\n};","// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor(timeout = CLEANUP_TIMER_LOOP_MILLIS) {\n    this.timeouts = new Map();\n    this.cleanupTimeout = CLEANUP_TIMER_LOOP_MILLIS;\n    this.cleanupTimeout = timeout;\n  }\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n}","export class FinalizationRegistryBasedCleanupTracking {\n  constructor() {\n    this.registry = new FinalizationRegistry(unsubscribe => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  reset() {}\n}","import * as React from 'react';\nimport { TimerBasedCleanupTracking } from '../../utils/cleanupTracking/TimerBasedCleanupTracking';\nimport { FinalizationRegistryBasedCleanupTracking } from '../../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking';\n/**\n * Signal to the underlying logic what version of the public component API\n * of the data grid is exposed.\n */\nvar GridSignature = /*#__PURE__*/function (GridSignature) {\n  GridSignature[\"DataGrid\"] = \"DataGrid\";\n  GridSignature[\"DataGridPro\"] = \"DataGridPro\";\n  return GridSignature;\n}(GridSignature || {});\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {}\n\n// Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\nexport function createUseGridApiEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useGridApiEventHandler(apiRef, eventName, handler, options) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef();\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event, details) => {\n        if (!event.defaultMuiPrevented) {\n          handlerRef.current?.(params, event, details);\n        }\n      };\n      subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact,\n      // The callback below will be called once this reference stops being retained\n      () => {\n        subscription.current?.();\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event, details) => {\n          if (!event.defaultMuiPrevented) {\n            handlerRef.current?.(params, event, details);\n          }\n        };\n        subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      }\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n      return () => {\n        subscription.current?.();\n        subscription.current = null;\n      };\n    }, [apiRef, eventName, options]);\n  };\n}\nconst registryContainer = {\n  registry: null\n};\n\n// TODO: move to @mui/x-data-grid/internals\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCleanupTracking = () => {\n  registryContainer.registry?.reset();\n  registryContainer.registry = null;\n};\nexport const useGridApiEventHandler = createUseGridApiEventHandler(registryContainer);\nconst optionsSubscriberOptions = {\n  isFirst: true\n};\nexport function useGridApiOptionHandler(apiRef, eventName, handler) {\n  // Validate that only one per event name?\n  useGridApiEventHandler(apiRef, eventName, handler, optionsSubscriberOptions);\n}\nexport { GridSignature };","import * as React from 'react';\nexport function useGridApiMethod(privateApiRef, apiMethods, visibility) {\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    isFirstRender.current = false;\n    privateApiRef.current.register(visibility, apiMethods);\n  }, [privateApiRef, visibility, apiMethods]);\n  if (isFirstRender.current) {\n    privateApiRef.current.register(visibility, apiMethods);\n  }\n}","import * as React from 'react';\nexport function useGridLogger(privateApiRef, name) {\n  const logger = React.useRef(null);\n  if (logger.current) {\n    return logger.current;\n  }\n  const newLogger = privateApiRef.current.getLogger(name);\n  logger.current = newLogger;\n  return newLogger;\n}","import * as React from 'react';\nimport { isFunction } from '../../utils/utils';\nimport { useGridLogger } from './useGridLogger';\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const targetElement = isFunction(ref) ? ref() : ref?.current ?? null;\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    if (targetElement && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      setAdded(true);\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        targetElement.removeEventListener(eventName, wrapHandler, options);\n      };\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [targetElement, wrapHandler, eventName, added, logger, options, apiRef]);\n};","import * as React from 'react';\nexport const GridPrivateApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridPrivateApiContext.displayName = 'GridPrivateApiContext';\n}\nexport function useGridPrivateApiContext() {\n  const privateApiRef = React.useContext(GridPrivateApiContext);\n  if (privateApiRef === undefined) {\n    throw new Error(['MUI X: Could not find the data grid private context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the data grid.'].join('\\n'));\n  }\n  return privateApiRef;\n}","import * as React from 'react';\nimport { useLazyRef } from './useLazyRef';\nimport { useOnMount } from './useOnMount';\nimport { buildWarning } from '../../utils/warning';\nimport { fastObjectShallowCompare } from '../../utils/fastObjectShallowCompare';\nconst stateNotInitializedWarning = buildWarning(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\nfunction applySelector(apiRef, selector) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n  return selector(apiRef.current.state);\n}\nconst defaultCompare = Object.is;\nexport const objectShallowCompare = fastObjectShallowCompare;\nconst createRefs = () => ({\n  state: null,\n  equals: null,\n  selector: null\n});\nexport const useGridSelector = (apiRef, selector, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      stateNotInitializedWarning();\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelector(apiRef, selector));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelector(apiRef, refs.current.selector);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};","import * as React from 'react';\nimport { gridPaginationRowRangeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector } from '../features/pagination/gridPaginationSelector';\nimport { gridExpandedSortedRowEntriesSelector } from '../features/filter/gridFilterSelector';\nexport const getVisibleRows = (apiRef, props) => {\n  let rows;\n  let range;\n  if (props.pagination && props.paginationMode === 'client') {\n    range = gridPaginationRowRangeSelector(apiRef);\n    rows = gridPaginatedVisibleSortedGridRowEntriesSelector(apiRef);\n  } else {\n    rows = gridExpandedSortedRowEntriesSelector(apiRef);\n    if (rows.length === 0) {\n      range = null;\n    } else {\n      range = {\n        firstRowIndex: 0,\n        lastRowIndex: rows.length - 1\n      };\n    }\n  }\n  return {\n    rows,\n    range\n  };\n};\n\n/**\n * Computes the list of rows that are reachable by scroll.\n * Depending on whether pagination is enabled, it will return the rows in the current page.\n * - If the pagination is disabled or in server mode, it equals all the visible rows.\n * - If the row tree has several layers, it contains up to `state.pageSize` top level rows and all their descendants.\n * - If the row tree is flat, it only contains up to `state.pageSize` rows.\n */\nexport const useGridVisibleRows = (apiRef, props) => {\n  const response = getVisibleRows(apiRef, props);\n  return React.useMemo(() => ({\n    rows: response.rows,\n    range: response.range\n  }), [response.rows, response.range]);\n};","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst noop = () => {};\n\n/**\n * Runs an effect once, when `condition` is true.\n */\nexport const useRunOnce = (condition, effect) => {\n  const didRun = React.useRef(false);\n  useEnhancedEffect(() => {\n    if (didRun.current || !condition) {\n      return noop;\n    }\n    didRun.current = true;\n    return effect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [didRun.current || condition]);\n};","import { GridPinnedColumnPosition } from '../../hooks/features/columns';\nexport const getPinnedCellOffset = (pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions) => {\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  let pinnedOffset;\n  switch (pinnedPosition) {\n    case GridPinnedColumnPosition.LEFT:\n      pinnedOffset = columnPositions[columnIndex];\n      break;\n    case GridPinnedColumnPosition.RIGHT:\n      pinnedOffset = dimensions.columnsTotalWidth - columnPositions[columnIndex] - computedWidth + scrollbarWidth;\n      break;\n    default:\n      pinnedOffset = 0;\n      break;\n  }\n  return pinnedOffset;\n};","import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridArrowUpwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexport const GridArrowDownwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexport const GridKeyboardArrowRight = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexport const GridExpandMoreIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexport const GridFilterListIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\nexport const GridFilterAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexport const GridSearchIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexport const GridMenuIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexport const GridCheckCircleIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexport const GridColumnIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\"\n}), 'ColumnIcon');\nexport const GridSeparatorIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 19V5h2v14z\"\n}), 'Separator');\nexport const GridViewHeadlineIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\"\n}), 'ViewHeadline');\nexport const GridTableRowsIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z\"\n}), 'TableRows');\nexport const GridViewStreamIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 18h17v-6H4v6zM4 5v6h17V5H4z\"\n}), 'ViewStream');\nexport const GridTripleDotsVerticalIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'TripleDotsVertical');\nexport const GridCloseIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexport const GridAddIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexport const GridRemoveIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexport const GridLoadIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Load');\nexport const GridDragIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'Drag');\nexport const GridSaveAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexport const GridCheckIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexport const GridMoreVertIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\nexport const GridVisibilityOffIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexport const GridViewColumnIcon = createSvgIcon( /*#__PURE__*/_jsx(\"g\", {\n  children: /*#__PURE__*/_jsx(\"path\", {\n    d: \"M14.67,5v14H9.33V5H14.67z M15.67,19H21V5h-5.33V19z M8.33,19V5H3v14H8.33z\"\n  })\n}), 'ViewColumn');\nexport const GridClearIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\nexport const GridDeleteIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexport const GridDeleteForeverIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","export function isLeaf(node) {\n  return node.field !== undefined;\n}\n\n/**\n * A function used to process headerClassName params.\n */\n\n/**\n * The union type representing the [[GridColDef]] column header class type.\n */","var GridEditModes = /*#__PURE__*/function (GridEditModes) {\n  GridEditModes[\"Cell\"] = \"cell\";\n  GridEditModes[\"Row\"] = \"row\";\n  return GridEditModes;\n}(GridEditModes || {});\nvar GridCellModes = /*#__PURE__*/function (GridCellModes) {\n  GridCellModes[\"Edit\"] = \"edit\";\n  GridCellModes[\"View\"] = \"view\";\n  return GridCellModes;\n}(GridCellModes || {});\nvar GridRowModes = /*#__PURE__*/function (GridRowModes) {\n  GridRowModes[\"Edit\"] = \"edit\";\n  GridRowModes[\"View\"] = \"view\";\n  return GridRowModes;\n}(GridRowModes || {});\nexport { GridEditModes, GridCellModes, GridRowModes };","/**\n * Filter item definition interface.\n * @demos\n *   - [Custom filter operator](/x/react-data-grid/filtering/customization/#create-a-custom-operator)\n */\nvar GridLogicOperator = /*#__PURE__*/function (GridLogicOperator) {\n  GridLogicOperator[\"And\"] = \"and\";\n  GridLogicOperator[\"Or\"] = \"or\";\n  return GridLogicOperator;\n}(GridLogicOperator || {});\nexport { GridLogicOperator };","/**\n * Params passed to `apiRef.current.setEditCellValue`.\n */\nvar GridCellEditStartReasons = /*#__PURE__*/function (GridCellEditStartReasons) {\n  GridCellEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridCellEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridCellEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  GridCellEditStartReasons[\"pasteKeyDown\"] = \"pasteKeyDown\";\n  return GridCellEditStartReasons;\n}(GridCellEditStartReasons || {});\n/**\n * Params passed to the `cellEditStart` event.\n */\nvar GridCellEditStopReasons = /*#__PURE__*/function (GridCellEditStopReasons) {\n  GridCellEditStopReasons[\"cellFocusOut\"] = \"cellFocusOut\";\n  GridCellEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridCellEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridCellEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridCellEditStopReasons;\n}(GridCellEditStopReasons || {});\n/**\n * Params passed to the `cellEditStop event.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridCellEditStartReasons, GridCellEditStopReasons };","/**\n * Object passed as parameter in the row callbacks.\n * @demos\n *   - [Master detail](/x/react-data-grid/master-detail/)\n */\n/**\n * Object passed as parameter in the row `getRowClassName` callback prop.\n * @demos\n *   - [Styling rows](/x/react-data-grid/style/#styling-rows)\n */\n/**\n * Object passed as parameter in the row `getRowHeight` callback prop.\n */\n/**\n * The getRowHeight return value.\n */\nvar GridRowEditStartReasons = /*#__PURE__*/function (GridRowEditStartReasons) {\n  GridRowEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridRowEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridRowEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  return GridRowEditStartReasons;\n}(GridRowEditStartReasons || {});\n/**\n * Params passed to the `rowEditStart` event.\n */\nvar GridRowEditStopReasons = /*#__PURE__*/function (GridRowEditStopReasons) {\n  GridRowEditStopReasons[\"rowFocusOut\"] = \"rowFocusOut\";\n  GridRowEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridRowEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridRowEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridRowEditStopReasons;\n}(GridRowEditStopReasons || {});\n/**\n * Object passed as parameter in the row `getRowSpacing` callback prop.\n * @demos\n *   - [Row spacing](/x/react-data-grid/row-height/#row-spacing)\n */\n/**\n * The getRowSpacing return value.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridRowEditStartReasons, GridRowEditStopReasons };","import { GridPinnedColumnPosition } from '../hooks/features/columns/gridColumnsInterfaces';\nexport const shouldCellShowRightBorder = (pinnedPosition, indexInSection, sectionLength, showCellVerticalBorderRootProp, gridHasFiller) => {\n  const isSectionLastCell = indexInSection === sectionLength - 1;\n  if (pinnedPosition === GridPinnedColumnPosition.LEFT && isSectionLastCell) {\n    return true;\n  }\n  if (showCellVerticalBorderRootProp) {\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      return true;\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      return !isSectionLastCell;\n    }\n    // pinnedPosition === undefined, middle section\n    return !isSectionLastCell || gridHasFiller;\n  }\n  return false;\n};\nexport const shouldCellShowLeftBorder = (pinnedPosition, indexInSection) => {\n  return pinnedPosition === GridPinnedColumnPosition.RIGHT && indexInSection === 0;\n};","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector as reselectCreateSelector } from 'reselect';\nimport { buildWarning } from './warning';\nconst cache = new WeakMap();\nconst missingInstanceIdWarning = buildWarning(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\nfunction checkIsAPIRef(value) {\n  return 'current' in value && 'instanceId' in value.current;\n}\nconst DEFAULT_INSTANCE_ID = {\n  id: 'default'\n};\nexport const createSelector = (a, b, c, d, e, f, ...other) => {\n  if (other.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      const ve = e(state, instanceId);\n      return f(va, vb, vc, vd, ve);\n    };\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      return e(va, vb, vc, vd);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      return d(va, vb, vc);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      return c(va, vb);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      return b(va);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\nexport const createSelectorMemoized = (...args) => {\n  const selector = (stateOrApiRef, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        missingInstanceIdWarning();\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};","import { gridClasses } from '../constants/gridClasses';\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\n\n// TODO, eventually replaces this function with CSS.escape, once available in jsdom, either added manually or built in\n// https://github.com/jsdom/jsdom/issues/1550#issuecomment-236734471\nexport function escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nfunction getGridRowElementSelector(id) {\n  return `.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`;\n}\nexport function getGridRowElement(root, id) {\n  return root.querySelector(getGridRowElementSelector(id));\n}\nexport function getGridCellElement(root, {\n  id,\n  field\n}) {\n  const rowSelector = getGridRowElementSelector(id);\n  const cellSelector = `.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`;\n  const selector = `${rowSelector} ${cellSelector}`;\n  return root.querySelector(selector);\n}\n\n// https://www.abeautifulsite.net/posts/finding-the-active-element-in-a-shadow-root/\nexport const getActiveElement = (root = document) => {\n  const activeEl = root.activeElement;\n  if (!activeEl) {\n    return null;\n  }\n  if (activeEl.shadowRoot) {\n    return getActiveElement(activeEl.shadowRoot);\n  }\n  return activeEl;\n};\nexport function isEventTargetInPortal(event) {\n  if (\n  // The target is not an element when triggered by a Select inside the cell\n  // See https://github.com/mui/material-ui/issues/10534\n  event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n    return true;\n  }\n  return false;\n}\nexport function getFieldFromHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-field');\n}\nexport function findHeaderElementFromField(elem, field) {\n  return elem.querySelector(`[data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nexport function getFieldsFromGroupHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-fields').slice(2, -2).split('-|-');\n}\nexport function findGroupHeaderElementsFromField(elem, field) {\n  return Array.from(elem.querySelectorAll(`[data-fields*=\"|-${escapeOperandAttributeSelector(field)}-|\"]`) ?? []);\n}\nexport function findGridCellElementsFromCol(col, api) {\n  const root = findParentElementFromClassName(col, gridClasses.root);\n  if (!root) {\n    throw new Error('MUI X: The root element is not found.');\n  }\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return [];\n  }\n  const colIndex = Number(ariaColIndex) - 1;\n  const cells = [];\n  if (!api.virtualScrollerRef?.current) {\n    return [];\n  }\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    let columnIndex = colIndex;\n    const cellColSpanInfo = api.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n      columnIndex = cellColSpanInfo.leftVisibleCellIndex;\n    }\n    const cell = rowElement.querySelector(`[data-colindex=\"${columnIndex}\"]`);\n    if (cell) {\n      cells.push(cell);\n    }\n  });\n  return cells;\n}\nexport function findGridElement(api, klass) {\n  return api.rootElementRef.current.querySelector(`.${gridClasses[klass]}`);\n}\nconst findPinnedCells = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (colIndex === null) {\n    return [];\n  }\n  const cells = [];\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    rowElement.querySelectorAll(`.${gridClasses[position === 'left' ? 'cell--pinnedLeft' : 'cell--pinnedRight']}`).forEach(cell => {\n      const currentColIndex = parseCellColIndex(cell);\n      if (currentColIndex !== null && filterFn(currentColIndex)) {\n        cells.push(cell);\n      }\n    });\n  });\n  return cells;\n};\nexport function findLeftPinnedCellsAfterCol(api, col) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: 'left',\n    filterFn: index => index > colIndex\n  });\n}\nexport function findRightPinnedCellsBeforeCol(api, col) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: 'right',\n    filterFn: index => index < colIndex\n  });\n}\nconst findPinnedHeaders = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (!api.columnHeadersContainerRef?.current) {\n    return [];\n  }\n  if (colIndex === null) {\n    return [];\n  }\n  const elements = [];\n  api.columnHeadersContainerRef.current.querySelectorAll(`.${gridClasses[position === 'left' ? 'columnHeader--pinnedLeft' : 'columnHeader--pinnedRight']}`).forEach(element => {\n    const currentColIndex = parseCellColIndex(element);\n    if (currentColIndex !== null && filterFn(currentColIndex)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n};\nexport function findLeftPinnedHeadersAfterCol(api, col) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: 'left',\n    colIndex,\n    filterFn: index => index > colIndex\n  });\n}\nexport function findRightPinnedHeadersBeforeCol(api, col) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: 'right',\n    colIndex,\n    filterFn: index => index < colIndex\n  });\n}\nexport function findGridHeader(api, field) {\n  const headers = api.columnHeadersContainerRef.current;\n  return headers.querySelector(`:scope > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"columnheader\"]`);\n}\nexport function findGridCells(api, field) {\n  const container = api.virtualScrollerRef.current;\n  return Array.from(container.querySelectorAll(`:scope > div > div > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"gridcell\"]`));\n}\nfunction queryRows(api) {\n  return api.virtualScrollerRef.current.querySelectorAll(\n  // Use > to ignore rows from nested data grids (for example in detail panel)\n  `:scope > div > div > .${gridClasses.row}`);\n}\nfunction parseCellColIndex(col) {\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return null;\n  }\n  return Number(ariaColIndex) - 1;\n}","import * as React from 'react';\nimport { fastObjectShallowCompare } from './fastObjectShallowCompare';\nexport function fastMemo(component) {\n  return /*#__PURE__*/React.memo(component, fastObjectShallowCompare);\n}","const is = Object.is;\nexport function fastObjectShallowCompare(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (!(a instanceof Object) || !(b instanceof Object)) {\n    return false;\n  }\n  let aLength = 0;\n  let bLength = 0;\n\n  /* eslint-disable guard-for-in */\n  for (const key in a) {\n    aLength += 1;\n    if (!is(a[key], b[key])) {\n      return false;\n    }\n    if (!(key in b)) {\n      return false;\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-unused-vars */\n  for (const _ in b) {\n    bLength += 1;\n  }\n  return aLength === bLength;\n}","/**\n * @deprecated there is no meaninfuly logic abstracted, use event.key directly.\n */\nexport const isEscapeKey = key => key === 'Escape';\n\n/**\n * @deprecated there is no meaninfuly logic abstracted, use event.key directly.\n */\nexport const isTabKey = key => key === 'Tab';\n\n// Non printable keys have a name, for example \"ArrowRight\", see the whole list:\n// https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n// So event.key.length === 1 is often enough.\n//\n// However, we also need to ignore shortcuts, for example: select all:\n// - Windows: Ctrl+A, event.ctrlKey is true\n// - macOS: ⌘ Command+A, event.metaKey is true\nexport function isPrintableKey(event) {\n  return event.key.length === 1 && !event.ctrlKey && !event.metaKey;\n}\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = event => isPrintableKey(event) || event.key === 'Enter' || event.key === 'Backspace' || event.key === 'Delete';\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => key.indexOf('Arrow') === 0 || key.indexOf('Page') === 0 || key === ' ' || key === 'Home' || key === 'End';\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => isTabKey(key) || isEscapeKey(key);\n\n// In theory, on macOS, ctrl + v doesn't trigger a paste, so the function should return false.\n// However, maybe it's overkill to fix, so let's be lazy.\nexport function isPasteShortcut(event) {\n  if ((event.ctrlKey || event.metaKey) && event.key.toLowerCase() === 'v' && !event.shiftKey && !event.altKey) {\n    return true;\n  }\n  return false;\n}","export function isNumber(value) {\n  return typeof value === 'number' && !Number.isNaN(value);\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n\n/**\n * Create an array containing the range [from, to[\n */\nexport function range(from, to) {\n  return Array.from({\n    length: to - from\n  }).map((_, i) => from + i);\n}\n\n/**\n * Based on `fast-deep-equal`\n *\n * MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (Array.isArray(a)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entriesA = Array.from(a.entries());\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entries = Array.from(a.entries());\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n    const keys = Object.keys(a);\n    const length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b;\n}\n\n// Pseudo random number. See https://stackoverflow.com/a/47593316\nfunction mulberry32(a) {\n  return () => {\n    /* eslint-disable */\n    let t = a += 0x6d2b79f5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n    /* eslint-enable */\n  };\n}\n\n/**\n * Create a random number generator from a seed. The seed\n * ensures that the random number generator produces the\n * same sequence of 'random' numbers on every render. It\n * returns a function that generates a random number between\n * a specified min and max.\n */\nexport function createRandomNumberGenerator(seed) {\n  const random = mulberry32(seed);\n  return (min, max) => min + (max - min) * random();\n}\nexport function deepClone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n}\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/**\n * Mark a value as used so eslint doesn't complain. Use this instead\n * of a `eslint-disable-next-line react-hooks/exhaustive-deps` because\n * that hint disables checks on all values instead of just one.\n */\nexport function eslintUseValue(_) {}\n/* eslint-enable @typescript-eslint/no-unused-vars */","export const buildWarning = (message, gravity = 'warning') => {\n  let alreadyWarned = false;\n  const cleanMessage = Array.isArray(message) ? message.join('\\n') : message;\n  return () => {\n    if (!alreadyWarned) {\n      alreadyWarned = true;\n      if (gravity === 'error') {\n        console.error(cleanMessage);\n      } else {\n        console.warn(cleanMessage);\n      }\n    }\n  };\n};\nexport const wrapWithWarningOnCall = (method, message) => {\n  if (process.env.NODE_ENV === 'production') {\n    return method;\n  }\n  const warning = buildWarning(message);\n  return (...args) => {\n    warning();\n    return method(...args);\n  };\n};","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}"],"names":["_excluded","_t","_t2","_t3","_t4","_t5","_t6","_","t","indeterminate1Keyframe","indeterminate2Keyframe","bufferKeyframe","getColorShade","theme","color","vars","palette","LinearProgress","mode","main","LinearProgressRoot","name","slot","overridesResolver","props","styles","ownerState","root","variant","position","overflow","display","height","zIndex","colorAdjust","backgroundColor","content","left","top","right","bottom","opacity","transform","LinearProgressDashed","dashed","marginTop","width","backgroundImage","backgroundSize","backgroundPosition","LinearProgressBar1","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","transition","transformOrigin","LinearProgressBar2","bar2Indeterminate","bar2Buffer","inProps","ref","className","value","valueBuffer","other","classes","slots","bar1","bar2","useUtilityClasses","isRtl","rootProps","inlineStyles","undefined","Math","round","role","children","style","getLinearProgressUtilityClass","pulseKeyframe","waveKeyframe","SkeletonRoot","animation","hasChildren","withChildren","fitContent","heightAuto","radiusUnit","shape","borderRadius","radiusValue","Skeleton","bg","text","primary","marginBottom","visibility","maxWidth","action","hover","component","Boolean","as","getSkeletonUtilityClass","forceDebug","window","localStorage","getItem","noop","noopLogger","debug","info","warn","error","LOG_LEVELS","getAppender","logLevel","appender","console","minLogLevelIdx","indexOf","Error","reduce","loggerObj","method","idx","args","message","EventManager","constructor","this","maxListeners","warnOnce","events","on","eventName","listener","options","collection","highPriority","Map","regular","isFirst","set","removeListener","delete","removeAllListeners","emit","highPriorityListeners","Array","from","keys","regularListeners","i","length","has","apply","once","that","oneTimeListener","Store","create","_value","listeners","subscribe","fn","add","getSnapshot","update","forEach","l","Set","SYMBOL_API_PRIVATE","Symbol","globalId","GRID_DEFAULT_STRATEGY","GRID_STRATEGIES_PROCESSORS","rowTreeCreation","filtering","sorting","visibleRowsLookupCreation","useGridInitialization","inputApiRef","privateApiRef","publicApiRef","current","existingPrivateApi","state","privateApi","store","instanceId","id","getPublicApi","register","methods","Object","methodName","currentPrivateMethod","spying","target","publicApi","currentPublicMethod","caches","eventManager","createPrivateAPI","createPublicAPI","publishEvent","params","event","defaultMuiPrevented","isPropagationStopped","isSyntheticEvent","details","signature","DataGridPro","api","subscribeEvent","handler","useGridApiMethod","useGridApiInitialization","apiRef","rootElementRef","mainElementRef","virtualScrollerRef","useGridRefs","useTheme","isFirstEffect","setState","useGridTheme","getLogger","logger","toString","useGridLoggerFactory","controlStateMapRef","rawForceUpdate","registerControlState","controlStateItem","stateId","reason","newState","ignoreSetState","updatedControlStateIds","controlState","oldSubState","stateSelector","newSubState","push","hasPropChanged","propModel","map","el","join","model","propOnChange","changeEvent","updateControlState","key","previousState","publicStateApi","forceUpdate","privateStateApi","useGridStateInitialization","cache","isRunning","runAppliers","groupCache","values","appliers","callback","preProcessingPrivateApi","registerPipeProcessor","group","processor","processors","processorsAsArray","get","registerPipeApplier","applier","_appliers","otherAppliers","requestPipeProcessorsApplication","preProcessingPublicApi","unstable_applyPipeProcessors","context","result","useGridPipeProcessing","availableStrategies","strategiesCache","strategyProcessingApi","registerStrategyProcessor","strategyName","processorName","cleanup","_ref","otherProcessors","groupPreProcessors","previousProcessor","getActiveStrategy","applyStrategyProcessor","activeStrategy","strategyGroup","availableStrategyEntry","entries","find","strategy","isAvailable","setStrategyAvailability","useGridStrategyProcessing","getLocaleText","localeText","useGridLocaleText","useGridInitializeState","initializer","isInitialized","sanitizeCellValue","csvOptions","valueStr","shouldAppendQuotes","escapeFormulas","escapedValue","replace","delimiter","some","includes","serializeCellValue","cellParams","ignoreValueFormatter","columnType","colDef","type","String","toISOString","formattedValue","CSVRow","rowString","isEmpty","addValue","getRowString","writeToClipboardPolyfill","data","span","document","createElement","whiteSpace","userSelect","textContent","body","appendChild","range","createRange","selectNode","selection","getSelection","removeAllRanges","addRange","execCommand","removeChild","columnMenuStateInitializer","columnMenu","open","useGridRegisterPipeProcessor","random","registerPreProcessor","useFirstRender","isFirstRender","useGridRegisterPipeApplier","columnsStateInitializer","columnsState","columnsToUpsert","columns","initialState","columnVisibilityModel","keepOnlyColumnsToUpsert","pinnedColumns","mergeColumnsState","densityStateInitializer","density","getColumnsToExport","fields","currentColumns","field","column","col","allColumns","filter","disableExport","defaultGetRowsToExport","filteredSortedRowIds","rowTree","selectedRows","getSelectedRows","bodyRows","pinnedRows","topPinnedRowsIds","row","bottomPinnedRowsIds","unshift","size","useGridCsvExport","useGridLogger","ignoreValueFormatterProp","ignoreValueFormatterDuringExport","csvExport","getDataAsCsv","rowIds","CSVBody","acc","getCellParams","serializeRow","trim","includeHeaders","filteredColumns","headerRows","includeColumnGroupsHeaders","columnGroupLookup","getAllGroupDetails","maxColumnGroupsDepth","columnGroupPathsLookup","columnGroupPath","getColumnGroupPath","max","headerGroupRow","columnGroupId","columnGroup","headerName","groupId","mainHeaderRow","buildCSV","getRowsToExport","exportDataAsCsv","csv","blob","extension","filename","title","fullName","HTMLAnchorElement","prototype","url","URL","createObjectURL","a","href","download","click","setTimeout","revokeObjectURL","exportAs","Blob","utf8WithBom","Uint8Array","fileName","csvExportApi","addExportMenuButtons","initialValue","disableToolbarButton","componentName","getDerivedPaginationModel","paginationState","paginationModelProp","paginationModel","rowCount","pageSize","page","pageCount","validPage","useGridRegisterStrategyProcessor","filterStateInitializer","filterModel","disableMultipleColumnsFiltering","filteredRowsLookup","filteredDescendantCountLookup","visibleRowsLookup","getVisibleRowsLookup","getVisibleRowsLookupState","tree","rows","createMemoizedValues","defaultMemoize","focusStateInitializer","focus","cell","columnHeader","columnHeaderFilter","columnGroupHeader","tabIndex","getLeftColumnIndex","currentColIndex","firstColIndex","lastColIndex","direction","getRightColumnIndex","paginationStateInitializer","autoPageSize","pagination","meta","paginationMeta","preferencePanelStateInitializer","preferencePanel","_excluded2","editingStateInitializer","editRows","rowsStateInitializer","isDataSourceAvailable","unstable_dataSource","getRowId","loading","rowCountProp","loadingProp","previousTree","previousTreeDepths","flatRowTreeCreationMethod","updates","rowId","depth","parent","groupingKey","groupingName","treeDepths","dataRowIds","createFlatRowTree","actions","idsToRemoveFromRootGroup","remove","idToDelete","insert","idToInsert","rootGroup","rootGroupChildren","updateFlatRowTree","getSelectionModelPropValue","selectionModelProp","prevSelectionModel","isArray","rowSelectionStateInitializer","rowSelection","rowSelectionModel","sortingStateInitializer","sortModel","disableMultipleColumnsSorting","sortedRows","scrollIntoView","dimensions","clientHeight","scrollTop","offsetHeight","offsetTop","elementBottom","EMPTY_SIZE","EMPTY_DIMENSIONS","isReady","viewportOuterSize","viewportInnerSize","contentSize","minimumSize","hasScrollX","hasScrollY","scrollbarSize","headerHeight","headerFilterHeight","rowWidth","rowHeight","columnsTotalWidth","leftPinnedWidth","rightPinnedWidth","headersTotalHeight","topContainerHeight","bottomContainerHeight","dimensionsStateInitializer","areElementSizesEqual","b","rowsMetaStateInitializer","rowsMeta","currentPageTotalHeight","positions","getValidRowHeight","rowHeightProp","defaultRowHeight","warningMessage","calculateCellColSpan","lookup","columnIndex","minFirstColumnIndex","maxLastColumnIndex","columnsLength","getRow","getRowValue","colSpan","setCellColSpanInfo","spannedByColSpan","cellProps","computedWidth","j","nextColumnIndex","rightVisibleCellIndex","min","leftVisibleCellIndex","cellColSpanInfo","recurrentUnwrapGroupingColumnModel","columnGroupNode","parents","unwrappedGroupingModelToComplete","child","unwrapGroupingColumnModel","columnGroupingModel","unwrappedSubTree","getColumnGroupsHeaderStructure","orderedColumns","unwrappedGroupingModel","pinnedFields","getParents","groupingHeaderStructure","maxDepth","haveSameParents","field1","field2","slice","depthStructure","structure","newField","columnFields","lastGroup","prevField","createGroupLookup","groupLookup","node","groupParam","subTreeLookup","columnGroupsStateInitializer","visibleColumnFields","columnGroupsHeaderStructure","columnGrouping","headerStructure","trackFinger","currentTouchId","changedTouches","touch","identifier","x","clientX","y","clientY","computeNewWidth","initialOffsetToSeparator","clickX","columnBounds","resizeDirection","newWidth","preventClick","preventDefault","stopImmediatePropagation","columnResizeStateInitializer","columnResize","resizingColumnField","createResizeRefs","initialColWidth","initialTotalWidth","previousMouseClickEvent","columnHeaderElement","headerFilterElement","groupHeaderElements","cellElements","leftPinnedCellsAfter","rightPinnedCellsBefore","fillerLeft","fillerRight","leftPinnedHeadersAfter","rightPinnedHeadersBefore","useGridColumnResize","refs","useLazyRef","stopResizeEventTimeout","useTimeout","touchId","updateWidth","prevWidth","offsetWidth","widthDiff","columnWidthDiff","newTotalWidth","setProperty","flex","minWidth","element","div","finalWidth","getAttribute","pinnedPosition","LEFT","updateProperty","header","RIGHT","finishResize","nativeEvent","stopListening","prevEvent","prevTimeStamp","timeStamp","prevClientX","prevClientY","setColumnWidth","start","storeReferences","separator","xStart","getRootDimensions","columnHeadersContainerRef","querySelector","gridClasses","headerFilterRow","side","classList","contains","flipResizeDirection","getResizeDirection","computeOffsetToSeparator","getBoundingClientRect","handleResizeMouseUp","useEventCallback","handleResizeMouseMove","buttons","handleTouchEnd","handleTouchMove","finger","handleTouchStart","cellSeparator","getColumn","doc","ownerDocument","currentTarget","addEventListener","removeProperty","removeEventListener","pointerEvents","handleResizeStart","handleResizeStop","handleColumnResizeMouseDown","button","cursor","handleColumnSeparatorDoubleClick","disableAutosize","resizable","autosizeColumns","autosizeOptions","columnVirtualizationDisabled","promise","selector","useGridSelector","resolve","Promise","reject","_resolve","_reject","createControllablePromise","useColumnVirtualizationDisabled","isAutosizingRef","async","userOptions","orderedFields","c","unstable_setColumnVirtualization","widthByField","autosizing","widths","filteredWidths","includeOutliers","inputValues","factor","sort","q1","floor","q3","iqr","deviation","v","excludeOutliers","outliersFactor","columnHeaderTitle","columnHeaderTitleContainerContent","iconContainer","iconButtonContainer","menuContainer","menuIcon","getComputedStyle","paddingWidth","parseInt","paddingLeft","paddingRight","scrollWidth","clientWidth","hasColumnMin","hasColumnMax","Infinity","maxContent","extractColumnWidths","newColumns","expand","totalWidth","total","remainingWidth","widthPerColumn","updateColumns","newColumn","index","getColumnHeaderElement","useOnMount","autosizeOnMount","then","useGridNativeEventListener","passive","useGridApiEventHandler","onColumnResize","onColumnWidthChange","property","delta","useDataGridComponent","composeClasses","cellCheckbox","columnHeaderCheckbox","updateSelectionColumn","selectionColumn","cellClassName","headerClassName","shouldHaveSelectionColumn","checkboxSelection","haveSelectionColumn","useGridRowSelectionPreProcessors","useGridRowsPreProcessors","initialCurrentPageRows","useGridVisibleRows","currentPageRows","enrichPageRowsWithPinnedRows","headerFilteringEnabled","headerFilters","goToCell","colIndex","closestColumnToUse","visibleSortedRows","nextCellColSpanInfo","unstable_getCellColSpanInfo","rowIndexRelativeToAllRows","findIndex","scrollToIndexes","rowIndex","getVisibleColumns","setCellFocus","goToHeader","setColumnHeaderFocus","goToHeaderFilter","setColumnHeaderFilterFocus","goToGroupHeader","setColumnGroupHeaderFocus","getRowIdFromIndex","handleColumnHeaderKeyDown","headerTitleNode","viewportPageSize","getViewportPageSize","colIndexBefore","getColumnIndex","firstRowIndexInPage","lastRowIndexInPage","columnGroupMaxDepth","shouldPreventDefault","rightColIndex","leftColIndex","ctrlKey","metaKey","toggleColumnMenu","handleHeaderFilterKeyDown","isEditing","isHeaderMenuOpen","handleColumnGroupHeaderKeyDown","focusedColumnGroup","currentField","currentDepth","remainingRightColumns","remainingLeftColumns","handleCellKeyDown","cellMode","Edit","rowIndexBefore","shiftKey","nextRowIndex","checkIfCanStartEditing","useGridKeyboardNavigation","runIfRowSelectionIsEnabled","propRowSelectionModel","lastRowToggled","onRowSelectionModelChange","disableRowSelectionOnClick","isRowSelectable","propIsRowSelectable","canHaveMultipleSelection","visibleRows","expandMouseRowRangeSelection","endId","startId","isSelected","isRowSelected","visibleRowIds","startIndex","endIndex","selectRowRange","setRowSelectionModel","DataGrid","getRowParams","rowNode","getRowNode","selectRow","resetSelection","newSelection","selectRows","ids","selectableIds","selectionLookup","allPagesRowIds","end","rowsBetweenStartAndEnd","selectionPublicApi","selectionPrivateApi","removeOutdatedSelection","keepNonExistentRowsSelected","currentSelection","rowsLookup","hasChanged","handleSingleRowSelection","hasCtrlKey","isMultipleSelectionDisabled","handleRowClick","closest","preventSelectionOnShift","handleRowSelectionCheckboxChange","handleHeaderSelectionCheckboxChange","rowsToBeSelected","checkboxSelectionVisibleOnly","items","getCellMode","focusCell","isNextRowSelected","newRowIndex","getRowIndexRelativeToVisibleRows","previousRowIndex","getAllRowIds","isStateControlled","useGridRowSelection","previousColumnsProp","onColumnVisibilityModelChange","setGridColumnsState","updateRenderContext","getAllColumns","useVisibleColumns","getColumnPosition","setColumnVisibilityModel","setColumnVisibility","isVisible","newModel","getColumnIndexRelativeToVisibleColumns","setColumnIndex","targetIndexPosition","oldIndexPosition","updatedColumns","fieldRemoved","splice","targetIndex","oldIndex","hasBeenResized","columnApi","columnReorderApi","stateExportPreProcessing","prevState","columnsStateToExport","columnVisibilityModelToExport","exportOnlyDirtyModels","colDefDimensions","propertyName","propertyValue","stateRestorePreProcessing","columnVisibilityModelToImport","stateToRestore","preferencePanelPreProcessing","ColumnsPanel","columnsPanel","slotProps","addColumnMenuItems","columnMenuItems","disableColumnSelector","prevInnerWidth","hydrateColumns","useGridColumns","currentPage","lastUpdateMs","Date","now","lastRowCount","timeout","getRowIdProp","throttledRowsChange","throttle","run","previousGroupsToFetch","clear","throttleRemainingTimeMs","throttleRowsMs","setRows","prevCache","rowsBeforePartialUpdates","updateRows","nonPinnedRowsUpdates","previousCache","updateServerRows","groupKeys","setLoading","loadingPropBeforePartialUpdates","getRowModels","dataRows","idRowsLookup","getRowsCount","setRowChildrenExpansion","isExpanded","currentNode","newNode","childrenExpanded","getRowGroupChildren","skipAutoGeneratedRows","applySorting","applyFiltering","groupNode","sortedRowIds","childId","setRowIndex","allRows","updatedRows","rowApi","unstable_replaceRows","firstRowToRender","newRows","dataRowIdToModelLookup","dataRowIdToIdLookup","seenIds","rowModel","removedRowId","rowTreeNodeConfig","rowProApi","rowProPrivateApi","groupRows","handleStrategyProcessorChange","handleStrategyActivityChange","applyHydrateRowsProcessor","response","totalTopLevelRowCount","isRowCountPropUpdated","areNewRowsAlreadyInState","isNewLoadingAlreadyInState","isNewRowCountAlreadyInState","rowCountPropBeforePartialUpdates","totalRowCount","useGridRows","useGridParamsApi","resetColSpan","columnSpanningPublicApi","columnSpanningPrivateApi","calculateColSpan","minFirstColumn","maxLastColumn","useGridColumnSpanning","columnGroupingApi","handleColumnIndexChange","updateColumnGroupingState","getPinnedColumns","useGridColumnGrouping","cellModesModel","setCellModesModel","cellModesModelRef","prevCellModesModel","processRowUpdate","onProcessRowUpdateError","cellModesModelProp","onCellModesModelChange","runIfEditModeIsCell","editMode","Cell","throwIfNotEditable","isCellEditable","throwIfNotInMode","handleCellDoubleClick","isEditable","newParams","cellDoubleClick","handleCellFocusOut","View","cellFocusOut","which","escapeKeyDown","enterKeyDown","shiftTabKeyDown","tabKeyDown","printableKeyDown","pasteKeyDown","deleteKeyDown","handleCellEditStart","startCellEditModeParams","deleteValue","startCellEditMode","handleCellEditStop","cellToFocusAfter","runPendingEditCellValueMutation","ignoreModifications","stopCellEditMode","onCellEditStart","onCellEditStop","editRowsState","hasFieldErrors","editingState","updateCellModesModel","isNewModelDifferentFromProp","updateFieldInCellModesModel","newProps","_newModel$id","otherFields","updateOrDeleteFieldState","newEditingState","updateStateToStartCellEditMode","newValue","getCellValue","isProcessingProps","updateStateToStopCellEditMode","finishCellEditMode","moveFocusToRelativeCell","rowUpdate","getRowWithUpdatedValuesFromCellEditing","handleError","errorThrown","finalRowUpdate","catch","editingApi","editingPrivateApi","setCellEditingEditCellValue","debounceMs","unstable_skipValueParser","skipValueParser","parsedValue","valueParser","changeReason","preProcessEditCellProps","valueSetter","useEnhancedEffect","idToIdLookup","copyOfPrevCellModes","prevMode","originalId","useGridCellEditing","rowModesModel","setRowModesModel","rowModesModelRef","prevRowModesModel","focusTimeout","nextFocusedCell","rowModesModelProp","onRowModesModelChange","runIfEditModeIsRow","Row","getRowMode","hasFieldsWithErrors","fieldProps","rowParams","handleCellFocusIn","rowFocusOut","clearTimeout","nextFieldToFocus","handleRowEditStart","startRowEditModeParams","fieldToFocus","startRowEditMode","handleRowEditStop","stopRowEditMode","onRowEditStart","onRowEditStop","updateRowModesModel","updateRowInRowModesModel","updateOrDeleteRowState","updateStateToStartRowEditMode","updateStateToStopRowEditMode","focusedField","finishRowEditMode","getRowWithUpdatedValuesFromRowEditing","setRowEditingEditCellValue","promises","_editingState$id","otherFieldsProps","processedProps","thisField","fieldColumn","_editingState$id2","all","copyOfPrevRowModesModel","useGridRowEditing","debounceMap","isCellEditableProp","editable","renderEditCell","debounces","runCallback","debouncedField","editingSharedApi","setEditCellValue","maybeDebounce","setEditCellValueToCall","getRowWithUpdatedValues","unstable_getEditCellMeta","editingSharedPrivateApi","useGridEditing","lastClickedCell","publishCellFocusOut","focusedCell","getColumnGroupHeaderFocus","columnIndexToFocus","visibleColumns","paginationMode","concat","rowIndexToFocus","rowToFocus","colSpanInfo","columnToFocus","handleColumnHeaderFocus","handleColumnGroupHeaderFocus","handleBlur","relatedTarget","handleCellMouseDown","handleDocumentClick","cellElement","getCellElement","handleCellModeChange","handleRowSet","handlePaginationModelChange","currentFocusedCell","focusApi","focusPrivateApi","useGridFocus","hideTimeout","immediateTimeout","hidePreferences","preferencePanelState","openedPanelValue","doNotHidePanel","hidePreferencesDelayed","showPreferences","panelId","labelId","preferencePanelToExport","useGridPreferencesPanel","onFilterModelChange","updateFilteredRows","filterState","getFilterState","visibleRowsLookupState","addColumnMenuItem","filterable","disableColumnFilter","applyFilters","upsertFilterItem","item","itemIndex","filterItem","setFilterModel","upsertFilterItems","existingItems","deleteFilterItem","itemToDelete","showFilterPanel","targetColumnField","filterItemsWithValue","filterOperator","filterOperators","operator","requiresFilterValue","newFilterItems","filterItemOnTarget","targetColumn","filters","hideFilterPanel","setFilterLogicOperator","logicOperator","setQuickFilterValues","quickFilterValues","unstable_applyFilters","inputFilterModel","isRowMatchingFilters","filterMode","disableEval","filterResult","filterApi","ignoreDiacritics","filterModelToExport","callbacks","FilterPanel","filterPanel","getRowsRef","flatFilteringMethod","filterCache","passingFilterItems","passingQuickFilterValues","isRowPassing","footerId","handleColumnsChange","columnsLookup","updateVisibleRowsLookupState","useGridFilter","onSortModelChange","upsertSortModel","sortItem","existingIdx","newSortModel","createSortItem","directionOverride","existing","nextSort","sortingOrder","sortable","disableColumnSorting","sortingMode","sortRowList","setSortModel","sortColumn","allowMultipleSorting","sortApi","getSortModel","getSortedRows","getSortedRowIds","getRowIdFromRowIndex","sortModelToExport","flatSortingMethod","rootGroupNode","sortedChildren","handleColumnHeaderClick","latestColumns","useGridSorting","onDensityChange","densityApi","setDensity","newDensity","exportedDensity","restoredDensity","useGridDensity","onPaginationMetaChange","paginationMetaApi","setPaginationMeta","newPaginationMeta","exportedPaginationMeta","restoredPaginationMeta","useGridPaginationMeta","densityFactor","onPaginationModelChange","paginationModelApi","setPage","currentModel","setPaginationModel","setPageSize","handleUpdateAutoPageSize","maximumPageSizeWithoutScrollBar","handleRowCountChange","newRowCount","useGridPaginationModel","visibleTopLevelRowCount","rowCountState","previousPageSize","onRowCountChange","paginationRowCountApi","setRowCount","exportedRowCount","restoredRowCount","isLastPage","hasNextPage","useGridRowCount","useGridPagination","getRowHeight","getRowHeightProp","getRowSpacing","getEstimatedRowHeight","rowsHeightLookup","lastMeasuredRowIndex","hasRowWithAutoHeight","gridPaginationSelector","validRowHeight","hydrateRowsMeta","calculateRowProcessedSizes","sizes","baseCenter","isResized","autoHeight","needsFirstMeasurement","baseRowHeight","existingBaseRowHeight","rowHeightFromUser","initialHeights","indexRelativeToCurrentPage","spacing","isFirstVisible","isLastVisible","spacingTop","spacingBottom","processedSizes","otherSizes","setRowHeight","debouncedHydrateRowsMeta","debounce","rowPositionsDebounceMs","storeMeasuredRowHeight","needsHydration","rowHasAutoHeight","getLastMeasuredRowIndex","setLastMeasuredRowIndex","resetRowHeights","rowsMetaApi","unstable_setLastMeasuredRowIndex","unstable_getRowHeight","unstable_getRowInternalSizes","unstable_setRowHeight","unstable_storeRowHeightMeasurement","rowsMetaPrivateApi","useGridRowsMeta","colRef","scrollCoordinates","columnPositions","cellWidth","abs","scrollLeft","gridRowsMetaSelector","elementIndex","targetOffsetHeight","scroll","scrollApi","getScrollPosition","useGridScroll","showColumnMenu","columnMenuState","hideColumnMenu","columnLookup","visibleOrderedFields","fieldIndex","columnMenuApi","useGridColumnMenu","previousGridState","previousColumnVisibility","previousRows","previousVirtualizationState","updateGridColumnsForPrint","includeCheckboxes","exportedColumnFields","newColumnVisibilityModel","updateGridRowsForPrint","handlePrintWindowLoad","printWindow","normalizeOptions","copyStyles","hideToolbar","hideFooter","printDoc","contentDocument","gridRootElement","gridClone","cloneNode","contain","gridToolbarElementHeight","toolbarContainer","gridFooterElementHeight","footerContainer","computedTotalHeight","boxSizing","gridFooterElement","container","innerHTML","defaultPageStyle","pageStyle","styleElement","createTextNode","head","bodyClassName","split","stylesheetLoadPromises","rootCandidate","getRootNode","headStyleElements","querySelectorAll","tagName","newHeadStyleElements","sheet","styleCSS","cssRules","cssText","attributes","attr","setAttribute","nodeName","nodeValue","contentWindow","print","handlePrintWindowAfterPrint","restoreState","virtualization","printExportApi","exportDataAsPrint","exportState","enabled","enabledForColumns","requestAnimationFrame","iframeEl","buildPrintWindow","onload","matchMedia","mql","matches","printOptions","useGridPrintExport","clipboardExport","clipboardCopyCellDelimiter","handleCopy","toLowerCase","altKey","selectionEnd","selectionStart","textToCopy","navigator","clipboard","writeText","onClipboardCopy","useGridClipboard","errorShown","rootDimensionsRef","dimensionsState","columnHeaderHeight","w","savedSize","setSavedSize","debouncedSetSavedSize","func","wait","lastArgs","later","throttled","resizeThrottleMs","previousSize","setDimensions","resize","computedStyle","ownerWindow","newSize","parseFloat","renderContext","lastRowIndex","firstRowIndex","updateDimensions","rootElement","pinnedRowsHeight","scrollDiv","measureScrollbarSize","hasScrollXIfNoYScrollBar","hasScrollYIfNoXScrollBar","newDimensions","prevDimensions","apiPublic","apiPrivate","k","Number","isFirstSizing","handleResize","isJSDOM","test","userAgent","onResize","useGridDimensions","onColumnHeaderClick","onColumnHeaderDoubleClick","onColumnHeaderOver","onColumnHeaderOut","onColumnHeaderEnter","onColumnHeaderLeave","onCellClick","onCellDoubleClick","onCellKeyDown","onPreferencePanelClose","onPreferencePanelOpen","onMenuOpen","onMenuClose","onRowDoubleClick","onRowClick","onStateChange","useGridEvents","statePersistenceApi","useGridStatePersistence","useGridVirtualization","DataGridRaw","useDataGridProps","GridContextProvider","GridRoot","sx","forwardedProps","GridHeader","GridFooterPlaceholder","propTypes","isRequired","columnBufferPx","disableColumnMenu","disableColumnResize","disableDensitySelector","disableMultipleRowSelection","disableVirtualization","estimatedRowCount","experimentalFeatures","warnIfFocusStateIsNotSynced","filterDebounceMs","quickFilterExcludeHiddenColumns","quickFilterLogicOperator","getCellClassName","getDetailPanelContent","getRowClassName","hideFooterPagination","hideFooterSelectedRowCount","nonce","onColumnOrderChange","pageSizeOptions","label","rowBufferPx","rowSpacingType","showCellVerticalBorder","showColumnVerticalBorder","GridNoResultsOverlay","noResultsOverlayLabel","useGridApiContext","GridOverlay","GridColumnUnsortedIcon","useGridRootProps","nextSortDirection","Icon","columnSortedAscendingIcon","columnSortedDescendingIcon","iconSlots","booleanCellTrueIcon","booleanCellFalseIcon","columnMenuIcon","openFilterButtonIcon","filterPanelDeleteIcon","columnFilteredIcon","columnSelectorIcon","columnUnsortedIcon","columnResizeIcon","densityCompactIcon","densityStandardIcon","densityComfortableIcon","exportIcon","moreActionsIcon","treeDataCollapseIcon","treeDataExpandIcon","groupingCriteriaCollapseIcon","groupingCriteriaExpandIcon","detailPanelExpandIcon","detailPanelCollapseIcon","rowReorderIcon","quickFilterIcon","quickFilterClearIcon","columnMenuHideIcon","columnMenuSortAscendingIcon","columnMenuSortDescendingIcon","columnMenuFilterIcon","columnMenuManageColumnsIcon","columnMenuClearIcon","loadIcon","filterPanelAddIcon","filterPanelRemoveAllIcon","columnReorderIcon","baseCheckbox","baseTextField","baseFormControl","baseSelect","baseButton","baseIconButton","baseInputAdornment","baseTooltip","basePopper","baseInputLabel","baseSelectOption","native","baseChip","DATA_GRID_DEFAULT_SLOTS_COMPONENTS","material","GridCell","skeletonCell","GridSkeletonCell","columnHeaderFilterIconButton","GridColumnHeaderFilterIconButton","columnHeaderSortIcon","GridColumnHeaderSortIcon","GridColumnMenu","columnHeaders","GridColumnHeaders","detailPanels","footer","GridFooter","footerRowCount","GridRowCount","toolbar","loadingOverlay","GridLoadingOverlay","noResultsOverlay","noRowsOverlay","GridNoRowsOverlay","GridPagination","GridFilterPanel","GridColumnsPanel","G","columnsManagement","GridColumnsManagement","panel","GridPanel","GridRow","DATA_GRID_FORCED_PROPS","hideFooterRowCount","disableColumnReorder","keepColumnPositionIfDraggedOutside","DATA_GRID_PROPS_DEFAULT_VALUES","defaultSlots","themedProps","allProps","useThemeProps","startsWith","groupForwardedProps","TypeError","_objectDestructuringEmpty","overrides","computeSlots","injectDefaultProps","GRID_ACTIONS_COLUMN_TYPE","GRID_ACTIONS_COL_DEF","aggregable","align","headerAlign","renderCell","getApplyQuickFilterFn","GRID_BOOLEAN_COL_DEF","sortComparator","valueFormatter","pastedValueParser","stringToBoolean","getGridBooleanOperators","getApplyFilterFn","valueAsBoolean","InputComponent","GRID_CHECKBOX_SELECTION_FIELD","GRID_CHECKBOX_SELECTION_COL_DEF","disableReorder","valueGetter","renderHeader","throwIfNotDateObject","gridDateFormatter","toLocaleDateString","gridDateTimeFormatter","toLocaleString","GRID_DATE_COL_DEF","GRID_DATETIME_COL_DEF","buildApplyFilterFn","compareFn","showTime","keepHours","date","setSeconds","setMinutes","getMinutes","getTimezoneOffset","setHours","time","getTime","dateCopy","getGridDateOperators","value1","value2","InputComponentProps","DEFAULT_GRID_COL_TYPE_KEY","getGridDefaultColumnTypes","string","number","dateTime","boolean","singleSelect","custom","GRID_NUMERIC_COL_DEF","parseNumericValue","getGridNumericQuickFilterFn","isNaN","columnValue","getGridNumericOperators","GRID_SINGLE_SELECT_COL_DEF","getOptionLabel","getOptionValue","valueOptions","valueOption","option","parseObjectValue","getGridSingleSelectOperators","filterItemValues","GRID_STRING_COL_DEF","hideable","groupable","pinnable","getGridStringQuickFilterFn","filterRegex","RegExp","getRowFormattedValue","getGridStringOperators","disableTrim","filterItemValue","collator","Intl","Collator","sensitivity","usage","compare","val","filterValue","GridColumnGroupHeader","hasFocus","isLastColumn","indexInSection","sectionLength","gridHasFiller","headerCellRef","columnGroupsLookup","description","headerComponent","render","renderHeaderGroup","renderParams","showLeftBorder","showRightBorder","isDragging","useId","elementId","draggableContainer","titleContainer","titleContainerContent","elementToFocus","publish","mouseEventsHandlers","onKeyDown","onFocus","onBlur","GridGenericColumnHeaderItem","columnMenuOpen","isResizing","sortDirection","isDraggable","columnMenuIconButton","columnTitleIconButtons","GridColumnHeaderRow","styled","columnHeaderRow","GridColumnHeadersRoot","flexDirection","borderTopLeftRadius","borderTopRightRadius","GridBaseColumnHeaders","clsx","sortColumnLookup","filterColumnLookup","columnHeaderTabIndexState","columnGroupHeaderTabIndexState","columnHeaderFocus","columnGroupHeaderFocus","headerGroupingMaxDepth","columnVisibility","hasOtherElementInTabSequence","getInnerProps","getColumnHeadersRow","getColumnGroupHeadersRows","dragCol","setDragCol","resizeCol","setResizeCol","useGridPrivateApiContext","hasVirtualization","columnGroupsModel","offsetLeft","handleColumnResizeStart","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","leftRenderContext","firstColumnIndex","lastColumnIndex","rightRenderContext","getColumnsToRender","currentContext","firstColumnToRender","lastColumnToRender","renderedColumns","getFillers","leftOverflow","borderTop","isPinnedRight","isNotPinned","hasScrollbarFiller","leftOffsetWidth","filler","pinnedRight","getCellOffsetStyle","pinnedOffset","getPinnedCellOffset","getColumnHeaders","isFirstColumn","GridColumnHeaderItem","filterItemsCounter","isLast","getColumnGroupHeaders","columnsToRender","rowStructure","firstColumnFieldToRender","firstGroupToRender","firstGroupIndex","lastColumnFieldToRender","lastGroupToRender","lastGroupIndex","visibleColumnGroupHeader","groupStructure","firstVisibleColumnIndex","headerInfo","separatorSide","GridColumnHeaderSeparator","Left","useGridColumnHeaders","MemoizedGridColumnHeaders","fastMemo","selectedRowCount","selectedRowCountElement","rowCountElement","visibleRowCount","paginationElement","GridPreferencesPanel","panelContent","SkeletonOverlay","skeletonLoadingOverlay","getColIndex","GridSkeletonLoadingOverlay","forwardedRef","handleRef","useForkRef","viewportHeight","skeletonRowsCount","ceil","inViewportCount","allVisibleColumns","getPinnedStyle","getPinnedPosition","array","rowCells","isPinnedLeft","sectionIndex","pinnedStyle","isFirstPinnedRight","hasFillerBefore","hasFillerAfter","expandedWidth","emptyCellWidth","emptyCell","empty","scrollbarWidth","GridScrollbarFillerCell","rowSkeleton","cells","resizedColIndex","currentWidth","getPropertyValue","pinnedCells","LOADING_VARIANTS","CircularProgress","skeleton","noRowsVariant","rowsCount","activeVariant","noRowsLabel","GridPaginationRoot","selectLabel","breakpoints","up","input","defaultLabelDisplayedRows","to","count","estimated","computedProps","backIconButtonProps","disabled","nextIconButtonProps","lastPage","computedPage","handlePageSizeChange","handlePageChange","isPageSizeIncludedInPageSizeOptions","locales","wrappedLabelDisplayedRows","labelDisplayedRows","rowsPerPageOptions","rowsPerPage","onPageChange","onRowsPerPageChange","EmptyCell","cellEmpty","refProp","selected","styleProp","focusedColumnIndex","isNotVisible","onClick","onDoubleClick","onMouseEnter","onMouseLeave","onMouseOut","onMouseOver","treeDepth","hasFocusCell","hasVirtualFocusCellLeft","hasVirtualFocusCellRight","ariaRowIndex","editing","ResizeObserver","resizeObserver","entry","borderBoxSize","blockSize","contentRect","observe","disconnect","propHandler","publishClick","rowReordering","minHeight","numberOfBaseSizes","maximumSize","rowStyle","maxHeight","rowClassNames","getCell","indexRelativeToAllColumns","NONE","editCellState","isReorderCell","isEditingRows","canReorderColumn","canReorderRow","disableDragEvents","cellIsNotVisible","VIRTUAL","leftCells","rightCells","middleColumnsLength","eventHandlers","cellOffsetLeft","MemoizedGridRow","GridRowCountRoot","alignItems","margin","scrollbarFiller","GridSelectedRowCountRoot","GridSelectedRowCount","rowSelectedText","GridOverlayWrapperRoot","shouldForwardProp","prop","overlayWrapper","overlayType","loadingOverlayVariant","GridOverlayWrapperInner","overlayWrapperInner","inner","GridOverlayWrapper","GridOverlays","Overlay","overlayProps","hasActions","getActions","GridActionsCell","focusElementRef","focusedButtonIndex","setFocusedButtonIndex","setOpen","rootRef","buttonRef","ignoreCallToFocus","touchRippleRefs","menuId","buttonId","iconButtons","showInMenu","menuButtons","numberOfButtons","stop","preventScroll","focusableButtonIndex","o","hideMenu","handleTouchRippleRef","instance","handleButtonClick","actionsCell","getNewIndex","indexMod","newIndex","stopPropagation","touchRippleRef","fontSize","onClose","menuList","autoFocusItem","closeMenu","renderActionsCell","GridBooleanCellRaw","titleAccess","GridBooleanCell","renderBooleanCell","cachedSupportsPreventScroll","PinnedPosition","gridPinnedColumnPositionLookup","EMPTY_CELL_PARAMS","onMouseDown","onMouseUp","onKeyUp","onDragEnter","onDragOver","cellParamsWithAPI","e","canManageOwnFocus","rootClasses","classNames","valueToRender","cellRef","isSelectionMode","cellSelection","capitalize","publishMouseUp","publishMouseDown","padding","border","cellStyle","activeElement","focusableElement","scrollPosition","handleFocus","updatedRow","editCellStateRest","valueString","draggableEventHandlers","MemoizedGridCell","GridEditBooleanCell","idProp","onValueChange","inputRef","valueState","setValueState","handleChange","checked","htmlFor","onChange","renderEditBooleanCell","StyledInputBase","GridEditDateCell","valueProp","inputProps","isDateTime","valueTransformed","parsedDate","formattedDate","substr","parsed","formatted","parseValueToDate","year","month","day","setFullYear","hours","minutes","newFormattedDate","newParsedDate","fullWidth","renderEditDateCell","GridEditInputCellRoot","editInputCell","typography","body2","GridEditInputCell","endAdornment","renderEditInputCell","GridEditSingleSelectCell","initialOpen","isSelectNative","MenuProps","otherBaseSelectProps","formattedTargetValue","onOpen","isKeyboardEvent","renderEditSingleSelectCell","CIRCULAR_CONTENT_SIZE","DEFAULT_CONTENT_WIDTH_RANGE","CONTENT_WIDTH_RANGE_BY_TYPE","randomNumberGenerator","Memoized","skeletonProps","icon","counter","toggleFilter","getColumnHeaderParams","iconButton","enterDelay","badgeContent","ColumnHeaderMenuIcon","columnMenuId","columnMenuButtonId","iconButtonRef","handleMenuIconClick","sortIndex","showColumnMenuIcon","setShowColumnMenuIcon","isColumnSorted","isColumnFiltered","isColumnNumeric","onDragStart","onDragEnd","columnHeaderSeparatorProps","handleExited","GridColumnHeaderMenu","ContentComponent","contentComponentProps","onExited","showSortIcon","hideSortIcons","draggableContainerProps","GridColumnHeaderSeparatorSides","GridColumnHeaderSeparatorRaw","Right","resizing","stopClick","GridColumnHeaderSortIconRaw","iconElement","icons","iconProps","getIcon","overlap","GridColumnHeaderTitleRoot","textOverflow","fontWeight","ColumnHeaderInnerTitle","GridColumnHeaderTitle","titleRef","tooltip","setTooltip","handleMouseOver","isOver","ariaSort","draggable","columnWidth","GridIconButtonContainerRoot","GridIconButtonContainer","GridCellCheckboxForwardRef","isChecked","checkboxElement","rippleRef","handleKeyDown","isSelectable","GridCellCheckboxRenderer","GridHeaderCheckbox","tabIndexState","paginatedVisibleRowIds","filteredSelection","selectionCandidates","currentSelectionSize","isIndeterminate","handleSelectionChange","p","indeterminate","checkColumnVisibilityModelsSame","aFalseValues","bFalseValues","defaultSearchPredicate","searchValue","searchInputRef","initialColumnVisibilityModel","setSearchValue","searchPredicate","autoFocusSearchField","disableShowHideToggle","disableResetButton","toggleAllMode","getTogglableColumns","isResetDisabled","sortedColumns","toggleColumn","togglableColumns","togglableSortedColumns","toggleAllColumns","handleSearchValueChange","hideableColumns","allHideableColumnsVisible","every","allHideableColumnsHidden","firstSwitchRef","firstHideableColumnFound","isFirstHideableColumn","GridColumnsManagementHeader","placeholder","InputProps","startAdornment","pl","GridColumnsManagementBody","FormControlLabel","control","GridColumnsManagementEmptyText","GridColumnsManagementFooter","columnsManagementHeader","columnsManagementFooter","justifyContent","divider","grey","GridFooterContainerRoot","GridFooterContainer","GridOverlayRoot","overlay","alignSelf","columnHeadersStyles","columnSeparator","columnHeaderStyles","GridRootStyles","aggregationColumnHeader","aggregationColumnHeaderLabel","editBooleanCell","cellSkeleton","checkboxInput","columnHeaderDraggableContainer","columnHeaderTitleContainer","filterIcon","iconSeparator","menuIconButton","menuOpen","rowReorderCellPlaceholder","rowReorderCell","sortIcon","withBorderColor","treeDataGroupingCell","treeDataGroupingCellToggle","treeDataGroupingCellLoadingContainer","detailPanelToggleCell","borderColor","TableCell","radius","containerBackground","background","default","mixins","MuiDataGrid","pinnedBackground","overlayBackground","defaultChannel","disabledOpacity","hoverOpacity","hoverColor","selectedOpacity","selectedBackground","mainChannel","selectedHoverBackground","pinnedHoverBackground","blend","pinnedSelectedBackground","pinnedSelectedHoverBackground","selectedStyles","fontWeightMedium","borderWidth","borderStyle","outline","overflowAnchor","groupingCriteriaCell","WebkitTapHighlightColor","lineHeight","outlineWidth","outlineOffset","transitions","duration","shorter","borderBottomWidth","borderBottomStyle","marginRight","marginLeft","touchAction","breakInside","borderTopColor","boxShadow","shadows","paper","booleanCell","secondary","gridGap","rowReorderCellContainer","borderLeftColor","borderLeftWidth","borderLeftStyle","borderRightColor","borderRightWidth","borderRightStyle","textAlign","virtualScrollerContent","groupingCriteriaCellToggle","gamma","f","overlayColor","rgb","mountedState","setMountedState","GridMenuRoot","menu","modal","GridMenu","savedFocusRef","HTMLElement","handleClickAway","anchorEl","placement","TransitionProps","onClickAway","mouseEvent","popperOnExited","labelledby","GRID_COLUMN_MENU_SLOTS","columnMenuSortItem","GridColumnMenuSortItem","columnMenuFilterItem","GridColumnMenuFilterItem","columnMenuColumnsItem","GridColumnMenuColumnsItem","GRID_COLUMN_MENU_SLOT_PROPS","displayOrder","GridGenericColumnMenu","defaultSlotProps","orderedSlots","addDividers","processedComponents","processedSlotProps","mergedProps","currentSlotProps","defaultItems","userItems","defaultComponentKeys","sorted","leftItemProps","rightItemProps","isFinite","itemProps","processedComponentProps","customProps","Divider","useGridColumnMenuSlots","GridColumnMenuContainer","Component","otherProps","StyledMenuList","handleListKeyDown","autoFocus","showFilter","GridColumnMenuHideItem","GridColumnMenuManageItem","showColumns","onSortMenuItemClick","getLabel","gridPanelClasses","GridPanelRoot","GridPaperRoot","isPlaced","setIsPlaced","modifiers","rootBoundary","phase","effect","setAnchorEl","panelAnchor","elevation","GridPanelContentRoot","GridPanelContent","GridPanelFooterRoot","panelFooter","GridPanelFooter","GridPanelWrapperRoot","panelWrapper","isEnabled","GridPanelWrapper","disableEnforceFocus","TrapFocus","GridFilterFormRoot","filterForm","FilterFormDeleteIcon","filterFormDeleteIcon","flexShrink","FilterFormLogicOperatorInput","filterFormLogicOperatorInput","FilterFormColumnInput","filterFormColumnInput","FilterFormOperatorInput","filterFormOperatorInput","FilterFormValueInput","filterFormValueInput","getColumnLabel","GridFilterForm","hasMultipleFilters","deleteFilter","applyFilterChanges","showMultiFilterOperators","disableMultiFilterOperator","applyMultiFilterOperatorChanges","logicOperators","And","Or","columnsSort","filterColumns","deleteIconProps","logicOperatorInputProps","operatorInputProps","columnInputProps","valueInputProps","readOnly","filterableColumns","columnSelectId","columnSelectLabelId","operatorSelectId","operatorSelectLabelId","deleteIcon","logicOperatorInput","columnInput","operatorInput","valueInput","valueRef","filterSelectorRef","multiFilterOperator","hasLogicOperatorColumn","baseFormControlProps","isBaseSelectNative","baseInputLabelProps","baseSelectOptionProps","valueInputPropsOther","selectedField","itemField","selectedNonFilterableColumn","filteredFields","currentFilters","isFieldIncluded","sortedFilteredColumns","currentColumn","currentOperator","changeColumn","newOperator","changeOperator","op","eraseItemValue","changeLogicOperator","getLogicOperatorLocaleKey","applyValue","BooleanOperatorContainer","GridFilterInputBoolean","clearButton","labelProp","others","filterValueState","setFilterValueState","selectId","baseSelectProps","onFilterChange","shrink","notched","displayEmpty","convertFilterItemValueToInputValue","itemValue","inputType","substring","GridFilterInputDate","filterTimeout","applying","setIsApplying","InputLabelProps","GridFilterInputMultipleSingleSelect","helperText","TextFieldProps","resolvedColumn","isOptionEqualToValue","resolvedValueOptions","filteredValues","resolvedValue","A","multiple","filterOptions","renderTags","getTagProps","_getTagProps","tagProps","renderInput","GridFilterInputMultipleValue","freeSolo","inputValue","renderSingleSelectOptions","OptionComponent","SingleSelectOperatorContainer","GridFilterInputSingleSelect","currentValueOptions","GridFilterInputValue","newItem","fromInput","getGridFilter","filterableColumnsLookup","lastFilterRef","placeholderFilter","filterFormProps","getColumnForNewFilter","disableAddFilterButton","disableRemoveAllButton","applyFilter","applyFilterLogicOperator","getDefaultFilter","nextColumnWithOperator","nextFieldName","getNewFilter","nextColumnFieldName","readOnlyFilters","validFilters","addNewFilter","newFilter","shouldCloseFilterPanel","handleRemoveAll","startIcon","isSingleSelectColDef","getValueOptions","additionalParams","getValueFromValueOptions","optionValue","_excluded3","GridCsvExportMenuItem","GridPrintExportMenuItem","GridToolbarExport","excelOptions","preProcessedButtons","GridToolbarExportContainer","buttonProps","tooltipProps","exportButtonId","exportMenuId","handleMenuClose","prevOpen","GridScrollAreaRawRoot","scrollArea","GridScrollArea","scrollDirection","getCanScrollMore","maxScrollLeft","dragging","setDragging","canScrollMore","setCanScrollMore","totalHeaderHeight","handleDragOver","offset","handleColumnHeaderDragStart","handleColumnHeaderDragEnd","newScrollPosition","useGridOverlays","noRows","MemoizedGridHeaders","cellTabIndexState","columnsContainerRef","GridPanelAnchor","Element","flexGrow","GridMainContainer","ariaAttributes","pinnedRowsCount","treeData","useGridAriaAttributes","GridTopContainer","GridBottomContainer","VirtualScrollerContentRoot","GridVirtualScrollerContent","overflowedContent","Filler","Pinned","PinnedLeft","borderRight","PinnedRight","borderLeft","Main","rowsLength","scrollbarHeight","expandedHeight","VirtualScrollerRenderZoneRoot","virtualScrollerRenderZone","GridVirtualScrollerRenderZone","Scrollbar","ScrollbarVertical","overflowY","overflowX","ScrollbarHorizontal","Content","GridVirtualScrollbar","isLocked","lastPosition","scrollbarRef","contentRef","propertyDimension","propertyScroll","hasScroll","scrollbarInnerSize","onScrollerScroll","scroller","scrollbar","onScrollbarScroll","capture","Container","Scroller","virtualScroller","GridVirtualScroller","overlaysProps","useGridVirtualScroller","getContainerProps","getScrollerProps","getContentProps","getRenderZoneProps","getScrollbarVerticalProps","getScrollbarHorizontalProps","getRows","getDataGridUtilityClass","GRID_DETAIL_PANEL_TOGGLE_FIELD","GRID_DEFAULT_LOCALE_TEXT","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","toolbarQuickFilterPlaceholder","toolbarQuickFilterLabel","toolbarQuickFilterDeleteIconLabel","toolbarExport","toolbarExportLabel","toolbarExportCSV","toolbarExportPrint","toolbarExportExcel","columnsManagementSearchTitle","columnsManagementNoColumns","columnsManagementShowHideAllText","columnsManagementReset","filterPanelAddFilter","filterPanelRemoveAll","filterPanelDeleteIconLabel","filterPanelLogicOperator","filterPanelOperator","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","filterPanelInputLabel","filterPanelInputPlaceholder","filterOperatorContains","filterOperatorEquals","filterOperatorStartsWith","filterOperatorEndsWith","filterOperatorIs","filterOperatorNot","filterOperatorAfter","filterOperatorOnOrAfter","filterOperatorBefore","filterOperatorOnOrBefore","filterOperatorIsEmpty","filterOperatorIsNotEmpty","filterOperatorIsAnyOf","headerFilterOperatorContains","headerFilterOperatorEquals","headerFilterOperatorStartsWith","headerFilterOperatorEndsWith","headerFilterOperatorIs","headerFilterOperatorNot","headerFilterOperatorAfter","headerFilterOperatorOnOrAfter","headerFilterOperatorBefore","headerFilterOperatorOnOrBefore","headerFilterOperatorIsEmpty","headerFilterOperatorIsNotEmpty","headerFilterOperatorIsAnyOf","filterValueAny","filterValueTrue","filterValueFalse","columnMenuLabel","columnMenuShowColumns","columnMenuManageColumns","columnMenuFilter","columnMenuHideColumn","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerRowSelected","footerTotalRows","footerTotalVisibleRows","visibleCount","totalCount","checkboxSelectionHeaderName","checkboxSelectionSelectAllRows","checkboxSelectionUnselectAllRows","checkboxSelectionSelectRow","checkboxSelectionUnselectRow","booleanCellTrueLabel","booleanCellFalseLabel","actionsCellMore","pinToLeft","pinToRight","unpin","treeDataGroupingHeaderName","treeDataExpand","treeDataCollapse","groupingColumnHeaderName","groupColumn","unGroupColumn","detailPanelToggle","expandDetailPanel","collapseDetailPanel","MuiTablePagination","rowReorderingHeaderName","aggregationMenuItemHeader","aggregationFunctionLabelSum","aggregationFunctionLabelAvg","aggregationFunctionLabelMin","aggregationFunctionLabelMax","aggregationFunctionLabelSize","Provider","gridColumnGroupingSelector","gridColumnGroupsUnwrappedModelSelector","gridColumnGroupsLookupSelector","gridColumnGroupsHeaderStructureSelector","gridColumnGroupsHeaderMaxDepthSelector","gridColumnMenuSelector","DEFAULT_GRID_AUTOSIZE_OPTIONS","GridPinnedColumnPosition","EMPTY_PINNED_COLUMN_FIELDS","gridColumnsStateSelector","gridColumnFieldsSelector","createSelector","gridColumnLookupSelector","gridColumnDefinitionsSelector","allFields","gridColumnVisibilityModelSelector","gridVisibleColumnDefinitionsSelector","gridVisibleColumnFieldsSelector","gridPinnedColumnsSelector","gridVisiblePinnedColumnDefinitionsSelector","visiblePinnedFields","invert","newPinnedColumns","remainingColumns","leftPinnedColumns","columnsWithoutLeftPinnedColumns","rightPinnedColumns","filterVisibleColumns","gridColumnPositionsSelector","currentPosition","gridColumnsTotalWidthSelector","colCount","gridFilterableColumnDefinitionsSelector","gridFilterableColumnLookupSelector","gridHasColSpanSelector","COLUMNS_DIMENSION_PROPERTIES","COLUMN_TYPES","hydrateColumnsWidth","rawState","totalFlexUnits","widthAllocatedBeforeFlex","flexColumns","columnField","isFlex","availableWidth","initialFreeSpace","computedColumnWidths","uniqueFlexColumns","flexColumnsLookup","frozenFields","freeze","frozen","loopOverFlexItems","violationsLookup","remainingFreeSpace","flexUnits","totalViolation","computeFlexColumnsWidth","getDefaultColTypeDef","createColumnsState","isInsideStateInitializer","currentState","columnsToKeep","columnsToUpsertLookup","existingState","columnsStateWithPortableColumns","columnsWithUpdatedDimensions","orderedFieldsLookup","cleanOrderedFields","newOrderedFields","newColumnLookup","newColDef","applyInitialState","getFirstNonSpannedColumnToRender","lastRowToRender","firstNonSpannedColumnToRender","getTotalHeaderHeight","isHeaderFilteringEnabled","COMPACT_DENSITY_FACTOR","COMFORTABLE_DENSITY_FACTOR","DENSITY_FACTORS","compact","comfortable","standard","gridDensitySelector","gridDensityFactorSelector","gridDimensionsSelector","gridEditRowsStateSelector","gridFilterStateSelector","gridFilterModelSelector","gridQuickFilterValuesSelector","gridVisibleRowsLookupSelector","gridFilteredRowsLookupSelector","gridFilteredDescendantCountLookupSelector","gridExpandedSortedRowEntriesSelector","gridExpandedSortedRowIdsSelector","visibleSortedRowEntries","gridFilteredSortedRowEntriesSelector","gridFilteredSortedRowIdsSelector","filteredSortedRowEntries","gridFilteredSortedTopLevelRowEntriesSelector","rowTreeDepth","gridExpandedRowCountSelector","gridFilteredTopLevelRowCountSelector","visibleSortedTopLevelRows","gridFilteredRowCountSelector","gridFilteredDescendantRowCountSelector","topLevelRowCount","gridFilterActiveItemsSelector","gridFilterActiveItemsLookupSelector","activeFilters","res","getDefaultGridFilterModel","getPublicApiRef","hasEval","cleanFilterItem","cleanItem","filterModelDisableMultiColumnsFilteringWarning","filterModelMissingItemIdWarning","filterModelMissingItemOperatorWarning","sanitizeFilterModel","hasSeveralItems","hasItemsWithoutIds","hasItemWithoutOperator","mergeStateWithFilterModel","filteringState","removeDiacritics","normalize","getFilterCallbackFromItem","parser","newFilterItem","applyFilterOnRow","filterItemsApplierId","shouldQuickFilterExcludeHiddenColumns","buildAggregatedFilterApplier","isRowMatchingFilterItems","Function","getHasEval","shouldApplyFilter","resultPerItemId","filterItemCore","JSON","stringify","replaceAll","shouldApplyItem","buildAggregatedFilterItemsApplier","isRowMatchingQuickFilter","appliersPerField","quickFilterValue","outer","buildAggregatedQuickFilterApplier","isNotNull","passFilterLogic","allFilterItemResults","allQuickFilterResults","cleanedFilterItems","filterModelItems","cleanedFilterItemResults","cleanedQuickFilterResults","filterItemPredicate","filterItemResult","quickFilterValuePredicate","quickFilterValueResult","gridFocusStateSelector","gridFocusCellSelector","focusState","gridFocusColumnHeaderSelector","gridFocusColumnHeaderFilterSelector","gridFocusColumnGroupHeaderSelector","gridTabIndexStateSelector","gridTabIndexCellSelector","gridTabIndexColumnHeaderSelector","gridTabIndexColumnHeaderFilterSelector","gridTabIndexColumnGroupHeaderSelector","gridHeaderFilteringStateSelector","headerFiltering","gridHeaderFilteringEnabledSelector","headerFilteringState","gridHeaderFilteringEditFieldSelector","gridHeaderFilteringMenuSelector","gridPaginationModelSelector","gridPaginationRowCountSelector","gridPaginationMetaSelector","gridPageSelector","gridPageSizeSelector","gridPageCountSelector","gridPaginationRowRangeSelector","visibleSortedTopLevelRowEntries","topLevelFirstRowIndex","topLevelLastRowIndex","topLevelFirstRow","topLevelRowsInCurrentPageCount","topLevelRowAdded","gridPaginatedVisibleSortedGridRowEntriesSelector","paginationRange","gridPaginatedVisibleSortedGridRowIdsSelector","visibleSortedRowIds","defaultPageSize","getPageCount","getDefaultGridPaginationModel","getValidPage","throwIfPageSizeExceedsTheLimit","signatureProp","gridPreferencePanelStateSelector","GridPreferencePanelsValue","gridRowSelectionStateSelector","selectedGridRowsCountSelector","selectedGridRowsSelector","selectedIdsLookupSelector","isMultipleRowSelectionEnabled","gridRowsStateSelector","gridRowCountSelector","gridRowsLoadingSelector","gridTopLevelRowCountSelector","gridRowsLookupSelector","gridRowsDataRowIdToIdLookupSelector","gridRowTreeSelector","gridRowGroupsToFetchSelector","groupsToFetch","gridRowGroupingNameSelector","gridRowTreeDepthsSelector","gridRowMaximumTreeDepthSelector","nodeCount","gridDataRowIdsSelector","gridAdditionalRowGroupsSelector","additionalRowGroups","gridPinnedRowsSelector","rawPinnedRows","rowEntry","gridPinnedRowsCountSelector","GRID_ROOT_GROUP_ID","GRID_ID_AUTOGENERATED","buildRootGroup","groupingField","isAutoGenerated","childrenFromPath","checkGridRowIdIsValid","detailErrorMessage","getRowIdFromRowModel","createRowsInternalCache","getTopLevelRowCount","getRowsStateFromCache","unProcessedTree","unProcessedTreeDepths","unProcessedDataRowIds","groupingParamsWithHydrateRows","modify","idToActionLookup","isAutoGeneratedRow","getTreeNodeDescendants","parentId","validDescendants","childDescendants","updateCacheWithNewRows","uniqueUpdates","partialUpdates","alreadyAppliedActionsToRemove","partialRow","actionAlreadyAppliedToRow","_action","oldRow","actionTypeWithActionsToRemove","actionType","idsToRemove","calculatePinnedRowsHeight","getMinimalContentHeight","computeRowsUpdates","pinnedRowsCache","prevModel","idLookup","MissingRowIdError","rawValue","cellFocus","cellTabIndex","getRowElement","paramsApi","gridSortingStateSelector","gridSortedRowIdsSelector","sortingState","gridSortedRowEntriesSelector","sortedIds","gridSortModelSelector","gridSortColumnLookupSelector","sanitizeSortModel","mergeStateWithSortModel","buildAggregatedSortingApplier","comparatorList","comparator","getSortComparator","getSortCellParams","parseSortItem","rowList","compareRows","row1","row2","sortCellParams1","sortCellParams2","getNextGridSortDirection","currentIdx","gridNillComparator","v1","v2","gridStringOrNumberComparator","nillResult","gridNumberComparator","gridDateComparator","gridVirtualizationSelector","gridVirtualizationEnabledSelector","gridVirtualizationColumnEnabledSelector","gridRenderContextSelector","gridRenderContextColumnsSelector","ScrollDirection","EMPTY_SCROLL_POSITION","EMPTY_DETAIL_PANELS","outerSize","hasBottomPinnedRows","panels","setPanels","selectedRowsLookup","gridRootRef","mainRef","scrollerRef","scrollbarVerticalRef","scrollbarHorizontalRef","contentHeight","hasColSpan","fnRef","observer","useResizeObserver","previousContextScrollPosition","previousRowContext","scrollTimeout","frozenContext","scrollCache","createScrollCache","verticalBuffer","buffer","bufferForDirection","MINIMUM_COLUMN_WIDTH","nextRenderContext","context1","context2","didRowsIntervalChange","triggerUpdateRenderContext","newScroll","dx","dy","isScrolling","DOWN","UP","directionForDelta","rowScroll","columnScroll","didCrossThreshold","didChangeDirection","computeRenderContext","inputsSelector","forceUpdateRenderContext","handleScroll","handleWheel","needsHorizontalScrollbar","scrollerStyle","useRunOnce","initialRenderContext","baseRenderContext","isLastSection","isPinnedSection","rowIndexOffset","rowModels","rowIndexes","virtualRowIndex","rowProps","rowIndexInPage","tabbableCell","currentRenderContext","computeOffsetLeft","getInfiniteLoadingTriggerElement","lastRowId","onScroll","onWheel","onTouchMove","at","lastColumn","viewportInnerWidth","viewportInnerHeight","lastRowHeight","lastColumnWidth","inputs","realLeft","getNearestIndexToRender","atStart","getIndexesToRender","firstIndex","lastIndex","minFirstIndex","maxLastIndex","bufferBefore","rowBefore","bufferAfter","rowAfter","lastSize","binarySearch","actualRenderContext","initialFirstColumnToRender","columnBefore","columnAfter","deriveRenderContext","lastMeasuredIndexRelativeToAllRows","allRowsMeasured","lastMeasuredIndexRelativeToCurrentPage","interval","exponentialSearch","sliceStart","sliceEnd","pivot","isBefore","firstPosition","firstIndexPadded","lastIndexPadded","pinnedLeftLength","horizontalBuffer","EMPTY_RENDER_CONTEXT","virtualizationStateInitializer","setVirtualization","unstable_setVirtualization","TimerBasedCleanupTracking","timeouts","cleanupTimeout","object","unsubscribe","unregisterToken","cleanupToken","unregister","reset","FinalizationRegistryBasedCleanupTracking","registry","FinalizationRegistry","GridSignature","ObjectToBeRetainedByReact","createUseGridApiEventHandler","registryContainer","cleanupTokensCounter","objectRetainedByReact","subscription","handlerRef","cleanupTokenRef","enhancedHandler","unstable_resetCleanupTracking","optionsSubscriberOptions","useGridApiOptionHandler","apiMethods","newLogger","added","setAdded","targetElement","wrapHandler","GridPrivateApiContext","applySelector","acceptsApiRef","isOutputSelector","defaultCompare","is","objectShallowCompare","createRefs","equals","didInit","getVisibleRows","condition","didRun","GridArrowUpwardIcon","d","GridArrowDownwardIcon","GridKeyboardArrowRight","GridExpandMoreIcon","GridFilterListIcon","GridFilterAltIcon","GridSearchIcon","GridMenuIcon","GridCheckCircleIcon","GridColumnIcon","GridSeparatorIcon","GridViewHeadlineIcon","GridTableRowsIcon","GridViewStreamIcon","GridTripleDotsVerticalIcon","GridCloseIcon","GridAddIcon","GridRemoveIcon","GridLoadIcon","GridDragIcon","GridSaveAltIcon","GridCheckIcon","GridMoreVertIcon","GridVisibilityOffIcon","GridViewColumnIcon","GridClearIcon","GridDeleteIcon","GridDeleteForeverIcon","isLeaf","GridEditModes","GridCellModes","GridRowModes","GridLogicOperator","GridCellEditStartReasons","GridCellEditStopReasons","GridRowEditStartReasons","GridRowEditStopReasons","shouldCellShowRightBorder","showCellVerticalBorderRootProp","isSectionLastCell","shouldCellShowLeftBorder","createSelectorCreator","memoize","_len","arguments","memoizeOptionsFromArgs","_key","_len2","funcs","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","pop","_directlyPassedOption2","finalMemoizeOptions","dependencies","dep","dependencyTypes","getDependencies","memoizedResultFunc","assign","lastResult","recomputations","resetRecomputations","WeakMap","checkIsAPIRef","DEFAULT_INSTANCE_ID","stateOrApiRef","instanceIdParam","isAPIRef","va","vb","vc","vd","ve","createSelectorMemoized","cacheKey","cacheArgsInit","cacheArgs","cacheFn","isOverflown","scrollHeight","findParentElementFromClassName","elem","escapeOperandAttributeSelector","operand","getGridColumnHeaderElement","getGridRowElementSelector","getGridRowElement","getGridCellElement","isEventTargetInPortal","nodeType","getFieldFromHeaderElem","colCellEl","findHeaderElementFromField","getFieldsFromGroupHeaderElem","findGroupHeaderElementsFromField","findGridCellElementsFromCol","ariaColIndex","queryRows","rowElement","findGridElement","klass","findPinnedCells","filterFn","parseCellColIndex","findLeftPinnedCellsAfterCol","findRightPinnedCellsBeforeCol","findPinnedHeaders","elements","findLeftPinnedHeadersAfterCol","findRightPinnedHeadersBeforeCol","findGridHeader","findGridCells","fastObjectShallowCompare","aLength","bLength","isEscapeKey","isTabKey","isPrintableKey","isNavigationKey","isHideMenuKey","isPasteShortcut","isNumber","isFunction","isObject","localStorageAvailable","setItem","removeItem","err","escapeRegExp","clamp","isDeepEqual","entriesA","entryA","ArrayBuffer","isView","source","flags","valueOf","hasOwnProperty","call","createRandomNumberGenerator","seed","imul","deepClone","obj","structuredClone","parse","buildWarning","gravity","alreadyWarned","cleanMessage","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","location","propFullName","secret","getShim","ReactPropTypes","bigint","bool","symbol","any","arrayOf","elementType","instanceOf","objectOf","oneOf","oneOfType","exact","checkPropTypes","PropTypes","NOT_FOUND","defaultEqualityCheck","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","prev","next","createCacheKeyComparator","put","getEntries","cacheIndex","createLruCache","memoized","matchingEntry","clearCache"],"sourceRoot":""}