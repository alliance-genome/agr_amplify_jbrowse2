{"version":3,"file":"static/js/7206.b767ae17.chunk.js","mappings":"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","sources":["../../../packages/core/pluggableElementTypes/models/components/SaveTrackData.tsx","../../../node_modules/@mui/icons-material/esm/GetApp.js","../../../node_modules/@mui/material/internal/svg-icons/RadioButtonUnchecked.js","../../../node_modules/@mui/material/internal/svg-icons/RadioButtonChecked.js","../../../node_modules/@mui/material/Radio/RadioButtonIcon.js","../../../node_modules/@mui/material/Radio/Radio.js","../../../node_modules/@mui/material/Radio/radioClasses.js","../../../node_modules/@mui/material/RadioGroup/RadioGroup.js","../../../node_modules/@mui/material/RadioGroup/RadioGroupContext.js","../../../node_modules/@mui/material/RadioGroup/radioGroupClasses.js","../../../node_modules/@mui/material/RadioGroup/useRadioGroup.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Radio,\n  RadioGroup,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport { IAnyStateTreeNode } from 'mobx-state-tree'\nimport { makeStyles } from 'tss-react/mui'\nimport { saveAs } from 'file-saver'\nimport { observer } from 'mobx-react'\nimport { Dialog, ErrorMessage } from '@jbrowse/core/ui'\nimport {\n  getSession,\n  getContainingView,\n  Feature,\n  Region,\n  AbstractTrackModel,\n  AbstractSessionModel,\n} from '@jbrowse/core/util'\nimport { getConf } from '@jbrowse/core/configuration'\n\n// icons\nimport GetAppIcon from '@mui/icons-material/GetApp'\n\nconst useStyles = makeStyles()({\n  root: {\n    width: '80em',\n  },\n  textAreaFont: {\n    fontFamily: 'Courier New',\n  },\n})\n\nasync function fetchFeatures(\n  track: IAnyStateTreeNode,\n  regions: Region[],\n  signal?: AbortSignal,\n) {\n  const { rpcManager } = getSession(track)\n  const adapterConfig = getConf(track, ['adapter'])\n  const sessionId = 'getFeatures'\n  return rpcManager.call(sessionId, 'CoreGetFeatures', {\n    adapterConfig,\n    regions,\n    sessionId,\n    signal,\n  }) as Promise<Feature[]>\n}\ninterface FileTypeExporter {\n  name: string\n  extension: string\n  callback: (arg: {\n    features: Feature[]\n    session: AbstractSessionModel\n    assemblyName: string\n  }) => Promise<string> | string\n}\nconst SaveTrackDataDialog = observer(function ({\n  model,\n  handleClose,\n}: {\n  model: AbstractTrackModel & {\n    saveTrackFileFormatOptions: () => Record<string, FileTypeExporter>\n  }\n  handleClose: () => void\n}) {\n  const options = model.saveTrackFileFormatOptions()\n  const { classes } = useStyles()\n  const [error, setError] = useState<unknown>()\n  const [features, setFeatures] = useState<Feature[]>()\n  const [type, setType] = useState(Object.keys(options)[0])\n  const [str, setStr] = useState('')\n\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      try {\n        const view = getContainingView(model) as { visibleRegions?: Region[] }\n        setError(undefined)\n        setFeatures(await fetchFeatures(model, view.visibleRegions || []))\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    })()\n  }, [model])\n\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      try {\n        const { visibleRegions } = getContainingView(model) as {\n          visibleRegions?: Region[]\n        }\n        const session = getSession(model)\n        if (!features || !visibleRegions?.length || !type) {\n          return\n        }\n        const generator = options[type] || {\n          callback: () => 'Unknown',\n        }\n        setStr(\n          await generator.callback({\n            features,\n            session,\n            assemblyName: visibleRegions[0]!.assemblyName,\n          }),\n        )\n      } catch (e) {\n        setError(e)\n      }\n    })()\n  }, [type, features, options, model])\n\n  const loading = !features\n  return (\n    <Dialog maxWidth=\"xl\" open onClose={handleClose} title=\"Save track data\">\n      <DialogContent className={classes.root}>\n        {error ? <ErrorMessage error={error} /> : null}\n        {features && !features.length ? (\n          <Typography>No features found</Typography>\n        ) : null}\n\n        <FormControl>\n          <FormLabel>File type</FormLabel>\n          <RadioGroup\n            value={type}\n            onChange={e => {\n              setType(e.target.value)\n            }}\n          >\n            {Object.entries(options).map(([key, val]) => (\n              <FormControlLabel\n                key={key}\n                value={key}\n                control={<Radio />}\n                label={val.name}\n              />\n            ))}\n          </RadioGroup>\n        </FormControl>\n        <TextField\n          variant=\"outlined\"\n          multiline\n          minRows={5}\n          maxRows={15}\n          fullWidth\n          value={\n            loading\n              ? 'Loading...'\n              : str.length > 100_000\n                ? 'Too large to view here, click \"Download\" to results to file'\n                : str\n          }\n          InputProps={{\n            readOnly: true,\n            classes: {\n              input: classes.textAreaFont,\n            },\n          }}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            if (!type) {\n              return\n            }\n            const ext = options[type]?.extension || 'unknown'\n            const blob = new Blob([str], { type: 'text/plain;charset=utf-8' })\n            saveAs(blob, `jbrowse_track_data.${ext}`)\n          }}\n          startIcon={<GetAppIcon />}\n        >\n          Download\n        </Button>\n\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          onClick={() => {\n            handleClose()\n          }}\n        >\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n\nexport default SaveTrackDataDialog\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7zM5 18v2h14v-2z\"\n}), 'GetApp');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport RadioButtonUncheckedIcon from \"../internal/svg-icons/RadioButtonUnchecked.js\";\nimport RadioButtonCheckedIcon from \"../internal/svg-icons/RadioButtonChecked.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RadioButtonIconRoot = styled('span', {\n  shouldForwardProp: rootShouldForwardProp\n})({\n  position: 'relative',\n  display: 'flex'\n});\nconst RadioButtonIconBackground = styled(RadioButtonUncheckedIcon)({\n  // Scale applied to prevent dot misalignment in Safari\n  transform: 'scale(1)'\n});\nconst RadioButtonIconDot = styled(RadioButtonCheckedIcon)(memoTheme(({\n  theme\n}) => ({\n  left: 0,\n  position: 'absolute',\n  transform: 'scale(0)',\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeIn,\n    duration: theme.transitions.duration.shortest\n  }),\n  variants: [{\n    props: {\n      checked: true\n    },\n    style: {\n      transform: 'scale(1)',\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.shortest\n      })\n    }\n  }]\n})));\n\n/**\n * @ignore - internal component.\n */\nfunction RadioButtonIcon(props) {\n  const {\n    checked = false,\n    classes = {},\n    fontSize\n  } = props;\n  const ownerState = {\n    ...props,\n    checked\n  };\n  return /*#__PURE__*/_jsxs(RadioButtonIconRoot, {\n    className: classes.root,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(RadioButtonIconBackground, {\n      fontSize: fontSize,\n      className: classes.background,\n      ownerState: ownerState\n    }), /*#__PURE__*/_jsx(RadioButtonIconDot, {\n      fontSize: fontSize,\n      className: classes.dot,\n      ownerState: ownerState\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes /* remove-proptypes */ = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default RadioButtonIcon;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from \"../internal/SwitchBase.js\";\nimport RadioButtonIcon from \"./RadioButtonIcon.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport createChainedFunction from \"../utils/createChainedFunction.js\";\nimport useFormControl from \"../FormControl/useFormControl.js\";\nimport useRadioGroup from \"../RadioGroup/useRadioGroup.js\";\nimport radioClasses, { getRadioUtilityClass } from \"./radioClasses.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, size !== 'medium' && `size${capitalize(size)}`]\n  };\n  return {\n    ...classes,\n    ...composeClasses(slots, getRadioUtilityClass, classes)\n  };\n};\nconst RadioRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiRadio',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.size !== 'medium' && styles[`size${capitalize(ownerState.size)}`], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  [`&.${radioClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  },\n  variants: [{\n    props: {\n      color: 'default',\n      disabled: false,\n      disableRipple: false\n    },\n    style: {\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity)\n      }\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color,\n      disabled: false,\n      disableRipple: false\n    },\n    style: {\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[color].main, theme.palette.action.hoverOpacity)\n      }\n    }\n  })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color,\n      disabled: false\n    },\n    style: {\n      [`&.${radioClasses.checked}`]: {\n        color: (theme.vars || theme).palette[color].main\n      }\n    }\n  })), {\n    // Should be last to override other colors\n    props: {\n      disableRipple: false\n    },\n    style: {\n      // Reset on touch devices, it doesn't add specificity\n      '&:hover': {\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  }]\n})));\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  }\n\n  // The value could be a number, the DOM will stringify it anyway.\n  return String(a) === String(b);\n}\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {\n  checked: true\n});\nconst defaultIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {});\nconst Radio = /*#__PURE__*/React.forwardRef(function Radio(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiRadio'\n  });\n  const {\n    checked: checkedProp,\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon = defaultIcon,\n    name: nameProp,\n    onChange: onChangeProp,\n    size = 'medium',\n    className,\n    disabled: disabledProp,\n    disableRipple = false,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  disabled ??= false;\n  const ownerState = {\n    ...props,\n    disabled,\n    disableRipple,\n    color,\n    size\n  };\n  const classes = useUtilityClasses(ownerState);\n  const radioGroup = useRadioGroup();\n  let checked = checkedProp;\n  const onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  let name = nameProp;\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = areEqualValues(radioGroup.value, props.value);\n    }\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n  return /*#__PURE__*/_jsx(RadioRoot, {\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: defaultIcon.props.fontSize ?? size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(checkedIcon, {\n      fontSize: defaultCheckedIcon.props.fontSize ?? size\n    }),\n    disabled: disabled,\n    ownerState: ownerState,\n    classes: classes,\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <RadioButtonIcon checked />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <RadioButtonIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Radio;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getRadioUtilityClass(slot) {\n  return generateUtilityClass('MuiRadio', slot);\n}\nconst radioClasses = generateUtilityClasses('MuiRadio', ['root', 'checked', 'disabled', 'colorPrimary', 'colorSecondary', 'sizeSmall']);\nexport default radioClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport FormGroup from \"../FormGroup/index.js\";\nimport { getRadioGroupUtilityClass } from \"./radioGroupClasses.js\";\nimport useForkRef from \"../utils/useForkRef.js\";\nimport useControlled from \"../utils/useControlled.js\";\nimport RadioGroupContext from \"./RadioGroupContext.js\";\nimport useId from \"../utils/useId.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = props => {\n  const {\n    classes,\n    row,\n    error\n  } = props;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getRadioGroupUtilityClass, classes);\n};\nconst RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  const {\n    // private\n    // eslint-disable-next-line react/prop-types\n    actions,\n    children,\n    className,\n    defaultValue,\n    name: nameProp,\n    onChange,\n    value: valueProp,\n    ...other\n  } = props;\n  const rootRef = React.useRef(null);\n  const classes = useUtilityClasses(props);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'RadioGroup'\n  });\n  React.useImperativeHandle(actions, () => ({\n    focus: () => {\n      let input = rootRef.current.querySelector('input:not(:disabled):checked');\n      if (!input) {\n        input = rootRef.current.querySelector('input:not(:disabled)');\n      }\n      if (input) {\n        input.focus();\n      }\n    }\n  }), []);\n  const handleRef = useForkRef(ref, rootRef);\n  const name = useId(nameProp);\n  const contextValue = React.useMemo(() => ({\n    name,\n    onChange(event) {\n      setValueState(event.target.value);\n      if (onChange) {\n        onChange(event, event.target.value);\n      }\n    },\n    value\n  }), [name, onChange, setValueState, value]);\n  return /*#__PURE__*/_jsx(RadioGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(FormGroup, {\n      role: \"radiogroup\",\n      ref: handleRef,\n      className: clsx(classes.root, className),\n      ...other,\n      children: children\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {string} value The value of the selected radio button.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst RadioGroupContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\nexport default RadioGroupContext;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getRadioGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiRadioGroup', slot);\n}\nconst radioGroupClasses = generateUtilityClasses('MuiRadioGroup', ['root', 'row', 'error']);\nexport default radioGroupClasses;","'use client';\n\nimport * as React from 'react';\nimport RadioGroupContext from \"./RadioGroupContext.js\";\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}"],"names":["useStyles","makeStyles","root","width","textAreaFont","fontFamily","observer","model","handleClose","options","saveTrackFileFormatOptions","classes","error","setError","useState","features","setFeatures","type","setType","Object","keys","str","setStr","useEffect","view","getContainingView","undefined","async","track","regions","rpcManager","getSession","adapterConfig","getConf","sessionId","call","signal","fetchFeatures","visibleRegions","e","console","session","length","generator","callback","assemblyName","loading","React","Dialog","maxWidth","open","onClose","title","DialogContent","className","ErrorMessage","Typography","FormControl","FormLabel","RadioGroup","value","onChange","target","entries","map","key","val","FormControlLabel","control","Radio","label","name","TextField","variant","multiline","minRows","maxRows","fullWidth","InputProps","readOnly","input","DialogActions","Button","onClick","ext","extension","blob","Blob","saveAs","startIcon","GetAppIcon","d","createSvgIcon","RadioButtonIconRoot","styled","shouldForwardProp","rootShouldForwardProp","position","display","RadioButtonIconBackground","RadioButtonUnchecked","transform","RadioButtonIconDot","RadioButtonChecked","memoTheme","theme","left","transition","transitions","create","easing","easeIn","duration","shortest","variants","props","checked","style","easeOut","fontSize","ownerState","children","background","dot","RadioRoot","SwitchBase","prop","slot","overridesResolver","styles","size","capitalize","color","vars","palette","text","secondary","radioClasses","disabled","action","disableRipple","backgroundColor","activeChannel","hoverOpacity","active","filter","createSimplePaletteValueFilter","mainChannel","main","defaultCheckedIcon","defaultIcon","inProps","ref","checkedProp","checkedIcon","icon","nameProp","onChangeProp","disabledProp","other","muiFormControl","useFormControl","slots","composeClasses","useUtilityClasses","radioGroup","useRadioGroup","createChainedFunction","a","b","String","clsx","getRadioUtilityClass","actions","defaultValue","valueProp","rootRef","row","setValueState","controlled","default","focus","current","querySelector","handleRef","contextValue","event","Provider","role","getRadioGroupUtilityClass"],"sourceRoot":""}