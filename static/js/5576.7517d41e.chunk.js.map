{"version":3,"file":"static/js/5576.7517d41e.chunk.js","mappings":"4bAUA,SAASA,GAAU,MAAEC,IACnB,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,WAAS,IAC1BC,EAAQC,IAAaF,EAAAA,EAAAA,WAAS,GAC/BG,EAAUC,OAAOP,GACvB,OAAIM,EAAQE,OAAS,IAEjBC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,UACEC,KAAK,SACLC,QAASA,KACPC,IAAKN,GACLD,GAAU,GACVQ,YAAW,KACTR,GAAU,EAAM,GACf,IAAI,GAGRD,EAAS,sBAAwB,QAEpCK,EAAAA,cAAA,UAAQC,KAAK,SAASC,QAASA,IAAMT,GAAQY,IAAQA,KAClDb,EAAO,YAAc,aAExBQ,EAAAA,cAAA,WAAMR,EAAOK,EAAW,GAAEA,EAAQS,MAAM,EAAG,YAI1CN,EAAAA,cAAA,WAAMH,EACf,CAEA,SAASU,EAAqBC,GAC5B,OACER,EAAAA,cAACS,EAAAA,eAAcC,EAAA,GACTF,EAAK,CACTG,UAAYpB,GAAmBS,EAAAA,cAACV,EAAS,CAACC,MAAOA,MAGvD,CAEA,MAeA,GAf0CqB,EAAAA,EAAAA,WAExC,EAAGC,YACD,MAAM,SAAEC,EAAQ,SAAEC,GAAaC,KAAKC,MAAMD,KAAKE,UAAUL,EAAMM,cAC/D,OACEnB,EAAAA,cAACoB,EAAAA,EAAK,CAAC,cAAY,yBACjBpB,EAAAA,cAACqB,EAAAA,gBAAe,CAACC,MAAM,YAAYC,QAAST,IAC5Cd,EAAAA,cAACqB,EAAAA,gBAAe,CAACC,MAAM,YAAYC,QAASR,IAC5Cf,EAAAA,cAACO,EAAoB,CAACgB,QAAST,IAC/Bd,EAAAA,cAACO,EAAoB,CAACgB,QAASR,IACzB,G","sources":["../../../plugins/linear-comparative-view/src/SyntenyFeatureDetail/SyntenyFeatureDetail.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport copy from 'copy-to-clipboard'\nimport { Paper } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport {\n  BaseCoreDetails,\n  BaseAttributes,\n} from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\nimport { SimpleFeatureSerialized } from '@jbrowse/core/util/simpleFeature'\n\nfunction Formatter({ value }: { value: unknown }) {\n  const [show, setShow] = useState(false)\n  const [copied, setCopied] = useState(false)\n  const display = String(value)\n  if (display.length > 100) {\n    return (\n      <>\n        <button\n          type=\"button\"\n          onClick={() => {\n            copy(display)\n            setCopied(true)\n            setTimeout(() => {\n              setCopied(false)\n            }, 700)\n          }}\n        >\n          {copied ? 'Copied to clipboard' : 'Copy'}\n        </button>\n        <button type=\"button\" onClick={() => setShow(val => !val)}>\n          {show ? 'Show less' : 'Show more'}\n        </button>\n        <div>{show ? display : `${display.slice(0, 100)}...`}</div>\n      </>\n    )\n  }\n  return <div>{display}</div>\n}\n\nfunction CustomFeatureDetails(props: { feature: SimpleFeatureSerialized }) {\n  return (\n    <BaseAttributes\n      {...props}\n      formatter={(value: unknown) => <Formatter value={value} />}\n    />\n  )\n}\n\nconst BreakpointAlignmentsFeatureDetail = observer(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ({ model }: { model: any }) => {\n    const { feature1, feature2 } = JSON.parse(JSON.stringify(model.featureData))\n    return (\n      <Paper data-testid=\"alignment-side-drawer\">\n        <BaseCoreDetails title=\"Feature 1\" feature={feature1} />\n        <BaseCoreDetails title=\"Feature 2\" feature={feature2} />\n        <CustomFeatureDetails feature={feature1} />\n        <CustomFeatureDetails feature={feature2} />\n      </Paper>\n    )\n  },\n)\n\nexport default BreakpointAlignmentsFeatureDetail\n"],"names":["Formatter","value","show","setShow","useState","copied","setCopied","display","String","length","React","type","onClick","copy","setTimeout","val","slice","CustomFeatureDetails","props","BaseAttributes","_extends","formatter","observer","model","feature1","feature2","JSON","parse","stringify","featureData","Paper","BaseCoreDetails","title","feature"],"sourceRoot":""}