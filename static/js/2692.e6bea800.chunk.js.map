{"version":3,"file":"static/js/2692.e6bea800.chunk.js","mappings":"uWAkBMA,GAAYC,EAAAA,EAAAA,IAAW,SAAAC,GAAK,MAAK,CACrCC,YAAa,CACXC,SAAU,WACVC,MAAOH,EAAMI,QAAQ,GACrBC,IAAKL,EAAMI,QAAQ,GACnBE,MAAON,EAAMO,QAAQC,KAAK,UAIf,SAASC,EAAT,GAOX,IANFC,EAMC,EANDA,OACAC,EAKC,EALDA,YAMMC,EAAUd,IAChB,GAAwBe,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,YAA1B,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,WAAS,GAArC,eAAOK,EAAP,KAAeC,EAAf,KACMC,GAAUC,EAAAA,EAAAA,YAAWX,GACnBY,EAAeF,EAAfE,WACFC,GAAOC,EAAAA,EAAAA,gBAAed,IAE5Be,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,IAAIC,gBACZC,EAAWF,EAAXE,OACJC,GAAY,EAmBhB,OAlBC,uBAAC,2GAEQC,GAAgBN,EAAAA,EAAAA,gBAAed,EAAQ,WAF/C,SAGuBY,EAAWS,KAAKrB,EAAOsB,QAAS,cAAe,CAClEF,cAAAA,EACAF,OAAAA,IALJ,OAGQK,EAHR,OAOOJ,GACHd,EAAQkB,GARZ,gDAWOJ,IACHK,QAAQlB,MAAR,MACAC,EAAS,EAAD,KAbZ,wDAAD,GAkBM,WACLS,EAAQS,QACRN,GAAY,KAEb,CAACnB,EAAQY,IAEZ,IAAIc,GAAYZ,EAAAA,EAAAA,gBAAed,EAAQ,QACvC,GAAuC,4BAAnCc,EAAAA,EAAAA,gBAAed,EAAQ,QAAsC,CAC/D,IAAM2B,EAAMjB,EAAQkB,WAAWC,MAC7B,SAAAC,GAAC,OAAIA,EAAEC,WAAa/B,EAAOgC,iBAG7BN,EAAYC,EAAG,+BACYb,EAAAA,EAAAA,gBAAea,EAAK,QADhC,KAEX,qBAGN,IAAMM,EACY,kBAAT7B,EACH,CACE8B,OAAO,QAAD,OAAU9B,EACb+B,QAAQ,KAAM,QACdA,QAAQ,KAAM,QAFX,WAIR/B,GAAQ,GAEd,OACE,UAAC,IAAD,CAAQgC,MAAI,EAACC,QAASpC,EAAtB,WACE,UAAC,IAAD,WACGyB,GACD,SAAC,IAAD,CACEY,UAAWpC,EAAQX,YACnBgD,QAAS,kBAAMtC,KAFjB,UAIE,SAAC,IAAD,UAGJ,UAAC,IAAD,YACE,UAAC,EAAAuC,SAAD,CAAUC,MAAM,gBAAhB,WACE,SAAC,IAAD,CACEC,QAAQ,YACRC,MAAO,CAAEC,MAAO,SAChBL,QAAS,WACPM,IAAKC,KAAKC,UAAUlC,EAAM,KAAM,IAChCJ,GAAU,GACVuC,YAAW,kBAAMvC,GAAU,KAAQ,MANvC,SASGD,EAAS,uBAAyB,iBAErC,SAAC,EAAAyC,WAAD,CACEC,WAAYrC,EACZsC,KAAM,CAAC,WAAY,UAAW,iBAGxB,OAAT/C,GACC,SAAC,EAAAoC,SAAD,CAAUC,MAAM,YAAhB,SACGnC,GACC,SAAC,IAAD,CAAYV,MAAM,QAAlB,mBAA8BU,UACnB8C,IAAThD,EACF,wBAEA,SAAC,EAAA6C,WAAD,CAAYC,WAAYjB,MAG1B","sources":["../../../packages/core/ui/AboutDialog.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport copy from 'copy-to-clipboard'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { readConfObject, AnyConfigurationModel } from '../configuration'\nimport { getSession } from '../util'\nimport { BaseCard, Attributes } from '../BaseFeatureWidget/BaseFeatureDetail'\n\ntype FileInfo = Record<string, unknown> | string\n\nconst useStyles = makeStyles(theme => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}))\n\nexport default function AboutDialog({\n  config,\n  handleClose,\n}: {\n  config: AnyConfigurationModel\n\n  handleClose: () => void\n}) {\n  const classes = useStyles()\n  const [info, setInfo] = useState<FileInfo>()\n  const [error, setError] = useState<unknown>()\n  const [copied, setCopied] = useState(false)\n  const session = getSession(config)\n  const { rpcManager } = session\n  const conf = readConfObject(config)\n\n  useEffect(() => {\n    const aborter = new AbortController()\n    const { signal } = aborter\n    let cancelled = false\n    ;(async () => {\n      try {\n        const adapterConfig = readConfObject(config, 'adapter')\n        const result = await rpcManager.call(config.trackId, 'CoreGetInfo', {\n          adapterConfig,\n          signal,\n        })\n        if (!cancelled) {\n          setInfo(result as FileInfo)\n        }\n      } catch (e) {\n        if (!cancelled) {\n          console.error(e)\n          setError(e)\n        }\n      }\n    })()\n\n    return () => {\n      aborter.abort()\n      cancelled = true\n    }\n  }, [config, rpcManager])\n\n  let trackName = readConfObject(config, 'name')\n  if (readConfObject(config, 'type') === 'ReferenceSequenceTrack') {\n    const asm = session.assemblies.find(\n      a => a.sequence === config.configuration,\n    )\n\n    trackName = asm\n      ? `Reference Sequence (${readConfObject(asm, 'name')})`\n      : 'Reference Sequence'\n  }\n\n  const details =\n    typeof info === 'string'\n      ? {\n          header: `<pre>${info\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')}</pre>`,\n        }\n      : info || {}\n\n  return (\n    <Dialog open onClose={handleClose}>\n      <DialogTitle>\n        {trackName}\n        <IconButton\n          className={classes.closeButton}\n          onClick={() => handleClose()}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <BaseCard title=\"Configuration\">\n          <Button\n            variant=\"contained\"\n            style={{ float: 'right' }}\n            onClick={() => {\n              copy(JSON.stringify(conf, null, 2))\n              setCopied(true)\n              setTimeout(() => setCopied(false), 1000)\n            }}\n          >\n            {copied ? 'Copied to clipboard!' : 'Copy config'}\n          </Button>\n          <Attributes\n            attributes={conf}\n            omit={['displays', 'baseUri', 'refNames']}\n          />\n        </BaseCard>\n        {info !== null ? (\n          <BaseCard title=\"File info\">\n            {error ? (\n              <Typography color=\"error\">{`${error}`}</Typography>\n            ) : info === undefined ? (\n              'Loading file data...'\n            ) : (\n              <Attributes attributes={details} />\n            )}\n          </BaseCard>\n        ) : null}\n      </DialogContent>\n    </Dialog>\n  )\n}\n"],"names":["useStyles","makeStyles","theme","closeButton","position","right","spacing","top","color","palette","grey","AboutDialog","config","handleClose","classes","useState","info","setInfo","error","setError","copied","setCopied","session","getSession","rpcManager","conf","readConfObject","useEffect","aborter","AbortController","signal","cancelled","adapterConfig","call","trackId","result","console","abort","trackName","asm","assemblies","find","a","sequence","configuration","details","header","replace","open","onClose","className","onClick","BaseCard","title","variant","style","float","copy","JSON","stringify","setTimeout","Attributes","attributes","omit","undefined"],"sourceRoot":""}