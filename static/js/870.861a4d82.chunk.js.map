{"version":3,"file":"static/js/870.861a4d82.chunk.js","mappings":"qSAkBO,SAASA,EAASC,GACvB,OAAOA,EAAKC,OAAS,GAAE,GAAAC,OAAMF,EAAKG,MAAM,EAAG,IAAG,OAAQH,CACxD,CAEA,IAAMI,GAAYC,EAAAA,EAAAA,KAAAA,EAAa,SAAAC,GAAK,MAAK,CACvCC,oBAAqB,CACnBC,MAAO,IACPC,OAAQH,EAAMI,QAAQ,IAEzB,IAqED,WAAeC,EAAAA,EAAAA,WAnEf,SAA+BC,GAQ3B,IAPFC,EAAOD,EAAPC,QACAC,EAAWF,EAAXE,YACAC,EAAeH,EAAfG,gBAMQC,EAAYZ,IAAZY,QACAC,EAAqDJ,EAArDI,YAAWC,EAA0CL,EAAxCM,oBAAqBC,OAAS,IAAAF,EAAG,GAAEA,EACxD,OACEG,EAAAA,EAAAA,MAACC,EAAAA,OAAM,CACLC,MAAI,EACJC,QAASV,EACTW,SAAS,KACTC,MAAM,0BAAyBC,SAAA,EAE/BN,EAAAA,EAAAA,MAACO,EAAAA,EAAa,CAAAD,SAAA,EACZE,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAAAH,SAAC,iDACZN,EAAAA,EAAAA,MAAA,OAAKU,UAAWf,EAAQT,oBAAoBoB,SAAA,CACzCV,EAAYe,KAAI,SAAAC,GACf,IAAMC,GAAOC,EAAAA,EAAAA,gBAAeF,EAAM,QAC5BG,GAAgBD,EAAAA,EAAAA,gBAAeF,EAAM,iBACrCI,EAAQjB,EAAUkB,MAAK,SAAAC,GAAI,OAAIL,IAASK,EAAKL,IAAI,IACvD,OACEL,EAAAA,EAAAA,KAACW,EAAAA,EAAgB,CAEfC,SACEZ,EAAAA,EAAAA,KAACa,EAAAA,EAAQ,CACPC,UAAWN,EACXO,SAAU,WAGA,IAADC,EAFHR,EACFtB,EAAgBkB,GAEM,QAAtBY,EAAAhC,EAAQiC,sBAAc,IAAAD,GAAtBA,EAAAE,KAAAlC,EAAyBoB,EAE7B,EACAe,MAAM,YAGVC,MAAK,GAAA/C,OAAKgC,EAAI,KAAAhC,OACZkC,EAAcnC,OACV,IAAMF,EAASqC,EAAcc,KAAK,MAAQ,IAC1C,KAjBDjB,EAAKkB,aAqBhB,IACElC,EAAYhB,OAEV,MADF4B,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAAAH,SAAC,gCAIlBE,EAAAA,EAAAA,KAACuB,EAAAA,EAAa,CAAAzB,UACZE,EAAAA,EAAAA,KAACwB,EAAAA,EAAM,CACLC,QAAS,kBAAMxC,GAAa,EAC5ByC,QAAQ,YACRP,MAAM,UAASrB,SAChB,cAMT,G","sources":["../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/dialogs/ToggleConnectionsDialog.tsx"],"sourcesContent":["import React from 'react'\nimport {\n  Button,\n  Checkbox,\n  DialogContent,\n  DialogActions,\n  FormControlLabel,\n  Typography,\n} from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { AbstractSessionModel } from '@jbrowse/core/util'\n\nexport function ellipses(slug: string) {\n  return slug.length > 20 ? `${slug.slice(0, 20)}...` : slug\n}\n\nconst useStyles = makeStyles()(theme => ({\n  connectionContainer: {\n    width: 500,\n    margin: theme.spacing(4),\n  },\n}))\n\nfunction ToggleConnectionDialog({\n  session,\n  handleClose,\n  breakConnection,\n}: {\n  handleClose: () => void\n  session: AbstractSessionModel\n  breakConnection: (arg: AnyConfigurationModel) => void\n}) {\n  const { classes } = useStyles()\n  const { connections, connectionInstances: instances = [] } = session\n  return (\n    <Dialog\n      open\n      onClose={handleClose}\n      maxWidth=\"lg\"\n      title=\"Turn on/off connections\"\n    >\n      <DialogContent>\n        <Typography>Use the checkbox to turn on/off connections</Typography>\n        <div className={classes.connectionContainer}>\n          {connections.map(conf => {\n            const name = readConfObject(conf, 'name')\n            const assemblyNames = readConfObject(conf, 'assemblyNames')\n            const found = instances.find(conn => name === conn.name)\n            return (\n              <FormControlLabel\n                key={conf.connectionId}\n                control={\n                  <Checkbox\n                    checked={!!found}\n                    onChange={() => {\n                      if (found) {\n                        breakConnection(conf)\n                      } else {\n                        session.makeConnection?.(conf)\n                      }\n                    }}\n                    color=\"primary\"\n                  />\n                }\n                label={`${name} ${\n                  assemblyNames.length\n                    ? '(' + ellipses(assemblyNames.join(',')) + ')'\n                    : ''\n                }`}\n              />\n            )\n          })}\n          {!connections.length ? (\n            <Typography>No connections found</Typography>\n          ) : null}\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => handleClose()}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default observer(ToggleConnectionDialog)\n"],"names":["ellipses","slug","length","concat","slice","useStyles","makeStyles","theme","connectionContainer","width","margin","spacing","observer","_ref","session","handleClose","breakConnection","classes","connections","_session$connectionIn","connectionInstances","instances","_jsxs","Dialog","open","onClose","maxWidth","title","children","DialogContent","_jsx","Typography","className","map","conf","name","readConfObject","assemblyNames","found","find","conn","FormControlLabel","control","Checkbox","checked","onChange","_session$makeConnecti","makeConnection","call","color","label","join","connectionId","DialogActions","Button","onClick","variant"],"sourceRoot":""}