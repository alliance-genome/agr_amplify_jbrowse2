{"version":3,"file":"static/js/4594.f5667dbc.chunk.js","mappings":"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tB,CAAC,uBAAwB,SACzB,CAAC,oBAAqB,QACtB,CAAC,gDAAiD,UAClD,CAAC,gCAAiC,SAClC,CAAC,sBAAuB,UACxB,CAAC,oBAAqB,SACtB,CAAC,SAAU,MACX,CAAC,WAAY,OACb,CAAC,OAAQ,QACTuC,SAAQ,SAAUvC,GAClB,OAAO0B,EAAUM,cAAchC,EAAK,GAAIA,EAAK,OAM/C,CACE,CAAC,MAAO,IACR,CAAC,SAAU,MACX,CAAC,gEAAiE,QAClE,CAAC,kCAAmC,OACpC,CAAC,QAAS,KACV,CAAC,uFAAwF,QACzF,CAAC,oBAAqB,QACtB,CAAC,uBAAwB,UACzB,CAAC,sBAAuB,MACxB,CAAC,2FAA4F,MAC7F,CAAC,qEAAsE,SACvE,CAAC,iCAAkC,MACnC,CAAC,oBAAqB,QACtB,CAAC,4FAA6F,QAC9F,CAAC,yGAA0G,QAC3G,CAAC,8FAA+F,QAChG,CAAC,0BAA2B,OAC5B,CAAC,+BAAgC,QACjC,CAAC,sBAAuB,QACxB,CAAC,oBAAqB,UACtB,CAAC,eAAgB,MACjB,CAAC,YAAa,MACd,CAAC,QAAS,QACVuC,SAAQ,SAAUvC,GAClB,OAAO0B,EAAUS,gBAAgBnC,EAAK,GAAIA,EAAK,OAMjD,CAEE,YACA,SACA,SACA,MACA,WACA,UACA,OACA,YACA,QACA,YACA,QACA,QACA,QACA,QACA,UACA,SACA,OACA,OACA,UACA,QACA,WACA,MACA,WACA,cACA,QACA,SACA,WACA,YACA,MACA,SACA,YACA,YACA,YACA,WACA,WACA,MACA,UACA,UACA,WACA,WACA,eACA,SACA,SACA,YACA,WACA,YACA,cACA,QACA,UACA,QACA,SACA,aACA,YACA,WACA,OACA,QACA,OACA,QACA,QACA,MACA,QACA,OACA,OACA,YACA,OACA,WACA,SACA,SACA,YACA,WACA,OACA,WACA,OACA,SACA,WACA,SACA,SACA,WACA,SACA,WACA,UACA,QACA,QACA,SACA,UACA,iBACA,QACA,OACA,SACA,UACA,UACA,aACA,WACA,MACA,kBAEA,gBACA,SACA,SACA,YACA,WACA,QACA,WACAuC,QAAQb,EAAUU,oBAEbV,EA/eYA","sources":["../../../plugins/config/src/ConfigurationEditorWidget/components/CallbackEditor.js","../../../plugins/config/src/ConfigurationEditorWidget/components/ColorEditor.tsx","../../../plugins/config/src/ConfigurationEditorWidget/components/SlotEditor.js","../../../plugins/config/src/ConfigurationEditorWidget/components/TypeSelector.js","../../../plugins/config/src/ConfigurationEditorWidget/components/ConfigurationEditor.js","../../../node_modules/pluralize/pluralize.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDebounce } from '@jbrowse/core/util'\nimport { stringToJexlExpression } from '@jbrowse/core/util/jexlStrings'\nimport {\n  FormControl,\n  FormHelperText,\n  InputLabel,\n  Tooltip,\n  IconButton,\n  makeStyles,\n} from '@material-ui/core'\nimport HelpIcon from '@material-ui/icons/Help'\nimport { getEnv } from 'mobx-state-tree'\nimport { observer, PropTypes } from 'mobx-react'\nimport Editor from 'react-simple-code-editor'\n\n// fontSize and fontFamily have to match between Editor and SyntaxHighlighter\nconst fontSize = '12px'\n\n// Optimize by using system default fonts:\n// https://css-tricks.com/snippets/css/font-stacks/\nconst fontFamily =\n  'Consolas, \"Andale Mono WT\", \"Andale Mono\", \"Lucida Console\", \"Lucida Sans Typewriter\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Liberation Mono\", \"Nimbus Mono L\", Monaco, \"Courier New\", Courier, monospace'\n\nconst useStyles = makeStyles(theme => ({\n  callbackEditor: {\n    marginTop: '16px',\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    fontFamily,\n    fontSize,\n  },\n}))\n\nfunction CallbackEditor({ slot }) {\n  const classes = useStyles()\n\n  const [code, setCode] = useState(slot.value)\n  const [error, setCodeError] = useState()\n  const debouncedCode = useDebounce(code, 400)\n\n  useEffect(() => {\n    try {\n      const jexlDebouncedCode = debouncedCode.startsWith('jexl:')\n        ? debouncedCode\n        : `jexl:${debouncedCode}`\n      stringToJexlExpression(\n        jexlDebouncedCode,\n        getEnv(slot).pluginManager?.jexl,\n      )\n      slot.set(jexlDebouncedCode)\n      setCodeError(null)\n    } catch (e) {\n      console.error({ e })\n      setCodeError(e)\n    }\n  }, [debouncedCode, slot])\n\n  // if default value is a callback, will have to remove jexl:\n  // do this last\n  return (\n    <>\n      <FormControl>\n        <InputLabel shrink htmlFor=\"callback-editor\">\n          {slot.name}\n        </InputLabel>\n        <Editor\n          className={classes.callbackEditor}\n          value={code.startsWith('jexl:') ? code.split('jexl:')[1] : code}\n          onValueChange={newCode => setCode(newCode)}\n          highlight={newCode => newCode}\n          padding={10}\n          style={{ background: error ? '#fdd' : undefined }}\n        />\n        {error ? (\n          <FormHelperText\n            style={{ color: '#f00' }}\n          >{`${error}`}</FormHelperText>\n        ) : null}\n        <FormHelperText>{slot.description}</FormHelperText>\n      </FormControl>\n      <Tooltip\n        title={\n          <div>\n            Callbacks are written in Jexl format. Click to learn more.\n            <br /> Names of available context items: {slot.contextVariable}\n          </div>\n        }\n        arrow\n      >\n        <IconButton\n          color=\"primary\"\n          onClick={() => {\n            const newWindow = window.open(\n              'https://github.com/TomFrost/Jexl',\n              '_blank',\n              'noopener,noreferrer',\n            )\n            if (newWindow) {\n              newWindow.opener = null\n            }\n          }}\n        >\n          <HelpIcon />\n        </IconButton>\n      </Tooltip>\n    </>\n  )\n}\nCallbackEditor.propTypes = {\n  slot: PropTypes.objectOrObservableObject.isRequired,\n}\nexport default observer(CallbackEditor)\n","import React, { lazy, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport ReactPropTypes from 'prop-types'\nimport TextField from '@material-ui/core/TextField'\nimport { Color, RGBColor } from 'react-color'\n\nconst ColorPicker = lazy(() => import('./ColorPicker'))\n\n// this is needed because passing a entire color object into the react-color\n// for alpha, can't pass in an rgba string for example\nfunction serializeColor(color: Color) {\n  if (color instanceof Object) {\n    const { r, g, b, a } = color as RGBColor\n    return a === undefined ? `rgb(${r},${g},${b})` : `rgba(${r},${g},${b},${a})`\n  }\n  return color\n}\n\nexport const ColorSlot = (props: {\n  value: string\n  label: string\n  TextFieldProps: {\n    helperText: string\n    fullWidth: boolean\n  }\n  onChange: (arg: string) => void\n}) => {\n  const { value, label, TextFieldProps, onChange } = props\n  const [displayed, setDisplayed] = useState(false)\n\n  return (\n    <>\n      <TextField\n        value={value}\n        label={label}\n        InputProps={{\n          style: {\n            color: value,\n            borderRightWidth: '25px',\n            borderRightStyle: 'solid',\n            borderRightColor: value,\n          },\n        }}\n        onClick={() => setDisplayed(!displayed)}\n        onChange={event => {\n          onChange(event.target.value)\n        }}\n        {...TextFieldProps}\n      />\n      {displayed ? (\n        <React.Suspense fallback={<div />}>\n          <ColorPicker\n            color={value}\n            onChange={event => {\n              onChange(serializeColor(event.rgb))\n            }}\n          />\n        </React.Suspense>\n      ) : null}\n    </>\n  )\n}\nColorSlot.propTypes = {\n  onChange: ReactPropTypes.func.isRequired,\n  label: ReactPropTypes.string,\n  TextFieldProps: ReactPropTypes.shape({}),\n  value: ReactPropTypes.string,\n}\nColorSlot.defaultProps = {\n  label: '',\n  value: '#000',\n  TextFieldProps: {},\n}\n\nfunction ColorEditorSlot(props: {\n  slot: {\n    name: string\n    value: string\n    description: string\n    set: (arg: string) => void\n  }\n}) {\n  const { slot } = props\n  return (\n    <ColorSlot\n      label={slot.name}\n      value={slot.value}\n      onChange={(color: string) => {\n        slot.set(color)\n      }}\n      TextFieldProps={{\n        helperText: slot.description,\n        fullWidth: true,\n      }}\n    />\n  )\n}\nColorEditorSlot.propTypes = {\n  slot: ReactPropTypes.shape({\n    name: ReactPropTypes.string.isRequired,\n    description: ReactPropTypes.string,\n    value: ReactPropTypes.string.isRequired,\n    set: ReactPropTypes.func.isRequired,\n  }).isRequired,\n}\nexport default observer(ColorEditorSlot)\n","import React, { useEffect, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { getPropertyMembers, getEnv } from 'mobx-state-tree'\nimport { FileSelector } from '@jbrowse/core/ui'\nimport {\n  getPropertyType,\n  getSubType,\n  getUnionSubTypes,\n} from '@jbrowse/core/util/mst-reflection'\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  FormHelperText,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  List,\n  ListItem,\n  MenuItem,\n  Paper,\n  SvgIcon,\n  TextField,\n  makeStyles,\n} from '@material-ui/core'\n\n// icons\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport AddIcon from '@material-ui/icons/Add'\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked'\n\n// locals\nimport CallbackEditor from './CallbackEditor'\nimport ColorEditor from './ColorEditor'\nimport JsonEditor from './JsonEditor'\n\nconst StringEditor = observer(({ slot }) => (\n  <TextField\n    label={slot.name}\n    // error={filterError}\n    helperText={slot.description}\n    fullWidth\n    value={slot.value}\n    onChange={evt => slot.set(evt.target.value)}\n  />\n))\n\nconst TextEditor = observer(({ slot }) => (\n  <TextField\n    label={slot.name}\n    helperText={slot.description}\n    fullWidth\n    multiline\n    value={slot.value}\n    onChange={evt => slot.set(evt.target.value)}\n  />\n))\n\n// checked checkbox, looks like a styled (x)\nconst SvgCheckbox = () => (\n  <SvgIcon>\n    <path d=\"M20.41,3C21.8,5.71 22.35,8.84 22,12C21.8,15.16 20.7,18.29 18.83,21L17.3,20C18.91,17.57 19.85,14.8 20,12C20.34,9.2 19.89,6.43 18.7,4L20.41,3M5.17,3L6.7,4C5.09,6.43 4.15,9.2 4,12C3.66,14.8 4.12,17.57 5.3,20L3.61,21C2.21,18.29 1.65,15.17 2,12C2.2,8.84 3.3,5.71 5.17,3M12.08,10.68L14.4,7.45H16.93L13.15,12.45L15.35,17.37H13.09L11.71,14L9.28,17.33H6.76L10.66,12.21L8.53,7.45H10.8L12.08,10.68Z\" />\n  </SvgIcon>\n)\n\nconst StringArrayEditor = observer(({ slot }) => {\n  const [value, setValue] = useState('')\n  return (\n    <>\n      {slot.name ? <InputLabel>{slot.name}</InputLabel> : null}\n      <List disablePadding>\n        {slot.value.map((val, idx) => (\n          <ListItem key={idx} disableGutters>\n            <TextField\n              value={val}\n              onChange={evt => slot.setAtIndex(idx, evt.target.value)}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      color=\"secondary\"\n                      onClick={() => slot.removeAtIndex(idx)}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </ListItem>\n        ))}\n        <ListItem disableGutters>\n          <TextField\n            value={value}\n            placeholder=\"add new\"\n            onChange={event => setValue(event.target.value)}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    onClick={() => {\n                      slot.add(value)\n                      setValue('')\n                    }}\n                    disabled={value === ''}\n                    color=\"secondary\"\n                    data-testid={`stringArrayAdd-${slot.name}`}\n                  >\n                    <AddIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n        </ListItem>\n      </List>\n      <FormHelperText>{slot.description}</FormHelperText>\n    </>\n  )\n})\n\nconst useMapEditorStyles = makeStyles(theme => ({\n  card: {\n    marginTop: theme.spacing(1),\n  },\n}))\n\nconst StringArrayMapEditor = observer(({ slot }) => {\n  const classes = useMapEditorStyles()\n  const [value, setValue] = useState('')\n  return (\n    <>\n      <InputLabel>{slot.name}</InputLabel>\n      {Array.from(slot.value, ([key, val]) => (\n        <Card raised key={key} className={classes.card}>\n          <CardHeader\n            title={key}\n            action={\n              <IconButton color=\"secondary\" onClick={() => slot.remove(key)}>\n                <DeleteIcon />\n              </IconButton>\n            }\n          />\n          <CardContent>\n            <StringArrayEditor\n              slot={{\n                value: val,\n                description: `Values associated with entry ${key}`,\n                setAtIndex: (idx, strValue) => {\n                  slot.setAtKeyIndex(key, idx, strValue)\n                },\n                removeAtIndex: idx => {\n                  slot.removeAtKeyIndex(key, idx)\n                },\n                add: strValue => {\n                  slot.addToKey(key, strValue)\n                },\n              }}\n            />\n          </CardContent>\n        </Card>\n      ))}\n      <Card raised className={classes.card}>\n        <CardHeader\n          disableTypography\n          title={\n            <TextField\n              fullWidth\n              value={value}\n              placeholder=\"add new\"\n              onChange={event => setValue(event.target.value)}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      disabled={value === ''}\n                      onClick={() => {\n                        slot.add(value, [])\n                        setValue('')\n                      }}\n                      color=\"secondary\"\n                    >\n                      <AddIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          }\n        />\n      </Card>\n      <FormHelperText>{slot.description}</FormHelperText>\n    </>\n  )\n})\n\nconst NumberMapEditor = observer(({ slot }) => {\n  const classes = useMapEditorStyles()\n  const [value, setValue] = useState('')\n  return (\n    <>\n      <InputLabel>{slot.name}</InputLabel>\n      {Array.from(slot.value, ([key, val]) => (\n        <Card raised key={key} className={classes.card}>\n          <CardHeader\n            title={key}\n            action={\n              <IconButton color=\"secondary\" onClick={() => slot.remove(key)}>\n                <DeleteIcon />\n              </IconButton>\n            }\n          />\n          <CardContent>\n            <NumberEditor\n              slot={{\n                value: val,\n                set: numValue => slot.add(key, numValue),\n              }}\n            />\n          </CardContent>\n        </Card>\n      ))}\n      <Card raised className={classes.card}>\n        <CardHeader\n          disableTypography\n          title={\n            <TextField\n              fullWidth\n              value={value}\n              placeholder=\"add new\"\n              onChange={event => setValue(event.target.value)}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      disabled={value === ''}\n                      onClick={() => {\n                        slot.add(value, 0)\n                        setValue('')\n                      }}\n                      color=\"secondary\"\n                    >\n                      <AddIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          }\n        />\n      </Card>\n      <FormHelperText>{slot.description}</FormHelperText>\n    </>\n  )\n})\n\nconst NumberEditor = observer(({ slot }) => {\n  const [val, setVal] = useState(slot.value)\n  useEffect(() => {\n    const num = parseFloat(val, 10)\n    if (!Number.isNaN(num)) {\n      slot.set(num)\n    } else {\n      slot.reset()\n    }\n  }, [slot, val])\n  return (\n    <TextField\n      label={slot.name}\n      helperText={slot.description}\n      value={val}\n      type=\"number\"\n      onChange={evt => setVal(evt.target.value)}\n    />\n  )\n})\n\nconst IntegerEditor = observer(({ slot }) => {\n  const [val, setVal] = useState(slot.value)\n  useEffect(() => {\n    const num = parseInt(val, 10)\n    if (!Number.isNaN(num)) {\n      slot.set(num)\n    }\n  }, [slot, val])\n  return (\n    <TextField\n      label={slot.name}\n      helperText={slot.description}\n      value={val}\n      type=\"number\"\n      onChange={evt => setVal(evt.target.value)}\n    />\n  )\n})\n\nconst booleanEditor = observer(({ slot }) => (\n  <FormControl>\n    <FormControlLabel\n      label={slot.name}\n      control={\n        <Checkbox\n          checked={slot.value}\n          onChange={evt => slot.set(evt.target.checked)}\n        />\n      }\n    />\n    <FormHelperText>{slot.description}</FormHelperText>\n  </FormControl>\n))\n\nconst stringEnumEditor = observer(({ slot, slotSchema }) => {\n  const p = getPropertyMembers(getSubType(slotSchema))\n  const choices = getUnionSubTypes(\n    getUnionSubTypes(getSubType(getPropertyType(p, 'value')))[1],\n  ).map(t => t.value)\n\n  return (\n    <TextField\n      value={slot.value}\n      label={slot.name}\n      select\n      // error={filterError}\n      helperText={slot.description}\n      fullWidth\n      onChange={evt => slot.set(evt.target.value)}\n    >\n      {choices.map(str => (\n        <MenuItem key={str} value={str}>\n          {str}\n        </MenuItem>\n      ))}\n    </TextField>\n  )\n})\n\nconst FileSelectorWrapper = observer(({ slot }) => {\n  return (\n    <FileSelector\n      location={slot.value}\n      setLocation={location => slot.set(location)}\n      name={slot.name}\n      description={slot.description}\n      rootModel={getEnv(slot).pluginManager?.rootModel}\n    />\n  )\n})\n\nconst valueComponents = {\n  string: StringEditor,\n  text: TextEditor,\n  fileLocation: FileSelectorWrapper,\n  stringArray: StringArrayEditor,\n  stringArrayMap: StringArrayMapEditor,\n  numberMap: NumberMapEditor,\n  number: NumberEditor,\n  integer: IntegerEditor,\n  color: ColorEditor,\n  stringEnum: stringEnumEditor,\n  boolean: booleanEditor,\n  frozen: JsonEditor,\n  configRelationships: JsonEditor,\n}\n\nexport const useSlotEditorStyles = makeStyles(theme => ({\n  paper: {\n    display: 'flex',\n    marginBottom: theme.spacing(2),\n    position: 'relative',\n  },\n  paperContent: {\n    width: '100%',\n  },\n  slotModeSwitch: {\n    width: 24,\n    background: theme.palette.secondary.light,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}))\n\nconst SlotEditor = observer(({ slot, slotSchema }) => {\n  const classes = useSlotEditorStyles()\n  const { type } = slot\n  let ValueComponent = slot.isCallback ? CallbackEditor : valueComponents[type]\n  if (!ValueComponent) {\n    console.warn(`no slot editor defined for ${type}, editing as string`)\n    ValueComponent = StringEditor\n  }\n  if (!(type in valueComponents)) {\n    console.warn(`SlotEditor needs to implement ${type}`)\n  }\n  return (\n    <Paper className={classes.paper}>\n      <div className={classes.paperContent}>\n        <ValueComponent slot={slot} slotSchema={slotSchema} />\n      </div>\n      <div className={classes.slotModeSwitch}>\n        {slot.contextVariable.length ? (\n          <IconButton\n            className={classes.slotModeIcon}\n            onClick={() =>\n              slot.isCallback ? slot.convertToValue() : slot.convertToCallback()\n            }\n            title={`convert to ${\n              slot.isCallback ? 'regular value' : 'callback'\n            }`}\n            color=\"secondary\"\n          >\n            {!slot.isCallback ? <RadioButtonUncheckedIcon /> : <SvgCheckbox />}\n          </IconButton>\n        ) : null}\n      </div>\n    </Paper>\n  )\n})\n\nexport default SlotEditor\n","import MenuItem from '@material-ui/core/MenuItem'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport { observer } from 'mobx-react'\nimport React from 'react'\nimport { useSlotEditorStyles } from './SlotEditor'\n\nconst TypeSelector = observer(\n  ({ typeNameChoices, slot, slotName, onChange }) => {\n    const classes = useSlotEditorStyles()\n    return (\n      <Paper className={classes.paper}>\n        <div className={classes.paperContent}>\n          <TextField\n            value={slot.type}\n            label=\"Type\"\n            select\n            // error={filterError}\n            helperText={`Type of ${slotName} to use`}\n            fullWidth\n            onChange={onChange}\n          >\n            {typeNameChoices.map(str => (\n              <MenuItem key={str} value={str}>\n                {str}\n              </MenuItem>\n            ))}\n          </TextField>\n        </div>\n      </Paper>\n    )\n  },\n)\n\nexport default TypeSelector\n","import React from 'react'\nimport {\n  readConfObject,\n  getTypeNamesFromExplicitlyTypedUnion,\n  isConfigurationSchemaType,\n  isConfigurationSlotType,\n} from '@jbrowse/core/configuration'\nimport {\n  FormGroup,\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { observer } from 'mobx-react'\nimport { getMembers } from 'mobx-state-tree'\nimport { singular } from 'pluralize'\n\n// icons\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\n\n// locals\nimport SlotEditor from './SlotEditor'\nimport TypeSelector from './TypeSelector'\n\nconst useStyles = makeStyles(theme => ({\n  expandIcon: {\n    color: '#fff',\n  },\n  root: {\n    padding: theme.spacing(1, 3, 1, 1),\n  },\n  expansionPanelDetails: {\n    display: 'block',\n    padding: theme.spacing(1),\n  },\n\n  accordion: {\n    border: `1px solid ${theme.palette.text.primary}`,\n  },\n}))\n\nconst Member = observer(props => {\n  const classes = useStyles()\n  const {\n    slotName,\n    slotSchema,\n    schema,\n    slot = schema[slotName],\n    path = [],\n  } = props\n  let typeSelector\n  if (isConfigurationSchemaType(slotSchema)) {\n    if (slot.length) {\n      return slot.map((subslot, slotIndex) => {\n        const key = `${singular(slotName)} ${slotIndex + 1}`\n        return <Member {...props} key={key} slot={subslot} slotName={key} />\n      })\n    }\n    // if this is an explicitly typed schema, make a type-selecting dropdown\n    // that can be used to change its type\n    const typeNameChoices = getTypeNamesFromExplicitlyTypedUnion(slotSchema)\n    if (typeNameChoices.length) {\n      typeSelector = (\n        <TypeSelector\n          typeNameChoices={typeNameChoices}\n          slotName={slotName}\n          slot={slot}\n          onChange={evt => {\n            if (evt.target.value !== slot.type) {\n              schema.setSubschema(slotName, { type: evt.target.value })\n            }\n          }}\n        />\n      )\n    }\n    return (\n      <Accordion\n        defaultExpanded\n        className={classes.accordion}\n        TransitionProps={{ unmountOnExit: true, timeout: 150 }}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon className={classes.expandIcon} />}\n        >\n          <Typography>{[...path, slotName].join('🡒')}</Typography>\n        </AccordionSummary>\n        <AccordionDetails className={classes.expansionPanelDetails}>\n          {typeSelector}\n          <FormGroup>\n            <Schema schema={slot} path={[...path, slotName]} />\n          </FormGroup>\n        </AccordionDetails>\n      </Accordion>\n    )\n  }\n\n  if (isConfigurationSlotType(slotSchema)) {\n    // this is a regular config slot\n    return <SlotEditor key={slotName} slot={slot} slotSchema={slotSchema} />\n  }\n\n  return null\n})\n\nconst Schema = observer(({ schema, path = [] }) => {\n  const properties = getMembers(schema).properties\n  return Object.entries(properties).map(([slotName, slotSchema]) => (\n    <Member\n      key={slotName}\n      slotName={slotName}\n      slotSchema={slotSchema}\n      path={path}\n      schema={schema}\n    />\n  ))\n})\n\nconst ConfigurationEditor = observer(({ model }) => {\n  const classes = useStyles()\n  // key forces a re-render, otherwise the same field can end up being used\n  // for different tracks since only the backing model changes for example\n  // see pr #804\n  const key = model.target && readConfObject(model.target, 'trackId')\n  const name = model.target && readConfObject(model.target, 'name')\n  return (\n    <>\n      <Accordion\n        key={key}\n        defaultExpanded\n        className={classes.accordion}\n        TransitionProps={{ unmountOnExit: true, timeout: 150 }}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon className={classes.expandIcon} />}\n        >\n          <Typography>{name ? name : 'Configuration'}</Typography>\n        </AccordionSummary>\n        <AccordionDetails\n          className={classes.expansionPanelDetails}\n          data-testid=\"configEditor\"\n        >\n          {!model.target ? 'no target set' : <Schema schema={model.target} />}\n        </AccordionDetails>\n      </Accordion>\n\n      {/* blank space at the bottom of screen allows scroll */}\n      <div style={{ height: 300 }} />\n    </>\n  )\n})\n\nexport default ConfigurationEditor\n","/* global define */\n\n(function (root, pluralize) {\n  /* istanbul ignore else */\n  if (typeof require === 'function' && typeof exports === 'object' && typeof module === 'object') {\n    // Node.\n    module.exports = pluralize();\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD, registers as an anonymous module.\n    define(function () {\n      return pluralize();\n    });\n  } else {\n    // Browser global.\n    root.pluralize = pluralize();\n  }\n})(this, function () {\n  // Rule storage - pluralize and singularize need to be run sequentially,\n  // while other rules can be optimized using an object for instant lookups.\n  var pluralRules = [];\n  var singularRules = [];\n  var uncountables = {};\n  var irregularPlurals = {};\n  var irregularSingles = {};\n\n  /**\n   * Sanitize a pluralization rule to a usable regular expression.\n   *\n   * @param  {(RegExp|string)} rule\n   * @return {RegExp}\n   */\n  function sanitizeRule (rule) {\n    if (typeof rule === 'string') {\n      return new RegExp('^' + rule + '$', 'i');\n    }\n\n    return rule;\n  }\n\n  /**\n   * Pass in a word token to produce a function that can replicate the case on\n   * another word.\n   *\n   * @param  {string}   word\n   * @param  {string}   token\n   * @return {Function}\n   */\n  function restoreCase (word, token) {\n    // Tokens are an exact match.\n    if (word === token) return token;\n\n    // Lower cased words. E.g. \"hello\".\n    if (word === word.toLowerCase()) return token.toLowerCase();\n\n    // Upper cased words. E.g. \"WHISKY\".\n    if (word === word.toUpperCase()) return token.toUpperCase();\n\n    // Title cased words. E.g. \"Title\".\n    if (word[0] === word[0].toUpperCase()) {\n      return token.charAt(0).toUpperCase() + token.substr(1).toLowerCase();\n    }\n\n    // Lower cased words. E.g. \"test\".\n    return token.toLowerCase();\n  }\n\n  /**\n   * Interpolate a regexp string.\n   *\n   * @param  {string} str\n   * @param  {Array}  args\n   * @return {string}\n   */\n  function interpolate (str, args) {\n    return str.replace(/\\$(\\d{1,2})/g, function (match, index) {\n      return args[index] || '';\n    });\n  }\n\n  /**\n   * Replace a word using a rule.\n   *\n   * @param  {string} word\n   * @param  {Array}  rule\n   * @return {string}\n   */\n  function replace (word, rule) {\n    return word.replace(rule[0], function (match, index) {\n      var result = interpolate(rule[1], arguments);\n\n      if (match === '') {\n        return restoreCase(word[index - 1], result);\n      }\n\n      return restoreCase(match, result);\n    });\n  }\n\n  /**\n   * Sanitize a word by passing in the word and sanitization rules.\n   *\n   * @param  {string}   token\n   * @param  {string}   word\n   * @param  {Array}    rules\n   * @return {string}\n   */\n  function sanitizeWord (token, word, rules) {\n    // Empty string or doesn't need fixing.\n    if (!token.length || uncountables.hasOwnProperty(token)) {\n      return word;\n    }\n\n    var len = rules.length;\n\n    // Iterate over the sanitization rules and use the first one to match.\n    while (len--) {\n      var rule = rules[len];\n\n      if (rule[0].test(word)) return replace(word, rule);\n    }\n\n    return word;\n  }\n\n  /**\n   * Replace a word with the updated word.\n   *\n   * @param  {Object}   replaceMap\n   * @param  {Object}   keepMap\n   * @param  {Array}    rules\n   * @return {Function}\n   */\n  function replaceWord (replaceMap, keepMap, rules) {\n    return function (word) {\n      // Get the correct token and case restoration functions.\n      var token = word.toLowerCase();\n\n      // Check against the keep object map.\n      if (keepMap.hasOwnProperty(token)) {\n        return restoreCase(word, token);\n      }\n\n      // Check against the replacement map for a direct word replacement.\n      if (replaceMap.hasOwnProperty(token)) {\n        return restoreCase(word, replaceMap[token]);\n      }\n\n      // Run all the rules against the word.\n      return sanitizeWord(token, word, rules);\n    };\n  }\n\n  /**\n   * Check if a word is part of the map.\n   */\n  function checkWord (replaceMap, keepMap, rules, bool) {\n    return function (word) {\n      var token = word.toLowerCase();\n\n      if (keepMap.hasOwnProperty(token)) return true;\n      if (replaceMap.hasOwnProperty(token)) return false;\n\n      return sanitizeWord(token, token, rules) === token;\n    };\n  }\n\n  /**\n   * Pluralize or singularize a word based on the passed in count.\n   *\n   * @param  {string}  word      The word to pluralize\n   * @param  {number}  count     How many of the word exist\n   * @param  {boolean} inclusive Whether to prefix with the number (e.g. 3 ducks)\n   * @return {string}\n   */\n  function pluralize (word, count, inclusive) {\n    var pluralized = count === 1\n      ? pluralize.singular(word) : pluralize.plural(word);\n\n    return (inclusive ? count + ' ' : '') + pluralized;\n  }\n\n  /**\n   * Pluralize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.plural = replaceWord(\n    irregularSingles, irregularPlurals, pluralRules\n  );\n\n  /**\n   * Check if a word is plural.\n   *\n   * @type {Function}\n   */\n  pluralize.isPlural = checkWord(\n    irregularSingles, irregularPlurals, pluralRules\n  );\n\n  /**\n   * Singularize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.singular = replaceWord(\n    irregularPlurals, irregularSingles, singularRules\n  );\n\n  /**\n   * Check if a word is singular.\n   *\n   * @type {Function}\n   */\n  pluralize.isSingular = checkWord(\n    irregularPlurals, irregularSingles, singularRules\n  );\n\n  /**\n   * Add a pluralization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addPluralRule = function (rule, replacement) {\n    pluralRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add a singularization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addSingularRule = function (rule, replacement) {\n    singularRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add an uncountable word rule.\n   *\n   * @param {(string|RegExp)} word\n   */\n  pluralize.addUncountableRule = function (word) {\n    if (typeof word === 'string') {\n      uncountables[word.toLowerCase()] = true;\n      return;\n    }\n\n    // Set singular and plural references for the word.\n    pluralize.addPluralRule(word, '$0');\n    pluralize.addSingularRule(word, '$0');\n  };\n\n  /**\n   * Add an irregular word definition.\n   *\n   * @param {string} single\n   * @param {string} plural\n   */\n  pluralize.addIrregularRule = function (single, plural) {\n    plural = plural.toLowerCase();\n    single = single.toLowerCase();\n\n    irregularSingles[single] = plural;\n    irregularPlurals[plural] = single;\n  };\n\n  /**\n   * Irregular rules.\n   */\n  [\n    // Pronouns.\n    ['I', 'we'],\n    ['me', 'us'],\n    ['he', 'they'],\n    ['she', 'they'],\n    ['them', 'them'],\n    ['myself', 'ourselves'],\n    ['yourself', 'yourselves'],\n    ['itself', 'themselves'],\n    ['herself', 'themselves'],\n    ['himself', 'themselves'],\n    ['themself', 'themselves'],\n    ['is', 'are'],\n    ['was', 'were'],\n    ['has', 'have'],\n    ['this', 'these'],\n    ['that', 'those'],\n    // Words ending in with a consonant and `o`.\n    ['echo', 'echoes'],\n    ['dingo', 'dingoes'],\n    ['volcano', 'volcanoes'],\n    ['tornado', 'tornadoes'],\n    ['torpedo', 'torpedoes'],\n    // Ends with `us`.\n    ['genus', 'genera'],\n    ['viscus', 'viscera'],\n    // Ends with `ma`.\n    ['stigma', 'stigmata'],\n    ['stoma', 'stomata'],\n    ['dogma', 'dogmata'],\n    ['lemma', 'lemmata'],\n    ['schema', 'schemata'],\n    ['anathema', 'anathemata'],\n    // Other irregular rules.\n    ['ox', 'oxen'],\n    ['axe', 'axes'],\n    ['die', 'dice'],\n    ['yes', 'yeses'],\n    ['foot', 'feet'],\n    ['eave', 'eaves'],\n    ['goose', 'geese'],\n    ['tooth', 'teeth'],\n    ['quiz', 'quizzes'],\n    ['human', 'humans'],\n    ['proof', 'proofs'],\n    ['carve', 'carves'],\n    ['valve', 'valves'],\n    ['looey', 'looies'],\n    ['thief', 'thieves'],\n    ['groove', 'grooves'],\n    ['pickaxe', 'pickaxes'],\n    ['passerby', 'passersby']\n  ].forEach(function (rule) {\n    return pluralize.addIrregularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Pluralization rules.\n   */\n  [\n    [/s?$/i, 's'],\n    [/[^\\u0000-\\u007F]$/i, '$0'],\n    [/([^aeiou]ese)$/i, '$1'],\n    [/(ax|test)is$/i, '$1es'],\n    [/(alias|[^aou]us|t[lm]as|gas|ris)$/i, '$1es'],\n    [/(e[mn]u)s?$/i, '$1s'],\n    [/([^l]ias|[aeiou]las|[ejzr]as|[iu]am)$/i, '$1'],\n    [/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1i'],\n    [/(alumn|alg|vertebr)(?:a|ae)$/i, '$1ae'],\n    [/(seraph|cherub)(?:im)?$/i, '$1im'],\n    [/(her|at|gr)o$/i, '$1oes'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|automat|quor)(?:a|um)$/i, '$1a'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)(?:a|on)$/i, '$1a'],\n    [/sis$/i, 'ses'],\n    [/(?:(kni|wi|li)fe|(ar|l|ea|eo|oa|hoo)f)$/i, '$1$2ves'],\n    [/([^aeiouy]|qu)y$/i, '$1ies'],\n    [/([^ch][ieo][ln])ey$/i, '$1ies'],\n    [/(x|ch|ss|sh|zz)$/i, '$1es'],\n    [/(matr|cod|mur|sil|vert|ind|append)(?:ix|ex)$/i, '$1ices'],\n    [/\\b((?:tit)?m|l)(?:ice|ouse)$/i, '$1ice'],\n    [/(pe)(?:rson|ople)$/i, '$1ople'],\n    [/(child)(?:ren)?$/i, '$1ren'],\n    [/eaux$/i, '$0'],\n    [/m[ae]n$/i, 'men'],\n    ['thou', 'you']\n  ].forEach(function (rule) {\n    return pluralize.addPluralRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Singularization rules.\n   */\n  [\n    [/s$/i, ''],\n    [/(ss)$/i, '$1'],\n    [/(wi|kni|(?:after|half|high|low|mid|non|night|[^\\w]|^)li)ves$/i, '$1fe'],\n    [/(ar|(?:wo|[ae])l|[eo][ao])ves$/i, '$1f'],\n    [/ies$/i, 'y'],\n    [/\\b([pl]|zomb|(?:neck|cross)?t|coll|faer|food|gen|goon|group|lass|talk|goal|cut)ies$/i, '$1ie'],\n    [/\\b(mon|smil)ies$/i, '$1ey'],\n    [/\\b((?:tit)?m|l)ice$/i, '$1ouse'],\n    [/(seraph|cherub)im$/i, '$1'],\n    [/(x|ch|ss|sh|zz|tto|go|cho|alias|[^aou]us|t[lm]as|gas|(?:her|at|gr)o|[aeiou]ris)(?:es)?$/i, '$1'],\n    [/(analy|diagno|parenthe|progno|synop|the|empha|cri|ne)(?:sis|ses)$/i, '$1sis'],\n    [/(movie|twelve|abuse|e[mn]u)s$/i, '$1'],\n    [/(test)(?:is|es)$/i, '$1is'],\n    [/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1us'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|quor)a$/i, '$1um'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)a$/i, '$1on'],\n    [/(alumn|alg|vertebr)ae$/i, '$1a'],\n    [/(cod|mur|sil|vert|ind)ices$/i, '$1ex'],\n    [/(matr|append)ices$/i, '$1ix'],\n    [/(pe)(rson|ople)$/i, '$1rson'],\n    [/(child)ren$/i, '$1'],\n    [/(eau)x?$/i, '$1'],\n    [/men$/i, 'man']\n  ].forEach(function (rule) {\n    return pluralize.addSingularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Uncountable rules.\n   */\n  [\n    // Singular words with no plurals.\n    'adulthood',\n    'advice',\n    'agenda',\n    'aid',\n    'aircraft',\n    'alcohol',\n    'ammo',\n    'analytics',\n    'anime',\n    'athletics',\n    'audio',\n    'bison',\n    'blood',\n    'bream',\n    'buffalo',\n    'butter',\n    'carp',\n    'cash',\n    'chassis',\n    'chess',\n    'clothing',\n    'cod',\n    'commerce',\n    'cooperation',\n    'corps',\n    'debris',\n    'diabetes',\n    'digestion',\n    'elk',\n    'energy',\n    'equipment',\n    'excretion',\n    'expertise',\n    'firmware',\n    'flounder',\n    'fun',\n    'gallows',\n    'garbage',\n    'graffiti',\n    'hardware',\n    'headquarters',\n    'health',\n    'herpes',\n    'highjinks',\n    'homework',\n    'housework',\n    'information',\n    'jeans',\n    'justice',\n    'kudos',\n    'labour',\n    'literature',\n    'machinery',\n    'mackerel',\n    'mail',\n    'media',\n    'mews',\n    'moose',\n    'music',\n    'mud',\n    'manga',\n    'news',\n    'only',\n    'personnel',\n    'pike',\n    'plankton',\n    'pliers',\n    'police',\n    'pollution',\n    'premises',\n    'rain',\n    'research',\n    'rice',\n    'salmon',\n    'scissors',\n    'series',\n    'sewage',\n    'shambles',\n    'shrimp',\n    'software',\n    'species',\n    'staff',\n    'swine',\n    'tennis',\n    'traffic',\n    'transportation',\n    'trout',\n    'tuna',\n    'wealth',\n    'welfare',\n    'whiting',\n    'wildebeest',\n    'wildlife',\n    'you',\n    /pok[eé]mon$/i,\n    // Regexes.\n    /[^aeiou]ese$/i, // \"chinese\", \"japanese\"\n    /deer$/i, // \"deer\", \"reindeer\"\n    /fish$/i, // \"fish\", \"blowfish\", \"angelfish\"\n    /measles$/i,\n    /o[iu]s$/i, // \"carnivorous\"\n    /pox$/i, // \"chickpox\", \"smallpox\"\n    /sheep$/i\n  ].forEach(pluralize.addUncountableRule);\n\n  return pluralize;\n});\n"],"names":["useStyles","makeStyles","theme","callbackEditor","marginTop","borderBottom","palette","divider","fontFamily","fontSize","observer","slot","classes","useState","value","code","setCode","error","setCodeError","debouncedCode","useDebounce","useEffect","jexlDebouncedCode","startsWith","stringToJexlExpression","getEnv","pluginManager","jexl","set","e","console","FormControl","InputLabel","shrink","htmlFor","name","className","split","onValueChange","newCode","highlight","padding","style","background","undefined","FormHelperText","color","description","Tooltip","title","contextVariable","arrow","IconButton","onClick","newWindow","window","open","opener","Help","ColorPicker","lazy","ColorSlot","props","label","TextFieldProps","onChange","displayed","setDisplayed","TextField","InputProps","borderRightWidth","borderRightStyle","borderRightColor","event","target","fallback","Object","r","g","b","a","serializeColor","rgb","defaultProps","helperText","fullWidth","StringEditor","evt","TextEditor","multiline","SvgCheckbox","SvgIcon","d","StringArrayEditor","setValue","List","disablePadding","map","val","idx","ListItem","disableGutters","setAtIndex","endAdornment","InputAdornment","position","removeAtIndex","Delete","placeholder","add","disabled","Add","useMapEditorStyles","card","spacing","StringArrayMapEditor","Array","from","key","Card","raised","CardHeader","action","remove","CardContent","strValue","setAtKeyIndex","removeAtKeyIndex","addToKey","disableTypography","NumberMapEditor","NumberEditor","numValue","setVal","num","parseFloat","Number","isNaN","reset","type","IntegerEditor","parseInt","booleanEditor","FormControlLabel","control","Checkbox","checked","stringEnumEditor","slotSchema","p","getPropertyMembers","getSubType","choices","getUnionSubTypes","getPropertyType","t","select","str","MenuItem","FileSelectorWrapper","FileSelector","location","setLocation","rootModel","valueComponents","string","text","fileLocation","stringArray","stringArrayMap","numberMap","number","integer","ColorEditor","stringEnum","boolean","frozen","JsonEditor","configRelationships","useSlotEditorStyles","paper","display","marginBottom","paperContent","width","slotModeSwitch","secondary","light","justifyContent","alignItems","ValueComponent","isCallback","CallbackEditor","warn","Paper","length","slotModeIcon","convertToValue","convertToCallback","RadioButtonUnchecked","typeNameChoices","slotName","expandIcon","root","expansionPanelDetails","accordion","border","primary","Member","typeSelector","schema","path","isConfigurationSchemaType","subslot","slotIndex","singular","getTypeNamesFromExplicitlyTypedUnion","setSubschema","Accordion","defaultExpanded","TransitionProps","unmountOnExit","timeout","AccordionSummary","ExpandMore","Typography","join","AccordionDetails","FormGroup","Schema","isConfigurationSlotType","properties","getMembers","entries","model","readConfObject","height","module","exports","pluralRules","singularRules","uncountables","irregularPlurals","irregularSingles","sanitizeRule","rule","RegExp","restoreCase","word","token","toLowerCase","toUpperCase","charAt","substr","interpolate","args","replace","match","index","result","arguments","sanitizeWord","rules","hasOwnProperty","len","test","replaceWord","replaceMap","keepMap","checkWord","bool","pluralize","count","inclusive","plural","isPlural","isSingular","addPluralRule","replacement","push","addSingularRule","addUncountableRule","addIrregularRule","single","forEach"],"sourceRoot":""}