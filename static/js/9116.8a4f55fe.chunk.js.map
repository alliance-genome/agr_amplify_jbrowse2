{"version":3,"file":"static/js/9116.8a4f55fe.chunk.js","mappings":"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","sources":["../../../plugins/linear-comparative-view/src/LinearComparativeView/components/RubberBand.tsx","../../../plugins/linear-comparative-view/src/LinearComparativeView/components/Header.tsx","../../../plugins/linear-comparative-view/src/LinearComparativeView/components/LinearComparativeView.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/ImportCustomTrack.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/ImportSyntenyTrackSelector.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/ImportForm.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/LinearSyntenyView.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { Popover, Tooltip, Typography, alpha } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { stringify } from '@jbrowse/core/util'\nimport { Menu } from '@jbrowse/core/ui'\nimport { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\nimport { LinearComparativeViewModel } from '../model'\n\ntype LCV = LinearComparativeViewModel\ntype LGV = LinearGenomeViewModel\n\nconst useStyles = makeStyles()(theme => {\n  const { tertiary, primary } = theme.palette\n  const background = tertiary\n    ? alpha(tertiary.main, 0.7)\n    : alpha(primary.main, 0.7)\n  return {\n    rubberBand: {\n      height: '100%',\n      background,\n      position: 'absolute',\n      zIndex: 10,\n      textAlign: 'center',\n      overflow: 'hidden',\n    },\n    rubberBandControl: {\n      cursor: 'crosshair',\n      width: '100%',\n      minHeight: 8,\n    },\n    rubberBandText: {\n      color: tertiary ? tertiary.contrastText : primary.contrastText,\n    },\n    popover: {\n      mouseEvents: 'none',\n      cursor: 'crosshair',\n    },\n    paper: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n    },\n    guide: {\n      pointerEvents: 'none',\n      height: '100%',\n      width: 1,\n      position: 'absolute',\n      zIndex: 10,\n    },\n    sm: {\n      fontSize: 10,\n    },\n  }\n})\n\nconst VerticalGuide = observer(\n  ({ model, coordX }: { model: LCV; coordX: number }) => {\n    const { classes } = useStyles()\n    return (\n      <Tooltip\n        open\n        placement=\"top\"\n        title={model.views\n          .map(view => view.pxToBp(coordX))\n          .map(elt => (\n            <Typography className={classes.sm} key={JSON.stringify(elt)}>\n              {stringify(elt)}\n            </Typography>\n          ))}\n        arrow\n      >\n        <div\n          className={classes.guide}\n          style={{\n            left: coordX,\n            background: 'red',\n          }}\n        />\n      </Tooltip>\n    )\n  },\n)\n\nfunction RubberBand({\n  model,\n  ControlComponent = <div />,\n}: {\n  model: LCV\n  ControlComponent?: React.ReactElement\n}) {\n  const [startX, setStartX] = useState<number>()\n  const [currentX, setCurrentX] = useState<number>()\n\n  // clientX and clientY used for anchorPosition for menu\n  // offsetX used for calculations about width of selection\n  const [anchorPosition, setAnchorPosition] = useState<{\n    offsetX: number\n    clientX: number\n    clientY: number\n  }>()\n  const [guideX, setGuideX] = useState<number>()\n  const controlsRef = useRef<HTMLDivElement>(null)\n  const rubberBandRef = useRef(null)\n  const { classes } = useStyles()\n  const mouseDragging = startX !== undefined && anchorPosition === undefined\n\n  useEffect(() => {\n    function computeOffsets(offsetX: number, view: LGV) {\n      if (startX === undefined) {\n        return\n      }\n      let leftPx = startX\n      let rightPx = offsetX\n      // handles clicking and draging to the left\n      if (rightPx < leftPx) {\n        ;[leftPx, rightPx] = [rightPx, leftPx]\n      }\n      const leftOffset = view.pxToBp(leftPx)\n      const rightOffset = view.pxToBp(rightPx)\n\n      return { leftOffset, rightOffset }\n    }\n\n    function globalMouseMove(event: MouseEvent) {\n      if (controlsRef.current && mouseDragging) {\n        const relativeX =\n          event.clientX - controlsRef.current.getBoundingClientRect().left\n        setCurrentX(relativeX)\n      }\n    }\n\n    function globalMouseUp(event: MouseEvent) {\n      if (startX !== undefined && controlsRef.current) {\n        const { clientX, clientY } = event\n        const ref = controlsRef.current\n        const offsetX = clientX - ref.getBoundingClientRect().left\n        // as stated above, store both clientX/Y and offsetX for different\n        // purposes\n        setAnchorPosition({\n          offsetX,\n          clientX,\n          clientY,\n        })\n        model.views.forEach(view => {\n          const args = computeOffsets(offsetX, view)\n          if (args) {\n            const { leftOffset, rightOffset } = args\n            view.setOffsets(leftOffset, rightOffset)\n          }\n        })\n        setGuideX(undefined)\n      }\n    }\n    if (mouseDragging) {\n      window.addEventListener('mousemove', globalMouseMove)\n      window.addEventListener('mouseup', globalMouseUp)\n      return () => {\n        window.removeEventListener('mousemove', globalMouseMove)\n        window.removeEventListener('mouseup', globalMouseUp)\n      }\n    }\n    return () => {}\n  }, [startX, mouseDragging, anchorPosition, model])\n\n  useEffect(() => {\n    if (\n      !mouseDragging &&\n      currentX !== undefined &&\n      startX !== undefined &&\n      Math.abs(currentX - startX) <= 3\n    ) {\n      handleClose()\n    }\n  }, [mouseDragging, currentX, startX])\n\n  function mouseDown(event: React.MouseEvent<HTMLDivElement>) {\n    event.preventDefault()\n    event.stopPropagation()\n    const relativeX =\n      event.clientX -\n      (event.target as HTMLDivElement).getBoundingClientRect().left\n    setStartX(relativeX)\n    setCurrentX(relativeX)\n  }\n\n  function mouseMove(event: React.MouseEvent<HTMLDivElement>) {\n    const target = event.target as HTMLDivElement\n    setGuideX(event.clientX - target.getBoundingClientRect().left)\n  }\n\n  function mouseOut() {\n    setGuideX(undefined)\n    model.views.forEach(view => view.setOffsets(undefined, undefined))\n  }\n\n  function handleClose() {\n    setAnchorPosition(undefined)\n    setStartX(undefined)\n    setCurrentX(undefined)\n  }\n\n  const open = Boolean(anchorPosition)\n\n  function handleMenuItemClick(_: unknown, callback: Function) {\n    callback()\n    handleClose()\n  }\n\n  if (startX === undefined) {\n    return (\n      <>\n        {guideX !== undefined ? (\n          <VerticalGuide model={model} coordX={guideX} />\n        ) : null}\n        <div\n          data-testid=\"rubberBand_controls\"\n          className={classes.rubberBandControl}\n          role=\"presentation\"\n          ref={controlsRef}\n          onMouseDown={mouseDown}\n          onMouseOut={mouseOut}\n          onMouseMove={mouseMove}\n        >\n          {ControlComponent}\n        </div>\n      </>\n    )\n  }\n\n  /* Calculating Pixels for Mouse Dragging */\n  const right = anchorPosition ? anchorPosition.offsetX : currentX || 0\n  const left = right < startX ? right : startX\n  const width = Math.abs(right - startX)\n  const { views } = model\n  const leftBpOffset = views.map(view => view.pxToBp(left))\n  const rightBpOffset = views.map(view => view.pxToBp(left + width))\n  const numOfBpSelected = views.map(view => Math.ceil(width * view.bpPerPx))\n  return (\n    <>\n      {rubberBandRef.current ? (\n        <>\n          <Popover\n            className={classes.popover}\n            classes={{\n              paper: classes.paper,\n            }}\n            open\n            anchorEl={rubberBandRef.current}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'left',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right',\n            }}\n            keepMounted\n            disableRestoreFocus\n          >\n            {leftBpOffset.map(l => (\n              <Typography key={JSON.stringify(l)}>{stringify(l)}</Typography>\n            ))}\n          </Popover>\n          <Popover\n            className={classes.popover}\n            classes={{\n              paper: classes.paper,\n            }}\n            open\n            anchorEl={rubberBandRef.current}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left',\n            }}\n            keepMounted\n            disableRestoreFocus\n          >\n            {rightBpOffset.map(l => (\n              <Typography key={JSON.stringify(l)}>{stringify(l)}</Typography>\n            ))}\n          </Popover>\n        </>\n      ) : null}\n      <div\n        ref={rubberBandRef}\n        className={classes.rubberBand}\n        style={{ left, width }}\n      >\n        <Typography variant=\"h6\" className={classes.rubberBandText}>\n          {numOfBpSelected.map((n, i) => (\n            <Typography key={`${n}_${i}`}>{`${n.toLocaleString(\n              'en-US',\n            )}bp`}</Typography>\n          ))}\n        </Typography>\n      </div>\n      <div\n        data-testid=\"rubberBand_controls\"\n        className={classes.rubberBandControl}\n        role=\"presentation\"\n        ref={controlsRef}\n        onMouseDown={mouseDown}\n        onMouseOut={mouseOut}\n        onMouseMove={mouseMove}\n      >\n        {ControlComponent}\n      </div>\n      {anchorPosition ? (\n        <Menu\n          anchorReference=\"anchorPosition\"\n          anchorPosition={{\n            left: anchorPosition.clientX,\n            top: anchorPosition.clientY,\n          }}\n          onMenuItemClick={handleMenuItemClick}\n          open={open}\n          onClose={handleClose}\n          menuItems={model.rubberBandMenuItems()}\n        />\n      ) : null}\n    </>\n  )\n}\n\nexport default observer(RubberBand)\n","import React from 'react'\nimport { IconButton, Typography } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { SearchBox } from '@jbrowse/plugin-linear-genome-view'\nimport { observer } from 'mobx-react'\n\n// icons\nimport LinkIcon from '@mui/icons-material/Link'\nimport LinkOffIcon from '@mui/icons-material/LinkOff'\nimport CropFreeIcon from '@mui/icons-material/CropFree'\n\nimport { LinearComparativeViewModel } from '../model'\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\n\ntype LCV = LinearComparativeViewModel\n\nconst useStyles = makeStyles()(() => ({\n  headerBar: {\n    gridArea: '1/1/auto/span 2',\n    display: 'flex',\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  bp: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 10,\n  },\n  searchContainer: {\n    marginLeft: 5,\n  },\n  searchBox: {\n    display: 'flex',\n  },\n}))\n\nconst TrackSelector = observer(({ model }: { model: LCV }) => {\n  return (\n    <IconButton\n      onClick={model.activateTrackSelector}\n      title=\"Open track selector\"\n    >\n      <TrackSelectorIcon color=\"primary\" />\n    </IconButton>\n  )\n})\n\nconst LinkViews = observer(({ model }: { model: LCV }) => {\n  return (\n    <IconButton\n      onClick={model.toggleLinkViews}\n      title=\"Toggle linked scrolls and behavior across views\"\n    >\n      {model.linkViews ? (\n        <LinkOffIcon color=\"primary\" />\n      ) : (\n        <LinkIcon color=\"primary\" />\n      )}\n    </IconButton>\n  )\n})\n\nconst SquareView = observer(({ model }: { model: LCV }) => {\n  return (\n    <IconButton\n      onClick={model.squareView}\n      title=\"Square view (make both the same zoom level)\"\n    >\n      <CropFreeIcon color=\"primary\" />\n    </IconButton>\n  )\n})\n\nconst Header = observer(\n  ({ model, ExtraButtons }: { ExtraButtons?: React.ReactNode; model: LCV }) => {\n    const { classes } = useStyles()\n    const anyShowHeaders = model.views.some(view => !view.hideHeader)\n    return (\n      <div className={classes.headerBar}>\n        <TrackSelector model={model} />\n        <LinkViews model={model} />\n        <SquareView model={model} />\n        {ExtraButtons}\n        {!anyShowHeaders\n          ? model.views.map(view => (\n              <div key={view.id} className={classes.searchBox}>\n                <div className={classes.searchContainer}>\n                  <SearchBox model={view} showHelp={false} />\n                </div>\n                <div className={classes.bp}>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    className={classes.bp}\n                  >\n                    {Math.round(view.coarseTotalBp).toLocaleString('en-US')} bp\n                  </Typography>\n                </div>\n              </div>\n            ))\n          : null}\n\n        <div className={classes.spacer} />\n      </div>\n    )\n  },\n)\n\nexport default Header\n","import React, { useState } from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { getConf, AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { getEnv } from '@jbrowse/core/util'\nimport { ResizeHandle } from '@jbrowse/core/ui'\n\n// locals\nimport { LinearComparativeViewModel } from '../model'\nimport RubberBand from './RubberBand'\nimport Header from './Header'\n\nconst useStyles = makeStyles()(() => ({\n  container: {\n    display: 'grid',\n  },\n  overlay: {\n    zIndex: 100,\n    gridArea: '1/1',\n  },\n  content: {\n    gridArea: '1/1',\n    position: 'relative',\n  },\n  grid: {\n    display: 'grid',\n  },\n  relative: {\n    position: 'relative',\n  },\n\n  // this helps keep the vertical guide inside the parent view container,\n  // similar style exists in the single LGV's trackscontainer\n  rubberbandContainer: {\n    position: 'relative',\n    overflow: 'hidden',\n  },\n}))\n\ntype LCV = LinearComparativeViewModel\n\nconst Overlays = observer(({ model }: { model: LCV }) => {\n  const { classes } = useStyles()\n  return (\n    <>\n      {model.tracks.map(track => {\n        const [display] = track.displays\n        const { RenderingComponent } = display\n        const trackId = getConf(track, 'trackId')\n        return RenderingComponent ? (\n          <div\n            className={classes.overlay}\n            key={trackId}\n            style={{\n              height: model.middleComparativeHeight,\n              overflow: 'hidden',\n            }}\n          >\n            <RenderingComponent model={display} />\n          </div>\n        ) : null\n      })}\n    </>\n  )\n})\n\n// The comparative is in the middle of the views\nconst MiddleComparativeView = observer(\n  ({ model, ExtraButtons }: { ExtraButtons?: React.ReactNode; model: LCV }) => {\n    const { classes } = useStyles()\n    const { views } = model\n    const { pluginManager } = getEnv(model)\n    const { ReactComponent } = pluginManager.getViewType(views[0].type)\n    const [rubberbandMouseOver, setRubberbandMouseOver] = useState(false)\n\n    return (\n      <div className={classes.rubberbandContainer}>\n        <Header ExtraButtons={ExtraButtons} model={model} />\n        <RubberBand\n          model={model}\n          ControlComponent={\n            <div\n              style={{\n                width: '100%',\n                background: rubberbandMouseOver ? '#999' : '#ccc',\n                height: 15,\n              }}\n              onMouseOver={() => setRubberbandMouseOver(true)}\n              onMouseLeave={() => setRubberbandMouseOver(false)}\n            />\n          }\n        />\n        <div className={classes.container}>\n          <ReactComponent model={views[0]} />\n          <div className={classes.grid}>\n            <Overlays model={model} />\n          </div>\n          <ResizeHandle\n            onDrag={n =>\n              model.setMiddleComparativeHeight(\n                model.middleComparativeHeight + n,\n              )\n            }\n            style={{\n              height: 4,\n              background: '#ccc',\n            }}\n          />\n          <ReactComponent model={views[1]} />\n        </div>\n      </div>\n    )\n  },\n)\nconst OverlayComparativeView = observer(\n  ({ model, ExtraButtons }: { ExtraButtons?: React.ReactNode; model: LCV }) => {\n    const { classes } = useStyles()\n    const { views } = model\n    const { pluginManager } = getEnv(model)\n    const [rubberbandMouseOver, setRubberbandMouseOver] = useState(false)\n    return (\n      <div className={classes.rubberbandContainer}>\n        <Header model={model} ExtraButtons={ExtraButtons} />\n        <RubberBand\n          model={model}\n          ControlComponent={\n            <div\n              style={{\n                width: '100%',\n                background: rubberbandMouseOver ? '#aaa' : '#ccc',\n                height: 15,\n              }}\n              onMouseOver={() => setRubberbandMouseOver(true)}\n              onMouseLeave={() => setRubberbandMouseOver(false)}\n            />\n          }\n        />\n\n        <div className={classes.container}>\n          <div className={classes.content}>\n            <div className={classes.relative}>\n              {views.map(view => {\n                const { ReactComponent } = pluginManager.getViewType(view.type)\n                return <ReactComponent key={view.id} model={view} />\n              })}\n            </div>\n            <Overlays model={model} />\n          </div>\n        </div>\n      </div>\n    )\n  },\n)\n\nconst LinearComparativeView = observer(\n  (props: { ExtraButtons?: React.ReactNode; model: LCV }) => {\n    const { model } = props\n\n    const middle = model.tracks.some(({ displays }) =>\n      displays.some((d: AnyConfigurationModel) => getConf(d, 'middle')),\n    )\n    return middle ? (\n      <MiddleComparativeView {...props} />\n    ) : (\n      <OverlayComparativeView {...props} />\n    )\n  },\n)\n\nexport default LinearComparativeView\n","import React, { useState, useEffect } from 'react'\nimport { SnapshotIn } from 'mobx-state-tree'\nimport path from 'path'\nimport {\n  FormControlLabel,\n  Grid,\n  Paper,\n  Radio,\n  RadioGroup,\n  Typography,\n} from '@mui/material'\nimport { ErrorMessage, FileSelector } from '@jbrowse/core/ui'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport { observer } from 'mobx-react'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\nfunction getName(\n  sessionTrackData?: { uri: string } | { localPath: string } | { name: string },\n) {\n  return sessionTrackData\n    ? // @ts-ignore\n      sessionTrackData.uri ||\n        // @ts-ignore\n        sessionTrackData.localPath ||\n        // @ts-ignore\n        sessionTrackData.name\n    : undefined\n}\n\nfunction stripGz(fileName: string) {\n  return fileName.endsWith('.gz')\n    ? fileName.slice(0, fileName.length - 3)\n    : fileName\n}\n\nfunction getAdapter({\n  radioOption,\n  assembly1,\n  assembly2,\n  fileLocation,\n  bed1Location,\n  bed2Location,\n}: {\n  radioOption: string\n  assembly1: string\n  assembly2: string\n  fileLocation?: FileLocation\n  bed1Location?: FileLocation\n  bed2Location?: FileLocation\n}) {\n  if (radioOption === '.paf') {\n    return {\n      type: 'PAFAdapter',\n      pafLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.out') {\n    return {\n      type: 'MashMapAdapter',\n      outLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.delta') {\n    return {\n      type: 'DeltaAdapter',\n      deltaLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.chain') {\n    return {\n      type: 'ChainAdapter',\n      chainLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.anchors') {\n    return {\n      type: 'MCScanAnchorsAdapter',\n      mcscanAnchorsLocation: fileLocation,\n      bed1Location,\n      bed2Location,\n      assemblyNames: [assembly1, assembly2],\n    }\n  } else if (radioOption === '.anchors.simple') {\n    return {\n      type: 'MCScanSimpleAnchorsAdapter',\n      mcscanSimpleAnchorsLocation: fileLocation,\n      bed1Location,\n      bed2Location,\n      assemblyNames: [assembly1, assembly2],\n    }\n  } else {\n    throw new Error('Unknown type')\n  }\n}\n\ntype Conf = SnapshotIn<AnyConfigurationModel>\n\nconst OpenTrack = observer(\n  ({\n    sessionTrackData,\n    assembly1,\n    assembly2,\n    setSessionTrackData,\n  }: {\n    sessionTrackData: Conf\n    assembly1: string\n    assembly2: string\n    setSessionTrackData: (arg: Conf) => void\n  }) => {\n    const [bed2Location, setBed2Location] = useState<FileLocation>()\n    const [bed1Location, setBed1Location] = useState<FileLocation>()\n    const [fileLocation, setFileLocation] = useState<FileLocation>()\n    const [value, setValue] = useState('')\n    const [error, setError] = useState<unknown>()\n    const fileName = getName(fileLocation)\n\n    const radioOption =\n      value || (fileName ? path.extname(stripGz(fileName)) : '')\n\n    useEffect(() => {\n      try {\n        if (fileLocation) {\n          const fn = fileName ? path.basename(fileName) : 'MyTrack'\n          const trackId = `${fn}-${Date.now()}`\n          setError(undefined)\n\n          setSessionTrackData({\n            trackId,\n            name: fn,\n            assemblyNames: [assembly2, assembly1],\n            type: 'SyntenyTrack',\n            adapter: getAdapter({\n              radioOption,\n              assembly1,\n              assembly2,\n              fileLocation,\n              bed1Location,\n              bed2Location,\n            }),\n          })\n        }\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    }, [\n      fileName,\n      assembly1,\n      assembly2,\n      bed1Location,\n      bed2Location,\n      fileLocation,\n      radioOption,\n      setSessionTrackData,\n    ])\n    return (\n      <Paper style={{ padding: 12 }}>\n        {error ? <ErrorMessage error={error} /> : null}\n        <Typography style={{ textAlign: 'center' }}>\n          Add a .paf, .out (MashMap), .delta (Mummer), .chain, .anchors or\n          .anchors.simple (MCScan) file to view in the dotplot. These file types\n          can also be gzipped. The first assembly should be the query sequence\n          (e.g. left column of the PAF) and the second assembly should be the\n          target sequence (e.g. right column of the PAF)\n        </Typography>\n        <RadioGroup\n          value={radioOption}\n          onChange={event => setValue(event.target.value)}\n        >\n          <Grid container justifyContent=\"center\">\n            <Grid item>\n              <FormControlLabel value=\".paf\" control={<Radio />} label=\".paf\" />\n            </Grid>\n            <Grid item>\n              <FormControlLabel value=\".out\" control={<Radio />} label=\".out\" />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".delta\"\n                control={<Radio />}\n                label=\".delta\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".chain\"\n                control={<Radio />}\n                label=\".chain\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".anchors\"\n                control={<Radio />}\n                label=\".anchors\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".anchors.simple\"\n                control={<Radio />}\n                label=\".anchors.simple\"\n              />\n            </Grid>\n          </Grid>\n        </RadioGroup>\n        <Grid container justifyContent=\"center\">\n          <Grid item>\n            {value === '.anchors' || value === '.anchors.simple' ? (\n              <div>\n                <div style={{ margin: 20 }}>\n                  Open the {value} and .bed files for both genome assemblies\n                  from the MCScan (Python verson) pipeline{' '}\n                  <a href=\"https://github.com/tanghaibao/jcvi/wiki/MCscan-(Python-version)\">\n                    (more info)\n                  </a>\n                </div>\n                <div style={{ display: 'flex' }}>\n                  <div>\n                    <FileSelector\n                      name=\".anchors file\"\n                      description=\"\"\n                      location={fileLocation}\n                      setLocation={loc => setFileLocation(loc)}\n                    />\n                  </div>\n                  <div>\n                    <FileSelector\n                      name=\"genome 1 .bed (left column of anchors file)\"\n                      description=\"\"\n                      location={bed1Location}\n                      setLocation={loc => setBed1Location(loc)}\n                    />\n                  </div>\n                  <div>\n                    <FileSelector\n                      name=\"genome 2 .bed (right column of anchors file)\"\n                      description=\"\"\n                      location={bed2Location}\n                      setLocation={loc => setBed2Location(loc)}\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <FileSelector\n                name={value ? value + ' location' : ''}\n                description=\"\"\n                location={fileLocation}\n                setLocation={loc => setFileLocation(loc)}\n              />\n            )}\n          </Grid>\n        </Grid>\n      </Paper>\n    )\n  },\n)\n\nexport default OpenTrack\n","import React, { useState, useEffect } from 'react'\nimport { Select, MenuItem, Paper, Typography } from '@mui/material'\nimport { getSession } from '@jbrowse/core/util'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport { ErrorMessage } from '@jbrowse/core/ui'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\n\nimport { observer } from 'mobx-react'\nimport { LinearSyntenyViewModel } from '../model'\n\nfunction f(track: AnyConfigurationModel, assembly1: string, assembly2: string) {\n  const assemblyNames = readConfObject(track, 'assemblyNames')\n  return (\n    assemblyNames.includes(assembly1) &&\n    assemblyNames.includes(assembly2) &&\n    track.type.includes('Synteny')\n  )\n}\n\nconst Selector = observer(\n  ({\n    model,\n    assembly1,\n    assembly2,\n    setShowTrackId,\n  }: {\n    model: LinearSyntenyViewModel\n    assembly1: string\n    assembly2: string\n    setShowTrackId: (arg: string) => void\n  }) => {\n    const session = getSession(model)\n    const { tracks = [], sessionTracks = [] } = session\n    const allTracks = [...tracks, ...sessionTracks] as AnyConfigurationModel[]\n    const filteredTracks = allTracks.filter(t => f(t, assembly2, assembly1))\n    const resetTrack = filteredTracks[0]?.trackId || ''\n    const [value, setValue] = useState(resetTrack)\n    useEffect(() => {\n      // if assembly1/assembly2 changes, then we will want to use this effect to\n      // change the state of the useState because it otherwise gets locked to a\n      // stale value\n      setValue(resetTrack)\n    }, [resetTrack])\n\n    useEffect(() => {\n      // sets track data in a useEffect because the initial load is needed as well\n      // as onChange's to the select box\n      setShowTrackId(value)\n    }, [value, setShowTrackId])\n    return (\n      <Paper style={{ padding: 12 }}>\n        <Typography paragraph>\n          Select a track from the select box below, the track will be shown when\n          you hit \"Launch\".\n        </Typography>\n\n        {filteredTracks.length ? (\n          <Select\n            value={value}\n            onChange={event => setValue(event.target.value)}\n          >\n            {filteredTracks.map(track => (\n              <MenuItem key={track.trackId} value={track.trackId}>\n                {getTrackName(track, session)}\n              </MenuItem>\n            ))}\n          </Select>\n        ) : (\n          <ErrorMessage\n            error={`No synteny tracks found for ${assembly1},${assembly2}`}\n          />\n        )}\n      </Paper>\n    )\n  },\n)\n\nexport default Selector\n","import React, { useState, useEffect } from 'react'\nimport {\n  Button,\n  Container,\n  FormControl,\n  FormLabel,\n  FormControlLabel,\n  Grid,\n  Paper,\n  Radio,\n  RadioGroup,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { getSession, isSessionWithAddTracks } from '@jbrowse/core/util'\nimport { ErrorMessage, AssemblySelector } from '@jbrowse/core/ui'\n\n// locals\nimport { LinearSyntenyViewModel } from '../model'\nimport ImportCustomTrack from './ImportCustomTrack'\nimport ImportSyntenyTrackSelector from './ImportSyntenyTrackSelector'\n\nconst useStyles = makeStyles()(theme => ({\n  importFormContainer: {\n    padding: theme.spacing(4),\n    margin: '0 auto',\n  },\n  assemblySelector: {\n    width: '75%',\n    margin: '0 auto',\n  },\n}))\n\nconst LinearSyntenyImportForm = observer(\n  ({ model }: { model: LinearSyntenyViewModel }) => {\n    const { classes } = useStyles()\n    const session = getSession(model)\n    const { assemblyNames } = session\n    const [assembly2, setAssembly2] = useState(\n      assemblyNames.length ? assemblyNames[0] : '',\n    )\n    const [assembly1, setAssembly1] = useState(\n      assemblyNames.length ? assemblyNames[0] : '',\n    )\n    const [error, setError] = useState<unknown>()\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const [sessionTrackData, setSessionTrackData] = useState<any>()\n    const [showTrackId, setShowTrackId] = useState<string>()\n    const [choice, setChoice] = useState('none')\n\n    useEffect(() => {\n      if (choice === 'none') {\n        setSessionTrackData(undefined)\n        setShowTrackId(undefined)\n      }\n    }, [choice])\n\n    async function onOpenClick() {\n      try {\n        if (!isSessionWithAddTracks(session)) {\n          return\n        }\n        setError(undefined)\n\n        const { assemblyManager } = session\n        const assemblies = [assembly1, assembly2]\n        model.setViews(\n          await Promise.all(\n            assemblies.map(async sel => {\n              const asm = await assemblyManager.waitForAssembly(sel)\n              if (!asm) {\n                throw new Error(`Assembly ${sel} failed to load`)\n              }\n              return {\n                type: 'LinearGenomeView' as const,\n                bpPerPx: 1,\n                offsetPx: 0,\n                hideHeader: true,\n                displayedRegions: asm.regions,\n              }\n            }),\n          ),\n        )\n        model.views.forEach(view => view.setWidth(model.width))\n        if (sessionTrackData) {\n          session.addTrackConf(sessionTrackData)\n          model.toggleTrack(sessionTrackData.trackId)\n        } else if (showTrackId) {\n          model.showTrack(showTrackId)\n        }\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    }\n\n    // this is a combination of any displayed error message we have\n    const displayError = error\n    return (\n      <Container className={classes.importFormContainer}>\n        {displayError ? <ErrorMessage error={displayError} /> : null}\n        <Grid\n          container\n          spacing={1}\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          className={classes.assemblySelector}\n        >\n          <Grid item>\n            <Paper style={{ padding: 12 }}>\n              <p style={{ textAlign: 'center' }}>\n                Select assemblies for linear synteny view\n              </p>\n              <Grid\n                container\n                spacing={1}\n                justifyContent=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <AssemblySelector\n                    extra={0}\n                    selected={assembly1}\n                    onChange={val => setAssembly1(val)}\n                    session={session}\n                  />\n                </Grid>\n                <Grid item>\n                  <AssemblySelector\n                    extra={1}\n                    selected={assembly2}\n                    onChange={val => setAssembly2(val)}\n                    session={session}\n                  />\n                </Grid>\n                <Grid item>\n                  <FormControl>\n                    <Button\n                      onClick={onOpenClick}\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      Launch\n                    </Button>\n                  </FormControl>\n                </Grid>\n              </Grid>\n            </Paper>\n            <FormControl>\n              <FormLabel id=\"group-label\">\n                (Optional) Select or add a synteny track\n              </FormLabel>\n              <RadioGroup\n                row\n                value={choice}\n                onChange={event => setChoice(event.target.value)}\n                aria-labelledby=\"group-label\"\n              >\n                <FormControlLabel\n                  value=\"none\"\n                  control={<Radio />}\n                  label=\"None\"\n                />\n                <FormControlLabel\n                  value=\"tracklist\"\n                  control={<Radio />}\n                  label=\"Existing track\"\n                />\n                <FormControlLabel\n                  value=\"custom\"\n                  control={<Radio />}\n                  label=\"New track\"\n                />\n              </RadioGroup>\n            </FormControl>\n            {choice === 'custom' ? (\n              <ImportCustomTrack\n                setSessionTrackData={setSessionTrackData}\n                sessionTrackData={sessionTrackData}\n                assembly2={assembly2}\n                assembly1={assembly1}\n              />\n            ) : null}\n            {choice === 'tracklist' ? (\n              <ImportSyntenyTrackSelector\n                model={model}\n                assembly1={assembly1}\n                assembly2={assembly2}\n                setShowTrackId={setShowTrackId}\n              />\n            ) : null}\n          </Grid>\n        </Grid>\n      </Container>\n    )\n  },\n)\n\nexport default LinearSyntenyImportForm\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { IconButton } from '@mui/material'\nimport LinearComparativeViewComponent from '../../LinearComparativeView/components/LinearComparativeView'\nimport { LinearSyntenyViewModel } from '../model'\nimport { Curves, StraightLines } from './Icons'\nimport ImportForm from './ImportForm'\n\ntype LSV = LinearSyntenyViewModel\n\nconst ExtraButtons = observer(({ model }: { model: LSV }) => {\n  return (\n    <IconButton\n      onClick={() => {\n        model.toggleCurves()\n      }}\n      title=\"Toggle drawing straight or curved synteny lines\"\n    >\n      {model.drawCurves ? (\n        <StraightLines color=\"primary\" />\n      ) : (\n        <Curves color=\"primary\" />\n      )}\n    </IconButton>\n  )\n})\n\nconst LinearSyntenyView = observer(({ model }: { model: LSV }) => {\n  const { initialized } = model\n  if (!initialized) {\n    return <ImportForm model={model} />\n  }\n  return (\n    <LinearComparativeViewComponent\n      model={model}\n      ExtraButtons={<ExtraButtons model={model} />}\n    />\n  )\n})\n\nexport default LinearSyntenyView\n"],"names":["useStyles","makeStyles","theme","palette","tertiary","primary","rubberBand","height","background","alpha","main","position","zIndex","textAlign","overflow","rubberBandControl","cursor","width","minHeight","rubberBandText","color","contrastText","popover","mouseEvents","paper","paddingLeft","spacing","paddingRight","guide","pointerEvents","sm","fontSize","VerticalGuide","observer","model","coordX","classes","Tooltip","open","placement","title","views","map","view","pxToBp","elt","Typography","className","stringify","JSON","arrow","style","left","ControlComponent","useState","startX","setStartX","currentX","setCurrentX","anchorPosition","setAnchorPosition","guideX","setGuideX","controlsRef","useRef","rubberBandRef","mouseDragging","undefined","mouseDown","event","preventDefault","stopPropagation","relativeX","clientX","target","getBoundingClientRect","mouseMove","mouseOut","forEach","setOffsets","handleClose","useEffect","globalMouseMove","current","globalMouseUp","clientY","offsetX","args","leftPx","rightPx","leftOffset","rightOffset","computeOffsets","window","addEventListener","removeEventListener","Math","abs","Boolean","role","ref","onMouseDown","onMouseOut","onMouseMove","right","leftBpOffset","rightBpOffset","numOfBpSelected","ceil","bpPerPx","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","keepMounted","disableRestoreFocus","l","variant","n","i","toLocaleString","Menu","anchorReference","top","onMenuItemClick","_","callback","onClose","menuItems","rubberBandMenuItems","headerBar","gridArea","display","spacer","flexGrow","bp","alignItems","marginLeft","searchContainer","searchBox","TrackSelector","IconButton","onClick","activateTrackSelector","LinkViews","toggleLinkViews","linkViews","LinkOff","Link","SquareView","squareView","CropFree","ExtraButtons","anyShowHeaders","some","hideHeader","showHelp","round","coarseTotalBp","id","container","overlay","content","grid","relative","rubberbandContainer","Overlays","tracks","track","displays","RenderingComponent","trackId","getConf","middleComparativeHeight","MiddleComparativeView","ReactComponent","getEnv","pluginManager","getViewType","type","rubberbandMouseOver","setRubberbandMouseOver","onMouseOver","onMouseLeave","ResizeHandle","onDrag","setMiddleComparativeHeight","OverlayComparativeView","props","d","getAdapter","radioOption","assembly1","assembly2","fileLocation","bed1Location","bed2Location","pafLocation","queryAssembly","targetAssembly","outLocation","deltaLocation","chainLocation","mcscanAnchorsLocation","assemblyNames","mcscanSimpleAnchorsLocation","Error","sessionTrackData","setSessionTrackData","setBed2Location","setBed1Location","setFileLocation","value","setValue","error","setError","fileName","uri","localPath","name","getName","path","endsWith","slice","length","stripGz","fn","Date","now","adapter","e","console","Paper","padding","ErrorMessage","RadioGroup","onChange","Grid","justifyContent","item","FormControlLabel","control","Radio","label","margin","href","FileSelector","description","location","setLocation","loc","setShowTrackId","session","getSession","sessionTracks","filteredTracks","filter","t","readConfObject","includes","f","resetTrack","paragraph","Select","MenuItem","getTrackName","importFormContainer","assemblySelector","LinearSyntenyImportForm","setAssembly2","setAssembly1","showTrackId","choice","setChoice","isSessionWithAddTracks","assemblyManager","assemblies","Promise","all","sel","waitForAssembly","asm","offsetPx","displayedRegions","regions","setViews","setWidth","addTrackConf","toggleTrack","showTrack","displayError","Container","AssemblySelector","extra","selected","val","FormControl","Button","FormLabel","row","ImportCustomTrack","ImportSyntenyTrackSelector","toggleCurves","drawCurves","initialized","LinearComparativeView","ImportForm"],"sourceRoot":""}