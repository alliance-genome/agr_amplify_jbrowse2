{"version":3,"file":"static/js/433.b1c99304.chunk.js","mappings":"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","sources":["../../../plugins/variants/src/VariantFeatureWidget/VariantSampleGrid.tsx","../../../plugins/variants/src/VariantFeatureWidget/BreakendOptionDialog.tsx","../../../plugins/variants/src/VariantFeatureWidget/BreakendPanel.tsx","../../../plugins/variants/src/VariantFeatureWidget/AnnotGrid.tsx","../../../plugins/variants/src/VariantFeatureWidget/VariantAnnotationTable.tsx","../../../plugins/variants/src/VariantFeatureWidget/VariantFeatureWidget.tsx","../../../node_modules/@mui/base/ClickAwayListener/ClickAwayListener.js","../../../node_modules/@mui/material/Toolbar/Toolbar.js","../../../node_modules/@mui/material/Toolbar/toolbarClasses.js"],"sourcesContent":["import React, { useState } from 'react'\n\nimport {\n  FormControlLabel,\n  Checkbox,\n  TextField,\n  Typography,\n} from '@mui/material'\n\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid'\nimport { BaseCard } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\nimport { measureGridWidth, SimpleFeatureSerialized } from '@jbrowse/core/util'\nimport ResizeBar, { useResizeBar } from '@jbrowse/core/ui/ResizeBar'\n\ninterface Entry {\n  sample: string\n  id: string\n  [key: string]: string\n}\n\ntype InfoFields = Record<string, unknown>\ntype Filters = Record<string, string>\n\nfunction SampleFilters({\n  columns,\n  filter,\n  setFilter,\n}: {\n  columns: { field: string }[]\n  filter: Filters\n  setFilter: (arg: Filters) => void\n}) {\n  return (\n    <>\n      <Typography>\n        These filters can use a plain text search or regex style query, e.g. in\n        the genotype field, entering 1 will query for all genotypes that include\n        the first alternate allele e.g. 0|1 or 1|1, entering [1-9]\\d* will find\n        any non-zero allele e.g. 0|2 or 2/33\n      </Typography>\n      {columns.map(({ field }) => (\n        <TextField\n          key={`filter-${field}`}\n          placeholder={`Filter ${field}`}\n          value={filter[field] || ''}\n          onChange={event =>\n            setFilter({ ...filter, [field]: event.target.value })\n          }\n        />\n      ))}\n    </>\n  )\n}\n\nexport default function VariantSamples(props: {\n  feature: SimpleFeatureSerialized\n  descriptions: { FORMAT?: { [key: string]: { Description?: string } } }\n}) {\n  const { feature, descriptions = {} } = props\n  const { ref, scrollLeft } = useResizeBar()\n  const [filter, setFilter] = useState<Filters>({})\n  const samples = (feature.samples || {}) as Record<string, InfoFields>\n  const preFilteredRows = Object.entries(samples)\n\n  let error\n  let rows = [] as Entry[]\n  const filters = Object.keys(filter)\n\n  // catch some error thrown from regex\n  // note: maps all values into a string, if this is not done rows are not\n  // sortable by the data-grid\n  try {\n    rows = preFilteredRows\n      .map(row => {\n        return {\n          ...Object.fromEntries(\n            Object.entries(row[1]).map(e => [e[0], `${e[1]}`]),\n          ),\n          sample: row[0],\n          id: row[0],\n        } as Entry\n      })\n      .filter(row =>\n        filters.length\n          ? filters.every(key => {\n              const currFilter = filter[key]\n              return currFilter\n                ? row[key].match(new RegExp(currFilter, 'i'))\n                : true\n            })\n          : true,\n      )\n  } catch (e) {\n    error = e\n  }\n\n  const keys = ['sample', ...Object.keys(preFilteredRows[0]?.[1] || {})]\n  const [checked, setChecked] = useState(false)\n  const [widths, setWidths] = useState(\n    keys.map(e => measureGridWidth(rows.map(r => r[e]))),\n  )\n  const columns = keys.map((field, index) => ({\n    field,\n    description: descriptions.FORMAT?.[field]?.Description,\n    width: widths[index],\n  }))\n\n  // disableRowSelectionOnClick helps avoid\n  // https://github.com/mui-org/material-ui-x/issues/1197\n  return !preFilteredRows.length ? null : (\n    <BaseCard {...props} title=\"Samples\">\n      {error ? <Typography color=\"error\">{`${error}`}</Typography> : null}\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={checked}\n            onChange={event => setChecked(event.target.checked)}\n          />\n        }\n        label={<Typography variant=\"body2\">Show options</Typography>}\n      />\n      {checked ? (\n        <SampleFilters\n          setFilter={setFilter}\n          columns={columns}\n          filter={filter}\n        />\n      ) : null}\n      <div ref={ref}>\n        <ResizeBar\n          widths={widths}\n          setWidths={setWidths}\n          scrollLeft={scrollLeft}\n        />\n        <DataGrid\n          rows={rows}\n          hideFooter={rows.length < 100}\n          columns={columns}\n          disableRowSelectionOnClick\n          rowHeight={25}\n          columnHeaderHeight={35}\n          disableColumnMenu\n          slots={{ toolbar: checked ? GridToolbar : null }}\n          slotProps={{\n            toolbar: { printOptions: { disableToolbarButton: true } },\n          }}\n        />\n      </div>\n    </BaseCard>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContent,\n  FormControlLabel,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { getSnapshot } from 'mobx-state-tree'\n// jbrowse\nimport { Dialog } from '@jbrowse/core/ui'\nimport { getSession, Feature } from '@jbrowse/core/util'\n\nconst useStyles = makeStyles()({\n  block: {\n    display: 'block',\n  },\n})\n\nexport default observer(function BreakendOptionDialog({\n  model,\n  handleClose,\n  feature,\n  viewType,\n}: {\n  model: any\n  handleClose: () => void\n  feature: Feature\n  viewType: any\n}) {\n  const { classes } = useStyles()\n  const [copyTracks, setCopyTracks] = useState(true)\n  const [mirrorTracks, setMirrorTracks] = useState(true)\n\n  return (\n    <Dialog open onClose={handleClose} title=\"Breakpoint split view options\">\n      <DialogContent>\n        <FormControlLabel\n          className={classes.block}\n          control={\n            <Checkbox\n              checked={copyTracks}\n              onChange={event => setCopyTracks(event.target.checked)}\n            />\n          }\n          label=\"Copy tracks into the new view\"\n        />\n\n        <FormControlLabel\n          className={classes.block}\n          control={\n            <Checkbox\n              checked={mirrorTracks}\n              onChange={event => setMirrorTracks(event.target.checked)}\n            />\n          }\n          label=\"Mirror tracks vertically in vertically stacked view\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            const { view } = model\n            const session = getSession(model)\n            try {\n              const viewSnapshot = viewType.snapshotFromBreakendFeature(\n                feature,\n                view,\n              )\n\n              interface Track {\n                trackId: string\n                [key: string]: unknown\n              }\n              function remapIds(arr: Track[]) {\n                return arr.map(v => ({\n                  ...v,\n                  id: `${v.trackId}-${Math.random()}`,\n                }))\n              }\n              viewSnapshot.views[0].offsetPx -= view.width / 2 + 100\n              viewSnapshot.views[1].offsetPx -= view.width / 2 + 100\n              viewSnapshot.featureData = feature\n              // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n              const viewTracks = getSnapshot(view.tracks) as Track[]\n              viewSnapshot.views[0].tracks = remapIds(viewTracks)\n              viewSnapshot.views[1].tracks = remapIds(\n                mirrorTracks ? [...viewTracks].reverse() : viewTracks,\n              )\n\n              session.addView('BreakpointSplitView', viewSnapshot)\n            } catch (e) {\n              console.error(e)\n              session.notify(`${e}`)\n            }\n            handleClose()\n          }}\n          variant=\"contained\"\n          color=\"primary\"\n          autoFocus\n        >\n          OK\n        </Button>\n        <Button\n          onClick={() => handleClose()}\n          color=\"secondary\"\n          variant=\"contained\"\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState } from 'react'\nimport { Link, Typography } from '@mui/material'\nimport SimpleFeature, {\n  SimpleFeatureSerialized,\n} from '@jbrowse/core/util/simpleFeature'\nimport { getEnv, getSession } from '@jbrowse/core/util'\nimport { BaseCard } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\nimport BreakendOptionDialog from './BreakendOptionDialog'\n\nexport default function BreakendPanel(props: {\n  locStrings: string[]\n  model: any\n  feature: SimpleFeatureSerialized\n}) {\n  const { model, locStrings, feature } = props\n  const session = getSession(model)\n  const { pluginManager } = getEnv(session)\n  const [breakpointDialog, setBreakpointDialog] = useState(false)\n  let viewType\n\n  try {\n    viewType = pluginManager.getViewType('BreakpointSplitView')\n  } catch (e) {\n    // ignore\n  }\n\n  const simpleFeature = new SimpleFeature(feature)\n  return (\n    <BaseCard {...props} title=\"Breakends\">\n      <Typography>Link to linear view of breakend endpoints</Typography>\n      <ul>\n        {locStrings.map(locString => (\n          <li key={`${JSON.stringify(locString)}`}>\n            <Link\n              href=\"#\"\n              onClick={event => {\n                event.preventDefault()\n                const { view } = model\n                try {\n                  if (view) {\n                    view.navToLocString?.(locString)\n                  } else {\n                    throw new Error(\n                      'No view associated with this feature detail panel anymore',\n                    )\n                  }\n                } catch (e) {\n                  console.error(e)\n                  session.notify(`${e}`)\n                }\n              }}\n            >\n              {`LGV - ${locString}`}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      {viewType ? (\n        <div>\n          <Typography>\n            Launch split views with breakend source and target\n          </Typography>\n          <ul>\n            {locStrings.map(locString => (\n              <li key={`${JSON.stringify(locString)}`}>\n                <Link\n                  href=\"#\"\n                  onClick={event => {\n                    event.preventDefault()\n                    setBreakpointDialog(true)\n                  }}\n                >\n                  {`${feature.refName}:${feature.start} // ${locString} (split view)`}\n                </Link>\n              </li>\n            ))}\n          </ul>\n          {breakpointDialog ? (\n            <BreakendOptionDialog\n              model={model}\n              feature={simpleFeature}\n              viewType={viewType}\n              handleClose={() => {\n                setBreakpointDialog(false)\n              }}\n            />\n          ) : null}\n        </div>\n      ) : null}\n    </BaseCard>\n  )\n}\n","import React, { useState } from 'react'\nimport {\n  DataGrid,\n  GridColDef,\n  GridToolbar,\n  GridValidRowModel,\n} from '@mui/x-data-grid'\nimport { Checkbox, FormControlLabel, Typography } from '@mui/material'\nimport ResizeBar, { useResizeBar } from '@jbrowse/core/ui/ResizeBar'\nimport { measureGridWidth } from '@jbrowse/core/util'\n\nexport default function VariantAnnotPanel({\n  rows,\n  columns,\n}: {\n  rows: GridValidRowModel[]\n  columns: GridColDef[]\n}) {\n  const { ref, scrollLeft } = useResizeBar()\n  const [checked, setChecked] = useState(false)\n  const [widths, setWidths] = useState(\n    columns.map(e => measureGridWidth(rows.map(r => r[e.field]))),\n  )\n\n  return rows.length ? (\n    <div ref={ref}>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={checked}\n            onChange={event => setChecked(event.target.checked)}\n          />\n        }\n        label={<Typography variant=\"body2\">Show options</Typography>}\n      />\n      <div ref={ref}>\n        <ResizeBar\n          widths={widths}\n          setWidths={setWidths}\n          scrollLeft={scrollLeft}\n        />\n        <DataGrid\n          rowHeight={25}\n          rows={rows}\n          columns={columns.map((c, i) => ({ ...c, width: widths[i] }))}\n          slots={{ toolbar: checked ? GridToolbar : null }}\n        />\n      </div>\n    </div>\n  ) : null\n}\n","import React from 'react'\nimport { BaseCard } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\nimport AnnotGrid from './AnnotGrid'\n\nexport default function VariantAnnotationTable({\n  data,\n  fields,\n  title,\n}: {\n  data: string[]\n  fields: string[]\n  title: string\n}) {\n  return data.length ? (\n    <BaseCard title={title}>\n      <AnnotGrid\n        rows={\n          data.map((elt, id) => ({\n            id,\n            ...Object.fromEntries(elt.split('|').map((e, i) => [fields[i], e])),\n          })) || []\n        }\n        columns={fields.map(c => ({ field: c }))}\n      />\n    </BaseCard>\n  ) : null\n}\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { Divider, Paper } from '@mui/material'\nimport { FeatureDetails } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\nimport { parseBreakend } from '@gmod/vcf'\n\n// locals\nimport VariantSampleGrid from './VariantSampleGrid'\nimport BreakendPanel from './BreakendPanel'\nimport VariantAnnotationTable from './VariantAnnotationTable'\nimport { SimpleFeatureSerialized } from '@jbrowse/core/util'\n\nconst basicDescriptions = {\n  CHROM: 'chromosome: An identifier from the reference genome',\n  POS: 'position: The reference position, with the 1st base having position 1',\n  ID: 'identifier: Semi-colon separated list of unique identifiers where available',\n  REF: 'reference base(s): Each base must be one of A,C,G,T,N (case insensitive).',\n  ALT: 'alternate base(s): Comma-separated list of alternate non-reference alleles',\n  QUAL: 'quality: Phred-scaled quality score for the assertion made in ALT',\n  FILTER:\n    'filter status: PASS if this position has passed all filters, otherwise a semicolon-separated list of codes for filters that fail',\n}\n\nfunction VariantFeatureDetails(props: {\n  model: {\n    featureData: SimpleFeatureSerialized\n    descriptions: Record<string, string>\n  }\n}) {\n  const { model } = props\n  const { featureData, descriptions } = model\n  const feat = JSON.parse(JSON.stringify(featureData))\n  const { samples, ...rest } = feat\n\n  return (\n    <Paper data-testid=\"variant-side-drawer\">\n      <FeatureDetails\n        feature={rest}\n        descriptions={{ ...basicDescriptions, ...descriptions }}\n        {...props}\n      />\n      <Divider />\n      <CsqPanel feature={rest} descriptions={descriptions} />\n      <Divider />\n      <AnnPanel feature={rest} descriptions={descriptions} />\n      <Divider />\n      {feat.type === 'breakend' ? (\n        <BreakendPanel\n          feature={feat}\n          locStrings={feat.ALT.map(\n            (alt: string) => parseBreakend(alt)?.MatePosition || '',\n          )}\n          model={model}\n        />\n      ) : null}\n      {feat.type === 'translocation' ? (\n        <BreakendPanel\n          feature={feat}\n          model={model}\n          locStrings={[`${feat.INFO.CHR2[0]}:${feat.INFO.END}`]}\n        />\n      ) : null}\n      <VariantSampleGrid\n        feature={feat}\n        {...props}\n        descriptions={descriptions}\n      />\n    </Paper>\n  )\n}\n\nfunction AnnPanel({\n  descriptions,\n  feature,\n}: {\n  descriptions: { INFO?: { ANN?: { Description?: string } } }\n  feature: { INFO?: { ANN?: string[] } }\n}) {\n  const annDesc = descriptions?.INFO?.ANN?.Description\n  const annFields =\n    annDesc?.match(/.*Functional annotations:'(.*)'$/)?.[1].split('|') || []\n  const ann = feature.INFO?.ANN || []\n  return (\n    <VariantAnnotationTable\n      fields={annFields}\n      data={ann}\n      title=\"Variant ANN field\"\n    />\n  )\n}\n\nfunction CsqPanel({\n  descriptions,\n  feature,\n}: {\n  descriptions: { INFO?: { CSQ?: { Description?: string } } }\n  feature: { INFO?: { CSQ?: string[] } }\n}) {\n  const csqDescription = descriptions?.INFO?.CSQ?.Description\n  const csqFields =\n    csqDescription?.match(/.*Format: (.*)/)?.[1].split('|') || []\n  const csq = feature.INFO?.CSQ || []\n  return (\n    <VariantAnnotationTable\n      fields={csqFields}\n      data={csq}\n      title=\"Variant CSQ field\"\n    />\n  )\n}\n\nexport default observer(VariantFeatureDetails)\n","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, exactProp, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\n\n// TODO: return `EventHandlerName extends `on${infer EventName}` ? Lowercase<EventName> : never` once generatePropTypes runs with TS 4.1\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\nfunction clickedRootScrollbar(event, doc) {\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n *\n * Demos:\n *\n * - [Click-Away Listener](https://mui.com/base-ui/react-click-away-listener/)\n *\n * API:\n *\n * - [ClickAwayListener API](https://mui.com/base-ui/react-click-away-listener/components-api/#click-away-listener)\n */\nfunction ClickAwayListener(props) {\n  const {\n    children,\n    disableReactTree = false,\n    mouseEvent = 'onClick',\n    onClickAway,\n    touchEvent = 'onTouchEnd'\n  } = props;\n  const movedRef = React.useRef(false);\n  const nodeRef = React.useRef(null);\n  const activatedRef = React.useRef(false);\n  const syntheticEventRef = React.useRef(false);\n  React.useEffect(() => {\n    // Ensure that this component is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n    setTimeout(() => {\n      activatedRef.current = true;\n    }, 0);\n    return () => {\n      activatedRef.current = false;\n    };\n  }, []);\n  const handleRef = useForkRef(\n  // @ts-expect-error TODO upstream fix\n  children.ref, nodeRef);\n\n  // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviors like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n  const handleClickAway = useEventCallback(event => {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false;\n    const doc = ownerDocument(nodeRef.current);\n\n    // 1. IE11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n    if (!activatedRef.current || !nodeRef.current || 'clientX' in event && clickedRootScrollbar(event, doc)) {\n      return;\n    }\n\n    // Do not act if user performed touchmove\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n    let insideDOM;\n\n    // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      insideDOM = !doc.documentElement.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target) || nodeRef.current.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target);\n    }\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\n      onClickAway(event);\n    }\n  });\n\n  // Keep track of mouse/touch events that bubbled up through the portal.\n  const createHandleSynthetic = handlerName => event => {\n    syntheticEventRef.current = true;\n    const childrenPropsHandler = children.props[handlerName];\n    if (childrenPropsHandler) {\n      childrenPropsHandler(event);\n    }\n  };\n  const childrenProps = {\n    ref: handleRef\n  };\n  if (touchEvent !== false) {\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n  }\n  React.useEffect(() => {\n    if (touchEvent !== false) {\n      const mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      const doc = ownerDocument(nodeRef.current);\n      const handleTouchMove = () => {\n        movedRef.current = true;\n      };\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return () => {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, touchEvent]);\n  if (mouseEvent !== false) {\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n  }\n  React.useEffect(() => {\n    if (mouseEvent !== false) {\n      const mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      const doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return () => {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: /*#__PURE__*/React.cloneElement(children, childrenProps)\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * If `true`, the React tree is ignored and only the DOM tree is considered.\n   * This prop changes how portaled elements are handled.\n   * @default false\n   */\n  disableReactTree: PropTypes.bool,\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   * @default 'onClick'\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', 'onPointerDown', 'onPointerUp', false]),\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   * @default 'onTouchEnd'\n   */\n  touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\nexport { ClickAwayListener };","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getToolbarUtilityClass } from './toolbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableGutters,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableGutters && 'gutters', variant]\n  };\n  return composeClasses(slots, getToolbarUtilityClass, classes);\n};\nconst ToolbarRoot = styled('div', {\n  name: 'MuiToolbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableGutters && styles.gutters, styles[ownerState.variant]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center'\n}, !ownerState.disableGutters && {\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  [theme.breakpoints.up('sm')]: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3)\n  }\n}, ownerState.variant === 'dense' && {\n  minHeight: 48\n}), ({\n  theme,\n  ownerState\n}) => ownerState.variant === 'regular' && theme.mixins.toolbar);\nconst Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToolbar'\n  });\n  const {\n      className,\n      component = 'div',\n      disableGutters = false,\n      variant = 'regular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    disableGutters,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ToolbarRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   * The Toolbar is a flex container, allowing flex item properties to be used to lay out the children.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, disables gutter padding.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'regular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dense', 'regular']), PropTypes.string])\n} : void 0;\nexport default Toolbar;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getToolbarUtilityClass(slot) {\n  return generateUtilityClass('MuiToolbar', slot);\n}\nconst toolbarClasses = generateUtilityClasses('MuiToolbar', ['root', 'gutters', 'regular', 'dense']);\nexport default toolbarClasses;"],"names":["SampleFilters","_ref","columns","filter","setFilter","_jsxs","_Fragment","children","_jsx","Typography","map","_ref2","field","TextField","placeholder","concat","value","onChange","event","_objectSpread","_defineProperty","target","VariantSamples","props","_preFilteredRows$","error","feature","_props$descriptions","descriptions","_useResizeBar","useResizeBar","ref","scrollLeft","_useState","useState","_useState2","_slicedToArray","samples","preFilteredRows","Object","entries","rows","filters","keys","row","fromEntries","e","sample","id","length","every","key","currFilter","match","RegExp","_toConsumableArray","_useState3","_useState4","checked","setChecked","_useState5","measureGridWidth","r","_useState6","widths","setWidths","index","_descriptions$FORMAT","_descriptions$FORMAT$","description","FORMAT","Description","width","BaseCard","title","color","FormControlLabel","control","Checkbox","label","variant","ResizeBar","DataGrid","hideFooter","disableRowSelectionOnClick","rowHeight","columnHeaderHeight","disableColumnMenu","slots","toolbar","GridToolbar","slotProps","printOptions","disableToolbarButton","useStyles","makeStyles","block","display","observer","model","handleClose","viewType","classes","copyTracks","setCopyTracks","mirrorTracks","setMirrorTracks","Dialog","open","onClose","DialogContent","className","DialogActions","Button","onClick","view","session","getSession","remapIds","arr","v","trackId","Math","random","viewSnapshot","snapshotFromBreakendFeature","views","offsetPx","featureData","viewTracks","getSnapshot","tracks","reverse","addView","console","notify","autoFocus","BreakendPanel","locStrings","pluginManager","getEnv","breakpointDialog","setBreakpointDialog","getViewType","simpleFeature","SimpleFeature","locString","Link","href","preventDefault","Error","_view$navToLocString","navToLocString","call","JSON","stringify","refName","start","BreakendOptionDialog","VariantAnnotPanel","c","i","VariantAnnotationTable","data","fields","AnnotGrid","elt","split","basicDescriptions","CHROM","POS","ID","REF","ALT","QUAL","FILTER","AnnPanel","_descriptions$INFO","_descriptions$INFO$AN","_annDesc$match","_feature$INFO","annDesc","INFO","ANN","annFields","ann","CsqPanel","_descriptions$INFO2","_descriptions$INFO2$C","_csqDescription$match","_feature$INFO2","csqDescription","CSQ","csqFields","csq","feat","parse","rest","_objectWithoutProperties","_excluded","Paper","FeatureDetails","Divider","type","alt","_parseBreakend","parseBreakend","MatePosition","CHR2","END","VariantSampleGrid","mapEventPropToEvent","eventProp","substring","toLowerCase","ClickAwayListener","_props$disableReactTr","disableReactTree","_props$mouseEvent","mouseEvent","onClickAway","_props$touchEvent","touchEvent","movedRef","React","nodeRef","activatedRef","syntheticEventRef","setTimeout","current","handleRef","useForkRef","handleClickAway","useEventCallback","insideReactTree","doc","ownerDocument","documentElement","clientWidth","clientX","clientHeight","clientY","clickedRootScrollbar","composedPath","indexOf","contains","createHandleSynthetic","handlerName","childrenPropsHandler","childrenProps","mappedTouchEvent","handleTouchMove","addEventListener","removeEventListener","mappedMouseEvent","ToolbarRoot","styled","name","slot","overridesResolver","styles","ownerState","root","disableGutters","gutters","theme","_extends","position","alignItems","paddingLeft","spacing","paddingRight","breakpoints","up","minHeight","_ref3","mixins","Toolbar","inProps","useThemeProps","_props$component","component","_props$disableGutters","_props$variant","other","_objectWithoutPropertiesLoose","composeClasses","getToolbarUtilityClass","useUtilityClasses","as","clsx","generateUtilityClass","toolbarClasses","generateUtilityClasses"],"sourceRoot":""}