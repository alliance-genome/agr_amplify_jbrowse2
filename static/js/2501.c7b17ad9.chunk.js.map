{"version":3,"file":"static/js/2501.c7b17ad9.chunk.js","mappings":"sPAYA,WAAeA,EAAAA,EAAAA,WAAS,SAA8BC,GAUlD,IAADC,EAAAD,EATDE,UAAAA,OAAS,IAAAD,EAAG,CAAC,EAACA,EACdE,EAAOH,EAAPG,QASQC,EAAsDF,EAAtDE,KAAMC,EAAgDH,EAAhDG,qBAAsBC,EAA0BJ,EAA1BI,sBACpC,OACEC,EAAAA,EAAAA,MAACC,EAAAA,OAAM,CAACC,MAAI,EAACC,SAAS,KAAKC,MAAK,qBAAAC,OAAuBR,EAAI,KAAIS,SAAA,EAC7DN,EAAAA,EAAAA,MAACO,EAAAA,EAAa,CAAAD,SAAA,CACXR,GACCE,EAAAA,EAAAA,MAAAQ,EAAAA,SAAA,CAAAF,SAAA,EACEG,EAAAA,EAAAA,KAACC,EAAAA,EAAiB,CAAAJ,SAAC,yCAGnBG,EAAAA,EAAAA,KAACE,EAAAA,EAAI,CAAAL,SACFM,OAAOC,QAAQf,GAAsBgB,KAAI,SAAAC,GAAA,IAAAC,GAAAC,EAAAA,EAAAA,GAAAF,EAAA,GAAEG,EAAGF,EAAA,GAAEG,EAAKH,EAAA,UACpDP,EAAAA,EAAAA,KAACW,EAAAA,GAAQ,CAAAd,SAAA,GAAAD,OAAec,EAAK,KAAAd,OAAIa,IAAlBA,EAAmC,SAItD,MACJT,EAAAA,EAAAA,KAACC,EAAAA,EAAiB,CAAAJ,SAAC,wDAIrBN,EAAAA,EAAAA,MAACqB,EAAAA,EAAa,CAAAf,SAAA,EACZG,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAACC,QAAS,kBAAM3B,GAAS,EAAE4B,MAAM,UAASlB,SAAC,YAGlDG,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CACLG,QAAQ,YACRF,QACE5B,EACI,WACuB,OAArBI,QAAqB,IAArBA,GAAAA,IACAH,GACF,EACA,WAAO,EAEb4B,MAAM,UAASlB,SAChB,YAMT,G","sources":["../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/dialogs/CloseConnectionDialog.tsx"],"sourcesContent":["import React from 'react'\nimport {\n  DialogContent,\n  DialogContentText,\n  Button,\n  List,\n  ListItem,\n  DialogActions,\n} from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\n\nexport default observer(function CloseConnectionDialog({\n  modalInfo = {},\n  onClose,\n}: {\n  modalInfo?: {\n    name?: string\n    dereferenceTypeCount?: { [key: string]: number }\n    safelyBreakConnection?: () => void\n  }\n  onClose: () => void\n}) {\n  const { name, dereferenceTypeCount, safelyBreakConnection } = modalInfo\n  return (\n    <Dialog open maxWidth=\"lg\" title={`Close connection \"${name}\"`}>\n      <DialogContent>\n        {dereferenceTypeCount ? (\n          <>\n            <DialogContentText>\n              Closing this connection will close:\n            </DialogContentText>\n            <List>\n              {Object.entries(dereferenceTypeCount).map(([key, value]) => (\n                <ListItem key={key}>{`${value} ${key}`}</ListItem>\n              ))}\n            </List>\n          </>\n        ) : null}\n        <DialogContentText>\n          Are you sure you want to close this connection?\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => onClose()} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={\n            modalInfo\n              ? () => {\n                  safelyBreakConnection?.()\n                  onClose()\n                }\n              : () => {}\n          }\n          color=\"primary\"\n        >\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n"],"names":["observer","_ref","_ref$modalInfo","modalInfo","onClose","name","dereferenceTypeCount","safelyBreakConnection","_jsxs","Dialog","open","maxWidth","title","concat","children","DialogContent","_Fragment","_jsx","DialogContentText","List","Object","entries","map","_ref2","_ref3","_slicedToArray","key","value","ListItem","DialogActions","Button","onClick","color","variant"],"sourceRoot":""}