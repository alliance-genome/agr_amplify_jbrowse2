{"version":3,"file":"static/js/4047.87d57b01.chunk.js","mappings":"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","sources":["../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/BasicValue.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/FieldName.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/SimpleField.tsx","../../../packages/core/BaseFeatureWidget/SequenceFeatureDetails/index.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/util.ts","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/DataGridDetails.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/ArrayValue.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/UriField.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/Attributes.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/index.tsx","../../../packages/core/BaseFeatureWidget/util.tsx","../../../packages/core/ui/ResizeBar.tsx","../../../packages/core/ui/useResizeBar.tsx"],"sourcesContent":["import React from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport isObject from 'is-object'\nimport { Link } from '@mui/material'\n\n// locals\nimport { SanitizedHTML } from '../../ui'\n\nconst useStyles = makeStyles()(theme => ({\n  fieldValue: {\n    wordBreak: 'break-word',\n    maxHeight: 300,\n    fontSize: 12,\n    padding: theme.spacing(0.5),\n    overflow: 'auto',\n  },\n}))\n\nexport default function BasicValue({ value }: { value: unknown }) {\n  const { classes } = useStyles()\n  const isLink = `${value}`.match(/^https?:\\/\\//)\n  return (\n    <div className={classes.fieldValue}>\n      {React.isValidElement(value) ? (\n        value\n      ) : isLink ? (\n        <Link href={`${value}`}>{`${value}`}</Link>\n      ) : (\n        <SanitizedHTML\n          html={isObject(value) ? JSON.stringify(value) : String(value)}\n        />\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Tooltip } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()(theme => ({\n  fieldDescription: {\n    '&:hover': {\n      background: theme.palette.mode === 'dark' ? '#e65100' : 'yellow',\n    },\n  },\n  fieldName: {\n    wordBreak: 'break-all',\n    minWidth: 90,\n    borderBottom: '1px solid #0003',\n    fontSize: 12,\n    background: theme.palette.action.disabledBackground,\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(0.5),\n  },\n}))\n\nexport default function FieldName({\n  description,\n  name,\n  width,\n  prefix = [],\n}: {\n  description?: React.ReactNode\n  name: string\n  prefix?: string[]\n  width?: number\n}) {\n  const { classes, cx } = useStyles()\n  const val = [...prefix, name].join('.')\n  return description ? (\n    <Tooltip title={description} placement=\"left\">\n      <div className={cx(classes.fieldDescription, classes.fieldName)}>\n        {val}\n      </div>\n    </Tooltip>\n  ) : (\n    <div className={classes.fieldName} style={{ width: width }}>\n      {val}\n    </div>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport FieldName from './FieldName'\nimport BasicValue from './BasicValue'\n\nconst useStyles = makeStyles()({\n  field: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n})\n\nexport default function SimpleField({\n  name,\n  value,\n  description,\n  prefix,\n  width,\n}: {\n  description?: React.ReactNode\n  name: string\n  value: unknown\n  prefix?: string[]\n  width?: number\n}) {\n  const { classes } = useStyles()\n  return value !== null && value !== undefined ? (\n    <div className={classes.field}>\n      <FieldName\n        prefix={prefix}\n        description={description}\n        name={name}\n        width={width}\n      />\n      <BasicValue value={value} />\n    </div>\n  ) : null\n}\n","import React, { lazy, useState, Suspense } from 'react'\nimport { Button, FormControl, IconButton } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport { BaseProps } from './../types'\nimport { LoadingEllipses } from '../../ui'\n\n// icons\nimport HelpIcon from '@mui/icons-material/Help'\n\n// lazies\nconst HelpDlg = lazy(() => import('./SequenceHelpDialog'))\nconst SequenceFeatureDetails = lazy(() => import('./SequenceFeatureDetails'))\n\nconst useStyles = makeStyles()(theme => ({\n  formControl: {\n    margin: 0,\n  },\n\n  container: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n  },\n}))\n\n// display the stitched-together sequence of a gene's CDS, cDNA, or protein\n// sequence. this is a best effort and weird genomic phenomena could lead these\n// to not be 100% accurate\nexport default function SequenceFeaturePanel({ model, feature }: BaseProps) {\n  const { classes } = useStyles()\n  const [shown, setShown] = useState(false)\n  const [helpShown, setHelpShown] = useState(false)\n\n  return !model ? null : (\n    <div className={classes.container}>\n      <Button variant=\"contained\" onClick={() => setShown(!shown)}>\n        {shown ? 'Hide feature sequence' : 'Show feature sequence'}\n      </Button>\n      <FormControl className={classes.formControl}>\n        <IconButton onClick={() => setHelpShown(true)}>\n          <HelpIcon />\n        </IconButton>\n      </FormControl>\n      {shown ? (\n        <Suspense fallback={<LoadingEllipses />}>\n          <SequenceFeatureDetails\n            /* eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion */\n            key={feature.uniqueId as string}\n            model={model}\n            feature={feature}\n          />\n        </Suspense>\n      ) : null}\n      {helpShown ? (\n        <Suspense fallback={<div />}>\n          <HelpDlg handleClose={() => setHelpShown(false)} />\n        </Suspense>\n      ) : null}\n    </div>\n  )\n}\n","import isObject from 'is-object'\nimport { max, measureText } from '../../util'\nimport { ellipses } from '../util'\n\nexport function isEmpty(obj: Record<string, unknown>) {\n  return Object.keys(obj).length === 0\n}\n\nexport function generateTitle(name: unknown, id: unknown, type: unknown) {\n  return [ellipses(`${name}` || `${id}`), `${type}`]\n    .filter(f => !!f)\n    .join(' - ')\n}\n\nexport function generateMaxWidth(array: unknown[][], prefix: string[]) {\n  return (\n    Math.ceil(\n      max(array.map(key => measureText([...prefix, key[0]].join('.'), 12))),\n    ) + 10\n  )\n}\n\nexport function toLocale(n: number) {\n  return n.toLocaleString('en-US')\n}\n\n// pick using a path from an object, similar to _.get from lodash with special\n// logic for Descriptions from e.g. VCF headers\n//\n// @param arr  example ['a','b'], obj = {a:{b:'hello}}\n// @returns hello (with special addition to grab description also)\nexport function accessNested(arr: string[], obj: Record<string, unknown> = {}) {\n  let obj2: unknown = obj\n  arr.forEach(elt => {\n    if (isObject(obj2)) {\n      obj2 = obj2[elt]\n    }\n  })\n  return typeof obj2 === 'string'\n    ? obj2\n    : isObject(obj2) && typeof obj2?.Description === 'string'\n    ? obj2.Description\n    : undefined\n}\n","import React, { useState } from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid'\nimport { Checkbox, FormControlLabel, Typography } from '@mui/material'\n\n// locals\nimport { measureGridWidth, getStr } from '../../util'\nimport ResizeBar from '../../ui/ResizeBar'\nimport FieldName from './FieldName'\nimport { useResizeBar } from '../../ui/useResizeBar'\nimport { SanitizedHTML } from '../../ui'\n\nconst useStyles = makeStyles()(theme => ({\n  margin: {\n    margin: theme.spacing(1),\n    width: '100%',\n  },\n\n  cell: {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n}))\n\ninterface Entry {\n  id: string\n  [key: string]: string\n}\n\nexport default function DataGridDetails({\n  value,\n  prefix,\n  name,\n}: {\n  name: string\n  prefix?: string[]\n  value: Record<string, unknown>[]\n}) {\n  const { classes } = useStyles()\n  const { ref, scrollLeft } = useResizeBar()\n  const [checked, setChecked] = useState(false)\n  const keys = Object.keys(value[0]).sort()\n  const unionKeys = new Set(keys)\n\n  // avoids key 'id' from being used in row data\n  const rows = Object.entries(value).map(([k, val]) => {\n    const { id, ...rest } = val\n    return {\n      id: k, // used by material UI\n      identifier: id, // renamed from id to identifier\n      ...rest,\n    } as Entry\n  })\n\n  for (const val of value) {\n    for (const k of Object.keys(val)) {\n      unionKeys.add(k)\n    }\n  }\n  // avoids key 'id' from being used in column names, and tries\n  // to make it at the start of the colNames array\n  let colNames: string[]\n  if (unionKeys.has('id')) {\n    unionKeys.delete('id')\n    colNames = ['identifier', ...unionKeys]\n  } else {\n    colNames = [...unionKeys]\n  }\n  const [widths, setWidths] = useState(\n    colNames.map(e => measureGridWidth(rows.map(r => r[e]))),\n  )\n\n  if (unionKeys.size < keys.length + 5) {\n    return (\n      <>\n        <FieldName prefix={prefix} name={name} />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={checked}\n              onChange={event => setChecked(event.target.checked)}\n            />\n          }\n          label={<Typography variant=\"body2\">Show options</Typography>}\n        />\n        <div className={classes.margin} ref={ref}>\n          <ResizeBar\n            widths={widths}\n            setWidths={setWidths}\n            scrollLeft={scrollLeft}\n          />\n          <DataGrid\n            disableRowSelectionOnClick\n            // @ts-expect-error the rows gets confused by the renderCell of the\n            // columns below\n            rows={rows}\n            rowCount={25}\n            rowHeight={25}\n            columnHeaderHeight={35}\n            hideFooter={rows.length < 25}\n            slots={{ toolbar: checked ? GridToolbar : null }}\n            slotProps={{\n              toolbar: {\n                printOptions: {\n                  disableToolbarButton: true,\n                },\n              },\n            }}\n            columns={colNames.map((val, index) => ({\n              field: val,\n              renderCell: params => {\n                const value = params.value as string\n                return (\n                  <div className={classes.cell}>\n                    <SanitizedHTML html={getStr(value)} />\n                  </div>\n                )\n              },\n              width: widths[index],\n            }))}\n          />\n        </div>\n      </>\n    )\n  }\n  return null\n}\n","import React from 'react'\nimport isObject from 'is-object'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport Attributes from './Attributes'\nimport FieldName from './FieldName'\nimport BasicValue from './BasicValue'\n\nconst useStyles = makeStyles()(theme => ({\n  field: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n\n  fieldSubvalue: {\n    wordBreak: 'break-word',\n    maxHeight: 300,\n    padding: theme.spacing(0.5),\n    border: `1px solid ${theme.palette.action.selected}`,\n    boxSizing: 'border-box',\n    overflow: 'auto',\n  },\n}))\n\nexport default function ArrayValue({\n  name,\n  value,\n  description,\n  prefix = [],\n}: {\n  description?: React.ReactNode\n  name: string\n  value: unknown[]\n  prefix?: string[]\n}) {\n  const { classes } = useStyles()\n  if (value.length === 1) {\n    return isObject(value[0]) ? (\n      <Attributes attributes={value[0]} prefix={[...prefix, name]} />\n    ) : (\n      <div className={classes.field}>\n        <FieldName prefix={prefix} description={description} name={name} />\n        <BasicValue value={value[0]} />\n      </div>\n    )\n  } else if (value.every(val => isObject(val))) {\n    return (\n      <>\n        {value.map((val, i) => (\n          <Attributes\n            key={JSON.stringify(val) + '-' + i}\n            attributes={val as Record<string, unknown>}\n            prefix={[...prefix, name + '-' + i]}\n          />\n        ))}\n      </>\n    )\n  } else {\n    return (\n      <div className={classes.field}>\n        <FieldName prefix={prefix} description={description} name={name} />\n        {value.map((val, i) => (\n          <div\n            key={JSON.stringify(val) + '-' + i}\n            className={classes.fieldSubvalue}\n          >\n            <BasicValue value={val} />\n          </div>\n        ))}\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport FieldName from './FieldName'\nimport { makeStyles } from 'tss-react/mui'\nimport BasicValue from './BasicValue'\n\nconst useStyles = makeStyles()({\n  field: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n})\n\nexport default function UriField({\n  value,\n  prefix,\n  name,\n}: {\n  value: { uri: string; baseUri?: string }\n  name: string\n  prefix: string[]\n}) {\n  const { classes } = useStyles()\n  const { uri, baseUri = '' } = value\n  let href\n  try {\n    href = new URL(uri, baseUri).href\n  } catch (e) {\n    href = uri\n  }\n  return (\n    <div className={classes.field}>\n      <FieldName prefix={prefix} name={name} />\n      <BasicValue value={href} />\n    </div>\n  )\n}\n","import React from 'react'\nimport isObject from 'is-object'\n\n// locals\nimport { accessNested, generateMaxWidth } from './util'\nimport { isUriLocation } from '../../util'\nimport DataGridDetails from './DataGridDetails'\nimport ArrayValue from './ArrayValue'\nimport UriAttribute from './UriField'\nimport SimpleField from './SimpleField'\n\nconst MAX_FIELD_NAME_WIDTH = 170\n\n// these are always omitted as too detailed\nconst globalOmit = [\n  '__jbrowsefmt',\n  'length',\n  'position',\n  'subfeatures',\n  'uniqueId',\n  'exonFrames',\n  'parentId',\n  'thickStart',\n  'thickEnd',\n]\n\nexport default function Attributes(props: {\n  attributes: {\n    [key: string]: unknown\n    __jbrowsefmt?: Record<string, unknown>\n  }\n  omit?: string[]\n  omitSingleLevel?: string[]\n  formatter?: (val: unknown, key: string) => React.ReactNode\n  descriptions?: Record<string, React.ReactNode>\n  prefix?: string[]\n  hideUris?: boolean\n}) {\n  const {\n    attributes,\n    omit = [],\n    omitSingleLevel = [],\n    descriptions,\n    formatter = val => val,\n    hideUris,\n    prefix = [],\n  } = props\n\n  const omits = new Set([...omit, ...globalOmit, ...omitSingleLevel])\n  const { __jbrowsefmt, ...rest } = attributes\n  const formattedAttributes = { ...rest, ...__jbrowsefmt }\n\n  const maxLabelWidth = generateMaxWidth(\n    Object.entries(formattedAttributes).filter(\n      ([k, v]) => v !== undefined && !omits.has(k),\n    ),\n    prefix,\n  )\n\n  return (\n    <>\n      {Object.entries(formattedAttributes)\n        .filter(([k, v]) => v !== undefined && !omits.has(k))\n        .map(([key, value]) => {\n          const description = accessNested([...prefix, key], descriptions)\n          if (Array.isArray(value)) {\n            // check if it looks like an array of objects, which could be used\n            // in data grid\n            return value.length > 1 && value.every(val => isObject(val)) ? (\n              <DataGridDetails\n                key={key}\n                name={key}\n                prefix={prefix}\n                value={value}\n              />\n            ) : (\n              <ArrayValue\n                key={key}\n                name={key}\n                value={value}\n                description={description}\n                prefix={prefix}\n              />\n            )\n          } else if (isObject(value)) {\n            const { omitSingleLevel, ...rest } = props\n            return isUriLocation(value) ? (\n              hideUris ? null : (\n                <UriAttribute\n                  key={key}\n                  name={key}\n                  prefix={prefix}\n                  value={value}\n                />\n              )\n            ) : (\n              <Attributes\n                {...rest}\n                key={key}\n                attributes={value}\n                descriptions={descriptions}\n                prefix={[...prefix, key]}\n              />\n            )\n          } else {\n            return (\n              <SimpleField\n                key={key}\n                name={key}\n                value={formatter(value, key)}\n                description={description}\n                prefix={prefix}\n                width={Math.min(maxLabelWidth, MAX_FIELD_NAME_WIDTH)}\n              />\n            )\n          }\n        })}\n    </>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState } from 'react'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Divider,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { IAnyStateTreeNode } from 'mobx-state-tree'\n\n// icons\nimport ExpandMore from '@mui/icons-material/ExpandMore'\n\n// locals\nimport {\n  getEnv,\n  getSession,\n  assembleLocString,\n  ParsedLocString,\n} from '../../util'\nimport { ErrorMessage } from '../../ui'\nimport SequenceFeatureDetails from '../SequenceFeatureDetails'\nimport { BaseCardProps, BaseProps } from '../types'\nimport { SimpleFeatureSerialized } from '../../util'\nimport SimpleField from './SimpleField'\nimport Attributes from './Attributes'\nimport { generateTitle, isEmpty, toLocale } from './util'\n\n// coreDetails are omitted in some circumstances\nconst coreDetails = [\n  'name',\n  'start',\n  'end',\n  'strand',\n  'refName',\n  'description',\n  'type',\n]\n\nconst useStyles = makeStyles()(theme => ({\n  expansionPanelDetails: {\n    display: 'block',\n    padding: theme.spacing(1),\n  },\n  expandIcon: {\n    color: theme.palette.tertiary?.contrastText || '#fff',\n  },\n}))\n\nexport function BaseCard({\n  children,\n  title,\n  defaultExpanded = true,\n}: BaseCardProps) {\n  const { classes } = useStyles()\n  const [expanded, setExpanded] = useState(defaultExpanded)\n  return (\n    <Accordion\n      expanded={expanded}\n      onChange={() => setExpanded(s => !s)}\n      TransitionProps={{ unmountOnExit: true, timeout: 150 }}\n    >\n      <AccordionSummary\n        expandIcon={<ExpandMore className={classes.expandIcon} />}\n      >\n        <Typography variant=\"button\"> {title}</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.expansionPanelDetails}>\n        {children}\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n\nfunction Position(props: BaseProps) {\n  const { feature } = props\n  const strand = feature.strand as number\n  const strandMap: Record<string, string> = {\n    '-1': '-',\n    '0': '',\n    '1': '+',\n  }\n  const str = strandMap[strand] ? `(${strandMap[strand]})` : ''\n  // @ts-expect-error\n  const loc = assembleLocString(feature as ParsedLocString)\n  return <>{`${loc} ${str}`}</>\n}\n\nfunction CoreDetails(props: BaseProps) {\n  const { feature } = props\n  const obj = feature as SimpleFeatureSerialized & {\n    start: number\n    end: number\n    assemblyName?: string\n    strand: number\n    refName: string\n    __jbrowsefmt: {\n      start?: number\n      assemblyName?: string\n      end?: number\n      refName?: string\n      name?: string\n    }\n  }\n\n  // eslint-disable-next-line no-underscore-dangle\n  const formattedFeat = { ...obj, ...obj.__jbrowsefmt }\n  const { start, end } = formattedFeat\n\n  const displayedDetails: Record<string, any> = {\n    ...formattedFeat,\n    length: toLocale(end - start),\n  }\n\n  const coreRenderedDetails = {\n    description: 'Description',\n    name: 'Name',\n    length: 'Length',\n    type: 'Type',\n  }\n  return (\n    <>\n      <SimpleField\n        name=\"Position\"\n        value={<Position {...props} feature={formattedFeat} />}\n      />\n      {Object.entries(coreRenderedDetails)\n        .map(([key, name]) => [name, displayedDetails[key]])\n        .filter(([, value]) => value != null)\n        .map(([name, value]) => (\n          <SimpleField key={name} name={name} value={value} />\n        ))}\n    </>\n  )\n}\n\nexport const BaseCoreDetails = (props: BaseProps) => {\n  return (\n    <BaseCard {...props} title=\"Primary data\">\n      <CoreDetails {...props} />\n    </BaseCard>\n  )\n}\n\nexport const BaseAttributes = (props: BaseProps) => {\n  const { feature } = props\n  return (\n    <BaseCard {...props} title=\"Attributes\">\n      <Attributes {...props} attributes={feature} />\n    </BaseCard>\n  )\n}\n\nexport interface BaseInputProps extends BaseCardProps {\n  omit?: string[]\n  model: any\n  descriptions?: Record<string, React.ReactNode>\n  formatter?: (val: unknown, key: string) => React.ReactNode\n}\n\ninterface PanelDescriptor {\n  name: string\n  Component: React.FC<any>\n}\n\nexport function FeatureDetails(props: {\n  model: IAnyStateTreeNode\n  feature: SimpleFeatureSerialized\n  depth?: number\n  omit?: string[]\n  descriptions?: Record<string, React.ReactNode>\n  formatter?: (val: unknown, key: string) => React.ReactNode\n}) {\n  const { omit = [], model, feature, depth = 0 } = props\n  const { mate, name = '', id = '', type = '', subfeatures, uniqueId } = feature\n  const pm = getEnv(model).pluginManager\n  const session = getSession(model)\n\n  const ExtraPanel = pm.evaluateExtensionPoint('Core-extraFeaturePanel', null, {\n    session,\n    feature,\n    model,\n  }) as PanelDescriptor | undefined\n  return (\n    <BaseCard title={generateTitle(name, id, type)}>\n      <Typography>Core details</Typography>\n      <CoreDetails {...props} />\n      {mate ? (\n        <>\n          <Divider />\n          <Typography>Mate details</Typography>\n          <CoreDetails\n            {...props}\n            feature={{ ...mate, uniqueId: uniqueId + '-mate' }}\n          />\n        </>\n      ) : null}\n\n      <Divider />\n      <Typography>Attributes</Typography>\n      <Attributes\n        attributes={feature}\n        {...props}\n        omit={omit}\n        omitSingleLevel={coreDetails}\n      />\n\n      <ErrorBoundary FallbackComponent={e => <ErrorMessage error={e.error} />}>\n        <SequenceFeatureDetails {...props} />\n      </ErrorBoundary>\n\n      {ExtraPanel ? (\n        <>\n          <Divider />\n          <BaseCard title={ExtraPanel.name}>\n            <ExtraPanel.Component {...props} />\n          </BaseCard>\n        </>\n      ) : null}\n\n      {subfeatures?.length ? (\n        <BaseCard title=\"Subfeatures\" defaultExpanded={depth < 1}>\n          {subfeatures.map((sub, idx) => (\n            <FeatureDetails\n              key={JSON.stringify(sub)}\n              feature={{ ...sub, uniqueId: `${uniqueId}_${idx}` }}\n              model={model}\n              depth={depth + 1}\n            />\n          ))}\n        </BaseCard>\n      ) : null}\n    </BaseCard>\n  )\n}\n\nconst BaseFeatureDetail = observer(function ({ model }: BaseInputProps) {\n  const { error, featureData } = model\n\n  if (error) {\n    return <ErrorMessage error={error} />\n  }\n  if (!featureData) {\n    return null\n  }\n\n  // replacing undefined with null helps with allowing fields to be hidden,\n  // setting null is not allowed by jexl so we set it to undefined to hide. see\n  // config guide. this replacement happens both here and when snapshotting the\n  // featureData\n  const g = JSON.parse(\n    JSON.stringify(featureData, (_, v) => (v === undefined ? null : v)),\n  )\n  return isEmpty(g) ? null : <FeatureDetails model={model} feature={g} />\n})\n\nexport default BaseFeatureDetail\n\nexport { default as Attributes } from './Attributes'\n","export interface Feat {\n  start: number\n  end: number\n  type: string\n  name?: string\n  id?: string\n}\nexport interface ParentFeat extends Feat {\n  uniqueId: string\n  strand?: number\n  refName: string\n  subfeatures?: Feat[]\n  parentId?: string\n}\nexport interface SeqState {\n  seq: string\n  upstream?: string\n  downstream?: string\n}\n\nexport interface ErrorState {\n  error: string\n}\n\nexport function stitch(subfeats: Feat[], sequence: string) {\n  return subfeats.map(sub => sequence.slice(sub.start, sub.end)).join('')\n}\n\n// filter items if they have the same \"ID\" or location\nfunction getItemId(feat: Feat) {\n  return `${feat.start}-${feat.end}`\n}\n\n// filters if successive elements share same start/end\nexport function dedupe(list: Feat[]) {\n  return list.filter(\n    (item, pos, ary) => !pos || getItemId(item) !== getItemId(ary[pos - 1]),\n  )\n}\n\nexport function revlist(list: Feat[], seqlen: number) {\n  return list\n    .map(sub => ({\n      ...sub,\n      start: seqlen - sub.end,\n      end: seqlen - sub.start,\n    }))\n    .sort((a, b) => a.start - b.start)\n}\n\nexport function calculateUTRs(cds: Feat[], exons: Feat[]) {\n  // checking length ensures the .at below are valid\n  if (!cds.length) {\n    return []\n  }\n\n  const firstCds = cds.at(0)!\n\n  const lastCds = cds.at(-1)!\n  const firstCdsIdx = exons.findIndex(\n    exon => exon.end >= firstCds.start && exon.start <= firstCds.start,\n  )\n  const lastCdsIdx = exons.findIndex(\n    exon => exon.end >= lastCds.end && exon.start <= lastCds.end,\n  )\n  const lastCdsExon = exons[lastCdsIdx]\n  const firstCdsExon = exons[firstCdsIdx]\n\n  const fiveUTRs = [\n    ...exons.slice(0, firstCdsIdx),\n    { start: firstCdsExon.start, end: firstCds.start },\n  ].map(elt => ({ ...elt, type: 'five_prime_UTR' }))\n\n  const threeUTRs = [\n    { start: lastCds.end, end: lastCdsExon.end },\n    ...exons.slice(lastCdsIdx + 1),\n  ].map(elt => ({ ...elt, type: 'three_prime_UTR' }))\n\n  return [...fiveUTRs, ...threeUTRs]\n}\n\n// calculates UTRs using impliedUTRs logic, but there are no exon subfeatures\nexport function calculateUTRs2(cds: Feat[], parentFeat: Feat) {\n  if (!cds.length) {\n    return []\n  }\n\n  const firstCds = cds.at(0)!\n\n  const lastCds = cds.at(-1)!\n\n  const fiveUTRs = [{ start: parentFeat.start, end: firstCds.start }].map(\n    elt => ({ ...elt, type: 'five_prime_UTR' }),\n  )\n\n  const threeUTRs = [{ start: lastCds.end, end: parentFeat.end }].map(elt => ({\n    ...elt,\n    type: 'three_prime_UTR',\n  }))\n\n  return [...fiveUTRs, ...threeUTRs]\n}\n\nexport function ellipses(slug: string) {\n  return slug.length > 20 ? `${slug.slice(0, 20)}...` : slug\n}\n","import React, { useState, useCallback } from 'react'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport ResizeHandle from './ResizeHandle'\n\nconst useStyles = makeStyles()(theme => ({\n  resizeBar: {\n    background: theme.palette.action.disabledBackground,\n    height: 12,\n    position: 'relative',\n    overflow: 'hidden',\n  },\n  tick: {\n    position: 'absolute',\n    height: '100%',\n    pointerEvents: 'none',\n    background: theme.palette.action.disabled,\n    width: 1,\n  },\n  hiddenTick: {\n    position: 'absolute',\n    height: '100%',\n    width: 5,\n  },\n}))\n\nfunction Tick({\n  left,\n  scrollLeft,\n  idx,\n  onDrag,\n  onMouseDown,\n}: {\n  idx: number\n  left: number\n  scrollLeft: number\n  onMouseDown: (event: React.MouseEvent) => void\n  onDrag: (\n    lastFrameDistance: number,\n    totalDistance: number,\n    idx: number,\n  ) => void\n}) {\n  const { classes } = useStyles()\n  const onDragCallback = useCallback(\n    (lastFrameDistance: number, totalDistance: number) =>\n      onDrag(lastFrameDistance, totalDistance, idx),\n    [idx, onDrag],\n  )\n\n  // has an invisible wider than tick mark (1px) clickable area (5px)\n  return (\n    <>\n      <ResizeHandle\n        onDrag={onDragCallback}\n        onMouseDown={onMouseDown}\n        vertical\n        className={classes.hiddenTick}\n        style={{ left: left - scrollLeft - 2.5 }}\n      />\n      <div style={{ left: left - scrollLeft }} className={classes.tick} />\n    </>\n  )\n}\n\nexport default function ResizeBar({\n  widths,\n  setWidths,\n  checkbox,\n  scrollLeft = 0,\n}: {\n  widths: number[]\n  setWidths: (arg: number[]) => void\n  checkbox?: boolean\n  scrollLeft?: number\n}) {\n  const { classes } = useStyles()\n  const offsets = [] as number[]\n  const [initial, setInitial] = useState<number[]>()\n  let init = checkbox ? 52 : 0\n  for (let i = 0; i < widths.length; i++) {\n    const width = widths[i]\n    offsets[i] = width + init\n    init += width\n  }\n\n  return (\n    <div className={classes.resizeBar}>\n      {offsets.map((left, i) => (\n        <Tick\n          key={i}\n          onMouseDown={() => {\n            setInitial([...widths])\n          }}\n          left={i === offsets.length - 1 ? left - 3 : left}\n          onDrag={(_: number, totalDistance: number, idx: number) => {\n            const newWidths = [...widths]\n            // mui doesn't allow columns smaller than 50\n            newWidths[idx] = Math.max(initial![idx] - totalDistance, 50)\n            setWidths(newWidths)\n          }}\n          idx={i}\n          scrollLeft={scrollLeft}\n        />\n      ))}\n    </div>\n  )\n}\n","import { useEffect, useRef, useState } from 'react'\n\nexport function useResizeBar() {\n  const ref = useRef<HTMLDivElement>(null)\n  const [scrollLeft, setScrollLeft] = useState(0)\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const elt = ref.current?.querySelector('.MuiDataGrid-virtualScroller')\n      if (elt) {\n        setScrollLeft(elt.scrollLeft)\n      }\n    }, 100)\n    return () => {\n      clearInterval(timer)\n    }\n  }, [])\n  return { ref, scrollLeft }\n}\n"],"names":["useStyles","makeStyles","theme","fieldValue","wordBreak","maxHeight","fontSize","padding","spacing","overflow","BasicValue","_ref","value","classes","isLink","concat","match","_jsx","className","children","React","Link","href","SanitizedHTML","html","isObject","JSON","stringify","String","fieldDescription","background","palette","mode","fieldName","minWidth","borderBottom","action","disabledBackground","marginRight","FieldName","description","name","width","_ref$prefix","prefix","_useStyles","cx","val","_toConsumableArray","join","Tooltip","title","placement","style","field","display","flexWrap","SimpleField","undefined","_jsxs","HelpDlg","lazy","SequenceFeatureDetails","formControl","margin","container","marginTop","marginBottom","SequenceFeaturePanel","model","feature","_useState","useState","_useState2","_slicedToArray","shown","setShown","_useState3","_useState4","helpShown","setHelpShown","Button","variant","onClick","FormControl","IconButton","HelpIcon","Suspense","fallback","LoadingEllipses","uniqueId","handleClose","generateTitle","id","type","ellipses","filter","f","cell","whiteSpace","textOverflow","DataGridDetails","_step","colNames","_useResizeBar","useResizeBar","ref","scrollLeft","checked","setChecked","keys","Object","sort","unionKeys","Set","rows","entries","map","_ref2","_ref3","k","rest","_objectWithoutProperties","_excluded","_objectSpread","identifier","_iterator","_createForOfIteratorHelper","s","n","done","_i","_Object$keys","length","add","err","e","has","delete","measureGridWidth","r","widths","setWidths","size","_Fragment","FormControlLabel","control","Checkbox","onChange","event","target","label","Typography","ResizeBar","DataGrid","disableRowSelectionOnClick","rowCount","rowHeight","columnHeaderHeight","hideFooter","slots","toolbar","GridToolbar","slotProps","printOptions","disableToolbarButton","columns","index","renderCell","params","getStr","fieldSubvalue","border","selected","boxSizing","ArrayValue","Attributes","attributes","every","i","UriField","uri","_value$baseUri","baseUri","URL","MAX_FIELD_NAME_WIDTH","globalOmit","props","_props$omit","omit","_props$omitSingleLeve","omitSingleLevel","descriptions","_props$formatter","formatter","hideUris","_props$prefix","omits","__jbrowsefmt","formattedAttributes","maxLabelWidth","array","Math","ceil","max","key","measureText","generateMaxWidth","_ref4","_ref5","_ref6","arr","_obj","obj2","arguments","forEach","elt","Description","accessNested","Array","isArray","_excluded2","isUriLocation","UriAttribute","_createElement","min","coreDetails","_theme$palette$tertia","expansionPanelDetails","expandIcon","color","tertiary","contrastText","BaseCard","_ref$defaultExpanded","defaultExpanded","expanded","setExpanded","Accordion","TransitionProps","unmountOnExit","timeout","AccordionSummary","ExpandMore","AccordionDetails","Position","strand","strandMap","str","loc","assembleLocString","CoreDetails","obj","formattedFeat","start","end","displayedDetails","toLocaleString","_ref7","BaseCoreDetails","BaseAttributes","FeatureDetails","_props$depth","depth","mate","_feature$name","_feature$id","_feature$type","subfeatures","pm","getEnv","pluginManager","session","getSession","ExtraPanel","evaluateExtensionPoint","Divider","ErrorBoundary","FallbackComponent","ErrorMessage","error","Component","sub","idx","observer","_ref8","featureData","g","parse","_","v","stitch","subfeats","sequence","slice","getItemId","feat","dedupe","list","item","pos","ary","revlist","seqlen","a","b","calculateUTRs","cds","exons","firstCds","at","lastCds","firstCdsIdx","findIndex","exon","lastCdsIdx","lastCdsExon","firstCdsExon","fiveUTRs","threeUTRs","calculateUTRs2","parentFeat","slug","resizeBar","height","position","tick","pointerEvents","disabled","hiddenTick","Tick","left","onDrag","onMouseDown","onDragCallback","useCallback","lastFrameDistance","totalDistance","ResizeHandle","vertical","checkbox","_ref2$scrollLeft","offsets","initial","setInitial","init","newWidths","useRef","setScrollLeft","useEffect","timer","setInterval","_ref$current","current","querySelector","clearInterval"],"sourceRoot":""}