{"version":3,"file":"static/js/7131.d5780318.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/x-data-grid/components/cell/GridActionsCellItem.js","../../../node_modules/@mui/x-data-grid/components/containers/GridToolbarContainer.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarColumnsButton.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarDensitySelector.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarFilterButton.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarQuickFilter.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbar.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridApi.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridScrollFn.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridState.js","../../../node_modules/@mui/x-data-grid/models/events/gridEvents.js","../../../node_modules/@mui/x-data-grid/utils/getGridLocalization.js","../../../node_modules/@mui/x-data-grid/locales/arSD.js","../../../node_modules/@mui/material/esm/locale/index.js","../../../node_modules/@mui/x-data-grid/locales/bgBG.js","../../../node_modules/@mui/x-data-grid/locales/csCZ.js","../../../node_modules/@mui/x-data-grid/locales/daDK.js","../../../node_modules/@mui/x-data-grid/locales/deDE.js","../../../node_modules/@mui/x-data-grid/locales/elGR.js","../../../node_modules/@mui/x-data-grid/locales/enUS.js","../../../node_modules/@mui/x-data-grid/locales/esES.js","../../../node_modules/@mui/x-data-grid/locales/faIR.js","../../../node_modules/@mui/x-data-grid/locales/fiFI.js","../../../node_modules/@mui/x-data-grid/locales/frFR.js","../../../node_modules/@mui/x-data-grid/locales/heIL.js","../../../node_modules/@mui/x-data-grid/locales/huHU.js","../../../node_modules/@mui/x-data-grid/locales/itIT.js","../../../node_modules/@mui/x-data-grid/locales/jaJP.js","../../../node_modules/@mui/x-data-grid/locales/koKR.js","../../../node_modules/@mui/x-data-grid/locales/nbNO.js","../../../node_modules/@mui/x-data-grid/locales/nlNL.js","../../../node_modules/@mui/x-data-grid/locales/plPL.js","../../../node_modules/@mui/x-data-grid/locales/ptBR.js","../../../node_modules/@mui/x-data-grid/locales/roRO.js","../../../node_modules/@mui/x-data-grid/locales/ruRU.js","../../../node_modules/@mui/x-data-grid/locales/skSK.js","../../../node_modules/@mui/x-data-grid/locales/svSE.js","../../../node_modules/@mui/x-data-grid/locales/trTR.js","../../../node_modules/@mui/x-data-grid/locales/ukUA.js","../../../node_modules/@mui/x-data-grid/locales/viVN.js","../../../node_modules/@mui/x-data-grid/locales/zhCN.js","../../../node_modules/@mui/x-data-grid/locales/zhTW.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"label\", \"icon\", \"showInMenu\", \"onClick\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridActionsCellItem = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    label,\n    icon,\n    showInMenu,\n    onClick\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const handleClick = event => {\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  if (!showInMenu) {\n    return /*#__PURE__*/_jsx(IconButton, _extends({\n      ref: ref,\n      size: \"small\",\n      role: \"menuitem\",\n      \"aria-label\": label\n    }, other, {\n      onClick: handleClick,\n      children: /*#__PURE__*/React.cloneElement(icon, {\n        fontSize: 'small'\n      })\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(MenuItem, _extends({\n    ref: ref\n  }, other, {\n    onClick: onClick,\n    children: [icon && /*#__PURE__*/_jsx(ListItemIcon, {\n      children: icon\n    }), label]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCellItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  icon: PropTypes.element,\n  label: PropTypes.string.isRequired,\n  showInMenu: PropTypes.bool\n} : void 0;\nexport { GridActionsCellItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['toolbarContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridToolbarContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ToolbarContainer',\n  overridesResolver: (props, styles) => styles.toolbarContainer\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  flexWrap: 'wrap',\n  padding: theme.spacing(0.5, 0.5, 0)\n}));\nconst GridToolbarContainer = /*#__PURE__*/React.forwardRef(function GridToolbarContainer(props, ref) {\n  const {\n    className,\n    children\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  if (!children) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridToolbarContainerRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root)\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridToolbarContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"onClick\"];\nimport * as React from 'react';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridToolbarColumnsButton = /*#__PURE__*/React.forwardRef(function GridToolbarColumnsButton(props, ref) {\n  var _rootProps$components;\n\n  const {\n    onClick\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const {\n    open,\n    openedPanelValue\n  } = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n\n  const showColumns = event => {\n    if (open && openedPanelValue === GridPreferencePanelsValue.columns) {\n      apiRef.current.hidePreferences();\n    } else {\n      apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  }; // Disable the button if the corresponding is disabled\n\n\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n    ref: ref,\n    size: \"small\",\n    \"aria-label\": apiRef.current.getLocaleText('toolbarColumnsLabel'),\n    startIcon: /*#__PURE__*/_jsx(rootProps.components.ColumnSelectorIcon, {})\n  }, other, {\n    onClick: showColumns\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseButton, {\n    children: apiRef.current.getLocaleText('toolbarColumns')\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"onClick\"];\nimport * as React from 'react';\nimport { unstable_useId as useId, useForkRef } from '@mui/material/utils';\nimport MenuList from '@mui/material/MenuList';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport { gridDensityValueSelector } from '../../hooks/features/density/densitySelector';\nimport { GridDensityTypes } from '../../models/gridDensity';\nimport { isHideMenuKey, isTabKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridToolbarDensitySelector = /*#__PURE__*/React.forwardRef(function GridToolbarDensitySelector(props, ref) {\n  var _rootProps$components;\n\n  const {\n    onClick\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const densityValue = useGridSelector(apiRef, gridDensityValueSelector);\n  const densityButtonId = useId();\n  const densityMenuId = useId();\n  const [open, setOpen] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const handleRef = useForkRef(ref, buttonRef);\n  const densityOptions = [{\n    icon: /*#__PURE__*/_jsx(rootProps.components.DensityCompactIcon, {}),\n    label: apiRef.current.getLocaleText('toolbarDensityCompact'),\n    value: GridDensityTypes.Compact\n  }, {\n    icon: /*#__PURE__*/_jsx(rootProps.components.DensityStandardIcon, {}),\n    label: apiRef.current.getLocaleText('toolbarDensityStandard'),\n    value: GridDensityTypes.Standard\n  }, {\n    icon: /*#__PURE__*/_jsx(rootProps.components.DensityComfortableIcon, {}),\n    label: apiRef.current.getLocaleText('toolbarDensityComfortable'),\n    value: GridDensityTypes.Comfortable\n  }];\n  const startIcon = React.useMemo(() => {\n    switch (densityValue) {\n      case GridDensityTypes.Compact:\n        return /*#__PURE__*/_jsx(rootProps.components.DensityCompactIcon, {});\n\n      case GridDensityTypes.Comfortable:\n        return /*#__PURE__*/_jsx(rootProps.components.DensityComfortableIcon, {});\n\n      default:\n        return /*#__PURE__*/_jsx(rootProps.components.DensityStandardIcon, {});\n    }\n  }, [densityValue, rootProps]);\n\n  const handleDensitySelectorOpen = event => {\n    setOpen(prevOpen => !prevOpen);\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleDensitySelectorClickAway = event => {\n    var _buttonRef$current;\n\n    if (buttonRef.current === event.target || // if user clicked on the icon\n    (_buttonRef$current = buttonRef.current) != null && _buttonRef$current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const handleDensityUpdate = newDensity => {\n    apiRef.current.setDensity(newDensity);\n    setOpen(false);\n  };\n\n  const handleListKeyDown = event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n\n    if (isHideMenuKey(event.key)) {\n      setOpen(false);\n    }\n  }; // Disable the button if the corresponding is disabled\n\n\n  if (rootProps.disableDensitySelector) {\n    return null;\n  }\n\n  const densityElements = densityOptions.map((option, index) => /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: () => handleDensityUpdate(option.value),\n    selected: option.value === densityValue,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: option.icon\n    }), option.label]\n  }, index));\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n      ref: handleRef,\n      size: \"small\",\n      startIcon: startIcon,\n      \"aria-label\": apiRef.current.getLocaleText('toolbarDensityLabel'),\n      \"aria-expanded\": open ? 'true' : undefined,\n      \"aria-haspopup\": \"menu\",\n      \"aria-controls\": densityMenuId,\n      id: densityButtonId\n    }, other, {\n      onClick: handleDensitySelectorOpen\n    }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseButton, {\n      children: apiRef.current.getLocaleText('toolbarDensity')\n    })), /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      onClickAway: handleDensitySelectorClickAway,\n      position: \"bottom-start\",\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: densityMenuId,\n        className: gridClasses.menuList,\n        \"aria-labelledby\": densityButtonId,\n        onKeyDown: handleListKeyDown,\n        autoFocusItem: open,\n        children: densityElements\n      })\n    })]\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"componentsProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport Badge from '@mui/material/Badge';\nimport { capitalize } from '@mui/material/utils';\nimport { gridColumnLookupSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridFilterActiveItemsSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['toolbarFilterList']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridToolbarFilterListRoot = styled('ul', {\n  name: 'MuiDataGrid',\n  slot: 'ToolbarFilterList',\n  overridesResolver: (props, styles) => styles.toolbarFilterList\n})(({\n  theme\n}) => ({\n  margin: theme.spacing(1, 1, 0.5),\n  padding: theme.spacing(0, 1)\n}));\nconst GridToolbarFilterButton = /*#__PURE__*/React.forwardRef(function GridToolbarFilterButton(props, ref) {\n  var _rootProps$components, _rootProps$components2;\n\n  const {\n    componentsProps = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const buttonProps = componentsProps.button || {};\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const activeFilters = useGridSelector(apiRef, gridFilterActiveItemsSelector);\n  const lookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tooltipContentNode = React.useMemo(() => {\n    if (preferencePanel.open) {\n      return apiRef.current.getLocaleText('toolbarFiltersTooltipHide');\n    }\n\n    if (activeFilters.length === 0) {\n      return apiRef.current.getLocaleText('toolbarFiltersTooltipShow');\n    }\n\n    const getOperatorLabel = item => lookup[item.columnField].filterOperators.find(operator => operator.value === item.operatorValue).label || apiRef.current.getLocaleText(`filterOperator${capitalize(item.operatorValue)}`).toString();\n\n    return /*#__PURE__*/_jsxs(\"div\", {\n      children: [apiRef.current.getLocaleText('toolbarFiltersTooltipActive')(activeFilters.length), /*#__PURE__*/_jsx(GridToolbarFilterListRoot, {\n        className: classes.root,\n        children: activeFilters.map((item, index) => {\n          var _item$value;\n\n          return _extends({}, lookup[item.columnField] && /*#__PURE__*/_jsx(\"li\", {\n            children: `${lookup[item.columnField].headerName || item.columnField}\n                  ${getOperatorLabel(item)}\n                  ${(_item$value = item.value) != null ? _item$value : ''}`\n          }, index));\n        })\n      })]\n    });\n  }, [apiRef, preferencePanel.open, activeFilters, lookup, classes]);\n\n  const toggleFilter = event => {\n    var _buttonProps$onClick;\n\n    const {\n      open,\n      openedPanelValue\n    } = preferencePanel;\n\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel();\n    }\n\n    (_buttonProps$onClick = buttonProps.onClick) == null ? void 0 : _buttonProps$onClick.call(buttonProps, event);\n  }; // Disable the button if the corresponding is disabled\n\n\n  if (rootProps.disableColumnFilter) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTooltip, _extends({\n    title: tooltipContentNode,\n    enterDelay: 1000\n  }, other, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTooltip, {\n    children: /*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n      ref: ref,\n      size: \"small\",\n      \"aria-label\": apiRef.current.getLocaleText('toolbarFiltersLabel'),\n      startIcon: /*#__PURE__*/_jsx(Badge, {\n        badgeContent: activeFilters.length,\n        color: \"primary\",\n        children: /*#__PURE__*/_jsx(rootProps.components.OpenFilterButtonIcon, {})\n      })\n    }, buttonProps, {\n      onClick: toggleFilter\n    }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseButton, {\n      children: apiRef.current.getLocaleText('toolbarFilters')\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarFilterButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.object\n} : void 0;\nexport { GridToolbarFilterButton };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"quickFilterParser\", \"quickFilterFormatter\", \"debounceMs\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@mui/material/TextField';\nimport IconButton from '@mui/material/IconButton';\nimport { styled } from '@mui/material/styles';\nimport { debounce } from '@mui/material/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridQuickFilterValuesSelector } from '../../hooks/features/filter';\nimport { isDeepEqual } from '../../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridToolbarQuickFilterRoot = styled(TextField, {\n  name: 'MuiDataGrid',\n  slot: 'ToolbarQuickFilter',\n  overridesResolver: (props, styles) => styles.toolbarQuickFilter\n})(({\n  theme\n}) => ({\n  width: 'auto',\n  paddingBottom: theme.spacing(0.5),\n  '& input': {\n    marginLeft: theme.spacing(0.5)\n  },\n  '& .MuiInput-underline:before': {\n    borderBottom: `1px solid ${theme.palette.divider}`\n  },\n  [`& input[type=search]::-ms-clear,\n& input[type=search]::-ms-reveal`]: {\n    /* clears the 'X' icon from IE */\n    display: 'none',\n    width: 0,\n    height: 0\n  },\n  [`& input[type=\"search\"]::-webkit-search-decoration,\n  & input[type=\"search\"]::-webkit-search-cancel-button,\n  & input[type=\"search\"]::-webkit-search-results-button,\n  & input[type=\"search\"]::-webkit-search-results-decoration`]: {\n    /* clears the 'X' icon from Chrome */\n    display: 'none'\n  }\n}));\n\nconst defaultSearchValueParser = searchText => searchText.split(' ').filter(word => word !== '');\n\nconst defaultSearchValueFormatter = values => values.join(' ');\n\nfunction GridToolbarQuickFilter(props) {\n  var _rootProps$components;\n\n  const {\n    quickFilterParser = defaultSearchValueParser,\n    quickFilterFormatter = defaultSearchValueFormatter,\n    debounceMs = 500\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const quickFilterValues = useGridSelector(apiRef, gridQuickFilterValuesSelector);\n  const [searchValue, setSearchValue] = React.useState(() => quickFilterFormatter(quickFilterValues != null ? quickFilterValues : []));\n  const [prevQuickFilterValues, setPrevQuickFilterValues] = React.useState(quickFilterValues);\n  React.useEffect(() => {\n    if (!isDeepEqual(prevQuickFilterValues, quickFilterValues)) {\n      // The model of quick filter value has been updated\n      setPrevQuickFilterValues(quickFilterValues); // Update the input value if needed to match the new model\n\n      setSearchValue(prevSearchValue => isDeepEqual(quickFilterParser(prevSearchValue), quickFilterValues) ? prevSearchValue : quickFilterFormatter(quickFilterValues != null ? quickFilterValues : []));\n    }\n  }, [prevQuickFilterValues, quickFilterValues, quickFilterFormatter, quickFilterParser]);\n  const updateSearchValue = React.useCallback(newSearchValue => {\n    apiRef.current.setQuickFilterValues(quickFilterParser(newSearchValue));\n  }, [apiRef, quickFilterParser]);\n  const debouncedUpdateSearchValue = React.useMemo(() => debounce(updateSearchValue, debounceMs), [updateSearchValue, debounceMs]);\n  const handleSearchValueChange = React.useCallback(event => {\n    const newSearchValue = event.target.value;\n    setSearchValue(newSearchValue);\n    debouncedUpdateSearchValue(newSearchValue);\n  }, [debouncedUpdateSearchValue]);\n  const handleSearchReset = React.useCallback(() => {\n    setSearchValue('');\n    updateSearchValue('');\n  }, [updateSearchValue]);\n  return /*#__PURE__*/_jsx(GridToolbarQuickFilterRoot, _extends({\n    as: rootProps.components.BaseTextField,\n    variant: \"standard\",\n    value: searchValue,\n    onChange: handleSearchValueChange,\n    placeholder: apiRef.current.getLocaleText('toolbarQuickFilterPlaceholder'),\n    \"aria-label\": apiRef.current.getLocaleText('toolbarQuickFilterLabel'),\n    type: \"search\",\n    InputProps: {\n      startAdornment: /*#__PURE__*/_jsx(rootProps.components.QuickFilterIcon, {\n        fontSize: \"small\"\n      }),\n      endAdornment: /*#__PURE__*/_jsx(IconButton, {\n        \"aria-label\": apiRef.current.getLocaleText('toolbarQuickFilterDeleteIconLabel'),\n        size: \"small\",\n        sx: {\n          visibility: searchValue ? 'visible' : 'hidden'\n        },\n        onClick: handleSearchReset,\n        children: /*#__PURE__*/_jsx(rootProps.components.QuickFilterClearIcon, {\n          fontSize: \"small\"\n        })\n      })\n    }\n  }, other, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTextField));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarQuickFilter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The debounce time in milliseconds.\n   * @default 500\n   */\n  debounceMs: PropTypes.number,\n\n  /**\n   * Function responsible for formatting values of quick filter in a string when the model is modified\n   * @param {any[]} values The new values passed to the quick filter model\n   * @returns {string} The string to display in the text field\n   */\n  quickFilterFormatter: PropTypes.func,\n\n  /**\n   * Function responsible for parsing text input in an array of independent values for quick filtering.\n   * @param {string} input The value entered by the user\n   * @returns {any[]} The array of value on which quick filter is applied\n   */\n  quickFilterParser: PropTypes.func\n} : void 0;\nexport { GridToolbarQuickFilter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"csvOptions\", \"printOptions\", \"excelOptions\", \"showQuickFilter\", \"quickFilterProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport { GridToolbarContainer } from '../containers/GridToolbarContainer';\nimport { GridToolbarColumnsButton } from './GridToolbarColumnsButton';\nimport { GridToolbarDensitySelector } from './GridToolbarDensitySelector';\nimport { GridToolbarFilterButton } from './GridToolbarFilterButton';\nimport { GridToolbarExport } from './GridToolbarExport';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridToolbarQuickFilter } from './GridToolbarQuickFilter';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridToolbar = /*#__PURE__*/React.forwardRef(function GridToolbar(props, ref) {\n  // TODO v6: think about where export option should be passed.\n  // from componentProps={{ toolbarExport: { ...exportOption} }} seems to be more appropriate\n  const {\n    csvOptions,\n    printOptions,\n    excelOptions,\n    showQuickFilter = false,\n    quickFilterProps = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n\n  if (rootProps.disableColumnFilter && rootProps.disableColumnSelector && rootProps.disableDensitySelector && !showQuickFilter) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxs(GridToolbarContainer, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(GridToolbarColumnsButton, {}), /*#__PURE__*/_jsx(GridToolbarFilterButton, {}), /*#__PURE__*/_jsx(GridToolbarDensitySelector, {}), /*#__PURE__*/_jsx(GridToolbarExport, {\n      csvOptions: csvOptions,\n      printOptions: printOptions // TODO: remove the reference to excelOptions in community package\n      ,\n      excelOptions: excelOptions\n    }), /*#__PURE__*/_jsx(Box, {\n      sx: {\n        flex: 1\n      }\n    }), showQuickFilter && /*#__PURE__*/_jsx(GridToolbarQuickFilter, _extends({}, quickFilterProps))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Props passed to the quick filter component.\n   */\n  quickFilterProps: PropTypes.object,\n\n  /**\n   * Show the quick filter component.\n   * @default false\n   */\n  showQuickFilter: PropTypes.bool,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridToolbar };","import { buildWarning } from '../../utils/warning';\nconst deprecationWarning = buildWarning(['MUI: The hook useGridApi is deprecated and will be removed in the next major version.', 'Access the ref content with apiRef.current instead']);\n/**\n * @deprecated Use `apiRef.current` instead.\n */\n\nexport const useGridApi = apiRef => {\n  if (process.env.NODE_ENV !== 'production') {\n    deprecationWarning();\n  }\n\n  return apiRef.current;\n};","import * as React from 'react';\nimport { useGridLogger } from './useGridLogger';\nexport function useGridScrollFn(apiRef, renderingZoneElementRef, columnHeadersElementRef) {\n  const logger = useGridLogger(apiRef, 'useGridScrollFn');\n  const previousValue = React.useRef();\n  const scrollTo = React.useCallback(v => {\n    var _previousValue$curren;\n\n    if (v.left === ((_previousValue$curren = previousValue.current) == null ? void 0 : _previousValue$curren.left) && v.top === previousValue.current.top) {\n      return;\n    }\n\n    if (renderingZoneElementRef && renderingZoneElementRef.current) {\n      logger.debug(`Moving ${renderingZoneElementRef.current.className} to: ${v.left}-${v.top}`); // Force the creation of a layer, avoid paint when changing the transform value.\n\n      renderingZoneElementRef.current.style.transform = `translate3d(${-v.left}px, ${-v.top}px, 0px)`;\n      columnHeadersElementRef.current.style.transform = `translate3d(${-v.left}px, 0px, 0px)`;\n      previousValue.current = v;\n    }\n  }, [renderingZoneElementRef, logger, columnHeadersElementRef]);\n  return [scrollTo];\n}","import { buildWarning } from '../../utils/warning';\nconst deprecationWarning = buildWarning(['MUI: The hook useGridState is deprecated and will be removed in the next major version.', 'The two lines below are equivalent', '', 'const [state, setState, forceUpdate] = useGridState(apiRef);', 'const { state, setState, forceUpdate } = apiRef.current']);\n/**\n * @deprecated Use `apiRef.current.state`, `apiRef.current.setState` and `apiRef.current.forceUpdate` instead.\n */\n\nexport const useGridState = apiRef => {\n  if (process.env.NODE_ENV !== 'production') {\n    deprecationWarning();\n  }\n\n  return [apiRef.current.state, apiRef.current.setState, apiRef.current.forceUpdate];\n};","var GridEvents;\n\n(function (GridEvents) {\n  GridEvents[\"resize\"] = \"resize\";\n  GridEvents[\"debouncedResize\"] = \"debouncedResize\";\n  GridEvents[\"viewportInnerSizeChange\"] = \"viewportInnerSizeChange\";\n  GridEvents[\"componentError\"] = \"componentError\";\n  GridEvents[\"unmount\"] = \"unmount\";\n  GridEvents[\"cellModeChange\"] = \"cellModeChange\";\n  GridEvents[\"cellClick\"] = \"cellClick\";\n  GridEvents[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridEvents[\"cellMouseDown\"] = \"cellMouseDown\";\n  GridEvents[\"cellMouseUp\"] = \"cellMouseUp\";\n  GridEvents[\"cellKeyDown\"] = \"cellKeyDown\";\n  GridEvents[\"cellFocusIn\"] = \"cellFocusIn\";\n  GridEvents[\"cellFocusOut\"] = \"cellFocusOut\";\n  GridEvents[\"cellDragEnter\"] = \"cellDragEnter\";\n  GridEvents[\"cellDragOver\"] = \"cellDragOver\";\n  GridEvents[\"editCellPropsChange\"] = \"editCellPropsChange\";\n  GridEvents[\"cellEditCommit\"] = \"cellEditCommit\";\n  GridEvents[\"cellEditStart\"] = \"cellEditStart\";\n  GridEvents[\"cellEditStop\"] = \"cellEditStop\";\n  GridEvents[\"cellModesModelChange\"] = \"cellModesModelChange\";\n  GridEvents[\"rowModesModelChange\"] = \"rowModesModelChange\";\n  GridEvents[\"rowEditStart\"] = \"rowEditStart\";\n  GridEvents[\"rowEditStop\"] = \"rowEditStop\";\n  GridEvents[\"rowEditCommit\"] = \"rowEditCommit\";\n  GridEvents[\"cellNavigationKeyDown\"] = \"cellNavigationKeyDown\";\n  GridEvents[\"rowClick\"] = \"rowClick\";\n  GridEvents[\"rowDoubleClick\"] = \"rowDoubleClick\";\n  GridEvents[\"rowMouseEnter\"] = \"rowMouseEnter\";\n  GridEvents[\"rowMouseLeave\"] = \"rowMouseLeave\";\n  GridEvents[\"editRowsModelChange\"] = \"editRowsModelChange\";\n  GridEvents[\"rowDragStart\"] = \"rowDragStart\";\n  GridEvents[\"rowDragOver\"] = \"rowDragOver\";\n  GridEvents[\"rowDragEnd\"] = \"rowDragEnd\";\n  GridEvents[\"columnHeaderBlur\"] = \"columnHeaderBlur\";\n  GridEvents[\"columnHeaderFocus\"] = \"columnHeaderFocus\";\n  GridEvents[\"columnHeaderNavigationKeyDown\"] = \"columnHeaderNavigationKeyDown\";\n  GridEvents[\"columnHeaderKeyDown\"] = \"columnHeaderKeyDown\";\n  GridEvents[\"columnHeaderClick\"] = \"columnHeaderClick\";\n  GridEvents[\"columnHeaderDoubleClick\"] = \"columnHeaderDoubleClick\";\n  GridEvents[\"columnHeaderOver\"] = \"columnHeaderOver\";\n  GridEvents[\"columnHeaderOut\"] = \"columnHeaderOut\";\n  GridEvents[\"columnHeaderEnter\"] = \"columnHeaderEnter\";\n  GridEvents[\"columnHeaderLeave\"] = \"columnHeaderLeave\";\n  GridEvents[\"columnHeaderDragStart\"] = \"columnHeaderDragStart\";\n  GridEvents[\"columnHeaderDragOver\"] = \"columnHeaderDragOver\";\n  GridEvents[\"columnHeaderDragEnter\"] = \"columnHeaderDragEnter\";\n  GridEvents[\"columnHeaderDragEnd\"] = \"columnHeaderDragEnd\";\n  GridEvents[\"selectionChange\"] = \"selectionChange\";\n  GridEvents[\"headerSelectionCheckboxChange\"] = \"headerSelectionCheckboxChange\";\n  GridEvents[\"rowSelectionCheckboxChange\"] = \"rowSelectionCheckboxChange\";\n  GridEvents[\"pageChange\"] = \"pageChange\";\n  GridEvents[\"pageSizeChange\"] = \"pageSizeChange\";\n  GridEvents[\"rowGroupingModelChange\"] = \"rowGroupingModelChange\";\n  GridEvents[\"aggregationModelChange\"] = \"aggregationModelChange\";\n  GridEvents[\"rowsScroll\"] = \"rowsScroll\";\n  GridEvents[\"rowsScrollEnd\"] = \"rowsScrollEnd\";\n  GridEvents[\"columnSeparatorMouseDown\"] = \"columnSeparatorMouseDown\";\n  GridEvents[\"columnResize\"] = \"columnResize\";\n  GridEvents[\"columnWidthChange\"] = \"columnWidthChange\";\n  GridEvents[\"columnResizeStart\"] = \"columnResizeStart\";\n  GridEvents[\"columnResizeStop\"] = \"columnResizeStop\";\n  GridEvents[\"columnOrderChange\"] = \"columnOrderChange\";\n  GridEvents[\"rowOrderChange\"] = \"rowOrderChange\";\n  GridEvents[\"rowsSet\"] = \"rowsSet\";\n  GridEvents[\"rowExpansionChange\"] = \"rowExpansionChange\";\n  GridEvents[\"sortedRowsSet\"] = \"sortedRowsSet\";\n  GridEvents[\"filteredRowsSet\"] = \"filteredRowsSet\";\n  GridEvents[\"columnsChange\"] = \"columnsChange\";\n  GridEvents[\"detailPanelsExpandedRowIdsChange\"] = \"detailPanelsExpandedRowIdsChange\";\n  GridEvents[\"pinnedColumnsChange\"] = \"pinnedColumnsChange\";\n  GridEvents[\"activeStrategyProcessorChange\"] = \"activeStrategyProcessorChange\";\n  GridEvents[\"strategyAvailabilityChange\"] = \"strategyAvailabilityChange\";\n  GridEvents[\"sortModelChange\"] = \"sortModelChange\";\n  GridEvents[\"filterModelChange\"] = \"filterModelChange\";\n  GridEvents[\"columnVisibilityModelChange\"] = \"columnVisibilityModelChange\";\n  GridEvents[\"stateChange\"] = \"stateChange\";\n  GridEvents[\"columnVisibilityChange\"] = \"columnVisibilityChange\";\n  GridEvents[\"virtualScrollerContentSizeChange\"] = \"virtualScrollerContentSizeChange\";\n  GridEvents[\"virtualScrollerWheel\"] = \"virtualScrollerWheel\";\n  GridEvents[\"virtualScrollerTouchMove\"] = \"virtualScrollerTouchMove\";\n  GridEvents[\"preferencePanelClose\"] = \"preferencePanelClose\";\n  GridEvents[\"preferencePanelOpen\"] = \"preferencePanelOpen\";\n  GridEvents[\"menuOpen\"] = \"menuOpen\";\n  GridEvents[\"menuClose\"] = \"menuClose\";\n  GridEvents[\"renderedRowsIntervalChange\"] = \"renderedRowsIntervalChange\";\n  GridEvents[\"fetchRows\"] = \"fetchRows\";\n})(GridEvents || (GridEvents = {}));\n\nexport { GridEvents };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport const getGridLocalization = (gridTranslations, coreTranslations) => {\n  var _coreTranslations$com, _coreTranslations$com2;\n\n  return {\n    components: {\n      MuiDataGrid: {\n        defaultProps: {\n          localeText: _extends({}, gridTranslations, {\n            MuiTablePagination: (coreTranslations == null ? void 0 : (_coreTranslations$com = coreTranslations.components) == null ? void 0 : (_coreTranslations$com2 = _coreTranslations$com.MuiTablePagination) == null ? void 0 : _coreTranslations$com2.defaultProps) || {}\n          })\n        }\n      }\n    }\n  };\n};","import { arSD as arSDCore } from '@mui/material/locale';\nimport { getGridLocalization } from '../utils/getGridLocalization';\nconst arSDGrid = {\n  // Root\n  noRowsLabel: 'لا توجد صفوف',\n  noResultsOverlayLabel: 'لم يتم العثور على نتائج.',\n  errorOverlayDefaultLabel: 'حدث خطأ.',\n  // Density selector toolbar button text\n  toolbarDensity: 'الكثافة',\n  toolbarDensityLabel: 'الكثافة',\n  toolbarDensityCompact: 'مضغوط',\n  toolbarDensityStandard: 'قياسي',\n  toolbarDensityComfortable: 'مريح',\n  // Columns selector toolbar button text\n  toolbarColumns: 'الأعمدة',\n  toolbarColumnsLabel: 'حدد أعمدة',\n  // Filters toolbar button text\n  toolbarFilters: 'المُرشِحات',\n  toolbarFiltersLabel: 'إظهار المرشِحات',\n  toolbarFiltersTooltipHide: 'إخفاء المرشِحات',\n  toolbarFiltersTooltipShow: 'اظهر المرشِحات',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} من المرشِحات النشطة` : `مرشِح نشط`,\n  // Quick filter toolbar field\n  // toolbarQuickFilterPlaceholder: 'Search…',\n  // toolbarQuickFilterLabel: 'Search',\n  // toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'تصدير',\n  toolbarExportLabel: 'تصدير',\n  toolbarExportCSV: 'تنزيل كملف CSV',\n  // toolbarExportPrint: 'Print',\n  // toolbarExportExcel: 'Download as Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'البحث عن العمود',\n  columnsPanelTextFieldPlaceholder: 'عنوان العمود',\n  columnsPanelDragIconLabel: 'إعادة ترتيب العمود',\n  columnsPanelShowAllButton: 'إظهار الكل',\n  columnsPanelHideAllButton: 'إخفاء الكل',\n  // Filter panel text\n  filterPanelAddFilter: 'إضافة مرشِح',\n  filterPanelDeleteIconLabel: 'حذف',\n  filterPanelLinkOperator: 'عامل منطقي',\n  filterPanelOperators: 'عامل',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'و',\n  filterPanelOperatorOr: 'أو',\n  filterPanelColumns: 'الأعمدة',\n  filterPanelInputLabel: 'القيمة',\n  filterPanelInputPlaceholder: 'ترشِيح قيمة',\n  // Filter operators text\n  filterOperatorContains: 'يحتوي',\n  filterOperatorEquals: 'يساوي',\n  filterOperatorStartsWith: 'يبدأ بـ',\n  filterOperatorEndsWith: 'ينتهي بـ',\n  filterOperatorIs: 'يكون',\n  filterOperatorNot: 'ليس',\n  filterOperatorAfter: 'بعد',\n  filterOperatorOnOrAfter: 'عند أو بعد',\n  filterOperatorBefore: 'بعد',\n  filterOperatorOnOrBefore: 'عند أو قبل',\n  filterOperatorIsEmpty: 'خالي',\n  filterOperatorIsNotEmpty: 'غير خالي',\n  filterOperatorIsAnyOf: 'أي من',\n  // Filter values text\n  filterValueAny: 'أي',\n  filterValueTrue: 'صائب',\n  filterValueFalse: 'خاطئ',\n  // Column menu text\n  columnMenuLabel: 'القائمة',\n  columnMenuShowColumns: 'إظهار الأعمدة',\n  columnMenuFilter: 'المرشِح',\n  columnMenuHideColumn: 'إخفاء',\n  columnMenuUnsort: 'الغاء الفرز',\n  columnMenuSortAsc: 'الفرز تصاعدياً',\n  columnMenuSortDesc: 'الفرز تنازلياً',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} من المرشِحات النشطة` : `مرشِح نشط`,\n  columnHeaderFiltersLabel: 'إظهار المرشحات',\n  columnHeaderSortIconLabel: 'فرز',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `تم تحديد ${count.toLocaleString()} من الصفوف` : `تم تحديد صف واحد`,\n  // Total row amount footer text\n  footerTotalRows: 'إجمالي الصفوف:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} من ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'تحديد خانة الاختيار',\n  checkboxSelectionSelectAllRows: 'تحديد كل الصفوف',\n  checkboxSelectionUnselectAllRows: 'الغاء تحديد كل الصفوف',\n  checkboxSelectionSelectRow: 'تحديد صف',\n  checkboxSelectionUnselectRow: 'الغاء تحديد الصف',\n  // Boolean cell text\n  booleanCellTrueLabel: 'نعم',\n  booleanCellFalseLabel: 'لا',\n  // Actions cell more text\n  actionsCellMore: 'المزيد',\n  // Column pinning text\n  pinToLeft: 'التدبيس يميناً',\n  pinToRight: 'التدبيس يساراً',\n  unpin: 'الغاء التدبيس',\n  // Tree Data\n  treeDataGroupingHeaderName: 'تجميع',\n  treeDataExpand: 'رؤية الأبناء',\n  treeDataCollapse: 'إخفاء الأبناء',\n  // Grouping columns\n  groupingColumnHeaderName: 'تجميع',\n  groupColumn: name => `تجميع حسب ${name}`,\n  unGroupColumn: name => `إيقاف التجميع حسب ${name}`,\n  // Master/detail\n  // detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'توسيع',\n  collapseDetailPanel: 'طوي' // Row reordering text\n  // rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  // aggregationMenuItemHeader: 'Aggregation',\n  // aggregationFunctionLabelSum: 'sum',\n  // aggregationFunctionLabelAvg: 'avg',\n  // aggregationFunctionLabelMin: 'min',\n  // aggregationFunctionLabelMax: 'max',\n  // aggregationFunctionLabelSize: 'size',\n\n};\nexport const arSD = getGridLocalization(arSDGrid, arSDCore);","export const amET = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'መንገድ አሳይ'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'ወደ መጀመሪያው ገጽ ይሂዱ';\n          }\n\n          if (type === 'last') {\n            return 'ወደ መጨረሻው ገጽ ይሂዱ';\n          }\n\n          if (type === 'next') {\n            return 'ወደ ቀጣዩ ገጽ ይሂዱ';\n          } // if (type === 'previous') {\n\n\n          return 'ወደ ቀዳሚው ገጽ ይሂዱ';\n        },\n        labelRowsPerPage: 'ረድፎች በአንድ ገጽ:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}-${to} ከ ${count !== -1 ? count : `${to} በላይ`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ኮከ${value !== 1 ? 'ቦች' : 'ብ'}`,\n        emptyLabelText: 'ባዶ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'አጽዳ',\n        closeText: 'ዝጋ',\n        loadingText: 'በመጫን ላይ…',\n        noOptionsText: 'አማራጮች የሉም',\n        openText: 'ክፈት'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'ዝጋ'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'የገጽ አሰሳ',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ወደ '}ገጽ ${page}${selected ? '' : ' ሂድ'}`;\n          }\n\n          if (type === 'first') {\n            return 'ወደ መጀመሪያው ገጽ ይሂዱ';\n          }\n\n          if (type === 'last') {\n            return 'ወደ መጨረሻው ገጽ ይሂዱ';\n          }\n\n          if (type === 'next') {\n            return 'ወደ ቀጣዩ ገጽ ይሂዱ';\n          } // if (type === 'previous') {\n\n\n          return 'ወደ ቀዳሚው ገጽ ይሂዱ';\n        }\n      }\n    }\n  }\n};\nexport const arEG = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'إظهار المسار'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'انتقل إلى الصفحة الأولى';\n          }\n\n          if (type === 'last') {\n            return 'انتقل إلى الصفحة الأخيرة';\n          }\n\n          if (type === 'next') {\n            return 'انتقل إلى الصفحة التالية';\n          } // if (type === 'previous') {\n\n\n          return 'انتقل إلى الصفحة السابقة';\n        },\n        labelRowsPerPage: 'عدد الصفوف في الصفحة:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} من ${count !== -1 ? count : ` أكثر من${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'نجوم' : 'نجمة'}`,\n        emptyLabelText: 'فارغ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'مسح',\n        closeText: 'إغلاق',\n        loadingText: 'جار التحميل...',\n        noOptionsText: 'لا يوجد خيارات',\n        openText: 'فتح'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'إغلاق'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'التنقل عبر الصفحات',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'انتقل إلى '} صفحة ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'انتقل إلى الصفحة الأولى';\n          }\n\n          if (type === 'last') {\n            return 'انتقل إلى الصفحة الأخيرة';\n          }\n\n          if (type === 'next') {\n            return 'انتقل إلى الصفحة التالية';\n          } // if (type === 'previous') {\n\n\n          return 'انتقل  إلى الصفحة السابقة';\n        }\n      }\n    }\n  }\n};\nexport const arSD = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'إظهار المسار'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'انتقل إلى الصفحة الأولى';\n          }\n\n          if (type === 'last') {\n            return 'انتقل إلى الصفحة الأخيرة';\n          }\n\n          if (type === 'next') {\n            return 'انتقل إلى الصفحة التالية';\n          } // if (type === 'previous') {\n\n\n          return 'انتقل إلى الصفحة السابقة';\n        },\n        labelRowsPerPage: 'عدد الصفوف في الصفحة:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} من ${count !== -1 ? count : ` أكثر من${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'نجوم' : 'نجمة'}`,\n        emptyLabelText: 'فارغ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'مسح',\n        closeText: 'إغلاق',\n        loadingText: 'جار التحميل...',\n        noOptionsText: 'لا يوجد خيارات',\n        openText: 'فتح'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'إغلاق'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'التنقل عبر الصفحات',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'انتقل إلى '} صفحة ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'انتقل إلى الصفحة الأولى';\n          }\n\n          if (type === 'last') {\n            return 'انتقل الي الصفحة الأخيرة';\n          }\n\n          if (type === 'next') {\n            return 'انتقل إلى الصفحة التالية';\n          } // if (type === 'previous') {\n\n\n          return 'انتقل إلى الصفحة السابقة';\n        }\n      }\n    }\n  }\n};\nexport const azAZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Yolu göstər'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Birinci səhifəyə keç';\n          }\n\n          if (type === 'last') {\n            return 'Sonuncu səhifəyə keç';\n          }\n\n          if (type === 'next') {\n            return 'Növbəti səhifəyə keç';\n          } // if (type === 'previous') {\n\n\n          return 'Əvvəlki səhifəyə keç';\n        },\n        labelRowsPerPage: 'Səhifəyə düşən sətrlər:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} dən ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'Ulduz';\n          const lastDigit = value % 10;\n\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Ulduzlar';\n          }\n\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Boş'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Silmək',\n        closeText: 'Bağlamaq',\n        loadingText: 'Yüklənir…',\n        noOptionsText: 'Seçimlər mövcud deyil',\n        openText: 'Открыть'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Bağlamaq'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Səhifənin naviqasiyası',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page} ${selected ? 'səhifə' : 'səhifəyə keç'}`;\n          }\n\n          if (type === 'first') {\n            return 'Birinci səhifəyə keç';\n          }\n\n          if (type === 'last') {\n            return 'Sonuncu səhifəyə keç';\n          }\n\n          if (type === 'next') {\n            return 'Növbəti səhifəyə keç';\n          } // if (type === 'previous') {\n\n\n          return 'Əvvəlki səhifəyə keç';\n        }\n      }\n    }\n  }\n};\nexport const bnBD = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'পথ দেখান'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'প্রথম পৃষ্ঠায় যান';\n          }\n\n          if (type === 'last') {\n            return 'শেষ পৃষ্ঠায় যান';\n          }\n\n          if (type === 'next') {\n            return 'পরবর্তী পৃষ্ঠায় যান';\n          } // if (type === 'previous') {\n\n\n          return 'আগের পৃষ্ঠায় যান';\n        },\n        labelRowsPerPage: 'প্রতি পৃষ্ঠায় সারি:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} / ${count !== -1 ? count : `${to} থেকে বেশি`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} স্টার`,\n        emptyLabelText: 'খালি'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'পরিষ্কার করুন',\n        closeText: 'বন্ধ করুন',\n        loadingText: 'লোড হচ্ছে…',\n        noOptionsText: 'কোন অপশন নেই',\n        openText: 'ওপেন করুন'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'বন্ধ করুন'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'পেজিনেশন নেভিগেশন',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'যান '}পৃষ্ঠা ${page}-এ`;\n          }\n\n          if (type === 'first') {\n            return 'প্রথম পৃষ্ঠায় যান';\n          }\n\n          if (type === 'last') {\n            return 'শেষ পৃষ্ঠায় যান';\n          }\n\n          if (type === 'next') {\n            return 'পরবর্তী পৃষ্ঠায় যান';\n          } // if (type === 'previous') {\n\n\n          return 'আগের পৃষ্ঠায় যান';\n        }\n      }\n    }\n  }\n};\nexport const bgBG = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показване на пътя'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Отиди на първата страница';\n          }\n\n          if (type === 'last') {\n            return 'Отиди на последната страница';\n          }\n\n          if (type === 'next') {\n            return 'Отиди на следващата страница';\n          } // if (type === 'previous') {\n\n\n          return 'Отиди на предишната страница';\n        },\n        labelRowsPerPage: 'Редове на страница:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} от ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Звезд${value !== 1 ? 'и' : 'а'}`,\n        emptyLabelText: 'Изчисти'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Изчисти',\n        closeText: 'Затвори',\n        loadingText: 'Зареждане…',\n        noOptionsText: 'Няма налични опции',\n        openText: 'Отвори'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Затвори'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Пагинация',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Към '}страница ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Отиди на първата страница';\n          }\n\n          if (type === 'last') {\n            return 'Отиди на последната страница';\n          }\n\n          if (type === 'next') {\n            return 'Отиди на следващата страница';\n          } // if (type === 'previous') {\n\n\n          return 'Отиди на предишната страница';\n        }\n      }\n    }\n  }\n};\nexport const caES = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //    expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Files per pàgina:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} de ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'Estrelles' : 'Estrella'}`,\n        emptyLabelText: 'Buit'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Netejar',\n        closeText: 'Tancar',\n        loadingText: 'Carregant…',\n        noOptionsText: 'Sense opcions',\n        openText: 'Obert'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Tancat'\n      }\n    } // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n\n  }\n};\nexport const csCZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Ukázat cestu'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Jít na první stránku';\n          }\n\n          if (type === 'last') {\n            return 'Jít na poslední stránku';\n          }\n\n          if (type === 'next') {\n            return 'Jít na další stránku';\n          } // if (type === 'previous') {\n\n\n          return 'Jít na předchozí stránku';\n        },\n        labelRowsPerPage: 'Řádků na stránce:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} z ${count !== -1 ? count : `více než ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          if (value === 1) {\n            return `${value} hvězdička`;\n          }\n\n          if (value >= 2 && value <= 4) {\n            return `${value} hvězdičky`;\n          }\n\n          return `${value} hvězdiček`;\n        },\n        emptyLabelText: 'Prázdné'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vymazat',\n        closeText: 'Zavřít',\n        loadingText: 'Načítání…',\n        noOptionsText: 'Žádné možnosti',\n        openText: 'Otevřít'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zavřít'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigace stránkováním',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Jít na '}${page}. stránku`;\n          }\n\n          if (type === 'first') {\n            return 'Jít na první stránku';\n          }\n\n          if (type === 'last') {\n            return 'Jít na poslední stránku';\n          }\n\n          if (type === 'next') {\n            return 'Jít na další stránku';\n          } // if (type === 'previous') {\n\n\n          return 'Jít na předchozí stránku';\n        }\n      }\n    }\n  }\n};\nexport const daDK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Vis sti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Gå til den første side';\n          }\n\n          if (type === 'last') {\n            return 'Gå til den sidste side';\n          }\n\n          if (type === 'next') {\n            return 'Gå til den næste side';\n          } // if (type === 'previous') {\n\n\n          return 'Gå til den forrige side';\n        },\n        labelRowsPerPage: 'Rækker pr side:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}-${to} af ${count !== -1 ? count : `mere end ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Stjern${value !== 1 ? 'er' : ''}`,\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Slet',\n        closeText: 'Luk',\n        loadingText: 'Indlæser…',\n        noOptionsText: 'Ingen muligheder',\n        openText: 'Åben'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Luk'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sideinddelings navigation',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Go to '}page ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Gå til den første side';\n          }\n\n          if (type === 'last') {\n            return 'Gå til den sidste side';\n          }\n\n          if (type === 'next') {\n            return 'Gå til den næste side';\n          } // if (type === 'previous') {\n\n\n          return 'Gå til den forrige side';\n        }\n      }\n    }\n  }\n};\nexport const deDE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pfad anzeigen'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Zur ersten Seite';\n          }\n\n          if (type === 'last') {\n            return 'Zur letzten Seite';\n          }\n\n          if (type === 'next') {\n            return 'Zur nächsten Seite';\n          } // if (type === 'previous') {\n\n\n          return 'Zur vorherigen Seite';\n        },\n        labelRowsPerPage: 'Zeilen pro Seite:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} von ${count !== -1 ? count : `mehr als ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'Sterne' : 'Stern'}`,\n        emptyLabelText: 'Keine Wertung'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Leeren',\n        closeText: 'Schließen',\n        loadingText: 'Wird geladen…',\n        noOptionsText: 'Keine Optionen',\n        openText: 'Öffnen'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Schließen'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigation via Seitennummerierung',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Gehe zu '}Seite ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Zur ersten Seite';\n          }\n\n          if (type === 'last') {\n            return 'Zur letzten Seite';\n          }\n\n          if (type === 'next') {\n            return 'Zur nächsten Seite';\n          } // if (type === 'previous') {\n\n\n          return 'Zur vorherigen Seite';\n        }\n      }\n    }\n  }\n};\nexport const elGR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Εμφάνιση διαδρομής'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Πρώτη σελίδα';\n          }\n\n          if (type === 'last') {\n            return 'Τελευταία σελίδα';\n          }\n\n          if (type === 'next') {\n            return 'Επόμενη σελίδα';\n          } // if (type === \"previous\") {\n\n\n          return 'Προηγούμενη σελίδα';\n        },\n        labelRowsPerPage: 'Γραμμές ανα σελίδα:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} από ${count !== -1 ? count : `πάνω από ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Αστέρι${value !== 1 ? 'α' : ''}`,\n        emptyLabelText: 'Χωρίς βαθμολόγηση'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Καθαρισμός',\n        closeText: 'Κλείσιμο',\n        loadingText: 'Φόρτωση…',\n        noOptionsText: 'Δεν υπάρχουν επιλογές',\n        openText: 'Άνοιγμα'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Κλείσιμο'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Πλοήγηση σε σελίδες',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Μετάβαση '}σελίδα ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Πρώτη σελίδα';\n          }\n\n          if (type === 'last') {\n            return 'Τελευταία σελίδα';\n          }\n\n          if (type === 'next') {\n            return 'Επόμενη σελίδα';\n          } // if (type === \"previous\") {\n\n\n          return 'Προηγούμενη σελίδα';\n        }\n      }\n    }\n  }\n}; // default\n\nexport const enUS = {\n  /*\n  components: {\n    MuiBreadcrumbs: { defaultProps: {\n      expandText: 'Show path',\n    }},\n    MuiTablePagination: { defaultProps: {\n      getItemAriaLabel: (type) => {\n        if (type === 'first') {\n          return 'Go to first page';\n        }\n        if (type === 'last') {\n          return 'Go to last page';\n        }\n        if (type === 'next') {\n          return 'Go to next page';\n        }\n        // if (type === 'previous') {\n        return 'Go to previous page';\n      },\n      labelRowsPerPage: 'Rows per page:',\n      labelDisplayedRows: ({ from, to, count }) =>\n  `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`,\n    }},\n    MuiRating: { defaultProps: {\n      getLabelText: value => `${value} Star${value !== 1 ? 's' : ''}`,\n      emptyLabelText: 'Empty',\n    }},\n    MuiAutocomplete: { defaultProps: {\n      clearText: 'Clear',\n      closeText: 'Close',\n      loadingText: 'Loading…',\n      noOptionsText: 'No options',\n      openText: 'Open',\n    }},\n    MuiAlert: { defaultProps: {\n      closeText: 'Close',\n    }},\n    MuiPagination: {  defaultProps: {\n      'aria-label': 'Pagination navigation',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Go to '}page ${page}`;\n        }\n        if (type === 'first') {\n          return 'Go to first page';\n        }\n        if (type === 'last') {\n          return 'Go to last page';\n        }\n        if (type === 'next') {\n          return 'Go to next page';\n        }\n        // if (type === 'previous') {\n        return 'Go to previous page';\n      },\n    }},\n  },\n  */\n};\nexport const esES = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar ruta'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ir a la primera página';\n          }\n\n          if (type === 'last') {\n            return 'Ir a la última página';\n          }\n\n          if (type === 'next') {\n            return 'Ir a la página siguiente';\n          } // if (type === 'previous') {\n\n\n          return 'Ir a la página anterior';\n        },\n        labelRowsPerPage: 'Filas por página:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} de ${count !== -1 ? count : `más de ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Estrella${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vacío'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpiar',\n        closeText: 'Cerrar',\n        loadingText: 'Cargando…',\n        noOptionsText: 'Sin opciones',\n        openText: 'Abierto'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Cerrar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Paginador',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ir a la '}página ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Ir a la primera página';\n          }\n\n          if (type === 'last') {\n            return 'Ir a la última página';\n          }\n\n          if (type === 'next') {\n            return 'Ir a la página siguiente';\n          } // if (type === 'previous') {\n\n\n          return 'Ir a la página anterior';\n        }\n      }\n    }\n  }\n};\nexport const etEE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Näita teed'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Vali esimene lehekülg';\n          }\n\n          if (type === 'last') {\n            return 'Vali viimane lehekülg';\n          }\n\n          if (type === 'next') {\n            return 'Vali järgmine lehekülg';\n          } // if (type === 'previous') {\n\n\n          return 'Vali eelmine lehekülg';\n        },\n        labelRowsPerPage: 'Ridu leheküljel:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} / ${count !== -1 ? count : `rohkem kui ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Tärn${value !== 1 ? 'i' : ''}`,\n        emptyLabelText: 'Tühi'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tühjenda',\n        closeText: 'Sulge',\n        loadingText: 'Laen…',\n        noOptionsText: 'Valikuid ei ole',\n        openText: 'Ava'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sulge'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Lehekülgede valik',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Vali '}lehekülg ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Vali esimene lehekülg';\n          }\n\n          if (type === 'last') {\n            return 'Vali viimane lehekülg';\n          }\n\n          if (type === 'next') {\n            return 'Vali järgmine lehekülg';\n          } // if (type === 'previous') {\n\n\n          return 'Vali eelmine lehekülg';\n        }\n      }\n    }\n  }\n};\nexport const faIR = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'نمایش مسیر'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'رفتن به اولین صفحه';\n          }\n\n          if (type === 'last') {\n            return 'رفتن به آخرین صفحه';\n          }\n\n          if (type === 'next') {\n            return 'رفتن به صفحه‌ی بعدی';\n          } // if (type === 'previous') {\n\n\n          return 'رفتن به صفحه‌ی قبلی';\n        },\n        labelRowsPerPage: 'تعداد سطرهای هر صفحه:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} از ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ستاره`,\n        emptyLabelText: 'خالی'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'پاک‌کردن',\n        closeText: 'بستن',\n        loadingText: 'در حال بارگذاری…',\n        noOptionsText: 'بی‌نتیجه',\n        openText: 'بازکردن'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'بستن'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ناوبری صفحه',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'رفتن به '}صفحهٔ ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'رفتن به اولین صفحه';\n          }\n\n          if (type === 'last') {\n            return 'رفتن به آخرین صفحه';\n          }\n\n          if (type === 'next') {\n            return 'رفتن به صفحه‌ی بعدی';\n          } // if (type === 'previous') {\n\n\n          return 'رفتن به صفحه‌ی قبلی';\n        }\n      }\n    }\n  }\n};\nexport const fiFI = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Näytä reitti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Mene ensimmäiselle sivulle';\n          }\n\n          if (type === 'last') {\n            return 'Mene viimeiselle sivulle';\n          }\n\n          if (type === 'next') {\n            return 'Mene seuraavalle sivulle';\n          } // if (type === 'previous') {\n\n\n          return 'Mene edelliselle sivulle';\n        },\n        labelRowsPerPage: 'Rivejä per sivu:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} / ${count !== -1 ? count : `enemmän kuin ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Täht${value !== 1 ? 'eä' : 'i'}`,\n        emptyLabelText: 'Tyhjä'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tyhjennä',\n        closeText: 'Sulje',\n        loadingText: 'Ladataan…',\n        noOptionsText: 'Ei valintoja',\n        openText: 'Avaa'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sulje'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sivutus navigaatio',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? 'sivu' : 'Mene sivulle'} ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Mene ensimmäiselle sivulle';\n          }\n\n          if (type === 'last') {\n            return 'Mene viimeiselle sivulle';\n          }\n\n          if (type === 'next') {\n            return 'Mene seuraavalle sivulle';\n          } // if (type === 'previous') {\n\n\n          return 'Mene edelliselle sivulle';\n        }\n      }\n    }\n  }\n};\nexport const frFR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Montrer le chemin'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Aller à la première page';\n          }\n\n          if (type === 'last') {\n            return 'Aller à la dernière page';\n          }\n\n          if (type === 'next') {\n            return 'Aller à la page suivante';\n          } // if (type === 'previous') {\n\n\n          return 'Aller à la page précédente';\n        },\n        labelRowsPerPage: 'Lignes par page :',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} sur ${count !== -1 ? count : `plus que ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Etoile${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vide'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vider',\n        closeText: 'Fermer',\n        loadingText: 'Chargement…',\n        noOptionsText: 'Pas de résultats',\n        openText: 'Ouvrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fermer'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'navigation de pagination',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Aller à la '}page ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Aller à la première page';\n          }\n\n          if (type === 'last') {\n            return 'Aller à la dernière page';\n          }\n\n          if (type === 'next') {\n            return 'Aller à la page suivante';\n          } // if (type === 'previous') {\n\n\n          return 'Aller à la page précédente';\n        }\n      }\n    }\n  }\n};\nexport const heIL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'הצג נתיב'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'לעמוד הראשון';\n          }\n\n          if (type === 'last') {\n            return 'לעמוד האחרון';\n          }\n\n          if (type === 'next') {\n            return 'לעמוד הבא';\n          } // if (type === 'previous') {\n\n\n          return 'לעמוד הקודם';\n        },\n        labelRowsPerPage: 'שורות בעמוד:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} מתוך ${count !== -1 ? count : `יותר מ ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} כוכב${value !== 1 ? 'ים' : ''}`,\n        emptyLabelText: 'ריק'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'נקה',\n        closeText: 'סגור',\n        loadingText: 'טוען…',\n        noOptionsText: 'אין אופציות',\n        openText: 'פתח'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'סגור'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ניווט בעמודים',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ל '}עמוד ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'לעמוד הראשון';\n          }\n\n          if (type === 'last') {\n            return 'לעמוד האחרון';\n          }\n\n          if (type === 'next') {\n            return 'לעמוד הבא';\n          } // if (type === 'previous') {\n\n\n          return 'לעמוד הקודם';\n        }\n      }\n    }\n  }\n};\nexport const hiIN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'रास्ता दिखायें'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'पहले पृष्ठ पर जाएँ';\n          }\n\n          if (type === 'last') {\n            return 'अंतिम पृष्ठ पर जाएँ';\n          }\n\n          if (type === 'next') {\n            return 'अगले पृष्ठ पर जाएँ';\n          } // if (type === 'previous') {\n\n\n          return 'पिछले पृष्ठ पर जाएँ';\n        },\n        labelRowsPerPage: 'पंक्तियाँ प्रति पृष्ठ:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}-${to === -1 ? count : to} कुल ${count} में`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} तार${value !== 1 ? 'े' : 'ा'}`,\n        emptyLabelText: 'रिक्त'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'हटायें',\n        closeText: 'बंद करें',\n        loadingText: 'लोड हो रहा है…',\n        noOptionsText: 'कोई विकल्प नहीं',\n        openText: 'खोलें'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'बंद करें'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'पृस्ठानुसार संचालन',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `पृष्ठ ${page} ${selected ? '' : ' पर जाएँ'}`;\n          }\n\n          if (type === 'first') {\n            return 'पहले पृष्ठ पर जाएँ';\n          }\n\n          if (type === 'last') {\n            return 'अंतिम पृष्ठ पर जाएँ';\n          }\n\n          if (type === 'next') {\n            return 'अगले पृष्ठ पर जाएँ';\n          } // if (type === 'previous') {\n\n\n          return 'पिछले पृष्ठ पर जाएँ';\n        }\n      }\n    }\n  }\n}; // Croatian - Hrvatski\n\nexport const hrHR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pokaži putanju'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n\n          if (type === 'last') {\n            return 'Idi na posljednju stranicu';\n          }\n\n          if (type === 'next') {\n            return 'Idi na sljedeću stranicu';\n          } // if (type === 'previous') {\n\n\n          return 'Idi na prethodnu stranicu';\n        },\n        labelRowsPerPage: 'Redova po stranici:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} od ${count !== -1 ? count : `više nego ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          const lastDigit = value % 10;\n          const lastTwoDigits = value % 100;\n\n          if ([2, 3, 4].includes(lastDigit) && ![12, 13, 14].includes(lastTwoDigits)) {\n            return 'Zvijezde';\n          }\n\n          return 'Zvijezda';\n        },\n        emptyLabelText: 'Prazno'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Briši',\n        closeText: 'Zatvori',\n        loadingText: 'Učitavanje…',\n        noOptionsText: 'Nema opcija',\n        openText: 'Otvori'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zatvori'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigacija po stranicama',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Idi na '}stranicu ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n\n          if (type === 'last') {\n            return 'Idi na zadnju stranicu';\n          }\n\n          if (type === 'next') {\n            return 'Idi na sljedeću stranicu';\n          } // if (type === 'previous') {\n\n\n          return 'Idi na prethodnu stranicu';\n        }\n      }\n    }\n  }\n};\nexport const huHU = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Útvonal'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Első oldalra';\n          }\n\n          if (type === 'last') {\n            return 'Utolsó oldalra';\n          }\n\n          if (type === 'next') {\n            return 'Következő oldalra';\n          } // if (type === 'previous') {\n\n\n          return 'Előző oldalra';\n        },\n        labelRowsPerPage: 'Sorok száma:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Csillag`,\n        emptyLabelText: 'Üres'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Törlés',\n        closeText: 'Bezárás',\n        loadingText: 'Töltés…',\n        noOptionsText: 'Nincs találat',\n        openText: 'Megnyitás'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Bezárás'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Lapozás',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page}. oldal${selected ? '' : 'ra'}`;\n          }\n\n          if (type === 'first') {\n            return 'Első oldalra';\n          }\n\n          if (type === 'last') {\n            return 'Utolsó oldalra';\n          }\n\n          if (type === 'next') {\n            return 'Következő oldalra';\n          } // if (type === 'previous') {\n\n\n          return 'Előző oldalra';\n        }\n      }\n    }\n  }\n};\nexport const hyAM = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Տողեր մեկ էջում`' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Աստղ`,\n        emptyLabelText: 'Դատարկ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Մաքրել',\n        closeText: 'Փակել',\n        loadingText: 'Բեռնում…',\n        noOptionsText: 'Տարբերակներ չկան',\n        openText: 'Բացել'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Փակել'\n      }\n    } // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n\n  }\n};\nexport const idID = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Baris per halaman:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} dari ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Bintang` // emptyLabelText: 'Empty',\n\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Hapus',\n        closeText: 'Tutup',\n        loadingText: 'Memuat…',\n        noOptionsText: 'Tidak ada opsi',\n        openText: 'Buka'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Tutup'\n      }\n    } // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n\n  }\n};\nexport const isIS = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //    expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Raðir á síðu:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} af ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value === 1 ? 'Stjarna' : 'Stjörnur'}`,\n        emptyLabelText: 'Tómt'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Hreinsa',\n        closeText: 'Loka',\n        loadingText: 'Hlaða…',\n        noOptionsText: 'Engar niðurstöður',\n        openText: 'Opna'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Loka'\n      }\n    } // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n\n  }\n};\nexport const itIT = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Visualizza percorso'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Vai alla prima pagina';\n          }\n\n          if (type === 'last') {\n            return \"Vai all'ultima pagina\";\n          }\n\n          if (type === 'next') {\n            return 'Vai alla pagina successiva';\n          } // if (type === 'previous') {\n\n\n          return 'Vai alla pagina precedente';\n        },\n        labelRowsPerPage: 'Righe per pagina:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} di ${count !== -1 ? count : `più di ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Stell${value !== 1 ? 'e' : 'a'}`,\n        emptyLabelText: 'Vuoto'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Svuota',\n        closeText: 'Chiudi',\n        loadingText: 'Caricamento in corso…',\n        noOptionsText: 'Nessuna opzione',\n        openText: 'Apri'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Chiudi'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigazione impaginata',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Vai alla '}pagina ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Vai alla prima pagina';\n          }\n\n          if (type === 'last') {\n            return \"Vai all'ultima pagina\";\n          }\n\n          if (type === 'next') {\n            return 'Vai alla pagina successiva';\n          } // if (type === 'previous') {\n\n\n          return 'Vai alla pagina precedente';\n        }\n      }\n    }\n  }\n};\nexport const jaJP = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'すべて表示'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '最初のページへ';\n          }\n\n          if (type === 'last') {\n            return '最後のページへ';\n          }\n\n          if (type === 'next') {\n            return '次のページへ';\n          } // if (type === 'previous') {\n\n\n          return '前のページへ';\n        },\n        labelRowsPerPage: 'ページあたりの行数:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}～${to} / ${count !== -1 ? count : `${to}以上`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `星${value}`,\n        emptyLabelText: '星なし'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'クリア',\n        closeText: '閉じる',\n        loadingText: '読み込み中…',\n        noOptionsText: 'データがありません',\n        openText: '開く'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '閉じる'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ページ選択',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `ページ${page}${selected ? '' : 'へ'}`;\n          }\n\n          if (type === 'first') {\n            return '最初のページへ';\n          }\n\n          if (type === 'last') {\n            return '最後のページへ';\n          }\n\n          if (type === 'next') {\n            return '次のページへ';\n          } // if (type === 'previous') {\n\n\n          return '前のページへ';\n        }\n      }\n    }\n  }\n};\nexport const khKH = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'បង្ហាញផ្លូវ'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'ទៅទំព័រដំបូង';\n          }\n\n          if (type === 'last') {\n            return 'ទៅទំព័រចុងក្រោយ';\n          }\n\n          if (type === 'next') {\n            return 'ទៅទំព័របន្ទាប់';\n          } // if (type === 'previous') {\n\n\n          return 'ទៅទំព័រមុន';\n        },\n        labelRowsPerPage: 'ចំនួនជួរដេកក្នុងមួយទំព័រ:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from} - ${to} នៃ ${count !== -1 ? count : `ច្រើនជាង ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ផ្កាយ${value !== 1 ? '' : ''}`,\n        emptyLabelText: 'ទទេ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'លុបចោល',\n        closeText: 'បិទ',\n        loadingText: 'កំពុងលោត…',\n        noOptionsText: 'គ្មានជម្រើស',\n        openText: 'បើក'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'បិទ'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'រុករកទំព័រ',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ទៅ '}ទំព័រ ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'ទៅទំព័រដំបូង';\n          }\n\n          if (type === 'last') {\n            return 'ទៅទំព័រចុងក្រោយ';\n          }\n\n          if (type === 'next') {\n            return 'ទៅទំព័របន្ទាប់';\n          } // if (type === 'previous') {\n\n\n          return 'ទៅទំព័រមុន';\n        }\n      }\n    }\n  }\n};\nexport const koKR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '경로 보기'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '첫 번째 페이지로 이동';\n          }\n\n          if (type === 'last') {\n            return '마지막 페이지로 이동';\n          }\n\n          if (type === 'next') {\n            return '다음 페이지로 이동';\n          } // if (type === 'previous') {\n\n\n          return '이전 페이지로 이동';\n        },\n        labelRowsPerPage: '페이지 당 행:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} / ${count !== -1 ? count : `${to}개 이상`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 점`,\n        emptyLabelText: '빈 텍스트'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '지우기',\n        closeText: '닫기',\n        loadingText: '불러오는 중…',\n        noOptionsText: '옵션 없음',\n        openText: '열기'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '닫기'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': '페이지네이션 네비게이션',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page} 번째 페이지${selected ? '' : '로 이동'}`;\n          }\n\n          if (type === 'first') {\n            return '첫 번째 페이지로 이동';\n          }\n\n          if (type === 'last') {\n            return '마지막 페이지로 이동';\n          }\n\n          if (type === 'next') {\n            return '다음 페이지로 이동';\n          } // if (type === 'previous') {\n\n\n          return '이전 페이지로 이동';\n        }\n      }\n    }\n  }\n};\nexport const kzKZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Толық жолды көрсету'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Бірінші бетке өту';\n          }\n\n          if (type === 'last') {\n            return 'Соңғы бетке өту';\n          }\n\n          if (type === 'next') {\n            return 'Келесі бетке өту';\n          } // if (type === 'previous') {\n\n\n          return 'Алдыңғы бетке өту';\n        },\n        labelRowsPerPage: 'Беттегі қатарлар:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${count !== -1 ? count : `+${to}`} қатардың ішінен ${from}–${to}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} жұлдыз`,\n        emptyLabelText: 'Рейтинг жоқ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Тазарту',\n        closeText: 'Жабу',\n        loadingText: 'Жүктелуде…',\n        noOptionsText: 'Қол жетімді нұсқалар жоқ',\n        openText: 'Ашу'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Жабу'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Беттерді шарлау',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            if (selected) {\n              return `${page} — бет`;\n            }\n\n            return `${page} — бетке өту`;\n          }\n\n          if (type === 'first') {\n            return 'Бірінші бетке өту';\n          }\n\n          if (type === 'last') {\n            return 'Соңғы бетке өту';\n          }\n\n          if (type === 'next') {\n            return 'Келесі бетке өту';\n          } // if (type === 'previous') {\n\n\n          return 'Алдыңғы бетке өту';\n        }\n      }\n    }\n  }\n}; // Macedonian - Македонски\n\nexport const mkMK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Прикажи патека'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Оди на прва страница';\n          }\n\n          if (type === 'last') {\n            return 'Оди на последна страница';\n          }\n\n          if (type === 'next') {\n            return 'Оди на следна страница';\n          } // if (type === 'previous') {\n\n\n          return 'Оди на предходна страница';\n        },\n        labelRowsPerPage: 'Редови по страница:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} од ${count !== -1 ? count : `повеќе од ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          const lastDigit = value % 10;\n          return `${value} Ѕвезд${lastDigit === 1 ? 'а' : 'и'}`;\n        },\n        emptyLabelText: 'Празно'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Избриши',\n        closeText: 'Затвори',\n        loadingText: 'Се презема',\n        noOptionsText: 'Нема опција',\n        openText: 'Отвори'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Затвори'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навигација низ страници',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Оди на '}страница ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Оди на прва страница';\n          }\n\n          if (type === 'last') {\n            return 'Оди на последна страница';\n          }\n\n          if (type === 'next') {\n            return 'Оди на следна страница';\n          } // if (type === 'previous') {\n\n\n          return 'Оди на предходна страница';\n        }\n      }\n    }\n  }\n};\nexport const nbNO = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Vis sti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Gå til første side';\n          }\n\n          if (type === 'last') {\n            return 'Gå til siste side';\n          }\n\n          if (type === 'next') {\n            return 'Gå til neste side';\n          } // if (type === 'previous') {\n\n\n          return 'Gå til forrige side';\n        },\n        labelRowsPerPage: 'Rader per side:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} av ${count !== -1 ? count : `mer enn ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Stjerne${value !== 1 ? 'r' : ''}`,\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tøm',\n        closeText: 'Lukk',\n        loadingText: 'Laster inn…',\n        noOptionsText: 'Ingen alternativer',\n        openText: 'Åpne'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Lukk'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Paginering navigasjon',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Gå til '}side ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Gå til første side';\n          }\n\n          if (type === 'last') {\n            return 'Gå til siste side';\n          }\n\n          if (type === 'next') {\n            return 'Gå til neste side';\n          } // if (type === 'previous') {\n\n\n          return 'Gå til forrige side';\n        }\n      }\n    }\n  }\n};\nexport const nlNL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pad tonen'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ga naar eerste pagina';\n          }\n\n          if (type === 'last') {\n            return 'Ga naar laatste pagina';\n          }\n\n          if (type === 'next') {\n            return 'Ga naar volgende pagina';\n          } // if (type === 'previous') {\n\n\n          return 'Ga naar vorige pagina';\n        },\n        labelRowsPerPage: 'Regels per pagina:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} van ${count !== -1 ? count : `meer dan ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Ster${value !== 1 ? 'ren' : ''}`,\n        emptyLabelText: 'Leeg'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Wissen',\n        closeText: 'Sluiten',\n        loadingText: 'Laden…',\n        noOptionsText: 'Geen opties',\n        openText: 'Openen'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sluiten'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigatie via paginering',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ga naar '}pagina ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Ga naar eerste pagina';\n          }\n\n          if (type === 'last') {\n            return 'Ga naar laatste pagina';\n          }\n\n          if (type === 'next') {\n            return 'Ga naar volgende pagina';\n          } // if (type === 'previous') {\n\n\n          return 'Ga naar vorige pagina';\n        }\n      }\n    }\n  }\n};\nexport const plPL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pokaż ścieżkę'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Przejdź do pierwszej strony';\n          }\n\n          if (type === 'last') {\n            return 'Przejdź do ostatniej strony';\n          }\n\n          if (type === 'next') {\n            return 'Przejdź do następnej strony';\n          } // if (type === 'previous') {\n\n\n          return 'Przejdź do poprzedniej strony';\n        },\n        labelRowsPerPage: 'Wierszy na stronę:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} z ${count !== -1 ? count : `ponad ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'gwiazdek';\n          const lastDigit = value % 10;\n\n          if ((value < 10 || value > 20) && lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'gwiazdki';\n          } else if (value === 1) {\n            pluralForm = 'gwiazdka';\n          }\n\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Brak gwiazdek'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Wyczyść',\n        closeText: 'Zamknij',\n        loadingText: 'Ładowanie…',\n        noOptionsText: 'Brak opcji',\n        openText: 'Otwórz'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zamknij'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Nawigacja podziału na strony',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return selected ? `${page}. strona` : `Przejdź do ${page}. strony`;\n          }\n\n          if (type === 'first') {\n            return 'Przejdź do pierwszej strony';\n          }\n\n          if (type === 'last') {\n            return 'Przejdź do ostatniej strony';\n          }\n\n          if (type === 'next') {\n            return 'Przejdź do następnej strony';\n          } // if (type === 'previous') {\n\n\n          return 'Przejdź do poprzedniej strony';\n        }\n      }\n    }\n  }\n};\nexport const ptBR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar caminho'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ir para a primeira página';\n          }\n\n          if (type === 'last') {\n            return 'Ir para a última página';\n          }\n\n          if (type === 'next') {\n            return 'Ir para a próxima página';\n          } // if (type === 'previous') {\n\n\n          return 'Ir para a página anterior';\n        },\n        labelRowsPerPage: 'Linhas por página:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} de ${count !== -1 ? count : `mais de ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Estrela${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vazio'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpar',\n        closeText: 'Fechar',\n        loadingText: 'Carregando…',\n        noOptionsText: 'Sem opções',\n        openText: 'Abrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fechar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navegar pela paginação',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ir para a '}página ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Ir para a primeira página';\n          }\n\n          if (type === 'last') {\n            return 'Ir para a última página';\n          }\n\n          if (type === 'next') {\n            return 'Ir para a próxima página';\n          } // if (type === 'previous') {\n\n\n          return 'Ir para a página anterior';\n        }\n      }\n    }\n  }\n};\nexport const ptPT = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar caminho'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Primeira página';\n          }\n\n          if (type === 'last') {\n            return 'Última página';\n          }\n\n          if (type === 'next') {\n            return 'Próxima página';\n          } // if (type === 'previous') {\n\n\n          return 'Página anterior';\n        },\n        labelRowsPerPage: 'Linhas por página:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} de ${count !== -1 ? count : `mais de ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Estrela${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vazio'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpar',\n        closeText: 'Fechar',\n        loadingText: 'A carregar…',\n        noOptionsText: 'Sem opções',\n        openText: 'Abrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fechar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navegar por páginas',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ir para a '}página ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Primeira página';\n          }\n\n          if (type === 'last') {\n            return 'Última página';\n          }\n\n          if (type === 'next') {\n            return 'Próxima página';\n          } // if (type === 'previous') {\n\n\n          return 'Página anterior';\n        }\n      }\n    }\n  }\n};\nexport const roRO = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Arată calea'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Mergi la prima pagină';\n          }\n\n          if (type === 'last') {\n            return 'Mergi la ultima pagină';\n          }\n\n          if (type === 'next') {\n            return 'Mergi la pagina următoare';\n          } // if (type === 'previous') {\n\n\n          return 'Mergi la pagina precedentă';\n        },\n        labelRowsPerPage: 'Rânduri pe pagină:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} din ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} St${value !== 1 ? 'ele' : 'ea'}`,\n        emptyLabelText: 'Gol'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Șterge',\n        closeText: 'Închide',\n        loadingText: 'Se încarcă…',\n        noOptionsText: 'Nicio opțiune',\n        openText: 'Deschide'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Închide'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigare prin paginare',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Mergi la '}pagina ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Mergi la prima pagină';\n          }\n\n          if (type === 'last') {\n            return 'Mergi la ultima pagină';\n          }\n\n          if (type === 'next') {\n            return 'Mergi la pagina următoare';\n          } // if (type === 'previous') {\n\n\n          return 'Mergi la pagina precedentă';\n        }\n      }\n    }\n  }\n}; // Serbian - Srpski\n\nexport const srRS = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pokaži putanju'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n\n          if (type === 'last') {\n            return 'Idi na poslednju stranicu';\n          }\n\n          if (type === 'next') {\n            return 'Idi na sledeću stranicu';\n          } // if (type === 'previous') {\n\n\n          return 'Idi na prethodnu stranicu';\n        },\n        labelRowsPerPage: 'Redova po stranici:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} od ${count !== -1 ? count : `više nego ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          const lastDigit = value % 10;\n          const lastTwoDigits = value % 100;\n\n          if ([2, 3, 4].includes(lastDigit) && ![12, 13, 14].includes(lastTwoDigits)) {\n            return 'Zvezde';\n          }\n\n          return 'Zvezda';\n        },\n        emptyLabelText: 'Prazno'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Briši',\n        closeText: 'Zatvori',\n        loadingText: 'Učitavanje…',\n        noOptionsText: 'Nema opcija',\n        openText: 'Otvori'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zatvori'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigacija po stranicama',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Idi na '}stranicu ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n\n          if (type === 'last') {\n            return 'Idi na zadnju stranicu';\n          }\n\n          if (type === 'next') {\n            return 'Idi na sledeću stranicu';\n          } // if (type === 'previous') {\n\n\n          return 'Idi na prethodnu stranicu';\n        }\n      }\n    }\n  }\n};\nexport const ruRU = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показать полный путь'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Перейти на первую страницу';\n          }\n\n          if (type === 'last') {\n            return 'Перейти на последнюю страницу';\n          }\n\n          if (type === 'next') {\n            return 'Перейти на следующую страницу';\n          } // if (type === 'previous') {\n\n\n          return 'Перейти на предыдущую страницу';\n        },\n        labelRowsPerPage: 'Строк на странице:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} из ${count !== -1 ? count : `более чем ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'Звёзд';\n          const lastDigit = value % 10;\n\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Звезды';\n          } else if (lastDigit === 1) {\n            pluralForm = 'Звезда';\n          }\n\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Рейтинг отсутствует'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Очистить',\n        closeText: 'Закрыть',\n        loadingText: 'Загрузка…',\n        noOptionsText: 'Нет доступных вариантов',\n        openText: 'Открыть'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Закрыть'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навигация по страницам',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            if (selected) {\n              return `${page} страница`;\n            }\n\n            return `Перейти на ${page} страницу`;\n          }\n\n          if (type === 'first') {\n            return 'Перейти на первую страницу';\n          }\n\n          if (type === 'last') {\n            return 'Перейти на последнюю страницу';\n          }\n\n          if (type === 'next') {\n            return 'Перейти на следующую страницу';\n          } // if (type === 'previous') {\n\n\n          return 'Перейти на предыдущую страницу';\n        }\n      }\n    }\n  }\n};\nexport const siLK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'ගමන් මඟ පෙන්වන්න'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'පළමු පිටුවට යන්න';\n          }\n\n          if (type === 'last') {\n            return 'අවසාන පිටුවට යන්න';\n          }\n\n          if (type === 'next') {\n            return 'මීළඟ පිටුවට යන්න';\n          } // if (type === 'previous') {\n\n\n          return 'පෙර පිටුවට යන්න';\n        },\n        labelRowsPerPage: 'පිටුවක පේළි:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} දක්වා ${count !== -1 ? count : `${to} ට වැඩි ප්‍රමාණයකින්`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `තරු ${value}`,\n        emptyLabelText: 'හිස්'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'මකන්න',\n        closeText: 'වසන්න',\n        loadingText: 'නැංවෙමින්…',\n        noOptionsText: 'විකල්ප නැත',\n        openText: 'විවෘත කරන්න'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'වසන්න'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'පිටු අතර සංචරණය',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `පිටුව ${page} ${selected ? '' : 'ට යන්න'}`;\n          }\n\n          if (type === 'first') {\n            return 'පළමු පිටුවට යන්න';\n          }\n\n          if (type === 'last') {\n            return 'අවසාන පිටුවට යන්න';\n          }\n\n          if (type === 'next') {\n            return 'මීළඟ පිටුවට යන්න';\n          } // if (type === 'previous') {\n\n\n          return 'පෙර පිටුවට යන්න';\n        }\n      }\n    }\n  }\n};\nexport const skSK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Ukázať cestu '\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ísť na prvú stránku';\n          }\n\n          if (type === 'last') {\n            return 'Ísť na poslednú stránku';\n          }\n\n          if (type === 'next') {\n            return 'Ísť na ďaľšiu stránku';\n          } // if (type === 'previous') {\n\n\n          return 'Ísť na predchádzajúcu stránku';\n        },\n        labelRowsPerPage: 'Riadkov na stránke:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} z ${count !== -1 ? count : `viac ako ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          if (value === 1) {\n            return `${value} hviezdička`;\n          }\n\n          if (value >= 2 && value <= 4) {\n            return `${value} hviezdičky`;\n          }\n\n          return `${value} hviezdičiek`;\n        },\n        emptyLabelText: 'Prázdne'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vymazať',\n        closeText: 'Zavrieť',\n        loadingText: 'Načítanie…',\n        noOptionsText: 'Žiadne možnosti',\n        openText: 'Otvoriť'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zavrieť'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigácia stránkovanim',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ísť na '}stránku ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Ísť na prvú stránku';\n          }\n\n          if (type === 'last') {\n            return 'Ísť na poslednú stránku';\n          }\n\n          if (type === 'next') {\n            return 'Ísť na ďaľšiu stránku';\n          } // if (type === 'previous') {\n\n\n          return 'Ísť na predchádzajúcu stránku';\n        }\n      }\n    }\n  }\n};\nexport const svSE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Visa sökväg'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Gå till första sidan';\n          }\n\n          if (type === 'last') {\n            return 'Gå till sista sidan';\n          }\n\n          if (type === 'next') {\n            return 'Gå till nästa sida';\n          } // if (type === 'previous') {\n\n\n          return 'Gå till föregående sida';\n        },\n        labelRowsPerPage: 'Rader per sida:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} av ${count !== -1 ? count : `fler än ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'Stjärnor' : 'Stjärna'}`,\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Rensa',\n        closeText: 'Stäng',\n        loadingText: 'Laddar…',\n        noOptionsText: 'Inga alternativ',\n        openText: 'Öppna'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Stäng'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sidnavigering',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Gå till '}sida ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Gå till första sidan';\n          }\n\n          if (type === 'last') {\n            return 'Gå till sista sidan';\n          }\n\n          if (type === 'next') {\n            return 'Gå till nästa sida';\n          } // if (type === 'previous') {\n\n\n          return 'Gå till föregående sida';\n        }\n      }\n    }\n  }\n};\nexport const thTH = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'แสดงเส้นทาง'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'ไปที่หน้าแรก';\n          }\n\n          if (type === 'last') {\n            return 'ไปที่หน้าสุดท้าย';\n          }\n\n          if (type === 'next') {\n            return 'ไปที่หน้าถัดไป';\n          } // if (type === 'previous') {\n\n\n          return 'ไปที่หน้าก่อน';\n        },\n        labelRowsPerPage: 'จำนวนแถวต่อหน้า:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} จาก ${count !== -1 ? count : `มากกว่า ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ดาว`,\n        emptyLabelText: 'ว่างเปล่า'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'เคลียร์',\n        closeText: 'ปิด',\n        loadingText: 'กำลังโหลด…',\n        noOptionsText: 'ไม่มีตัวเลือก',\n        openText: 'เปิด'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'ปิด'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': '',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ไปที่'}หน้า ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'ไปที่หน้าแรก';\n          }\n\n          if (type === 'last') {\n            return 'ไปที่หน้าสุดท้าย';\n          }\n\n          if (type === 'next') {\n            return 'ไปที่หน้าถัดไป';\n          } // if (type === 'previous') {\n\n\n          return 'ไปที่หน้าก่อน';\n        }\n      }\n    }\n  }\n};\nexport const trTR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Yolu göster'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'İlk sayfaya git';\n          }\n\n          if (type === 'last') {\n            return 'Son sayfaya git';\n          }\n\n          if (type === 'next') {\n            return 'Sonraki sayfaya git';\n          } // if (type === 'previous') {\n\n\n          return 'Önceki sayfaya git';\n        },\n        labelRowsPerPage: 'Sayfa başına satır:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} tanesinden ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Yıldız`,\n        emptyLabelText: 'Boş'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Temizle',\n        closeText: 'Kapat',\n        loadingText: 'Yükleniyor…',\n        noOptionsText: 'Seçenek yok',\n        openText: 'Aç'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Kapat'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sayfa navigasyonu',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page}. ${selected ? 'sayfa' : 'sayfaya git'}`;\n          }\n\n          if (type === 'first') {\n            return 'İlk sayfaya git';\n          }\n\n          if (type === 'last') {\n            return 'Son sayfaya git';\n          }\n\n          if (type === 'next') {\n            return 'Sonraki sayfaya git';\n          } // if (type === 'previous') {\n\n\n          return 'Önceki sayfaya git';\n        }\n      }\n    }\n  }\n};\nexport const ukUA = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показати шлях сторінок'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Перейти на першу сторінку';\n          }\n\n          if (type === 'last') {\n            return 'Перейти на останню сторінку';\n          }\n\n          if (type === 'next') {\n            return 'Перейти на наступну сторінку';\n          } // if (type === 'previous') {\n\n\n          return 'Перейти на попередню сторінку';\n        },\n        labelRowsPerPage: 'Рядків на сторінці:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} з ${count !== -1 ? count : `понад ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'Зірок';\n          const lastDigit = value % 10;\n\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Зірки';\n          } else if (lastDigit === 1) {\n            pluralForm = 'Зірка';\n          }\n\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Рейтинг відсутній'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Очистити',\n        closeText: 'Згорнути',\n        loadingText: 'Завантаження…',\n        noOptionsText: 'Немає варіантів',\n        openText: 'Розгорнути'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Згорнути'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навігація сторінками',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Перейти на '}сторінку ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Перейти на першу сторінку';\n          }\n\n          if (type === 'last') {\n            return 'Перейти на останню сторінку';\n          }\n\n          if (type === 'next') {\n            return 'Перейти на наступну сторінку';\n          } // if (type === 'previous') {\n\n\n          return 'Перейти на попередню сторінку';\n        }\n      }\n    }\n  }\n};\nexport const viVN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mở ra'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Tới trang đầu tiên';\n          }\n\n          if (type === 'last') {\n            return 'Tới trang cuối cùng';\n          }\n\n          if (type === 'next') {\n            return 'Tới trang tiếp theo';\n          } // if (type === 'previous') {\n\n\n          return 'Về trang trước đó';\n        },\n        labelRowsPerPage: 'Số hàng mỗi trang:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} trong ${count !== -1 ? count : `nhiều hơn ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} sao`,\n        emptyLabelText: 'Không có dữ liệu'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Xóa',\n        closeText: 'Đóng',\n        loadingText: 'Đang tải…',\n        noOptionsText: 'Không có lựa chọn nào',\n        openText: 'Mở'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Đóng'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Thanh điều khiển trang',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Tới '}trang ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Tới trang đầu tiên';\n          }\n\n          if (type === 'last') {\n            return 'Tới trang cuối cùng';\n          }\n\n          if (type === 'next') {\n            return 'Tới trang tiếp theo';\n          } // if (type === 'previous') {\n\n\n          return 'Về trang trước đó';\n        }\n      }\n    }\n  }\n};\nexport const zhCN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展开'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '第一页';\n          }\n\n          if (type === 'last') {\n            return '最后一页';\n          }\n\n          if (type === 'next') {\n            return '下一页';\n          }\n\n          return '上一页';\n        },\n        labelRowsPerPage: '每页行数:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `第 ${from} 条到第 ${to} 条，${count !== -1 ? `共 ${count} 条` : `至少 ${to} 条`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 颗星`,\n        emptyLabelText: '无标签'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清空',\n        closeText: '关闭',\n        loadingText: '加载中……',\n        noOptionsText: '没有可用选项',\n        openText: '打开'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '关闭'\n      }\n    }\n  }\n};\nexport const zhHK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展開'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '第一頁';\n          }\n\n          if (type === 'last') {\n            return '最後一頁';\n          }\n\n          if (type === 'next') {\n            return '下一頁';\n          }\n\n          return '上一頁';\n        },\n        labelRowsPerPage: '每頁行數:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `第 ${from} 項至第 ${to} 項，${count !== -1 ? `共 ${count} 項` : `超過 ${to} 項`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 粒星`,\n        emptyLabelText: '無標籤'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清除',\n        closeText: '關閉',\n        loadingText: '載入中……',\n        noOptionsText: '沒有可用選項',\n        openText: '開啟'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '關閉'\n      }\n    }\n  }\n};\nexport const zhTW = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展開'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '第一頁';\n          }\n\n          if (type === 'last') {\n            return '最後一頁';\n          }\n\n          if (type === 'next') {\n            return '下一頁';\n          }\n\n          return '上一頁';\n        },\n        labelRowsPerPage: '每行行數:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `第 ${from} 條到第 ${to} 條，${count !== -1 ? `共 ${count} 條` : `至少 ${to} 條`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 顆星`,\n        emptyLabelText: '無標簽'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清空',\n        closeText: '關閉',\n        loadingText: '載入中……',\n        noOptionsText: '没有可用選項',\n        openText: '打開'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '關閉'\n      }\n    }\n  }\n};","import { bgBG as bgBGCore } from '@mui/material/locale';\nimport { getGridLocalization } from '../utils/getGridLocalization';\nconst bgBGGrid = {\n  // Root\n  noRowsLabel: 'Няма редове',\n  noResultsOverlayLabel: 'Няма намерени резултати.',\n  errorOverlayDefaultLabel: 'Възникна грешка.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Гъстота',\n  toolbarDensityLabel: 'Гъстота',\n  toolbarDensityCompact: 'Компактна',\n  toolbarDensityStandard: 'Стандартна',\n  toolbarDensityComfortable: 'Комфортна',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Колони',\n  toolbarColumnsLabel: 'Покажи селектора на колони',\n  // Filters toolbar button text\n  toolbarFilters: 'Филтри',\n  toolbarFiltersLabel: 'Покажи Филтрите',\n  toolbarFiltersTooltipHide: 'Скрий Филтрите',\n  toolbarFiltersTooltipShow: 'Покажи Филтрите',\n  toolbarFiltersTooltipActive: count => `${count} активни филтри`,\n  // Quick filter toolbar field\n  // toolbarQuickFilterPlaceholder: 'Search…',\n  // toolbarQuickFilterLabel: 'Search',\n  // toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Изтегли',\n  toolbarExportLabel: 'Изтегли',\n  toolbarExportCSV: 'Изтегли като CSV',\n  toolbarExportPrint: 'Принтиране',\n  // toolbarExportExcel: 'Download as Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Намери колона',\n  columnsPanelTextFieldPlaceholder: 'Заглавие на колона',\n  columnsPanelDragIconLabel: 'Пренареди на колона',\n  columnsPanelShowAllButton: 'Покажи Всички',\n  columnsPanelHideAllButton: 'Скрий Всички',\n  // Filter panel text\n  filterPanelAddFilter: 'Добави Филтър',\n  filterPanelDeleteIconLabel: 'Изтрий',\n  // filterPanelLinkOperator: 'Logic operator',\n  filterPanelOperators: 'Оператори',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'И',\n  filterPanelOperatorOr: 'Или',\n  filterPanelColumns: 'Колони',\n  filterPanelInputLabel: 'Стойност',\n  filterPanelInputPlaceholder: 'Стойност на филтъра',\n  // Filter operators text\n  filterOperatorContains: 'съдържа',\n  filterOperatorEquals: 'равно',\n  filterOperatorStartsWith: 'започва с',\n  filterOperatorEndsWith: 'завършва с',\n  filterOperatorIs: 'е',\n  filterOperatorNot: 'не е',\n  filterOperatorAfter: 'е след',\n  filterOperatorOnOrAfter: 'е на или след',\n  filterOperatorBefore: 'е преди',\n  filterOperatorOnOrBefore: 'е на или преди',\n  filterOperatorIsEmpty: 'е празен',\n  filterOperatorIsNotEmpty: 'не е празен',\n  filterOperatorIsAnyOf: 'е някой от',\n  // Filter values text\n  filterValueAny: 'всякакви',\n  filterValueTrue: 'вярно',\n  filterValueFalse: 'невярно',\n  // Column menu text\n  columnMenuLabel: 'Меню',\n  columnMenuShowColumns: 'Покажи колоните',\n  columnMenuFilter: 'Филтри',\n  columnMenuHideColumn: 'Скрий',\n  columnMenuUnsort: 'Отмени сортирането',\n  columnMenuSortAsc: 'Сортирай по възходящ ред',\n  columnMenuSortDesc: 'Сортирай по низходящ ред',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => `${count} активни филтри`,\n  columnHeaderFiltersLabel: 'Покажи Филтрите',\n  columnHeaderSortIconLabel: 'Сортирай',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} избрани редове` : `${count.toLocaleString()} избран ред`,\n  // Total row amount footer text\n  footerTotalRows: 'Общо Rедове:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} от ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Избор на квадратче',\n  checkboxSelectionSelectAllRows: 'Избери всички редове',\n  checkboxSelectionUnselectAllRows: 'Отмени избора на всички редове',\n  checkboxSelectionSelectRow: 'Избери ред',\n  checkboxSelectionUnselectRow: 'Отмени избора на ред',\n  // Boolean cell text\n  booleanCellTrueLabel: 'да',\n  booleanCellFalseLabel: 'не',\n  // Actions cell more text\n  actionsCellMore: 'още',\n  // Column pinning text\n  pinToLeft: 'Закачи в ляво',\n  pinToRight: 'Закачи в дясно',\n  unpin: 'Откачи',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Група',\n  treeDataExpand: 'виж деца',\n  treeDataCollapse: 'скрий децата',\n  // Grouping columns\n  groupingColumnHeaderName: 'Група',\n  groupColumn: name => `Групирай по ${name}`,\n  unGroupColumn: name => `Спри групиране по ${name}`,\n  // Master/detail\n  // detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Разгъване',\n  collapseDetailPanel: 'Свиване' // Row reordering text\n  // rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  // aggregationMenuItemHeader: 'Aggregation',\n  // aggregationFunctionLabelSum: 'sum',\n  // aggregationFunctionLabelAvg: 'avg',\n  // aggregationFunctionLabelMin: 'min',\n  // aggregationFunctionLabelMax: 'max',\n  // aggregationFunctionLabelSize: 'size',\n\n};\nexport const bgBG = getGridLocalization(bgBGGrid, bgBGCore);","import { csCZ as csCZCore } from '@mui/material/locale';\nimport { getGridLocalization } from '../utils/getGridLocalization';\nconst csCZGrid = {\n  // Root\n  noRowsLabel: 'Žádné záznamy',\n  noResultsOverlayLabel: 'Nenašli se žadné výsledky.',\n  errorOverlayDefaultLabel: 'Stala sa nepředvídaná chyba.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Hustota',\n  toolbarDensityLabel: 'Hustota',\n  toolbarDensityCompact: 'Kompaktní',\n  toolbarDensityStandard: 'Standartní',\n  toolbarDensityComfortable: 'Komfortní',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Sloupce',\n  toolbarColumnsLabel: 'Vybrat sloupec',\n  // Filters toolbar button text\n  toolbarFilters: 'Filtry',\n  toolbarFiltersLabel: 'Zobrazit filtry',\n  toolbarFiltersTooltipHide: 'Skrýt filtry',\n  toolbarFiltersTooltipShow: 'Zobrazit filtry',\n  toolbarFiltersTooltipActive: count => {\n    let pluralForm = 'aktivních filtrů';\n\n    if (count > 1 && count < 5) {\n      pluralForm = 'aktivní filtry';\n    } else if (count === 1) {\n      pluralForm = 'aktivní filtr';\n    }\n\n    return `${count} ${pluralForm}`;\n  },\n  // Quick filter toolbar field\n  // toolbarQuickFilterPlaceholder: 'Search…',\n  // toolbarQuickFilterLabel: 'Search',\n  // toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Stáhnout jako CSV',\n  toolbarExportPrint: 'Vytisknout',\n  // toolbarExportExcel: 'Download as Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Najít sloupec',\n  columnsPanelTextFieldPlaceholder: 'Název sloupce',\n  columnsPanelDragIconLabel: 'Uspořádat sloupce',\n  columnsPanelShowAllButton: 'Zobrazit vše',\n  columnsPanelHideAllButton: 'Skrýt vše',\n  // Filter panel text\n  filterPanelAddFilter: 'Přidat filtr',\n  filterPanelDeleteIconLabel: 'Odstranit',\n  // filterPanelLinkOperator: 'Logic operator',\n  filterPanelOperators: 'Operátory',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'A',\n  filterPanelOperatorOr: 'Nebo',\n  filterPanelColumns: 'Sloupce',\n  filterPanelInputLabel: 'Hodnota',\n  filterPanelInputPlaceholder: 'Hodnota filtru',\n  // Filter operators text\n  filterOperatorContains: 'obsahuje',\n  filterOperatorEquals: 'rovná se',\n  filterOperatorStartsWith: 'začíná s',\n  filterOperatorEndsWith: 'končí na',\n  filterOperatorIs: 'je',\n  filterOperatorNot: 'není',\n  filterOperatorAfter: 'je po',\n  filterOperatorOnOrAfter: 'je na nebo po',\n  filterOperatorBefore: 'je před',\n  filterOperatorOnOrBefore: 'je na nebo dříve',\n  filterOperatorIsEmpty: 'je prázdný',\n  filterOperatorIsNotEmpty: 'není prázdný',\n  // filterOperatorIsAnyOf: 'is any of',\n  // Filter values text\n  filterValueAny: 'jakýkoliv',\n  filterValueTrue: 'ano',\n  filterValueFalse: 'ne',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Zobrazit sloupce',\n  columnMenuFilter: 'Filtr',\n  columnMenuHideColumn: 'Skrýt',\n  columnMenuUnsort: 'Zrušit filtry',\n  columnMenuSortAsc: 'Seřadit vzestupně',\n  columnMenuSortDesc: 'Seřadit sestupně',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => {\n    let pluralForm = 'aktivních filtrů';\n\n    if (count > 1 && count < 5) {\n      pluralForm = 'aktivní filtry';\n    } else if (count === 1) {\n      pluralForm = 'aktivní filtr';\n    }\n\n    return `${count} ${pluralForm}`;\n  },\n  columnHeaderFiltersLabel: 'Zobrazit filtry',\n  columnHeaderSortIconLabel: 'Filtrovat',\n  // Rows selected footer text\n  footerRowSelected: count => {\n    let pluralForm = 'vybraných záznamů';\n\n    if (count > 1 && count < 5) {\n      pluralForm = 'vybrané záznamy';\n    } else if (count === 1) {\n      pluralForm = 'vybraný záznam';\n    }\n\n    return `${count} ${pluralForm}`;\n  },\n  // Total row amount footer text\n  footerTotalRows: 'Celkem řádků:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => {\n    const str = totalCount.toString();\n    const firstDigit = str[0];\n    const op = ['4', '6', '7'].includes(firstDigit) || firstDigit === '1' && str.length % 3 === 0 ? 'ze' : 'z';\n    return `${visibleCount.toLocaleString()} ${op} ${totalCount.toLocaleString()}`;\n  },\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Výběr řádku',\n  // checkboxSelectionSelectAllRows: 'Select all rows',\n  // checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  // checkboxSelectionSelectRow: 'Select row',\n  // checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'ano',\n  booleanCellFalseLabel: 'ne',\n  // Actions cell more text\n  actionsCellMore: 'více',\n  // Column pinning text\n  pinToLeft: 'Připnout na levo',\n  pinToRight: 'Připnout na pravo',\n  unpin: 'Odepnout',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Skupina',\n  treeDataExpand: 'zobrazit potomky',\n  treeDataCollapse: 'skrýt potomky',\n  // Grouping columns\n  groupingColumnHeaderName: 'Skupina',\n  groupColumn: name => `Zoskupit podle ${name}`,\n  unGroupColumn: name => `Přestat zoskupovat podle ${name}` // Master/detail\n  // detailPanelToggle: 'Detail panel toggle',\n  // expandDetailPanel: 'Expand',\n  // collapseDetailPanel: 'Collapse',\n  // Row reordering text\n  // rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  // aggregationMenuItemHeader: 'Aggregation',\n  // aggregationFunctionLabelSum: 'sum',\n  // aggregationFunctionLabelAvg: 'avg',\n  // aggregationFunctionLabelMin: 'min',\n  // aggregationFunctionLabelMax: 'max',\n  // aggregationFunctionLabelSize: 'size',\n\n};\nexport const csCZ = getGridLocalization(csCZGrid, csCZCore);","import { daDK as daDKCore } from '@mui/material/locale';\nimport { getGridLocalization } from '../utils/getGridLocalization';\nconst daDKGrid = {\n  // Root\n  noRowsLabel: 'Ingen rækker',\n  noResultsOverlayLabel: 'Ingen resultater',\n  errorOverlayDefaultLabel: 'Der skete en fejl.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Tæthed',\n  toolbarDensityLabel: 'Tæthed',\n  toolbarDensityCompact: 'Kompakt',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Luftig',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Kolonne',\n  toolbarColumnsLabel: 'Vælg kolonne',\n  // Filters toolbar button text\n  toolbarFilters: 'Filtre',\n  toolbarFiltersLabel: 'Vis filtre',\n  toolbarFiltersTooltipHide: 'Skjul filtre',\n  toolbarFiltersTooltipShow: 'Vis filtre',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} aktive filtre` : `${count} aktivt filter`,\n  // Quick filter toolbar field\n  // toolbarQuickFilterPlaceholder: 'Search…',\n  // toolbarQuickFilterLabel: 'Search',\n  // toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  // toolbarExport: 'Export',\n  toolbarExportLabel: 'Eksporter',\n  toolbarExportCSV: 'Download som CSV',\n  toolbarExportPrint: 'Print',\n  // toolbarExportExcel: 'Download as Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Find kolonne',\n  columnsPanelTextFieldPlaceholder: 'Kolonne titel',\n  columnsPanelDragIconLabel: 'Reorder kolonne',\n  columnsPanelShowAllButton: 'Vis alle',\n  columnsPanelHideAllButton: 'Skjul alle',\n  // Filter panel text\n  filterPanelAddFilter: 'Tilføj filter',\n  filterPanelDeleteIconLabel: 'Slet',\n  filterPanelLinkOperator: 'Logisk operator',\n  filterPanelOperators: 'Operatorer',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'Og',\n  filterPanelOperatorOr: 'Eller',\n  filterPanelColumns: 'Kolonne',\n  filterPanelInputLabel: 'Værdi',\n  filterPanelInputPlaceholder: 'Filter værdi',\n  // Filter operators text\n  filterOperatorContains: 'Indeholder',\n  filterOperatorEquals: 'Lig med',\n  filterOperatorStartsWith: 'Begynder med',\n  filterOperatorEndsWith: 'Ender med',\n  filterOperatorIs: 'Er lig med',\n  filterOperatorNot: 'Er ikke lig med',\n  filterOperatorAfter: 'Efter',\n  filterOperatorOnOrAfter: 'På eller efter',\n  filterOperatorBefore: 'Før',\n  filterOperatorOnOrBefore: 'På eller før',\n  filterOperatorIsEmpty: 'Indeholder ikke data',\n  filterOperatorIsNotEmpty: 'Indeholder data',\n  filterOperatorIsAnyOf: 'indeholder en af',\n  // Filter values text\n  filterValueAny: 'hvilken som helst',\n  filterValueTrue: 'positiv',\n  filterValueFalse: 'negativ',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Vis Kolonner',\n  columnMenuFilter: 'Filtre',\n  columnMenuHideColumn: 'Skjul',\n  columnMenuUnsort: 'Fjern sortering',\n  columnMenuSortAsc: 'Sorter stigende',\n  columnMenuSortDesc: 'Sorter faldende',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} aktive filtre` : `Ét aktivt filter`,\n  columnHeaderFiltersLabel: 'Vis filtre',\n  columnHeaderSortIconLabel: 'Sorter',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rækker valgt` : `Én række valgt`,\n  // Total row amount footer text\n  footerTotalRows: 'Antal rækker i alt:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} af ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Afkrydsningsvalg',\n  checkboxSelectionSelectAllRows: 'Vælg alle rækker',\n  checkboxSelectionUnselectAllRows: 'Fravælg alle rækker',\n  checkboxSelectionSelectRow: 'Vælg række',\n  checkboxSelectionUnselectRow: 'Fravælg række',\n  // Boolean cell text\n  booleanCellTrueLabel: 'ja',\n  booleanCellFalseLabel: 'nej',\n  // Actions cell more text\n  actionsCellMore: 'mere',\n  // Column pinning text\n  pinToLeft: 'Fastgør til venstre',\n  pinToRight: 'Fastgør til højre',\n  unpin: 'Frigiv',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Gruppering',\n  treeDataExpand: 'Vis underelementer',\n  treeDataCollapse: 'Skjul underelementer',\n  // Grouping columns\n  groupingColumnHeaderName: 'Gruppér',\n  groupColumn: name => `Gruppér efter ${name}`,\n  unGroupColumn: name => `Fjern gruppéring efter ${name}`,\n  // Master/detail\n  // detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Udvid',\n  collapseDetailPanel: 'Kollaps' // Row reordering text\n  // rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  // aggregationMenuItemHeader: 'Aggregation',\n  // aggregationFunctionLabelSum: 'sum',\n  // aggregationFunctionLabelAvg: 'avg',\n  // aggregationFunctionLabelMin: 'min',\n  // aggregationFunctionLabelMax: 'max',\n  // aggregationFunctionLabelSize: 'size',\n\n};\nexport const daDK = getGridLocalization(daDKGrid, daDKCore);","import { deDE as deDECore } from '@mui/material/locale';\nimport { getGridLocalization } from '../utils/getGridLocalization';\nconst deDEGrid = {\n  // Root\n  noRowsLabel: 'Keine Einträge',\n  noResultsOverlayLabel: 'Keine Ergebnisse gefunden.',\n  errorOverlayDefaultLabel: 'Ein unerwarteter Fehler ist aufgetreten.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Zeilenhöhe',\n  toolbarDensityLabel: 'Zeilenhöhe',\n  toolbarDensityCompact: 'Kompakt',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Breit',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Spalten',\n  toolbarColumnsLabel: 'Zeige Spaltenauswahl',\n  // Filters toolbar button text\n  toolbarFilters: 'Filter',\n  toolbarFiltersLabel: 'Zeige Filter',\n  toolbarFiltersTooltipHide: 'Verberge Filter',\n  toolbarFiltersTooltipShow: 'Zeige Filter',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} aktive Filter` : `${count} aktiver Filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Suchen…',\n  toolbarQuickFilterLabel: 'Suchen',\n  toolbarQuickFilterDeleteIconLabel: 'Löschen',\n  // Export selector toolbar button text\n  toolbarExport: 'Exportieren',\n  toolbarExportLabel: 'Exportieren',\n  toolbarExportCSV: 'Download als CSV',\n  toolbarExportPrint: 'Drucken',\n  toolbarExportExcel: 'Download als Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Finde Spalte',\n  columnsPanelTextFieldPlaceholder: 'Spaltenüberschrift',\n  columnsPanelDragIconLabel: 'Spalte umsortieren',\n  columnsPanelShowAllButton: 'Zeige alle',\n  columnsPanelHideAllButton: 'Verberge alle',\n  // Filter panel text\n  filterPanelAddFilter: 'Filter hinzufügen',\n  filterPanelDeleteIconLabel: 'Löschen',\n  filterPanelLinkOperator: 'Logische Operatoren',\n  filterPanelOperators: 'Operatoren',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'Und',\n  filterPanelOperatorOr: 'Oder',\n  filterPanelColumns: 'Spalten',\n  filterPanelInputLabel: 'Wert',\n  filterPanelInputPlaceholder: 'Wert filtern',\n  // Filter operators text\n  filterOperatorContains: 'enthält',\n  filterOperatorEquals: 'ist gleich',\n  filterOperatorStartsWith: 'beginnt mit',\n  filterOperatorEndsWith: 'endet mit',\n  filterOperatorIs: 'ist',\n  filterOperatorNot: 'ist nicht',\n  filterOperatorAfter: 'ist nach',\n  filterOperatorOnOrAfter: 'ist am oder nach',\n  filterOperatorBefore: 'ist vor',\n  filterOperatorOnOrBefore: 'ist am oder vor',\n  filterOperatorIsEmpty: 'ist leer',\n  filterOperatorIsNotEmpty: 'ist nicht leer',\n  filterOperatorIsAnyOf: 'ist einer der Werte',\n  // Filter values text\n  filterValueAny: 'Beliebig',\n  filterValueTrue: 'Ja',\n  filterValueFalse: 'Nein',\n  // Column menu text\n  columnMenuLabel: 'Menü',\n  columnMenuShowColumns: 'Zeige alle Spalten',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Verbergen',\n  columnMenuUnsort: 'Sortierung deaktivieren',\n  columnMenuSortAsc: 'Sortiere aufsteigend',\n  columnMenuSortDesc: 'Sortiere absteigend',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} aktive Filter` : `${count} aktiver Filter`,\n  columnHeaderFiltersLabel: 'Zeige Filter',\n  columnHeaderSortIconLabel: 'Sortieren',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} Einträge ausgewählt` : `${count.toLocaleString()} Eintrag ausgewählt`,\n  // Total row amount footer text\n  footerTotalRows: 'Gesamt:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} von ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox Auswahl',\n  checkboxSelectionSelectAllRows: 'Alle Zeilen auswählen',\n  checkboxSelectionUnselectAllRows: 'Alle Zeilen abwählen',\n  checkboxSelectionSelectRow: 'Zeile auswählen',\n  checkboxSelectionUnselectRow: 'Zeile abwählen',\n  // Boolean cell text\n  booleanCellTrueLabel: 'Ja',\n  booleanCellFalseLabel: 'Nein',\n  // Actions cell more text\n  actionsCellMore: 'Mehr',\n  // Column pinning text\n  pinToLeft: 'Links anheften',\n  pinToRight: 'Rechts anheften',\n  unpin: 'Loslösen',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Gruppe',\n  treeDataExpand: 'Kinder einblenden',\n  treeDataCollapse: 'Kinder ausblenden',\n  // Grouping columns\n  groupingColumnHeaderName: 'Gruppierung',\n  groupColumn: name => `Gruppieren nach ${name}`,\n  unGroupColumn: name => `Gruppierung nach ${name} aufheben`,\n  // Master/detail\n  detailPanelToggle: 'Detailansicht Kippschalter',\n  expandDetailPanel: 'Aufklappen',\n  collapseDetailPanel: 'Zuklappen',\n  // Row reordering text\n  rowReorderingHeaderName: 'Reihen neu ordnen',\n  // Aggregation\n  aggregationMenuItemHeader: 'Aggregation',\n  aggregationFunctionLabelSum: 'Summe',\n  aggregationFunctionLabelAvg: 'Mittelwert',\n  aggregationFunctionLabelMin: 'Minimum',\n  aggregationFunctionLabelMax: 'Maximum',\n  aggregationFunctionLabelSize: 'Anzahl'\n};\nexport const deDE = getGridLocalization(deDEGrid, deDECore);","import { getGridLocalization } from '../utils/getGridLocalization';\nconst elGRGrid = {\n  // Root\n  noRowsLabel: 'Δεν υπάρχουν καταχωρήσεις',\n  noResultsOverlayLabel: 'Δεν βρέθηκαν αποτελέσματα.',\n  errorOverlayDefaultLabel: 'Παρουσιάστηκε απρόβλεπτο σφάλμα.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Ύψος σειράς',\n  toolbarDensityLabel: 'Ύψος σειράς',\n  toolbarDensityCompact: 'Συμπαγής',\n  toolbarDensityStandard: 'Προκαθορισμένο',\n  toolbarDensityComfortable: 'Πλατύ',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Στήλες',\n  toolbarColumnsLabel: 'Επιλέξτε στήλες',\n  // Filters toolbar button text\n  toolbarFilters: 'Φίλτρα',\n  toolbarFiltersLabel: 'Εμφάνιση φίλτρων',\n  toolbarFiltersTooltipHide: 'Απόκρυψη φίλτρων',\n  toolbarFiltersTooltipShow: 'Εμφάνιση φίλτρων',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} ενεργά φίλτρα` : `${count} ενεργό φίλτρο`,\n  // Quick filter toolbar field\n  // toolbarQuickFilterPlaceholder: 'Search…',\n  // toolbarQuickFilterLabel: 'Search',\n  // toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Εξαγωγή',\n  toolbarExportLabel: 'Εξαγωγή',\n  toolbarExportCSV: 'Λήψη ως CSV',\n  // toolbarExportPrint: 'Print',\n  // toolbarExportExcel: 'Download as Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Εύρεση στήλης',\n  columnsPanelTextFieldPlaceholder: 'Επικεφαλίδα στήλης',\n  columnsPanelDragIconLabel: 'Αναδιάταξη στήλης',\n  columnsPanelShowAllButton: 'Προβολή όλων',\n  columnsPanelHideAllButton: 'Απόκρυψη όλων',\n  // Filter panel text\n  filterPanelAddFilter: 'Προσθήκη φίλτρου',\n  filterPanelDeleteIconLabel: 'Διαγραφή',\n  // filterPanelLinkOperator: 'Logic operator',\n  filterPanelOperators: 'Τελεστές',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'Καί',\n  filterPanelOperatorOr: 'Ή',\n  filterPanelColumns: 'Στήλες',\n  filterPanelInputLabel: 'Τιμή',\n  filterPanelInputPlaceholder: 'Τιμή φίλτρου',\n  // Filter operators text\n  filterOperatorContains: 'περιέχει',\n  filterOperatorEquals: 'ισούται',\n  filterOperatorStartsWith: 'ξεκινάει με',\n  filterOperatorEndsWith: 'τελειώνει με',\n  filterOperatorIs: 'είναι',\n  filterOperatorNot: 'δεν είναι',\n  filterOperatorAfter: 'είναι μετά',\n  filterOperatorOnOrAfter: 'είναι ίσο ή μετά',\n  filterOperatorBefore: 'είναι πριν',\n  filterOperatorOnOrBefore: 'είναι ίσο ή πριν',\n  filterOperatorIsEmpty: 'είναι κενό',\n  filterOperatorIsNotEmpty: 'δεν είναι κενό',\n  // filterOperatorIsAnyOf: 'is any of',\n  // Filter values text\n  // filterValueAny: 'any',\n  // filterValueTrue: 'true',\n  // filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'Μενού',\n  columnMenuShowColumns: 'Εμφάνιση στηλών',\n  columnMenuFilter: 'Φίλτρο',\n  columnMenuHideColumn: 'Απόκρυψη',\n  columnMenuUnsort: 'Απενεργοποίηση ταξινόμησης',\n  columnMenuSortAsc: 'Ταξινόμηση σε αύξουσα σειρά',\n  columnMenuSortDesc: 'Ταξινόμηση σε φθίνουσα σειρά',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} ενεργά φίλτρα` : `${count} ενεργό φίλτρο`,\n  columnHeaderFiltersLabel: 'Εμφάνιση φίλτρων',\n  columnHeaderSortIconLabel: 'Ταξινόμηση',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} επιλεγμένες γραμμές` : `${count.toLocaleString()} επιλεγμένη γραμμή`,\n  // Total row amount footer text\n  footerTotalRows: 'Σύνολο Γραμμών:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} από ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  // checkboxSelectionHeaderName: 'Checkbox selection',\n  // checkboxSelectionSelectAllRows: 'Select all rows',\n  // checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  // checkboxSelectionSelectRow: 'Select row',\n  // checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  // booleanCellTrueLabel: 'yes',\n  // booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'περισσότερα' // Column pinning text\n  // pinToLeft: 'Pin to left',\n  // pinToRight: 'Pin to right',\n  // unpin: 'Unpin',\n  // Tree Data\n  // treeDataGroupingHeaderName: 'Group',\n  // treeDataExpand: 'see children',\n  // treeDataCollapse: 'hide children',\n  // Grouping columns\n  // groupingColumnHeaderName: 'Group',\n  // groupColumn: name => `Group by ${name}`,\n  // unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  // detailPanelToggle: 'Detail panel toggle',\n  // expandDetailPanel: 'Expand',\n  // collapseDetailPanel: 'Collapse',\n  // Row reordering text\n  // rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  // aggregationMenuItemHeader: 'Aggregation',\n  // aggregationFunctionLabelSum: 'sum',\n  // aggregationFunctionLabelAvg: 'avg',\n  // aggregationFunctionLabelMin: 'min',\n  // aggregationFunctionLabelMax: 'max',\n  // aggregationFunctionLabelSize: 'size',\n\n};\nexport const elGR = getGridLocalization(elGRGrid);","import { enUS as enUSCore } from '@mui/material/locale';\nimport { getGridLocalization } from '../utils/getGridLocalization';\nimport { GRID_DEFAULT_LOCALE_TEXT } from '../constants/localeTextConstants';\nexport const enUS = getGridLocalization(GRID_DEFAULT_LOCALE_TEXT, enUSCore);","import { esES as esESCore } from '@mui/material/locale';\nimport { getGridLocalization } from '../utils/getGridLocalization';\nconst esESGrid = {\n  // Root\n  noRowsLabel: 'Sin filas',\n  // noResultsOverlayLabel: 'No results found.',\n  errorOverlayDefaultLabel: 'Ha ocurrido un error.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Densidad',\n  toolbarDensityLabel: 'Densidad',\n  toolbarDensityCompact: 'Compacta',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Comoda',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Columnas',\n  toolbarColumnsLabel: 'Seleccionar columnas',\n  // Filters toolbar button text\n  toolbarFilters: 'Filtros',\n  toolbarFiltersLabel: 'Mostrar filtros',\n  toolbarFiltersTooltipHide: 'Ocultar filtros',\n  toolbarFiltersTooltipShow: 'Mostrar filtros',\n  toolbarFiltersTooltipActive: count => count > 1 ? `${count} filtros activos` : `${count} filtro activo`,\n  // Quick filter toolbar field\n  // toolbarQuickFilterPlaceholder: 'Search…',\n  // toolbarQuickFilterLabel: 'Search',\n  // toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Exportar',\n  toolbarExportLabel: 'Exportar',\n  toolbarExportCSV: 'Descargar como CSV',\n  // toolbarExportPrint: 'Print',\n  // toolbarExportExcel: 'Download as Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Columna de búsqueda',\n  columnsPanelTextFieldPlaceholder: 'Título de columna',\n  columnsPanelDragIconLabel: 'Reorder columna',\n  columnsPanelShowAllButton: 'Mostrar todo',\n  columnsPanelHideAllButton: 'Ocultar todo',\n  // Filter panel text\n  filterPanelAddFilter: 'Agregar filtro',\n  filterPanelDeleteIconLabel: 'Borrar',\n  // filterPanelLinkOperator: 'Logic operator',\n  filterPanelOperators: 'Operadores',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'Y',\n  filterPanelOperatorOr: 'O',\n  filterPanelColumns: 'Columnas',\n  filterPanelInputLabel: 'Valor',\n  filterPanelInputPlaceholder: 'Valor de filtro',\n  // Filter operators text\n  filterOperatorContains: 'contiene',\n  filterOperatorEquals: 'es igual',\n  filterOperatorStartsWith: 'comienza con',\n  filterOperatorEndsWith: 'termina con',\n  filterOperatorIs: 'es',\n  filterOperatorNot: 'no es',\n  filterOperatorAfter: 'es posterior',\n  filterOperatorOnOrAfter: 'es en o posterior',\n  filterOperatorBefore: 'es anterior',\n  filterOperatorOnOrBefore: 'es en o anterior',\n  filterOperatorIsEmpty: 'está vacío',\n  filterOperatorIsNotEmpty: 'no esta vacío',\n  // filterOperatorIsAnyOf: 'is any of',\n  // Filter values text\n  // filterValueAny: 'any',\n  // filterValueTrue: 'true',\n  // filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'Menú',\n  columnMenuShowColumns: 'Mostrar columnas',\n  columnMenuFilter: 'Filtro',\n  columnMenuHideColumn: 'Ocultar',\n  columnMenuUnsort: 'Desordenar',\n  columnMenuSortAsc: 'Ordenar ASC',\n  columnMenuSortDesc: 'Ordenar DESC',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count > 1 ? `${count} filtros activos` : `${count} filtro activo`,\n  columnHeaderFiltersLabel: 'Mostrar filtros',\n  columnHeaderSortIconLabel: 'Ordenar',\n  // Rows selected footer text\n  footerRowSelected: count => count > 1 ? `${count.toLocaleString()} filas seleccionadas` : `${count.toLocaleString()} fila seleccionada`,\n  // Total row amount footer text\n  footerTotalRows: 'Filas Totales:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} de ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  // checkboxSelectionHeaderName: 'Checkbox selection',\n  // checkboxSelectionSelectAllRows: 'Select all rows',\n  // checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  // checkboxSelectionSelectRow: 'Select row',\n  // checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  // booleanCellTrueLabel: 'yes',\n  // booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'más' // Column pinning text\n  // pinToLeft: 'Pin to left',\n  // pinToRight: 'Pin to right',\n  // unpin: 'Unpin',\n  // Tree Data\n  // treeDataGroupingHeaderName: 'Group',\n  // treeDataExpand: 'see children',\n  // treeDataCollapse: 'hide children',\n  // Grouping columns\n  // groupingColumnHeaderName: 'Group',\n  // groupColumn: name => `Group by ${name}`,\n  // unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  // detailPanelToggle: 'Detail panel toggle',\n  // expandDetailPanel: 'Expand',\n  // collapseDetailPanel: 'Collapse',\n  // Row reordering text\n  // rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  // aggregationMenuItemHeader: 'Aggregation',\n  // aggregationFunctionLabelSum: 'sum',\n  // aggregationFunctionLabelAvg: 'avg',\n  // aggregationFunctionLabelMin: 'min',\n  // aggregationFunctionLabelMax: 'max',\n  // aggregationFunctionLabelSize: 'size',\n\n};\nexport const esES = getGridLocalization(esESGrid, esESCore);","import { faIR as faIRCore } from '@mui/material/locale';\nimport { getGridLocalization } from '../utils/getGridLocalization';\nconst faIRGrid = {\n  // Root\n  noRowsLabel: 'بدون سطر',\n  noResultsOverlayLabel: 'نتیجه ای پیدا نشد.',\n  errorOverlayDefaultLabel: 'خطایی روی داد.',\n  // Density selector toolbar button text\n  toolbarDensity: 'تراکم',\n  toolbarDensityLabel: 'تراکم',\n  toolbarDensityCompact: 'فشرده',\n  toolbarDensityStandard: 'استاندارد',\n  toolbarDensityComfortable: 'راحت',\n  // Columns selector toolbar button text\n  toolbarColumns: 'ستون‌ها',\n  toolbarColumnsLabel: 'ستون‌ها را انتخاب کنید',\n  // Filters toolbar button text\n  toolbarFilters: 'فیلترها',\n  toolbarFiltersLabel: 'نمایش فیلترها',\n  toolbarFiltersTooltipHide: 'مخفی کردن فیلترها',\n  toolbarFiltersTooltipShow: 'نمایش فیلترها',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} فیلترهای فعال` : `${count} فیلتر فعال`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'جستجو...',\n  toolbarQuickFilterLabel: 'جستجو',\n  toolbarQuickFilterDeleteIconLabel: 'حذف',\n  // Export selector toolbar button text\n  toolbarExport: 'خروجی',\n  toolbarExportLabel: 'خروجی',\n  toolbarExportCSV: 'دانلود به صورت CSV',\n  toolbarExportPrint: 'چاپ',\n  toolbarExportExcel: 'دانلود به صورت اکسل',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'پیداکردن ستون',\n  columnsPanelTextFieldPlaceholder: 'عنوان ستون',\n  columnsPanelDragIconLabel: 'جا‌به‌جایی ستون',\n  columnsPanelShowAllButton: 'نمایش همه',\n  columnsPanelHideAllButton: 'مخفی همه',\n  // Filter panel text\n  filterPanelAddFilter: 'افزودن فیلتر',\n  filterPanelDeleteIconLabel: 'حذف',\n  filterPanelLinkOperator: 'عملگر منطقی',\n  filterPanelOperators: 'عملگرها',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'و',\n  filterPanelOperatorOr: 'یا',\n  filterPanelColumns: 'ستون‌ها',\n  filterPanelInputLabel: 'مقدار',\n  filterPanelInputPlaceholder: 'فیلتر مقدار',\n  // Filter operators text\n  filterOperatorContains: 'شامل',\n  filterOperatorEquals: 'مساوی',\n  filterOperatorStartsWith: 'شروع با',\n  filterOperatorEndsWith: 'پایان با',\n  filterOperatorIs: 'هست',\n  filterOperatorNot: 'نیست',\n  filterOperatorAfter: 'بعد از',\n  filterOperatorOnOrAfter: 'معادل یا بعدش',\n  filterOperatorBefore: 'قبلش',\n  filterOperatorOnOrBefore: 'معادل یا قبلش',\n  filterOperatorIsEmpty: 'خالی است',\n  filterOperatorIsNotEmpty: 'خالی نیست',\n  filterOperatorIsAnyOf: 'هر یک از',\n  // Filter values text\n  filterValueAny: 'هرچیزی',\n  filterValueTrue: 'صحیح',\n  filterValueFalse: 'غلط',\n  // Column menu text\n  columnMenuLabel: 'فهرست',\n  columnMenuShowColumns: 'نمایش ستون‌ها',\n  columnMenuFilter: 'فیلتر',\n  columnMenuHideColumn: 'مخفی',\n  columnMenuUnsort: 'نامرتب‌کردن',\n  columnMenuSortAsc: 'مرتب‌کردن صعودی',\n  columnMenuSortDesc: 'مرتب‌کردن نزولی',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} فیلتر‌های فعال` : `${count} فیلتر فعال`,\n  columnHeaderFiltersLabel: 'نمایش فیلترها',\n  columnHeaderSortIconLabel: 'مرتب‌کردن',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} سطرهای انتخاب شده` : `${count.toLocaleString()} سطر انتخاب شده`,\n  // Total row amount footer text\n  footerTotalRows: 'مجموع سطرها:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} از ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'چک‌باکس انتخاب',\n  checkboxSelectionSelectAllRows: 'انتخاب همه‌ی ردیف‌ها',\n  checkboxSelectionUnselectAllRows: 'لغو انتخاب همه‌ی ردیف‌ها',\n  checkboxSelectionSelectRow: 'انتخاب ردیف',\n  checkboxSelectionUnselectRow: 'لغو انتخاب ردیف',\n  // Boolean cell text\n  booleanCellTrueLabel: 'صحیح',\n  booleanCellFalseLabel: 'غلط',\n  // Actions cell more text\n  actionsCellMore: 'بیشتر',\n  // Column pinning text\n  pinToLeft: 'سنجاق کردن به چپ',\n  pinToRight: 'سنجاق کردن به راست',\n  unpin: 'برداشتن سنجاق',\n  // Tree Data\n  treeDataGroupingHeaderName: 'گروه‌بندی',\n  treeDataExpand: 'نمایش فرزندان',\n  treeDataCollapse: 'پنهان‌سازی فرزندان',\n  // Grouping columns\n  groupingColumnHeaderName: 'گروه‌بندی',\n  groupColumn: name => `گروه‌بندی براساس ${name}`,\n  unGroupColumn: name => `لغو گروه‌بندی براساس ${name}`,\n  // Master/detail\n  detailPanelToggle: 'پنل جزئیات',\n  expandDetailPanel: 'بازکردن پنل جزئیات',\n  collapseDetailPanel: 'بستن پنل جزئیات',\n  // Row reordering text\n  rowReorderingHeaderName: 'ترتیب مجدد سطر',\n  // Aggregation\n  aggregationMenuItemHeader: 'تجمیع',\n  aggregationFunctionLabelSum: 'جمع',\n  aggregationFunctionLabelAvg: 'میانگین',\n  aggregationFunctionLabelMin: 'حداقل',\n  aggregationFunctionLabelMax: 'حداکثر',\n  aggregationFunctionLabelSize: 'اندازه'\n};\nexport const faIR = getGridLocalization(faIRGrid, faIRCore);","import { fiFI as fiFICore } from '@mui/material/locale';\nimport { getGridLocalization } from '../utils/getGridLocalization';\nconst fiFIGrid = {\n  // Root\n  noRowsLabel: 'Ei rivejä',\n  noResultsOverlayLabel: 'Ei tuloksia.',\n  errorOverlayDefaultLabel: 'Tapahtui virhe.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Tiiveys',\n  toolbarDensityLabel: 'Tiiveys',\n  toolbarDensityCompact: 'Kompakti',\n  toolbarDensityStandard: 'Vakio',\n  toolbarDensityComfortable: 'Mukava',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Sarakkeet',\n  toolbarColumnsLabel: 'Valitse sarakkeet',\n  // Filters toolbar button text\n  toolbarFilters: 'Suodattimet',\n  toolbarFiltersLabel: 'Näytä suodattimet',\n  toolbarFiltersTooltipHide: 'Piilota suodattimet',\n  toolbarFiltersTooltipShow: 'Näytä suodattimet',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} aktiivista suodatinta` : `${count} aktiivinen suodatin`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Hae…',\n  toolbarQuickFilterLabel: 'Hae',\n  toolbarQuickFilterDeleteIconLabel: 'Tyhjennä',\n  // Export selector toolbar button text\n  toolbarExport: 'Vie',\n  toolbarExportLabel: 'Vie',\n  toolbarExportCSV: 'Lataa CSV-muodossa',\n  toolbarExportPrint: 'Tulosta',\n  toolbarExportExcel: 'Lataa Excel-muodossa',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Etsi sarake',\n  columnsPanelTextFieldPlaceholder: 'Sarakkeen otsikko',\n  columnsPanelDragIconLabel: 'Järjestä sarake uudelleen',\n  columnsPanelShowAllButton: 'Näytä kaikki',\n  columnsPanelHideAllButton: 'Piilota kaikki',\n  // Filter panel text\n  filterPanelAddFilter: 'Lisää suodatin',\n  filterPanelDeleteIconLabel: 'Poista',\n  filterPanelLinkOperator: 'Logiikkaoperaattori',\n  filterPanelOperators: 'Operaattorit',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'Ja',\n  filterPanelOperatorOr: 'Tai',\n  filterPanelColumns: 'Sarakkeet',\n  filterPanelInputLabel: 'Arvo',\n  filterPanelInputPlaceholder: 'Suodattimen arvo',\n  // Filter operators text\n  filterOperatorContains: 'sisältää',\n  filterOperatorEquals: 'on yhtä suuri',\n  filterOperatorStartsWith: 'alkaa',\n  filterOperatorEndsWith: 'päättyy',\n  filterOperatorIs: 'on',\n  filterOperatorNot: 'ei ole',\n  filterOperatorAfter: 'on jälkeen',\n  filterOperatorOnOrAfter: 'on sama tai jälkeen',\n  filterOperatorBefore: 'on ennen',\n  filterOperatorOnOrBefore: 'on sama tai ennen',\n  filterOperatorIsEmpty: 'on tyhjä',\n  filterOperatorIsNotEmpty: 'ei ole tyhjä',\n  filterOperatorIsAnyOf: 'mikä tahansa seuraavista',\n  // Filter values text\n  filterValueAny: 'mikä tahansa',\n  filterValueTrue: 'tosi',\n  filterValueFalse: 'epätosi',\n  // Column menu text\n  columnMenuLabel: 'Valikko',\n  columnMenuShowColumns: 'Näytä sarakkeet',\n  columnMenuFilter: 'Suodata',\n  columnMenuHideColumn: 'Piilota',\n  columnMenuUnsort: 'Poista järjestys',\n  columnMenuSortAsc: 'Järjestä laskevasti',\n  columnMenuSortDesc: 'Järjestä nousevasti',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} aktiivista suodatinta` : `${count} aktiivinen suodatin`,\n  columnHeaderFiltersLabel: 'Näytä suodattimet',\n  columnHeaderSortIconLabel: 'Järjestä',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} riviä valittu` : `${count.toLocaleString()} rivi valittu`,\n  // Total row amount footer text\n  footerTotalRows: 'Rivejä yhteensä:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} / ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Valintaruutu',\n  checkboxSelectionSelectAllRows: 'Valitse kaikki rivit',\n  checkboxSelectionUnselectAllRows: 'Poista kaikkien rivien valinta',\n  checkboxSelectionSelectRow: 'Valitse rivi',\n  checkboxSelectionUnselectRow: 'Poista rivin valinta',\n  // Boolean cell text\n  booleanCellTrueLabel: 'tosi',\n  booleanCellFalseLabel: 'epätosi',\n  // Actions cell more text\n  actionsCellMore: 'lisää',\n  // Column pinning text\n  pinToLeft: 'Kiinnitä vasemmalle',\n  pinToRight: 'Kiinnitä oikealle',\n  unpin: 'Irrota kiinnitys',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Ryhmä',\n  treeDataExpand: 'Laajenna',\n  treeDataCollapse: 'Supista',\n  // Grouping columns\n  groupingColumnHeaderName: 'Ryhmä',\n  groupColumn: name => `Ryhmittelyperuste ${name}`,\n  unGroupColumn: name => `Poista ryhmittelyperuste ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Yksityiskohtapaneelin vaihto',\n  expandDetailPanel: 'Laajenna',\n  collapseDetailPanel: 'Tiivistä',\n  // Row reordering text\n  rowReorderingHeaderName: 'Rivien uudelleenjärjestely',\n  // Aggregation\n  aggregationMenuItemHeader: 'Koostaminen',\n  aggregationFunctionLabelSum: 'summa',\n  aggregationFunctionLabelAvg: 'ka.',\n  aggregationFunctionLabelMin: 'min.',\n  aggregationFunctionLabelMax: 'maks.',\n  aggregationFunctionLabelSize: 'koko'\n};\nexport const fiFI = getGridLocalization(fiFIGrid, fiFICore);","import { frFR as frFRCore } from '@mui/material/locale';\nimport { getGridLocalization } from '../utils/getGridLocalization';\nconst frFRGrid = {\n  // Root\n  noRowsLabel: 'Pas de résultats',\n  noResultsOverlayLabel: 'Aucun résultat.',\n  errorOverlayDefaultLabel: 'Une erreur est apparue.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Densité',\n  toolbarDensityLabel: 'Densité',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Confortable',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Colonnes',\n  toolbarColumnsLabel: 'Choisir les colonnes',\n  // Filters toolbar button text\n  toolbarFilters: 'Filtres',\n  toolbarFiltersLabel: 'Afficher les filtres',\n  toolbarFiltersTooltipHide: 'Cacher les filtres',\n  toolbarFiltersTooltipShow: 'Afficher les filtres',\n  toolbarFiltersTooltipActive: count => count > 1 ? `${count} filtres actifs` : `${count} filtre actif`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Recherche…',\n  toolbarQuickFilterLabel: 'Recherche',\n  toolbarQuickFilterDeleteIconLabel: 'Supprimer',\n  // Export selector toolbar button text\n  toolbarExport: 'Exporter',\n  toolbarExportLabel: 'Exporter',\n  toolbarExportCSV: 'Télécharger en CSV',\n  toolbarExportPrint: 'Imprimer',\n  toolbarExportExcel: 'Télécharger pour Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Chercher colonne',\n  columnsPanelTextFieldPlaceholder: 'Titre de la colonne',\n  columnsPanelDragIconLabel: 'Réorganiser la colonne',\n  columnsPanelShowAllButton: 'Tout afficher',\n  columnsPanelHideAllButton: 'Tout cacher',\n  // Filter panel text\n  filterPanelAddFilter: 'Ajouter un filtre',\n  filterPanelDeleteIconLabel: 'Supprimer',\n  filterPanelLinkOperator: 'Opérateur logique',\n  filterPanelOperators: 'Opérateur',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'Et',\n  filterPanelOperatorOr: 'Ou',\n  filterPanelColumns: 'Colonnes',\n  filterPanelInputLabel: 'Valeur',\n  filterPanelInputPlaceholder: 'Filtrer la valeur',\n  // Filter operators text\n  filterOperatorContains: 'contient',\n  filterOperatorEquals: 'égal à',\n  filterOperatorStartsWith: 'commence par',\n  filterOperatorEndsWith: 'se termine par',\n  filterOperatorIs: 'est',\n  filterOperatorNot: \"n'est pas\",\n  filterOperatorAfter: 'postérieur',\n  filterOperatorOnOrAfter: 'égal ou postérieur',\n  filterOperatorBefore: 'antérieur',\n  filterOperatorOnOrBefore: 'égal ou antérieur',\n  filterOperatorIsEmpty: 'est vide',\n  filterOperatorIsNotEmpty: \"n'est pas vide\",\n  filterOperatorIsAnyOf: 'fait parti de',\n  // Filter values text\n  filterValueAny: 'tous',\n  filterValueTrue: 'vrai',\n  filterValueFalse: 'faux',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Afficher les colonnes',\n  columnMenuFilter: 'Filtrer',\n  columnMenuHideColumn: 'Cacher',\n  columnMenuUnsort: 'Annuler le tri',\n  columnMenuSortAsc: 'Tri ascendant',\n  columnMenuSortDesc: 'Tri descendant',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count > 1 ? `${count} filtres actifs` : `${count} filtre actif`,\n  columnHeaderFiltersLabel: 'Afficher les filtres',\n  columnHeaderSortIconLabel: 'Trier',\n  // Rows selected footer text\n  footerRowSelected: count => count > 1 ? `${count.toLocaleString()} lignes sélectionnées` : `${count.toLocaleString()} ligne sélectionnée`,\n  // Total row amount footer text\n  footerTotalRows: 'Lignes totales :',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} sur ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Sélection',\n  checkboxSelectionSelectAllRows: 'Sélectionner toutes les lignes',\n  checkboxSelectionUnselectAllRows: 'Désélectionner toutes les lignes',\n  checkboxSelectionSelectRow: 'Sélectionner la ligne',\n  checkboxSelectionUnselectRow: 'Désélectionner la ligne',\n  // Boolean cell text\n  booleanCellTrueLabel: 'vrai',\n  booleanCellFalseLabel: 'faux',\n  // Actions cell more text\n  actionsCellMore: 'Plus',\n  // Column pinning text\n  pinToLeft: 'Épingler à gauche',\n  pinToRight: 'Épingler à droite',\n  unpin: 'Désépingler',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Groupe',\n  treeDataExpand: 'afficher les enfants',\n  treeDataCollapse: 'masquer les enfants',\n  // Grouping columns\n  groupingColumnHeaderName: 'Groupe',\n  groupColumn: name => `Grouper par ${name}`,\n  unGroupColumn: name => `Arrêter de grouper par ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Afficher/masquer les détails',\n  expandDetailPanel: 'Afficher',\n  collapseDetailPanel: 'Masquer',\n  // Row reordering text\n  rowReorderingHeaderName: 'Positionnement des lignes' // Aggregation\n  // aggregationMenuItemHeader: 'Aggregation',\n  // aggregationFunctionLabelSum: 'sum',\n  // aggregationFunctionLabelAvg: 'avg',\n  // aggregationFunctionLabelMin: 'min',\n  // aggregationFunctionLabelMax: 'max',\n  // aggregationFunctionLabelSize: 'size',\n\n};\nexport const frFR = getGridLocalization(frFRGrid, frFRCore);","import { heIL as heILCore } from '@mui/material/locale';\nimport { getGridLocalization } from '../utils/getGridLocalization';\nconst heILGrid = {\n  // Root\n  noRowsLabel: 'אין שורות',\n  noResultsOverlayLabel: 'לא נמצאו תוצאות.',\n  errorOverlayDefaultLabel: 'אירעה שגיאה.',\n  // Density selector toolbar button text\n  toolbarDensity: 'צפיפות',\n  toolbarDensityLabel: 'צפיפות',\n  toolbarDensityCompact: 'דחוסה',\n  toolbarDensityStandard: 'רגילה',\n  toolbarDensityComfortable: 'אוורירית',\n  // Columns selector toolbar button text\n  toolbarColumns: 'עמודות',\n  toolbarColumnsLabel: 'בחר עמודות',\n  // Filters toolbar button text\n  toolbarFilters: 'סינון',\n  toolbarFiltersLabel: 'הצג מסננים',\n  toolbarFiltersTooltipHide: 'הסתר מסננים',\n  toolbarFiltersTooltipShow: 'הצג מסננים',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} מסננים פעילים` : `מסנן אחד פעיל`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'חיפוש…',\n  toolbarQuickFilterLabel: 'חיפוש',\n  toolbarQuickFilterDeleteIconLabel: 'ניקוי',\n  // Export selector toolbar button text\n  toolbarExport: 'ייצוא',\n  toolbarExportLabel: 'ייצוא',\n  toolbarExportCSV: 'ייצוא ל- CSV',\n  toolbarExportPrint: 'הדפסה',\n  toolbarExportExcel: 'ייצוא ל- Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'חפש עמודה',\n  columnsPanelTextFieldPlaceholder: 'כותרת עמודה',\n  columnsPanelDragIconLabel: 'סדר עמודות מחדש',\n  columnsPanelShowAllButton: 'הצג הכל',\n  columnsPanelHideAllButton: 'הסתר הכל',\n  // Filter panel text\n  filterPanelAddFilter: 'הוסף מסנן',\n  filterPanelDeleteIconLabel: 'מחק',\n  filterPanelLinkOperator: 'אופרטור לוגי',\n  filterPanelOperators: 'אופרטור',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'וגם',\n  filterPanelOperatorOr: 'או',\n  filterPanelColumns: 'עמודות',\n  filterPanelInputLabel: 'ערך',\n  filterPanelInputPlaceholder: 'ערך מסנן',\n  // Filter operators text\n  filterOperatorContains: 'מכיל',\n  filterOperatorEquals: 'שווה',\n  filterOperatorStartsWith: 'מתחיל ב-',\n  filterOperatorEndsWith: 'נגמר ב-',\n  filterOperatorIs: 'הינו',\n  filterOperatorNot: 'אינו',\n  filterOperatorAfter: 'אחרי',\n  filterOperatorOnOrAfter: 'ב- או אחרי',\n  filterOperatorBefore: 'לפני',\n  filterOperatorOnOrBefore: 'ב- או לפני',\n  filterOperatorIsEmpty: 'ריק',\n  filterOperatorIsNotEmpty: 'אינו ריק',\n  filterOperatorIsAnyOf: 'הוא אחד מ-',\n  // Filter values text\n  filterValueAny: 'כל ערך',\n  filterValueTrue: 'כן',\n  filterValueFalse: 'לא',\n  // Column menu text\n  columnMenuLabel: 'תפריט',\n  columnMenuShowColumns: 'הצג עמודות',\n  columnMenuFilter: 'סנן',\n  columnMenuHideColumn: 'הסתר',\n  columnMenuUnsort: 'בטל מיון',\n  columnMenuSortAsc: 'מיין בסדר עולה',\n  columnMenuSortDesc: 'מיין בסדר יורד',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} מסננים פעילים` : `מסנן אחד פעיל`,\n  columnHeaderFiltersLabel: 'הצג מסננים',\n  columnHeaderSortIconLabel: 'מיין',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} שורות נבחרו` : `שורה אחת נבחרה`,\n  // Total row amount footer text\n  footerTotalRows: 'סך הכל:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} מתוך ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'בחירה',\n  checkboxSelectionSelectAllRows: 'בחר הכל',\n  checkboxSelectionUnselectAllRows: 'בטל הכל',\n  checkboxSelectionSelectRow: 'בחר שורה',\n  checkboxSelectionUnselectRow: 'בטל בחירת שורה',\n  // Boolean cell text\n  booleanCellTrueLabel: 'כן',\n  booleanCellFalseLabel: 'לא',\n  // Actions cell more text\n  actionsCellMore: 'עוד',\n  // Column pinning text\n  pinToLeft: 'נעץ משמאל',\n  pinToRight: 'נעץ מימין',\n  unpin: 'בטל נעיצה',\n  // Tree Data\n  treeDataGroupingHeaderName: 'קבוצה',\n  treeDataExpand: 'הרחב',\n  treeDataCollapse: 'כווץ',\n  // Grouping columns\n  groupingColumnHeaderName: 'קבוצה',\n  groupColumn: name => `קבץ לפי ${name}`,\n  unGroupColumn: name => `הפסק לקבץ לפי ${name}`,\n  // Master/detail\n  // detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'הרחב',\n  collapseDetailPanel: 'כווץ',\n  // Row reordering text\n  rowReorderingHeaderName: 'סידור שורות' // Aggregation\n  // aggregationMenuItemHeader: 'Aggregation',\n  // aggregationFunctionLabelSum: 'sum',\n  // aggregationFunctionLabelAvg: 'avg',\n  // aggregationFunctionLabelMin: 'min',\n  // aggregationFunctionLabelMax: 'max',\n  // aggregationFunctionLabelSize: 'size',\n\n};\nexport const heIL = getGridLocalization(heILGrid, heILCore);","import { huHU as huHUCore } from '@mui/material/locale';\nimport { getGridLocalization } from '../utils/getGridLocalization';\nconst huHUGrid = {\n  // Root\n  noRowsLabel: 'Nincsenek sorok',\n  noResultsOverlayLabel: 'Nincs találat.',\n  errorOverlayDefaultLabel: 'Váratlan hiba történt.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Sormagasság',\n  toolbarDensityLabel: 'Sormagasság',\n  toolbarDensityCompact: 'Kompakt',\n  toolbarDensityStandard: 'Normál',\n  toolbarDensityComfortable: 'Kényelmes',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Oszlopok',\n  toolbarColumnsLabel: 'Oszlopok kiválasztása',\n  // Filters toolbar button text\n  toolbarFilters: 'Szűrők',\n  toolbarFiltersLabel: 'Szűrők megjelenítése',\n  toolbarFiltersTooltipHide: 'Szűrők elrejtése',\n  toolbarFiltersTooltipShow: 'Szűrők megjelenítése',\n  toolbarFiltersTooltipActive: count => `${count} aktív szűrő`,\n  // Quick filter toolbar field\n  // toolbarQuickFilterPlaceholder: 'Search…',\n  // toolbarQuickFilterLabel: 'Search',\n  // toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Exportálás',\n  toolbarExportLabel: 'Exportálás',\n  toolbarExportCSV: 'Mentés CSV fájlként',\n  toolbarExportPrint: 'Nyomtatás',\n  // toolbarExportExcel: 'Download as Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Oszlop keresése',\n  columnsPanelTextFieldPlaceholder: 'Oszlop neve',\n  columnsPanelDragIconLabel: 'Oszlop átrendezése',\n  columnsPanelShowAllButton: 'Összes megjelenítése',\n  columnsPanelHideAllButton: 'Összes elrejtése',\n  // Filter panel text\n  filterPanelAddFilter: 'Szűrő hozzáadása',\n  filterPanelDeleteIconLabel: 'Törlés',\n  filterPanelLinkOperator: 'Logikai operátor',\n  filterPanelOperators: 'Operátorok',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'És',\n  filterPanelOperatorOr: 'Vagy',\n  filterPanelColumns: 'Oszlopok',\n  filterPanelInputLabel: 'Érték',\n  filterPanelInputPlaceholder: 'Érték szűrése',\n  // Filter operators text\n  filterOperatorContains: 'tartalmazza:',\n  filterOperatorEquals: 'egyenlő ezzel:',\n  filterOperatorStartsWith: 'ezzel kezdődik:',\n  filterOperatorEndsWith: 'ezzel végződik:',\n  filterOperatorIs: 'a következő:',\n  filterOperatorNot: 'nem a következő:',\n  filterOperatorAfter: 'ezutáni:',\n  filterOperatorOnOrAfter: 'ekkori vagy ezutáni:',\n  filterOperatorBefore: 'ezelőtti:',\n  filterOperatorOnOrBefore: 'ekkori vagy ezelőtti:',\n  filterOperatorIsEmpty: 'üres',\n  filterOperatorIsNotEmpty: 'nem üres',\n  filterOperatorIsAnyOf: 'a következők egyike:',\n  // Filter values text\n  filterValueAny: 'bármilyen',\n  filterValueTrue: 'igaz',\n  filterValueFalse: 'hamis',\n  // Column menu text\n  columnMenuLabel: 'Menü',\n  columnMenuShowColumns: 'Oszlopok megjelenítése',\n  columnMenuFilter: 'Szűrők',\n  columnMenuHideColumn: 'Elrejtés',\n  columnMenuUnsort: 'Sorrend visszaállítása',\n  columnMenuSortAsc: 'Növekvő sorrendbe',\n  columnMenuSortDesc: 'Csökkenő sorrendbe',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => `${count} aktív szűrő`,\n  columnHeaderFiltersLabel: 'Szűrők megjelenítése',\n  columnHeaderSortIconLabel: 'Átrendezés',\n  // Rows selected footer text\n  footerRowSelected: count => `${count.toLocaleString()} sor kiválasztva`,\n  // Total row amount footer text\n  footerTotalRows: 'Összesen:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} (összesen: ${totalCount.toLocaleString()})`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Jelölőnégyzetes kijelölés',\n  checkboxSelectionSelectAllRows: 'Minden sor kijelölése',\n  checkboxSelectionUnselectAllRows: 'Minden sor kijelölésének törlése',\n  checkboxSelectionSelectRow: 'Sor kijelölése',\n  checkboxSelectionUnselectRow: 'Sor kijelölésének törlése',\n  // Boolean cell text\n  booleanCellTrueLabel: 'igen',\n  booleanCellFalseLabel: 'nem',\n  // Actions cell more text\n  actionsCellMore: 'további',\n  // Column pinning text\n  pinToLeft: 'Rögzítés balra',\n  pinToRight: 'Rögzítés jobbra',\n  unpin: 'Rögzítés törlése',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Csoport',\n  treeDataExpand: 'gyermekek megjelenítése',\n  treeDataCollapse: 'gyermekek elrejtése',\n  // Grouping columns\n  groupingColumnHeaderName: 'Csoportosítás',\n  groupColumn: name => `Csoportosítás ${name} szerint`,\n  unGroupColumn: name => `${name} szerinti csoportosítás törlése`,\n  // Master/detail\n  // detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Kibontás',\n  collapseDetailPanel: 'Összecsukás' // Row reordering text\n  // rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  // aggregationMenuItemHeader: 'Aggregation',\n  // aggregationFunctionLabelSum: 'sum',\n  // aggregationFunctionLabelAvg: 'avg',\n  // aggregationFunctionLabelMin: 'min',\n  // aggregationFunctionLabelMax: 'max',\n  // aggregationFunctionLabelSize: 'size',\n\n};\nexport const huHU = getGridLocalization(huHUGrid, huHUCore);","import { itIT as itITCore } from '@mui/material/locale';\nimport { getGridLocalization } from '../utils/getGridLocalization';\nconst itITGrid = {\n  // Root\n  noRowsLabel: 'Nessun record',\n  noResultsOverlayLabel: 'Nessun record trovato.',\n  errorOverlayDefaultLabel: 'Si è verificato un errore.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Densità',\n  toolbarDensityLabel: 'Densità',\n  toolbarDensityCompact: 'Compatta',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Comoda',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Colonne',\n  toolbarColumnsLabel: 'Seleziona le colonne',\n  // Filters toolbar button text\n  toolbarFilters: 'Filtri',\n  toolbarFiltersLabel: 'Mostra i filtri',\n  toolbarFiltersTooltipHide: 'Nascondi i filtri',\n  toolbarFiltersTooltipShow: 'Mostra i filtri',\n  toolbarFiltersTooltipActive: count => count > 1 ? `${count} filtri attivi` : `${count} filtro attivo`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Cerca…',\n  toolbarQuickFilterLabel: 'Cerca',\n  toolbarQuickFilterDeleteIconLabel: 'Resetta',\n  // Export selector toolbar button text\n  toolbarExport: 'Esporta',\n  toolbarExportLabel: 'Esporta',\n  toolbarExportCSV: 'Esporta in CSV',\n  toolbarExportPrint: 'Stampa',\n  toolbarExportExcel: 'Scarica come Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Cerca colonna',\n  columnsPanelTextFieldPlaceholder: 'Titolo della colonna',\n  columnsPanelDragIconLabel: 'Riordina la colonna',\n  columnsPanelShowAllButton: 'Mostra tutto',\n  columnsPanelHideAllButton: 'Nascondi tutto',\n  // Filter panel text\n  filterPanelAddFilter: 'Aggiungi un filtro',\n  filterPanelDeleteIconLabel: 'Rimuovi',\n  filterPanelLinkOperator: 'Operatore logico',\n  filterPanelOperators: 'Operatori',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'E (and)',\n  filterPanelOperatorOr: 'O (or)',\n  filterPanelColumns: 'Colonne',\n  filterPanelInputLabel: 'Valore',\n  filterPanelInputPlaceholder: 'Filtra il valore',\n  // Filter operators text\n  filterOperatorContains: 'contiene',\n  filterOperatorEquals: 'uguale a',\n  filterOperatorStartsWith: 'comincia per',\n  filterOperatorEndsWith: 'termina per',\n  filterOperatorIs: 'uguale a',\n  filterOperatorNot: 'diversa da',\n  filterOperatorAfter: 'dopo il',\n  filterOperatorOnOrAfter: 'a partire dal',\n  filterOperatorBefore: 'prima del',\n  filterOperatorOnOrBefore: 'fino al',\n  filterOperatorIsEmpty: 'è vuoto',\n  filterOperatorIsNotEmpty: 'non è vuoto',\n  filterOperatorIsAnyOf: 'è uno tra',\n  // Filter values text\n  filterValueAny: 'qualunque',\n  filterValueTrue: 'vero',\n  filterValueFalse: 'falso',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Mostra le colonne',\n  columnMenuFilter: 'Filtra',\n  columnMenuHideColumn: 'Nascondi',\n  columnMenuUnsort: \"Annulla l'ordinamento\",\n  columnMenuSortAsc: 'Ordinamento crescente',\n  columnMenuSortDesc: 'Ordinamento decrescente',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count > 1 ? `${count} filtri attivi` : `${count} filtro attivo`,\n  columnHeaderFiltersLabel: 'Mostra i filtri',\n  columnHeaderSortIconLabel: 'Ordina',\n  // Rows selected footer text\n  footerRowSelected: count => count > 1 ? `${count.toLocaleString()} record selezionati` : `${count.toLocaleString()} record selezionato`,\n  // Total row amount footer text\n  footerTotalRows: 'Record totali:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} di ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Seleziona',\n  checkboxSelectionSelectAllRows: 'Seleziona tutte le righe',\n  checkboxSelectionUnselectAllRows: 'Deseleziona tutte le righe',\n  checkboxSelectionSelectRow: 'Seleziona riga',\n  checkboxSelectionUnselectRow: 'Deseleziona riga',\n  // Boolean cell text\n  booleanCellTrueLabel: 'vero',\n  booleanCellFalseLabel: 'falso',\n  // Actions cell more text\n  actionsCellMore: 'più',\n  // Column pinning text\n  pinToLeft: 'Blocca a sinistra',\n  pinToRight: 'Blocca a destra',\n  unpin: 'Sblocca',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Gruppo',\n  treeDataExpand: 'mostra figli',\n  treeDataCollapse: 'nascondi figli',\n  // Grouping columns\n  groupingColumnHeaderName: 'Gruppo',\n  groupColumn: name => `Raggruppa per ${name}`,\n  unGroupColumn: name => `Annulla raggruppamento per ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Abilita pannello dettagli',\n  expandDetailPanel: 'Espandi',\n  collapseDetailPanel: 'Comprimi',\n  // Row reordering text\n  rowReorderingHeaderName: 'Riordinamento righe' // Aggregation\n  // aggregationMenuItemHeader: 'Aggregation',\n  // aggregationFunctionLabelSum: 'sum',\n  // aggregationFunctionLabelAvg: 'avg',\n  // aggregationFunctionLabelMin: 'min',\n  // aggregationFunctionLabelMax: 'max',\n  // aggregationFunctionLabelSize: 'size',\n\n};\nexport const itIT = getGridLocalization(itITGrid, itITCore);","import { jaJP as jaJPCore } from '@mui/material/locale';\nimport { getGridLocalization } from '../utils/getGridLocalization';\nconst jaJPGrid = {\n  // Root\n  noRowsLabel: '行がありません。',\n  noResultsOverlayLabel: '結果がありません。',\n  errorOverlayDefaultLabel: 'エラーが発生しました。',\n  // Density selector toolbar button text\n  toolbarDensity: '行間隔',\n  toolbarDensityLabel: '行間隔',\n  toolbarDensityCompact: 'コンパクト',\n  toolbarDensityStandard: '標準',\n  toolbarDensityComfortable: 'ひろめ',\n  // Columns selector toolbar button text\n  toolbarColumns: '列一覧',\n  toolbarColumnsLabel: '列選択',\n  // Filters toolbar button text\n  toolbarFilters: 'フィルター',\n  toolbarFiltersLabel: 'フィルター表示',\n  toolbarFiltersTooltipHide: 'フィルター非表示',\n  toolbarFiltersTooltipShow: 'フィルター表示',\n  toolbarFiltersTooltipActive: count => `${count}件のフィルターを適用中`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: '検索…',\n  toolbarQuickFilterLabel: '検索',\n  toolbarQuickFilterDeleteIconLabel: 'クリア',\n  // Export selector toolbar button text\n  toolbarExport: 'エクスポート',\n  toolbarExportLabel: 'エクスポート',\n  toolbarExportCSV: 'CSVダウンロード',\n  toolbarExportPrint: '印刷',\n  toolbarExportExcel: 'Excelダウンロード',\n  // Columns panel text\n  columnsPanelTextFieldLabel: '列検索',\n  columnsPanelTextFieldPlaceholder: '検索クエリを入力…',\n  columnsPanelDragIconLabel: '列並べ替え',\n  columnsPanelShowAllButton: 'すべて表示',\n  columnsPanelHideAllButton: 'すべて非表示',\n  // Filter panel text\n  filterPanelAddFilter: 'フィルター追加',\n  filterPanelDeleteIconLabel: '削除',\n  // filterPanelLinkOperator: 'Logic operator',\n  filterPanelOperators: 'オペレータ',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'And',\n  filterPanelOperatorOr: 'Or',\n  filterPanelColumns: '列',\n  filterPanelInputLabel: '値',\n  filterPanelInputPlaceholder: '値を入力…',\n  // Filter operators text\n  filterOperatorContains: '...を含む',\n  filterOperatorEquals: '...に等しい',\n  filterOperatorStartsWith: '...で始まる',\n  filterOperatorEndsWith: '...で終わる',\n  filterOperatorIs: '...である',\n  filterOperatorNot: '...でない',\n  filterOperatorAfter: '...より後ろ',\n  filterOperatorOnOrAfter: '...以降',\n  filterOperatorBefore: '...より前',\n  filterOperatorOnOrBefore: '...以前',\n  filterOperatorIsEmpty: '...空である',\n  filterOperatorIsNotEmpty: '...空でない',\n  filterOperatorIsAnyOf: '...のいずれか',\n  // Filter values text\n  // filterValueAny: 'any',\n  // filterValueTrue: 'true',\n  // filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'メニュー',\n  columnMenuShowColumns: '列表示',\n  columnMenuFilter: 'フィルター',\n  columnMenuHideColumn: '列非表示',\n  columnMenuUnsort: 'ソート解除',\n  columnMenuSortAsc: '昇順ソート',\n  columnMenuSortDesc: '降順ソート',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => `${count}件のフィルターを適用中`,\n  columnHeaderFiltersLabel: 'フィルター表示',\n  columnHeaderSortIconLabel: 'ソート',\n  // Rows selected footer text\n  footerRowSelected: count => `${count}行を選択中`,\n  // Total row amount footer text\n  footerTotalRows: '総行数:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} / ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'チェックボックス',\n  checkboxSelectionSelectAllRows: 'すべての行を選択',\n  checkboxSelectionUnselectAllRows: 'すべての行選択を解除',\n  checkboxSelectionSelectRow: '行を選択',\n  checkboxSelectionUnselectRow: '行選択を解除',\n  // Boolean cell text\n  booleanCellTrueLabel: '真',\n  booleanCellFalseLabel: '偽',\n  // Actions cell more text\n  // actionsCellMore: 'more',\n  // Column pinning text\n  pinToLeft: '左側に固定',\n  pinToRight: '右側に固定',\n  unpin: '固定解除',\n  // Tree Data\n  treeDataGroupingHeaderName: 'グループ',\n  treeDataExpand: '展開',\n  treeDataCollapse: '折りたたみ',\n  // Grouping columns\n  groupingColumnHeaderName: 'グループ',\n  groupColumn: name => `${name}でグループ化`,\n  unGroupColumn: name => `${name}のグループを解除`,\n  // Master/detail\n  // detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: '展開',\n  collapseDetailPanel: '折りたたみ',\n  // Row reordering text\n  rowReorderingHeaderName: '行並び替え' // Aggregation\n  // aggregationMenuItemHeader: 'Aggregation',\n  // aggregationFunctionLabelSum: 'sum',\n  // aggregationFunctionLabelAvg: 'avg',\n  // aggregationFunctionLabelMin: 'min',\n  // aggregationFunctionLabelMax: 'max',\n  // aggregationFunctionLabelSize: 'size',\n\n};\nexport const jaJP = getGridLocalization(jaJPGrid, jaJPCore);","import { koKR as koKRCore } from '@mui/material/locale';\nimport { getGridLocalization } from '../utils/getGridLocalization';\nconst koKRGrid = {\n  // Root\n  noRowsLabel: '행이 없습니다.',\n  noResultsOverlayLabel: '결과값이 없습니다.',\n  errorOverlayDefaultLabel: '오류가 발생했습니다.',\n  // Density selector toolbar button text\n  toolbarDensity: '행 간격',\n  toolbarDensityLabel: '행 간격',\n  toolbarDensityCompact: '좁게',\n  toolbarDensityStandard: '기본',\n  toolbarDensityComfortable: '넓게',\n  // Columns selector toolbar button text\n  toolbarColumns: '열 목록',\n  toolbarColumnsLabel: '열 선택',\n  // Filters toolbar button text\n  toolbarFilters: '필터',\n  toolbarFiltersLabel: '필터 표시',\n  toolbarFiltersTooltipHide: '필터 숨기기',\n  toolbarFiltersTooltipShow: '필터 표시',\n  toolbarFiltersTooltipActive: count => `${count}건의 필터를 적용중`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: '검색…',\n  toolbarQuickFilterLabel: '검색',\n  toolbarQuickFilterDeleteIconLabel: '초기화',\n  // Export selector toolbar button text\n  toolbarExport: '내보내기',\n  toolbarExportLabel: '내보내기',\n  toolbarExportCSV: 'CSV로 내보내기',\n  toolbarExportPrint: '프린트',\n  toolbarExportExcel: 'Excel로 내보내기',\n  // Columns panel text\n  columnsPanelTextFieldLabel: '열 검색',\n  columnsPanelTextFieldPlaceholder: '열 이름',\n  columnsPanelDragIconLabel: '열 정렬',\n  columnsPanelShowAllButton: '모두 보기',\n  columnsPanelHideAllButton: '모두 숨기기',\n  // Filter panel text\n  filterPanelAddFilter: '필터 추가',\n  filterPanelDeleteIconLabel: '삭제',\n  filterPanelLinkOperator: '논리 연산자',\n  filterPanelOperators: '연산자',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: '그리고',\n  filterPanelOperatorOr: '또는',\n  filterPanelColumns: '목록',\n  filterPanelInputLabel: '값',\n  filterPanelInputPlaceholder: '값 입력',\n  // Filter operators text\n  filterOperatorContains: '포함하는',\n  filterOperatorEquals: '값이 같은',\n  filterOperatorStartsWith: '시작하는',\n  filterOperatorEndsWith: '끝나는',\n  filterOperatorIs: '~인',\n  filterOperatorNot: '~아닌',\n  filterOperatorAfter: '더 이후',\n  filterOperatorOnOrAfter: '이후',\n  filterOperatorBefore: '더 이전',\n  filterOperatorOnOrBefore: '이전',\n  filterOperatorIsEmpty: '값이 없는',\n  filterOperatorIsNotEmpty: '값이 있는',\n  filterOperatorIsAnyOf: '값 중 하나인',\n  // Filter values text\n  filterValueAny: '아무값',\n  filterValueTrue: '참',\n  filterValueFalse: '거짓',\n  // Column menu text\n  columnMenuLabel: '메뉴',\n  columnMenuShowColumns: '열 표시',\n  columnMenuFilter: '필터',\n  columnMenuHideColumn: '열 숨기기',\n  columnMenuUnsort: '정렬 해제',\n  columnMenuSortAsc: '오름차순 정렬',\n  columnMenuSortDesc: '내림차순 정렬',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => `${count}건의 필터를 적용중`,\n  columnHeaderFiltersLabel: '필터 표시',\n  columnHeaderSortIconLabel: '정렬',\n  // Rows selected footer text\n  footerRowSelected: count => `${count}행 선택중`,\n  // Total row amount footer text\n  footerTotalRows: '총 행수:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} / ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: '선택',\n  checkboxSelectionSelectAllRows: '모든 행 선택',\n  checkboxSelectionUnselectAllRows: '모든 행 선택 해제',\n  checkboxSelectionSelectRow: '행 선택',\n  checkboxSelectionUnselectRow: '행 선택 해제',\n  // Boolean cell text\n  booleanCellTrueLabel: '참',\n  booleanCellFalseLabel: '거짓',\n  // Actions cell more text\n  actionsCellMore: '더보기',\n  // Column pinning text\n  pinToLeft: '왼쪽에 고정',\n  pinToRight: '오른쪽에 고정',\n  unpin: '고정 해제',\n  // Tree Data\n  treeDataGroupingHeaderName: '그룹',\n  treeDataExpand: '하위노드 펼치기',\n  treeDataCollapse: '하위노드 접기',\n  // Grouping columns\n  groupingColumnHeaderName: '그룹',\n  groupColumn: name => `${name} 값으로 그룹 생성`,\n  unGroupColumn: name => `${name} 값으로 그룹 해제`,\n  // Master/detail\n  detailPanelToggle: '상세 패널 토글',\n  expandDetailPanel: '열기',\n  collapseDetailPanel: '접기',\n  // Row reordering text\n  rowReorderingHeaderName: '행 재배치',\n  // Aggregation\n  aggregationMenuItemHeader: '총계',\n  aggregationFunctionLabelSum: '합',\n  aggregationFunctionLabelAvg: '평균',\n  aggregationFunctionLabelMin: '최소값',\n  aggregationFunctionLabelMax: '최대값',\n  aggregationFunctionLabelSize: '크기'\n};\nexport const koKR = getGridLocalization(koKRGrid, koKRCore);","import { nbNO as nbNOCore } from '@mui/material/locale';\nimport { getGridLocalization } from '../utils/getGridLocalization';\nconst nbNOGrid = {\n  // Root\n  noRowsLabel: 'Ingen rader',\n  noResultsOverlayLabel: 'Fant ingen resultat.',\n  errorOverlayDefaultLabel: 'Det skjedde en feil.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Tetthet',\n  toolbarDensityLabel: 'Tetthet',\n  toolbarDensityCompact: 'Kompakt',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Komfortabelt',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Kolonner',\n  toolbarColumnsLabel: 'Velg kolonner',\n  // Filters toolbar button text\n  toolbarFilters: 'Filter',\n  toolbarFiltersLabel: 'Vis filter',\n  toolbarFiltersTooltipHide: 'Skjul fitler',\n  toolbarFiltersTooltipShow: 'Vis filter',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} aktive filter` : `${count} aktivt filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Søk…',\n  toolbarQuickFilterLabel: 'Søk',\n  toolbarQuickFilterDeleteIconLabel: 'Slett',\n  // Export selector toolbar button text\n  toolbarExport: 'Eksporter',\n  toolbarExportLabel: 'Eksporter',\n  toolbarExportCSV: 'Last ned som CSV',\n  toolbarExportPrint: 'Skriv ut',\n  toolbarExportExcel: 'Last ned som Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Finn kolonne',\n  columnsPanelTextFieldPlaceholder: 'Kolonne tittel',\n  columnsPanelDragIconLabel: 'Reorganiser kolonne',\n  columnsPanelShowAllButton: 'Vis alle',\n  columnsPanelHideAllButton: 'Skjul alle',\n  // Filter panel text\n  filterPanelAddFilter: 'Legg til filter',\n  filterPanelDeleteIconLabel: 'Slett',\n  filterPanelLinkOperator: 'Logisk operator',\n  filterPanelOperators: 'Operatører',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'Og',\n  filterPanelOperatorOr: 'Eller',\n  filterPanelColumns: 'Kolonner',\n  filterPanelInputLabel: 'Verdi',\n  filterPanelInputPlaceholder: 'Filter verdi',\n  // Filter operators text\n  filterOperatorContains: 'inneholder',\n  filterOperatorEquals: 'er lik',\n  filterOperatorStartsWith: 'starter med',\n  filterOperatorEndsWith: 'slutter med',\n  filterOperatorIs: 'er',\n  filterOperatorNot: 'er ikke',\n  filterOperatorAfter: 'er etter',\n  filterOperatorOnOrAfter: 'er på eller etter',\n  filterOperatorBefore: 'er før',\n  filterOperatorOnOrBefore: 'er på eller før',\n  filterOperatorIsEmpty: 'er tom',\n  filterOperatorIsNotEmpty: 'er ikke tom',\n  filterOperatorIsAnyOf: 'er en av',\n  // Filter values text\n  filterValueAny: 'noen',\n  filterValueTrue: 'sant',\n  filterValueFalse: 'usant',\n  // Column menu text\n  columnMenuLabel: 'Meny',\n  columnMenuShowColumns: 'Vis kolonner',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Skjul',\n  columnMenuUnsort: 'Usorter',\n  columnMenuSortAsc: 'Sorter ØKENDE',\n  columnMenuSortDesc: 'Sorter SYNKENDE',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} aktive filter` : `${count} aktivt filter`,\n  columnHeaderFiltersLabel: 'Vis filter',\n  columnHeaderSortIconLabel: 'Sorter',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rader valgt` : `${count.toLocaleString()} rad valgt`,\n  // Total row amount footer text\n  footerTotalRows: 'Totalt antall rader:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} av ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Avmerkingsboks valgt',\n  checkboxSelectionSelectAllRows: 'Velg alle rader',\n  checkboxSelectionUnselectAllRows: 'Velg bort alle rader',\n  checkboxSelectionSelectRow: 'Velg rad',\n  checkboxSelectionUnselectRow: 'Velg bort rad',\n  // Boolean cell text\n  booleanCellTrueLabel: 'sant',\n  booleanCellFalseLabel: 'usant',\n  // Actions cell more text\n  actionsCellMore: 'mer',\n  // Column pinning text\n  pinToLeft: 'Fest til venstre',\n  pinToRight: 'Fest til høyre',\n  unpin: 'Løsne',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Grupper',\n  treeDataExpand: 'se barn',\n  treeDataCollapse: 'skjul barn',\n  // Grouping columns\n  groupingColumnHeaderName: 'Grupper',\n  groupColumn: name => `Grupper på ${name}`,\n  unGroupColumn: name => `Stopp å grupper på ${name}`,\n  // Master/detail\n  // detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Utvid',\n  collapseDetailPanel: 'Kollaps',\n  // Row reordering text\n  rowReorderingHeaderName: 'Rad reorganisering' // Aggregation\n  // aggregationMenuItemHeader: 'Aggregation',\n  // aggregationFunctionLabelSum: 'sum',\n  // aggregationFunctionLabelAvg: 'avg',\n  // aggregationFunctionLabelMin: 'min',\n  // aggregationFunctionLabelMax: 'max',\n  // aggregationFunctionLabelSize: 'size',\n\n};\nexport const nbNO = getGridLocalization(nbNOGrid, nbNOCore);","import { nlNL as nlNLCore } from '@mui/material/locale';\nimport { getGridLocalization } from '../utils/getGridLocalization';\nconst nlNLGrid = {\n  // Root\n  noRowsLabel: 'Geen resultaten.',\n  noResultsOverlayLabel: 'Geen resultaten gevonden.',\n  errorOverlayDefaultLabel: 'Er deed zich een fout voor.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Grootte',\n  toolbarDensityLabel: 'Grootte',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Normaal',\n  toolbarDensityComfortable: 'Breed',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Kolommen',\n  toolbarColumnsLabel: 'Kies kolommen',\n  // Filters toolbar button text\n  toolbarFilters: 'Filters',\n  toolbarFiltersLabel: 'Toon filters',\n  toolbarFiltersTooltipHide: 'Verberg filters',\n  toolbarFiltersTooltipShow: 'Toon filters',\n  toolbarFiltersTooltipActive: count => count > 1 ? `${count} actieve filters` : `${count} filter actief`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Zoeken…',\n  toolbarQuickFilterLabel: 'Zoeken',\n  toolbarQuickFilterDeleteIconLabel: 'Wissen',\n  // Export selector toolbar button text\n  toolbarExport: 'Exporteren',\n  toolbarExportLabel: 'Exporteren',\n  toolbarExportCSV: 'Exporteer naar CSV',\n  toolbarExportPrint: 'Print',\n  toolbarExportExcel: 'Downloaden als Excel-bestand',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Zoek kolom',\n  columnsPanelTextFieldPlaceholder: 'Kolomtitel',\n  columnsPanelDragIconLabel: 'Kolom herschikken',\n  columnsPanelShowAllButton: 'Alles tonen',\n  columnsPanelHideAllButton: 'Alles verbergen',\n  // Filter panel text\n  filterPanelAddFilter: 'Filter toevoegen',\n  filterPanelDeleteIconLabel: 'Verwijderen',\n  filterPanelLinkOperator: 'Logische operator',\n  filterPanelOperators: 'Operatoren',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'En',\n  filterPanelOperatorOr: 'Of',\n  filterPanelColumns: 'Kolommen',\n  filterPanelInputLabel: 'Waarde',\n  filterPanelInputPlaceholder: 'Filter waarde',\n  // Filter operators text\n  filterOperatorContains: 'bevat',\n  filterOperatorEquals: 'gelijk aan',\n  filterOperatorStartsWith: 'begint met',\n  filterOperatorEndsWith: 'eindigt met',\n  filterOperatorIs: 'is',\n  filterOperatorNot: 'is niet',\n  filterOperatorAfter: 'is na',\n  filterOperatorOnOrAfter: 'is gelijk of er na',\n  filterOperatorBefore: 'is voor',\n  filterOperatorOnOrBefore: 'is gelijk of er voor',\n  filterOperatorIsEmpty: 'is leeg',\n  filterOperatorIsNotEmpty: 'is niet leeg',\n  filterOperatorIsAnyOf: 'is een van',\n  // Filter values text\n  filterValueAny: 'alles',\n  filterValueTrue: 'waar',\n  filterValueFalse: 'onwaar',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Toon kolommen',\n  columnMenuFilter: 'Filteren',\n  columnMenuHideColumn: 'Verbergen',\n  columnMenuUnsort: 'Annuleer sortering',\n  columnMenuSortAsc: 'Oplopend sorteren',\n  columnMenuSortDesc: 'Aflopend sorteren',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count > 1 ? `${count} actieve filters` : `${count} filter actief`,\n  columnHeaderFiltersLabel: 'Toon filters',\n  columnHeaderSortIconLabel: 'Sorteren',\n  // Rows selected footer text\n  footerRowSelected: count => count > 1 ? `${count.toLocaleString()} rijen geselecteerd` : `${count.toLocaleString()} rij geselecteerd`,\n  // Total row amount footer text\n  footerTotalRows: 'Totaal:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} van ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox selectie',\n  checkboxSelectionSelectAllRows: 'Alle rijen selecteren',\n  checkboxSelectionUnselectAllRows: 'Alle rijen de-selecteren',\n  checkboxSelectionSelectRow: 'Rij selecteren',\n  checkboxSelectionUnselectRow: 'Rij de-selecteren',\n  // Boolean cell text\n  booleanCellTrueLabel: 'waar',\n  booleanCellFalseLabel: 'onwaar',\n  // Actions cell more text\n  actionsCellMore: 'meer',\n  // Column pinning text\n  pinToLeft: 'Links vastzetten',\n  pinToRight: 'Rechts vastzetten',\n  unpin: 'Losmaken',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Groep',\n  treeDataExpand: 'Uitvouwen',\n  treeDataCollapse: 'Inklappen',\n  // Grouping columns\n  groupingColumnHeaderName: 'Groep',\n  groupColumn: name => `Groepeer op ${name}`,\n  unGroupColumn: name => `Stop groeperen op ${name}`,\n  // Master/detail\n  // detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Uitklappen',\n  collapseDetailPanel: 'Inklappen',\n  // Row reordering text\n  rowReorderingHeaderName: 'Rijen hersorteren' // Aggregation\n  // aggregationMenuItemHeader: 'Aggregation',\n  // aggregationFunctionLabelSum: 'sum',\n  // aggregationFunctionLabelAvg: 'avg',\n  // aggregationFunctionLabelMin: 'min',\n  // aggregationFunctionLabelMax: 'max',\n  // aggregationFunctionLabelSize: 'size',\n\n};\nexport const nlNL = getGridLocalization(nlNLGrid, nlNLCore);","import { plPL as plPLCore } from '@mui/material/locale';\nimport { getGridLocalization } from '../utils/getGridLocalization';\nconst plPLGrid = {\n  // Root\n  noRowsLabel: 'Brak danych',\n  noResultsOverlayLabel: 'Nie znaleziono wyników.',\n  errorOverlayDefaultLabel: 'Wystąpił błąd.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Wysokość rzędu',\n  toolbarDensityLabel: 'Wysokość rzędu',\n  toolbarDensityCompact: 'Kompakt',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Komfort',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Kolumny',\n  toolbarColumnsLabel: 'Zaznacz kolumny',\n  // Filters toolbar button text\n  toolbarFilters: 'Filtry',\n  toolbarFiltersLabel: 'Pokaż filtry',\n  toolbarFiltersTooltipHide: 'Ukryj filtry',\n  toolbarFiltersTooltipShow: 'Pokaż filtry',\n  toolbarFiltersTooltipActive: count => `Liczba aktywnych filtrów: ${count}`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Wyszukaj…',\n  toolbarQuickFilterLabel: 'Szukaj',\n  toolbarQuickFilterDeleteIconLabel: 'Wyczyść',\n  // Export selector toolbar button text\n  toolbarExport: 'Eksportuj',\n  toolbarExportLabel: 'Eksportuj',\n  toolbarExportCSV: 'Pobierz jako plik CSV',\n  toolbarExportPrint: 'Drukuj',\n  toolbarExportExcel: 'Pobierz jako plik Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Znajdź kolumnę',\n  columnsPanelTextFieldPlaceholder: 'Tytuł kolumny',\n  columnsPanelDragIconLabel: 'Zmień kolejność kolumn',\n  columnsPanelShowAllButton: 'Pokaż wszystko',\n  columnsPanelHideAllButton: 'Ukryj wszystko',\n  // Filter panel text\n  filterPanelAddFilter: 'Dodaj filtr',\n  filterPanelDeleteIconLabel: 'Usuń',\n  filterPanelLinkOperator: 'Operator logiczny',\n  filterPanelOperators: 'Operator',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'I',\n  filterPanelOperatorOr: 'Lub',\n  filterPanelColumns: 'Kolumny',\n  filterPanelInputLabel: 'Wartość',\n  filterPanelInputPlaceholder: 'Filtrowana wartość',\n  // Filter operators text\n  filterOperatorContains: 'zawiera',\n  filterOperatorEquals: 'równa się',\n  filterOperatorStartsWith: 'zaczyna się od',\n  filterOperatorEndsWith: 'kończy się na',\n  filterOperatorIs: 'równa się',\n  filterOperatorNot: 'różne',\n  filterOperatorAfter: 'większe niż',\n  filterOperatorOnOrAfter: 'większe lub równe',\n  filterOperatorBefore: 'mniejsze niż',\n  filterOperatorOnOrBefore: 'mniejsze lub równe',\n  filterOperatorIsEmpty: 'jest pusty',\n  filterOperatorIsNotEmpty: 'nie jest pusty',\n  filterOperatorIsAnyOf: 'jest jednym z',\n  // Filter values text\n  filterValueAny: 'dowolny',\n  filterValueTrue: 'prawda',\n  filterValueFalse: 'fałsz',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Pokaż wszystkie kolumny',\n  columnMenuFilter: 'Filtr',\n  columnMenuHideColumn: 'Ukryj',\n  columnMenuUnsort: 'Anuluj sortowanie',\n  columnMenuSortAsc: 'Sortuj rosnąco',\n  columnMenuSortDesc: 'Sortuj malejąco',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => `Liczba aktywnych filtrów: ${count}`,\n  columnHeaderFiltersLabel: 'Pokaż filtry',\n  columnHeaderSortIconLabel: 'Sortuj',\n  // Rows selected footer text\n  footerRowSelected: count => `Liczba wybranych wierszy: ${count.toLocaleString()}`,\n  // Total row amount footer text\n  footerTotalRows: 'Łączna liczba wierszy:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} z ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Pole wyboru',\n  checkboxSelectionSelectAllRows: 'Zaznacz wszystkie wiersze',\n  checkboxSelectionUnselectAllRows: 'Odznacz wszystkie wiersze',\n  checkboxSelectionSelectRow: 'Zaznacz wiersz',\n  checkboxSelectionUnselectRow: 'Odznacz wiersz',\n  // Boolean cell text\n  booleanCellTrueLabel: 'tak',\n  booleanCellFalseLabel: 'nie',\n  // Actions cell more text\n  actionsCellMore: 'więcej',\n  // Column pinning text\n  pinToLeft: 'Przypnij do lewej',\n  pinToRight: 'Przypnij do prawej',\n  unpin: 'Odepnij',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Grupa',\n  treeDataExpand: 'pokaż elementy potomne',\n  treeDataCollapse: 'ukryj elementy potomne',\n  // Grouping columns\n  groupingColumnHeaderName: 'Grupa',\n  groupColumn: name => `Grupuj według ${name}`,\n  unGroupColumn: name => `Rozgrupuj ${name}`,\n  // Master/detail\n  // detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Rozwiń',\n  collapseDetailPanel: 'Zwiń',\n  // Row reordering text\n  rowReorderingHeaderName: 'Porządkowanie wierszy' // Aggregation\n  // aggregationMenuItemHeader: 'Aggregation',\n  // aggregationFunctionLabelSum: 'sum',\n  // aggregationFunctionLabelAvg: 'avg',\n  // aggregationFunctionLabelMin: 'min',\n  // aggregationFunctionLabelMax: 'max',\n  // aggregationFunctionLabelSize: 'size',\n\n};\nexport const plPL = getGridLocalization(plPLGrid, plPLCore);","import { ptBR as ptBRCore } from '@mui/material/locale';\nimport { getGridLocalization } from '../utils/getGridLocalization';\nconst ptBRGrid = {\n  // Root\n  noRowsLabel: 'Nenhuma linha',\n  noResultsOverlayLabel: 'Nenhum resultado encontrado.',\n  errorOverlayDefaultLabel: 'Ocorreu um erro.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Densidade',\n  toolbarDensityLabel: 'Densidade',\n  toolbarDensityCompact: 'Compacto',\n  toolbarDensityStandard: 'Padrão',\n  toolbarDensityComfortable: 'Confortável',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Colunas',\n  toolbarColumnsLabel: 'Exibir seletor de colunas',\n  // Filters toolbar button text\n  toolbarFilters: 'Filtros',\n  toolbarFiltersLabel: 'Exibir filtros',\n  toolbarFiltersTooltipHide: 'Ocultar filtros',\n  toolbarFiltersTooltipShow: 'Exibir filtros',\n  toolbarFiltersTooltipActive: count => `${count} ${count !== 1 ? 'filtros' : 'filtro'} ${count !== 1 ? 'ativos' : 'ativo'}`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Procurar…',\n  toolbarQuickFilterLabel: 'Procurar',\n  toolbarQuickFilterDeleteIconLabel: 'Limpar',\n  // Export selector toolbar button text\n  toolbarExport: 'Exportar',\n  toolbarExportLabel: 'Exportar',\n  toolbarExportCSV: 'Baixar como CSV',\n  toolbarExportPrint: 'Imprimir',\n  toolbarExportExcel: 'Baixar como Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Localizar coluna',\n  columnsPanelTextFieldPlaceholder: 'Título da coluna',\n  columnsPanelDragIconLabel: 'Reordenar Coluna',\n  columnsPanelShowAllButton: 'Mostrar todas',\n  columnsPanelHideAllButton: 'Ocultar todas',\n  // Filter panel text\n  filterPanelAddFilter: 'Adicionar filtro',\n  filterPanelDeleteIconLabel: 'Excluir',\n  filterPanelLinkOperator: 'Operador lógico',\n  filterPanelOperators: 'Operador',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'E',\n  filterPanelOperatorOr: 'Ou',\n  filterPanelColumns: 'Colunas',\n  filterPanelInputLabel: 'Valor',\n  filterPanelInputPlaceholder: 'Filtrar valor',\n  // Filter operators text\n  filterOperatorContains: 'contém',\n  filterOperatorEquals: 'é igual a',\n  filterOperatorStartsWith: 'começa com',\n  filterOperatorEndsWith: 'termina com',\n  filterOperatorIs: 'é',\n  filterOperatorNot: 'não é',\n  filterOperatorAfter: 'após',\n  filterOperatorOnOrAfter: 'em ou após',\n  filterOperatorBefore: 'antes de',\n  filterOperatorOnOrBefore: 'em ou antes de',\n  filterOperatorIsEmpty: 'está vazio',\n  filterOperatorIsNotEmpty: 'não está vazio',\n  filterOperatorIsAnyOf: 'é qualquer um dos',\n  // Filter values text\n  filterValueAny: 'qualquer',\n  filterValueTrue: 'verdadeiro',\n  filterValueFalse: 'falso',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Exibir colunas',\n  columnMenuFilter: 'Filtrar',\n  columnMenuHideColumn: 'Ocultar',\n  columnMenuUnsort: 'Desfazer ordenação',\n  columnMenuSortAsc: 'Ordenar do menor para o maior',\n  columnMenuSortDesc: 'Ordenar do maior para o menor',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => `${count} ${count !== 1 ? 'filtros' : 'filtro'} ${count !== 1 ? 'ativos' : 'ativo'}`,\n  columnHeaderFiltersLabel: 'Exibir Filtros',\n  columnHeaderSortIconLabel: 'Ordenar',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} linhas selecionadas` : `${count.toLocaleString()} linha selecionada`,\n  // Total row amount footer text\n  footerTotalRows: 'Total de linhas:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} de ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Seleção',\n  checkboxSelectionSelectAllRows: 'Selecionar todas linhas',\n  checkboxSelectionUnselectAllRows: 'Deselecionar todas linhas',\n  checkboxSelectionSelectRow: 'Selecionar linha',\n  checkboxSelectionUnselectRow: 'Deselecionar linha',\n  // Boolean cell text\n  booleanCellTrueLabel: 'sim',\n  booleanCellFalseLabel: 'não',\n  // Actions cell more text\n  actionsCellMore: 'mais',\n  // Column pinning text\n  pinToLeft: 'Fixar à esquerda',\n  pinToRight: 'Fixar à direita',\n  unpin: 'Desafixar',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Grupo',\n  treeDataExpand: 'mostrar filhos',\n  treeDataCollapse: 'esconder filhos',\n  // Grouping columns\n  groupingColumnHeaderName: 'Grupo',\n  groupColumn: name => `Agrupar por ${name}`,\n  unGroupColumn: name => `Parar agrupamento por ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Painel de detalhes',\n  expandDetailPanel: 'Expandir',\n  collapseDetailPanel: 'Esconder',\n  // Row reordering text\n  rowReorderingHeaderName: 'Reorganizar linhas' // Aggregation\n  // aggregationMenuItemHeader: 'Aggregation',\n  // aggregationFunctionLabelSum: 'sum',\n  // aggregationFunctionLabelAvg: 'avg',\n  // aggregationFunctionLabelMin: 'min',\n  // aggregationFunctionLabelMax: 'max',\n  // aggregationFunctionLabelSize: 'size',\n\n};\nexport const ptBR = getGridLocalization(ptBRGrid, ptBRCore);","import { roRO as roROCore } from '@mui/material/locale';\nimport { getGridLocalization } from '../utils/getGridLocalization';\nconst roROGrid = {\n  // Root\n  noRowsLabel: 'Lipsă date',\n  noResultsOverlayLabel: 'Nu au fost găsite rezultate.',\n  errorOverlayDefaultLabel: 'A apărut o eroare neașteptată.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Înălțime rând',\n  toolbarDensityLabel: 'Înălțime rând',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Lat',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Coloane',\n  toolbarColumnsLabel: 'Afișează selecție coloane',\n  // Filters toolbar button text\n  toolbarFilters: 'Filtru',\n  toolbarFiltersLabel: 'Afișează filtru',\n  toolbarFiltersTooltipHide: 'Ascunde filtru',\n  toolbarFiltersTooltipShow: 'Afișează filtru',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} filtru activ` : `${count} filtru activ`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Căutare…',\n  toolbarQuickFilterLabel: 'Căutare',\n  toolbarQuickFilterDeleteIconLabel: 'Ștergere',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Download în format CSV',\n  toolbarExportPrint: 'Printare',\n  toolbarExportExcel: 'Download în format Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Găsește coloana',\n  columnsPanelTextFieldPlaceholder: 'Titlu coloană',\n  columnsPanelDragIconLabel: 'Resortare coloană',\n  columnsPanelShowAllButton: 'Afișează tot',\n  columnsPanelHideAllButton: 'Ascunde tot',\n  // Filter panel text\n  filterPanelAddFilter: 'Adăugare filtru',\n  filterPanelDeleteIconLabel: 'Ștergere',\n  filterPanelLinkOperator: 'Operatori logici',\n  filterPanelOperators: 'Operatori',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'Și',\n  filterPanelOperatorOr: 'Sau',\n  filterPanelColumns: 'Coloane',\n  filterPanelInputLabel: 'Valoare',\n  filterPanelInputPlaceholder: 'Filtrare valoare',\n  // Filter operators text\n  filterOperatorContains: 'conține',\n  filterOperatorEquals: 'este egal cu',\n  filterOperatorStartsWith: 'începe cu',\n  filterOperatorEndsWith: 'se termină cu',\n  filterOperatorIs: 'este',\n  filterOperatorNot: 'nu este',\n  filterOperatorAfter: 'este după',\n  filterOperatorOnOrAfter: 'este la sau după',\n  filterOperatorBefore: 'este înainte de',\n  filterOperatorOnOrBefore: 'este la sau înainte de',\n  filterOperatorIsEmpty: 'este gol',\n  filterOperatorIsNotEmpty: 'nu este gol',\n  filterOperatorIsAnyOf: 'este una din valori',\n  // Filter values text\n  filterValueAny: 'Aleatoriu',\n  filterValueTrue: 'Da',\n  filterValueFalse: 'Nu',\n  // Column menu text\n  columnMenuLabel: 'Meniu',\n  columnMenuShowColumns: 'Afișează toate coloanele',\n  columnMenuFilter: 'Filtru',\n  columnMenuHideColumn: 'Ascunde',\n  columnMenuUnsort: 'Dezactivare sortare',\n  columnMenuSortAsc: 'Sortează crescător',\n  columnMenuSortDesc: 'Sortează descrescător',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} filtru activ` : `${count} filtru activ`,\n  columnHeaderFiltersLabel: 'Afișează filtru',\n  columnHeaderSortIconLabel: 'Sortare',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} Înregistrări selectate` : `${count.toLocaleString()} Înregistrare selectată`,\n  // Total row amount footer text\n  footerTotalRows: 'Total:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} din ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox Selecție',\n  checkboxSelectionSelectAllRows: 'Selectare toate rândurile',\n  checkboxSelectionUnselectAllRows: 'Deselectare toate rândurile',\n  checkboxSelectionSelectRow: 'Selectare rând',\n  checkboxSelectionUnselectRow: 'Deselectare rând',\n  // Boolean cell text\n  booleanCellTrueLabel: 'Da',\n  booleanCellFalseLabel: 'Nu',\n  // Actions cell more text\n  actionsCellMore: 'Mai multe',\n  // Column pinning text\n  pinToLeft: 'Fixare în stânga',\n  pinToRight: 'Fixare în dreapta',\n  unpin: 'Anulare fixare',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Grup',\n  treeDataExpand: 'Afișare copii',\n  treeDataCollapse: 'Ascundere copii',\n  // Grouping columns\n  groupingColumnHeaderName: 'Grupare',\n  groupColumn: name => `Grupare după ${name}`,\n  unGroupColumn: name => `Anulare Grupare după ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Comutare panou detalii',\n  expandDetailPanel: 'Extindere',\n  collapseDetailPanel: 'Restrângere',\n  // Row reordering text\n  rowReorderingHeaderName: 'Reordonare rânduri' // Aggregation\n  // aggregationMenuItemHeader: 'Aggregation',\n  // aggregationFunctionLabelSum: 'sum',\n  // aggregationFunctionLabelAvg: 'avg',\n  // aggregationFunctionLabelMin: 'min',\n  // aggregationFunctionLabelMax: 'max',\n  // aggregationFunctionLabelSize: 'size',\n\n};\nexport const roRO = getGridLocalization(roROGrid, roROCore);","import { ruRU as ruRUCore } from '@mui/material/locale';\nimport { getGridLocalization } from '../utils/getGridLocalization';\nconst ruRUGrid = {\n  // Root\n  noRowsLabel: 'Нет строк',\n  noResultsOverlayLabel: 'Данные не найдены.',\n  errorOverlayDefaultLabel: 'Обнаружена ошибка.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Высота строки',\n  toolbarDensityLabel: 'Высота строки',\n  toolbarDensityCompact: 'Компактная',\n  toolbarDensityStandard: 'Стандартная',\n  toolbarDensityComfortable: 'Комфортная',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Столбцы',\n  toolbarColumnsLabel: 'Выделите столбцы',\n  // Filters toolbar button text\n  toolbarFilters: 'Фильтры',\n  toolbarFiltersLabel: 'Показать фильтры',\n  toolbarFiltersTooltipHide: 'Скрыть фильтры',\n  toolbarFiltersTooltipShow: 'Показать фильтры',\n  toolbarFiltersTooltipActive: count => {\n    let pluralForm = 'активных фильтров';\n    const lastDigit = count % 10;\n\n    if (lastDigit > 1 && lastDigit < 5) {\n      pluralForm = 'активных фильтра';\n    } else if (lastDigit === 1) {\n      pluralForm = 'активный фильтр';\n    }\n\n    return `${count} ${pluralForm}`;\n  },\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Поиск…',\n  toolbarQuickFilterLabel: 'Поиск',\n  toolbarQuickFilterDeleteIconLabel: 'Очистить',\n  // Export selector toolbar button text\n  toolbarExport: 'Экспорт',\n  toolbarExportLabel: 'Экспорт',\n  toolbarExportCSV: 'Скачать в формате CSV',\n  toolbarExportPrint: 'Печать',\n  toolbarExportExcel: 'Скачать в формате Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Найти столбец',\n  columnsPanelTextFieldPlaceholder: 'Заголовок столбца',\n  columnsPanelDragIconLabel: 'Изменить порядок столбца',\n  columnsPanelShowAllButton: 'Показать все',\n  columnsPanelHideAllButton: 'Скрыть все',\n  // Filter panel text\n  filterPanelAddFilter: 'Добавить фильтр',\n  filterPanelDeleteIconLabel: 'Удалить',\n  // filterPanelLinkOperator: 'Logic operator',\n  filterPanelOperators: 'Операторы',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'И',\n  filterPanelOperatorOr: 'Или',\n  filterPanelColumns: 'Столбцы',\n  filterPanelInputLabel: 'Значение',\n  filterPanelInputPlaceholder: 'Значение фильтра',\n  // Filter operators text\n  filterOperatorContains: 'содержит',\n  filterOperatorEquals: 'равен',\n  filterOperatorStartsWith: 'начинается с',\n  filterOperatorEndsWith: 'заканчивается на',\n  filterOperatorIs: 'равен',\n  filterOperatorNot: 'не равен',\n  filterOperatorAfter: 'больше чем',\n  filterOperatorOnOrAfter: 'больше или равно',\n  filterOperatorBefore: 'меньше чем',\n  filterOperatorOnOrBefore: 'меньше или равно',\n  filterOperatorIsEmpty: 'пустой',\n  filterOperatorIsNotEmpty: 'не пустой',\n  filterOperatorIsAnyOf: 'любой из',\n  // Filter values text\n  filterValueAny: 'любой',\n  filterValueTrue: 'истина',\n  filterValueFalse: 'ложь',\n  // Column menu text\n  columnMenuLabel: 'Меню',\n  columnMenuShowColumns: 'Показать столбцы',\n  columnMenuFilter: 'Фильтр',\n  columnMenuHideColumn: 'Скрыть',\n  columnMenuUnsort: 'Отменить сортировку',\n  columnMenuSortAsc: 'Сортировать по возрастанию',\n  columnMenuSortDesc: 'Сортировать по убыванию',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => {\n    let pluralForm = 'активных фильтров';\n    const lastDigit = count % 10;\n\n    if (lastDigit > 1 && lastDigit < 5) {\n      pluralForm = 'активных фильтра';\n    } else if (lastDigit === 1) {\n      pluralForm = 'активный фильтр';\n    }\n\n    return `${count} ${pluralForm}`;\n  },\n  columnHeaderFiltersLabel: 'Показать фильтры',\n  columnHeaderSortIconLabel: 'Сортировать',\n  // Rows selected footer text\n  footerRowSelected: count => {\n    let pluralForm = 'строк выбрано';\n    const lastDigit = count % 10;\n\n    if (lastDigit > 1 && lastDigit < 5) {\n      pluralForm = 'строки выбраны';\n    } else if (lastDigit === 1) {\n      pluralForm = 'строка выбрана';\n    }\n\n    return `${count} ${pluralForm}`;\n  },\n  // Total row amount footer text\n  footerTotalRows: 'Всего строк:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} из ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Выбор флажка',\n  // checkboxSelectionSelectAllRows: 'Select all rows',\n  // checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  // checkboxSelectionSelectRow: 'Select row',\n  // checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'истина',\n  booleanCellFalseLabel: 'ложь',\n  // Actions cell more text\n  actionsCellMore: 'ещё',\n  // Column pinning text\n  pinToLeft: 'Закрепить слева',\n  pinToRight: 'Закрепить справа',\n  unpin: 'Открепить',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Группа',\n  treeDataExpand: 'показать дочерние элементы',\n  treeDataCollapse: 'скрыть дочерние элементы',\n  // Grouping columns\n  groupingColumnHeaderName: 'Группа',\n  groupColumn: name => `Сгруппировать по ${name}`,\n  unGroupColumn: name => `Разгруппировать по ${name}`,\n  // Master/detail\n  // detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Развернуть',\n  collapseDetailPanel: 'Свернуть' // Row reordering text\n  // rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  // aggregationMenuItemHeader: 'Aggregation',\n  // aggregationFunctionLabelSum: 'sum',\n  // aggregationFunctionLabelAvg: 'avg',\n  // aggregationFunctionLabelMin: 'min',\n  // aggregationFunctionLabelMax: 'max',\n  // aggregationFunctionLabelSize: 'size',\n\n};\nexport const ruRU = getGridLocalization(ruRUGrid, ruRUCore);","import { skSK as skSKCore } from '@mui/material/locale';\nimport { getGridLocalization } from '../utils/getGridLocalization';\nconst skSKGrid = {\n  // Root\n  noRowsLabel: 'Žiadne záznamy',\n  noResultsOverlayLabel: 'Nenašli sa žadne výsledky.',\n  errorOverlayDefaultLabel: 'Stala sa nepredvídaná chyba.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Hustota',\n  toolbarDensityLabel: 'Hustota',\n  toolbarDensityCompact: 'Kompaktná',\n  toolbarDensityStandard: 'Štandartná',\n  toolbarDensityComfortable: 'Komfortná',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Stĺpce',\n  toolbarColumnsLabel: 'Vybrať stĺpce',\n  // Filters toolbar button text\n  toolbarFilters: 'Filtre',\n  toolbarFiltersLabel: 'Zobraziť filtre',\n  toolbarFiltersTooltipHide: 'Skryť filtre ',\n  toolbarFiltersTooltipShow: 'Zobraziť filtre',\n  toolbarFiltersTooltipActive: count => {\n    let pluralForm = 'aktívnych filtrov';\n\n    if (count > 1 && count < 5) {\n      pluralForm = 'aktívne filtre';\n    } else if (count === 1) {\n      pluralForm = 'aktívny filter';\n    }\n\n    return `${count} ${pluralForm}`;\n  },\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Vyhľadať…',\n  toolbarQuickFilterLabel: 'Vyhľadať',\n  toolbarQuickFilterDeleteIconLabel: 'Vymazať',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Stiahnuť ako CSV',\n  toolbarExportPrint: 'Vytlačiť',\n  toolbarExportExcel: 'Stiahnuť ako Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Nájsť stĺpec',\n  columnsPanelTextFieldPlaceholder: 'Názov stĺpca',\n  columnsPanelDragIconLabel: 'Usporiadť stĺpce',\n  columnsPanelShowAllButton: 'Zobraziť všetko',\n  columnsPanelHideAllButton: 'Skryť všetko',\n  // Filter panel text\n  filterPanelAddFilter: 'Pridať filter',\n  filterPanelDeleteIconLabel: 'Odstrániť',\n  filterPanelLinkOperator: 'Logický operátor',\n  filterPanelOperators: 'Operátory',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'A',\n  filterPanelOperatorOr: 'Alebo',\n  filterPanelColumns: 'Stĺpce',\n  filterPanelInputLabel: 'Hodnota',\n  filterPanelInputPlaceholder: 'Hodnota filtra',\n  // Filter operators text\n  filterOperatorContains: 'obsahuje',\n  filterOperatorEquals: 'rovná sa',\n  filterOperatorStartsWith: 'začína s',\n  filterOperatorEndsWith: 'končí na',\n  filterOperatorIs: 'je',\n  filterOperatorNot: 'nie je',\n  filterOperatorAfter: 'je po',\n  filterOperatorOnOrAfter: 'je na alebo po',\n  filterOperatorBefore: 'je pred',\n  filterOperatorOnOrBefore: 'je na alebo skôr',\n  filterOperatorIsEmpty: 'je prázdny',\n  filterOperatorIsNotEmpty: 'nie je prázdny',\n  filterOperatorIsAnyOf: 'je jeden z',\n  // Filter values text\n  filterValueAny: 'akýkoľvek',\n  filterValueTrue: 'áno',\n  filterValueFalse: 'nie',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Zobraziť stĺpce',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Skryť',\n  columnMenuUnsort: 'Zrušiť filtre',\n  columnMenuSortAsc: 'Zoradiť vzostupne',\n  columnMenuSortDesc: 'Zoradiť zostupne',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => {\n    let pluralForm = 'aktívnych filtrov';\n\n    if (count > 1 && count < 5) {\n      pluralForm = 'aktívne filtre';\n    } else if (count === 1) {\n      pluralForm = 'aktívny filter';\n    }\n\n    return `${count} ${pluralForm}`;\n  },\n  columnHeaderFiltersLabel: 'Zobraziť filtre',\n  columnHeaderSortIconLabel: 'Filtrovať',\n  // Rows selected footer text\n  footerRowSelected: count => {\n    let pluralForm = 'vybraných záznamov';\n\n    if (count > 1 && count < 5) {\n      pluralForm = 'vybrané záznamy';\n    } else if (count === 1) {\n      pluralForm = 'vybraný záznam';\n    }\n\n    return `${count} ${pluralForm}`;\n  },\n  // Total row amount footer text\n  footerTotalRows: 'Riadkov spolu:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => {\n    const str = totalCount.toString();\n    const firstDigit = str[0];\n    const op = ['4', '6', '7'].includes(firstDigit) || firstDigit === '1' && str.length % 3 === 0 ? 'zo' : 'z';\n    return `${visibleCount.toLocaleString()} ${op} ${totalCount.toLocaleString()}`;\n  },\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Výber riadku',\n  checkboxSelectionSelectAllRows: 'Vybrať všetky riadky',\n  checkboxSelectionUnselectAllRows: 'Zrušiť výber všetkých riadkov',\n  checkboxSelectionSelectRow: 'Vyber riadok',\n  checkboxSelectionUnselectRow: 'Zruš výber riadku',\n  // Boolean cell text\n  booleanCellTrueLabel: 'áno',\n  booleanCellFalseLabel: 'nie',\n  // Actions cell more text\n  actionsCellMore: 'viac',\n  // Column pinning text\n  pinToLeft: 'Pripnúť na ľavo',\n  pinToRight: 'Pripnúť na pravo',\n  unpin: 'Odopnúť',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Skupina',\n  treeDataExpand: 'zobraziť potomkov',\n  treeDataCollapse: 'skryť potomkov',\n  // Grouping columns\n  groupingColumnHeaderName: 'Skupina',\n  groupColumn: name => `Zoskupiť podľa ${name}`,\n  unGroupColumn: name => `Prestať zoskupovať podľa ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Prepnúť detail panelu',\n  expandDetailPanel: 'Rozbaliť',\n  collapseDetailPanel: 'Zbaliť',\n  // Row reordering text\n  rowReorderingHeaderName: 'Preusporiadávanie riadkov' // Aggregation\n  // aggregationMenuItemHeader: 'Aggregation',\n  // aggregationFunctionLabelSum: 'sum',\n  // aggregationFunctionLabelAvg: 'avg',\n  // aggregationFunctionLabelMin: 'min',\n  // aggregationFunctionLabelMax: 'max',\n  // aggregationFunctionLabelSize: 'size',\n\n};\nexport const skSK = getGridLocalization(skSKGrid, skSKCore);","import { svSE as svSECore } from '@mui/material/locale';\nimport { getGridLocalization } from '../utils/getGridLocalization';\nconst svSEGrid = {\n  // Root\n  noRowsLabel: 'Inga rader',\n  noResultsOverlayLabel: 'Inga resultat funna.',\n  errorOverlayDefaultLabel: 'Ett fel uppstod.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Densitet',\n  toolbarDensityLabel: 'Densitet',\n  toolbarDensityCompact: 'Kompakt',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Bekväm',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Kolumner',\n  toolbarColumnsLabel: 'Välj kolumner',\n  // Filters toolbar button text\n  toolbarFilters: 'Filter',\n  toolbarFiltersLabel: 'Visa filter',\n  toolbarFiltersTooltipHide: 'Dölj filter',\n  toolbarFiltersTooltipShow: 'Visa filter',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} aktiva filter` : `${count} aktivt filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Sök…',\n  toolbarQuickFilterLabel: 'Sök',\n  toolbarQuickFilterDeleteIconLabel: 'Rensa',\n  // Export selector toolbar button text\n  toolbarExport: 'Exportera',\n  toolbarExportLabel: 'Exportera',\n  toolbarExportCSV: 'Ladda ner som CSV',\n  toolbarExportPrint: 'Skriv ut',\n  toolbarExportExcel: 'Ladda ner som Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Hitta kolumn',\n  columnsPanelTextFieldPlaceholder: 'Kolumntitel',\n  columnsPanelDragIconLabel: 'Ordna om kolumnen',\n  columnsPanelShowAllButton: 'Visa alla',\n  columnsPanelHideAllButton: 'Dölj alla',\n  // Filter panel text\n  filterPanelAddFilter: 'Lägg till filter',\n  filterPanelDeleteIconLabel: 'Ta bort',\n  filterPanelLinkOperator: 'Logisk operatör',\n  filterPanelOperators: 'Operatör',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'Och',\n  filterPanelOperatorOr: 'Eller',\n  filterPanelColumns: 'Kolumner',\n  filterPanelInputLabel: 'Värde',\n  filterPanelInputPlaceholder: 'Filtervärde',\n  // Filter operators text\n  filterOperatorContains: 'innehåller',\n  filterOperatorEquals: 'är lika med',\n  filterOperatorStartsWith: 'börjar med',\n  filterOperatorEndsWith: 'slutar med',\n  filterOperatorIs: 'är',\n  filterOperatorNot: 'är inte',\n  filterOperatorAfter: 'är efter',\n  filterOperatorOnOrAfter: 'är på eller efter',\n  filterOperatorBefore: 'är innan',\n  filterOperatorOnOrBefore: 'är på eller innan',\n  filterOperatorIsEmpty: 'är tom',\n  filterOperatorIsNotEmpty: 'är inte tom',\n  filterOperatorIsAnyOf: 'är någon av',\n  // Filter values text\n  filterValueAny: 'något',\n  filterValueTrue: 'sant',\n  filterValueFalse: 'falskt',\n  // Column menu text\n  columnMenuLabel: 'Meny',\n  columnMenuShowColumns: 'Visa kolumner',\n  columnMenuFilter: 'Filtrera',\n  columnMenuHideColumn: 'Dölj',\n  columnMenuUnsort: 'Osortera',\n  columnMenuSortAsc: 'Sortera stigande',\n  columnMenuSortDesc: 'Sortera fallande',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} aktiva filter` : `${count} aktivt filter`,\n  columnHeaderFiltersLabel: 'Visa filter',\n  columnHeaderSortIconLabel: 'Sortera',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rader markerade` : `${count.toLocaleString()} rad markerad`,\n  // Total row amount footer text\n  footerTotalRows: 'Totalt antal rader:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} av ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Markering med kryssruta',\n  checkboxSelectionSelectAllRows: 'Markera alla rader',\n  checkboxSelectionUnselectAllRows: 'Avmarkera alla rader',\n  checkboxSelectionSelectRow: 'Markera rad',\n  checkboxSelectionUnselectRow: 'Avmarkera rad',\n  // Boolean cell text\n  booleanCellTrueLabel: 'ja',\n  booleanCellFalseLabel: 'nej',\n  // Actions cell more text\n  actionsCellMore: 'mer',\n  // Column pinning text\n  pinToLeft: 'Fäst till vänster',\n  pinToRight: 'Fäst till höger',\n  unpin: 'Ta bort fäste',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Grupp',\n  treeDataExpand: 'visa underordnade',\n  treeDataCollapse: 'dölj underordnade',\n  // Grouping columns\n  groupingColumnHeaderName: 'Grupp',\n  groupColumn: name => `Gruppera efter ${name}`,\n  unGroupColumn: name => `Sluta gruppera efter ${name}`,\n  // Master/detail\n  // detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Expandera',\n  collapseDetailPanel: 'Kollapsa',\n  // Row reordering text\n  rowReorderingHeaderName: 'Ordna om rader' // Aggregation\n  // aggregationMenuItemHeader: 'Aggregation',\n  // aggregationFunctionLabelSum: 'sum',\n  // aggregationFunctionLabelAvg: 'avg',\n  // aggregationFunctionLabelMin: 'min',\n  // aggregationFunctionLabelMax: 'max',\n  // aggregationFunctionLabelSize: 'size',\n\n};\nexport const svSE = getGridLocalization(svSEGrid, svSECore);","import { trTR as trTRCore } from '@mui/material/locale';\nimport { getGridLocalization } from '../utils/getGridLocalization';\nconst trTRGrid = {\n  // Root\n  noRowsLabel: 'Satır yok',\n  noResultsOverlayLabel: 'Sonuç bulunamadı.',\n  errorOverlayDefaultLabel: 'Bir hata oluştu.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Yoğunluk',\n  toolbarDensityLabel: 'Yoğunluk',\n  toolbarDensityCompact: 'Sıkı',\n  toolbarDensityStandard: 'Standart',\n  toolbarDensityComfortable: 'Rahat',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Sütunlar',\n  toolbarColumnsLabel: 'Sütun seç',\n  // Filters toolbar button text\n  toolbarFilters: 'Filtreler',\n  toolbarFiltersLabel: 'Filtreleri göster',\n  toolbarFiltersTooltipHide: 'Filtreleri gizle',\n  toolbarFiltersTooltipShow: 'Filtreleri göster',\n  toolbarFiltersTooltipActive: count => `${count} aktif filtre`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Ara…',\n  toolbarQuickFilterLabel: 'Ara',\n  toolbarQuickFilterDeleteIconLabel: 'Temizle',\n  // Export selector toolbar button text\n  toolbarExport: 'Dışa aktar',\n  toolbarExportLabel: 'Dışa aktar',\n  toolbarExportCSV: 'CSV olarak aktar',\n  toolbarExportPrint: 'Yazdır',\n  toolbarExportExcel: 'Excel olarak aktar',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Sütun ara',\n  columnsPanelTextFieldPlaceholder: 'Sütun adı',\n  columnsPanelDragIconLabel: 'Sütunları yeniden sırala',\n  columnsPanelShowAllButton: 'Hepsini göster',\n  columnsPanelHideAllButton: 'Hepsini gizle',\n  // Filter panel text\n  filterPanelAddFilter: 'Filtre Ekle',\n  filterPanelDeleteIconLabel: 'Kaldır',\n  // filterPanelLinkOperator: 'Logic operator',\n  filterPanelOperators: 'Operatör',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'Ve',\n  filterPanelOperatorOr: 'Veya',\n  filterPanelColumns: 'Sütunlar',\n  filterPanelInputLabel: 'Değer',\n  filterPanelInputPlaceholder: 'Filtre değeri',\n  // Filter operators text\n  filterOperatorContains: 'içerir',\n  filterOperatorEquals: 'eşittir',\n  filterOperatorStartsWith: 'ile başlar',\n  filterOperatorEndsWith: 'ile biter',\n  filterOperatorIs: 'eşittir',\n  filterOperatorNot: 'eşit değildir',\n  filterOperatorAfter: 'büyük',\n  filterOperatorOnOrAfter: 'büyük eşit',\n  filterOperatorBefore: 'küçük',\n  filterOperatorOnOrBefore: 'küçük eşit',\n  filterOperatorIsEmpty: 'boş',\n  filterOperatorIsNotEmpty: 'dolu',\n  filterOperatorIsAnyOf: 'herhangi biri',\n  // Filter values text\n  filterValueAny: 'herhangi',\n  filterValueTrue: 'doğru',\n  filterValueFalse: 'yanlış',\n  // Column menu text\n  columnMenuLabel: 'Menü',\n  columnMenuShowColumns: 'Sütunları göster',\n  columnMenuFilter: 'Filtre uygula',\n  columnMenuHideColumn: 'Gizle',\n  columnMenuUnsort: 'Sıralama',\n  columnMenuSortAsc: 'Sırala - Artan',\n  columnMenuSortDesc: 'Sırala - Azalan',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => `${count} filtre aktif`,\n  columnHeaderFiltersLabel: 'Filtreleri göster',\n  columnHeaderSortIconLabel: 'Sırala',\n  // Rows selected footer text\n  footerRowSelected: count => `${count.toLocaleString()} satır seçildi`,\n  // Total row amount footer text\n  footerTotalRows: 'Toplam Satır:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} / ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Seçim',\n  // checkboxSelectionSelectAllRows: 'Select all rows',\n  // checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  // checkboxSelectionSelectRow: 'Select row',\n  // checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  // booleanCellTrueLabel: 'yes',\n  // booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'daha fazla',\n  // Column pinning text\n  pinToLeft: 'Sola sabitle',\n  pinToRight: 'Sağa sabitle',\n  unpin: 'Sabitlemeyi kaldır',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Grup',\n  treeDataExpand: 'göster',\n  treeDataCollapse: 'gizle',\n  // Grouping columns\n  groupingColumnHeaderName: 'Grup',\n  groupColumn: name => `${name} için grupla`,\n  unGroupColumn: name => `${name} için gruplamayı kaldır`,\n  // Master/detail\n  // detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Genişlet',\n  collapseDetailPanel: 'Gizle' // Row reordering text\n  // rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  // aggregationMenuItemHeader: 'Aggregation',\n  // aggregationFunctionLabelSum: 'sum',\n  // aggregationFunctionLabelAvg: 'avg',\n  // aggregationFunctionLabelMin: 'min',\n  // aggregationFunctionLabelMax: 'max',\n  // aggregationFunctionLabelSize: 'size',\n\n};\nexport const trTR = getGridLocalization(trTRGrid, trTRCore);","import { ukUA as ukUACore } from '@mui/material/locale';\nimport { getGridLocalization } from '../utils/getGridLocalization';\n\nconst getPluralForm = (count, options) => {\n  let pluralForm = options.many;\n  const lastDigit = count % 10;\n\n  if (lastDigit > 1 && lastDigit < 5) {\n    pluralForm = options.few;\n  } else if (lastDigit === 1) {\n    pluralForm = options.one;\n  }\n\n  return `${count} ${pluralForm}`;\n};\n\nconst ukUAGrid = {\n  // Root\n  noRowsLabel: 'Немає рядків',\n  noResultsOverlayLabel: 'Дані не знайдено.',\n  errorOverlayDefaultLabel: 'Виявлено помилку.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Висота рядка',\n  toolbarDensityLabel: 'Висота рядка',\n  toolbarDensityCompact: 'Компактний',\n  toolbarDensityStandard: 'Стандартний',\n  toolbarDensityComfortable: 'Комфортний',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Стовпці',\n  toolbarColumnsLabel: 'Виділіть стовпці',\n  // Filters toolbar button text\n  toolbarFilters: 'Фільтри',\n  toolbarFiltersLabel: 'Показати фільтри',\n  toolbarFiltersTooltipHide: 'Приховати фільтри',\n  toolbarFiltersTooltipShow: 'Показати фільтри',\n  toolbarFiltersTooltipActive: count => getPluralForm(count, {\n    one: 'активний фільтр',\n    few: 'активні фільтри',\n    many: 'активних фільтрів'\n  }),\n  // Quick filter toolbar field\n  // toolbarQuickFilterPlaceholder: 'Search…',\n  // toolbarQuickFilterLabel: 'Search',\n  // toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Експорт',\n  toolbarExportLabel: 'Експорт',\n  toolbarExportCSV: 'Завантажити у форматі CSV',\n  toolbarExportPrint: 'Друк',\n  // toolbarExportExcel: 'Download as Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Знайти стовпець',\n  columnsPanelTextFieldPlaceholder: 'Заголовок стовпця',\n  columnsPanelDragIconLabel: 'Змінити порядок стовпця',\n  columnsPanelShowAllButton: 'Показати всі',\n  columnsPanelHideAllButton: 'Приховати всі',\n  // Filter panel text\n  filterPanelAddFilter: 'Додати фільтр',\n  filterPanelDeleteIconLabel: 'Видалити',\n  // filterPanelLinkOperator: 'Logic operator',\n  filterPanelOperators: 'Оператори',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'І',\n  filterPanelOperatorOr: 'Або',\n  filterPanelColumns: 'Стовпці',\n  filterPanelInputLabel: 'Значення',\n  filterPanelInputPlaceholder: 'Значення фільтра',\n  // Filter operators text\n  filterOperatorContains: 'містить',\n  filterOperatorEquals: 'дорівнює',\n  filterOperatorStartsWith: 'починається з',\n  filterOperatorEndsWith: 'закінчується на',\n  filterOperatorIs: 'дорівнює',\n  filterOperatorNot: 'не дорівнює',\n  filterOperatorAfter: 'більше ніж',\n  filterOperatorOnOrAfter: 'більше або дорівнює',\n  filterOperatorBefore: 'менше ніж',\n  filterOperatorOnOrBefore: 'менше або дорівнює',\n  filterOperatorIsEmpty: 'порожній',\n  filterOperatorIsNotEmpty: 'не порожній',\n  // filterOperatorIsAnyOf: 'is any of',\n  // Filter values text\n  filterValueAny: 'будь-який',\n  filterValueTrue: 'так',\n  filterValueFalse: 'ні',\n  // Column menu text\n  columnMenuLabel: 'Меню',\n  columnMenuShowColumns: 'Показати стовпці',\n  columnMenuFilter: 'Фільтр',\n  columnMenuHideColumn: 'Приховати',\n  columnMenuUnsort: 'Скасувати сортування',\n  columnMenuSortAsc: 'Сортувати за зростанням',\n  columnMenuSortDesc: 'Сортувати за спаданням',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => getPluralForm(count, {\n    one: 'активний фільтр',\n    few: 'активні фільтри',\n    many: 'активних фільтрів'\n  }),\n  columnHeaderFiltersLabel: 'Показати фільтри',\n  columnHeaderSortIconLabel: 'Сортувати',\n  // Rows selected footer text\n  footerRowSelected: count => getPluralForm(count, {\n    one: 'вибраний рядок',\n    few: 'вибрані рядки',\n    many: 'вибраних рядків'\n  }),\n  // Total row amount footer text\n  footerTotalRows: 'Усього рядків:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} з ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Вибір прапорця',\n  // checkboxSelectionSelectAllRows: 'Select all rows',\n  // checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  // checkboxSelectionSelectRow: 'Select row',\n  // checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'так',\n  booleanCellFalseLabel: 'ні',\n  // Actions cell more text\n  actionsCellMore: 'більше',\n  // Column pinning text\n  pinToLeft: 'Закріпити ліворуч',\n  pinToRight: 'Закріпити праворуч',\n  unpin: 'Відкріпити',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Група',\n  treeDataExpand: 'показати дочірні елементи',\n  treeDataCollapse: 'приховати дочірні елементи' // Grouping columns\n  // groupingColumnHeaderName: 'Group',\n  // groupColumn: name => `Group by ${name}`,\n  // unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  // detailPanelToggle: 'Detail panel toggle',\n  // expandDetailPanel: 'Expand',\n  // collapseDetailPanel: 'Collapse',\n  // Row reordering text\n  // rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  // aggregationMenuItemHeader: 'Aggregation',\n  // aggregationFunctionLabelSum: 'sum',\n  // aggregationFunctionLabelAvg: 'avg',\n  // aggregationFunctionLabelMin: 'min',\n  // aggregationFunctionLabelMax: 'max',\n  // aggregationFunctionLabelSize: 'size',\n\n};\nexport const ukUA = getGridLocalization(ukUAGrid, ukUACore);","import { viVN as viVNCore } from '@mui/material/locale';\nimport { getGridLocalization } from '../utils/getGridLocalization';\nconst viVNGrid = {\n  // Root\n  noRowsLabel: 'Không có dữ liệu',\n  noResultsOverlayLabel: 'Không tìm thấy kết quả.',\n  errorOverlayDefaultLabel: 'Có lỗi xảy ra.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Độ giãn',\n  toolbarDensityLabel: 'Độ giãn',\n  toolbarDensityCompact: 'Trung bình',\n  toolbarDensityStandard: 'Tiêu chuẩn',\n  toolbarDensityComfortable: 'Rộng',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Cột',\n  toolbarColumnsLabel: 'Chọn cột',\n  // Filters toolbar button text\n  toolbarFilters: 'Bộ lọc',\n  toolbarFiltersLabel: 'Hiển thị bộ lọc',\n  toolbarFiltersTooltipHide: 'Ẩn',\n  toolbarFiltersTooltipShow: 'Hiện',\n  toolbarFiltersTooltipActive: count => count > 1 ? `${count} bộ lọc hoạt động` : `${count} bộ lọc hoạt động`,\n  // Quick filter toolbar field\n  // toolbarQuickFilterPlaceholder: 'Search…',\n  // toolbarQuickFilterLabel: 'Search',\n  // toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Xuất',\n  toolbarExportLabel: 'Xuất',\n  toolbarExportCSV: 'Xuất CSV',\n  toolbarExportPrint: 'In',\n  // toolbarExportExcel: 'Download as Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Tìm kiếm',\n  columnsPanelTextFieldPlaceholder: 'Tiêu đề cột',\n  columnsPanelDragIconLabel: 'Sắp xếp',\n  columnsPanelShowAllButton: 'Hiện tất cả',\n  columnsPanelHideAllButton: 'Ẩn tất cả',\n  // Filter panel text\n  filterPanelAddFilter: 'Thêm bộ lọc',\n  filterPanelDeleteIconLabel: 'Xóa',\n  // filterPanelLinkOperator: 'Logic operator',\n  filterPanelOperators: 'Toán tử',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'Và',\n  filterPanelOperatorOr: 'Hoặc',\n  filterPanelColumns: 'Cột',\n  filterPanelInputLabel: 'Giá trị',\n  filterPanelInputPlaceholder: 'Lọc giá trị',\n  // Filter operators text\n  filterOperatorContains: 'Chứa',\n  filterOperatorEquals: 'Bằng',\n  filterOperatorStartsWith: 'Bắt đầu bằng',\n  filterOperatorEndsWith: 'Kết thúc bằng',\n  filterOperatorIs: 'Là',\n  filterOperatorNot: 'Không là',\n  filterOperatorAfter: 'Trước',\n  filterOperatorOnOrAfter: 'bằng hoặc sau',\n  filterOperatorBefore: 'Sau',\n  filterOperatorOnOrBefore: 'bằng hoặc trước',\n  filterOperatorIsEmpty: 'Rỗng',\n  filterOperatorIsNotEmpty: 'Khác rỗng',\n  // filterOperatorIsAnyOf: 'is any of',\n  // Filter values text\n  filterValueAny: 'bất kỳ giá trị nào',\n  filterValueTrue: 'Có',\n  filterValueFalse: 'Không',\n  // Column menu text\n  columnMenuLabel: 'Danh mục',\n  columnMenuShowColumns: 'Danh sách cột',\n  columnMenuFilter: 'Bộ lọc',\n  columnMenuHideColumn: 'Ẩn cột',\n  columnMenuUnsort: 'Bỏ sắp xếp',\n  columnMenuSortAsc: 'Sắp xếp tăng dần',\n  columnMenuSortDesc: 'Sắp xếp giảm dần',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count > 1 ? `${count} bộ lọc hoạt động` : `${count} bộ lọc hoạt động`,\n  columnHeaderFiltersLabel: 'Bộ lọc',\n  columnHeaderSortIconLabel: 'Sắp xếp',\n  // Rows selected footer text\n  footerRowSelected: count => count > 1 ? `${count.toLocaleString()} hàng đã chọn` : `${count.toLocaleString()} hàng đã chọn`,\n  // Total row amount footer text\n  footerTotalRows: 'Tổng:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} / ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Tích vào ô trống',\n  // checkboxSelectionSelectAllRows: 'Select all rows',\n  // checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  // checkboxSelectionSelectRow: 'Select row',\n  // checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'Có',\n  booleanCellFalseLabel: 'Không',\n  // Actions cell more text\n  actionsCellMore: 'Thêm',\n  // Column pinning text\n  pinToLeft: 'Ghim cột bên trái',\n  pinToRight: 'Ghim cột bên phải',\n  unpin: 'Bỏ ghim',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Nhóm',\n  treeDataExpand: 'mở rộng',\n  treeDataCollapse: 'ẩn đi' // Grouping columns\n  // groupingColumnHeaderName: 'Group',\n  // groupColumn: name => `Group by ${name}`,\n  // unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  // detailPanelToggle: 'Detail panel toggle',\n  // expandDetailPanel: 'Expand',\n  // collapseDetailPanel: 'Collapse',\n  // Row reordering text\n  // rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  // aggregationMenuItemHeader: 'Aggregation',\n  // aggregationFunctionLabelSum: 'sum',\n  // aggregationFunctionLabelAvg: 'avg',\n  // aggregationFunctionLabelMin: 'min',\n  // aggregationFunctionLabelMax: 'max',\n  // aggregationFunctionLabelSize: 'size',\n\n};\nexport const viVN = getGridLocalization(viVNGrid, viVNCore);","import { zhCN as zhCNCore } from '@mui/material/locale';\nimport { getGridLocalization } from '../utils/getGridLocalization';\nconst zhCNGrid = {\n  // Root\n  noRowsLabel: '没有数据。',\n  noResultsOverlayLabel: '未找到数据。',\n  errorOverlayDefaultLabel: '发生错误。',\n  // Density selector toolbar button text\n  toolbarDensity: '表格密度',\n  toolbarDensityLabel: '表格密度',\n  toolbarDensityCompact: '紧密',\n  toolbarDensityStandard: '标准',\n  toolbarDensityComfortable: '稀疏',\n  // Columns selector toolbar button text\n  toolbarColumns: '列',\n  toolbarColumnsLabel: '选择列',\n  // Filters toolbar button text\n  toolbarFilters: '筛选器',\n  toolbarFiltersLabel: '显示筛选器',\n  toolbarFiltersTooltipHide: '隐藏筛选器',\n  toolbarFiltersTooltipShow: '显示筛选器',\n  toolbarFiltersTooltipActive: count => `${count} 个筛选器`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: '搜索…',\n  toolbarQuickFilterLabel: '搜索',\n  toolbarQuickFilterDeleteIconLabel: '清除',\n  // Export selector toolbar button text\n  toolbarExport: '导出',\n  toolbarExportLabel: '导出',\n  toolbarExportCSV: '导出至CSV',\n  toolbarExportPrint: '打印',\n  toolbarExportExcel: '导出至Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: '搜索列',\n  columnsPanelTextFieldPlaceholder: '列名',\n  columnsPanelDragIconLabel: '重排序列',\n  columnsPanelShowAllButton: '显示所有',\n  columnsPanelHideAllButton: '隐藏所有',\n  // Filter panel text\n  filterPanelAddFilter: '添加筛选器',\n  filterPanelDeleteIconLabel: '删除',\n  filterPanelLinkOperator: '逻辑操作器',\n  filterPanelOperators: '操作器',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: '与',\n  filterPanelOperatorOr: '或',\n  filterPanelColumns: '列',\n  filterPanelInputLabel: '值',\n  filterPanelInputPlaceholder: '筛选值',\n  // Filter operators text\n  filterOperatorContains: '包含',\n  filterOperatorEquals: '等于',\n  filterOperatorStartsWith: '开始于',\n  filterOperatorEndsWith: '结束于',\n  filterOperatorIs: '是',\n  filterOperatorNot: '不是',\n  filterOperatorAfter: '在后面',\n  filterOperatorOnOrAfter: '正在后面',\n  filterOperatorBefore: '在前面',\n  filterOperatorOnOrBefore: '正在前面',\n  filterOperatorIsEmpty: '为空',\n  filterOperatorIsNotEmpty: '不为空',\n  filterOperatorIsAnyOf: '属于',\n  // Filter values text\n  filterValueAny: '任何',\n  filterValueTrue: '真',\n  filterValueFalse: '假',\n  // Column menu text\n  columnMenuLabel: '菜单',\n  columnMenuShowColumns: '显示',\n  columnMenuFilter: '筛选器',\n  columnMenuHideColumn: '隐藏',\n  columnMenuUnsort: '恢复默认',\n  columnMenuSortAsc: '升序',\n  columnMenuSortDesc: '降序',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} 个筛选器` : `${count} 个筛选器`,\n  columnHeaderFiltersLabel: '显示筛选器',\n  columnHeaderSortIconLabel: '排序',\n  // Rows selected footer text\n  footerRowSelected: count => `共选中了${count.toLocaleString()}行`,\n  // Total row amount footer text\n  footerTotalRows: '所有行:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} / ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: '多选框',\n  checkboxSelectionSelectAllRows: '全选行',\n  checkboxSelectionUnselectAllRows: '反选所有行',\n  checkboxSelectionSelectRow: '选择行',\n  checkboxSelectionUnselectRow: '反选行',\n  // Boolean cell text\n  booleanCellTrueLabel: '真',\n  booleanCellFalseLabel: '假',\n  // Actions cell more text\n  actionsCellMore: '更多',\n  // Column pinning text\n  pinToLeft: '固定到左侧',\n  pinToRight: '固定到右侧',\n  unpin: '取消固定',\n  // Tree Data\n  treeDataGroupingHeaderName: '组',\n  treeDataExpand: '查看子项目',\n  treeDataCollapse: '隐藏子项目',\n  // Grouping columns\n  groupingColumnHeaderName: '组',\n  groupColumn: name => `用${name}分组`,\n  unGroupColumn: name => `不再用${name}分组`,\n  // Master/detail\n  detailPanelToggle: '详细信息',\n  expandDetailPanel: '显示',\n  collapseDetailPanel: '折叠',\n  // Row reordering text\n  rowReorderingHeaderName: '重新排列行',\n  // Aggregation\n  aggregationMenuItemHeader: '集合',\n  aggregationFunctionLabelSum: '总数',\n  aggregationFunctionLabelAvg: '平均',\n  aggregationFunctionLabelMin: '最小',\n  aggregationFunctionLabelMax: '最大',\n  aggregationFunctionLabelSize: '大小'\n};\nexport const zhCN = getGridLocalization(zhCNGrid, zhCNCore);","import { zhTW as zhTWCore } from '@mui/material/locale';\nimport { getGridLocalization } from '../utils/getGridLocalization';\nconst zhTWGrid = {\n  // Root\n  noRowsLabel: '沒有資料',\n  noResultsOverlayLabel: '沒有結果',\n  errorOverlayDefaultLabel: '發生錯誤',\n  // Density selector toolbar button text\n  toolbarDensity: '表格密度',\n  toolbarDensityLabel: '表格密度',\n  toolbarDensityCompact: '緊湊',\n  toolbarDensityStandard: '標準',\n  toolbarDensityComfortable: '舒適',\n  // Columns selector toolbar button text\n  toolbarColumns: '欄位',\n  toolbarColumnsLabel: '選擇欄位',\n  // Filters toolbar button text\n  toolbarFilters: '篩選器',\n  toolbarFiltersLabel: '顯示篩選器',\n  toolbarFiltersTooltipHide: '隱藏篩選器',\n  toolbarFiltersTooltipShow: '顯示篩選器',\n  toolbarFiltersTooltipActive: count => `${count} 個篩選器`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: '搜尋…',\n  toolbarQuickFilterLabel: '搜尋',\n  toolbarQuickFilterDeleteIconLabel: '清除',\n  // Export selector toolbar button text\n  toolbarExport: '匯出',\n  toolbarExportLabel: '匯出',\n  toolbarExportCSV: '匯出 CSV',\n  toolbarExportPrint: '列印',\n  toolbarExportExcel: '匯出 Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: '欄位搜尋',\n  columnsPanelTextFieldPlaceholder: '欄位名稱',\n  columnsPanelDragIconLabel: '排序欄位',\n  columnsPanelShowAllButton: '顯示所有',\n  columnsPanelHideAllButton: '隱藏所有',\n  // Filter panel text\n  filterPanelAddFilter: '增加篩選器',\n  filterPanelDeleteIconLabel: '刪除',\n  filterPanelLinkOperator: '邏輯運算子',\n  filterPanelOperators: '運算子',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: '且',\n  filterPanelOperatorOr: '或',\n  filterPanelColumns: '欄位',\n  filterPanelInputLabel: '值',\n  filterPanelInputPlaceholder: '篩選值',\n  // Filter operators text\n  filterOperatorContains: '包含',\n  filterOperatorEquals: '等於',\n  filterOperatorStartsWith: '以...開頭',\n  filterOperatorEndsWith: '以...結束',\n  filterOperatorIs: '為',\n  filterOperatorNot: '不為',\n  filterOperatorAfter: '...之後',\n  filterOperatorOnOrAfter: '...(含)之後',\n  filterOperatorBefore: '...之前',\n  filterOperatorOnOrBefore: '...(含)之前',\n  filterOperatorIsEmpty: '為空',\n  filterOperatorIsNotEmpty: '不為空',\n  filterOperatorIsAnyOf: '是其中之一',\n  // Filter values text\n  filterValueAny: '任何值',\n  filterValueTrue: '真',\n  filterValueFalse: '假',\n  // Column menu text\n  columnMenuLabel: '選單',\n  columnMenuShowColumns: '顯示欄位',\n  columnMenuFilter: '篩選器',\n  columnMenuHideColumn: '隱藏',\n  columnMenuUnsort: '預設排序',\n  columnMenuSortAsc: '升序',\n  columnMenuSortDesc: '降序',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => `${count} 個篩選器`,\n  columnHeaderFiltersLabel: '顯示篩選器',\n  columnHeaderSortIconLabel: '排序',\n  // Rows selected footer text\n  footerRowSelected: count => `已選取 ${count.toLocaleString()} 個`,\n  // Total row amount footer text\n  footerTotalRows: '總數:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} / ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: '核取方塊',\n  checkboxSelectionSelectAllRows: '全選',\n  checkboxSelectionUnselectAllRows: '取消全選',\n  checkboxSelectionSelectRow: '選取',\n  checkboxSelectionUnselectRow: '取消選取',\n  // Boolean cell text\n  booleanCellTrueLabel: '真',\n  booleanCellFalseLabel: '假',\n  // Actions cell more text\n  actionsCellMore: '查看更多',\n  // Column pinning text\n  pinToLeft: '釘選在左側',\n  pinToRight: '釘選在右側',\n  unpin: '取消釘選',\n  // Tree Data\n  treeDataGroupingHeaderName: '群組',\n  treeDataExpand: '查看子項目',\n  treeDataCollapse: '隱藏子項目',\n  // Grouping columns\n  groupingColumnHeaderName: '群組',\n  groupColumn: name => `以 ${name} 分組`,\n  unGroupColumn: name => `取消以 ${name} 分組`,\n  // Master/detail\n  detailPanelToggle: '切換顯示詳細資訊',\n  expandDetailPanel: '展開',\n  collapseDetailPanel: '摺疊',\n  // Row reordering text\n  rowReorderingHeaderName: '排序' // Aggregation\n  // aggregationMenuItemHeader: 'Aggregation',\n  // aggregationFunctionLabelSum: 'sum',\n  // aggregationFunctionLabelAvg: 'avg',\n  // aggregationFunctionLabelMin: 'min',\n  // aggregationFunctionLabelMax: 'max',\n  // aggregationFunctionLabelSize: 'size',\n\n};\nexport const zhTW = getGridLocalization(zhTWGrid, zhTWCore);"],"names":["_excluded","GridActionsCellItem","React","props","ref","label","icon","showInMenu","onClick","other","_objectWithoutPropertiesLoose","_jsxs","MenuItem","_extends","children","_jsx","ListItemIcon","IconButton","size","role","event","fontSize","GridToolbarContainerRoot","styled","name","slot","overridesResolver","styles","toolbarContainer","display","alignItems","flexWrap","padding","theme","spacing","GridToolbarContainer","className","classes","ownerState","composeClasses","root","getDataGridUtilityClass","useUtilityClasses","useGridRootProps","clsx","GridToolbarColumnsButton","_rootProps$components","apiRef","useGridApiContext","rootProps","useGridSelector","gridPreferencePanelStateSelector","open","openedPanelValue","disableColumnSelector","components","BaseButton","current","getLocaleText","startIcon","ColumnSelectorIcon","GridPreferencePanelsValue","hidePreferences","showPreferences","componentsProps","baseButton","GridToolbarDensitySelector","densityValue","gridDensityValueSelector","densityButtonId","useId","densityMenuId","setOpen","buttonRef","handleRef","useForkRef","densityOptions","DensityCompactIcon","value","GridDensityTypes","DensityStandardIcon","DensityComfortableIcon","disableDensitySelector","densityElements","map","option","index","newDensity","setDensity","selected","undefined","id","prevOpen","GridMenu","target","onClickAway","_buttonRef$current","contains","position","MenuList","gridClasses","onKeyDown","isTabKey","key","preventDefault","isHideMenuKey","autoFocusItem","GridToolbarFilterListRoot","toolbarFilterList","margin","GridToolbarFilterButton","_rootProps$components2","buttonProps","button","activeFilters","gridFilterActiveItemsSelector","lookup","gridColumnLookupSelector","preferencePanel","tooltipContentNode","length","getOperatorLabel","item","columnField","filterOperators","find","operator","operatorValue","capitalize","toString","_item$value","headerName","disableColumnFilter","BaseTooltip","title","enterDelay","baseTooltip","Badge","badgeContent","color","OpenFilterButtonIcon","_buttonProps$onClick","hideFilterPanel","showFilterPanel","call","GridToolbarQuickFilterRoot","TextField","toolbarQuickFilter","width","paddingBottom","marginLeft","borderBottom","palette","divider","height","defaultSearchValueParser","searchText","split","filter","word","defaultSearchValueFormatter","values","join","GridToolbarQuickFilter","quickFilterParser","quickFilterFormatter","debounceMs","quickFilterValues","gridQuickFilterValuesSelector","searchValue","setSearchValue","prevQuickFilterValues","setPrevQuickFilterValues","isDeepEqual","prevSearchValue","updateSearchValue","newSearchValue","setQuickFilterValues","debouncedUpdateSearchValue","debounce","handleSearchValueChange","handleSearchReset","as","BaseTextField","variant","onChange","placeholder","type","InputProps","startAdornment","QuickFilterIcon","endAdornment","sx","visibility","QuickFilterClearIcon","baseTextField","GridToolbar","csvOptions","printOptions","excelOptions","showQuickFilter","quickFilterProps","GridToolbarExport","Box","flex","useGridApi","buildWarning","useGridScrollFn","renderingZoneElementRef","columnHeadersElementRef","logger","useGridLogger","previousValue","v","_previousValue$curren","left","top","debug","style","transform","GridEvents","useGridState","state","setState","forceUpdate","getGridLocalization","gridTranslations","coreTranslations","_coreTranslations$com","_coreTranslations$com2","MuiDataGrid","defaultProps","localeText","MuiTablePagination","arSD","noRowsLabel","noResultsOverlayLabel","errorOverlayDefaultLabel","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","count","toolbarExport","toolbarExportLabel","toolbarExportCSV","columnsPanelTextFieldLabel","columnsPanelTextFieldPlaceholder","columnsPanelDragIconLabel","columnsPanelShowAllButton","columnsPanelHideAllButton","filterPanelAddFilter","filterPanelDeleteIconLabel","filterPanelLinkOperator","filterPanelOperators","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","filterPanelInputLabel","filterPanelInputPlaceholder","filterOperatorContains","filterOperatorEquals","filterOperatorStartsWith","filterOperatorEndsWith","filterOperatorIs","filterOperatorNot","filterOperatorAfter","filterOperatorOnOrAfter","filterOperatorBefore","filterOperatorOnOrBefore","filterOperatorIsEmpty","filterOperatorIsNotEmpty","filterOperatorIsAnyOf","filterValueAny","filterValueTrue","filterValueFalse","columnMenuLabel","columnMenuShowColumns","columnMenuFilter","columnMenuHideColumn","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerRowSelected","toLocaleString","footerTotalRows","footerTotalVisibleRows","visibleCount","totalCount","checkboxSelectionHeaderName","checkboxSelectionSelectAllRows","checkboxSelectionUnselectAllRows","checkboxSelectionSelectRow","checkboxSelectionUnselectRow","booleanCellTrueLabel","booleanCellFalseLabel","actionsCellMore","pinToLeft","pinToRight","unpin","treeDataGroupingHeaderName","treeDataExpand","treeDataCollapse","groupingColumnHeaderName","groupColumn","unGroupColumn","expandDetailPanel","collapseDetailPanel","MuiBreadcrumbs","expandText","getItemAriaLabel","labelRowsPerPage","labelDisplayedRows","from","to","MuiRating","getLabelText","emptyLabelText","MuiAutocomplete","clearText","closeText","loadingText","noOptionsText","openText","MuiAlert","MuiPagination","page","bgBG","toolbarExportPrint","csCZ","pluralForm","str","firstDigit","op","includes","daDK","deDE","toolbarQuickFilterPlaceholder","toolbarQuickFilterLabel","toolbarQuickFilterDeleteIconLabel","toolbarExportExcel","detailPanelToggle","rowReorderingHeaderName","aggregationMenuItemHeader","aggregationFunctionLabelSum","aggregationFunctionLabelAvg","aggregationFunctionLabelMin","aggregationFunctionLabelMax","aggregationFunctionLabelSize","elGR","enUS","GRID_DEFAULT_LOCALE_TEXT","esES","faIR","fiFI","frFR","heIL","huHU","itIT","jaJP","koKR","nbNO","nlNL","plPL","lastDigit","ptBR","roRO","ruRU","skSK","svSE","trTR","getPluralForm","options","many","few","one","ukUA","viVN","zhCN","zhTW"],"sourceRoot":""}