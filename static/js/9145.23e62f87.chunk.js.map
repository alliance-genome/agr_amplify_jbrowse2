{"version":3,"file":"static/js/9145.23e62f87.chunk.js","mappings":"sUAqBO,SAASA,EAASC,GACvB,OAAOA,EAAKC,OAAS,GAAd,UAAsBD,EAAKE,MAAM,EAAG,IAApC,OAA+CF,CACvD,CAED,IAAMG,GAAYC,EAAAA,EAAAA,KAAAA,EAAa,SAAAC,GAAK,MAAK,CACvCC,YAAa,CACXC,SAAU,WACVC,MAAOH,EAAMI,QAAQ,GACrBC,IAAKL,EAAMI,QAAQ,GACnBE,MAAON,EAAMO,QAAQC,KAAK,MAG5BC,oBAAqB,CACnBC,MAAO,IACPC,OAAQX,EAAMI,QAAQ,IAVU,IAiFpC,WAAeQ,EAAAA,EAAAA,WAnEf,YAQI,IAPFC,EAOC,EAPDA,QACAC,EAMC,EANDA,YACAC,EAKC,EALDA,gBAMQC,EAAYlB,IAAZkB,QACAC,EAAqDJ,EAArDI,YAAR,EAA6DJ,EAAxCK,oBAAqBC,OAA1C,MAAsD,GAAtD,EACA,OACE,UAAC,IAAD,CAAQC,MAAI,EAACC,QAASP,EAAaQ,SAAS,KAA5C,WACE,UAAC,IAAD,sCAEE,SAAC,IAAD,CACEC,UAAWP,EAAQf,YACnBuB,QAAS,kBAAMV,GAAN,EAFX,UAIE,SAAC,IAAD,UAGJ,UAAC,IAAD,YACE,SAAC,IAAD,2DACA,iBAAKS,UAAWP,EAAQP,oBAAxB,UACGQ,EAAYQ,KAAI,SAAAC,GACf,IAAMC,GAAOC,EAAAA,EAAAA,gBAAeF,EAAM,QAC5BG,GAAgBD,EAAAA,EAAAA,gBAAeF,EAAM,iBACrCI,EAAQX,EAAUY,MAAK,SAAAC,GAAI,OAAIL,IAASK,EAAKL,IAAlB,IACjC,OACE,SAAC,IAAD,CAEEM,SACE,SAAC,IAAD,CACEC,UAAWJ,EACXK,SAAU,WAGA,IAAD,EAFHL,EACFf,EAAgBW,GAEhB,UAAAb,EAAQuB,sBAAR,cAAAvB,EAAyBa,EAE5B,EACDpB,MAAM,YAGV+B,MAAK,UAAKV,EAAL,aAAcjC,EAASmC,EAAcS,KAAK,MAA1C,MAdAZ,EAAKa,aAiBf,IACCtB,EAAYrB,OAEV,MADF,SAAC,IAAD,0CAIN,SAAC,IAAD,WACE,SAAC,IAAD,CACE4B,QAAS,kBAAMV,GAAN,EACT0B,QAAQ,YACRlC,MAAM,UAHR,uBAUP,G","sources":["../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/ToggleConnectionsDialog.tsx"],"sourcesContent":["import React from 'react'\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  FormControlLabel,\n  IconButton,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport CloseIcon from '@mui/icons-material/Close'\nimport { observer } from 'mobx-react'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { AbstractSessionModel } from '@jbrowse/core/util'\n\nexport function ellipses(slug: string) {\n  return slug.length > 20 ? `${slug.slice(0, 20)}...` : slug\n}\n\nconst useStyles = makeStyles()(theme => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n\n  connectionContainer: {\n    width: 500,\n    margin: theme.spacing(4),\n  },\n}))\n\nfunction ToggleConnectionDialog({\n  session,\n  handleClose,\n  breakConnection,\n}: {\n  handleClose: () => void\n  session: AbstractSessionModel\n  breakConnection: (arg: AnyConfigurationModel) => void\n}) {\n  const { classes } = useStyles()\n  const { connections, connectionInstances: instances = [] } = session\n  return (\n    <Dialog open onClose={handleClose} maxWidth=\"lg\">\n      <DialogTitle>\n        Turn on/off connections\n        <IconButton\n          className={classes.closeButton}\n          onClick={() => handleClose()}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <Typography>Use the checkbox to turn on/off connections</Typography>\n        <div className={classes.connectionContainer}>\n          {connections.map(conf => {\n            const name = readConfObject(conf, 'name')\n            const assemblyNames = readConfObject(conf, 'assemblyNames')\n            const found = instances.find(conn => name === conn.name)\n            return (\n              <FormControlLabel\n                key={conf.connectionId}\n                control={\n                  <Checkbox\n                    checked={!!found}\n                    onChange={() => {\n                      if (found) {\n                        breakConnection(conf)\n                      } else {\n                        session.makeConnection?.(conf)\n                      }\n                    }}\n                    color=\"primary\"\n                  />\n                }\n                label={`${name} (${ellipses(assemblyNames.join(','))})`}\n              />\n            )\n          })}\n          {!connections.length ? (\n            <Typography>No connections found</Typography>\n          ) : null}\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => handleClose()}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default observer(ToggleConnectionDialog)\n"],"names":["ellipses","slug","length","slice","useStyles","makeStyles","theme","closeButton","position","right","spacing","top","color","palette","grey","connectionContainer","width","margin","observer","session","handleClose","breakConnection","classes","connections","connectionInstances","instances","open","onClose","maxWidth","className","onClick","map","conf","name","readConfObject","assemblyNames","found","find","conn","control","checked","onChange","makeConnection","label","join","connectionId","variant"],"sourceRoot":""}