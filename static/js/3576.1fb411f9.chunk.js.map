{"version":3,"file":"static/js/3576.1fb411f9.chunk.js","mappings":"uRAeMA,GAAYC,EAAAA,EAAAA,KAAAA,EAAa,SAAAC,GAAK,MAAK,CACvCC,KAAM,CACJC,MAAO,KAETC,YAAa,CACXC,SAAU,WACVC,MAAOL,EAAMM,QAAQ,GACrBC,IAAKP,EAAMM,QAAQ,GACnBE,MAAOR,EAAMS,QAAQC,KAAK,MAE5BC,MAAO,CACLC,OAAQZ,EAAMM,QAAQ,IAXU,IA+EpC,WAAeO,EAAAA,EAAAA,WAhEf,SAAyBC,GAOvB,IAAQC,EAAuBD,EAAvBC,MAAOC,EAAgBF,EAAhBE,YACPC,EAAYnB,IAAZmB,QACR,EAA2BF,EAAnBG,UAAAA,OAAR,MAAoB,GAApB,EACA,GAAsBC,EAAAA,EAAAA,UAAS,GAAD,OAAID,IAAlC,eAAOE,EAAP,KAAYC,EAAZ,KAEA,OACE,UAAC,IAAD,CAAQC,MAAI,EAACC,QAASP,EAAtB,WACE,UAAC,IAAD,6BAEE,SAAC,IAAD,CACE,aAAW,QACXQ,UAAWP,EAAQd,YACnBsB,QAAST,EAHX,UAKE,SAAC,IAAD,UAGJ,UAAC,IAAD,CAAeQ,UAAWP,EAAQhB,KAAlC,WACE,SAAC,IAAD,wHAIA,SAAC,IAAD,CACEyB,MAAON,EACPO,SAAU,SAAAC,GACRP,EAAOO,EAAMC,OAAOH,MACrB,EACDI,YAAY,iCAEd,UAAC,IAAD,YACE,SAAC,IAAD,CACEC,QAAQ,YACRvB,MAAM,UACNwB,KAAK,SACLC,WAAS,EACTR,QAAS,WACPV,EAAMmB,aACI,KAARd,GAAee,OAAOC,OAAOhB,QAAciB,GAANjB,GAEvCJ,GACD,EAVH,qBAcA,SAAC,IAAD,CACEe,QAAQ,YACRvB,MAAM,YACNiB,QAAS,kBAAMT,GAAN,EAHX,4BAWT,G","sources":["../../../plugins/alignments/src/LinearPileupDisplay/components/SetMaxHeight.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport CloseIcon from '@mui/icons-material/Close'\n\nconst useStyles = makeStyles()(theme => ({\n  root: {\n    width: 500,\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  field: {\n    margin: theme.spacing(2),\n  },\n}))\n\nfunction SetMaxHeightDlg(props: {\n  model: {\n    maxHeight?: number\n    setMaxHeight: Function\n  }\n  handleClose: () => void\n}) {\n  const { model, handleClose } = props\n  const { classes } = useStyles()\n  const { maxHeight = '' } = model\n  const [max, setMax] = useState(`${maxHeight}`)\n\n  return (\n    <Dialog open onClose={handleClose}>\n      <DialogTitle>\n        Filter options\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent className={classes.root}>\n        <Typography>\n          Set max height for the track. For example, you can increase this if\n          the layout says &quot;Max height reached&quot;\n        </Typography>\n        <TextField\n          value={max}\n          onChange={event => {\n            setMax(event.target.value)\n          }}\n          placeholder=\"Enter max height for layout\"\n        />\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            autoFocus\n            onClick={() => {\n              model.setMaxHeight(\n                max !== '' && !Number.isNaN(+max) ? +max : undefined,\n              )\n              handleClose()\n            }}\n          >\n            Submit\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => handleClose()}\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default observer(SetMaxHeightDlg)\n"],"names":["useStyles","makeStyles","theme","root","width","closeButton","position","right","spacing","top","color","palette","grey","field","margin","observer","props","model","handleClose","classes","maxHeight","useState","max","setMax","open","onClose","className","onClick","value","onChange","event","target","placeholder","variant","type","autoFocus","setMaxHeight","Number","isNaN","undefined"],"sourceRoot":""}