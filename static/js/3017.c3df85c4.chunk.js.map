{"version":3,"file":"static/js/3017.c3df85c4.chunk.js","mappings":"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","sources":["../../../packages/app-core/src/ui/App/Drawer.tsx","../../../packages/app-core/src/ui/App/DrawerHeader.tsx","../../../packages/app-core/src/ui/App/DrawerWidget.tsx"],"sourcesContent":["import React from 'react'\nimport { Paper } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport ResizeHandle from '@jbrowse/core/ui/ResizeHandle'\nimport { SessionWithDrawerWidgets } from '@jbrowse/core/util/types'\n\nconst useStyles = makeStyles()(theme => ({\n  paper: {\n    overflowY: 'auto',\n    height: '100%',\n    zIndex: theme.zIndex.drawer,\n    outline: 'none',\n    background: theme.palette.background.default,\n  },\n  resizeHandle: {\n    width: 4,\n    position: 'fixed',\n    top: 0,\n    zIndex: theme.zIndex.drawer + 1,\n  },\n}))\n\nfunction Drawer({\n  children,\n  session,\n}: {\n  children: React.ReactNode\n  session: SessionWithDrawerWidgets\n}) {\n  const { drawerPosition, drawerWidth } = session\n  const { classes } = useStyles()\n\n  return (\n    <Paper className={classes.paper} elevation={16} square>\n      {drawerPosition === 'right' ? (\n        <ResizeHandle\n          onDrag={session.resizeDrawer}\n          className={classes.resizeHandle}\n          vertical\n        />\n      ) : null}\n      {children}\n      {drawerPosition === 'left' ? (\n        <ResizeHandle\n          onDrag={session.resizeDrawer}\n          className={classes.resizeHandle}\n          style={{ left: drawerWidth }}\n          vertical\n        />\n      ) : null}\n    </Paper>\n  )\n}\n\nexport default observer(Drawer)\n","import React, { useState } from 'react'\nimport {\n  AppBar,\n  FormControl,\n  IconButton,\n  Menu,\n  MenuItem,\n  Select,\n  Toolbar,\n  Tooltip,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { getEnv } from '@jbrowse/core/util'\nimport { SessionWithDrawerWidgets } from '@jbrowse/core/util/types'\n\n// icons\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport CloseIcon from '@mui/icons-material/Close'\nimport MinimizeIcon from '@mui/icons-material/Minimize'\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\n\nconst useStyles = makeStyles()(theme => ({\n  formControl: {\n    margin: 0,\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  drawerSelect: {\n    margin: 0,\n    color: theme.palette.secondary.contrastText,\n  },\n\n  dropDownIcon: {\n    color: theme.palette.secondary.contrastText,\n  },\n  header: {\n    background: theme.palette.secondary.main,\n  },\n}))\n\nexport default observer(function ({\n  session,\n  setToolbarHeight,\n}: {\n  session: SessionWithDrawerWidgets\n  setToolbarHeight: (arg: number) => void\n}) {\n  const { classes } = useStyles()\n\n  return (\n    <AppBar\n      position=\"sticky\"\n      className={classes.header}\n      ref={ref => setToolbarHeight(ref?.getBoundingClientRect().height || 0)}\n    >\n      <Toolbar disableGutters>\n        <DrawerWidgetSelector session={session} />\n        <div className={classes.spacer} />\n        <DrawerControls session={session} />\n      </Toolbar>\n    </AppBar>\n  )\n})\n\nconst DrawerWidgetSelector = observer(function ({\n  session,\n}: {\n  session: SessionWithDrawerWidgets\n}) {\n  const { visibleWidget, activeWidgets } = session\n  const { classes } = useStyles()\n  const { pluginManager } = getEnv(session)\n  return (\n    <FormControl className={classes.formControl}>\n      <Select\n        value={visibleWidget?.id}\n        data-testid=\"widget-drawer-selects\"\n        className={classes.drawerSelect}\n        classes={{ icon: classes.dropDownIcon }}\n        renderValue={widgetId => {\n          const widget = session.activeWidgets.get(widgetId)\n          if (!widget) {\n            return (\n              <Typography variant=\"h6\" color=\"inherit\">\n                Unknown widget\n              </Typography>\n            )\n          }\n          const widgetType = pluginManager.getWidgetType(widget.type)\n          const { HeadingComponent, heading } = widgetType\n          return HeadingComponent ? (\n            <HeadingComponent model={widget} />\n          ) : (\n            <Typography variant=\"h6\" color=\"inherit\">\n              {heading}\n            </Typography>\n          )\n        }}\n        onChange={e => {\n          const w = session.activeWidgets.get(e.target.value)\n          if (w) {\n            session.showWidget(w)\n          } else {\n            session.notify(`Widget not found ${e.target.value}`, 'warning')\n          }\n        }}\n      >\n        {[...activeWidgets.values()].map(widget => {\n          const widgetType = pluginManager.getWidgetType(widget.type)\n          const { HeadingComponent, heading } = widgetType\n          return (\n            <MenuItem\n              data-testid={`widget-drawer-selects-item-${widget.type}`}\n              key={widget.id}\n              value={widget.id}\n            >\n              {HeadingComponent ? (\n                <HeadingComponent model={widget} />\n              ) : (\n                <Typography variant=\"h6\" color=\"inherit\">\n                  {heading}\n                </Typography>\n              )}\n              <IconButton\n                data-testid={`${widget.type}-drawer-delete`}\n                color=\"inherit\"\n                aria-label=\"Delete\"\n                onClick={() => session.hideWidget(widget)}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </MenuItem>\n          )\n        })}\n      </Select>\n    </FormControl>\n  )\n})\n\nconst DrawerControls = observer(function ({\n  session,\n}: {\n  session: SessionWithDrawerWidgets\n}) {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n  const { drawerPosition, visibleWidget } = session\n  return (\n    <>\n      <IconButton\n        color=\"inherit\"\n        onClick={event => setAnchorEl(event.currentTarget)}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <Tooltip title=\"Minimize drawer\">\n        <IconButton\n          data-testid=\"drawer-minimize\"\n          color=\"inherit\"\n          onClick={() => {\n            session.notify(\n              `Drawer minimized, click button on ${drawerPosition} side of screen to re-open`,\n              'info',\n            )\n            session.minimizeWidgetDrawer()\n          }}\n        >\n          <MinimizeIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title=\"Close drawer\">\n        <IconButton\n          color=\"inherit\"\n          onClick={() => session.hideWidget(visibleWidget)}\n        >\n          <CloseIcon />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={() => setAnchorEl(null)}\n      >\n        {['left', 'right'].map(option => (\n          <MenuItem\n            key={option}\n            selected={drawerPosition === 'option'}\n            onClick={() => {\n              session.setDrawerPosition(option)\n              setAnchorEl(null)\n            }}\n          >\n            {option}\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  )\n})\n","import React, { Suspense, useState } from 'react'\nimport { ErrorBoundary } from 'react-error-boundary'\n\nimport { observer } from 'mobx-react'\nimport { getEnv } from '@jbrowse/core/util'\nimport LoadingEllipses from '@jbrowse/core/ui/LoadingEllipses'\nimport ErrorMessage from '@jbrowse/core/ui/ErrorMessage'\nimport { SessionWithDrawerWidgets } from '@jbrowse/core/util/types'\n\n// locals\nimport Drawer from './Drawer'\nimport DrawerHeader from './DrawerHeader'\n\nconst DrawerWidget = observer(function ({\n  session,\n}: {\n  session: SessionWithDrawerWidgets\n}) {\n  const { visibleWidget } = session\n  const { pluginManager } = getEnv(session)\n\n  const DrawerComponent = visibleWidget\n    ? (pluginManager.evaluateExtensionPoint(\n        'Core-replaceWidget',\n        pluginManager.getWidgetType(visibleWidget.type).ReactComponent,\n        {\n          session,\n          model: visibleWidget,\n        },\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      ) as React.FC<any>)\n    : null\n\n  // we track the toolbar height because components that use virtualized\n  // height want to be able to fill the contained, minus the toolbar height\n  // (the position static/sticky is included in AutoSizer estimates)\n  const [toolbarHeight, setToolbarHeight] = useState(0)\n\n  return (\n    <Drawer session={session}>\n      <DrawerHeader session={session} setToolbarHeight={setToolbarHeight} />\n      <Suspense fallback={<LoadingEllipses />}>\n        <ErrorBoundary\n          FallbackComponent={({ error }) => <ErrorMessage error={error} />}\n        >\n          {DrawerComponent ? (\n            <>\n              <DrawerComponent\n                model={visibleWidget}\n                session={session}\n                toolbarHeight={toolbarHeight}\n              />\n              <div style={{ height: 300 }} />\n            </>\n          ) : null}\n        </ErrorBoundary>\n      </Suspense>\n    </Drawer>\n  )\n})\n\nexport default DrawerWidget\n"],"names":["useStyles","makeStyles","theme","paper","overflowY","height","zIndex","drawer","outline","background","palette","default","resizeHandle","width","position","top","observer","_ref","children","session","drawerPosition","drawerWidth","classes","_jsxs","Paper","className","elevation","square","_jsx","ResizeHandle","onDrag","resizeDrawer","vertical","style","left","formControl","margin","spacer","flexGrow","drawerSelect","color","secondary","contrastText","dropDownIcon","header","main","setToolbarHeight","AppBar","ref","getBoundingClientRect","Toolbar","disableGutters","DrawerWidgetSelector","DrawerControls","_ref3","visibleWidget","activeWidgets","pluginManager","getEnv","FormControl","Select","value","id","icon","renderValue","widgetId","widget","get","Typography","variant","widgetType","getWidgetType","type","HeadingComponent","heading","model","onChange","e","w","target","showWidget","notify","concat","_toConsumableArray","values","map","MenuItem","IconButton","onClick","hideWidget","DeleteIcon","_ref4","_useState","useState","_useState2","_slicedToArray","anchorEl","setAnchorEl","_Fragment","event","currentTarget","MoreVertIcon","Tooltip","title","minimizeWidgetDrawer","MinimizeIcon","CloseIcon","Menu","open","Boolean","onClose","option","selected","setDrawerPosition","DrawerComponent","evaluateExtensionPoint","ReactComponent","toolbarHeight","Drawer","DrawerHeader","Suspense","fallback","LoadingEllipses","ErrorBoundary","FallbackComponent","_ref2","error","ErrorMessage"],"sourceRoot":""}