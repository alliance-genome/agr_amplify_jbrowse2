{"version":3,"file":"static/js/8113.bb2420ee.chunk.js","mappings":"kQAoEA,WAAeA,EAAAA,EAAAA,WAvDf,YAUI,IAAD,IATDC,UAAAA,OASC,MATW,GASX,EARDC,EAQC,EARDA,aASQC,EAAsDF,EAAtDE,KAAMC,EAAgDH,EAAhDG,qBAAsBC,EAA0BJ,EAA1BI,sBACpC,OACE,UAAC,IAAD,CAAQC,MAAI,EAAZ,WACE,UAAC,IAAD,gCAAqCH,EAArC,QACA,UAAC,IAAD,WACGC,GACC,iCACE,SAAC,IAAD,mDAGA,SAAC,IAAD,UACGG,OAAOC,QAAQJ,GAAsBK,KAAI,+BAAEC,EAAF,KAAOC,EAAP,YACxC,SAAC,IAAD,oBAAwBA,EAAxB,YAAiCD,IAAlBA,WAInB,MACJ,SAAC,IAAD,kEAIF,UAAC,IAAD,YACE,SAAC,IAAD,CAAQE,QAAS,kBAAMV,KAAgBW,MAAM,UAA7C,qBAGA,SAAC,IAAD,CACEC,QAAQ,YACRF,QACEX,EACI,WACuB,OAArBI,QAAqB,IAArBA,GAAAA,IACAH,KAEF,aAENW,MAAM,UAVR","sources":["../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/CloseConnectionDialog.tsx"],"sourcesContent":["import React from 'react'\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  Button,\n  List,\n  ListItem,\n  DialogActions,\n} from '@material-ui/core'\nimport { observer } from 'mobx-react'\n\nfunction CloseConnectionDialog({\n  modalInfo = {},\n  setModalInfo,\n}: {\n  modalInfo?: {\n    name?: string\n    dereferenceTypeCount?: { [key: string]: number }\n    safelyBreakConnection?: Function\n  }\n  setModalInfo: Function\n}) {\n  const { name, dereferenceTypeCount, safelyBreakConnection } = modalInfo\n  return (\n    <Dialog open>\n      <DialogTitle>Close connection &quot;{name}&quot;</DialogTitle>\n      <DialogContent>\n        {dereferenceTypeCount ? (\n          <>\n            <DialogContentText>\n              Closing this connection will close:\n            </DialogContentText>\n            <List>\n              {Object.entries(dereferenceTypeCount).map(([key, value]) => (\n                <ListItem key={key}>{`${value} ${key}`}</ListItem>\n              ))}\n            </List>\n          </>\n        ) : null}\n        <DialogContentText>\n          Are you sure you want to close this connection?\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => setModalInfo()} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={\n            modalInfo\n              ? () => {\n                  safelyBreakConnection?.()\n                  setModalInfo()\n                }\n              : () => {}\n          }\n          color=\"primary\"\n        >\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default observer(CloseConnectionDialog)\n"],"names":["observer","modalInfo","setModalInfo","name","dereferenceTypeCount","safelyBreakConnection","open","Object","entries","map","key","value","onClick","color","variant"],"sourceRoot":""}