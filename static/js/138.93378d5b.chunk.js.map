{"version":3,"file":"static/js/138.93378d5b.chunk.js","mappings":"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","sources":["../../../plugins/dotplot-view/src/DotplotView/components/ImportCustomTrack.tsx","../../../plugins/dotplot-view/src/DotplotView/components/ImportSyntenyTrackSelector.tsx","../../../plugins/dotplot-view/src/DotplotView/components/ImportForm.tsx","../../../plugins/dotplot-view/src/DotplotView/components/CursorIcon.tsx","../../../plugins/dotplot-view/src/DotplotView/components/Header.tsx","../../../plugins/dotplot-view/src/DotplotView/components/Grid.tsx","../../../plugins/dotplot-view/src/DotplotView/components/Axes.tsx","../../../plugins/dotplot-view/src/DotplotView/components/DotplotTooltip.tsx","../../../plugins/dotplot-view/src/DotplotView/components/DotplotView.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { SnapshotIn } from 'mobx-state-tree'\nimport path from 'path'\nimport {\n  FormControlLabel,\n  Grid,\n  Paper,\n  Radio,\n  RadioGroup,\n  Typography,\n} from '@mui/material'\nimport { ErrorMessage, FileSelector } from '@jbrowse/core/ui'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport { observer } from 'mobx-react'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\nfunction getName(\n  sessionTrackData?: { uri: string } | { localPath: string } | { name: string },\n) {\n  return sessionTrackData\n    ? // @ts-ignore\n      sessionTrackData.uri ||\n        // @ts-ignore\n        sessionTrackData.localPath ||\n        // @ts-ignore\n        sessionTrackData.name\n    : undefined\n}\n\nfunction stripGz(fileName: string) {\n  return fileName.endsWith('.gz')\n    ? fileName.slice(0, fileName.length - 3)\n    : fileName\n}\n\nfunction getAdapter({\n  radioOption,\n  assembly1,\n  assembly2,\n  fileLocation,\n  bed1Location,\n  bed2Location,\n}: {\n  radioOption: string\n  assembly1: string\n  assembly2: string\n  fileLocation?: FileLocation\n  bed1Location?: FileLocation\n  bed2Location?: FileLocation\n}) {\n  if (radioOption === '.paf') {\n    return {\n      type: 'PAFAdapter',\n      pafLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.out') {\n    return {\n      type: 'MashMapAdapter',\n      outLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.delta') {\n    return {\n      type: 'DeltaAdapter',\n      deltaLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.chain') {\n    return {\n      type: 'ChainAdapter',\n      chainLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.anchors') {\n    return {\n      type: 'MCScanAnchorsAdapter',\n      mcscanAnchorsLocation: fileLocation,\n      bed1Location,\n      bed2Location,\n      assemblyNames: [assembly1, assembly2],\n    }\n  } else if (radioOption === '.anchors.simple') {\n    return {\n      type: 'MCScanSimpleAnchorsAdapter',\n      mcscanSimpleAnchorsLocation: fileLocation,\n      bed1Location,\n      bed2Location,\n      assemblyNames: [assembly1, assembly2],\n    }\n  } else {\n    throw new Error('Unknown type')\n  }\n}\n\ntype Conf = SnapshotIn<AnyConfigurationModel>\n\nconst OpenTrack = observer(\n  ({\n    sessionTrackData,\n    assembly1,\n    assembly2,\n    setSessionTrackData,\n  }: {\n    sessionTrackData: Conf\n    assembly1: string\n    assembly2: string\n    setSessionTrackData: (arg: Conf) => void\n  }) => {\n    const [bed2Location, setBed2Location] = useState<FileLocation>()\n    const [bed1Location, setBed1Location] = useState<FileLocation>()\n    const [fileLocation, setFileLocation] = useState<FileLocation>()\n    const [value, setValue] = useState('')\n    const [error, setError] = useState<unknown>()\n    const fileName = getName(fileLocation)\n\n    const radioOption =\n      value || (fileName ? path.extname(stripGz(fileName)) : '')\n\n    useEffect(() => {\n      try {\n        if (fileLocation) {\n          const fn = fileName ? path.basename(fileName) : 'MyTrack'\n          const trackId = `${fn}-${Date.now()}`\n          setError(undefined)\n\n          setSessionTrackData({\n            trackId,\n            name: fn,\n            assemblyNames: [assembly2, assembly1],\n            type: 'SyntenyTrack',\n            adapter: getAdapter({\n              radioOption,\n              assembly1,\n              assembly2,\n              fileLocation,\n              bed1Location,\n              bed2Location,\n            }),\n          })\n        }\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    }, [\n      fileName,\n      assembly1,\n      assembly2,\n      bed1Location,\n      bed2Location,\n      fileLocation,\n      radioOption,\n      setSessionTrackData,\n    ])\n    return (\n      <Paper style={{ padding: 12 }}>\n        {error ? <ErrorMessage error={error} /> : null}\n        <Typography style={{ textAlign: 'center' }}>\n          Add a .paf, .out (MashMap), .delta (Mummer), .chain, .anchors or\n          .anchors.simple (MCScan) file to view in the dotplot. These file types\n          can also be gzipped. The first assembly should be the query sequence\n          (e.g. left column of the PAF) and the second assembly should be the\n          target sequence (e.g. right column of the PAF)\n        </Typography>\n        <RadioGroup\n          value={radioOption}\n          onChange={event => setValue(event.target.value)}\n        >\n          <Grid container justifyContent=\"center\">\n            <Grid item>\n              <FormControlLabel value=\".paf\" control={<Radio />} label=\".paf\" />\n            </Grid>\n            <Grid item>\n              <FormControlLabel value=\".out\" control={<Radio />} label=\".out\" />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".delta\"\n                control={<Radio />}\n                label=\".delta\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".chain\"\n                control={<Radio />}\n                label=\".chain\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".anchors\"\n                control={<Radio />}\n                label=\".anchors\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".anchors.simple\"\n                control={<Radio />}\n                label=\".anchors.simple\"\n              />\n            </Grid>\n          </Grid>\n        </RadioGroup>\n        <Grid container justifyContent=\"center\">\n          <Grid item>\n            {value === '.anchors' || value === '.anchors.simple' ? (\n              <div>\n                <div style={{ margin: 20 }}>\n                  Open the {value} and .bed files for both genome assemblies\n                  from the MCScan (Python version) pipeline{' '}\n                  <a href=\"https://github.com/tanghaibao/jcvi/wiki/MCscan-(Python-version)\">\n                    (more info)\n                  </a>\n                </div>\n                <div style={{ display: 'flex' }}>\n                  <div>\n                    <FileSelector\n                      name=\".anchors file\"\n                      description=\"\"\n                      location={fileLocation}\n                      setLocation={loc => setFileLocation(loc)}\n                    />\n                  </div>\n                  <div>\n                    <FileSelector\n                      name=\"genome 1 .bed (left column of anchors file)\"\n                      description=\"\"\n                      location={bed1Location}\n                      setLocation={loc => setBed1Location(loc)}\n                    />\n                  </div>\n                  <div>\n                    <FileSelector\n                      name=\"genome 2 .bed (right column of anchors file)\"\n                      description=\"\"\n                      location={bed2Location}\n                      setLocation={loc => setBed2Location(loc)}\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <FileSelector\n                name={value ? value + ' location' : ''}\n                description=\"\"\n                location={fileLocation}\n                setLocation={loc => setFileLocation(loc)}\n              />\n            )}\n          </Grid>\n        </Grid>\n      </Paper>\n    )\n  },\n)\n\nexport default OpenTrack\n","import React, { useState, useEffect } from 'react'\nimport { Select, MenuItem, Paper, Typography } from '@mui/material'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport { getSession } from '@jbrowse/core/util'\nimport { ErrorMessage } from '@jbrowse/core/ui'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { observer } from 'mobx-react'\n\n// icons\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\n\n// locals\nimport { DotplotViewModel } from '../model'\n\nfunction f(track: AnyConfigurationModel, assembly1: string, assembly2: string) {\n  const assemblyNames = readConfObject(track, 'assemblyNames')\n  return (\n    assemblyNames.includes(assembly1) &&\n    assemblyNames.includes(assembly2) &&\n    track.type.includes('Synteny')\n  )\n}\n\nconst Selector = observer(\n  ({\n    model,\n    assembly1,\n    assembly2,\n    setShowTrackId,\n  }: {\n    model: DotplotViewModel\n    assembly1: string\n    assembly2: string\n    setShowTrackId: (arg: string) => void\n  }) => {\n    const session = getSession(model)\n    const { tracks, sessionTracks } = session\n    const allTracks = [...tracks, ...sessionTracks] as AnyConfigurationModel[]\n    const filteredTracks = allTracks.filter(t => f(t, assembly2, assembly1))\n    const resetTrack = filteredTracks[0]?.trackId || ''\n    const [value, setValue] = useState(resetTrack)\n    useEffect(() => {\n      // if assembly1/assembly2 changes, then we will want to use this effect to change\n      // the state of the useState because it otherwise gets locked to a stale value\n      setValue(resetTrack)\n    }, [resetTrack])\n\n    useEffect(() => {\n      // sets track data in a useEffect because the initial load is needed as well as\n      // onChange's to the select box\n      setShowTrackId(value)\n    }, [value, setShowTrackId])\n\n    return (\n      <Paper style={{ padding: 12 }}>\n        <Typography paragraph>\n          Select a track from the select box below, the track will be shown when\n          you hit \"Launch\".\n        </Typography>\n\n        <Typography paragraph>\n          Note: there is a track selector <i>inside</i> the DotplotView, which\n          can turn on one or more SyntenyTracks (more than one can be displayed\n          at once). Look for the track selector icon <TrackSelectorIcon />\n        </Typography>\n        {filteredTracks.length ? (\n          <Select\n            value={value}\n            onChange={event => setValue(event.target.value)}\n          >\n            {filteredTracks.map(track => (\n              <MenuItem key={track.trackId} value={track.trackId}>\n                {getTrackName(track, session)}\n              </MenuItem>\n            ))}\n          </Select>\n        ) : (\n          <ErrorMessage\n            error={`No synteny tracks found for ${assembly1},${assembly2}`}\n          />\n        )}\n      </Paper>\n    )\n  },\n)\n\nexport default Selector\n","import React, { useState, useEffect } from 'react'\nimport {\n  Button,\n  Container,\n  FormControl,\n  FormLabel,\n  FormControlLabel,\n  Grid,\n  Paper,\n  Radio,\n  RadioGroup,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { transaction } from 'mobx'\nimport { SnapshotIn } from 'mobx-state-tree'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { getSession, isSessionWithAddTracks } from '@jbrowse/core/util'\nimport { ErrorMessage, AssemblySelector } from '@jbrowse/core/ui'\n\n// locals\nimport { DotplotViewModel } from '../model'\nimport ImportCustomTrack from './ImportCustomTrack'\nimport ImportSyntenyTrackSelector from './ImportSyntenyTrackSelector'\n\nconst useStyles = makeStyles()(theme => ({\n  importFormContainer: {\n    padding: theme.spacing(4),\n    margin: '0 auto',\n  },\n  assemblySelector: {\n    width: '75%',\n    margin: '0 auto',\n  },\n}))\n\ntype Conf = SnapshotIn<AnyConfigurationModel>\n\nfunction TrackSelector({\n  setSessionTrackData,\n  setShowTrackId,\n  sessionTrackData,\n  assembly1,\n  assembly2,\n  model,\n}: {\n  sessionTrackData: Conf\n  setSessionTrackData: (arg: Conf) => void\n  setShowTrackId: (arg?: string) => void\n  model: DotplotViewModel\n  assembly1: string\n  assembly2: string\n}) {\n  const [choice, setChoice] = useState('none')\n\n  useEffect(() => {\n    if (choice === 'none') {\n      setSessionTrackData(undefined)\n      setShowTrackId(undefined)\n    }\n  }, [choice, setSessionTrackData, setShowTrackId])\n  return (\n    <>\n      <FormControl>\n        <FormLabel id=\"group-label\">\n          (Optional) Select or add a synteny track\n        </FormLabel>\n        <RadioGroup\n          row\n          value={choice}\n          onChange={event => setChoice(event.target.value)}\n          aria-labelledby=\"group-label\"\n        >\n          <FormControlLabel value=\"none\" control={<Radio />} label=\"None\" />\n          <FormControlLabel\n            value=\"tracklist\"\n            control={<Radio />}\n            label=\"Existing track\"\n          />\n          <FormControlLabel\n            value=\"custom\"\n            control={<Radio />}\n            label=\"New track\"\n          />\n        </RadioGroup>\n      </FormControl>\n      {choice === 'custom' ? (\n        <ImportCustomTrack\n          setSessionTrackData={setSessionTrackData}\n          sessionTrackData={sessionTrackData}\n          assembly2={assembly2}\n          assembly1={assembly1}\n        />\n      ) : null}\n      {choice === 'tracklist' ? (\n        <ImportSyntenyTrackSelector\n          model={model}\n          assembly1={assembly1}\n          assembly2={assembly2}\n          setShowTrackId={setShowTrackId}\n        />\n      ) : null}\n    </>\n  )\n}\n\nconst DotplotImportForm = observer(({ model }: { model: DotplotViewModel }) => {\n  const { classes } = useStyles()\n  const session = getSession(model)\n  const { assemblyNames } = session\n  const [assembly2, setAssembly2] = useState(assemblyNames[0] || '')\n  const [assembly1, setAssembly1] = useState(assemblyNames[0] || '')\n  const [error, setError] = useState<unknown>()\n  const [sessionTrackData, setSessionTrackData] = useState<Conf>()\n  const [showTrackId, setShowTrackId] = useState<string>()\n\n  function onOpenClick() {\n    try {\n      if (!isSessionWithAddTracks(session)) {\n        return\n      }\n      setError(undefined)\n      model.setError(undefined)\n      transaction(() => {\n        if (sessionTrackData) {\n          session.addTrackConf(sessionTrackData)\n          model.toggleTrack(sessionTrackData.trackId)\n        } else if (showTrackId) {\n          model.showTrack(showTrackId)\n        }\n\n        model.setViews([\n          { bpPerPx: 0.1, offsetPx: 0 },\n          { bpPerPx: 0.1, offsetPx: 0 },\n        ])\n        model.setAssemblyNames(assembly2, assembly1)\n      })\n    } catch (e) {\n      console.error(e)\n      setError(e)\n    }\n  }\n\n  // this is a combination of any displayed error message we have\n  const displayError = error || model.error\n  return (\n    <Container className={classes.importFormContainer}>\n      {displayError ? <ErrorMessage error={displayError} /> : null}\n      <Grid\n        container\n        spacing={1}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        className={classes.assemblySelector}\n      >\n        <Grid item>\n          <Paper style={{ padding: 12 }}>\n            <p style={{ textAlign: 'center' }}>\n              Select assemblies for dotplot view\n            </p>\n            <Grid\n              container\n              spacing={1}\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <AssemblySelector\n                  selected={assembly1}\n                  onChange={val => setAssembly1(val)}\n                  session={session}\n                />\n              </Grid>\n              <Grid item>\n                <AssemblySelector\n                  selected={assembly2}\n                  onChange={val => setAssembly2(val)}\n                  session={session}\n                />\n              </Grid>\n              <Grid item>\n                <FormControl>\n                  <Button\n                    onClick={onOpenClick}\n                    variant=\"contained\"\n                    color=\"primary\"\n                  >\n                    Launch\n                  </Button>\n                </FormControl>\n              </Grid>\n            </Grid>\n          </Paper>\n          <TrackSelector\n            setShowTrackId={setShowTrackId}\n            assembly2={assembly2}\n            assembly1={assembly1}\n            setSessionTrackData={setSessionTrackData}\n            sessionTrackData={sessionTrackData}\n            model={model}\n          />\n        </Grid>\n      </Grid>\n    </Container>\n  )\n})\n\nexport default DotplotImportForm\n","import SvgIcon, { SvgIconProps } from '@mui/material/SvgIcon'\nimport React from 'react'\n\nexport function CursorMove(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M13,6V11H18V7.75L22.25,12L18,16.25V13H13V18H16.25L12,22.25L7.75,18H11V13H6V16.25L1.75,12L6,7.75V11H11V6H7.75L12,1.75L16.25,6H13Z\"\n      />\n    </SvgIcon>\n  )\n}\n\nexport function CursorMouse(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M10.07,14.27C10.57,14.03 11.16,14.25 11.4,14.75L13.7,19.74L15.5,18.89L13.19,13.91C12.95,13.41 13.17,12.81 13.67,12.58L13.95,12.5L16.25,12.05L8,5.12V15.9L9.82,14.43L10.07,14.27M13.64,21.97C13.14,22.21 12.54,22 12.31,21.5L10.13,16.76L7.62,18.78C7.45,18.92 7.24,19 7,19A1,1 0 0,1 6,18V3A1,1 0 0,1 7,2C7.24,2 7.47,2.09 7.64,2.23L7.65,2.22L19.14,11.86C19.57,12.22 19.62,12.85 19.27,13.27C19.12,13.45 18.91,13.57 18.7,13.61L15.54,14.23L17.74,18.96C18,19.46 17.76,20.05 17.26,20.28L13.64,21.97Z\"\n      />\n    </SvgIcon>\n  )\n}\n","import React, { lazy, useState } from 'react'\nimport { Alert, Button, IconButton, Typography } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\nimport { getBpDisplayStr } from '@jbrowse/core/util'\nimport { Menu } from '@jbrowse/core/ui'\n\n// icons\nimport ZoomOut from '@mui/icons-material/ZoomOut'\nimport ZoomIn from '@mui/icons-material/ZoomIn'\nimport MoreVert from '@mui/icons-material/MoreVert'\nimport { CursorMouse, CursorMove } from './CursorIcon'\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\n\n// locals\nimport { DotplotViewModel } from '../model'\n\n// lazy components\nconst WarningDialog = lazy(() => import('./WarningDialog'))\n\nconst useStyles = makeStyles()({\n  iconButton: {\n    margin: 5,\n  },\n  bp: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 10,\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  headerBar: {\n    display: 'flex',\n  },\n})\n\nconst DotplotControls = observer(({ model }: { model: DotplotViewModel }) => {\n  const { classes } = useStyles()\n  const [menuAnchorEl, setMenuAnchorEl] = useState<HTMLElement>()\n  return (\n    <div>\n      <IconButton\n        onClick={model.zoomOutButton}\n        className={classes.iconButton}\n        color=\"secondary\"\n      >\n        <ZoomOut />\n      </IconButton>\n\n      <IconButton\n        onClick={model.zoomInButton}\n        className={classes.iconButton}\n        title=\"zoom in\"\n        color=\"secondary\"\n      >\n        <ZoomIn />\n      </IconButton>\n\n      <IconButton\n        onClick={model.activateTrackSelector}\n        className={classes.iconButton}\n        title=\"Open track selector\"\n        data-testid=\"circular_track_select\"\n        color=\"secondary\"\n      >\n        <TrackSelectorIcon />\n      </IconButton>\n\n      <IconButton\n        onClick={event => setMenuAnchorEl(event.currentTarget)}\n        className={classes.iconButton}\n        color=\"secondary\"\n      >\n        <MoreVert />\n      </IconButton>\n\n      {menuAnchorEl ? (\n        <Menu\n          anchorEl={menuAnchorEl}\n          open\n          onMenuItemClick={(_event, callback) => {\n            callback()\n            setMenuAnchorEl(undefined)\n          }}\n          menuItems={[\n            {\n              onClick: () => model.squareView(),\n              label: 'Square view - same base pairs per pixel',\n            },\n            {\n              onClick: () => model.squareViewProportional(),\n              label: 'Rectanglular view - same total bp',\n            },\n            {\n              onClick: () => model.showAllRegions(),\n              label: 'Show all regions',\n            },\n            {\n              onClick: () => model.setDrawCigar(!model.drawCigar),\n              type: 'checkbox',\n              label: 'Draw CIGAR',\n              checked: model.drawCigar,\n            },\n            {\n              onClick: () => model.setCursorMode('move'),\n              label: 'Cursor mode - click and drag to move',\n              icon: CursorMove,\n              type: 'radio',\n              checked: model.cursorMode === 'move',\n            },\n            {\n              onClick: () => model.setCursorMode('crosshair'),\n              label: 'Cursor mode - select region',\n              icon: CursorMouse,\n              type: 'radio',\n              checked: model.cursorMode === 'crosshair',\n            },\n          ]}\n          onClose={() => setMenuAnchorEl(undefined)}\n        />\n      ) : null}\n    </div>\n  )\n})\nconst Warnings = observer(({ model }: { model: DotplotViewModel }) => {\n  const tracksWithWarnings = model.tracks.filter(\n    t => t.displays[0].warnings?.length,\n  )\n  const [shown, setShown] = useState(false)\n  return tracksWithWarnings.length ? (\n    <Alert severity=\"warning\">\n      Warnings during render{' '}\n      <Button onClick={() => setShown(true)}>More info</Button>\n      {shown ? (\n        <WarningDialog\n          tracksWithWarnings={tracksWithWarnings}\n          handleClose={() => setShown(false)}\n        />\n      ) : null}\n    </Alert>\n  ) : null\n})\n\nconst Header = observer(\n  ({\n    model,\n    selection,\n  }: {\n    model: DotplotViewModel\n    selection?: { width: number; height: number }\n  }) => {\n    const { classes } = useStyles()\n    const { hview, vview } = model\n    return (\n      <div className={classes.headerBar}>\n        <DotplotControls model={model} />\n        <Typography\n          className={classes.bp}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >\n          x: {hview.assemblyNames.join(',')} {getBpDisplayStr(hview.currBp)}\n          <br />\n          y: {vview.assemblyNames.join(',')} {getBpDisplayStr(vview.currBp)}\n        </Typography>\n        {selection ? (\n          <Typography\n            className={classes.bp}\n            variant=\"body2\"\n            color=\"textSecondary\"\n          >\n            {`width:${getBpDisplayStr(hview.bpPerPx * selection.width)}`} <br />\n            {`height:${getBpDisplayStr(vview.bpPerPx * selection.height)}`}\n          </Typography>\n        ) : null}\n        <div className={classes.spacer} />\n        <Warnings model={model} />\n      </div>\n    )\n  },\n)\nexport default Header\n","import React from 'react'\nimport { observer } from 'mobx-react'\n\n// locals\nimport { DotplotViewModel } from '../model'\n\nfunction Grid({\n  model,\n  children,\n  stroke = '#0003',\n}: {\n  model: DotplotViewModel\n  children: React.ReactNode\n  stroke?: string\n}) {\n  const { viewWidth, viewHeight, hview, vview } = model\n  const hblocks = hview.dynamicBlocks.contentBlocks\n  const vblocks = vview.dynamicBlocks.contentBlocks\n  const htop = hview.displayedRegionsTotalPx - hview.offsetPx\n  const vtop = vview.displayedRegionsTotalPx - vview.offsetPx\n  const hbottom = hblocks[0]?.offsetPx - hview.offsetPx\n  const vbottom = vblocks[0]?.offsetPx - vview.offsetPx\n\n  // Uses math.max/math.min avoid making very large SVG rect offscreen element,\n  // which can sometimes fail to draw\n  const rx = Math.max(hbottom, 0)\n  const ry = Math.max(viewHeight - vtop, 0)\n  const w = Math.min(htop - hbottom, viewWidth)\n  const h = Math.min(viewHeight - vbottom - ry, viewHeight)\n\n  let lastx = Infinity\n  let lasty = Infinity\n  return (\n    <svg\n      style={{ background: 'rgba(0,0,0,0.12)' }}\n      width={viewWidth}\n      height={viewHeight}\n    >\n      <rect x={rx} y={ry} width={w} height={h} fill=\"#fff\" />\n      <g>\n        {hblocks.map(region => {\n          const x = region.offsetPx - hview.offsetPx\n          const render = Math.floor(x) !== Math.floor(lastx)\n          if (render) {\n            lastx = x\n          }\n          return render ? (\n            <line\n              key={JSON.stringify(region)}\n              x1={x}\n              y1={0}\n              x2={x}\n              y2={viewHeight}\n              stroke={stroke}\n            />\n          ) : null\n        })}\n        {vblocks.map(region => {\n          const y = viewHeight - (region.offsetPx - vview.offsetPx)\n          const render = Math.floor(y) !== Math.floor(lasty)\n          if (render) {\n            lasty = y\n          }\n          return render ? (\n            <line\n              key={JSON.stringify(region)}\n              x1={0}\n              y1={y}\n              x2={viewWidth}\n              y2={y}\n              stroke={stroke}\n            />\n          ) : null\n        })}\n        <line x1={htop} y1={0} x2={htop} y2={viewHeight} stroke={stroke} />\n        <line\n          x1={0}\n          y1={viewHeight - vtop}\n          x2={viewWidth}\n          y2={viewHeight - vtop}\n          stroke={stroke}\n        />\n      </g>\n      {children}\n    </svg>\n  )\n}\nexport default observer(Grid)\n","import React from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { getSnapshot } from 'mobx-state-tree'\nimport { getTickDisplayStr } from '@jbrowse/core/util'\nimport { bpToPx } from '@jbrowse/core/util/Base1DUtils'\n\n// locals\nimport { getBlockLabelKeysToHide } from './util'\nimport { DotplotViewModel } from '../model'\n\nconst useStyles = makeStyles()(() => ({\n  vtext: {\n    gridColumn: '1/2',\n    gridRow: '1/2',\n    pointerEvents: 'none',\n    userSelect: 'none',\n  },\n  htext: {\n    gridColumn: '2/2',\n    gridRow: '2/2',\n    pointerEvents: 'none',\n    userSelect: 'none',\n  },\n}))\n\nexport const HorizontalAxis = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { classes } = useStyles()\n  const { viewWidth, borderX, borderY, hview, htextRotation, hticks } = model\n  const { offsetPx, width, dynamicBlocks, bpPerPx } = hview\n  const dblocks = dynamicBlocks.contentBlocks\n  const hide = getBlockLabelKeysToHide(dblocks, viewWidth, offsetPx)\n  const hviewSnap = {\n    ...getSnapshot(hview),\n    width,\n    staticBlocks: hview.staticBlocks,\n  }\n\n  return (\n    <svg width={viewWidth} height={borderY} className={classes.htext}>\n      {dblocks\n        .filter(region => !hide.has(region.key))\n        .map(region => {\n          const x = region.offsetPx\n          const y = 0\n          const xoff = Math.floor(x - hview.offsetPx)\n\n          return (\n            <text\n              transform={`rotate(${htextRotation},${xoff},${y})`}\n              key={JSON.stringify(region)}\n              x={xoff}\n              y={y + 1}\n              fill=\"black\"\n              dominantBaseline=\"hanging\"\n              textAnchor=\"end\"\n            >\n              {[\n                region.refName,\n                region.start !== 0\n                  ? Math.floor(region.start).toLocaleString('en-US')\n                  : '',\n              ]\n                .filter(f => !!f)\n                .join(':')}\n            </text>\n          )\n        })}\n      {hticks.map(tick => {\n        const x =\n          (bpToPx({\n            refName: tick.refName,\n            coord: tick.base,\n            self: hviewSnap,\n          })?.offsetPx || 0) - offsetPx\n        return (\n          <line\n            key={`line-${JSON.stringify(tick)}`}\n            x1={x}\n            x2={x}\n            y1={0}\n            y2={tick.type === 'major' ? 6 : 4}\n            strokeWidth={1}\n            stroke={tick.type === 'major' ? '#555' : '#999'}\n            data-bp={tick.base}\n          />\n        )\n      })}\n      {hticks\n        .filter(tick => tick.type === 'major')\n        .map(tick => {\n          const x =\n            (bpToPx({\n              refName: tick.refName,\n              coord: tick.base,\n              self: hviewSnap,\n            })?.offsetPx || 0) - offsetPx\n          const y = 0\n          return x > 10 ? (\n            <text\n              x={x - 7}\n              y={y}\n              transform={`rotate(${htextRotation},${x},${y})`}\n              key={`text-${JSON.stringify(tick)}`}\n              fill=\"black\"\n              fontSize={11}\n              dominantBaseline=\"middle\"\n              textAnchor=\"end\"\n            >\n              {getTickDisplayStr(tick.base + 1, bpPerPx)}\n            </text>\n          ) : null\n        })}\n      <text\n        y={borderY - 12}\n        x={(viewWidth - borderX) / 2}\n        fill=\"black\"\n        textAnchor=\"middle\"\n        dominantBaseline=\"hanging\"\n      >\n        {hview.assemblyNames.join(',')}\n      </text>\n    </svg>\n  )\n})\nexport const VerticalAxis = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { classes } = useStyles()\n  const { borderX, viewHeight, borderY, vview, vtextRotation, vticks } = model\n  const { offsetPx, width, dynamicBlocks, bpPerPx } = vview\n  const dblocks = dynamicBlocks.contentBlocks\n  const hide = getBlockLabelKeysToHide(dblocks, viewHeight, offsetPx)\n  const vviewSnap = {\n    ...getSnapshot(vview),\n    width,\n    staticBlocks: vview.staticBlocks,\n  }\n  return (\n    <svg className={classes.vtext} width={borderX} height={viewHeight}>\n      {dblocks\n        .filter(region => !hide.has(region.key))\n        .map(region => {\n          const y = region.offsetPx\n          const x = borderX\n          const yoff = Math.floor(viewHeight - y + offsetPx)\n\n          return (\n            <text\n              transform={`rotate(${vtextRotation},${x},${y})`}\n              key={JSON.stringify(region)}\n              x={x}\n              y={yoff}\n              fill=\"black\"\n              textAnchor=\"end\"\n            >\n              {[\n                region.refName,\n                region.start !== 0\n                  ? Math.floor(region.start).toLocaleString('en-US')\n                  : '',\n              ]\n                .filter(f => !!f)\n                .join(':')}\n            </text>\n          )\n        })}\n      {vticks.map(tick => {\n        const y =\n          (bpToPx({\n            refName: tick.refName,\n            coord: tick.base,\n            self: vviewSnap,\n          })?.offsetPx || 0) - offsetPx\n        return (\n          <line\n            key={`line-${JSON.stringify(tick)}`}\n            y1={viewHeight - y}\n            y2={viewHeight - y}\n            x1={borderX}\n            x2={borderX - (tick.type === 'major' ? 6 : 4)}\n            strokeWidth={1}\n            stroke={tick.type === 'major' ? '#555' : '#999'}\n            data-bp={tick.base}\n          />\n        )\n      })}\n      {vticks\n        .filter(tick => tick.type === 'major')\n        .map(tick => {\n          const y =\n            (bpToPx({\n              refName: tick.refName,\n              coord: tick.base,\n              self: vviewSnap,\n            })?.offsetPx || 0) - offsetPx\n          return y > 10 ? (\n            <text\n              y={viewHeight - y - 3}\n              x={borderX - 7}\n              key={`text-${JSON.stringify(tick)}`}\n              textAnchor=\"end\"\n              fill=\"black\"\n              dominantBaseline=\"hanging\"\n              fontSize={11}\n            >\n              {getTickDisplayStr(tick.base + 1, bpPerPx)}\n            </text>\n          ) : null\n        })}\n      <text\n        y={(viewHeight - borderY) / 2}\n        x={12}\n        fill=\"black\"\n        transform={`rotate(-90,12,${(viewHeight - borderY) / 2})`}\n        textAnchor=\"middle\"\n      >\n        {vview.assemblyNames.join(',')}\n      </text>\n    </svg>\n  )\n})\n","import React, { useRef } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport { DotplotViewModel } from '../model'\nimport { locstr } from './util'\n\nconst useStyles = makeStyles()({\n  popover: {\n    background: '#fff',\n    maxWidth: 400,\n    wordBreak: 'break-all',\n    zIndex: 1000,\n    border: '1px solid black',\n    pointerEvents: 'none',\n    position: 'absolute',\n  },\n})\n\ntype Coord = [number, number] | undefined\nconst blank = { left: 0, top: 0, width: 0, height: 0 }\n\nexport const TooltipWhereMouseovered = observer(function ({\n  model,\n  mouserect,\n  xdistance,\n  ydistance,\n}: {\n  model: DotplotViewModel\n  mouserect: Coord\n  xdistance: number\n  ydistance: number\n}) {\n  const { classes } = useStyles()\n  const { hview, vview, viewHeight } = model\n  const ref = useRef<HTMLDivElement>(null)\n  const rect = ref.current?.getBoundingClientRect() || blank\n  const offset = 6\n  const w = rect.height + offset * 2\n  return (\n    <>\n      {mouserect ? (\n        <div\n          ref={ref}\n          className={classes.popover}\n          style={{\n            left: offset + mouserect[0] - (xdistance < 0 ? w : 0),\n            top: offset + mouserect[1] - (ydistance < 0 ? w : 0),\n          }}\n        >\n          {`x - ${locstr(mouserect[0], hview)}`}\n          <br />\n          {`y - ${locstr(viewHeight - mouserect[1], vview)}`}\n          <br />\n        </div>\n      ) : null}\n    </>\n  )\n})\n\nexport const TooltipWhereClicked = observer(function ({\n  model,\n  mousedown,\n  xdistance,\n  ydistance,\n}: {\n  model: DotplotViewModel\n  mousedown: Coord\n  xdistance: number\n  ydistance: number\n}) {\n  const { classes } = useStyles()\n  const { hview, vview, viewHeight } = model\n  const ref = useRef<HTMLDivElement>(null)\n  const rect = ref.current?.getBoundingClientRect() || blank\n  return (\n    <>\n      {mousedown && Math.abs(xdistance) > 3 && Math.abs(ydistance) > 3 ? (\n        <div\n          ref={ref}\n          className={classes.popover}\n          style={{\n            left: mousedown[0] - (xdistance < 0 ? 0 : rect.width),\n            top: mousedown[1] - (ydistance < 0 ? 0 : rect.height),\n          }}\n        >\n          {`x - ${locstr(mousedown[0], hview)}`}\n          <br />\n          {`y - ${locstr(viewHeight - mousedown[1], vview)}`}\n          <br />\n        </div>\n      ) : null}\n    </>\n  )\n})\n","import React, { useState, useEffect, useRef } from 'react'\nimport { LoadingEllipses, Menu, ResizeHandle } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\nimport { transaction } from 'mobx'\nimport { makeStyles } from 'tss-react/mui'\nimport normalizeWheel from 'normalize-wheel'\n\n// locals\nimport { DotplotViewModel } from '../model'\nimport ImportForm from './ImportForm'\nimport Header from './Header'\nimport Grid from './Grid'\nimport { HorizontalAxis, VerticalAxis } from './Axes'\nimport { TooltipWhereClicked, TooltipWhereMouseovered } from './DotplotTooltip'\n\nconst blank = { left: 0, top: 0, width: 0, height: 0 }\n\nconst useStyles = makeStyles()(theme => ({\n  spacer: {\n    gridColumn: '1/2',\n    gridRow: '2/2',\n  },\n  root: {\n    position: 'relative',\n    marginBottom: theme.spacing(1),\n    overflow: 'hidden',\n  },\n\n  container: {\n    display: 'grid',\n    padding: 5,\n    position: 'relative',\n  },\n  overlay: {\n    pointerEvents: 'none',\n    overflow: 'hidden',\n    display: 'flex',\n    width: '100%',\n    gridRow: '1/2',\n    gridColumn: '2/2',\n    zIndex: 100, // needs to be below controls\n    '& path': {\n      cursor: 'crosshair',\n      fill: 'none',\n    },\n  },\n\n  content: {\n    position: 'relative',\n    gridColumn: '2/2',\n    gridRow: '1/2',\n  },\n}))\n\ntype Coord = [number, number] | undefined\ntype Rect = { left: number; top: number }\n\n// produces offsetX/offsetY coordinates from a clientX and an element's\n// getBoundingClientRect\nfunction getOffset(coord: Coord, rect: Rect) {\n  return coord && ([coord[0] - rect.left, coord[1] - rect.top] as Coord)\n}\n\nconst RenderedComponent = observer(({ model }: { model: DotplotViewModel }) => {\n  const { classes } = useStyles()\n  return (\n    <div className={classes.overlay}>\n      {model.tracks.map(track => {\n        const [display] = track.displays\n        const { RenderingComponent } = display\n        return RenderingComponent ? (\n          <RenderingComponent\n            key={track.configuration.trackId}\n            model={display}\n          />\n        ) : null\n      })}\n    </div>\n  )\n})\n\nconst DotplotViewInternal = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { cursorMode } = model\n  const { classes } = useStyles()\n  const [mousecurrClient, setMouseCurrClient] = useState<Coord>()\n  const [mousedownClient, setMouseDownClient] = useState<Coord>()\n  const [mouseOvered, setMouseOvered] = useState(false)\n  const [mouseupClient, setMouseUpClient] = useState<Coord>()\n  const ref = useRef<HTMLDivElement>(null)\n  const root = useRef<HTMLDivElement>(null)\n  const distanceX = useRef(0)\n  const distanceY = useRef(0)\n  const scheduled = useRef(false)\n  const svg = ref.current?.getBoundingClientRect() || blank\n  const mousedown = getOffset(mousedownClient, svg)\n  const mousecurr = getOffset(mousecurrClient, svg)\n  const mouseup = getOffset(mouseupClient, svg)\n  const mouserect = mouseup || mousecurr\n  const xdistance = mousedown && mouserect ? mouserect[0] - mousedown[0] : 0\n  const ydistance = mousedown && mouserect ? mouserect[1] - mousedown[1] : 0\n  const { hview, vview } = model\n\n  // use non-React wheel handler to properly prevent body scrolling\n  useEffect(() => {\n    function onWheel(origEvent: WheelEvent) {\n      const event = normalizeWheel(origEvent)\n      origEvent.preventDefault()\n\n      distanceX.current += event.pixelX\n      distanceY.current -= event.pixelY\n      if (!scheduled.current) {\n        scheduled.current = true\n\n        window.requestAnimationFrame(() => {\n          transaction(() => {\n            hview.scroll(distanceX.current)\n            vview.scroll(distanceY.current)\n          })\n          scheduled.current = false\n          distanceX.current = 0\n          distanceY.current = 0\n        })\n      }\n    }\n    if (ref.current) {\n      const curr = ref.current\n      curr.addEventListener('wheel', onWheel)\n      return () => curr.removeEventListener('wheel', onWheel)\n    }\n    return () => {}\n  }, [hview, vview])\n\n  useEffect(() => {\n    function globalMouseMove(event: MouseEvent) {\n      setMouseCurrClient([event.clientX, event.clientY])\n\n      if (mousecurrClient && mousedownClient && cursorMode === 'move') {\n        hview.scroll(-event.clientX + mousecurrClient[0])\n        vview.scroll(event.clientY - mousecurrClient[1])\n      }\n    }\n\n    window.addEventListener('mousemove', globalMouseMove)\n    return () => window.removeEventListener('mousemove', globalMouseMove)\n  }, [mousecurrClient, mousedownClient, cursorMode, hview, vview])\n\n  // detect a mouseup after a mousedown was submitted, autoremoves mouseup\n  // once that single mouseup is set\n  useEffect(() => {\n    let cleanup = () => {}\n\n    function globalMouseUp(event: MouseEvent) {\n      if (\n        Math.abs(xdistance) > 3 &&\n        Math.abs(ydistance) > 3 &&\n        cursorMode === 'crosshair'\n      ) {\n        setMouseUpClient([event.clientX, event.clientY])\n      } else {\n        setMouseDownClient(undefined)\n      }\n    }\n\n    if (mousedown && !mouseup) {\n      window.addEventListener('mouseup', globalMouseUp, true)\n      cleanup = () => window.removeEventListener('mouseup', globalMouseUp, true)\n    }\n    return cleanup\n  }, [mousedown, mousecurr, mouseup, xdistance, ydistance, cursorMode])\n\n  return (\n    <div>\n      <Header\n        model={model}\n        selection={\n          cursorMode === 'move' || !(mousedown && mouserect)\n            ? undefined\n            : {\n                width: Math.abs(xdistance),\n                height: Math.abs(ydistance),\n              }\n        }\n      />\n      <div\n        ref={root}\n        className={classes.root}\n        onMouseLeave={() => setMouseOvered(false)}\n        onMouseEnter={() => setMouseOvered(true)}\n      >\n        <div\n          className={classes.container}\n          style={{\n            transform: `scaleX(${hview.scaleFactor}) scaleY(${vview.scaleFactor})`,\n          }}\n        >\n          <VerticalAxis model={model} />\n          <HorizontalAxis model={model} />\n          <div ref={ref} className={classes.content}>\n            {mouseOvered && cursorMode === 'crosshair' ? (\n              <TooltipWhereMouseovered\n                model={model}\n                mouserect={mouserect}\n                xdistance={xdistance}\n                ydistance={ydistance}\n              />\n            ) : null}\n            {cursorMode === 'crosshair' ? (\n              <TooltipWhereClicked\n                model={model}\n                mousedown={mousedown}\n                xdistance={xdistance}\n                ydistance={ydistance}\n              />\n            ) : null}\n            <div\n              style={{ cursor: cursorMode }}\n              onMouseDown={event => {\n                if (event.button === 0) {\n                  const { clientX, clientY } = event\n                  setMouseDownClient([clientX, clientY])\n                  setMouseCurrClient([clientX, clientY])\n                }\n              }}\n            >\n              <Grid model={model}>\n                {cursorMode === 'crosshair' && mousedown && mouserect ? (\n                  <rect\n                    fill=\"rgba(255,0,0,0.3)\"\n                    x={Math.min(mouserect[0], mousedown[0])}\n                    y={Math.min(mouserect[1], mousedown[1])}\n                    width={Math.abs(xdistance)}\n                    height={Math.abs(ydistance)}\n                  />\n                ) : null}\n              </Grid>\n            </div>\n            <div className={classes.spacer} />\n          </div>\n          <RenderedComponent model={model} />\n          <Menu\n            open={Boolean(mouseup)}\n            onMenuItemClick={(_, callback) => {\n              callback()\n              setMouseUpClient(undefined)\n              setMouseDownClient(undefined)\n            }}\n            onClose={() => {\n              setMouseUpClient(undefined)\n              setMouseDownClient(undefined)\n            }}\n            anchorReference=\"anchorPosition\"\n            anchorPosition={\n              mouseupClient\n                ? {\n                    top: mouseupClient[1] + 30,\n                    left: mouseupClient[0] + 30,\n                  }\n                : undefined\n            }\n            style={{ zIndex: 10000 }}\n            menuItems={[\n              {\n                label: 'Zoom in',\n                onClick: () => {\n                  if (mousedown && mouseup) {\n                    model.zoomIn(mousedown, mouseup)\n                  }\n                },\n              },\n              {\n                label: 'Open linear synteny view',\n                onClick: () => {\n                  if (mousedown && mouseup) {\n                    model.onDotplotView(mousedown, mouseup)\n                  }\n                },\n              },\n            ]}\n          />\n        </div>\n        <ResizeHandle\n          onDrag={n => model.setHeight(model.height + n)}\n          style={{\n            height: 4,\n            background: '#ccc',\n            boxSizing: 'border-box',\n            borderTop: '1px solid #fafafa',\n          }}\n        />\n      </div>\n    </div>\n  )\n})\nconst DotplotView = observer(({ model }: { model: DotplotViewModel }) => {\n  const { initialized, loading, error } = model\n\n  if ((!initialized && !loading) || error) {\n    return <ImportForm model={model} />\n  }\n\n  if (loading) {\n    return <LoadingEllipses variant=\"h5\" />\n  }\n\n  return <DotplotViewInternal model={model} />\n})\n\nexport default DotplotView\n"],"names":["getAdapter","radioOption","assembly1","assembly2","fileLocation","bed1Location","bed2Location","type","pafLocation","queryAssembly","targetAssembly","outLocation","deltaLocation","chainLocation","mcscanAnchorsLocation","assemblyNames","mcscanSimpleAnchorsLocation","Error","observer","sessionTrackData","setSessionTrackData","useState","setBed2Location","setBed1Location","setFileLocation","value","setValue","error","setError","fileName","uri","localPath","name","undefined","getName","path","endsWith","slice","length","stripGz","useEffect","fn","trackId","Date","now","adapter","e","console","Paper","style","padding","ErrorMessage","Typography","textAlign","RadioGroup","onChange","event","target","Grid","container","justifyContent","item","FormControlLabel","control","Radio","label","margin","href","display","FileSelector","description","location","setLocation","loc","model","setShowTrackId","session","getSession","tracks","sessionTracks","filteredTracks","filter","t","track","readConfObject","includes","f","resetTrack","paragraph","Select","map","MenuItem","getTrackName","useStyles","makeStyles","theme","importFormContainer","spacing","assemblySelector","width","TrackSelector","choice","setChoice","FormControl","FormLabel","id","row","ImportCustomTrack","ImportSyntenyTrackSelector","classes","setAssembly2","setAssembly1","showTrackId","displayError","Container","className","alignItems","AssemblySelector","selected","val","Button","onClick","isSessionWithAddTracks","transaction","addTrackConf","toggleTrack","showTrack","setViews","bpPerPx","offsetPx","setAssemblyNames","variant","color","CursorMove","props","SvgIcon","fill","d","CursorMouse","WarningDialog","lazy","iconButton","bp","marginLeft","spacer","flexGrow","headerBar","DotplotControls","menuAnchorEl","setMenuAnchorEl","IconButton","zoomOutButton","ZoomOut","Z","zoomInButton","title","ZoomIn","activateTrackSelector","currentTarget","MoreVert","Menu","anchorEl","open","onMenuItemClick","_event","callback","menuItems","squareView","squareViewProportional","showAllRegions","setDrawCigar","drawCigar","checked","setCursorMode","icon","cursorMode","onClose","Warnings","tracksWithWarnings","displays","warnings","shown","setShown","Alert","severity","handleClose","selection","hview","vview","join","getBpDisplayStr","currBp","height","children","stroke","viewWidth","viewHeight","hblocks","dynamicBlocks","contentBlocks","vblocks","htop","displayedRegionsTotalPx","vtop","hbottom","vbottom","rx","Math","max","ry","w","min","h","lastx","Infinity","lasty","background","x","y","region","render","floor","x1","y1","x2","y2","JSON","stringify","vtext","gridColumn","gridRow","pointerEvents","userSelect","htext","HorizontalAxis","borderX","borderY","htextRotation","hticks","dblocks","hide","getBlockLabelKeysToHide","hviewSnap","getSnapshot","staticBlocks","has","key","xoff","transform","dominantBaseline","textAnchor","refName","start","toLocaleString","tick","bpToPx","coord","base","self","strokeWidth","fontSize","getTickDisplayStr","VerticalAxis","vtextRotation","vticks","vviewSnap","yoff","popover","maxWidth","wordBreak","zIndex","border","position","blank","left","top","TooltipWhereMouseovered","mouserect","xdistance","ydistance","ref","useRef","current","getBoundingClientRect","offset","locstr","TooltipWhereClicked","mousedown","rect","abs","root","marginBottom","overflow","overlay","cursor","content","getOffset","RenderedComponent","RenderingComponent","configuration","DotplotViewInternal","mousecurrClient","setMouseCurrClient","mousedownClient","setMouseDownClient","mouseOvered","setMouseOvered","mouseupClient","setMouseUpClient","distanceX","distanceY","scheduled","svg","mousecurr","mouseup","onWheel","origEvent","normalizeWheel","preventDefault","pixelX","pixelY","window","requestAnimationFrame","scroll","curr","addEventListener","removeEventListener","globalMouseMove","clientX","clientY","cleanup","globalMouseUp","onMouseLeave","onMouseEnter","scaleFactor","onMouseDown","button","Boolean","_","anchorReference","anchorPosition","zoomIn","onDotplotView","ResizeHandle","onDrag","n","setHeight","boxSizing","borderTop","initialized","loading","ImportForm","LoadingEllipses"],"sourceRoot":""}