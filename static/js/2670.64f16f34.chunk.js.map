{"version":3,"file":"static/js/2670.64f16f34.chunk.js","mappings":"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","sources":["../../../plugins/dotplot-view/src/DotplotView/components/Axes.tsx","../../../plugins/dotplot-view/src/DotplotView/components/Grid.tsx","../../../plugins/dotplot-view/src/DotplotView/svgcomponents/SVGBackground.tsx","../../../plugins/dotplot-view/src/DotplotView/svgcomponents/SVGDotplotView.tsx"],"sourcesContent":["import React from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { getSnapshot } from 'mobx-state-tree'\nimport { getTickDisplayStr } from '@jbrowse/core/util'\nimport { bpToPx } from '@jbrowse/core/util/Base1DUtils'\nimport { useTheme } from '@mui/material'\n\n// locals\nimport { getBlockLabelKeysToHide } from './util'\nimport { DotplotViewModel } from '../model'\n\nconst useStyles = makeStyles()(() => ({\n  vtext: {\n    gridColumn: '1/2',\n    gridRow: '1/2',\n    pointerEvents: 'none',\n    userSelect: 'none',\n  },\n  htext: {\n    gridColumn: '2/2',\n    gridRow: '2/2',\n    pointerEvents: 'none',\n    userSelect: 'none',\n  },\n}))\n\nexport const HorizontalAxis = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { viewWidth, borderY } = model\n  const { classes } = useStyles()\n  return (\n    <svg width={viewWidth} height={borderY} className={classes.htext}>\n      <HorizontalAxisRaw model={model} />\n    </svg>\n  )\n})\n\nexport const HorizontalAxisRaw = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { viewWidth, borderX, borderY, hview, htextRotation, hticks } = model\n  const { offsetPx, width, dynamicBlocks, bpPerPx } = hview\n  const dblocks = dynamicBlocks.contentBlocks\n  const hide = getBlockLabelKeysToHide(dblocks, viewWidth, offsetPx)\n  const theme = useTheme()\n  const hviewSnap = {\n    ...getSnapshot(hview),\n    width,\n    staticBlocks: hview.staticBlocks,\n  }\n\n  return (\n    <>\n      {dblocks\n        .filter(region => !hide.has(region.key))\n        .map(region => {\n          const x = region.offsetPx\n          const y = 0\n          const xoff = Math.floor(x - hview.offsetPx)\n\n          return (\n            <text\n              transform={`rotate(${htextRotation},${xoff},${y})`}\n              key={JSON.stringify(region)}\n              x={xoff}\n              y={y + 1}\n              fill={theme.palette.text.primary}\n              fontSize={11}\n              dominantBaseline=\"hanging\"\n              textAnchor=\"end\"\n            >\n              {region.refName}\n            </text>\n          )\n        })}\n      {hticks.map(tick => {\n        const x =\n          (bpToPx({\n            refName: tick.refName,\n            coord: tick.base,\n            self: hviewSnap,\n          })?.offsetPx || 0) - offsetPx\n        return (\n          <line\n            key={`line-${JSON.stringify(tick)}`}\n            x1={x}\n            x2={x}\n            y1={0}\n            y2={tick.type === 'major' ? 6 : 4}\n            strokeWidth={1}\n            stroke={theme.palette.divider}\n          />\n        )\n      })}\n      {hticks\n        .filter(tick => tick.type === 'major')\n        .map(tick => {\n          const x =\n            (bpToPx({\n              refName: tick.refName,\n              coord: tick.base,\n              self: hviewSnap,\n            })?.offsetPx || 0) - offsetPx\n          const y = 0\n          return x > 10 ? (\n            <text\n              x={x - 7}\n              y={y}\n              transform={`rotate(${htextRotation},${x},${y})`}\n              key={`text-${JSON.stringify(tick)}`}\n              fill={theme.palette.text.primary}\n              fontSize={11}\n              dominantBaseline=\"middle\"\n              textAnchor=\"end\"\n            >\n              {getTickDisplayStr(tick.base + 1, bpPerPx)}\n            </text>\n          ) : null\n        })}\n      <text\n        y={borderY - 12}\n        x={(viewWidth - borderX) / 2}\n        fill={theme.palette.text.primary}\n        textAnchor=\"middle\"\n        fontSize={11}\n        dominantBaseline=\"hanging\"\n      >\n        {hview.assemblyNames.join(',')}\n      </text>\n    </>\n  )\n})\n\nexport const VerticalAxis = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { borderX, viewHeight } = model\n  const { classes } = useStyles()\n  return (\n    <svg className={classes.vtext} width={borderX} height={viewHeight}>\n      <VerticalAxisRaw model={model} />\n    </svg>\n  )\n})\n\nexport const VerticalAxisRaw = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { viewHeight, borderX, borderY, vview, vtextRotation, vticks } = model\n  const { offsetPx, width, dynamicBlocks, bpPerPx } = vview\n  const dblocks = dynamicBlocks.contentBlocks\n  const hide = getBlockLabelKeysToHide(dblocks, viewHeight, offsetPx)\n  const theme = useTheme()\n  const vviewSnap = {\n    ...getSnapshot(vview),\n    width,\n    staticBlocks: vview.staticBlocks,\n  }\n  return (\n    <>\n      {dblocks\n        .filter(region => !hide.has(region.key))\n        .map(region => {\n          const y = region.offsetPx\n          const x = borderX\n          const yoff = Math.floor(viewHeight - y + offsetPx)\n\n          return (\n            <text\n              transform={`rotate(${vtextRotation},${x},${y})`}\n              key={JSON.stringify(region)}\n              x={x}\n              y={yoff}\n              fill={theme.palette.text.primary}\n              fontSize={11}\n              textAnchor=\"end\"\n            >\n              {region.refName}\n            </text>\n          )\n        })}\n      {vticks.map(tick => {\n        const y =\n          (bpToPx({\n            refName: tick.refName,\n            coord: tick.base,\n            self: vviewSnap,\n          })?.offsetPx || 0) - offsetPx\n        return (\n          <line\n            key={`line-${JSON.stringify(tick)}`}\n            y1={viewHeight - y}\n            y2={viewHeight - y}\n            x1={borderX}\n            x2={borderX - (tick.type === 'major' ? 6 : 4)}\n            strokeWidth={1}\n            stroke={theme.palette.divider}\n          />\n        )\n      })}\n      {vticks\n        .filter(tick => tick.type === 'major')\n        .map(tick => {\n          const y =\n            (bpToPx({\n              refName: tick.refName,\n              coord: tick.base,\n              self: vviewSnap,\n            })?.offsetPx || 0) - offsetPx\n          return y > 10 ? (\n            <text\n              y={viewHeight - y - 3}\n              x={borderX - 7}\n              key={`text-${JSON.stringify(tick)}`}\n              textAnchor=\"end\"\n              fill={theme.palette.text.primary}\n              dominantBaseline=\"hanging\"\n              fontSize={11}\n            >\n              {getTickDisplayStr(tick.base + 1, bpPerPx)}\n            </text>\n          ) : null\n        })}\n      <text\n        y={(viewHeight - borderY) / 2}\n        x={12}\n        fill={theme.palette.text.primary}\n        transform={`rotate(-90,12,${(viewHeight - borderY) / 2})`}\n        textAnchor=\"middle\"\n        fontSize={11}\n      >\n        {vview.assemblyNames.join(',')}\n      </text>\n    </>\n  )\n})\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { useTheme } from '@mui/material'\n\n// locals\nimport { DotplotViewModel } from '../model'\n\nexport const GridRaw = observer(function ({\n  model,\n  children,\n}: {\n  model: DotplotViewModel\n  children?: React.ReactNode\n}) {\n  const { viewWidth, viewHeight, hview, vview } = model\n  const hblocks = hview.dynamicBlocks.contentBlocks\n  const vblocks = vview.dynamicBlocks.contentBlocks\n  if (!hblocks.length || !vblocks.length) {\n    return null\n  }\n  const htop = hview.displayedRegionsTotalPx - hview.offsetPx\n  const vtop = vview.displayedRegionsTotalPx - vview.offsetPx\n  const hbottom = hblocks[0].offsetPx - hview.offsetPx\n  const vbottom = vblocks[0].offsetPx - vview.offsetPx\n  const theme = useTheme()\n  const stroke = theme.palette.divider\n\n  // Uses math.max/min avoid making very large SVG rect offscreen element,\n  // which can sometimes fail to draw\n  const rx = Math.max(hbottom, 0)\n  const ry = Math.max(viewHeight - vtop, 0)\n  const w = Math.min(htop - hbottom, viewWidth)\n  const h = Math.min(viewHeight - vbottom - ry, viewHeight)\n\n  let lastx = Infinity\n  let lasty = Infinity\n  return (\n    <>\n      <rect\n        x={rx}\n        y={ry}\n        width={w}\n        height={h}\n        fill={theme.palette.background.default}\n      />\n      <g>\n        {hblocks.map(region => {\n          const x = region.offsetPx - hview.offsetPx\n          const render = Math.floor(x) !== Math.floor(lastx)\n          if (render) {\n            lastx = x\n          }\n          return render ? (\n            <line\n              key={JSON.stringify(region)}\n              x1={x}\n              y1={0}\n              x2={x}\n              y2={viewHeight}\n              stroke={stroke}\n            />\n          ) : null\n        })}\n        {vblocks.map(region => {\n          const y = viewHeight - (region.offsetPx - vview.offsetPx)\n          const render = Math.floor(y) !== Math.floor(lasty)\n          if (render) {\n            lasty = y\n          }\n          return render ? (\n            <line\n              key={JSON.stringify(region)}\n              x1={0}\n              y1={y}\n              x2={viewWidth}\n              y2={y}\n              stroke={stroke}\n            />\n          ) : null\n        })}\n        <line x1={htop} y1={0} x2={htop} y2={viewHeight} stroke={stroke} />\n        <line\n          x1={0}\n          y1={viewHeight - vtop}\n          x2={viewWidth}\n          y2={viewHeight - vtop}\n          stroke={stroke}\n        />\n      </g>\n      {children}\n    </>\n  )\n})\n\nexport default function Grid({\n  model,\n  children,\n}: {\n  model: DotplotViewModel\n  children?: React.ReactNode\n}) {\n  const { viewWidth, viewHeight } = model\n  return (\n    <svg\n      width={viewWidth}\n      height={viewHeight}\n      style={{ background: 'rgba(0,0,0,0.12)' }}\n    >\n      <GridRaw model={model}>{children}</GridRaw>\n    </svg>\n  )\n}\n","import React from 'react'\nimport Color from 'color'\nimport { useTheme } from '@mui/material'\n\nexport default function SVGBackground({\n  width,\n  height,\n}: {\n  width: number\n  height: number\n}) {\n  const theme = useTheme()\n  return (\n    <rect\n      x={0}\n      y={0}\n      width={width}\n      height={height}\n      fill={Color(theme.palette.background.default).hex()}\n    />\n  )\n}\n","import React from 'react'\nimport { renderToStaticMarkup } from 'react-dom/server'\nimport { when } from 'mobx'\nimport { getSession } from '@jbrowse/core/util'\nimport { ThemeProvider } from '@mui/material'\nimport { createJBrowseTheme } from '@jbrowse/core/ui'\n\n// locals\nimport { DotplotViewModel, ExportSvgOptions } from '../model'\nimport { GridRaw } from '../components/Grid'\nimport { HorizontalAxisRaw, VerticalAxisRaw } from '../components/Axes'\nimport SVGBackground from './SVGBackground'\n\n// render LGV to SVG\nexport async function renderToSvg(\n  model: DotplotViewModel,\n  opts: ExportSvgOptions,\n) {\n  await when(() => model.initialized)\n  const { themeName = 'default', Wrapper = ({ children }) => <>{children}</> } =\n    opts\n  const session = getSession(model)\n  const theme = session.allThemes?.()[themeName]\n  const { width, borderX, viewWidth, viewHeight, tracks, height } = model\n  const shift = 50\n  const displayResults = await Promise.all(\n    tracks.map(async track => {\n      const display = track.displays[0]\n      await when(() => (display.ready !== undefined ? display.ready : true))\n      return { track, result: await display.renderSvg({ ...opts, theme }) }\n    }),\n  )\n  const w = width + shift * 2\n\n  // the xlink namespace is used for rendering <image> tag\n  return renderToStaticMarkup(\n    <ThemeProvider theme={createJBrowseTheme(theme)}>\n      <Wrapper>\n        <svg\n          width={width}\n          height={height}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n          viewBox={[0, 0, w, height].toString()}\n        >\n          <SVGBackground width={w} height={height} />\n          <VerticalAxisRaw model={model} />\n          <g transform={`translate(${borderX} 0)`}>\n            <GridRaw model={model} />\n            <defs>\n              <clipPath id=\"clip-ruler\">\n                <rect x={0} y={0} width={viewWidth} height={viewHeight} />\n              </clipPath>\n            </defs>\n            <g clipPath=\"url(#clip-ruler)\">\n              {displayResults.map(({ result }, i) => (\n                <g key={i}>{result}</g>\n              ))}\n            </g>\n          </g>\n          <g transform={`translate(${borderX} ${viewHeight})`}>\n            <HorizontalAxisRaw model={model} />\n          </g>\n        </svg>\n      </Wrapper>\n    </ThemeProvider>,\n  )\n}\n"],"names":["useStyles","makeStyles","vtext","gridColumn","gridRow","pointerEvents","userSelect","htext","HorizontalAxis","observer","_ref","model","viewWidth","borderY","classes","_jsx","width","height","className","children","HorizontalAxisRaw","_ref2","borderX","hview","htextRotation","hticks","offsetPx","dynamicBlocks","bpPerPx","dblocks","contentBlocks","hide","getBlockLabelKeysToHide","theme","useTheme","hviewSnap","_objectSpread","getSnapshot","staticBlocks","_jsxs","_Fragment","filter","region","has","key","map","x","xoff","Math","floor","transform","concat","y","fill","palette","text","primary","fontSize","dominantBaseline","textAnchor","refName","JSON","stringify","tick","_bpToPx","bpToPx","coord","base","self","x1","x2","y1","y2","type","strokeWidth","stroke","divider","_bpToPx2","getTickDisplayStr","assemblyNames","join","VerticalAxis","_ref3","viewHeight","VerticalAxisRaw","_ref4","vview","vtextRotation","vticks","vviewSnap","yoff","_bpToPx3","_bpToPx4","GridRaw","hblocks","vblocks","length","htop","displayedRegionsTotalPx","vtop","hbottom","vbottom","rx","max","ry","w","min","h","lastx","Infinity","lasty","background","default","render","Grid","style","SVGBackground","Color","hex","renderToSvg","_x","_x2","_renderToSvg","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","opts","_session$allThemes","_opts$themeName","themeName","_opts$Wrapper","Wrapper","session","tracks","shift","displayResults","wrap","_context2","prev","next","when","initialized","getSession","allThemes","call","Promise","all","_callee","track","display","_context","displays","undefined","ready","t0","renderSvg","t1","sent","abrupt","result","stop","_x3","renderToStaticMarkup","ThemeProvider","createJBrowseTheme","xmlns","xmlnsXlink","viewBox","toString","id","clipPath","i"],"sourceRoot":""}