{"version":3,"file":"static/js/6151.c76bce01.chunk.js","mappings":"uSAGMA,GAAYC,EAAAA,EAAAA,KAAAA,EAAa,SAAAC,GAAK,MAAK,CACvCC,MAAO,CACLC,OAAQ,iBACRC,OAAQH,EAAMI,QAAQ,GACtB,OAAQ,CACNC,QAASL,EAAMI,QAAQ,KAG5B,IAEc,SAASE,EAAiBC,GAIrC,IAHFC,EAAaD,EAAbC,cAIQC,EAAYX,IAAZW,QACR,OACEC,EAAAA,EAAAA,KAAA,SAAOC,UAAWF,EAAQR,MAAMW,UAC9BF,EAAAA,EAAAA,KAAA,SAAAE,SACGJ,EAAcK,KAAI,SAAAC,GAAA,IAAAC,GAAAC,EAAAA,EAAAA,GAAAF,EAAA,GAAEG,EAAGF,EAAA,GAAEG,EAAKH,EAAA,UAC7BI,EAAAA,EAAAA,MAAA,MAAAP,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAKK,KACLP,EAAAA,EAAAA,KAAA,MAAAE,SAAKM,KACLR,EAAAA,EAAAA,KAAA,MACEU,MAAO,CACLC,MAAO,MACPC,WAAYJ,OANTD,EASJ,OAKf,CCxBA,IA0FA,GA1FmCM,EAAAA,EAAAA,WAAS,SAAAhB,GAUxC,IATFiB,EAAKjB,EAALiB,MACAC,EAAWlB,EAAXkB,YASQC,EAAgCF,EAAhCE,QAASC,EAAuBH,EAAvBG,mBAEXnB,GAAaoB,EAAAA,EAAAA,GAAOD,EAAmBE,WAE7C,OACEnB,EAAAA,EAAAA,KAACoB,EAAAA,OAAM,CAACC,MAAI,EAACC,QAASP,EAAaQ,MAAM,yBAAwBrB,UAC/DO,EAAAA,EAAAA,MAACe,EAAAA,EAAa,CAAAtB,SAAA,EACZF,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CAAAvB,SAAC,+QAMZF,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CAAAvB,SAAC,oIAIZO,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEjB,OAAQ,IAAKS,SAAA,CACN,mBAAX,OAAPc,QAAO,IAAPA,OAAO,EAAPA,EAASU,OACR1B,EAAAA,EAAAA,KAAA,OAAAE,SACGJ,EAAc6B,QACblB,EAAAA,EAAAA,MAAAmB,EAAAA,SAAA,CAAA1B,SAAA,CAAE,8CAEAF,EAAAA,EAAAA,KAACJ,EAAiB,CAChBE,eAAaoB,EAAAA,EAAAA,GAAMD,EAAmBE,iBAI1CV,EAAAA,EAAAA,MAAAmB,EAAAA,SAAA,CAAA1B,SAAA,EACEF,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CAAAvB,SAAC,uFAIZF,EAAAA,EAAAA,KAAC6B,EAAAA,EAAgB,CAACC,KAAM,UAI5B,KACe,iBAAX,OAAPd,QAAO,IAAPA,OAAO,EAAPA,EAASU,OACR1B,EAAAA,EAAAA,KAACJ,EAAiB,CAChBE,cAAe,CACb,CAAC,aAAc,OACf,CAAC,eAAgB,WAGnB,SAENW,EAAAA,EAAAA,MAACsB,EAAAA,EAAa,CAAA7B,SAAA,EACZF,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CACLC,QAAQ,YACRC,QAAS,WACPpB,EAAMqB,eAAe,CAAET,KAAM,kBAC7BX,GACF,EAAEb,SACH,mBAGDF,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CACLC,QAAQ,YACRC,QAAS,WACPpB,EAAMqB,eAAe,CAAET,KAAM,gBAC7BX,GACF,EAAEb,SACH,iBAGDF,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CACLC,QAAQ,YACRG,MAAM,YACNF,QAAS,kBAAMnB,GAAa,EAACb,SAC9B,kBAOX,G","sources":["../../../plugins/alignments/src/LinearPileupDisplay/components/ModificationsTable.tsx","../../../plugins/alignments/src/LinearPileupDisplay/components/ColorByModifications.tsx"],"sourcesContent":["import React from 'react'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()(theme => ({\n  table: {\n    border: '1px solid #888',\n    margin: theme.spacing(4),\n    '& td': {\n      padding: theme.spacing(1),\n    },\n  },\n}))\n\nexport default function ModificationTable({\n  modifications,\n}: {\n  modifications: [string, string | undefined][]\n}) {\n  const { classes } = useStyles()\n  return (\n    <table className={classes.table}>\n      <tbody>\n        {modifications.map(([key, value]) => (\n          <tr key={key}>\n            <td>{key}</td>\n            <td>{value}</td>\n            <td\n              style={{\n                width: '1em',\n                background: value,\n              }}\n            />\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  )\n}\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { ObservableMap } from 'mobx'\nimport {\n  Button,\n  CircularProgress,\n  DialogActions,\n  DialogContent,\n  Typography,\n} from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\nimport ModificationTable from './ModificationsTable'\n\nconst ColorByModificationsDialog = observer(function ({\n  model,\n  handleClose,\n}: {\n  model: {\n    setColorScheme: (arg: { type: string }) => void\n    modificationTagMap: ObservableMap<string, string>\n    colorBy?: { type: string }\n  }\n  handleClose: () => void\n}) {\n  const { colorBy, modificationTagMap } = model\n\n  const modifications = [...modificationTagMap.entries()]\n\n  return (\n    <Dialog open onClose={handleClose} title=\"Color by modifications\">\n      <DialogContent>\n        <Typography>\n          You can choose to color the modifications in the BAM/CRAM MM/ML\n          specification using this dialog. Choosing modifications colors the\n          modified positions and can color multiple modification types. Choosing\n          the methylation setting colors methylated and unmethylated CpG.\n        </Typography>\n        <Typography>\n          Note: you can revisit this dialog to see the current mapping of colors\n          to modification type for the modification coloring mode\n        </Typography>\n        <div style={{ margin: 20 }}>\n          {colorBy?.type === 'modifications' ? (\n            <div>\n              {modifications.length ? (\n                <>\n                  Current modification-type-to-color mapping\n                  <ModificationTable\n                    modifications={[...modificationTagMap.entries()]}\n                  />\n                </>\n              ) : (\n                <>\n                  <Typography>\n                    Note: color by modifications is already enabled. Loading\n                    current modifications...\n                  </Typography>\n                  <CircularProgress size={15} />\n                </>\n              )}\n            </div>\n          ) : null}\n          {colorBy?.type === 'methylation' ? (\n            <ModificationTable\n              modifications={[\n                ['methylated', 'red'],\n                ['unmethylated', 'blue'],\n              ]}\n            />\n          ) : null}\n        </div>\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              model.setColorScheme({ type: 'modifications' })\n              handleClose()\n            }}\n          >\n            Modifications\n          </Button>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              model.setColorScheme({ type: 'methylation' })\n              handleClose()\n            }}\n          >\n            Methylation\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => handleClose()}\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </Dialog>\n  )\n})\n\nexport default ColorByModificationsDialog\n"],"names":["useStyles","makeStyles","theme","table","border","margin","spacing","padding","ModificationTable","_ref","modifications","classes","_jsx","className","children","map","_ref2","_ref3","_slicedToArray","key","value","_jsxs","style","width","background","observer","model","handleClose","colorBy","modificationTagMap","_toConsumableArray","entries","Dialog","open","onClose","title","DialogContent","Typography","type","length","_Fragment","CircularProgress","size","DialogActions","Button","variant","onClick","setColorScheme","color"],"sourceRoot":""}