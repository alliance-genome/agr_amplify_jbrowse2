{"version":3,"file":"static/js/354.ee921fb4.chunk.js","mappings":"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","sources":["../../../plugins/alignments/src/LinearPileupDisplay/components/FilterByTag.tsx","../../../node_modules/@mui/material/esm/Link/getTextDecoration.js","../../../node_modules/@mui/material/esm/Link/Link.js","../../../node_modules/@mui/material/esm/Link/linkClasses.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  Link,\n  Paper,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nimport CloseIcon from '@mui/icons-material/Close'\n\nconst useStyles = makeStyles()(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  field: {\n    margin: theme.spacing(2),\n  },\n}))\n\nconst flagNames = [\n  'read paired',\n  'read mapped in proper pair',\n  'read unmapped',\n  'mate unmapped',\n  'read reverse strand',\n  'mate reverse strand',\n  'first in pair',\n  'second in pair',\n  'not primary alignment',\n  'read fails platform/vendor quality checks',\n  'read is PCR or optical duplicate',\n  'supplementary alignment',\n]\n\nfunction Bitmask(props: { flag?: number; setFlag: Function }) {\n  const { flag = 0, setFlag } = props\n  return (\n    <>\n      <TextField\n        type=\"number\"\n        value={flag}\n        onChange={event => setFlag(+event.target.value)}\n      />\n      {flagNames.map((name, index) => {\n        const val = flag & (1 << index)\n        const key = `${name}_${val}`\n        return (\n          <div key={key}>\n            <input\n              type=\"checkbox\"\n              checked={Boolean(val)}\n              onChange={event => {\n                if (event.target.checked) {\n                  setFlag(flag | (1 << index))\n                } else {\n                  setFlag(flag & ~(1 << index))\n                }\n              }}\n            />\n            <label htmlFor={key}>{name}</label>\n          </div>\n        )\n      })}\n    </>\n  )\n}\n\nfunction FilterByTagDlg(props: {\n  model: {\n    filterBy?: {\n      flagExclude: number\n      flagInclude: number\n      readName?: string\n      tagFilter?: { tag: string; value: string }\n    }\n    setFilterBy: Function\n  }\n  handleClose: () => void\n}) {\n  const { model, handleClose } = props\n  const { classes } = useStyles()\n  const { filterBy } = model\n  const [flagInclude, setFlagInclude] = useState(filterBy?.flagInclude)\n  const [flagExclude, setFlagExclude] = useState(filterBy?.flagExclude)\n  const [tag, setTag] = useState(filterBy?.tagFilter?.tag || '')\n  const [tagValue, setTagValue] = useState(filterBy?.tagFilter?.value || '')\n  const [readName, setReadName] = useState(filterBy?.readName || '')\n  const validTag = tag.match(/^[A-Za-z][A-Za-z0-9]$/)\n\n  const site = 'https://broadinstitute.github.io/picard/explain-flags.html'\n\n  return (\n    <Dialog open onClose={handleClose}>\n      <DialogTitle>\n        Filter options\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <Typography>\n          Set filter bitmask options. Refer to <Link href={site}>{site}</Link>{' '}\n          for details\n        </Typography>\n        <Paper className={classes.paper} variant=\"outlined\">\n          <div style={{ display: 'flex' }}>\n            <div>\n              <Typography>Read must have ALL these flags</Typography>\n              <Bitmask flag={flagInclude} setFlag={setFlagInclude} />\n            </div>\n            <div>\n              <Typography>Read must have NONE of these flags</Typography>\n              <Bitmask flag={flagExclude} setFlag={setFlagExclude} />\n            </div>\n          </div>\n        </Paper>\n        <Paper className={classes.paper} variant=\"outlined\">\n          <Typography>\n            Filter by tag name and value. Use * in the value field to get all\n            reads containing any value for that tag. Example: filter tag name SA\n            with value * to get all split/supplementary reads. Other examples\n            include HP for haplotype, or RG for read group\n          </Typography>\n          <TextField\n            className={classes.field}\n            value={tag}\n            onChange={event => {\n              setTag(event.target.value)\n            }}\n            placeholder=\"Enter tag name\"\n            inputProps={{\n              maxLength: 2,\n              'data-testid': 'color-tag-name-input',\n            }}\n            error={tag.length === 2 && !validTag}\n            helperText={tag.length === 2 && !validTag ? 'Not a valid tag' : ''}\n            data-testid=\"color-tag-name\"\n          />\n          <TextField\n            className={classes.field}\n            value={tagValue}\n            onChange={event => {\n              setTagValue(event.target.value)\n            }}\n            placeholder=\"Enter tag value\"\n            inputProps={{\n              'data-testid': 'color-tag-name-input',\n            }}\n            data-testid=\"color-tag-value\"\n          />\n        </Paper>\n        <Paper className={classes.paper} variant=\"outlined\">\n          <Typography>Filter by read name</Typography>\n          <TextField\n            className={classes.field}\n            value={readName}\n            onChange={event => {\n              setReadName(event.target.value)\n            }}\n            placeholder=\"Enter read name\"\n            inputProps={{\n              'data-testid': 'color-tag-readname-input',\n            }}\n            data-testid=\"color-tag-readname\"\n          />\n        </Paper>\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            autoFocus\n            type=\"submit\"\n            onClick={() => {\n              model.setFilterBy({\n                flagInclude,\n                flagExclude,\n                readName,\n                tagFilter:\n                  tag !== ''\n                    ? {\n                        tag,\n                        value: tagValue,\n                      }\n                    : undefined,\n              })\n              handleClose()\n            }}\n          >\n            Submit\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => handleClose()}\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default observer(FilterByTagDlg)\n","import { alpha, getPath } from '@mui/system';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n\n  return alpha(color, 0.4);\n};\n\nexport default getTextDecoration;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\n\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    component = 'a',\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = 'always',\n    variant = 'inherit',\n    sx\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  const handleFocus = event => {\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;"],"names":["useStyles","makeStyles","theme","paper","padding","spacing","margin","closeButton","position","right","top","color","palette","grey","field","flagNames","Bitmask","props","flag","setFlag","type","value","onChange","event","target","map","name","index","val","key","checked","Boolean","htmlFor","observer","model","handleClose","classes","filterBy","useState","flagInclude","setFlagInclude","flagExclude","setFlagExclude","tagFilter","tag","setTag","tagValue","setTagValue","readName","setReadName","validTag","match","site","open","onClose","className","onClick","href","variant","style","display","placeholder","inputProps","maxLength","error","length","helperText","autoFocus","setFilterBy","undefined","colorTransformations","primary","textPrimary","secondary","textSecondary","ownerState","transformedColor","transformDeprecatedColors","getPath","channelColor","alpha","_excluded","LinkRoot","styled","Typography","slot","overridesResolver","styles","root","capitalize","underline","component","button","_extends","textDecoration","textDecorationColor","getTextDecoration","WebkitTapHighlightColor","backgroundColor","outline","border","borderRadius","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","React","inProps","ref","useThemeProps","onBlur","onFocus","TypographyClasses","sx","other","_objectWithoutPropertiesLoose","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","focusVisible","setFocusVisible","handlerRef","useForkRef","slots","composeClasses","getLinkUtilityClass","useUtilityClasses","_jsx","clsx","current","Object","keys","includes","Array","isArray","generateUtilityClass","generateUtilityClasses"],"sourceRoot":""}