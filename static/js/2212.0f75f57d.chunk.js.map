{"version":3,"file":"static/js/2212.0f75f57d.chunk.js","mappings":"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","sources":["../../../plugins/data-management/src/AddTrackWidget/components/TextIndexingConfig.tsx","../../../plugins/data-management/src/AddTrackWidget/components/TrackTypeSelector.tsx","../../../plugins/data-management/src/AddTrackWidget/components/TrackAdapterSelector.tsx","../../../plugins/data-management/src/AddTrackWidget/components/ConfirmTrack.tsx","../../../plugins/data-management/src/AddTrackWidget/components/TrackSourceSelect.tsx","../../../plugins/data-management/src/AddTrackWidget/components/DefaultAddTrackWorkflow.tsx","../../../plugins/data-management/src/AddTrackWidget/components/PasteConfigWorkflow.tsx","../../../plugins/data-management/src/AddTrackWidget/components/AddTrackWidget.tsx","../../../node_modules/@mui/icons-material/Delete.js","../../../node_modules/@mui/material/Link/getTextDecoration.js","../../../node_modules/@mui/material/Link/Link.js","../../../node_modules/@mui/material/Link/linkClasses.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  Card,\n  CardContent,\n  IconButton,\n  InputLabel,\n  InputAdornment,\n  List,\n  ListItem,\n  Paper,\n  TextField,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\n\n// icons\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport AddIcon from '@mui/icons-material/Add'\n\n// locals\nimport { AddTrackModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: theme.spacing(1),\n  },\n\n  card: {\n    marginTop: theme.spacing(1),\n  },\n}))\n\nconst TextIndexingConfig = observer(function ({\n  model,\n}: {\n  model: AddTrackModel\n}) {\n  const { classes } = useStyles()\n  const [value1, setValue1] = useState('')\n  const [value2, setValue2] = useState('')\n  const [attributes, setAttributes] = useState(['Name', 'ID'])\n  const [exclude, setExclude] = useState(['CDS', 'exon'])\n  const sections = [\n    {\n      label: 'Indexing attributes',\n      values: attributes,\n    },\n    {\n      label: 'Feature types to exclude',\n      values: exclude,\n    },\n  ]\n  useEffect(() => {\n    model.setTextIndexingConf({ attributes, exclude })\n  }, [model, attributes, exclude])\n\n  return (\n    <Paper className={classes.paper}>\n      <InputLabel>Indexing configuration</InputLabel>\n      {sections.map((section, index) => (\n        <Card raised key={section.label} className={classes.card}>\n          <CardContent>\n            <InputLabel>{section.label}</InputLabel>\n            <List disablePadding>\n              {section.values.map((val: string, idx: number) => (\n                <ListItem key={idx} disableGutters>\n                  <TextField\n                    value={val}\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            onClick={() => {\n                              const newAttr = section.values.filter(\n                                (_, i) => i !== idx,\n                              )\n                              index === 0\n                                ? setAttributes(newAttr)\n                                : setExclude(newAttr)\n                            }}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                </ListItem>\n              ))}\n              <ListItem disableGutters>\n                <TextField\n                  value={index === 0 ? value1 : value2}\n                  placeholder=\"add new\"\n                  onChange={event => {\n                    index === 0\n                      ? setValue1(event.target.value)\n                      : setValue2(event.target.value)\n                  }}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          onClick={() => {\n                            if (index === 0) {\n                              setAttributes([...attributes, value1])\n                              setValue1('')\n                            } else {\n                              setExclude([...exclude, value2])\n                              setValue2('')\n                            }\n                          }}\n                          disabled={index === 0 ? value1 === '' : value2 === ''}\n                          data-testid={`stringArrayAdd-Feat`}\n                        >\n                          <AddIcon />\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </ListItem>\n            </List>\n          </CardContent>\n        </Card>\n      ))}\n    </Paper>\n  )\n})\n\nexport default TextIndexingConfig\n","import React from 'react'\nimport { MenuItem, TextField } from '@mui/material'\nimport { getEnv } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport { AddTrackModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  spacing: {\n    marginBottom: theme.spacing(3),\n  },\n}))\n\nconst TrackTypeSelector = observer(({ model }: { model: AddTrackModel }) => {\n  const { classes } = useStyles()\n  const { pluginManager } = getEnv(model)\n  const { trackType } = model\n  const trackTypes = pluginManager.getTrackElements()\n\n  return (\n    <TextField\n      className={classes.spacing}\n      value={trackType}\n      variant=\"outlined\"\n      label=\"Track type\"\n      helperText=\"Select track type\"\n      select\n      fullWidth\n      onChange={event => model.setTrackType(event.target.value)}\n      SelectProps={{\n        // @ts-expect-error\n        SelectDisplayProps: { 'data-testid': 'trackTypeSelect' },\n      }}\n    >\n      {trackTypes.map(({ name, displayName }) => (\n        <MenuItem key={name} value={name}>\n          {displayName}\n        </MenuItem>\n      ))}\n    </TextField>\n  )\n})\n\nexport default TrackTypeSelector\n","import React from 'react'\nimport { ListSubheader, MenuItem, TextField } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { getEnv } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\nimport AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\n// locals\nimport { AddTrackModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  spacing: {\n    marginBottom: theme.spacing(3),\n  },\n}))\n\n// collate adapters into a map with\n// key: category\n// value: array of adapters with that category\nfunction categorizeAdapters(adaptersList: AdapterType[]) {\n  const map = {} as Record<string, AdapterType[]>\n  adaptersList.forEach(adapter => {\n    const key = adapter.adapterMetadata?.category || 'Default'\n    if (!map[key]) {\n      map[key] = []\n    }\n    map[key].push(adapter)\n  })\n  return map\n}\n\nconst TrackAdapterSelector = observer(({ model }: { model: AddTrackModel }) => {\n  const { classes } = useStyles()\n  const { trackAdapter } = model\n  const { pluginManager } = getEnv(model)\n  return (\n    <TextField\n      className={classes.spacing}\n      value={trackAdapter?.type !== 'UNKNOWN' ? trackAdapter?.type : ''}\n      label=\"Adapter type\"\n      variant=\"outlined\"\n      helperText=\"Select an adapter type\"\n      select\n      fullWidth\n      onChange={event => model.setAdapterHint(event.target.value)}\n      SelectProps={{\n        // @ts-expect-error\n        SelectDisplayProps: { 'data-testid': 'adapterTypeSelect' },\n      }}\n    >\n      {Object.entries(\n        categorizeAdapters(\n          pluginManager\n            .getAdapterElements()\n            .filter(e => !e.adapterMetadata?.hiddenFromGUI),\n        ),\n      ).map(([key, val]) => {\n        // returning array avoids needing to use a react fragment which\n        // Select/TextField sub-elements disagree with\n        return [\n          <ListSubheader key={key}>{key}</ListSubheader>,\n          val.map(elt => (\n            <MenuItem key={elt.name} value={elt.name}>\n              {elt.displayName}\n            </MenuItem>\n          )),\n        ]\n      })}\n    </TextField>\n  )\n})\n\nexport default TrackAdapterSelector\n","import React, { useEffect, useState } from 'react'\nimport {\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  Link,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport {\n  isSupportedIndexingAdapter,\n  getSession,\n  isElectron,\n} from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\nimport { UNKNOWN } from '@jbrowse/core/util/tracks'\nimport { AssemblySelector } from '@jbrowse/core/ui'\n\n// locals\nimport { AddTrackModel } from '../model'\nimport TextIndexingConfig from './TextIndexingConfig'\nimport TrackTypeSelector from './TrackTypeSelector'\nimport TrackAdapterSelector from './TrackAdapterSelector'\n\nconst useStyles = makeStyles()(theme => ({\n  spacing: {\n    marginBottom: theme.spacing(3),\n  },\n}))\n\nfunction StatusMessage({\n  trackAdapter,\n  trackType,\n}: {\n  trackAdapter: { type: string; subadapter?: { type: string } }\n  trackType: string\n}) {\n  const { classes } = useStyles()\n  const { type, subadapter } = trackAdapter\n  return type === 'SNPCoverageAdapter' ? (\n    <Typography className={classes.spacing}>\n      Selected <code>{trackType}</code>. Using adapter <code>{type}</code> with\n      subadapter <code>{subadapter?.type}</code>. Please enter a track name and,\n      if necessary, update the track type.\n    </Typography>\n  ) : (\n    <Typography className={classes.spacing}>\n      Using adapter <code>{type}</code> and guessing track type{' '}\n      <code>{trackType}</code>. Please enter a track name and, if necessary,\n      update the track type.\n    </Typography>\n  )\n}\n\nfunction UnknownAdapterPrompt({ model }: { model: AddTrackModel }) {\n  const { classes } = useStyles()\n  return (\n    <>\n      <Typography className={classes.spacing}>\n        JBrowse was not able to guess the adapter type for this data, but it may\n        be in the list below. If not, you can{' '}\n        <Link\n          href=\"https://github.com/GMOD/jbrowse-components/releases\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          check for new releases\n        </Link>{' '}\n        of JBrowse to see if they support this data type or{' '}\n        <Link\n          href=\"https://github.com/GMOD/jbrowse-components/issues/new\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          file an issue\n        </Link>{' '}\n        and add a feature request for this data type.\n      </Typography>\n      <TrackAdapterSelector model={model} />\n    </>\n  )\n}\n\nconst ConfirmTrack = observer(function ConfirmTrack({\n  model,\n}: {\n  model: AddTrackModel\n}) {\n  const { classes } = useStyles()\n  const [check, setCheck] = useState(true)\n  const session = getSession(model)\n  const { trackName, trackAdapter, trackType, warningMessage, adapterHint } =\n    model\n\n  useEffect(() => {\n    if (adapterHint === '' && trackAdapter) {\n      model.setAdapterHint(trackAdapter.type)\n    }\n  }, [adapterHint, trackAdapter, trackAdapter?.type, model])\n\n  if (model.unsupported) {\n    return (\n      <Typography className={classes.spacing}>\n        This version of JBrowse cannot display data of this type. It is\n        possible, however, that there is a newer version that can display them.\n        You can{' '}\n        <Link\n          href=\"https://github.com/GMOD/jbrowse-components/releases\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          check for new releases\n        </Link>{' '}\n        of JBrowse or{' '}\n        <Link\n          href=\"https://github.com/GMOD/jbrowse-components/issues/new\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          file an issue\n        </Link>{' '}\n        and add a feature request for this data type.\n      </Typography>\n    )\n  }\n  if (trackAdapter?.type === UNKNOWN) {\n    return <UnknownAdapterPrompt model={model} />\n  }\n\n  if (!trackAdapter?.type) {\n    return <Typography>Could not recognize this data type.</Typography>\n  }\n\n  const supportedForIndexing = isSupportedIndexingAdapter(trackAdapter?.type)\n  return (\n    <div>\n      {trackAdapter ? (\n        <StatusMessage trackAdapter={trackAdapter} trackType={trackType} />\n      ) : null}\n      {warningMessage ? (\n        <Typography style={{ color: 'orange' }}>{warningMessage}</Typography>\n      ) : null}\n      <TextField\n        className={classes.spacing}\n        label=\"trackName\"\n        helperText=\"A name for this track\"\n        fullWidth\n        value={trackName}\n        onChange={event => model.setTrackName(event.target.value)}\n        inputProps={{ 'data-testid': 'trackNameInput' }}\n      />\n      <TrackAdapterSelector model={model} />\n      <TrackTypeSelector model={model} />\n      <AssemblySelector\n        session={session}\n        helperText=\"Select assembly to add track to\"\n        selected={model.assembly}\n        onChange={asm => model.setAssembly(asm)}\n        TextFieldProps={{\n          fullWidth: true,\n          SelectProps: {\n            // @ts-expect-error\n            SelectDisplayProps: { 'data-testid': 'assemblyNameSelect' },\n          },\n        }}\n      />\n      {isElectron && supportedForIndexing && (\n        <FormControl>\n          <FormControlLabel\n            label={'Index track for text searching?'}\n            control={\n              <Checkbox\n                checked={check}\n                onChange={e => {\n                  setCheck(e.target.checked)\n                  model.setTextIndexTrack(e.target.checked)\n                }}\n              />\n            }\n          />\n        </FormControl>\n      )}\n      {isElectron && check && supportedForIndexing ? (\n        <TextIndexingConfig model={model} />\n      ) : null}\n    </div>\n  )\n})\n\nexport default ConfirmTrack\n","import React from 'react'\nimport { FileSelector } from '@jbrowse/core/ui'\nimport { AbstractRootModel } from '@jbrowse/core/util'\nimport { Paper } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { getRoot } from 'mobx-state-tree'\nimport { observer } from 'mobx-react'\n\n// locals\nimport { AddTrackModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n  },\n  spacer: {\n    height: theme.spacing(8),\n  },\n}))\n\nconst TrackSourceSelect = observer(function ({\n  model,\n}: {\n  model: AddTrackModel\n}) {\n  const { classes } = useStyles()\n  const rootModel = getRoot<AbstractRootModel>(model)\n\n  return (\n    <Paper className={classes.paper}>\n      <FileSelector\n        name=\"Main file\"\n        description=\"\"\n        location={model.trackData}\n        setLocation={model.setTrackData}\n        setName={model.setTrackName}\n        rootModel={rootModel}\n      />\n      <div className={classes.spacer} />\n      <FileSelector\n        name=\"Index file\"\n        description=\"(Optional) The URL of the index file is automatically inferred from the URL of the main file if it is not supplied.\"\n        location={model.indexTrackData}\n        setLocation={model.setIndexTrackData}\n        setName={model.setTrackName}\n        rootModel={rootModel}\n      />\n    </Paper>\n  )\n})\n\nexport default TrackSourceSelect\n","import React, { useState } from 'react'\nimport {\n  Alert,\n  Button,\n  Step,\n  StepContent,\n  StepLabel,\n  Stepper,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { getRoot } from 'mobx-state-tree'\n\nimport {\n  getSession,\n  isElectron,\n  isSessionModelWithWidgets,\n  isSessionWithAddTracks,\n  isSupportedIndexingAdapter,\n} from '@jbrowse/core/util'\nimport { getConf } from '@jbrowse/core/configuration'\nimport { observer } from 'mobx-react'\n\n// locals\nimport ConfirmTrack from './ConfirmTrack'\nimport TrackSourceSelect from './TrackSourceSelect'\nimport { AddTrackModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  root: {\n    marginTop: theme.spacing(1),\n  },\n  stepper: {\n    backgroundColor: theme.palette.background.default,\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginTop: theme.spacing(10),\n    marginBottom: theme.spacing(2),\n  },\n  alertContainer: {\n    padding: `${theme.spacing(2)}px 0px ${theme.spacing(2)}px 0px`,\n  },\n}))\n\nconst steps = ['Enter track data', 'Confirm track type']\n\nconst DefaultAddTrackWorkflow = observer(function ({\n  model,\n}: {\n  model: AddTrackModel\n}) {\n  const [activeStep, setActiveStep] = useState(0)\n  const { classes } = useStyles()\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const { jobsManager } = getRoot<any>(model)\n  const session = getSession(model)\n  const {\n    assembly,\n    trackAdapter,\n    trackData,\n    trackName,\n    trackType,\n    textIndexTrack,\n    textIndexingConf,\n  } = model\n  const [trackErrorMessage, setTrackErrorMessage] = useState<string>()\n\n  function getStepContent(step: number) {\n    switch (step) {\n      case 0:\n        return <TrackSourceSelect model={model} />\n      case 1:\n        return <ConfirmTrack model={model} />\n      default:\n        return <Typography>Unknown step</Typography>\n    }\n  }\n\n  async function handleNext() {\n    if (activeStep !== steps.length - 1) {\n      setActiveStep(activeStep + 1)\n      return\n    }\n\n    const trackId = [\n      `${trackName.toLowerCase().replaceAll(' ', '_')}-${Date.now()}`,\n      `${session.adminMode ? '' : '-sessionTrack'}`,\n    ].join('')\n\n    const assemblyInstance = session.assemblyManager.get(assembly)\n    if (!isSessionWithAddTracks(session)) {\n      setTrackErrorMessage('Unable to add tracks to this model')\n      return\n    }\n    if (assemblyInstance && trackAdapter && trackAdapter.type !== 'UNKNOWN') {\n      session.addTrackConf({\n        trackId,\n        type: trackType,\n        name: trackName,\n        assemblyNames: [assembly],\n        adapter: {\n          ...trackAdapter,\n          sequenceAdapter: getConf(assemblyInstance, ['sequence', 'adapter']),\n        },\n      })\n      model.view.showTrack?.(trackId)\n      if (\n        isElectron &&\n        textIndexTrack &&\n        isSupportedIndexingAdapter(trackAdapter.type)\n      ) {\n        const attr = textIndexingConf || {\n          attributes: ['Name', 'ID'],\n          exclude: ['CDS', 'exon'],\n        }\n        const indexName = trackName + '-index'\n        const newEntry = {\n          indexingParams: {\n            ...attr,\n            assemblies: [assembly],\n            tracks: [trackId],\n            indexType: 'perTrack',\n            name: indexName,\n            timestamp: new Date().toISOString(),\n          },\n          name: indexName,\n          cancelCallback: () => jobsManager.abortJob(),\n        }\n        jobsManager.queueJob(newEntry)\n      } else {\n        session.notify(\n          'Open a new view, or use the track selector in an existing view, to view this track',\n          'info',\n        )\n      }\n      model.clearData()\n      if (isSessionModelWithWidgets(session)) {\n        session.hideWidget(model)\n      }\n    } else {\n      setTrackErrorMessage(\n        'Failed to add track.\\nThe configuration of this file is not currently supported.',\n      )\n    }\n  }\n\n  function handleBack() {\n    setTrackErrorMessage(undefined)\n    setActiveStep(activeStep - 1)\n  }\n\n  function isNextDisabled() {\n    switch (activeStep) {\n      case 0:\n        return !trackData\n      case 1:\n        return !(trackName && trackType && trackAdapter?.type && assembly)\n      default:\n        return true\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Stepper\n        className={classes.stepper}\n        activeStep={activeStep}\n        orientation=\"vertical\"\n      >\n        {steps.map((label, idx) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n            <StepContent>\n              {getStepContent(idx)}\n              <div className={classes.actionsContainer}>\n                <Button\n                  disabled={activeStep === 0}\n                  onClick={handleBack}\n                  className={classes.button}\n                >\n                  Back\n                </Button>\n                <Button\n                  disabled={isNextDisabled()}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleNext}\n                  className={classes.button}\n                  data-testid=\"addTrackNextButton\"\n                >\n                  {activeStep === steps.length - 1 ? 'Add' : 'Next'}\n                </Button>\n              </div>\n              {trackErrorMessage ? (\n                <div className={classes.alertContainer}>\n                  <Alert severity=\"error\">{trackErrorMessage}</Alert>\n                </div>\n              ) : null}\n            </StepContent>\n          </Step>\n        ))}\n      </Stepper>\n    </div>\n  )\n})\nexport default DefaultAddTrackWorkflow\n","import React, { useState } from 'react'\nimport { Button, TextField } from '@mui/material'\nimport { ErrorMessage } from '@jbrowse/core/ui'\nimport { makeStyles } from 'tss-react/mui'\nimport {\n  getSession,\n  isSessionModelWithWidgets,\n  isSessionWithAddTracks,\n} from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\n\n// locals\nimport { AddTrackModel } from '../model'\n\nconst useStyles = makeStyles()({\n  textbox: {\n    width: '100%',\n  },\n  submit: {\n    marginTop: 25,\n    marginBottom: 100,\n    display: 'block',\n  },\n})\n\nconst PasteConfigAddTrackWorkflow = observer(function ({\n  model,\n}: {\n  model: AddTrackModel\n}) {\n  const { classes } = useStyles()\n  const [val, setVal] = useState('')\n  const [error, setError] = useState<unknown>()\n\n  return (\n    <div>\n      {error ? <ErrorMessage error={error} /> : null}\n      <TextField\n        multiline\n        rows={10}\n        value={val}\n        onChange={event => setVal(event.target.value)}\n        placeholder={\n          'Paste track config or array of track configs in JSON format'\n        }\n        variant=\"outlined\"\n        className={classes.textbox}\n      />\n      <Button\n        variant=\"contained\"\n        className={classes.submit}\n        onClick={() => {\n          try {\n            setError(undefined)\n            const session = getSession(model)\n            const conf = JSON.parse(val)\n            const confs = Array.isArray(conf) ? conf : [conf]\n            if (\n              isSessionWithAddTracks(session) &&\n              isSessionModelWithWidgets(session)\n            ) {\n              confs.forEach(c => session.addTrackConf(c))\n              confs.forEach(c => model.view.showTrack(c.trackId))\n              model.clearData()\n              session.hideWidget(model)\n            }\n          } catch (e) {\n            console.error(e)\n            setError(e)\n          }\n        }}\n      >\n        Submit\n      </Button>\n    </div>\n  )\n})\nexport default PasteConfigAddTrackWorkflow\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { FormControl, FormHelperText, Select, MenuItem } from '@mui/material'\nimport { getEnv } from '@jbrowse/core/util'\n\n// locals\nimport { AddTrackModel } from '../model'\nimport DefaultAddTrackWorkflow from './DefaultAddTrackWorkflow'\nimport PasteConfigWorkflow from './PasteConfigWorkflow'\n\nconst AddTrackSelector = observer(function ({\n  model,\n}: {\n  model: AddTrackModel\n}) {\n  const [val, setVal] = useState('Default add track workflow')\n  const { pluginManager } = getEnv(model)\n  const widgets = pluginManager.getAddTrackWorkflowElements()\n  const ComponentMap = {\n    'Default add track workflow': DefaultAddTrackWorkflow,\n    'Add track JSON': PasteConfigWorkflow,\n    ...Object.fromEntries(widgets.map(w => [w.name, w.ReactComponent])),\n  } as Record<string, React.FC<{ model: AddTrackModel }>>\n\n  // make sure the selected value is in the list\n  const val2 = ComponentMap[val] ? val : 'Default add track workflow'\n  const Component = ComponentMap[val2]\n  return (\n    <>\n      <FormControl>\n        <Select value={val2} onChange={event => setVal(event.target.value)}>\n          {Object.keys(ComponentMap).map(e => (\n            <MenuItem key={e} value={e}>\n              {e}\n            </MenuItem>\n          ))}\n        </Select>\n        <FormHelperText>Type of add track workflow</FormHelperText>\n      </FormControl>\n\n      <br />\n      <Component model={model} />\n    </>\n  )\n})\n\nexport default AddTrackSelector\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","import { alpha, getPath } from '@mui/system';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n    },\n\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const {\n      className,\n      color = 'primary',\n      component = 'a',\n      onBlur,\n      onFocus,\n      TypographyClasses,\n      underline = 'always',\n      variant = 'inherit',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n  const handleBlur = event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;"],"names":["useStyles","makeStyles","theme","paper","display","flexDirection","padding","spacing","card","marginTop","observer","_ref","model","classes","_useState","useState","_useState2","_slicedToArray","value1","setValue1","_useState3","_useState4","value2","setValue2","_useState5","_useState6","attributes","setAttributes","_useState7","_useState8","exclude","setExclude","sections","label","values","useEffect","setTextIndexingConf","_jsxs","Paper","className","children","_jsx","InputLabel","map","section","index","Card","raised","CardContent","List","disablePadding","val","idx","ListItem","disableGutters","TextField","value","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","newAttr","filter","_","i","DeleteIcon","placeholder","onChange","event","target","concat","_toConsumableArray","disabled","AddIcon","marginBottom","pluginManager","getEnv","trackType","trackTypes","getTrackElements","variant","helperText","select","fullWidth","setTrackType","SelectProps","SelectDisplayProps","_ref2","name","displayName","MenuItem","categorizeAdapters","adaptersList","forEach","adapter","_adapter$adapterMetad","key","adapterMetadata","category","push","trackAdapter","type","setAdapterHint","Object","entries","getAdapterElements","e","_e$adapterMetadata","hiddenFromGUI","_ref3","ListSubheader","elt","StatusMessage","subadapter","Typography","UnknownAdapterPrompt","_Fragment","Link","href","rel","TrackAdapterSelector","check","setCheck","session","getSession","trackName","warningMessage","adapterHint","unsupported","UNKNOWN","supportedForIndexing","isSupportedIndexingAdapter","style","color","setTrackName","inputProps","TrackTypeSelector","AssemblySelector","selected","assembly","asm","setAssembly","TextFieldProps","isElectron","FormControl","FormControlLabel","control","Checkbox","checked","setTextIndexTrack","TextIndexingConfig","spacer","height","rootModel","getRoot","FileSelector","description","location","trackData","setLocation","setTrackData","setName","indexTrackData","setIndexTrackData","root","stepper","backgroundColor","palette","background","default","button","marginRight","actionsContainer","alertContainer","steps","DefaultAddTrackWorkflow","activeStep","setActiveStep","jobsManager","textIndexTrack","textIndexingConf","trackErrorMessage","setTrackErrorMessage","getStepContent","step","TrackSourceSelect","ConfirmTrack","handleNext","_handleNext","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","trackId","assemblyInstance","_model$view$showTrack","_model$view","attr","indexName","newEntry","wrap","_context","prev","next","length","abrupt","toLowerCase","replaceAll","Date","now","adminMode","join","assemblyManager","get","isSessionWithAddTracks","addTrackConf","assemblyNames","_objectSpread","sequenceAdapter","getConf","view","showTrack","call","indexingParams","assemblies","tracks","indexType","timestamp","toISOString","cancelCallback","abortJob","queueJob","notify","clearData","isSessionModelWithWidgets","hideWidget","stop","handleBack","undefined","isNextDisabled","Stepper","orientation","Step","StepLabel","StepContent","Button","Alert","severity","textbox","width","submit","setVal","error","setError","ErrorMessage","multiline","rows","conf","JSON","parse","confs","Array","isArray","c","console","widgets","getAddTrackWorkflowElements","ComponentMap","PasteConfigWorkflow","fromEntries","w","ReactComponent","val2","Component","Select","keys","FormHelperText","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d","colorTransformations","primary","textPrimary","secondary","textSecondary","ownerState","transformedColor","transformDeprecatedColors","getPath","channelColor","alpha","_excluded","LinkRoot","styled","slot","overridesResolver","props","styles","capitalize","underline","component","_extends","textDecoration","textDecorationColor","getTextDecoration","_defineProperty","WebkitTapHighlightColor","outline","border","margin","borderRadius","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","focusVisible","React","inProps","ref","useThemeProps","_props$color","_props$component","onBlur","onFocus","TypographyClasses","_props$underline","_props$variant","sx","other","_objectWithoutPropertiesLoose","_useIsFocusVisible","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","_React$useState","_React$useState2","setFocusVisible","handlerRef","useForkRef","slots","composeClasses","getLinkUtilityClass","useUtilityClasses","clsx","current","includes","generateUtilityClass","generateUtilityClasses"],"sourceRoot":""}