{"version":3,"file":"static/js/5746.f43f87fe.chunk.js","mappings":"sSAsBA,MAAMA,GAAYC,EAAAA,EAAAA,KAAAA,CAAa,CAC7BC,SAAU,CACRC,OAAQ,GAEVC,UAAW,CACTC,QAAS,OACTC,SAAU,SACVC,IAAK,SA6DT,GAzD8BC,EAAAA,EAAAA,WAAS,UAA+B,MACpEC,EAAK,QACLC,IAKA,MAAM,QAAEC,GAAYX,KACbY,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,QACnC,kBAAEC,GAAsBN,EACxBO,EAAyC,IAA7BD,EAAkBE,OACpC,OACEC,EAAAA,cAACC,EAAAA,OAAM,CAACC,MAAI,EAACV,QAASA,EAASW,MAAM,oBACnCH,EAAAA,cAACI,EAAAA,EAAa,CAACC,UAAWZ,EAAQP,WAChCc,EAAAA,cAACM,EAAAA,EAAK,CAACC,SAAS,QACbT,EACCE,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,YAAM,mCACNA,EAAAA,cAAA,WACAA,EAAAA,cAAA,YAAM,iEAKR,6CAGJA,EAAAA,cAAA,OAAKQ,MAAO,CAAErB,QAAS,OAAQsB,WAAY,WACzCT,EAAAA,cAACU,EAAAA,EAAU,KAAC,uBACZV,EAAAA,cAACW,EAAAA,EAAM,CACLC,KAAK,QACLP,UAAWZ,EAAQT,SACnB,cAAY,iBACZ6B,MAAOnB,EACPoB,SAAUC,GAASpB,EAAYoB,EAAMC,OAAOH,QAE5Cb,EAAAA,cAACiB,EAAAA,EAAQ,CAACJ,MAAM,OAAM,OACtBb,EAAAA,cAACiB,EAAAA,EAAQ,CAACJ,MAAM,OAAM,UAI5Bb,EAAAA,cAACkB,EAAAA,EAAa,KACZlB,EAAAA,cAACmB,EAAAA,EAAM,CACLC,QAAQ,YACRC,MAAM,UACNC,UAAWtB,EAAAA,cAACuB,EAAAA,EAAU,MACtBC,QAASA,MACPC,EAAAA,EAAAA,IAAqB/B,EAAUH,GAC/BC,GAAQ,EAAM,GAEjB,aAMT,G","sources":["../../../plugins/grid-bookmark/src/GridBookmarkWidget/components/dialogs/ExportBookmarksDialog.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\n\nimport {\n  Button,\n  DialogContent,\n  DialogActions,\n  MenuItem,\n  Select,\n  Typography,\n  Alert,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { Dialog } from '@jbrowse/core/ui'\n\n// Icons\nimport GetAppIcon from '@mui/icons-material/GetApp'\n\n// locals\nimport { GridBookmarkModel } from '../../model'\nimport { downloadBookmarkFile } from '../../utils'\n\nconst useStyles = makeStyles()({\n  flexItem: {\n    margin: 5,\n  },\n  container: {\n    display: 'flex',\n    flexFlow: 'column',\n    gap: '5px',\n  },\n})\n\nconst ExportBookmarksDialog = observer(function ExportBookmarksDialog({\n  model,\n  onClose,\n}: {\n  model: GridBookmarkModel\n  onClose: (arg: boolean) => void\n}) {\n  const { classes } = useStyles()\n  const [fileType, setFileType] = useState('BED')\n  const { selectedBookmarks } = model\n  const exportAll = selectedBookmarks.length === 0\n  return (\n    <Dialog open onClose={onClose} title=\"Export bookmarks\">\n      <DialogContent className={classes.container}>\n        <Alert severity=\"info\">\n          {exportAll ? (\n            <>\n              <span>All bookmarks will be exported.</span>\n              <br />\n              <span>\n                Use the checkboxes to select individual bookmarks to export.\n              </span>\n            </>\n          ) : (\n            'Only selected bookmarks will be exported.'\n          )}\n        </Alert>\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          <Typography>Format to download:</Typography>\n          <Select\n            size=\"small\"\n            className={classes.flexItem}\n            data-testid=\"selectFileType\"\n            value={fileType}\n            onChange={event => setFileType(event.target.value)}\n          >\n            <MenuItem value=\"BED\">BED</MenuItem>\n            <MenuItem value=\"TSV\">TSV</MenuItem>\n          </Select>\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<GetAppIcon />}\n          onClick={() => {\n            downloadBookmarkFile(fileType, model)\n            onClose(false)\n          }}\n        >\n          Download\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\nexport default ExportBookmarksDialog\n"],"names":["useStyles","makeStyles","flexItem","margin","container","display","flexFlow","gap","observer","model","onClose","classes","fileType","setFileType","useState","selectedBookmarks","exportAll","length","React","Dialog","open","title","DialogContent","className","Alert","severity","style","alignItems","Typography","Select","size","value","onChange","event","target","MenuItem","DialogActions","Button","variant","color","startIcon","GetAppIcon","onClick","downloadBookmarkFile"],"sourceRoot":""}