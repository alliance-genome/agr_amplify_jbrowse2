{"version":3,"file":"static/js/1241.aeab9f36.chunk.js","mappings":"ySAiBMA,GAAYC,EAAAA,EAAAA,KAAAA,CAAa,CAC7BC,cAAe,CACbC,MAAO,UAoHX,WAAeC,EAAAA,EAAAA,WAhHf,SAAwB,GAMpB,IAOEC,EAZJC,EAAK,EAALA,MACAC,EAAW,EAAXA,YAKQC,EAAYR,IAAZQ,QACR,GAA0BC,EAAAA,EAAAA,UAAS,IAAG,eAA/BC,EAAK,KAAEC,EAAQ,KACtB,GAA0CF,EAAAA,EAAAA,WAAS,GAAK,eAAjDG,EAAa,KAAEC,EAAgB,KACtC,GAA0CJ,EAAAA,EAAAA,WAAS,GAAK,eAAjDK,EAAa,KAAEC,EAAgB,KACtC,GAA8CN,EAAAA,EAAAA,WAAS,GAAK,eAArDO,EAAe,KAAEC,EAAkB,KAI1C,IACE,IAAIC,OAAOR,EAGb,CAFE,MAAOS,GACPd,EAAQc,CACV,CAEA,OACE,UAAC,EAAAC,OAAM,CAACC,SAAS,KAAKC,MAAI,EAACC,QAAShB,EAAaiB,MAAM,kBAAiB,WACtE,UAAC,IAAa,CAACC,UAAWjB,EAAQN,cAAc,WAC9C,SAAC,IAAU,UAAC,qKAKZ,SAAC,IAAS,CACRQ,MAAOA,EACPgB,SAAU,SAAAP,GAAC,OAAIR,EAASQ,EAAEQ,OAAOjB,MAAM,EACvCkB,WAAW,6BAEb,UAAC,IAAS,YACR,SAAC,IAAgB,CACfC,SACE,SAAC,IAAQ,CACPC,QAASlB,EACTc,SAAU,SAAAK,GAAK,OAAIlB,EAAiBkB,EAAMJ,OAAOG,QAAQ,IAG7DE,MAAM,2BAER,SAAC,IAAgB,CACfH,SACE,SAAC,IAAQ,CACPC,QAAShB,EACTY,SAAU,SAAAK,GAAK,OAAIhB,EAAiBgB,EAAMJ,OAAOG,QAAQ,IAG7DE,MAAM,2BAER,SAAC,IAAgB,CACfH,SACE,SAAC,IAAQ,CACPC,QAASd,EACTU,SAAU,SAAAK,GAAK,OAAId,EAAmBc,EAAMJ,OAAOG,QAAQ,IAG/DE,MAAM,wBAGT3B,GAAQ,SAAC,IAAU,CAAC4B,MAAM,QAAO,mBAAK5B,KAAwB,SAEjE,UAAC,IAAa,YACZ,SAAC,IAAM,CACL6B,QAAS,WACP,GAAIxB,EAAO,CAAC,IAAD,EACHyB,EAAO,2BAAuBC,KAAKC,OACnCC,GAAUC,EAAAA,EAAAA,YAAWjC,GACnBkC,EAAoBF,EAApBE,gBACFC,EAAenC,EAAMoC,cAAc,GACzCJ,EAAQK,aAAa,CACnBR,QAAAA,EACAS,KAAK,mBAAD,OAAqBlC,GACzBgC,cAAe,CAACD,GAChBI,KAAM,eACNC,QAAS,CACPD,KAAM,wBACNE,OAAQrC,EACRE,cAAAA,EACAE,cAAAA,EACAE,gBAAAA,EACAgC,iBAAiBC,EAAAA,EAAAA,aACkB,QADP,EAC1BT,EAAgBU,IAAIT,UAAa,aAAjC,EAAmCU,cAAcC,SAC9CN,YAITxC,EAAM+C,YAAYlB,EACpB,CACA5B,GACF,EACA+C,QAAQ,YACRrB,MAAM,UAAS,SAChB,YAID,SAAC,IAAM,CACLC,QAAS,kBAAM3B,GAAa,EAC5B+C,QAAQ,YACRrB,MAAM,YAAW,SAClB,eAMT,G","sources":["../../../plugins/linear-genome-view/src/LinearGenomeView/components/SequenceSearchDialog.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContent,\n  FormGroup,\n  FormControlLabel,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { getSnapshot } from 'mobx-state-tree'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { getSession } from '@jbrowse/core/util'\n\nconst useStyles = makeStyles()({\n  dialogContent: {\n    width: '40em',\n  },\n})\n\nfunction SequenceDialog({\n  model,\n  handleClose,\n}: {\n  model: { assemblyNames: string[]; toggleTrack(trackId: string): void }\n  handleClose: () => void\n}) {\n  const { classes } = useStyles()\n  const [value, setValue] = useState('')\n  const [searchForward, setSearchForward] = useState(true)\n  const [searchReverse, setSearchReverse] = useState(true)\n  const [caseInsensitive, setCaseInsensitive] = useState(true)\n\n  let error\n\n  try {\n    new RegExp(value)\n  } catch (e) {\n    error = e\n  }\n\n  return (\n    <Dialog maxWidth=\"xl\" open onClose={handleClose} title=\"Sequence search\">\n      <DialogContent className={classes.dialogContent}>\n        <Typography>\n          Supply a sequence to search for. A track will be created with the\n          resulting matches once submitted. You can also supply regex style\n          expressions e.g. AACT(C|T).\n        </Typography>\n        <TextField\n          value={value}\n          onChange={e => setValue(e.target.value)}\n          helperText=\"Sequence search pattern\"\n        />\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={searchForward}\n                onChange={event => setSearchForward(event.target.checked)}\n              />\n            }\n            label=\"Search forward strand\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={searchReverse}\n                onChange={event => setSearchReverse(event.target.checked)}\n              />\n            }\n            label=\"Search reverse strand\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={caseInsensitive}\n                onChange={event => setCaseInsensitive(event.target.checked)}\n              />\n            }\n            label=\"Case insensitive\"\n          />\n        </FormGroup>\n        {error ? <Typography color=\"error\">{`${error}`}</Typography> : null}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            if (value) {\n              const trackId = `sequence_search_${+Date.now()}`\n              const session = getSession(model)\n              const { assemblyManager } = session\n              const assemblyName = model.assemblyNames[0]\n              session.addTrackConf({\n                trackId,\n                name: `Sequence search ${value}`,\n                assemblyNames: [assemblyName],\n                type: 'FeatureTrack',\n                adapter: {\n                  type: 'SequenceSearchAdapter',\n                  search: value,\n                  searchForward,\n                  searchReverse,\n                  caseInsensitive,\n                  sequenceAdapter: getSnapshot(\n                    assemblyManager.get(assemblyName)?.configuration.sequence\n                      .adapter,\n                  ),\n                },\n              })\n              model.toggleTrack(trackId)\n            }\n            handleClose()\n          }}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Submit\n        </Button>\n\n        <Button\n          onClick={() => handleClose()}\n          variant=\"contained\"\n          color=\"secondary\"\n        >\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default observer(SequenceDialog)\n"],"names":["useStyles","makeStyles","dialogContent","width","observer","error","model","handleClose","classes","useState","value","setValue","searchForward","setSearchForward","searchReverse","setSearchReverse","caseInsensitive","setCaseInsensitive","RegExp","e","Dialog","maxWidth","open","onClose","title","className","onChange","target","helperText","control","checked","event","label","color","onClick","trackId","Date","now","session","getSession","assemblyManager","assemblyName","assemblyNames","addTrackConf","name","type","adapter","search","sequenceAdapter","getSnapshot","get","configuration","sequence","toggleTrack","variant"],"sourceRoot":""}