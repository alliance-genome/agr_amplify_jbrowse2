{"version":3,"file":"static/js/38.011f1b02.chunk.js","mappings":"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","sources":["../../../node_modules/@gmod/indexedfasta/src/indexedFasta.ts","../../../node_modules/@gmod/indexedfasta/src/bgzipIndexedFasta.ts","../../../node_modules/abortable-promise-cache/esm/AbortablePromiseCache.js","../../../node_modules/abortable-promise-cache/esm/AggregateAbortController.js","../../../node_modules/abortable-promise-cache/esm/AggregateStatusReporter.js","../../../node_modules/abortable-promise-cache/esm/abortcontroller-ponyfill.js","../../../node_modules/abortable-promise-cache/esm/index.js"],"sourcesContent":["import { LocalFile, GenericFilehandle } from 'generic-filehandle'\n\ninterface BaseOpts {\n  signal?: AbortSignal\n}\n\ninterface IndexEntry {\n  offset: number\n  lineBytes: number\n  lineLength: number\n  length: number\n}\n\nfunction _faiOffset(idx: IndexEntry, pos: number) {\n  return (\n    idx.offset +\n    idx.lineBytes * Math.floor(pos / idx.lineLength) +\n    (pos % idx.lineLength)\n  )\n}\n\nasync function readFAI(fai: GenericFilehandle, opts?: BaseOpts) {\n  const text = await fai.readFile(opts)\n  if (!(text && text.length)) {\n    throw new Error('No data read from FASTA index (FAI) file')\n  }\n\n  let idCounter = 0\n  let currSeq: { name: string; id: number } | undefined\n  const data = text\n    .toString('utf8')\n    .split(/\\r?\\n/)\n    .filter(line => /\\S/.test(line))\n    .map(line => line.split('\\t'))\n    .filter(row => row[0] !== '')\n    .map(row => {\n      if (!currSeq || currSeq.name !== row[0]) {\n        currSeq = { name: row[0], id: idCounter }\n        idCounter += 1\n      }\n\n      return {\n        id: currSeq.id,\n        name: row[0],\n        length: +row[1],\n        start: 0,\n        end: +row[1],\n        offset: +row[2],\n        lineLength: +row[3],\n        lineBytes: +row[4],\n      }\n    })\n\n  return {\n    name: Object.fromEntries(data.map(entry => [entry.name, entry])),\n    id: Object.fromEntries(data.map(entry => [entry.id, entry])),\n  }\n}\n\nexport default class IndexedFasta {\n  fasta: GenericFilehandle\n  fai: GenericFilehandle\n  indexes?: ReturnType<typeof readFAI>\n\n  constructor({\n    fasta,\n    fai,\n    path,\n    faiPath,\n  }: {\n    fasta?: GenericFilehandle\n    fai?: GenericFilehandle\n    path?: string\n    faiPath?: string\n  }) {\n    if (fasta) {\n      this.fasta = fasta\n    } else if (path) {\n      this.fasta = new LocalFile(path)\n    } else {\n      throw new Error('Need to pass filehandle for fasta or path to localfile')\n    }\n\n    if (fai) {\n      this.fai = fai\n    } else if (faiPath) {\n      this.fai = new LocalFile(faiPath)\n    } else if (path) {\n      this.fai = new LocalFile(`${path}.fai`)\n    } else {\n      throw new Error('Need to pass filehandle for  or path to localfile')\n    }\n  }\n\n  async _getIndexes(opts?: BaseOpts) {\n    if (!this.indexes) {\n      this.indexes = readFAI(this.fai, opts)\n    }\n    return this.indexes\n  }\n\n  /**\n   * @returns {array[string]} array of string sequence\n   * names that are present in the index, in which the\n   * array index indicates the sequence ID, and the value\n   * is the sequence name\n   */\n  async getSequenceNames(opts?: BaseOpts) {\n    return Object.keys((await this._getIndexes(opts)).name)\n  }\n\n  /**\n   * @returns {array[string]} array of string sequence\n   * names that are present in the index, in which the\n   * array index indicates the sequence ID, and the value\n   * is the sequence name\n   */\n  async getSequenceSizes(opts?: BaseOpts) {\n    const returnObject = {} as { [key: string]: number }\n    const idx = await this._getIndexes(opts)\n    const vals = Object.values(idx.id)\n    for (let i = 0; i < vals.length; i += 1) {\n      returnObject[vals[i].name] = vals[i].length\n    }\n    return returnObject\n  }\n\n  /**\n   * @returns {array[string]} array of string sequence\n   * names that are present in the index, in which the\n   * array index indicates the sequence ID, and the value\n   * is the sequence name\n   */\n  async getSequenceSize(seqName: string, opts?: BaseOpts) {\n    const idx = await this._getIndexes(opts)\n    return idx.name[seqName]?.length\n  }\n\n  /**\n   *\n   * @param {string} name\n   * @returns {Promise[boolean]} true if the file contains the given reference sequence name\n   */\n  async hasReferenceSequence(name: string, opts?: BaseOpts) {\n    return !!(await this._getIndexes(opts)).name[name]\n  }\n\n  /**\n   *\n   * @param {number} seqId\n   * @param {number} min\n   * @param {number} max\n   */\n  async getResiduesById(\n    seqId: number,\n    min: number,\n    max: number,\n    opts?: BaseOpts,\n  ) {\n    const indexEntry = (await this._getIndexes(opts)).id[seqId]\n    if (!indexEntry) {\n      return undefined\n    }\n    return this._fetchFromIndexEntry(indexEntry, min, max, opts)\n  }\n\n  /**\n   * @param {string} seqName\n   * @param {number} min\n   * @param {number} max\n   */\n  async getResiduesByName(\n    seqName: string,\n    min: number,\n    max: number,\n    opts?: BaseOpts,\n  ) {\n    const indexEntry = (await this._getIndexes(opts)).name[seqName]\n    if (!indexEntry) {\n      return undefined\n    }\n\n    return this._fetchFromIndexEntry(indexEntry, min, max, opts)\n  }\n\n  //alias for getResiduesByName\n  async getSequence(\n    seqName: string,\n    min: number,\n    max: number,\n    opts?: BaseOpts,\n  ) {\n    return this.getResiduesByName(seqName, min, max, opts)\n  }\n\n  async _fetchFromIndexEntry(\n    indexEntry: IndexEntry,\n    min = 0,\n    max: number,\n    opts?: BaseOpts,\n  ) {\n    let end = max\n    if (min < 0) {\n      throw new TypeError('regionStart cannot be less than 0')\n    }\n    if (end === undefined || end > indexEntry.length) {\n      end = indexEntry.length\n    }\n    if (min >= end) {\n      return ''\n    }\n\n    const position = _faiOffset(indexEntry, min)\n    const readlen = _faiOffset(indexEntry, end) - position\n\n    const residues = Buffer.allocUnsafe(readlen)\n    await this.fasta.read(residues, 0, readlen, position, opts)\n    return residues.toString('utf8').replace(/\\s+/g, '')\n  }\n}\n","import { BgzfFilehandle } from '@gmod/bgzf-filehandle'\nimport { GenericFilehandle } from 'generic-filehandle'\nimport IndexedFasta from './indexedFasta'\n\nexport default class BgzipIndexedFasta extends IndexedFasta {\n  constructor({\n    fasta,\n    path,\n    fai,\n    faiPath,\n    gzi,\n    gziPath,\n  }: {\n    fasta?: GenericFilehandle\n    path?: string\n    fai?: GenericFilehandle\n    faiPath?: string\n    gzi?: GenericFilehandle\n    gziPath?: string\n  }) {\n    super({ fasta, path, fai, faiPath })\n    if (fasta && gzi) {\n      this.fasta = new BgzfFilehandle({\n        filehandle: fasta,\n        gziFilehandle: gzi,\n      })\n    } else if (path && gziPath) {\n      this.fasta = new BgzfFilehandle({ path, gziPath })\n    }\n  }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst abortcontroller_ponyfill_1 = require(\"./abortcontroller-ponyfill\");\nconst AggregateAbortController_1 = __importDefault(require(\"./AggregateAbortController\"));\nconst AggregateStatusReporter_1 = __importDefault(require(\"./AggregateStatusReporter\"));\nclass AbortablePromiseCache {\n    constructor({ fill, cache, }) {\n        if (typeof fill !== 'function') {\n            throw new TypeError('must pass a fill function');\n        }\n        if (typeof cache !== 'object') {\n            throw new TypeError('must pass a cache object');\n        }\n        if (typeof cache.get !== 'function' ||\n            typeof cache.set !== 'function' ||\n            typeof cache.delete !== 'function') {\n            throw new TypeError('cache must implement get(key), set(key, val), and and delete(key)');\n        }\n        this.cache = cache;\n        this.fillCallback = fill;\n    }\n    static isAbortException(exception) {\n        return (\n        // DOMException\n        exception.name === 'AbortError' ||\n            // standard-ish non-DOM abort exception\n            //@ts-ignore\n            exception.code === 'ERR_ABORTED' ||\n            // stringified DOMException\n            exception.message === 'AbortError: aborted' ||\n            // stringified standard-ish exception\n            exception.message === 'Error: aborted');\n    }\n    evict(key, entry) {\n        if (this.cache.get(key) === entry) {\n            this.cache.delete(key);\n        }\n    }\n    fill(key, data, signal, statusCallback) {\n        const aborter = new AggregateAbortController_1.default();\n        const statusReporter = new AggregateStatusReporter_1.default();\n        statusReporter.addCallback(statusCallback);\n        const newEntry = {\n            aborter: aborter,\n            promise: this.fillCallback(data, aborter.signal, (message) => {\n                statusReporter.callback(message);\n            }),\n            settled: false,\n            statusReporter,\n            get aborted() {\n                return this.aborter.signal.aborted;\n            },\n        };\n        newEntry.aborter.addSignal(signal);\n        // remove the fill from the cache when its abortcontroller fires, if still in there\n        newEntry.aborter.signal.addEventListener('abort', () => {\n            if (!newEntry.settled) {\n                this.evict(key, newEntry);\n            }\n        });\n        // chain off the cached promise to record when it settles\n        newEntry.promise\n            .then(() => {\n            newEntry.settled = true;\n        }, () => {\n            newEntry.settled = true;\n            // if the fill throws an error (including abort) and is still in the cache, remove it\n            this.evict(key, newEntry);\n        })\n            .catch(e => {\n            // this will only be reached if there is some kind of\n            // bad bug in this library\n            console.error(e);\n            throw e;\n        });\n        this.cache.set(key, newEntry);\n    }\n    static checkSinglePromise(promise, signal) {\n        // check just this signal for having been aborted, and abort the\n        // promise if it was, regardless of what happened with the cached\n        // response\n        function checkForSingleAbort() {\n            if (signal && signal.aborted) {\n                throw Object.assign(new Error('aborted'), { code: 'ERR_ABORTED' });\n            }\n        }\n        return promise.then(result => {\n            checkForSingleAbort();\n            return result;\n        }, error => {\n            checkForSingleAbort();\n            throw error;\n        });\n    }\n    has(key) {\n        return this.cache.has(key);\n    }\n    /**\n     * Callback for getting status of the pending async\n     *\n     * @callback statusCallback\n     * @param {any} status, current status string or message object\n     */\n    /**\n     * @param {any} key cache key to use for this request\n     * @param {any} data data passed as the first argument to the fill callback\n     * @param {AbortSignal} [signal] optional AbortSignal object that aborts the request\n     * @param {statusCallback} a callback to get the current status of a pending async operation\n     */\n    get(key, data, signal, statusCallback) {\n        if (!signal && data instanceof abortcontroller_ponyfill_1.AbortSignal) {\n            throw new TypeError('second get argument appears to be an AbortSignal, perhaps you meant to pass `null` for the fill data?');\n        }\n        const cacheEntry = this.cache.get(key);\n        if (cacheEntry) {\n            if (cacheEntry.aborted && !cacheEntry.settled) {\n                // if it's aborted but has not realized it yet, evict it and redispatch\n                this.evict(key, cacheEntry);\n                return this.get(key, data, signal, statusCallback);\n            }\n            if (cacheEntry.settled) {\n                // too late to abort, just return it\n                return cacheEntry.promise;\n            }\n            // request is in-flight, add this signal to its list of signals,\n            // or if there is no signal, the aborter will become non-abortable\n            cacheEntry.aborter.addSignal(signal);\n            cacheEntry.statusReporter.addCallback(statusCallback);\n            return AbortablePromiseCache.checkSinglePromise(cacheEntry.promise, signal);\n        }\n        // if we got here, it is not in the cache. fill.\n        this.fill(key, data, signal, statusCallback);\n        return AbortablePromiseCache.checkSinglePromise(\n        //see https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#non-null-assertion-operator-postfix-\n        //eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.cache.get(key).promise, signal);\n    }\n    /**\n     * delete the given entry from the cache. if it exists and its fill request has\n     * not yet settled, the fill will be signaled to abort.\n     *\n     * @param {any} key\n     */\n    delete(key) {\n        const cachedEntry = this.cache.get(key);\n        if (cachedEntry) {\n            if (!cachedEntry.settled) {\n                cachedEntry.aborter.abort();\n            }\n            this.cache.delete(key);\n        }\n    }\n    /**\n     * Clear all requests from the cache. Aborts any that have not settled.\n     * @returns {number} count of entries deleted\n     */\n    clear() {\n        // iterate without needing regenerator-runtime\n        const keyIter = this.cache.keys();\n        let deleteCount = 0;\n        for (let result = keyIter.next(); !result.done; result = keyIter.next()) {\n            this.delete(result.value);\n            deleteCount += 1;\n        }\n        return deleteCount;\n    }\n}\nexports.default = AbortablePromiseCache;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst abortcontroller_ponyfill_1 = require(\"./abortcontroller-ponyfill\");\nclass NullSignal {\n}\n/**\n * aggregates a number of abort signals, will only fire the aggregated\n * abort if all of the input signals have been aborted\n */\nclass AggregateAbortController {\n    constructor() {\n        this.signals = new Set();\n        this.abortController = new abortcontroller_ponyfill_1.AbortController();\n    }\n    /**\n     * @param {AbortSignal} [signal] optional AbortSignal to add. if falsy,\n     *  will be treated as a null-signal, and this abortcontroller will no\n     *  longer be abortable.\n     */\n    //@ts-ignore\n    addSignal(signal = new NullSignal()) {\n        if (this.signal.aborted) {\n            throw new Error('cannot add a signal, already aborted!');\n        }\n        // note that a NullSignal will never fire, so if we\n        // have one this thing will never actually abort\n        this.signals.add(signal);\n        if (signal.aborted) {\n            // handle the abort immediately if it is already aborted\n            // for some reason\n            this.handleAborted(signal);\n        }\n        else if (typeof signal.addEventListener === 'function') {\n            signal.addEventListener('abort', () => {\n                this.handleAborted(signal);\n            });\n        }\n    }\n    handleAborted(signal) {\n        this.signals.delete(signal);\n        if (this.signals.size === 0) {\n            this.abortController.abort();\n        }\n    }\n    get signal() {\n        return this.abortController.signal;\n    }\n    abort() {\n        this.abortController.abort();\n    }\n}\nexports.default = AggregateAbortController;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass AggregateStatusReporter {\n    constructor() {\n        this.callbacks = new Set();\n    }\n    addCallback(callback = () => { }) {\n        this.callbacks.add(callback);\n        callback(this.currentMessage);\n    }\n    callback(message) {\n        this.currentMessage = message;\n        this.callbacks.forEach(elt => {\n            elt(message);\n        });\n    }\n}\nexports.default = AggregateStatusReporter;\n","\"use strict\";\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbortSignal = exports.AbortController = void 0;\nconst cjs_ponyfill_1 = require(\"abortcontroller-polyfill/dist/cjs-ponyfill\");\nvar getGlobal = function () {\n    // the only reliable means to get the global object is\n    // `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    throw new Error('unable to locate global object');\n};\n//@ts-ignore\nlet AbortController = typeof getGlobal().AbortController === 'undefined' ? cjs_ponyfill_1.AbortController : getGlobal().AbortController;\nexports.AbortController = AbortController;\n//@ts-ignore\nlet AbortSignal = typeof getGlobal().AbortController === 'undefined' ? cjs_ponyfill_1.AbortSignal : getGlobal().AbortSignal;\nexports.AbortSignal = AbortSignal;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AbortablePromiseCache_1 = __importDefault(require(\"./AbortablePromiseCache\"));\nexports.default = AbortablePromiseCache_1.default;\n"],"names":["_faiOffset","idx","pos","offset","lineBytes","Math","floor","lineLength","readFAI","_x","_x2","_readFAI","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee10","fai","opts","text","idCounter","currSeq","data","wrap","_context10","prev","next","readFile","sent","length","Error","toString","split","filter","line","test","map","row","name","id","start","end","abrupt","Object","fromEntries","entry","stop","IndexedFasta","_ref","fasta","path","faiPath","_classCallCheck","this","LocalFile","concat","_createClass","key","value","_getIndexes2","_callee","_context","indexes","_x3","_getSequenceNames","_callee2","_context2","t0","_getIndexes","t1","keys","call","_x4","_getSequenceSizes","_callee3","returnObject","vals","i","_context3","values","_x5","_getSequenceSize","_callee4","seqName","_a","_context4","_x6","_x7","_hasReferenceSequence","_callee5","_context5","_x8","_x9","_getResiduesById","_callee6","seqId","min","max","indexEntry","_context6","undefined","_fetchFromIndexEntry","_x10","_x11","_x12","_x13","_getResiduesByName","_callee7","_context7","_x14","_x15","_x16","_x17","_getSequence","_callee8","_context8","getResiduesByName","_x18","_x19","_x20","_x21","_fetchFromIndexEntry2","_callee9","position","readlen","residues","_args9","_context9","TypeError","Buffer","allocUnsafe","read","replace","_x22","BgzipIndexedFasta","_IndexedFasta","_inherits","_super","_createSuper","_this","gzi","gziPath","BgzfFilehandle","filehandle","gziFilehandle","require","__importDefault","mod","__esModule","defineProperty","exports","abortcontroller_ponyfill_1","AggregateAbortController_1","AggregateStatusReporter_1","AbortablePromiseCache","fill","cache","get","set","delete","fillCallback","signal","statusCallback","aborter","default","statusReporter","addCallback","newEntry","promise","message","callback","settled","aborted","addSignal","addEventListener","evict","then","catch","e","console","error","has","AbortSignal","cacheEntry","checkSinglePromise","cachedEntry","abort","keyIter","deleteCount","result","done","exception","code","checkForSingleAbort","assign","NullSignal","AggregateAbortController","signals","Set","abortController","AbortController","add","handleAborted","size","AggregateStatusReporter","callbacks","currentMessage","forEach","elt","cjs_ponyfill_1","getGlobal","self","window","global","AbortablePromiseCache_1"],"sourceRoot":""}