{"version":3,"file":"static/js/7761.4c2c8af8.chunk.js","mappings":"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","sources":["../../../plugins/linear-genome-view/src/LinearGenomeView/components/GetSequenceDialog.tsx","../../../packages/core/util/formatFastaStrings.ts","../../../node_modules/@mui/icons-material/GetApp.js","../../../node_modules/@mui/material/CircularProgress/CircularProgress.js","../../../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../../../node_modules/@mui/system/esm/Container/createContainer.js","../../../node_modules/@mui/material/Container/Container.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport {\n  Button,\n  Checkbox,\n  CircularProgress,\n  Container,\n  DialogActions,\n  DialogContent,\n  FormGroup,\n  FormControlLabel,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { saveAs } from 'file-saver'\nimport { getConf } from '@jbrowse/core/configuration'\nimport copy from 'copy-to-clipboard'\nimport { Dialog } from '@jbrowse/core/ui'\nimport {\n  getSession,\n  reverse,\n  complement,\n  Feature,\n  Region,\n} from '@jbrowse/core/util'\nimport { formatSeqFasta } from '@jbrowse/core/util/formatFastaStrings'\n\n// icons\nimport { ContentCopy as ContentCopyIcon } from '@jbrowse/core/ui/Icons'\nimport GetAppIcon from '@mui/icons-material/GetApp'\n\n// locals\nimport { LinearGenomeViewModel } from '..'\n\nconst useStyles = makeStyles()({\n  dialogContent: {\n    width: '80em',\n  },\n  textAreaFont: {\n    fontFamily: 'Courier New',\n  },\n})\n\ntype LGV = LinearGenomeViewModel\n\n/**\n * Fetches and returns a list features for a given list of regions\n */\nasync function fetchSequence(\n  model: LGV,\n  regions: Region[],\n  signal?: AbortSignal,\n) {\n  const session = getSession(model)\n  const { leftOffset, rightOffset } = model\n\n  if (!leftOffset || !rightOffset) {\n    throw new Error('no offsets on model to use for range')\n  }\n\n  if (leftOffset.assemblyName !== rightOffset.assemblyName) {\n    throw new Error('not able to fetch sequences from multiple assemblies')\n  }\n  const { rpcManager, assemblyManager } = session\n  const assemblyName = leftOffset.assemblyName || rightOffset.assemblyName || ''\n  const assembly = assemblyManager.get(assemblyName)\n  if (!assembly) {\n    throw new Error(`assembly ${assemblyName} not found`)\n  }\n  const adapterConfig = getConf(assembly, ['sequence', 'adapter'])\n\n  const sessionId = 'getSequence'\n  return rpcManager.call(sessionId, 'CoreGetFeatures', {\n    adapterConfig,\n    regions,\n    sessionId,\n    signal,\n  }) as Promise<Feature[]>\n}\n\nconst GetSequenceDialog = observer(function ({\n  model,\n  handleClose,\n}: {\n  model: LGV\n  handleClose: () => void\n}) {\n  const { classes } = useStyles()\n  const session = getSession(model)\n  const [error, setError] = useState<unknown>()\n  const [sequenceChunks, setSequenceChunks] = useState<Feature[]>()\n  const [rev, setReverse] = useState(false)\n  const [copied, setCopied] = useState(false)\n  const [comp, setComplement] = useState(false)\n  const { leftOffset, rightOffset } = model\n  const loading = Boolean(sequenceChunks === undefined)\n\n  useEffect(() => {\n    let active = true\n    const controller = new AbortController()\n\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      try {\n        // random note: the current selected region can't be a computed because\n        // it uses action on base1dview even though it's on the ephemeral\n        // base1dview\n        const selection = model.getSelectedRegions(leftOffset, rightOffset)\n        if (selection.length === 0) {\n          throw new Error('Selected region is out of bounds')\n        }\n        const chunks = await fetchSequence(model, selection, controller.signal)\n        if (active) {\n          setSequenceChunks(chunks)\n        }\n      } catch (e) {\n        console.error(e)\n        if (active) {\n          setError(e)\n        }\n      }\n    })()\n\n    return () => {\n      controller.abort()\n      active = false\n    }\n  }, [model, session, leftOffset, rightOffset])\n\n  const sequence = sequenceChunks\n    ? formatSeqFasta(\n        sequenceChunks\n          .filter(f => !!f)\n          .map(chunk => {\n            let chunkSeq = chunk.get('seq')\n            const chunkRefName = chunk.get('refName')\n            const chunkStart = chunk.get('start') + 1\n            const chunkEnd = chunk.get('end')\n            const loc = `${chunkRefName}:${chunkStart}-${chunkEnd}`\n            if (chunkSeq?.length !== chunkEnd - chunkStart + 1) {\n              throw new Error(\n                `${loc} returned ${chunkSeq.length.toLocaleString()} bases, but should have returned ${(\n                  chunkEnd - chunkStart\n                ).toLocaleString()}`,\n              )\n            }\n\n            if (rev) {\n              chunkSeq = reverse(chunkSeq)\n            }\n            if (comp) {\n              chunkSeq = complement(chunkSeq)\n            }\n            return {\n              header: loc + (rev ? '-rev' : '') + (comp ? '-comp' : ''),\n              seq: chunkSeq,\n            }\n          }),\n      )\n    : ''\n\n  const sequenceTooLarge = sequence ? sequence.length > 1_000_000 : false\n\n  return (\n    <Dialog\n      maxWidth=\"xl\"\n      open\n      onClose={() => {\n        handleClose()\n        model.setOffsets()\n      }}\n      title=\"Reference sequence\"\n    >\n      <DialogContent>\n        {error ? (\n          <Typography color=\"error\">{`${error}`}</Typography>\n        ) : loading ? (\n          <Container>\n            Retrieving reference sequence...\n            <CircularProgress\n              style={{ marginLeft: 10 }}\n              size={20}\n              disableShrink\n            />\n          </Container>\n        ) : null}\n        <TextField\n          data-testid=\"rubberband-sequence\"\n          variant=\"outlined\"\n          multiline\n          minRows={5}\n          maxRows={10}\n          disabled={sequenceTooLarge}\n          className={classes.dialogContent}\n          fullWidth\n          value={\n            sequenceTooLarge\n              ? 'Reference sequence too large to display, use the download FASTA button'\n              : sequence\n          }\n          InputProps={{\n            readOnly: true,\n            classes: {\n              input: classes.textAreaFont,\n            },\n          }}\n        />\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Checkbox\n                value={rev}\n                onChange={event => setReverse(event.target.checked)}\n              />\n            }\n            label=\"Reverse sequence\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                value={comp}\n                onChange={event => setComplement(event.target.checked)}\n              />\n            }\n            label=\"Complement sequence\"\n          />\n        </FormGroup>\n        <Typography style={{ margin: 10 }}>\n          Note: Check both boxes for the \"reverse complement\"\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            copy(sequence)\n            setCopied(true)\n            setTimeout(() => setCopied(false), 500)\n          }}\n          disabled={loading || !!error || sequenceTooLarge}\n          color=\"primary\"\n          startIcon={<ContentCopyIcon />}\n        >\n          {copied ? 'Copied' : 'Copy to clipboard'}\n        </Button>\n        <Button\n          onClick={() => {\n            saveAs(\n              new Blob([sequence || ''], {\n                type: 'text/x-fasta;charset=utf-8',\n              }),\n              'jbrowse_ref_seq.fa',\n            )\n          }}\n          disabled={loading || !!error}\n          color=\"primary\"\n          startIcon={<GetAppIcon />}\n        >\n          Download FASTA\n        </Button>\n        <Button onClick={handleClose} variant=\"contained\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n\nexport default GetSequenceDialog\n","export interface SeqChunk {\n  header: string\n  seq: string\n}\n/**\n * Returns sequence with new line every 80 characters\n * ref https://stackoverflow.com/a/51506718/2129219\n *\n * @param seqString -  string\n * @returns formatted sequence string\n */\nexport function formatFastaLines(seqString: string) {\n  return seqString.replaceAll(/(.{1,80})/g, '$1\\n').trimEnd()\n}\n/**\n * Formats the sequences chunks into Fasta format\n *\n * @param chunks - array of seq chunks of the form `{ header: string, seq: string }`\n * @returns formatted sequence in fasta format\n */\nexport function formatSeqFasta(chunks: SeqChunk[]) {\n  return chunks\n    .map(chunk => `>${chunk.header}\\n${formatFastaLines(chunk.seq)}`)\n    .join('\\n')\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7zM5 18v2h14v-2z\"\n}), 'GetApp');","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      disableShrink = false,\n      size = 40,\n      style,\n      thickness = 3.6,\n      value = 0,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, for example '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '@mui/utils/capitalize';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"names":["useStyles","makeStyles","dialogContent","width","textAreaFont","fontFamily","observer","model","handleClose","classes","session","getSession","error","setError","useState","sequenceChunks","setSequenceChunks","rev","setReverse","copied","setCopied","comp","setComplement","leftOffset","rightOffset","loading","Boolean","undefined","useEffect","active","controller","AbortController","selection","getSelectedRegions","length","Error","chunks","async","regions","signal","assemblyName","rpcManager","assemblyManager","assembly","get","adapterConfig","getConf","sessionId","call","fetchSequence","e","console","abort","sequence","filter","f","map","chunk","chunkSeq","chunkRefName","chunkStart","chunkEnd","loc","toLocaleString","reverse","complement","header","seq","seqString","replaceAll","trimEnd","join","sequenceTooLarge","React","Dialog","maxWidth","open","onClose","setOffsets","title","DialogContent","Typography","color","Container","CircularProgress","style","marginLeft","size","disableShrink","TextField","variant","multiline","minRows","maxRows","disabled","className","fullWidth","value","InputProps","readOnly","input","FormGroup","FormControlLabel","control","Checkbox","onChange","event","target","checked","label","margin","DialogActions","Button","onClick","copy","setTimeout","startIcon","ContentCopyIcon","saveAs","Blob","type","GetAppIcon","_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","_excluded","_t","_t2","_t3","_t4","_","t","circularRotateKeyframe","circularDashKeyframe","CircularProgressRoot","name","slot","overridesResolver","props","styles","ownerState","root","theme","display","transition","transitions","create","vars","palette","main","CircularProgressSVG","svg","CircularProgressCircle","circle","circleDisableShrink","stroke","strokeDasharray","strokeDashoffset","inProps","ref","thickness","other","slots","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","height","role","children","viewBox","cx","cy","r","fill","strokeWidth","getCircularProgressUtilityClass","defaultTheme","createTheme","defaultCreateStyledComponent","capitalize","String","fixed","disableGutters","useThemePropsDefault","useThemeProps","options","createStyledComponent","componentName","ContainerRoot","boxSizing","marginRight","paddingLeft","spacing","paddingRight","breakpoints","up","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","unit","max","xs","component","composeClasses","generateUtilityClass","as","clsx","createContainer"],"sourceRoot":""}