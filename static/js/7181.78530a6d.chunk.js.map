{"version":3,"file":"static/js/7181.78530a6d.chunk.js","mappings":"iPAYA,MAsDA,GAtD8BA,E,SAAAA,WAAS,UAA+B,UACpEC,EAAY,CAAC,EAAC,QACdC,IASA,MAAM,KAAEC,EAAI,qBAAEC,EAAoB,sBAAEC,GAA0BJ,EAC9D,OACEK,EAAAA,cAACC,EAAAA,OAAM,CAACC,MAAI,EAACC,SAAS,KAAKC,MAAO,qBAAqBP,MACrDG,EAAAA,cAACK,EAAAA,EAAa,KACXP,EACCE,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACM,EAAAA,EAAiB,KAAC,uCAGnBN,EAAAA,cAACO,EAAAA,EAAI,KACFC,OAAOC,QAAQX,GAAsBY,KAAI,EAAEC,EAAKC,KAC/CZ,EAAAA,cAACa,EAAAA,GAAQ,CAACF,IAAKA,GAAM,GAAGC,KAASD,SAIrC,KACJX,EAAAA,cAACM,EAAAA,EAAiB,KAAC,oDAIrBN,EAAAA,cAACc,EAAAA,EAAa,KACZd,EAAAA,cAACe,EAAAA,EAAM,CAACC,QAASA,IAAMpB,IAAWqB,MAAM,WAAU,UAGlDjB,EAAAA,cAACe,EAAAA,EAAM,CACLG,QAAQ,YACRF,QACErB,EACI,KACEI,MACAH,GAAS,EAEX,OAENqB,MAAM,WACP,OAMT,G","sources":["../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/dialogs/CloseConnectionDialog.tsx"],"sourcesContent":["import React from 'react'\nimport {\n  DialogContent,\n  DialogContentText,\n  Button,\n  List,\n  ListItem,\n  DialogActions,\n} from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\n\nconst CloseConnectionDialog = observer(function CloseConnectionDialog({\n  modalInfo = {},\n  onClose,\n}: {\n  modalInfo?: {\n    name?: string\n    dereferenceTypeCount?: Record<string, number>\n    safelyBreakConnection?: () => void\n  }\n  onClose: () => void\n}) {\n  const { name, dereferenceTypeCount, safelyBreakConnection } = modalInfo\n  return (\n    <Dialog open maxWidth=\"lg\" title={`Close connection \"${name}\"`}>\n      <DialogContent>\n        {dereferenceTypeCount ? (\n          <>\n            <DialogContentText>\n              Closing this connection will close:\n            </DialogContentText>\n            <List>\n              {Object.entries(dereferenceTypeCount).map(([key, value]) => (\n                <ListItem key={key}>{`${value} ${key}`}</ListItem>\n              ))}\n            </List>\n          </>\n        ) : null}\n        <DialogContentText>\n          Are you sure you want to close this connection?\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => onClose()} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={\n            modalInfo\n              ? () => {\n                  safelyBreakConnection?.()\n                  onClose()\n                }\n              : () => {}\n          }\n          color=\"primary\"\n        >\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n\nexport default CloseConnectionDialog\n"],"names":["observer","modalInfo","onClose","name","dereferenceTypeCount","safelyBreakConnection","React","Dialog","open","maxWidth","title","DialogContent","DialogContentText","List","Object","entries","map","key","value","ListItem","DialogActions","Button","onClick","color","variant"],"sourceRoot":""}