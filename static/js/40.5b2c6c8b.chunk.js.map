{"version":3,"sources":["../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/ImportForm.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/LinearSyntenyView.tsx","../../../plugins/linear-comparative-view/src/LinearComparativeView/components/Header.tsx","../../../plugins/linear-comparative-view/src/LinearComparativeView/components/LinearComparativeView.tsx"],"names":["useStyles","makeStyles","theme","importFormContainer","padding","spacing","formPaper","maxWidth","margin","marginBottom","ImportForm","observer","model","classes","session","getSession","assemblyNames","assemblyManager","useState","selected","setSelected","trackData","setTrackData","numRows","error","setError","assemblyError","length","map","a","get","filter","f","join","isSessionWithAddTracks","Promise","all","selection","waitForAssembly","assembly","Error","type","bpPerPx","offsetPx","hideHeader","displayedRegions","regions","setViews","views","forEach","view","setWidth","width","name","uri","slice","lastIndexOf","trackId","Date","now","addTrackConf","adapter","pafLocation","toggleTrack","console","displayError","Container","className","ErrorMessage","Paper","Grid","container","item","justifyContent","alignItems","Typography","Array","_","index","AssemblySelector","key","onChange","val","copy","style","textAlign","href","description","location","setLocation","loc","Button","disabled","onClick","variant","color","ExtraButtons","IconButton","toggleCurves","title","drawCurves","LinearSyntenyView","initialized","LinearComparativeView","headerBar","gridArea","display","spacer","flexGrow","bp","marginLeft","searchContainer","LinkViews","toggleLinkViews","linkViews","SquareView","squareView","Header","anyShowHeaders","some","id","showHelp","Math","round","coarseTotalBp","toLocaleString","overlay","zIndex","content","position","grid","relative","Overlays","tracks","track","displays","RenderingComponent","getConf","height","middleComparativeHeight","overflow","MiddleComparativeView","ReactComponent","getEnv","pluginManager","getViewType","onDrag","n","setMiddleComparativeHeight","background","OverlayComparativeView","props","d"],"mappings":"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","file":"static/js/40.5b2c6c8b.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { getSession, isSessionWithAddTracks } from '@jbrowse/core/util'\nimport AssemblySelector from '@jbrowse/core/ui/AssemblySelector'\nimport {\n  Button,\n  Container,\n  Grid,\n  Paper,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport { FileSelector } from '@jbrowse/core/ui'\nimport { LinearSyntenyViewModel } from '../model'\nimport ErrorMessage from '@jbrowse/core/ui/ErrorMessage'\n\nconst useStyles = makeStyles(theme => ({\n  importFormContainer: {\n    padding: theme.spacing(4),\n  },\n\n  formPaper: {\n    maxWidth: 600,\n    margin: '0 auto',\n    padding: 12,\n    marginBottom: 10,\n  },\n}))\n\nconst ImportForm = observer(({ model }: { model: LinearSyntenyViewModel }) => {\n  const classes = useStyles()\n  const session = getSession(model)\n\n  const { assemblyNames, assemblyManager } = session\n  const [selected, setSelected] = useState([assemblyNames[0], assemblyNames[0]])\n  const [trackData, setTrackData] = useState<FileLocation>()\n  const [numRows] = useState(2)\n  const [error, setError] = useState<unknown>()\n  const assemblyError = assemblyNames.length\n    ? selected\n        .map(a => assemblyManager.get(a)?.error)\n        .filter(f => !!f)\n        .join(', ')\n    : 'No configured assemblies'\n\n  async function onOpenClick() {\n    try {\n      if (!isSessionWithAddTracks(session)) {\n        return\n      }\n      model.setViews(\n        await Promise.all(\n          selected.map(async selection => {\n            const assembly = await assemblyManager.waitForAssembly(selection)\n            if (!assembly) {\n              throw new Error(`Assembly ${selection} failed to load`)\n            }\n            return {\n              type: 'LinearGenomeView' as 'LinearGenomeView',\n              bpPerPx: 1,\n              offsetPx: 0,\n              hideHeader: true,\n              displayedRegions: assembly.regions,\n            }\n          }),\n        ),\n      )\n\n      model.views.forEach(view => view.setWidth(model.width))\n\n      if (trackData) {\n        const name =\n          'uri' in trackData\n            ? trackData.uri.slice(trackData.uri.lastIndexOf('/') + 1)\n            : 'MyTrack'\n\n        const trackId = `${name}-${Date.now()}`\n        session.addTrackConf({\n          trackId,\n          name,\n          assemblyNames: selected,\n          type: 'SyntenyTrack',\n          adapter: {\n            type: 'PAFAdapter',\n            pafLocation: trackData,\n            assemblyNames: selected,\n          },\n        })\n        model.toggleTrack(trackId)\n      }\n    } catch (e) {\n      console.error(e)\n      setError(e)\n    }\n  }\n\n  // this is a combination of any displayed error message we have\n  const displayError = error || assemblyError\n  return (\n    <Container className={classes.importFormContainer}>\n      {displayError ? <ErrorMessage error={displayError} /> : null}\n      <Paper className={classes.formPaper}>\n        <Grid\n          container\n          item\n          justifyContent=\"center\"\n          spacing={4}\n          alignItems=\"center\"\n        >\n          <Grid item>\n            <Typography>Select assemblies for synteny view</Typography>\n            {[...new Array(numRows)].map((_, index) => (\n              <AssemblySelector\n                key={`row_${index}_${selected[index]}`}\n                selected={selected[index]}\n                onChange={val => {\n                  // splice the value into the current array\n                  const copy = selected.slice(0)\n                  copy[index] = val\n                  setSelected(copy)\n                }}\n                session={session}\n              />\n            ))}\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Paper className={classes.formPaper}>\n        <Grid container justifyContent=\"center\">\n          <Typography style={{ textAlign: 'center' }}>\n            <b>Optional</b>: Add a PAF{' '}\n            <a href=\"https://github.com/lh3/miniasm/blob/master/PAF.md\">\n              (pairwise mapping format)\n            </a>{' '}\n            file for the linear synteny view. Note that the first assembly\n            should be the left column of the PAF and the second assembly should\n            be the right column. PAF-like files from MashMap (.out) are also\n            allowed\n          </Typography>\n          <Grid item>\n            <FileSelector\n              name=\"URL\"\n              description=\"\"\n              location={trackData}\n              setLocation={loc => setTrackData(loc)}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n      <Grid container justifyContent=\"center\">\n        <Grid item>\n          <Button\n            // only disable button on assemblyError. for other types of errors\n            // in the useState can retry\n            disabled={!!assemblyError}\n            onClick={onOpenClick}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Open\n          </Button>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n})\n\nexport default ImportForm\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { IconButton } from '@material-ui/core'\nimport LinearComparativeViewComponent from '../../LinearComparativeView/components/LinearComparativeView'\nimport { LinearSyntenyViewModel } from '../model'\nimport { Curves, StraightLines } from './Icons'\nimport ImportForm from './ImportForm'\n\nconst ExtraButtons = observer(\n  ({ model }: { model: LinearSyntenyViewModel }) => {\n    return (\n      <IconButton\n        onClick={() => {\n          model.toggleCurves()\n        }}\n        title=\"Toggle drawing straight or curved synteny lines\"\n      >\n        {model.drawCurves ? (\n          <StraightLines color=\"secondary\" />\n        ) : (\n          <Curves color=\"secondary\" />\n        )}\n      </IconButton>\n    )\n  },\n)\n\nconst LinearSyntenyView = observer(\n  ({ model }: { model: LinearSyntenyViewModel }) => {\n    const { initialized } = model\n    if (!initialized) {\n      return <ImportForm model={model} />\n    }\n    return (\n      <LinearComparativeViewComponent\n        model={model}\n        ExtraButtons={<ExtraButtons model={model} />}\n      />\n    )\n  },\n)\n\nexport default LinearSyntenyView\n","import React from 'react'\nimport { IconButton, Typography, makeStyles } from '@material-ui/core'\nimport { SearchBox } from '@jbrowse/plugin-linear-genome-view'\nimport { observer } from 'mobx-react'\n\n// icons\nimport LinkIcon from '@material-ui/icons/Link'\nimport LinkOffIcon from '@material-ui/icons/LinkOff'\nimport CropFreeIcon from '@material-ui/icons/CropFree'\n\nimport { LinearComparativeViewModel } from '../model'\n\ntype LCV = LinearComparativeViewModel\n\nconst useStyles = makeStyles(() => ({\n  headerBar: {\n    gridArea: '1/1/auto/span 2',\n    display: 'flex',\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  bp: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 10,\n  },\n  searchContainer: {\n    marginLeft: 5,\n  },\n}))\n\nconst LinkViews = observer(({ model }: { model: LCV }) => {\n  return (\n    <IconButton\n      onClick={model.toggleLinkViews}\n      title=\"Toggle linked scrolls and behavior across views\"\n    >\n      {model.linkViews ? (\n        <LinkOffIcon color=\"secondary\" />\n      ) : (\n        <LinkIcon color=\"secondary\" />\n      )}\n    </IconButton>\n  )\n})\n\nconst SquareView = observer(({ model }: { model: LCV }) => {\n  return (\n    <IconButton\n      onClick={model.squareView}\n      title=\"Square view (make both the same zoom level)\"\n    >\n      <CropFreeIcon color=\"secondary\" />\n    </IconButton>\n  )\n})\n\nconst Header = observer(\n  ({ model, ExtraButtons }: { ExtraButtons?: React.ReactNode; model: LCV }) => {\n    const classes = useStyles()\n    const anyShowHeaders = model.views.some(view => !view.hideHeader)\n    return (\n      <div className={classes.headerBar}>\n        <LinkViews model={model} />\n        <SquareView model={model} />\n        {ExtraButtons}\n        {!anyShowHeaders\n          ? model.views.map(view => (\n              <div key={view.id} className={classes.searchContainer}>\n                <SearchBox model={view} showHelp={false} />\n              </div>\n            ))\n          : null}\n        {model.views.map(view => (\n          <Typography\n            key={view.id}\n            variant=\"body2\"\n            color=\"textSecondary\"\n            className={classes.bp}\n          >\n            {Math.round(view.coarseTotalBp).toLocaleString('en-US')} bp\n          </Typography>\n        ))}\n\n        <div className={classes.spacer} />\n      </div>\n    )\n  },\n)\n\nexport default Header\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { getConf } from '@jbrowse/core/configuration'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { getEnv } from 'mobx-state-tree'\nimport { ResizeHandle } from '@jbrowse/core/ui'\nimport { LinearComparativeViewModel } from '../model'\nimport Header from './Header'\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    display: 'grid',\n  },\n  overlay: {\n    zIndex: 100,\n    gridArea: '1/1',\n  },\n  content: {\n    gridArea: '1/1',\n    position: 'relative',\n  },\n  grid: {\n    display: 'grid',\n  },\n  relative: {\n    position: 'relative',\n  },\n}))\n\ntype LCV = LinearComparativeViewModel\n\nconst Overlays = observer(({ model }: { model: LCV }) => {\n  const classes = useStyles()\n  return (\n    <>\n      {model.tracks.map(track => {\n        const [display] = track.displays\n        const { RenderingComponent } = display\n        const trackId = getConf(track, 'trackId')\n        return RenderingComponent ? (\n          <div\n            className={classes.overlay}\n            key={trackId}\n            style={{\n              height: model.middleComparativeHeight,\n              overflow: 'hidden',\n            }}\n          >\n            <RenderingComponent model={display} />\n          </div>\n        ) : null\n      })}\n    </>\n  )\n})\n\n// The comparative is in the middle of the views\nconst MiddleComparativeView = observer(\n  ({ model, ExtraButtons }: { ExtraButtons?: React.ReactNode; model: LCV }) => {\n    const classes = useStyles()\n    const { views } = model\n    const { ReactComponent } = getEnv(model).pluginManager.getViewType(\n      views[0].type,\n    )\n\n    return (\n      <div>\n        <Header ExtraButtons={ExtraButtons} model={model} />\n        <div className={classes.container}>\n          <ReactComponent model={views[0]} />\n          <div className={classes.grid}>\n            <Overlays model={model} />\n          </div>\n          <ResizeHandle\n            onDrag={n =>\n              model.setMiddleComparativeHeight(\n                model.middleComparativeHeight + n,\n              )\n            }\n            style={{\n              height: 4,\n              background: '#ccc',\n            }}\n          />\n          <ReactComponent model={views[1]} />\n        </div>\n      </div>\n    )\n  },\n)\nconst OverlayComparativeView = observer(\n  ({ model, ExtraButtons }: { ExtraButtons?: React.ReactNode; model: LCV }) => {\n    const classes = useStyles()\n    const { views } = model\n    const { pluginManager } = getEnv(model)\n    return (\n      <div>\n        <Header model={model} ExtraButtons={ExtraButtons} />\n        <div className={classes.container}>\n          <div className={classes.content}>\n            <div className={classes.relative}>\n              {views.map(view => {\n                const { ReactComponent } = pluginManager.getViewType(view.type)\n                return <ReactComponent key={view.id} model={view} />\n              })}\n            </div>\n            <Overlays model={model} />\n          </div>\n        </div>\n      </div>\n    )\n  },\n)\n\nconst LinearComparativeView = observer(\n  (props: { ExtraButtons?: React.ReactNode; model: LCV }) => {\n    const { model } = props\n    const middle = model.tracks.some(({ displays }) =>\n      displays.some((d: AnyConfigurationModel) => getConf(d, 'middle')),\n    )\n    return middle ? (\n      <MiddleComparativeView {...props} />\n    ) : (\n      <OverlayComparativeView {...props} />\n    )\n  },\n)\n\nexport default LinearComparativeView\n"],"sourceRoot":""}