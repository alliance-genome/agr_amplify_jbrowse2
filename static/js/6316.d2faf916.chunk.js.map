{"version":3,"file":"static/js/6316.d2faf916.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/material/Skeleton/Skeleton.js","../../../node_modules/@mui/material/Skeleton/skeletonClasses.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js","../../../node_modules/@mui/x-data-grid/utils/Store.js","../../../node_modules/@mui/x-data-grid/utils/EventManager.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridPipeProcessing.js","../../../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridStrategyProcessing.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridRefs.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridTheme.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridLocaleText.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridInitializeState.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/serializers/csvSerializer.js","../../../node_modules/@mui/x-data-grid/hooks/features/clipboard/useGridClipboard.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenu.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeApplier.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumns.js","../../../node_modules/@mui/x-data-grid/hooks/features/density/useGridDensity.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/utils.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/useGridCsvExport.js","../../../node_modules/@mui/x-data-grid/utils/exportAs.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationModel.js","../../../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridRegisterStrategyProcessor.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/useGridFilter.js","../../../node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js","../../../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/useGridKeyboardNavigation.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridCellEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridRowEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRows.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsPreProcessors.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelection.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/useGridSorting.js","../../../node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js","../../../node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsMeta.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumnSpanning.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGrouping.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnResize/useGridColumnResize.js","../../../node_modules/@mui/x-data-grid/utils/createControllablePromise.js","../../../node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelectionPreProcessors.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationMeta.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridRowCount.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js","../../../node_modules/@mui/x-data-grid/utils/throttle.js","../../../node_modules/@mui/x-data-grid/hooks/features/events/useGridEvents.js","../../../node_modules/@mui/x-data-grid/hooks/features/statePersistence/useGridStatePersistence.js","../../../node_modules/@mui/x-data-grid/DataGrid/DataGrid.js","../../../node_modules/@mui/x-data-grid/internals/utils/propValidation.js","../../../node_modules/@mui/x-data-grid/components/GridNoResultsOverlay.js","../../../node_modules/@mui/x-data-grid/material/icons/GridColumnUnsortedIcon.js","../../../node_modules/@mui/x-data-grid/material/components/MUISelectOption.js","../../../node_modules/@mui/x-data-grid/material/index.js","../../../node_modules/@mui/x-data-grid/constants/defaultGridSlotsComponents.js","../../../node_modules/@mui/x-data-grid/components/GridDetailPanels.js","../../../node_modules/@mui/x-data-grid/components/GridPinnedRows.js","../../../node_modules/@mui/x-data-grid/DataGrid/useDataGridProps.js","../../../node_modules/@mui/x-data-grid/internals/utils/useProps.js","../../../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../../../node_modules/@mui/x-data-grid/internals/utils/computeSlots.js","../../../node_modules/@mui/x-data-grid/colDef/gridActionsColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridBooleanColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridBooleanOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridCheckboxSelectionColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridDateColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridDateOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridDefaultColumnTypes.js","../../../node_modules/@mui/x-data-grid/colDef/gridNumericColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridNumericOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridSingleSelectColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridSingleSelectOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridStringColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridStringOperators.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnGroupHeader.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridBaseColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/GridColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/GridFooter.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js","../../../node_modules/@mui/x-data-grid/components/GridHeader.js","../../../node_modules/@mui/x-data-grid/components/GridLoadingOverlay.js","../../../node_modules/@mui/x-data-grid/components/GridNoRowsOverlay.js","../../../node_modules/@mui/x-data-grid/components/GridPagination.js","../../../node_modules/@mui/x-data-grid/components/GridRow.js","../../../node_modules/@mui/x-data-grid/components/GridRowCount.js","../../../node_modules/@mui/x-data-grid/components/GridScrollbarFillerCell.js","../../../node_modules/@mui/x-data-grid/components/GridSelectedRowCount.js","../../../node_modules/@mui/x-data-grid/components/base/GridFooterPlaceholder.js","../../../node_modules/@mui/x-data-grid/components/base/GridOverlays.js","../../../node_modules/@mui/x-data-grid/components/cell/GridActionsCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridBooleanCell.js","../../../node_modules/@mui/x-data-grid/utils/doesSupportPreventScroll.js","../../../node_modules/@mui/x-data-grid/components/cell/GridCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditBooleanCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditDateCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditInputCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditSingleSelectCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridSkeletonCell.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderFilterIconButton.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/ColumnHeaderMenuIcon.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderItem.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSeparator.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSortIcon.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderTitle.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridGenericColumnHeaderItem.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridIconButtonContainer.js","../../../node_modules/@mui/x-data-grid/components/columnSelection/GridCellCheckboxRenderer.js","../../../node_modules/@mui/x-data-grid/components/columnSelection/GridHeaderCheckbox.js","../../../node_modules/@mui/x-data-grid/components/columnsManagement/utils.js","../../../node_modules/@mui/x-data-grid/components/columnsManagement/GridColumnsManagement.js","../../../node_modules/@mui/x-data-grid/components/containers/GridFooterContainer.js","../../../node_modules/@mui/x-data-grid/components/containers/GridOverlay.js","../../../node_modules/@mui/x-data-grid/components/containers/GridRootStyles.js","../../../node_modules/@mui/x-data-grid/components/containers/GridRoot.js","../../../node_modules/@mui/x-data-grid/components/menu/GridMenu.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenuSlots.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenu.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenuContainer.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuColumnsItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuFilterItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuHideItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuManageItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuSortItem.js","../../../node_modules/@mui/x-data-grid/components/panel/GridColumnsPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelContent.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelFooter.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelWrapper.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterForm.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputBoolean.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputDate.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleValue.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputSingleSelect.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputValue.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/filterPanelUtils.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExport.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExportContainer.js","../../../node_modules/@mui/x-data-grid/components/GridScrollArea.js","../../../node_modules/@mui/x-data-grid/components/GridHeaders.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridAriaAttributes.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridMainContainer.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridTopContainer.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridBottomContainer.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerContent.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerFiller.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerRenderZone.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollbar.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScroller.js","../../../node_modules/@mui/x-data-grid/constants/gridClasses.js","../../../node_modules/@mui/x-data-grid/constants/gridDetailPanelToggleField.js","../../../node_modules/@mui/x-data-grid/constants/localeTextConstants.js","../../../node_modules/@mui/x-data-grid/context/GridContextProvider.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/columnMenuSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnResize/gridColumnResizeApi.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsInterfaces.js","../../../node_modules/@mui/x-data-grid/hooks/core/gridCoreSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/density/densitySelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/dimensions/gridDimensionsSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/gridEditingSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterState.js","../../../node_modules/@mui/x-data-grid/utils/getPublicApiRef.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/focus/gridFocusStateSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/headerFiltering/gridHeaderFilteringSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelsValue.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/gridRowSelectionSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/utils.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsMetaSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridParamsApi.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/gridVirtualizationSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualScroller.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualization.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useFirstRender.js","../../../node_modules/@mui/x-data-grid/utils/cleanupTracking/TimerBasedCleanupTracking.js","../../../node_modules/@mui/x-data-grid/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridApiEventHandler.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridApiMethod.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridLogger.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridPrivateApiContext.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridVisibleRows.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useResizeObserver.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useRunOnce.js","../../../node_modules/@mui/x-data-grid/internals/utils/getPinnedCellOffset.js","../../../node_modules/@mui/x-data-grid/material/icons/index.js","../../../node_modules/@mui/x-data-grid/models/gridColumnGrouping.js","../../../node_modules/@mui/x-data-grid/models/gridEditRowModel.js","../../../node_modules/@mui/x-data-grid/models/gridFilterItem.js","../../../node_modules/@mui/x-data-grid/models/params/gridEditCellParams.js","../../../node_modules/@mui/x-data-grid/models/params/gridRowParams.js","../../../node_modules/@mui/x-data-grid/utils/cellBorderUtils.js","../../../node_modules/reselect/es/index.js","../../../node_modules/@mui/x-data-grid/utils/createSelector.js","../../../node_modules/@mui/x-data-grid/utils/domUtils.js","../../../node_modules/@mui/x-data-grid/utils/fastMemo.js","../../../node_modules/@mui/x-data-grid/utils/fastObjectShallowCompare.js","../../../node_modules/@mui/x-data-grid/utils/keyboardUtils.js","../../../node_modules/@mui/x-data-grid/utils/utils.js","../../../node_modules/@mui/x-data-grid/utils/warning.js","../../../node_modules/reselect/es/defaultMemoize.js"],"sourcesContent":["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.variant === 'rounded' && {\n    borderRadius: (theme.vars || theme).shape.borderRadius\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 2s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 2s linear 0.5s infinite;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${0},\n          transparent\n        );\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, (theme.vars || theme).palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n      animation = 'pulse',\n      className,\n      component = 'span',\n      height,\n      style,\n      variant = 'text',\n      width\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","import * as React from 'react';\nimport { localStorageAvailable } from '../../utils/utils';\nimport { useGridApiMethod } from '../utils';\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\nconst noop = () => {};\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI X: Log level ${logLevel} not recognized.`);\n  }\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI X: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n    return loggerObj;\n  }, {});\n  return logger;\n}\nexport const useGridLoggerFactory = (apiRef, props) => {\n  const getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n  useGridApiMethod(apiRef, {\n    getLogger\n  }, 'private');\n};","export class Store {\n  static create(value) {\n    return new Store(value);\n  }\n  constructor(_value) {\n    this.value = void 0;\n    this.listeners = void 0;\n    this.subscribe = fn => {\n      this.listeners.add(fn);\n      return () => {\n        this.listeners.delete(fn);\n      };\n    };\n    this.getSnapshot = () => {\n      return this.value;\n    };\n    this.update = value => {\n      this.value = value;\n      this.listeners.forEach(l => l(value));\n    };\n    this.value = _value;\n    this.listeners = new Set();\n  }\n}","// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  constructor() {\n    this.maxListeners = 20;\n    this.warnOnce = false;\n    this.events = {};\n  }\n  on(eventName, listener, options = {}) {\n    let collection = this.events[eventName];\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`].join('\\n'));\n      }\n    }\n  }\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n  removeAllListeners() {\n    this.events = {};\n  }\n  emit(eventName, ...args) {\n    const collection = this.events[eventName];\n    if (!collection) {\n      return;\n    }\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener(...args) {\n      that.removeListener(eventName, oneTimeListener);\n      listener.apply(that, args);\n    });\n  }\n}","import * as React from 'react';\nimport { Store } from '../../utils/Store';\nimport { useGridApiMethod } from '../utils/useGridApiMethod';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { EventManager } from '../../utils/EventManager';\nconst SYMBOL_API_PRIVATE = Symbol('mui.api_private');\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\nexport function unwrapPrivateAPI(publicApi) {\n  return publicApi[SYMBOL_API_PRIVATE];\n}\nlet globalId = 0;\nfunction createPrivateAPI(publicApiRef) {\n  const existingPrivateApi = publicApiRef.current?.[SYMBOL_API_PRIVATE];\n  if (existingPrivateApi) {\n    return existingPrivateApi;\n  }\n  const state = {};\n  const privateApi = {\n    state,\n    store: Store.create(state),\n    instanceId: {\n      id: globalId\n    }\n  };\n  globalId += 1;\n  privateApi.getPublicApi = () => publicApiRef.current;\n  privateApi.register = (visibility, methods) => {\n    Object.keys(methods).forEach(methodName => {\n      const method = methods[methodName];\n      const currentPrivateMethod = privateApi[methodName];\n      if (currentPrivateMethod?.spying === true) {\n        currentPrivateMethod.target = method;\n      } else {\n        privateApi[methodName] = method;\n      }\n      if (visibility === 'public') {\n        const publicApi = publicApiRef.current;\n        const currentPublicMethod = publicApi[methodName];\n        if (currentPublicMethod?.spying === true) {\n          currentPublicMethod.target = method;\n        } else {\n          publicApi[methodName] = method;\n        }\n      }\n    });\n  };\n  privateApi.register('private', {\n    caches: {},\n    eventManager: new EventManager()\n  });\n  return privateApi;\n}\nfunction createPublicAPI(privateApiRef) {\n  const publicApi = {\n    get state() {\n      return privateApiRef.current.state;\n    },\n    get store() {\n      return privateApiRef.current.store;\n    },\n    get instanceId() {\n      return privateApiRef.current.instanceId;\n    },\n    [SYMBOL_API_PRIVATE]: privateApiRef.current\n  };\n  return publicApi;\n}\nexport function useGridApiInitialization(inputApiRef, props) {\n  const publicApiRef = React.useRef();\n  const privateApiRef = React.useRef();\n  if (!privateApiRef.current) {\n    privateApiRef.current = createPrivateAPI(publicApiRef);\n  }\n  if (!publicApiRef.current) {\n    publicApiRef.current = createPublicAPI(privateApiRef);\n  }\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n    const details = props.signature === GridSignature.DataGridPro ? {\n      api: privateApiRef.current.getPublicApi()\n    } : {};\n    privateApiRef.current.eventManager.emit(name, params, event, details);\n  }, [privateApiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    privateApiRef.current.eventManager.on(event, handler, options);\n    const api = privateApiRef.current;\n    return () => {\n      api.eventManager.removeListener(event, handler);\n    };\n  }, [privateApiRef]);\n  useGridApiMethod(privateApiRef, {\n    subscribeEvent,\n    publishEvent\n  }, 'public');\n  if (inputApiRef && !inputApiRef.current?.state) {\n    inputApiRef.current = publicApiRef.current;\n  }\n  React.useImperativeHandle(inputApiRef, () => publicApiRef.current, [publicApiRef]);\n  React.useEffect(() => {\n    const api = privateApiRef.current;\n    return () => {\n      api.publishEvent('unmount');\n    };\n  }, [privateApiRef]);\n  return privateApiRef;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.requestPipeProcessorsApplication` is called for the given group.\n */\nexport const useGridPipeProcessing = apiRef => {\n  const cache = React.useRef({});\n  const isRunning = React.useRef(false);\n  const runAppliers = React.useCallback(groupCache => {\n    if (isRunning.current || !groupCache) {\n      return;\n    }\n    isRunning.current = true;\n    Object.values(groupCache.appliers).forEach(callback => {\n      callback();\n    });\n    isRunning.current = false;\n  }, []);\n  const registerPipeProcessor = React.useCallback((group, id, processor) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    const groupCache = cache.current[group];\n    const oldProcessor = groupCache.processors.get(id);\n    if (oldProcessor !== processor) {\n      groupCache.processors.set(id, processor);\n      groupCache.processorsAsArray = Array.from(cache.current[group].processors.values());\n      runAppliers(groupCache);\n    }\n    return () => {\n      cache.current[group].processors.delete(id);\n      cache.current[group].processorsAsArray = Array.from(cache.current[group].processors.values());\n    };\n  }, [runAppliers]);\n  const registerPipeApplier = React.useCallback((group, id, applier) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    cache.current[group].appliers[id] = applier;\n    return () => {\n      const _appliers = cache.current[group].appliers,\n        otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n      cache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  const requestPipeProcessorsApplication = React.useCallback(group => {\n    runAppliers(cache.current[group]);\n  }, [runAppliers]);\n  const applyPipeProcessors = React.useCallback((...args) => {\n    const [group, value, context] = args;\n    if (!cache.current[group]) {\n      return value;\n    }\n    const processors = cache.current[group].processorsAsArray;\n    let result = value;\n    for (let i = 0; i < processors.length; i += 1) {\n      result = processors[i](result, context);\n    }\n    return result;\n  }, []);\n  const preProcessingPrivateApi = {\n    registerPipeProcessor,\n    registerPipeApplier,\n    requestPipeProcessorsApplication\n  };\n  const preProcessingPublicApi = {\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingPrivateApi, 'private');\n  useGridApiMethod(apiRef, preProcessingPublicApi, 'public');\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport const GRID_DEFAULT_STRATEGY = 'none';\nexport const GRID_STRATEGIES_PROCESSORS = {\n  rowTreeCreation: 'rowTree',\n  filtering: 'rowTree',\n  sorting: 'rowTree',\n  visibleRowsLookupCreation: 'rowTree'\n};\n/**\n * Implements a variant of the Strategy Pattern (see https://en.wikipedia.org/wiki/Strategy_pattern)\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic that must only be applied if the right strategy is active.\n * For instance, the row grouping plugin has a custom filtering algorithm.\n * This algorithm must be applied by the filtering plugin if the row grouping is the current way of grouping rows,\n * but not if the tree data is the current way of grouping rows.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterStrategyProcessor` to register their processor.\n *   When the processor of the active strategy changes, it will fire `\"activeStrategyProcessorChange\"` to re-apply the processor.\n *\n * - `apiRef.current.setStrategyAvailability` to tell if their strategy can be used.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to apply the custom logic of the current strategy must use:\n *\n * - `apiRef.current.applyStrategyProcessor` to run the processor of the active strategy for a given processor name.\n *\n * - the \"strategyAvailabilityChange\" event to update something when the active strategy changes.\n *    Warning: Be careful not to apply the processor several times.\n *    For instance \"rowsSet\" is fired by `useGridRows` whenever the active strategy changes.\n *    So listening to both would most likely run your logic twice.\n *\n * - The \"activeStrategyProcessorChange\" event to update something when the processor of the active strategy changes.\n *\n * =====================================================================================================================\n *\n * Each processor name is part of a strategy group which can only have one active strategy at the time.\n * For now, there is only one strategy group named `rowTree` which customize\n * - row tree creation algorithm.\n * - sorting algorithm.\n * - filtering algorithm.\n */\nexport const useGridStrategyProcessing = apiRef => {\n  const availableStrategies = React.useRef(new Map());\n  const strategiesCache = React.useRef({});\n  const registerStrategyProcessor = React.useCallback((strategyName, processorName, processor) => {\n    const cleanup = () => {\n      const _ref = strategiesCache.current[processorName],\n        otherProcessors = _objectWithoutPropertiesLoose(_ref, [strategyName].map(_toPropertyKey));\n      strategiesCache.current[processorName] = otherProcessors;\n    };\n    if (!strategiesCache.current[processorName]) {\n      strategiesCache.current[processorName] = {};\n    }\n    const groupPreProcessors = strategiesCache.current[processorName];\n    const previousProcessor = groupPreProcessors[strategyName];\n    groupPreProcessors[strategyName] = processor;\n    if (!previousProcessor || previousProcessor === processor) {\n      return cleanup;\n    }\n    if (strategyName === apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName])) {\n      apiRef.current.publishEvent('activeStrategyProcessorChange', processorName);\n    }\n    return cleanup;\n  }, [apiRef]);\n  const applyStrategyProcessor = React.useCallback((processorName, params) => {\n    const activeStrategy = apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName]);\n    if (activeStrategy == null) {\n      throw new Error(\"Can't apply a strategy processor before defining an active strategy\");\n    }\n    const groupCache = strategiesCache.current[processorName];\n    if (!groupCache || !groupCache[activeStrategy]) {\n      throw new Error(`No processor found for processor \"${processorName}\" on strategy \"${activeStrategy}\"`);\n    }\n    const processor = groupCache[activeStrategy];\n    return processor(params);\n  }, [apiRef]);\n  const getActiveStrategy = React.useCallback(strategyGroup => {\n    const strategyEntries = Array.from(availableStrategies.current.entries());\n    const availableStrategyEntry = strategyEntries.find(([, strategy]) => {\n      if (strategy.group !== strategyGroup) {\n        return false;\n      }\n      return strategy.isAvailable();\n    });\n    return availableStrategyEntry?.[0] ?? GRID_DEFAULT_STRATEGY;\n  }, []);\n  const setStrategyAvailability = React.useCallback((strategyGroup, strategyName, isAvailable) => {\n    availableStrategies.current.set(strategyName, {\n      group: strategyGroup,\n      isAvailable\n    });\n    apiRef.current.publishEvent('strategyAvailabilityChange');\n  }, [apiRef]);\n  const strategyProcessingApi = {\n    registerStrategyProcessor,\n    applyStrategyProcessor,\n    getActiveStrategy,\n    setStrategyAvailability\n  };\n  useGridApiMethod(apiRef, strategyProcessingApi, 'private');\n};","import { useGridRefs } from './useGridRefs';\nimport { useGridTheme } from './useGridTheme';\nimport { useGridLoggerFactory } from './useGridLoggerFactory';\nimport { useGridApiInitialization } from './useGridApiInitialization';\nimport { useGridLocaleText } from './useGridLocaleText';\nimport { useGridPipeProcessing } from './pipeProcessing';\nimport { useGridStrategyProcessing } from './strategyProcessing';\nimport { useGridStateInitialization } from './useGridStateInitialization';\n\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\nexport const useGridInitialization = (inputApiRef, props) => {\n  const privateApiRef = useGridApiInitialization(inputApiRef, props);\n  useGridRefs(privateApiRef);\n  useGridTheme(privateApiRef);\n  useGridLoggerFactory(privateApiRef, props);\n  useGridStateInitialization(privateApiRef);\n  useGridPipeProcessing(privateApiRef);\n  useGridStrategyProcessing(privateApiRef);\n  useGridLocaleText(privateApiRef, props);\n  privateApiRef.current.register('private', {\n    rootProps: props\n  });\n  return privateApiRef;\n};","import * as React from 'react';\nexport const useGridRefs = apiRef => {\n  const rootElementRef = React.useRef(null);\n  const mainElementRef = React.useRef(null);\n  const virtualScrollerRef = React.useRef(null);\n  apiRef.current.register('public', {\n    rootElementRef\n  });\n  apiRef.current.register('private', {\n    mainElementRef,\n    virtualScrollerRef\n  });\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nexport const useGridTheme = apiRef => {\n  const theme = useTheme();\n  if (!apiRef.current.state.theme) {\n    apiRef.current.state.theme = theme;\n  }\n  const isFirstEffect = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstEffect.current) {\n      isFirstEffect.current = false;\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        theme\n      }));\n    }\n  }, [apiRef, theme]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../utils';\nimport { isFunction } from '../../utils/utils';\nexport const useGridStateInitialization = apiRef => {\n  const controlStateMapRef = React.useRef({});\n  const [, rawForceUpdate] = React.useState();\n  const registerControlState = React.useCallback(controlStateItem => {\n    controlStateMapRef.current[controlStateItem.stateId] = controlStateItem;\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n    let ignoreSetState = false;\n\n    // Apply the control state constraints\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (newSubState === oldSubState) {\n        return;\n      }\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      });\n\n      // The state is controlled, the prop should always win\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n      if (apiRef.current.publishEvent) {\n        apiRef.current.publishEvent('stateChange', newState);\n      }\n      apiRef.current.store.update(newState);\n    }\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (controlState.propOnChange && hasPropChanged) {\n        controlState.propOnChange(model, {\n          reason,\n          api: apiRef.current\n        });\n      }\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n    return !ignoreSetState;\n  }, [apiRef]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return _extends({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const forceUpdate = React.useCallback(() => rawForceUpdate(() => apiRef.current.state), [apiRef]);\n  const publicStateApi = {\n    setState,\n    forceUpdate\n  };\n  const privateStateApi = {\n    updateControlState,\n    registerControlState\n  };\n  useGridApiMethod(apiRef, publicStateApi, 'public');\n  useGridApiMethod(apiRef, privateStateApi, 'private');\n};","import * as React from 'react';\nexport const useGridLocaleText = (apiRef, props) => {\n  const getLocaleText = React.useCallback(key => {\n    if (props.localeText[key] == null) {\n      throw new Error(`Missing translation for key ${key}.`);\n    }\n    return props.localeText[key];\n  }, [props.localeText]);\n  apiRef.current.register('public', {\n    getLocaleText\n  });\n};","import * as React from 'react';\nexport const useGridInitializeState = (initializer, privateApiRef, props) => {\n  const isInitialized = React.useRef(false);\n  if (!isInitialized.current) {\n    privateApiRef.current.state = initializer(privateApiRef.current.state, props, privateApiRef);\n    isInitialized.current = true;\n  }\n};","import { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../../colDef';\nimport { buildWarning } from '../../../../utils/warning';\nfunction sanitizeCellValue(value, delimiterCharacter, shouldAppendQuotes) {\n  if (typeof value === 'string') {\n    if (shouldAppendQuotes) {\n      const escapedValue = value.replace(/\"/g, '\"\"');\n      // Make sure value containing delimiter or line break won't be split into multiple rows\n      if ([delimiterCharacter, '\\n', '\\r', '\"'].some(delimiter => value.includes(delimiter))) {\n        return `\"${escapedValue}\"`;\n      }\n      return escapedValue;\n    }\n    return value;\n  }\n  return value;\n}\nexport const serializeCellValue = (cellParams, options) => {\n  const {\n    delimiterCharacter,\n    ignoreValueFormatter,\n    shouldAppendQuotes\n  } = options;\n  let value;\n  if (ignoreValueFormatter) {\n    const columnType = cellParams.colDef.type;\n    if (columnType === 'number') {\n      value = String(cellParams.value);\n    } else if (columnType === 'date' || columnType === 'dateTime') {\n      value = cellParams.value?.toISOString();\n    } else if (typeof cellParams.value?.toString === 'function') {\n      value = cellParams.value.toString();\n    } else {\n      value = cellParams.value;\n    }\n  } else {\n    value = cellParams.formattedValue;\n  }\n  return sanitizeCellValue(value, delimiterCharacter, shouldAppendQuotes);\n};\nconst objectFormattedValueWarning = buildWarning(['MUI X: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\nclass CSVRow {\n  constructor(options) {\n    this.options = void 0;\n    this.rowString = '';\n    this.isEmpty = true;\n    this.options = options;\n  }\n  addValue(value) {\n    if (!this.isEmpty) {\n      this.rowString += this.options.delimiterCharacter;\n    }\n    if (value === null || value === undefined) {\n      this.rowString += '';\n    } else if (typeof this.options.sanitizeCellValue === 'function') {\n      this.rowString += this.options.sanitizeCellValue(value, this.options.delimiterCharacter, this.options.shouldAppendQuotes);\n    } else {\n      this.rowString += value;\n    }\n    this.isEmpty = false;\n  }\n  getRowString() {\n    return this.rowString;\n  }\n}\nconst serializeRow = ({\n  id,\n  columns,\n  getCellParams,\n  delimiterCharacter,\n  ignoreValueFormatter,\n  shouldAppendQuotes\n}) => {\n  const row = new CSVRow({\n    delimiterCharacter,\n    shouldAppendQuotes\n  });\n  columns.forEach(column => {\n    const cellParams = getCellParams(id, column.field);\n    if (process.env.NODE_ENV !== 'production') {\n      if (String(cellParams.formattedValue) === '[object Object]') {\n        objectFormattedValueWarning();\n      }\n    }\n    row.addValue(serializeCellValue(cellParams, {\n      delimiterCharacter,\n      ignoreValueFormatter,\n      shouldAppendQuotes\n    }));\n  });\n  return row.getRowString();\n};\nexport function buildCSV(options) {\n  const {\n    columns,\n    rowIds,\n    delimiterCharacter,\n    includeHeaders,\n    includeColumnGroupsHeaders,\n    ignoreValueFormatter,\n    apiRef,\n    shouldAppendQuotes\n  } = options;\n  const CSVBody = rowIds.reduce((acc, id) => `${acc}${serializeRow({\n    id,\n    columns,\n    getCellParams: apiRef.current.getCellParams,\n    delimiterCharacter,\n    ignoreValueFormatter,\n    shouldAppendQuotes\n  })}\\r\\n`, '').trim();\n  if (!includeHeaders) {\n    return CSVBody;\n  }\n  const filteredColumns = columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field);\n  const headerRows = [];\n  if (includeColumnGroupsHeaders) {\n    const columnGroupLookup = apiRef.current.getAllGroupDetails();\n    let maxColumnGroupsDepth = 0;\n    const columnGroupPathsLookup = filteredColumns.reduce((acc, column) => {\n      const columnGroupPath = apiRef.current.getColumnGroupPath(column.field);\n      acc[column.field] = columnGroupPath;\n      maxColumnGroupsDepth = Math.max(maxColumnGroupsDepth, columnGroupPath.length);\n      return acc;\n    }, {});\n    for (let i = 0; i < maxColumnGroupsDepth; i += 1) {\n      const headerGroupRow = new CSVRow({\n        delimiterCharacter,\n        sanitizeCellValue,\n        shouldAppendQuotes\n      });\n      headerRows.push(headerGroupRow);\n      filteredColumns.forEach(column => {\n        const columnGroupId = (columnGroupPathsLookup[column.field] || [])[i];\n        const columnGroup = columnGroupLookup[columnGroupId];\n        headerGroupRow.addValue(columnGroup ? columnGroup.headerName || columnGroup.groupId : '');\n      });\n    }\n  }\n  const mainHeaderRow = new CSVRow({\n    delimiterCharacter,\n    sanitizeCellValue,\n    shouldAppendQuotes\n  });\n  filteredColumns.forEach(column => {\n    mainHeaderRow.addValue(column.headerName || column.field);\n  });\n  headerRows.push(mainHeaderRow);\n  const CSVHead = `${headerRows.map(row => row.getRowString()).join('\\r\\n')}\\r\\n`;\n  return `${CSVHead}${CSVBody}`.trim();\n}","import * as React from 'react';\nimport { useGridApiOptionHandler, useGridNativeEventListener } from '../../utils';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { serializeCellValue } from '../export/serializers/csvSerializer';\nfunction writeToClipboardPolyfill(data) {\n  const span = document.createElement('span');\n  span.style.whiteSpace = 'pre';\n  span.style.userSelect = 'all';\n  span.style.opacity = '0px';\n  span.textContent = data;\n  document.body.appendChild(span);\n  const range = document.createRange();\n  range.selectNode(span);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(span);\n  }\n}\nfunction copyToClipboard(data) {\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(data).catch(() => {\n      writeToClipboardPolyfill(data);\n    });\n  } else {\n    writeToClipboardPolyfill(data);\n  }\n}\nfunction hasNativeSelection(element) {\n  // When getSelection is called on an <iframe> that is not displayed Firefox will return null.\n  if (window.getSelection()?.toString()) {\n    return true;\n  }\n\n  // window.getSelection() returns an empty string in Firefox for selections inside a form element.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=85686.\n  // Instead, we can use element.selectionStart that is only defined on form elements.\n  if (element && (element.selectionEnd || 0) - (element.selectionStart || 0) > 0) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @requires useGridCsvExport (method)\n * @requires useGridSelection (method)\n */\nexport const useGridClipboard = (apiRef, props) => {\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.clipboardExport : ignoreValueFormatterProp) || false;\n  const clipboardCopyCellDelimiter = props.clipboardCopyCellDelimiter;\n  const handleCopy = React.useCallback(event => {\n    if (!((event.ctrlKey || event.metaKey) && event.key.toLowerCase() === 'c' && !event.shiftKey && !event.altKey)) {\n      return;\n    }\n\n    // Do nothing if there's a native selection\n    if (hasNativeSelection(event.target)) {\n      return;\n    }\n    let textToCopy = '';\n    const selectedRows = apiRef.current.getSelectedRows();\n    if (selectedRows.size > 0) {\n      textToCopy = apiRef.current.getDataAsCsv({\n        includeHeaders: false,\n        // TODO: make it configurable\n        delimiter: clipboardCopyCellDelimiter,\n        shouldAppendQuotes: false\n      });\n    } else {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell) {\n        const cellParams = apiRef.current.getCellParams(focusedCell.id, focusedCell.field);\n        textToCopy = serializeCellValue(cellParams, {\n          delimiterCharacter: clipboardCopyCellDelimiter,\n          ignoreValueFormatter,\n          shouldAppendQuotes: false\n        });\n      }\n    }\n    textToCopy = apiRef.current.unstable_applyPipeProcessors('clipboardCopy', textToCopy);\n    if (textToCopy) {\n      copyToClipboard(textToCopy);\n      apiRef.current.publishEvent('clipboardCopy', textToCopy);\n    }\n  }, [apiRef, ignoreValueFormatter, clipboardCopyCellDelimiter]);\n  useGridNativeEventListener(apiRef, apiRef.current.rootElementRef, 'keydown', handleCopy);\n  useGridApiOptionHandler(apiRef, 'clipboardCopy', props.onClipboardCopy);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { gridColumnMenuSelector } from './columnMenuSelector';\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from '../columns/gridColumnsSelector';\nexport const columnMenuStateInitializer = state => _extends({}, state, {\n  columnMenu: {\n    open: false\n  }\n});\n\n/**\n * @requires useGridColumnResize (event)\n * @requires useGridInfiniteLoader (event)\n */\nexport const useGridColumnMenu = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridColumnMenu');\n\n  /**\n   * API METHODS\n   */\n  const showColumnMenu = React.useCallback(field => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    const newState = {\n      open: true,\n      field\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        if (state.columnMenu.open && state.columnMenu.field === field) {\n          return state;\n        }\n        logger.debug('Opening Column Menu');\n        return _extends({}, state, {\n          columnMenu: {\n            open: true,\n            field\n          }\n        });\n      });\n      apiRef.current.hidePreferences();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const hideColumnMenu = React.useCallback(() => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    if (columnMenuState.field) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef);\n      let fieldToFocus = columnMenuState.field;\n\n      // If the column was removed from the grid, we need to find the closest visible field\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      }\n\n      // If the field to focus is hidden, we need to find the closest visible field\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n      apiRef.current.setColumnHeaderFocus(fieldToFocus);\n    }\n    const newState = {\n      open: false,\n      field: undefined\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        logger.debug('Hiding Column Menu');\n        return _extends({}, state, {\n          columnMenu: newState\n        });\n      });\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const toggleColumnMenu = React.useCallback(field => {\n    logger.debug('Toggle Column Menu');\n    const columnMenu = gridColumnMenuSelector(apiRef.current.state);\n    if (!columnMenu.open || columnMenu.field !== field) {\n      showColumnMenu(field);\n    } else {\n      hideColumnMenu();\n    }\n  }, [apiRef, logger, showColumnMenu, hideColumnMenu]);\n  const columnMenuApi = {\n    showColumnMenu,\n    hideColumnMenu,\n    toggleColumnMenu\n  };\n  useGridApiMethod(apiRef, columnMenuApi, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStart', hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerWheel', apiRef.current.hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerTouchMove', apiRef.current.hideColumnMenu);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnFieldsSelector, gridColumnDefinitionsSelector, gridColumnLookupSelector, gridColumnsStateSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from './gridColumnsSelector';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridRegisterPipeProcessor, useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { EMPTY_PINNED_COLUMN_FIELDS } from './gridColumnsInterfaces';\nimport { hydrateColumnsWidth, createColumnsState, COLUMNS_DIMENSION_PROPERTIES } from './gridColumnsUtils';\nimport { GridPreferencePanelsValue } from '../preferencesPanel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const columnsStateInitializer = (state, props, apiRef) => {\n  const columnsState = createColumnsState({\n    apiRef,\n    columnsToUpsert: props.columns,\n    initialState: props.initialState?.columns,\n    columnVisibilityModel: props.columnVisibilityModel ?? props.initialState?.columns?.columnVisibilityModel ?? {},\n    keepOnlyColumnsToUpsert: true\n  });\n  return _extends({}, state, {\n    columns: columnsState,\n    // In pro/premium, this part of the state is defined. We give it an empty but defined value\n    // for the community version.\n    pinnedColumns: state.pinnedColumns ?? EMPTY_PINNED_COLUMN_FIELDS\n  });\n};\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridDimensions (method, event) - can be after\n * TODO: Impossible priority - useGridParamsApi also needs to be after useGridColumns\n */\nexport function useGridColumns(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useGridColumns');\n  const previousColumnsProp = React.useRef(props.columns);\n  apiRef.current.registerControlState({\n    stateId: 'visibleColumns',\n    propModel: props.columnVisibilityModel,\n    propOnChange: props.onColumnVisibilityModelChange,\n    stateSelector: gridColumnVisibilityModelSelector,\n    changeEvent: 'columnVisibilityModelChange'\n  });\n  const setGridColumnsState = React.useCallback(columnsState => {\n    logger.debug('Updating columns state.');\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    apiRef.current.updateRenderContext?.();\n    apiRef.current.forceUpdate();\n  }, [logger, apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const getColumn = React.useCallback(field => gridColumnLookupSelector(apiRef)[field], [apiRef]);\n  const getAllColumns = React.useCallback(() => gridColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getVisibleColumns = React.useCallback(() => gridVisibleColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getColumnIndex = React.useCallback((field, useVisibleColumns = true) => {\n    const columns = useVisibleColumns ? gridVisibleColumnDefinitionsSelector(apiRef) : gridColumnDefinitionsSelector(apiRef);\n    return columns.findIndex(col => col.field === field);\n  }, [apiRef]);\n  const getColumnPosition = React.useCallback(field => {\n    const index = getColumnIndex(field);\n    return gridColumnPositionsSelector(apiRef)[index];\n  }, [apiRef, getColumnIndex]);\n  const setColumnVisibilityModel = React.useCallback(model => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    if (currentModel !== model) {\n      apiRef.current.setState(state => _extends({}, state, {\n        columns: createColumnsState({\n          apiRef,\n          columnsToUpsert: [],\n          initialState: undefined,\n          columnVisibilityModel: model,\n          keepOnlyColumnsToUpsert: false\n        })\n      }));\n      apiRef.current.updateRenderContext?.();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef]);\n  const updateColumns = React.useCallback(columns => {\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: columns,\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, setGridColumnsState]);\n  const setColumnVisibility = React.useCallback((field, isVisible) => {\n    const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n    const isCurrentlyVisible = columnVisibilityModel[field] ?? true;\n    if (isVisible !== isCurrentlyVisible) {\n      const newModel = _extends({}, columnVisibilityModel, {\n        [field]: isVisible\n      });\n      apiRef.current.setColumnVisibilityModel(newModel);\n    }\n  }, [apiRef]);\n  const getColumnIndexRelativeToVisibleColumns = React.useCallback(field => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    return allColumns.findIndex(col => col === field);\n  }, [apiRef]);\n  const setColumnIndex = React.useCallback((field, targetIndexPosition) => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    const oldIndexPosition = getColumnIndexRelativeToVisibleColumns(field);\n    if (oldIndexPosition === targetIndexPosition) {\n      return;\n    }\n    logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);\n    const updatedColumns = [...allColumns];\n    const fieldRemoved = updatedColumns.splice(oldIndexPosition, 1)[0];\n    updatedColumns.splice(targetIndexPosition, 0, fieldRemoved);\n    setGridColumnsState(_extends({}, gridColumnsStateSelector(apiRef.current.state), {\n      orderedFields: updatedColumns\n    }));\n    const params = {\n      column: apiRef.current.getColumn(field),\n      targetIndex: apiRef.current.getColumnIndexRelativeToVisibleColumns(field),\n      oldIndex: oldIndexPosition\n    };\n    apiRef.current.publishEvent('columnIndexChange', params);\n  }, [apiRef, logger, setGridColumnsState, getColumnIndexRelativeToVisibleColumns]);\n  const setColumnWidth = React.useCallback((field, width) => {\n    logger.debug(`Updating column ${field} width to ${width}`);\n    const columnsState = gridColumnsStateSelector(apiRef.current.state);\n    const column = columnsState.lookup[field];\n    const newColumn = _extends({}, column, {\n      width,\n      hasBeenResized: true\n    });\n    setGridColumnsState(hydrateColumnsWidth(_extends({}, columnsState, {\n      lookup: _extends({}, columnsState.lookup, {\n        [field]: newColumn\n      })\n    }), apiRef.current.getRootDimensions()));\n    apiRef.current.publishEvent('columnWidthChange', {\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: newColumn,\n      width\n    });\n  }, [apiRef, logger, setGridColumnsState]);\n  const columnApi = {\n    getColumn,\n    getAllColumns,\n    getColumnIndex,\n    getColumnPosition,\n    getVisibleColumns,\n    getColumnIndexRelativeToVisibleColumns,\n    updateColumns,\n    setColumnVisibilityModel,\n    setColumnVisibility,\n    setColumnWidth\n  };\n  const columnReorderApi = {\n    setColumnIndex\n  };\n  useGridApiMethod(apiRef, columnApi, 'public');\n  useGridApiMethod(apiRef, columnReorderApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const columnsStateToExport = {};\n    const columnVisibilityModelToExport = gridColumnVisibilityModelSelector(apiRef);\n    const shouldExportColumnVisibilityModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.columnVisibilityModel != null ||\n    // Always export if the model has been initialized\n    // TODO v6 Do a nullish check instead to export even if the initial model equals \"{}\"\n    Object.keys(props.initialState?.columns?.columnVisibilityModel ?? {}).length > 0 ||\n    // Always export if the model is not empty\n    Object.keys(columnVisibilityModelToExport).length > 0;\n    if (shouldExportColumnVisibilityModel) {\n      columnsStateToExport.columnVisibilityModel = columnVisibilityModelToExport;\n    }\n    columnsStateToExport.orderedFields = gridColumnFieldsSelector(apiRef);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const dimensions = {};\n    columns.forEach(colDef => {\n      if (colDef.hasBeenResized) {\n        const colDefDimensions = {};\n        COLUMNS_DIMENSION_PROPERTIES.forEach(propertyName => {\n          let propertyValue = colDef[propertyName];\n          if (propertyValue === Infinity) {\n            propertyValue = -1;\n          }\n          colDefDimensions[propertyName] = propertyValue;\n        });\n        dimensions[colDef.field] = colDefDimensions;\n      }\n    });\n    if (Object.keys(dimensions).length > 0) {\n      columnsStateToExport.dimensions = dimensions;\n    }\n    return _extends({}, prevState, {\n      columns: columnsStateToExport\n    });\n  }, [apiRef, props.columnVisibilityModel, props.initialState?.columns]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const columnVisibilityModelToImport = context.stateToRestore.columns?.columnVisibilityModel;\n    const initialState = context.stateToRestore.columns;\n    if (columnVisibilityModelToImport == null && initialState == null) {\n      return params;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState,\n      columnVisibilityModel: columnVisibilityModelToImport,\n      keepOnlyColumnsToUpsert: false\n    });\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    if (initialState != null) {\n      apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    }\n    return params;\n  }, [apiRef]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.columns) {\n      const ColumnsPanel = props.slots.columnsPanel;\n      return /*#__PURE__*/_jsx(ColumnsPanel, _extends({}, props.slotProps?.columnsPanel));\n    }\n    return initialValue;\n  }, [props.slots.columnsPanel, props.slotProps?.columnsPanel]);\n  const addColumnMenuItems = React.useCallback(columnMenuItems => {\n    if (props.disableColumnSelector) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuColumnsItem'];\n  }, [props.disableColumnSelector]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItems);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n\n  /*\n   * EVENTS\n   */\n\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      setGridColumnsState(hydrateColumnsWidth(gridColumnsStateSelector(apiRef.current.state), apiRef.current.getRootDimensions()));\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n\n  /**\n   * APPLIERS\n   */\n  const hydrateColumns = React.useCallback(() => {\n    logger.info(`Columns pipe processing have changed, regenerating the columns`);\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, logger, setGridColumnsState]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateColumns', hydrateColumns);\n\n  /*\n   * EFFECTS\n   */\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    logger.info(`GridColumns have changed, new length ${props.columns.length}`);\n    if (previousColumnsProp.current === props.columns) {\n      return;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      initialState: undefined,\n      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`\n      columnsToUpsert: props.columns,\n      keepOnlyColumnsToUpsert: true\n    });\n    previousColumnsProp.current = props.columns;\n    setGridColumnsState(columnsState);\n  }, [logger, apiRef, setGridColumnsState, props.columns]);\n  React.useEffect(() => {\n    if (props.columnVisibilityModel !== undefined) {\n      apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel);\n    }\n  }, [apiRef, logger, props.columnVisibilityModel]);\n}\nfunction mergeColumnsState(columnsState) {\n  return state => _extends({}, state, {\n    columns: columnsState\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridDensitySelector } from './densitySelector';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nexport const densityStateInitializer = (state, props) => _extends({}, state, {\n  density: props.initialState?.density ?? props.density ?? 'standard'\n});\nexport const useGridDensity = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useDensity');\n  apiRef.current.registerControlState({\n    stateId: 'density',\n    propModel: props.density,\n    propOnChange: props.onDensityChange,\n    stateSelector: gridDensitySelector,\n    changeEvent: 'densityChange'\n  });\n  const setDensity = useEventCallback(newDensity => {\n    const currentDensity = gridDensitySelector(apiRef.current.state);\n    if (currentDensity === newDensity) {\n      return;\n    }\n    logger.debug(`Set grid density to ${newDensity}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: newDensity\n    }));\n  });\n  const densityApi = {\n    setDensity\n  };\n  useGridApiMethod(apiRef, densityApi, 'public');\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedDensity = gridDensitySelector(apiRef.current.state);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `density` is controlled\n    props.density != null ||\n    // Always export if the `density` has been initialized\n    props.initialState?.density != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      density: exportedDensity\n    });\n  }, [apiRef, props.density, props.initialState?.density]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredDensity = context.stateToRestore?.density ? context.stateToRestore.density : gridDensitySelector(apiRef.current.state);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: restoredDensity\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  React.useEffect(() => {\n    if (props.density) {\n      apiRef.current.setDensity(props.density);\n    }\n  }, [apiRef, props.density]);\n};","import { gridColumnDefinitionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns';\nimport { gridFilteredSortedRowIdsSelector } from '../filter';\nimport { gridPinnedRowsSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\nexport const getColumnsToExport = ({\n  apiRef,\n  options\n}) => {\n  const columns = gridColumnDefinitionsSelector(apiRef);\n  if (options.fields) {\n    return options.fields.reduce((currentColumns, field) => {\n      const column = columns.find(col => col.field === field);\n      if (column) {\n        currentColumns.push(column);\n      }\n      return currentColumns;\n    }, []);\n  }\n  const validColumns = options.allColumns ? columns : gridVisibleColumnDefinitionsSelector(apiRef);\n  return validColumns.filter(column => !column.disableExport);\n};\nexport const defaultGetRowsToExport = ({\n  apiRef\n}) => {\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  const rowTree = gridRowTreeSelector(apiRef);\n  const selectedRows = apiRef.current.getSelectedRows();\n  const bodyRows = filteredSortedRowIds.filter(id => rowTree[id].type !== 'footer');\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsIds = pinnedRows?.top?.map(row => row.id) || [];\n  const bottomPinnedRowsIds = pinnedRows?.bottom?.map(row => row.id) || [];\n  bodyRows.unshift(...topPinnedRowsIds);\n  bodyRows.push(...bottomPinnedRowsIds);\n  if (selectedRows.size > 0) {\n    return bodyRows.filter(id => selectedRows.has(id));\n  }\n  return bodyRows;\n};","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { exportAs } from '../../../utils/exportAs';\nimport { buildCSV } from './serializers/csvSerializer';\nimport { getColumnsToExport, defaultGetRowsToExport } from './utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridCsvExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridCsvExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridCsvExport');\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.csvExport : ignoreValueFormatterProp) || false;\n  const getDataAsCsv = React.useCallback((options = {}) => {\n    logger.debug(`Get data as CSV`);\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const getRowsToExport = options.getRowsToExport ?? defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    return buildCSV({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      delimiterCharacter: options.delimiter || ',',\n      includeHeaders: options.includeHeaders ?? true,\n      includeColumnGroupsHeaders: options.includeColumnGroupsHeaders ?? true,\n      ignoreValueFormatter,\n      apiRef,\n      shouldAppendQuotes: options.shouldAppendQuotes ?? true\n    });\n  }, [logger, apiRef, ignoreValueFormatter]);\n  const exportDataAsCsv = React.useCallback(options => {\n    logger.debug(`Export data as CSV`);\n    const csv = getDataAsCsv(options);\n    const blob = new Blob([options?.utf8WithBom ? new Uint8Array([0xef, 0xbb, 0xbf]) : '', csv], {\n      type: 'text/csv'\n    });\n    exportAs(blob, 'csv', options?.fileName);\n  }, [logger, getDataAsCsv]);\n  const csvExportApi = {\n    getDataAsCsv,\n    exportDataAsCsv\n  };\n  useGridApiMethod(apiRef, csvExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.csvOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridCsvExportMenuItem, {\n        options: options.csvOptions\n      }),\n      componentName: 'csvExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","/**\n * I have hesitated to use https://github.com/eligrey/FileSaver.js.\n * If we get bug reports that this project solves, we should consider using it.\n *\n * Related resources.\n * https://blog.logrocket.com/programmatic-file-downloads-in-the-browser-9a5186298d5c/\n * https://github.com/mbrn/filefy/blob/ec4ed0b7415d93be7158c23029f2ea1fa0b8e2d9/src/core/BaseBuilder.ts\n * https://unpkg.com/browse/@progress/kendo-file-saver@1.0.7/dist/es/save-as.js\n * https://github.com/ag-grid/ag-grid/blob/9565c219b6210aa85fa833c929d0728f9d163a91/community-modules/csv-export/src/csvExport/downloader.ts\n */\n\nexport function exportAs(blob, extension = 'csv', filename = document.title || 'untitled') {\n  const fullName = `${filename}.${extension}`;\n\n  // Test download attribute first\n  // https://github.com/eligrey/FileSaver.js/issues/193\n  if ('download' in HTMLAnchorElement.prototype) {\n    // Create an object URL for the blob object\n    const url = URL.createObjectURL(blob);\n\n    // Create a new anchor element\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fullName;\n\n    // Programmatically trigger a click on the anchor element\n    // Useful if you want the download to happen automatically\n    // Without attaching the anchor element to the DOM\n    a.click();\n\n    // https://github.com/eligrey/FileSaver.js/issues/205\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    });\n    return;\n  }\n  throw new Error('MUI X: exportAs not supported.');\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridDensityFactorSelector } from '../density';\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPageCountSelector, gridPaginationModelSelector } from './gridPaginationSelector';\nimport { getPageCount, defaultPageSize, throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel, getValidPage } from './gridPaginationUtils';\nexport const getDerivedPaginationModel = (paginationState, signature, paginationModelProp) => {\n  let paginationModel = paginationState.paginationModel;\n  const rowCount = paginationState.rowCount;\n  const pageSize = paginationModelProp?.pageSize ?? paginationModel.pageSize;\n  const page = paginationModelProp?.page ?? paginationModel.page;\n  const pageCount = getPageCount(rowCount, pageSize, page);\n  if (paginationModelProp && (paginationModelProp?.page !== paginationModel.page || paginationModelProp?.pageSize !== paginationModel.pageSize)) {\n    paginationModel = paginationModelProp;\n  }\n  const validPage = getValidPage(paginationModel.page, pageCount);\n  if (validPage !== paginationModel.page) {\n    paginationModel = _extends({}, paginationModel, {\n      page: validPage\n    });\n  }\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, signature);\n  return paginationModel;\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPaginationModel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationModel');\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  apiRef.current.registerControlState({\n    stateId: 'paginationModel',\n    propModel: props.paginationModel,\n    propOnChange: props.onPaginationModelChange,\n    stateSelector: gridPaginationModelSelector,\n    changeEvent: 'paginationModelChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPage = React.useCallback(page => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (page === currentModel.page) {\n      return;\n    }\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setPaginationModel({\n      page,\n      pageSize: currentModel.pageSize\n    });\n  }, [apiRef, logger]);\n  const setPageSize = React.useCallback(pageSize => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (pageSize === currentModel.pageSize) {\n      return;\n    }\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setPaginationModel({\n      pageSize,\n      page: currentModel.page\n    });\n  }, [apiRef, logger]);\n  const setPaginationModel = React.useCallback(paginationModel => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (paginationModel === currentModel) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationModel' to\", paginationModel);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n  }, [apiRef, logger, props.signature]);\n  const paginationModelApi = {\n    setPage,\n    setPageSize,\n    setPaginationModel\n  };\n  useGridApiMethod(apiRef, paginationModelApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const shouldExportPaginationModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationModel` is controlled\n    props.paginationModel != null ||\n    // Always export if the `paginationModel` has been initialized\n    props.initialState?.pagination?.paginationModel != null ||\n    // Export if `page` or `pageSize` is not equal to the default value\n    paginationModel.page !== 0 && paginationModel.pageSize !== defaultPageSize(props.autoPageSize);\n    if (!shouldExportPaginationModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        paginationModel\n      })\n    });\n  }, [apiRef, props.paginationModel, props.initialState?.pagination?.paginationModel, props.autoPageSize]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const paginationModel = context.stateToRestore.pagination?.paginationModel ? _extends({}, getDefaultGridPaginationModel(props.autoPageSize), context.stateToRestore.pagination?.paginationModel) : gridPaginationModelSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n    return params;\n  }, [apiRef, props.autoPageSize, props.signature]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = () => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    if (apiRef.current.virtualScrollerRef?.current) {\n      apiRef.current.scrollToIndexes({\n        rowIndex: paginationModel.page * paginationModel.pageSize\n      });\n    }\n  };\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    if (!props.autoPageSize) {\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions();\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  const handleRowCountChange = React.useCallback(newRowCount => {\n    if (newRowCount == null) {\n      return;\n    }\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const pageCount = gridPageCountSelector(apiRef);\n    if (paginationModel.page > pageCount - 1) {\n      apiRef.current.setPage(Math.max(0, pageCount - 1));\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n  useGridApiEventHandler(apiRef, 'rowCountChange', handleRowCountChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, props.paginationModel)\n      })\n    }));\n  }, [apiRef, props.paginationModel, props.paginationMode, props.signature]);\n  React.useEffect(handleUpdateAutoPageSize, [handleUpdateAutoPageSize]);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterStrategyProcessor = (apiRef, strategyName, group, processor) => {\n  const registerPreProcessor = React.useCallback(() => {\n    apiRef.current.registerStrategyProcessor(strategyName, group, processor);\n  }, [apiRef, processor, group, strategyName]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { defaultMemoize } from 'reselect';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useLazyRef } from '../../utils/useLazyRef';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { GridPreferencePanelsValue } from '../preferencesPanel/gridPreferencePanelsValue';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { gridFilterModelSelector } from './gridFilterSelector';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { gridRowsLookupSelector } from '../rows';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\nimport { buildAggregatedFilterApplier, sanitizeFilterModel, mergeStateWithFilterModel, cleanFilterItem, passFilterLogic, shouldQuickFilterExcludeHiddenColumns } from './gridFilterUtils';\nimport { isDeepEqual } from '../../../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const filterStateInitializer = (state, props, apiRef) => {\n  const filterModel = props.filterModel ?? props.initialState?.filter?.filterModel ?? getDefaultGridFilterModel();\n  return _extends({}, state, {\n    filter: {\n      filterModel: sanitizeFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef),\n      filteredRowsLookup: {},\n      filteredDescendantCountLookup: {}\n    },\n    visibleRowsLookup: {}\n  });\n};\nconst getVisibleRowsLookup = params => {\n  // For flat tree, the `visibleRowsLookup` and the `filteredRowsLookup` are equals since no row is collapsed.\n  return params.filteredRowsLookup;\n};\nfunction getVisibleRowsLookupState(apiRef, state) {\n  return apiRef.current.applyStrategyProcessor('visibleRowsLookupCreation', {\n    tree: state.rows.tree,\n    filteredRowsLookup: state.filter.filteredRowsLookup\n  });\n}\nfunction createMemoizedValues() {\n  return defaultMemoize(Object.values);\n}\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n * @requires useGridRows (event)\n */\nexport const useGridFilter = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFilter');\n  apiRef.current.registerControlState({\n    stateId: 'filter',\n    propModel: props.filterModel,\n    propOnChange: props.onFilterModelChange,\n    stateSelector: gridFilterModelSelector,\n    changeEvent: 'filterModelChange'\n  });\n  const updateFilteredRows = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const filterModel = gridFilterModelSelector(state, apiRef.current.instanceId);\n      const isRowMatchingFilters = props.filterMode === 'client' ? buildAggregatedFilterApplier(filterModel, apiRef, props.disableEval) : null;\n      const filteringResult = apiRef.current.applyStrategyProcessor('filtering', {\n        isRowMatchingFilters,\n        filterModel: filterModel ?? getDefaultGridFilterModel()\n      });\n      const newState = _extends({}, state, {\n        filter: _extends({}, state.filter, filteringResult)\n      });\n      const visibleRowsLookupState = getVisibleRowsLookupState(apiRef, newState);\n      return _extends({}, newState, {\n        visibleRowsLookup: visibleRowsLookupState\n      });\n    });\n    apiRef.current.publishEvent('filteredRowsSet');\n  }, [apiRef, props.filterMode, props.disableEval]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.filterable === false || props.disableColumnFilter) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuFilterItem'];\n  }, [props.disableColumnFilter]);\n\n  /**\n   * API METHODS\n   */\n  const applyFilters = React.useCallback(() => {\n    updateFilteredRows();\n    apiRef.current.forceUpdate();\n  }, [apiRef, updateFilteredRows]);\n  const upsertFilterItem = React.useCallback(item => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = [...filterModel.items];\n    const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n    if (itemIndex === -1) {\n      items.push(item);\n    } else {\n      items[itemIndex] = item;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItem');\n  }, [apiRef]);\n  const upsertFilterItems = React.useCallback(items => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const existingItems = [...filterModel.items];\n    items.forEach(item => {\n      const itemIndex = existingItems.findIndex(filterItem => filterItem.id === item.id);\n      if (itemIndex === -1) {\n        existingItems.push(item);\n      } else {\n        existingItems[itemIndex] = item;\n      }\n    });\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: existingItems\n    }), 'upsertFilterItems');\n  }, [apiRef]);\n  const deleteFilterItem = React.useCallback(itemToDelete => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = filterModel.items.filter(item => item.id !== itemToDelete.id);\n    if (items.length === filterModel.items.length) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'deleteFilterItem');\n  }, [apiRef]);\n  const showFilterPanel = React.useCallback((targetColumnField, panelId, labelId) => {\n    logger.debug('Displaying filter panel');\n    if (targetColumnField) {\n      const filterModel = gridFilterModelSelector(apiRef);\n      const filterItemsWithValue = filterModel.items.filter(item => {\n        if (item.value !== undefined) {\n          // Some filters like `isAnyOf` support array as `item.value`.\n          // If array is empty, we want to remove it from the filter model.\n          if (Array.isArray(item.value) && item.value.length === 0) {\n            return false;\n          }\n          return true;\n        }\n        const column = apiRef.current.getColumn(item.field);\n        const filterOperator = column.filterOperators?.find(operator => operator.value === item.operator);\n        const requiresFilterValue = typeof filterOperator?.requiresFilterValue === 'undefined' ? true : filterOperator?.requiresFilterValue;\n\n        // Operators like `isEmpty` don't have and don't require `item.value`.\n        // So we don't want to remove them from the filter model if `item.value === undefined`.\n        // See https://github.com/mui/mui-x/issues/5402\n        if (requiresFilterValue) {\n          return false;\n        }\n        return true;\n      });\n      let newFilterItems;\n      const filterItemOnTarget = filterItemsWithValue.find(item => item.field === targetColumnField);\n      const targetColumn = apiRef.current.getColumn(targetColumnField);\n      if (filterItemOnTarget) {\n        newFilterItems = filterItemsWithValue;\n      } else if (props.disableMultipleColumnsFiltering) {\n        newFilterItems = [cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      } else {\n        newFilterItems = [...filterItemsWithValue, cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      }\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n    apiRef.current.showPreferences(GridPreferencePanelsValue.filters, panelId, labelId);\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const hideFilterPanel = React.useCallback(() => {\n    logger.debug('Hiding filter panel');\n    apiRef.current.hidePreferences();\n  }, [apiRef, logger]);\n  const setFilterLogicOperator = React.useCallback(logicOperator => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.logicOperator === logicOperator) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      logicOperator\n    }), 'changeLogicOperator');\n  }, [apiRef]);\n  const setQuickFilterValues = React.useCallback(values => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (isDeepEqual(filterModel.quickFilterValues, values)) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      quickFilterValues: [...values]\n    }));\n  }, [apiRef]);\n  const setFilterModel = React.useCallback((model, reason) => {\n    const currentModel = gridFilterModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug('Setting filter model');\n      apiRef.current.updateControlState('filter', mergeStateWithFilterModel(model, props.disableMultipleColumnsFiltering, apiRef), reason);\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const filterApi = {\n    setFilterLogicOperator,\n    unstable_applyFilters: applyFilters,\n    deleteFilterItem,\n    upsertFilterItem,\n    upsertFilterItems,\n    setFilterModel,\n    showFilterPanel,\n    hideFilterPanel,\n    setQuickFilterValues,\n    ignoreDiacritics: props.ignoreDiacritics\n  };\n  useGridApiMethod(apiRef, filterApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const filterModelToExport = gridFilterModelSelector(apiRef);\n    const shouldExportFilterModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.filterModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.filter?.filterModel != null ||\n    // Export if the model is not equal to the default value\n    !isDeepEqual(filterModelToExport, getDefaultGridFilterModel());\n    if (!shouldExportFilterModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      filter: {\n        filterModel: filterModelToExport\n      }\n    });\n  }, [apiRef, props.filterModel, props.initialState?.filter?.filterModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const filterModel = context.stateToRestore.filter?.filterModel;\n    if (filterModel == null) {\n      return params;\n    }\n    apiRef.current.updateControlState('filter', mergeStateWithFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef), 'restoreState');\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.unstable_applyFilters]\n    });\n  }, [apiRef, props.disableMultipleColumnsFiltering]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.filters) {\n      const FilterPanel = props.slots.filterPanel;\n      return /*#__PURE__*/_jsx(FilterPanel, _extends({}, props.slotProps?.filterPanel));\n    }\n    return initialValue;\n  }, [props.slots.filterPanel, props.slotProps?.filterPanel]);\n  const {\n    getRowId\n  } = props;\n  const getRowsRef = useLazyRef(createMemoizedValues);\n  const flatFilteringMethod = React.useCallback(params => {\n    if (props.filterMode !== 'client' || !params.isRowMatchingFilters) {\n      return {\n        filteredRowsLookup: {},\n        filteredDescendantCountLookup: {}\n      };\n    }\n    const dataRowIdToModelLookup = gridRowsLookupSelector(apiRef);\n    const filteredRowsLookup = {};\n    const {\n      isRowMatchingFilters\n    } = params;\n    const filterCache = {};\n    const result = {\n      passingFilterItems: null,\n      passingQuickFilterValues: null\n    };\n    const rows = getRowsRef.current(apiRef.current.state.rows.dataRowIdToModelLookup);\n    for (let i = 0; i < rows.length; i += 1) {\n      const row = rows[i];\n      const id = getRowId ? getRowId(row) : row.id;\n      isRowMatchingFilters(row, undefined, result);\n      const isRowPassing = passFilterLogic([result.passingFilterItems], [result.passingQuickFilterValues], params.filterModel, apiRef, filterCache);\n      filteredRowsLookup[id] = isRowPassing;\n    }\n    const footerId = 'auto-generated-group-footer-root';\n    const footer = dataRowIdToModelLookup[footerId];\n    if (footer) {\n      filteredRowsLookup[footerId] = true;\n    }\n    return {\n      filteredRowsLookup,\n      filteredDescendantCountLookup: {}\n    };\n  }, [apiRef, props.filterMode, getRowId, getRowsRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'filtering', flatFilteringMethod);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'visibleRowsLookupCreation', getVisibleRowsLookup);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnsChange = React.useCallback(() => {\n    logger.debug('onColUpdated - GridColumns changed, applying filters');\n    const filterModel = gridFilterModelSelector(apiRef);\n    const columnsLookup = gridColumnLookupSelector(apiRef);\n    const newFilterItems = filterModel.items.filter(item => item.field && columnsLookup[item.field]);\n    if (newFilterItems.length < filterModel.items.length) {\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n  }, [apiRef, logger]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'filtering') {\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef]);\n  const updateVisibleRowsLookupState = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        visibleRowsLookup: getVisibleRowsLookupState(apiRef, state)\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n\n  // Do not call `apiRef.current.forceUpdate` to avoid re-render before updating the sorted rows.\n  // Otherwise, the state is not consistent during the render\n  useGridApiEventHandler(apiRef, 'rowsSet', updateFilteredRows);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', updateVisibleRowsLookupState);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.quickFilterValues && shouldQuickFilterExcludeHiddenColumns(filterModel)) {\n      // re-apply filters because the quick filter results may have changed\n      apiRef.current.unstable_applyFilters();\n    }\n  });\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.unstable_applyFilters();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.filterModel !== undefined) {\n      apiRef.current.setFilterModel(props.filterModel);\n    }\n  }, [apiRef, logger, props.filterModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventcallback } from '@mui/utils';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { gridFocusCellSelector, gridFocusColumnGroupHeaderSelector } from './gridFocusStateSelector';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { clamp } from '../../../utils/utils';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  }\n});\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const publishCellFocusOut = React.useCallback((cell, event) => {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if (focusedCell?.id === id && focusedCell?.field === field) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFilterFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header filter with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnGroupHeaderFocus = React.useCallback((field, depth, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell) {\n      apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        },\n        focus: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const getColumnGroupHeaderFocus = React.useCallback(() => gridFocusColumnGroupHeaderSelector(apiRef), [apiRef]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const pinnedRows = gridPinnedRowsSelector(apiRef);\n\n    // Include pinned rows as well\n    const currentPageRows = [].concat(pinnedRows.top || [], currentPage.rows, pinnedRows.bottom || []);\n    let rowIndexToFocus = currentPageRows.findIndex(row => row.id === id);\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n      if (rowIndexToFocus < currentPageRows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPageRows.length - 1);\n    const rowToFocus = currentPageRows[rowIndexToFocus];\n    if (!rowToFocus) {\n      return;\n    }\n    const colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || event.key === 'Shift' || isNavigationKey(event.key)) {\n      return;\n    }\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleColumnGroupHeaderFocus = React.useCallback(({\n    fields,\n    depth\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup !== null && focusedColumnGroup.depth === depth && fields.includes(focusedColumnGroup.field)) {\n      // This group cell has already been focused\n      return;\n    }\n    apiRef.current.setColumnGroupHeaderFocus(fields[0], depth, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback((_, event) => {\n    if (event.relatedTarget?.getAttribute('class')?.includes(gridClasses.columnHeader)) {\n      return;\n    }\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null,\n        columnHeaderFilter: null,\n        columnGroupHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseDown = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n      return;\n    }\n    if (cellParams?.id === focusedCell.id && cellParams?.field === focusedCell.field) {\n      return;\n    }\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n    if (cellElement?.contains(event.target)) {\n      return;\n    }\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate();\n\n      // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell?.id !== params.id || cell?.field !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    // If the focused cell is in a row which does not exist anymore, then remove the focus\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n    }\n  }, [apiRef]);\n  const handlePaginationModelChange = useEventcallback(() => {\n    const currentFocusedCell = gridFocusCellSelector(apiRef);\n    if (!currentFocusedCell) {\n      return;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const rowIsInCurrentPage = currentPage.rows.find(row => row.id === currentFocusedCell.id);\n    if (rowIsInCurrentPage) {\n      return;\n    }\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id: currentPage.rows[0].id,\n            field: visibleColumns[0].field\n          },\n          columnGroupHeader: null,\n          columnHeader: null,\n          columnHeaderFilter: null\n        }\n      });\n    });\n  });\n  const focusApi = {\n    setCellFocus,\n    setColumnHeaderFocus,\n    setColumnHeaderFilterFocus\n  };\n  const focusPrivateApi = {\n    moveFocusToRelativeCell,\n    setColumnGroupHeaderFocus,\n    getColumnGroupHeaderFocus\n  };\n  useGridApiMethod(apiRef, focusApi, 'public');\n  useGridApiMethod(apiRef, focusPrivateApi, 'private');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('mouseup', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('mouseup', handleDocumentClick);\n    };\n  }, [apiRef, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', handleCellMouseDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderFocus', handleColumnGroupHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n};","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { gridExpandedSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../colDef/gridCheckboxSelectionColDef';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nimport { gridFocusColumnGroupHeaderSelector } from '../focus';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../columnGrouping/gridColumnGroupsSelector';\nimport { gridHeaderFilteringEditFieldSelector, gridHeaderFilteringMenuSelector } from '../headerFiltering/gridHeaderFilteringSelectors';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { isEventTargetInPortal } from '../../../utils/domUtils';\nfunction enrichPageRowsWithPinnedRows(apiRef, rows) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef) || {};\n  return [...(pinnedRows.top || []), ...rows, ...(pinnedRows.bottom || [])];\n}\nconst getLeftColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  direction\n}) => {\n  if (direction === 'rtl') {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  } else if (direction === 'ltr') {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  }\n  return null;\n};\nconst getRightColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  direction\n}) => {\n  if (direction === 'rtl') {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  } else if (direction === 'ltr') {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  }\n  return null;\n};\n\n/**\n * @requires useGridSorting (method) - can be after\n * @requires useGridFilter (state) - can be after\n * @requires useGridColumns (state, method) - can be after\n * @requires useGridDimensions (method) - can be after\n * @requires useGridFocus (method) - can be after\n * @requires useGridScroll (method) - can be after\n * @requires useGridColumnSpanning (method) - can be after\n */\nexport const useGridKeyboardNavigation = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridKeyboardNavigation');\n  const initialCurrentPageRows = useGridVisibleRows(apiRef, props).rows;\n  const theme = useTheme();\n  const currentPageRows = React.useMemo(() => enrichPageRowsWithPinnedRows(apiRef, initialCurrentPageRows), [apiRef, initialCurrentPageRows]);\n  const headerFilteringEnabled = props.signature !== 'DataGrid' && props.headerFilters;\n\n  /**\n   * @param {number} colIndex Index of the column to focus\n   * @param {number} rowIndex index of the row to focus\n   * @param {string} closestColumnToUse Which closest column cell to use when the cell is spanned by `colSpan`.\n   * TODO replace with apiRef.current.moveFocusToRelativeCell()\n   */\n  const goToCell = React.useCallback((colIndex, rowId, closestColumnToUse = 'left') => {\n    const visibleSortedRows = gridExpandedSortedRowEntriesSelector(apiRef);\n    const nextCellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (nextCellColSpanInfo && nextCellColSpanInfo.spannedByColSpan) {\n      if (closestColumnToUse === 'left') {\n        colIndex = nextCellColSpanInfo.leftVisibleCellIndex;\n      } else if (closestColumnToUse === 'right') {\n        colIndex = nextCellColSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    // `scrollToIndexes` requires a rowIndex relative to all visible rows.\n    // Those rows do not include pinned rows, but pinned rows do not need scroll anyway.\n    const rowIndexRelativeToAllRows = visibleSortedRows.findIndex(row => row.id === rowId);\n    logger.debug(`Navigating to cell row ${rowIndexRelativeToAllRows}, col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex,\n      rowIndex: rowIndexRelativeToAllRows\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setCellFocus(rowId, field);\n  }, [apiRef, logger]);\n  const goToHeader = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef, logger]);\n  const goToHeaderFilter = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header filter col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFilterFocus(field, event);\n  }, [apiRef, logger]);\n  const goToGroupHeader = React.useCallback((colIndex, depth, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const {\n      field\n    } = apiRef.current.getVisibleColumns()[colIndex];\n    apiRef.current.setColumnGroupHeaderFocus(field, depth, event);\n  }, [apiRef, logger]);\n  const getRowIdFromIndex = React.useCallback(rowIndex => {\n    return currentPageRows[rowIndex]?.id;\n  }, [currentPageRows]);\n  const handleColumnHeaderKeyDown = React.useCallback((params, event) => {\n    const headerTitleNode = event.currentTarget.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n    const isFromInsideContent = !!headerTitleNode && headerTitleNode.contains(event.target);\n    if (isFromInsideContent && params.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // When focus is on a nested input, keyboard events have no effect to avoid conflicts with native events.\n      // There is one exception for the checkBoxHeader\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = currentPageRows.length > 0 ? 0 : null;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    const columnGroupMaxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (firstRowIndexInPage !== null) {\n            if (headerFilteringEnabled) {\n              goToHeaderFilter(colIndexBefore, event);\n            } else {\n              goToCell(colIndexBefore, getRowIdFromIndex(firstRowIndexInPage));\n            }\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (rightColIndex !== null) {\n            goToHeader(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (leftColIndex !== null) {\n            goToHeader(leftColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (columnGroupMaxDepth > 0) {\n            goToGroupHeader(colIndexBefore, columnGroupMaxDepth - 1, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeader(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeader(lastColIndex, event);\n          break;\n        }\n      case 'Enter':\n        {\n          if (event.ctrlKey || event.metaKey) {\n            apiRef.current.toggleColumnMenu(params.field);\n          }\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, headerFilteringEnabled, goToHeaderFilter, goToCell, getRowIdFromIndex, theme.direction, goToHeader, goToGroupHeader]);\n  const handleHeaderFilterKeyDown = React.useCallback((params, event) => {\n    const isEditing = gridHeaderFilteringEditFieldSelector(apiRef) === params.field;\n    const isHeaderMenuOpen = gridHeaderFilteringMenuSelector(apiRef) === params.field;\n    if (isEditing || isHeaderMenuOpen || !isNavigationKey(event.key)) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          const rowId = getRowIdFromIndex(firstRowIndexInPage);\n          if (firstRowIndexInPage !== null && rowId != null) {\n            goToCell(colIndexBefore, rowId);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (rightColIndex !== null) {\n            goToHeaderFilter(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (leftColIndex !== null) {\n            goToHeaderFilter(leftColIndex, event);\n          } else {\n            apiRef.current.setColumnHeaderFilterFocus(params.field, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          goToHeader(colIndexBefore, event);\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeaderFilter(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeaderFilter(lastColIndex, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeaderFilter, theme.direction, goToHeader, goToCell, getRowIdFromIndex]);\n  const handleColumnGroupHeaderKeyDown = React.useCallback((params, event) => {\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup === null) {\n      return;\n    }\n    const {\n      field: currentField,\n      depth: currentDepth\n    } = focusedColumnGroup;\n    const {\n      fields,\n      depth,\n      maxDepth\n    } = params;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const currentColIndex = apiRef.current.getColumnIndex(currentField);\n    const colIndexBefore = currentField ? apiRef.current.getColumnIndex(currentField) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (depth === maxDepth - 1) {\n            goToHeader(currentColIndex, event);\n          } else {\n            goToGroupHeader(currentColIndex, currentDepth + 1, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (depth > 0) {\n            goToGroupHeader(currentColIndex, currentDepth - 1, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const remainingRightColumns = fields.length - fields.indexOf(currentField) - 1;\n          if (currentColIndex + remainingRightColumns + 1 <= lastColIndex) {\n            goToGroupHeader(currentColIndex + remainingRightColumns + 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const remainingLeftColumns = fields.indexOf(currentField);\n          if (currentColIndex - remainingLeftColumns - 1 >= firstColIndex) {\n            goToGroupHeader(currentColIndex - remainingLeftColumns - 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToGroupHeader(firstColIndex, currentDepth, event);\n          break;\n        }\n      case 'End':\n        {\n          goToGroupHeader(lastColIndex, currentDepth, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeader, goToGroupHeader, goToCell, getRowIdFromIndex]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // Get the most recent params because the cell mode may have changed by another listener\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n    if (cellParams.cellMode === GridCellModes.Edit || !isNavigationKey(event.key)) {\n      return;\n    }\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (currentPageRows.length === 0) {\n      return;\n    }\n    const direction = theme.direction;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const rowIndexBefore = currentPageRows.findIndex(row => row.id === params.id);\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          // \"Enter\" is only triggered by the row / cell editing feature\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore + 1));\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (rowIndexBefore > firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore - 1));\n          } else if (headerFilteringEnabled) {\n            goToHeaderFilter(colIndexBefore, event);\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction\n          });\n          if (rightColIndex !== null) {\n            goToCell(rightColIndex, getRowIdFromIndex(rowIndexBefore), direction === 'rtl' ? 'left' : 'right');\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction\n          });\n          if (leftColIndex !== null) {\n            goToCell(leftColIndex, getRowIdFromIndex(rowIndexBefore), direction === 'rtl' ? 'right' : 'left');\n          }\n          break;\n        }\n      case 'Tab':\n        {\n          // \"Tab\" is only triggered by the row / cell editing feature\n          if (event.shiftKey && colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore), 'left');\n          } else if (!event.shiftKey && colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n          break;\n        }\n      case ' ':\n        {\n          const field = params.field;\n          if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n            break;\n          }\n          const colDef = params.colDef;\n          if (colDef &&\n          // `GRID_TREE_DATA_GROUPING_FIELD` from the Pro package\n          colDef.field === '__tree_data_group__') {\n            break;\n          }\n          if (!event.shiftKey && rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageUp':\n        {\n          // Go to the first row before going to header\n          const nextRowIndex = Math.max(rowIndexBefore - viewportPageSize, firstRowIndexInPage);\n          if (nextRowIndex !== rowIndexBefore && nextRowIndex >= firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(nextRowIndex));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'Home':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(firstColIndex, getRowIdFromIndex(firstRowIndexInPage));\n          } else {\n            goToCell(firstColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      case 'End':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(lastColIndex, getRowIdFromIndex(lastRowIndexInPage));\n          } else {\n            goToCell(lastColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows, theme.direction, goToCell, getRowIdFromIndex, headerFilteringEnabled, goToHeaderFilter, goToHeader]);\n  const checkIfCanStartEditing = React.useCallback((initialValue, {\n    event\n  }) => {\n    if (event.key === ' ') {\n      // Space scrolls to the last row\n      return false;\n    }\n    return initialValue;\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'canStartEditing', checkIfCanStartEditing);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'headerFilterKeyDown', handleHeaderFilterKeyDown);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderKeyDown', handleColumnGroupHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel } from './gridPaginationUtils';\nimport { useGridPaginationModel } from './useGridPaginationModel';\nimport { useGridRowCount } from './useGridRowCount';\nimport { useGridPaginationMeta } from './useGridPaginationMeta';\nexport const paginationStateInitializer = (state, props) => {\n  const paginationModel = _extends({}, getDefaultGridPaginationModel(props.autoPageSize), props.paginationModel ?? props.initialState?.pagination?.paginationModel);\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, props.signature);\n  const rowCount = props.rowCount ?? props.initialState?.pagination?.rowCount;\n  const meta = props.paginationMeta ?? props.initialState?.pagination?.meta ?? {};\n  return _extends({}, state, {\n    pagination: {\n      paginationModel,\n      rowCount,\n      meta\n    }\n  });\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPagination = (apiRef, props) => {\n  useGridPaginationMeta(apiRef, props);\n  useGridPaginationModel(apiRef, props);\n  useGridRowCount(apiRef, props);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPreferencePanelStateSelector } from './gridPreferencePanelSelector';\nexport const preferencePanelStateInitializer = (state, props) => _extends({}, state, {\n  preferencePanel: props.initialState?.preferencePanel ?? {\n    open: false\n  }\n});\n\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\nexport const useGridPreferencesPanel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n  const hideTimeout = React.useRef();\n  const immediateTimeout = React.useRef();\n\n  /**\n   * API METHODS\n   */\n  const hidePreferences = React.useCallback(() => {\n    logger.debug('Hiding Preferences Panel');\n    const preferencePanelState = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (preferencePanelState.openedPanelValue) {\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: {\n        open: false\n      }\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n\n  // This is to prevent the preferences from closing when you open a select box or another panel,\n  // The issue is in MUI core V4 => Fixed in V5\n  const doNotHidePanel = React.useCallback(() => {\n    immediateTimeout.current = setTimeout(() => clearTimeout(hideTimeout.current), 0);\n  }, []);\n\n  // This is a hack for the issue with Core V4, by delaying hiding the panel on the clickAwayListener,\n  // we can cancel the action if the trigger element still need the panel...\n  const hidePreferencesDelayed = React.useCallback(() => {\n    hideTimeout.current = setTimeout(hidePreferences, 100);\n  }, [hidePreferences]);\n  const showPreferences = React.useCallback((newValue, panelId, labelId) => {\n    logger.debug('Opening Preferences Panel');\n    doNotHidePanel();\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue,\n        panelId,\n        labelId\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, doNotHidePanel, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences: hidePreferencesDelayed\n  }, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n    const shouldExportPreferencePanel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the panel was initialized\n    props.initialState?.preferencePanel != null ||\n    // Always export if the panel is opened\n    preferencePanelToExport.open;\n    if (!shouldExportPreferencePanel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef, props.initialState?.preferencePanel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(hideTimeout.current);\n      clearTimeout(immediateTimeout.current);\n    };\n  }, []);\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"field\"],\n  _excluded2 = [\"id\", \"field\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isPrintableKey, isPasteShortcut } from '../../../utils/keyboardUtils';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsDataRowIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { deepClone } from '../../../utils/utils';\nimport { GridCellEditStartReasons, GridCellEditStopReasons } from '../../../models/params/gridEditCellParams';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\nexport const useGridCellEditing = (apiRef, props) => {\n  const [cellModesModel, setCellModesModel] = React.useState({});\n  const cellModesModelRef = React.useRef(cellModesModel);\n  const prevCellModesModel = React.useRef({});\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    cellModesModel: cellModesModelProp,\n    onCellModesModelChange\n  } = props;\n  const runIfEditModeIsCell = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) !== mode) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (params.cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('cellEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.View) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStopReasons.cellFocusOut\n    });\n    apiRef.current.publishEvent('cellEditStop', newParams, event);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is deprecated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridCellEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        reason = event.shiftKey ? GridCellEditStopReasons.shiftTabKeyDown : GridCellEditStopReasons.tabKeyDown;\n        event.preventDefault(); // Prevent going to the next element in the tab sequence\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n        apiRef.current.publishEvent('cellEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'cell'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridCellEditStartReasons.pasteKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridCellEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason,\n          key: event.key\n        });\n        apiRef.current.publishEvent('cellEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleCellEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startCellEditModeParams = {\n      id,\n      field\n    };\n    if (reason === GridCellEditStartReasons.printableKeyDown || reason === GridCellEditStartReasons.deleteKeyDown || reason === GridCellEditStartReasons.pasteKeyDown) {\n      startCellEditModeParams.deleteValue = true;\n    }\n    apiRef.current.startCellEditMode(startCellEditModeParams);\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    let cellToFocusAfter;\n    if (reason === GridCellEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridCellEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridCellEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopCellEditMode({\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  const runIfNoFieldErrors = callback => async (...args) => {\n    if (callback) {\n      const {\n        id,\n        field\n      } = args[0];\n      const editRowsState = apiRef.current.state.editRows;\n      const hasFieldErrors = editRowsState[id][field]?.error;\n      if (!hasFieldErrors) {\n        callback(...args);\n      }\n    }\n  };\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsCell(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsCell(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsCell(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellEditStart', runIfEditModeIsCell(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', runIfEditModeIsCell(handleCellEditStop));\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', runIfNoFieldErrors(props.onCellEditStop));\n  const getCellMode = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && editingState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]);\n  const updateCellModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.cellModesModel;\n    if (onCellModesModelChange && isNewModelDifferentFromProp) {\n      onCellModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.cellModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setCellModesModel(newModel);\n    cellModesModelRef.current = newModel;\n    apiRef.current.publishEvent('cellModesModelChange', newModel);\n  });\n  const updateFieldInCellModesModel = React.useCallback((id, field, newProps) => {\n    // We use the ref because it always contain the up-to-date value, different from the state\n    // that needs a rerender to reflect the new value\n    const newModel = _extends({}, cellModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newModel[id], {\n        [field]: _extends({}, newProps)\n      });\n    } else {\n      const _newModel$id = newModel[id],\n        otherFields = _objectWithoutPropertiesLoose(_newModel$id, [field].map(_toPropertyKey)); // Ensure that we have a new object, not a reference\n      newModel[id] = otherFields;\n      if (Object.keys(newModel[id]).length === 0) {\n        delete newModel[id];\n      }\n    }\n    updateCellModesModel(newModel);\n  }, [updateCellModesModel]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.View);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.Edit\n    }, other));\n  }, [throwIfNotEditable, throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStartCellEditMode = useEventCallback(params => {\n    const {\n      id,\n      field,\n      deleteValue,\n      initialValue\n    } = params;\n    let newValue = apiRef.current.getCellValue(id, field);\n    if (deleteValue) {\n      const fieldType = apiRef.current.getColumn(field).type;\n      switch (fieldType) {\n        case 'boolean':\n          newValue = false;\n          break;\n        case 'date':\n        case 'dateTime':\n        case 'number':\n          newValue = undefined;\n          break;\n        case 'singleSelect':\n          newValue = null;\n          break;\n        case 'string':\n        default:\n          newValue = '';\n          break;\n      }\n    } else if (initialValue) {\n      newValue = initialValue;\n    }\n    const newProps = {\n      value: newValue,\n      error: false,\n      isProcessingProps: false\n    };\n    updateOrDeleteFieldState(id, field, newProps);\n    apiRef.current.setCellFocus(id, field);\n  });\n  const stopCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.View\n    }, other));\n  }, [throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStopCellEditMode = useEventCallback(async params => {\n    const {\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter = 'none'\n    } = params;\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    const finishCellEditMode = () => {\n      updateOrDeleteFieldState(id, field, null);\n      updateFieldInCellModesModel(id, field, null);\n      if (cellToFocusAfter !== 'none') {\n        apiRef.current.moveFocusToRelativeCell(id, field, cellToFocusAfter);\n      }\n    };\n    if (ignoreModifications) {\n      finishCellEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      error,\n      isProcessingProps\n    } = editingState[id][field];\n    if (error || isProcessingProps) {\n      // Attempt to change cell mode to \"view\" was not successful\n      // Update previous mode to allow another attempt\n      prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n      // Revert the mode in the cellModesModel prop back to \"edit\"\n      updateFieldInCellModesModel(id, field, {\n        mode: GridCellModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n        // Revert the mode in the cellModesModel prop back to \"edit\"\n        updateFieldInCellModesModel(id, field, {\n          mode: GridCellModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n      try {\n        const row = apiRef.current.getRow(id);\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishCellEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishCellEditMode();\n    }\n  });\n  const setCellEditingEditCellValue = React.useCallback(async params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (column.preProcessEditCellProps) {\n      const hasChanged = value !== editingState[id][field].value;\n      newProps = _extends({}, newProps, {\n        isProcessingProps: true\n      });\n      updateOrDeleteFieldState(id, field, newProps);\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row,\n        props: newProps,\n        hasChanged\n      }));\n    }\n\n    // Check again if the cell is in edit mode because the user may have\n    // discarded the changes while the props were being processed.\n    if (apiRef.current.getCellMode(id, field) === GridCellModes.View) {\n      return false;\n    }\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    newProps = _extends({}, newProps, {\n      isProcessingProps: false\n    });\n    // We don't update the value with the one coming from the props pre-processing\n    // because when the promise resolves it may be already outdated. The only\n    // exception to this rule is when there's no pre-processing.\n    newProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n    updateOrDeleteFieldState(id, field, newProps);\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return !editingState[id]?.[field]?.error;\n  }, [apiRef, throwIfNotEditable, throwIfNotInMode, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromCellEditing = React.useCallback((id, field) => {\n    const column = apiRef.current.getColumn(field);\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id] || !editingState[id][field]) {\n      return apiRef.current.getRow(id);\n    }\n    const {\n      value\n    } = editingState[id][field];\n    return column.valueSetter ? column.valueSetter(value, row, column, apiRef) : _extends({}, row, {\n      [field]: value\n    });\n  }, [apiRef]);\n  const editingApi = {\n    getCellMode,\n    startCellEditMode,\n    stopCellEditMode\n  };\n  const editingPrivateApi = {\n    setCellEditingEditCellValue,\n    getRowWithUpdatedValuesFromCellEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (cellModesModelProp) {\n      updateCellModesModel(cellModesModelProp);\n    }\n  }, [cellModesModelProp, updateCellModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopCellEditMode may change it later\n    const copyOfPrevCellModes = prevCellModesModel.current;\n    prevCellModesModel.current = deepClone(cellModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(cellModesModel).forEach(([id, fields]) => {\n      Object.entries(fields).forEach(([field, params]) => {\n        const prevMode = copyOfPrevCellModes[id]?.[field]?.mode || GridCellModes.View;\n        const originalId = idToIdLookup[id] ?? id;\n        if (params.mode === GridCellModes.Edit && prevMode === GridCellModes.View) {\n          updateStateToStartCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        } else if (params.mode === GridCellModes.View && prevMode === GridCellModes.Edit) {\n          updateStateToStopCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        }\n      });\n    });\n  }, [apiRef, cellModesModel, updateStateToStartCellEditMode, updateStateToStopCellEditMode]);\n};","import _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\"],\n  _excluded2 = [\"id\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridRowModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isPrintableKey, isPasteShortcut } from '../../../utils/keyboardUtils';\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from '../columns/gridColumnsSelector';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsDataRowIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { deepClone } from '../../../utils/utils';\nimport { GridRowEditStopReasons, GridRowEditStartReasons } from '../../../models/params/gridRowParams';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../../../colDef';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\nexport const useGridRowEditing = (apiRef, props) => {\n  const [rowModesModel, setRowModesModel] = React.useState({});\n  const rowModesModelRef = React.useRef(rowModesModel);\n  const prevRowModesModel = React.useRef({});\n  const focusTimeout = React.useRef();\n  const nextFocusedCell = React.useRef(null);\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    rowModesModel: rowModesModelProp,\n    onRowModesModelChange\n  } = props;\n  const runIfEditModeIsRow = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, mode) => {\n    if (apiRef.current.getRowMode(id) !== mode) {\n      throw new Error(`MUI X: The row with id=${id} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const hasFieldsWithErrors = React.useCallback(rowId => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return Object.values(editingState[rowId]).some(fieldProps => fieldProps.error);\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.Edit) {\n      return;\n    }\n    const rowParams = apiRef.current.getRowParams(params.id);\n    const newParams = _extends({}, rowParams, {\n      field: params.field,\n      reason: GridRowEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('rowEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n      return;\n    }\n    // The mechanism to detect if we can stop editing a row is different from\n    // the cell editing. Instead of triggering it when clicking outside a cell,\n    // we must check if another cell in the same row was not clicked. To achieve\n    // that, first we keep track of all cells that gained focus. When a cell loses\n    // focus we check if the next cell that received focus is from a different row.\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(() => {\n      if (nextFocusedCell.current?.id !== params.id) {\n        // The row might have been deleted during the click\n        if (!apiRef.current.getRow(params.id)) {\n          return;\n        }\n\n        // The row may already changed its mode\n        if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n          return;\n        }\n        if (hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason: GridRowEditStopReasons.rowFocusOut\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    });\n  }, [apiRef, hasFieldsWithErrors]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(focusTimeout.current);\n    };\n  }, []);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridRowModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is deprecated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridRowEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        const columnFields = gridVisibleColumnFieldsSelector(apiRef).filter(field => {\n          const column = apiRef.current.getColumn(field);\n          if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n            return true;\n          }\n          return apiRef.current.isCellEditable(apiRef.current.getCellParams(params.id, field));\n        });\n        if (event.shiftKey) {\n          if (params.field === columnFields[0]) {\n            // Exit if user pressed Shift+Tab on the first field\n            reason = GridRowEditStopReasons.shiftTabKeyDown;\n          }\n        } else if (params.field === columnFields[columnFields.length - 1]) {\n          // Exit if user pressed Tab on the last field\n          reason = GridRowEditStopReasons.tabKeyDown;\n        }\n\n        // Always prevent going to the next element in the tab sequence because the focus is\n        // handled manually to support edit components rendered inside Portals\n        event.preventDefault();\n        if (!reason) {\n          const index = columnFields.findIndex(field => field === params.field);\n          const nextFieldToFocus = columnFields[event.shiftKey ? index - 1 : index + 1];\n          apiRef.current.setCellFocus(params.id, nextFieldToFocus);\n        }\n      }\n      if (reason) {\n        if (reason !== GridRowEditStopReasons.escapeKeyDown && hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const newParams = _extends({}, apiRef.current.getRowParams(params.id), {\n          reason,\n          field: params.field\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'row'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridRowEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason\n        });\n        apiRef.current.publishEvent('rowEditStart', newParams, event);\n      }\n    }\n  }, [apiRef, hasFieldsWithErrors]);\n  const handleRowEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startRowEditModeParams = {\n      id,\n      fieldToFocus: field\n    };\n    if (reason === GridRowEditStartReasons.printableKeyDown || reason === GridRowEditStartReasons.deleteKeyDown) {\n      startRowEditModeParams.deleteValue = !!field;\n    }\n    apiRef.current.startRowEditMode(startRowEditModeParams);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback(params => {\n    const {\n      id,\n      reason,\n      field\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    let cellToFocusAfter;\n    if (reason === GridRowEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridRowEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridRowEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopRowEditMode({\n      id,\n      ignoreModifications,\n      field,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsRow(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfEditModeIsRow(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsRow(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsRow(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'rowEditStart', runIfEditModeIsRow(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', runIfEditModeIsRow(handleRowEditStop));\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && Object.keys(editingState[id]).length > 0;\n    return isEditing ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const updateRowModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.rowModesModel;\n    if (onRowModesModelChange && isNewModelDifferentFromProp) {\n      onRowModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.rowModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setRowModesModel(newModel);\n    rowModesModelRef.current = newModel;\n    apiRef.current.publishEvent('rowModesModelChange', newModel);\n  });\n  const updateRowInRowModesModel = React.useCallback((id, newProps) => {\n    const newModel = _extends({}, rowModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newProps);\n    } else {\n      delete newModel[id];\n    }\n    updateRowModesModel(newModel);\n  }, [updateRowModesModel]);\n  const updateOrDeleteRowState = React.useCallback((id, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = newProps;\n      } else {\n        delete newEditingState[id];\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotInMode(id, GridRowModes.View);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.Edit\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStartRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      fieldToFocus,\n      deleteValue,\n      initialValue\n    } = params;\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const newProps = columnFields.reduce((acc, field) => {\n      const cellParams = apiRef.current.getCellParams(id, field);\n      if (!cellParams.isEditable) {\n        return acc;\n      }\n      let newValue = apiRef.current.getCellValue(id, field);\n      if (fieldToFocus === field && (deleteValue || initialValue)) {\n        newValue = deleteValue ? '' : initialValue;\n      }\n      acc[field] = {\n        value: newValue,\n        error: false,\n        isProcessingProps: false\n      };\n      return acc;\n    }, {});\n    updateOrDeleteRowState(id, newProps);\n    if (fieldToFocus) {\n      apiRef.current.setCellFocus(id, fieldToFocus);\n    }\n  });\n  const stopRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, GridRowModes.Edit);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.View\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStopRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      ignoreModifications,\n      field: focusedField,\n      cellToFocusAfter = 'none'\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    const finishRowEditMode = () => {\n      if (cellToFocusAfter !== 'none' && focusedField) {\n        apiRef.current.moveFocusToRelativeCell(id, focusedField, cellToFocusAfter);\n      }\n      updateOrDeleteRowState(id, null);\n      updateRowInRowModesModel(id, null);\n    };\n    if (ignoreModifications) {\n      finishRowEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    const isSomeFieldProcessingProps = Object.values(editingState[id]).some(fieldProps => fieldProps.isProcessingProps);\n    if (isSomeFieldProcessingProps) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      return;\n    }\n    if (hasFieldsWithErrors(id)) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      // Revert the mode in the rowModesModel prop back to \"edit\"\n      updateRowInRowModesModel(id, {\n        mode: GridRowModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevRowModesModel.current[id].mode = GridRowModes.Edit;\n        // Revert the mode in the rowModesModel prop back to \"edit\"\n        updateRowInRowModesModel(id, {\n          mode: GridRowModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n      try {\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishRowEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishRowEditMode();\n    }\n  });\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (!column.preProcessEditCellProps) {\n      updateOrDeleteFieldState(id, field, newProps);\n    }\n    return new Promise(resolve => {\n      const promises = [];\n      if (column.preProcessEditCellProps) {\n        const hasChanged = newProps.value !== editingState[id][field].value;\n        newProps = _extends({}, newProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, field, newProps);\n        const _editingState$id = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id, [field].map(_toPropertyKey));\n        const promise = Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: newProps,\n          hasChanged,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          // We don't reuse the value from the props pre-processing because when the\n          // promise resolves it may be already outdated. The only exception to this rule\n          // is when there's no pre-processing.\n          processedProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n          updateOrDeleteFieldState(id, field, processedProps);\n        });\n        promises.push(promise);\n      }\n      Object.entries(editingState[id]).forEach(([thisField, fieldProps]) => {\n        if (thisField === field) {\n          return;\n        }\n        const fieldColumn = apiRef.current.getColumn(thisField);\n        if (!fieldColumn.preProcessEditCellProps) {\n          return;\n        }\n        fieldProps = _extends({}, fieldProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, thisField, fieldProps);\n        editingState = gridEditRowsStateSelector(apiRef.current.state);\n        const _editingState$id2 = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id2, [thisField].map(_toPropertyKey));\n        const promise = Promise.resolve(fieldColumn.preProcessEditCellProps({\n          id,\n          row,\n          props: fieldProps,\n          hasChanged: false,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          updateOrDeleteFieldState(id, thisField, processedProps);\n        });\n        promises.push(promise);\n      });\n      Promise.all(promises).then(() => {\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          resolve(!editingState[id][field].error);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }, [apiRef, throwIfNotEditable, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromRowEditing = React.useCallback(id => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id]) {\n      return apiRef.current.getRow(id);\n    }\n    let rowUpdate = _extends({}, row);\n    Object.entries(editingState[id]).forEach(([field, fieldProps]) => {\n      const column = apiRef.current.getColumn(field);\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter(fieldProps.value, rowUpdate, column, apiRef);\n      } else {\n        rowUpdate[field] = fieldProps.value;\n      }\n    });\n    return rowUpdate;\n  }, [apiRef]);\n  const editingApi = {\n    getRowMode,\n    startRowEditMode,\n    stopRowEditMode\n  };\n  const editingPrivateApi = {\n    setRowEditingEditCellValue,\n    getRowWithUpdatedValuesFromRowEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (rowModesModelProp) {\n      updateRowModesModel(rowModesModelProp);\n    }\n  }, [rowModesModelProp, updateRowModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopRowEditMode may change it later\n    const copyOfPrevRowModesModel = prevRowModesModel.current;\n    prevRowModesModel.current = deepClone(rowModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(rowModesModel).forEach(([id, params]) => {\n      const prevMode = copyOfPrevRowModesModel[id]?.mode || GridRowModes.View;\n      const originalId = idToIdLookup[id] ?? id;\n      if (params.mode === GridRowModes.Edit && prevMode === GridRowModes.View) {\n        updateStateToStartRowEditMode(_extends({\n          id: originalId\n        }, params));\n      } else if (params.mode === GridRowModes.View && prevMode === GridRowModes.Edit) {\n        updateStateToStopRowEditMode(_extends({\n          id: originalId\n        }, params));\n      }\n    });\n  }, [apiRef, rowModesModel, updateStateToStartRowEditMode, updateStateToStopRowEditMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridCellEditing } from './useGridCellEditing';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { useGridRowEditing } from './useGridRowEditing';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isAutoGeneratedRow } from '../rows/gridRowsUtils';\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (isAutoGeneratedRow(params.rowNode)) {\n      return false;\n    }\n    if (!params.colDef.editable) {\n      return false;\n    }\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n    return true;\n  }, [isCellEditableProp]);\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    // To run the callback immediately without waiting the timeout\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.setRowEditingEditCellValue : apiRef.current.setCellEditingEditCellValue;\n\n        // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return editingState[id]?.[field] ?? null;\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  const editingSharedPrivateApi = {\n    runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'public');\n  useGridApiMethod(apiRef, editingSharedPrivateApi, 'private');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowCountSelector, gridRowsLookupSelector, gridRowTreeSelector, gridRowGroupingNameSelector, gridRowTreeDepthsSelector, gridDataRowIdsSelector, gridRowsDataRowIdToIdLookupSelector, gridRowMaximumTreeDepthSelector } from './gridRowsSelector';\nimport { useTimeout } from '../../utils/useTimeout';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridSortedRowIdsSelector } from '../sorting/gridSortingSelector';\nimport { gridFilteredRowsLookupSelector } from '../filter/gridFilterSelector';\nimport { getTreeNodeDescendants, createRowsInternalCache, getRowsStateFromCache, isAutoGeneratedRow, GRID_ROOT_GROUP_ID, GRID_ID_AUTOGENERATED, updateCacheWithNewRows, getTopLevelRowCount, getRowIdFromRowModel } from './gridRowsUtils';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nexport const rowsStateInitializer = (state, props, apiRef) => {\n  apiRef.current.caches.rows = createRowsInternalCache({\n    rows: props.rows,\n    getRowId: props.getRowId,\n    loading: props.loading,\n    rowCount: props.rowCount\n  });\n  return _extends({}, state, {\n    rows: getRowsStateFromCache({\n      apiRef,\n      rowCountProp: props.rowCount,\n      loadingProp: props.loading,\n      previousTree: null,\n      previousTreeDepths: null\n    })\n  });\n};\nexport const useGridRows = (apiRef, props) => {\n  if (process.env.NODE_ENV !== 'production') {\n    try {\n      // Freeze the `rows` prop so developers have a fast failure if they try to use Array.prototype.push().\n      Object.freeze(props.rows);\n    } catch (error) {\n      // Sometimes, it's impossible to freeze, so we give up on it.\n    }\n  }\n  const logger = useGridLogger(apiRef, 'useGridRows');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const lastUpdateMs = React.useRef(Date.now());\n  const lastRowCount = React.useRef(props.rowCount);\n  const timeout = useTimeout();\n  const getRow = React.useCallback(id => {\n    const model = gridRowsLookupSelector(apiRef)[id];\n    if (model) {\n      return model;\n    }\n    const node = apiRef.current.getRowNode(id);\n    if (node && isAutoGeneratedRow(node)) {\n      return {\n        [GRID_ID_AUTOGENERATED]: id\n      };\n    }\n    return null;\n  }, [apiRef]);\n  const getRowIdProp = props.getRowId;\n  const getRowId = React.useCallback(row => {\n    if (GRID_ID_AUTOGENERATED in row) {\n      return row[GRID_ID_AUTOGENERATED];\n    }\n    if (getRowIdProp) {\n      return getRowIdProp(row);\n    }\n    return row.id;\n  }, [getRowIdProp]);\n  const lookup = React.useMemo(() => currentPage.rows.reduce((acc, {\n    id\n  }, index) => {\n    acc[id] = index;\n    return acc;\n  }, {}), [currentPage.rows]);\n  const throttledRowsChange = React.useCallback(({\n    cache,\n    throttle\n  }) => {\n    const run = () => {\n      lastUpdateMs.current = Date.now();\n      apiRef.current.setState(state => _extends({}, state, {\n        rows: getRowsStateFromCache({\n          apiRef,\n          rowCountProp: props.rowCount,\n          loadingProp: props.loading,\n          previousTree: gridRowTreeSelector(apiRef),\n          previousTreeDepths: gridRowTreeDepthsSelector(apiRef)\n        })\n      }));\n      apiRef.current.publishEvent('rowsSet');\n      apiRef.current.forceUpdate();\n    };\n    timeout.clear();\n    apiRef.current.caches.rows = cache;\n    if (!throttle) {\n      run();\n      return;\n    }\n    const throttleRemainingTimeMs = props.throttleRowsMs - (Date.now() - lastUpdateMs.current);\n    if (throttleRemainingTimeMs > 0) {\n      timeout.start(throttleRemainingTimeMs, run);\n      return;\n    }\n    run();\n  }, [props.throttleRowsMs, props.rowCount, props.loading, apiRef, timeout]);\n\n  /**\n   * API METHODS\n   */\n  const setRows = React.useCallback(rows => {\n    logger.debug(`Updating all rows, new length ${rows.length}`);\n    const cache = createRowsInternalCache({\n      rows,\n      getRowId: props.getRowId,\n      loading: props.loading,\n      rowCount: props.rowCount\n    });\n    const prevCache = apiRef.current.caches.rows;\n    cache.rowsBeforePartialUpdates = prevCache.rowsBeforePartialUpdates;\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [logger, props.getRowId, props.loading, props.rowCount, throttledRowsChange, apiRef]);\n  const updateRows = React.useCallback(updates => {\n    if (props.signature === GridSignature.DataGrid && updates.length > 1) {\n      throw new Error(['MUI X: You cannot update several rows at once in `apiRef.current.updateRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    const nonPinnedRowsUpdates = [];\n    updates.forEach(update => {\n      const id = getRowIdFromRowModel(update, props.getRowId, 'A row was provided without id when calling updateRows():');\n      const rowNode = apiRef.current.getRowNode(id);\n      if (rowNode?.type === 'pinnedRow') {\n        // @ts-ignore because otherwise `release:build` doesn't work\n        const pinnedRowsCache = apiRef.current.caches.pinnedRows;\n        const prevModel = pinnedRowsCache.idLookup[id];\n        if (prevModel) {\n          pinnedRowsCache.idLookup[id] = _extends({}, prevModel, update);\n        }\n      } else {\n        nonPinnedRowsUpdates.push(update);\n      }\n    });\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows\n    });\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [props.signature, props.getRowId, throttledRowsChange, apiRef]);\n  const getRowModels = React.useCallback(() => {\n    const dataRows = gridDataRowIdsSelector(apiRef);\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    return new Map(dataRows.map(id => [id, idRowsLookup[id] ?? {}]));\n  }, [apiRef]);\n  const getRowsCount = React.useCallback(() => gridRowCountSelector(apiRef), [apiRef]);\n  const getAllRowIds = React.useCallback(() => gridDataRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndexRelativeToVisibleRows = React.useCallback(id => lookup[id], [lookup]);\n  const setRowChildrenExpansion = React.useCallback((id, isExpanded) => {\n    const currentNode = apiRef.current.getRowNode(id);\n    if (!currentNode) {\n      throw new Error(`MUI X: No row with id #${id} found.`);\n    }\n    if (currentNode.type !== 'group') {\n      throw new Error('MUI X: Only group nodes can be expanded or collapsed.');\n    }\n    const newNode = _extends({}, currentNode, {\n      childrenExpanded: isExpanded\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [id]: newNode\n          })\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('rowExpansionChange', newNode);\n  }, [apiRef]);\n  const getRowNode = React.useCallback(id => gridRowTreeSelector(apiRef)[id] ?? null, [apiRef]);\n  const getRowGroupChildren = React.useCallback(({\n    skipAutoGeneratedRows = true,\n    groupId,\n    applySorting,\n    applyFiltering\n  }) => {\n    const tree = gridRowTreeSelector(apiRef);\n    let children;\n    if (applySorting) {\n      const groupNode = tree[groupId];\n      if (!groupNode) {\n        return [];\n      }\n      const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n      children = [];\n      const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n      for (let index = startIndex; index < sortedRowIds.length && tree[sortedRowIds[index]].depth > groupNode.depth; index += 1) {\n        const id = sortedRowIds[index];\n        if (!skipAutoGeneratedRows || !isAutoGeneratedRow(tree[id])) {\n          children.push(id);\n        }\n      }\n    } else {\n      children = getTreeNodeDescendants(tree, groupId, skipAutoGeneratedRows);\n    }\n    if (applyFiltering) {\n      const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n      children = children.filter(childId => filteredRowsLookup[childId] !== false);\n    }\n    return children;\n  }, [apiRef]);\n  const setRowIndex = React.useCallback((rowId, targetIndex) => {\n    const node = apiRef.current.getRowNode(rowId);\n    if (!node) {\n      throw new Error(`MUI X: No row with id #${rowId} found.`);\n    }\n    if (node.parent !== GRID_ROOT_GROUP_ID) {\n      throw new Error(`MUI X: The row reordering do not support reordering of grouped rows yet.`);\n    }\n    if (node.type !== 'leaf') {\n      throw new Error(`MUI X: The row reordering do not support reordering of footer or grouping rows.`);\n    }\n    apiRef.current.setState(state => {\n      const group = gridRowTreeSelector(state, apiRef.current.instanceId)[GRID_ROOT_GROUP_ID];\n      const allRows = group.children;\n      const oldIndex = allRows.findIndex(row => row === rowId);\n      if (oldIndex === -1 || oldIndex === targetIndex) {\n        return state;\n      }\n      logger.debug(`Moving row ${rowId} to index ${targetIndex}`);\n      const updatedRows = [...allRows];\n      updatedRows.splice(targetIndex, 0, updatedRows.splice(oldIndex, 1)[0]);\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [GRID_ROOT_GROUP_ID]: _extends({}, group, {\n              children: updatedRows\n            })\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, logger]);\n  const replaceRows = React.useCallback((firstRowToRender, newRows) => {\n    if (props.signature === GridSignature.DataGrid && newRows.length > 1) {\n      throw new Error(['MUI X: You cannot replace rows using `apiRef.current.unstable_replaceRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    if (newRows.length === 0) {\n      return;\n    }\n    const treeDepth = gridRowMaximumTreeDepthSelector(apiRef);\n    if (treeDepth > 1) {\n      throw new Error('`apiRef.current.unstable_replaceRows` is not compatible with tree data and row grouping');\n    }\n    const tree = _extends({}, gridRowTreeSelector(apiRef));\n    const dataRowIdToModelLookup = _extends({}, gridRowsLookupSelector(apiRef));\n    const dataRowIdToIdLookup = _extends({}, gridRowsDataRowIdToIdLookupSelector(apiRef));\n    const rootGroup = tree[GRID_ROOT_GROUP_ID];\n    const rootGroupChildren = [...rootGroup.children];\n    const seenIds = new Set();\n    for (let i = 0; i < newRows.length; i += 1) {\n      const rowModel = newRows[i];\n      const rowId = getRowIdFromRowModel(rowModel, props.getRowId, 'A row was provided without id when calling replaceRows().');\n      const [removedRowId] = rootGroupChildren.splice(firstRowToRender + i, 1, rowId);\n      if (!seenIds.has(removedRowId)) {\n        delete dataRowIdToModelLookup[removedRowId];\n        delete dataRowIdToIdLookup[removedRowId];\n        delete tree[removedRowId];\n      }\n      const rowTreeNodeConfig = {\n        id: rowId,\n        depth: 0,\n        parent: GRID_ROOT_GROUP_ID,\n        type: 'leaf',\n        groupingKey: null\n      };\n      dataRowIdToModelLookup[rowId] = rowModel;\n      dataRowIdToIdLookup[rowId] = rowId;\n      tree[rowId] = rowTreeNodeConfig;\n      seenIds.add(rowId);\n    }\n    tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n      children: rootGroupChildren\n    });\n\n    // Removes potential remaining skeleton rows from the dataRowIds.\n    const dataRowIds = rootGroupChildren.filter(childId => tree[childId]?.type === 'leaf');\n    apiRef.current.caches.rows.dataRowIdToModelLookup = dataRowIdToModelLookup;\n    apiRef.current.caches.rows.dataRowIdToIdLookup = dataRowIdToIdLookup;\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        dataRowIdToModelLookup,\n        dataRowIdToIdLookup,\n        dataRowIds,\n        tree\n      })\n    }));\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, props.signature, props.getRowId]);\n  const rowApi = {\n    getRow,\n    getRowId,\n    getRowModels,\n    getRowsCount,\n    getAllRowIds,\n    setRows,\n    updateRows,\n    getRowNode,\n    getRowIndexRelativeToVisibleRows,\n    unstable_replaceRows: replaceRows\n  };\n  const rowProApi = {\n    setRowIndex,\n    setRowChildrenExpansion,\n    getRowGroupChildren\n  };\n\n  /**\n   * EVENTS\n   */\n  const groupRows = React.useCallback(() => {\n    logger.info(`Row grouping pre-processing have changed, regenerating the row tree`);\n    let cache;\n    if (apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows) {\n      // The `props.rows` did not change since the last row grouping\n      // We can use the current rows cache which contains the partial updates done recently.\n      cache = _extends({}, apiRef.current.caches.rows, {\n        updates: {\n          type: 'full',\n          rows: gridDataRowIdsSelector(apiRef)\n        }\n      });\n    } else {\n      // The `props.rows` has changed since the last row grouping\n      // We must use the new `props.rows` on the new grouping\n      // This occurs because this event is triggered before the `useEffect` on the rows when both the grouping pre-processing and the rows changes on the same render\n      cache = createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      });\n    }\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [logger, apiRef, props.rows, props.getRowId, props.loading, props.rowCount, throttledRowsChange]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'rowTreeCreation') {\n      groupRows();\n    }\n  }, [groupRows]);\n  const handleStrategyActivityChange = React.useCallback(() => {\n    // `rowTreeCreation` is the only processor ran when `strategyAvailabilityChange` is fired.\n    // All the other processors listen to `rowsSet` which will be published by the `groupRows` method below.\n    if (apiRef.current.getActiveStrategy('rowTree') !== gridRowGroupingNameSelector(apiRef)) {\n      groupRows();\n    }\n  }, [apiRef, groupRows]);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'strategyAvailabilityChange', handleStrategyActivityChange);\n\n  /**\n   * APPLIERS\n   */\n  const applyHydrateRowsProcessor = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const response = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n        tree: gridRowTreeSelector(state, apiRef.current.instanceId),\n        treeDepths: gridRowTreeDepthsSelector(state, apiRef.current.instanceId),\n        dataRowIds: gridDataRowIdsSelector(state, apiRef.current.instanceId),\n        dataRowIdToModelLookup: gridRowsLookupSelector(state, apiRef.current.instanceId),\n        dataRowIdToIdLookup: gridRowsDataRowIdToIdLookupSelector(state, apiRef.current.instanceId)\n      });\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, response, {\n          totalTopLevelRowCount: getTopLevelRowCount({\n            tree: response.tree,\n            rowCountProp: props.rowCount\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.rowCount]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateRows', applyHydrateRowsProcessor);\n  useGridApiMethod(apiRef, rowApi, 'public');\n  useGridApiMethod(apiRef, rowProApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridRows`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    let isRowCountPropUpdated = false;\n    if (props.rowCount !== lastRowCount.current) {\n      isRowCountPropUpdated = true;\n      lastRowCount.current = props.rowCount;\n    }\n    const areNewRowsAlreadyInState = apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows;\n    const isNewLoadingAlreadyInState = apiRef.current.caches.rows.loadingPropBeforePartialUpdates === props.loading;\n    const isNewRowCountAlreadyInState = apiRef.current.caches.rows.rowCountPropBeforePartialUpdates === props.rowCount;\n\n    // The new rows have already been applied (most likely in the `'rowGroupsPreProcessingChange'` listener)\n    if (areNewRowsAlreadyInState) {\n      // If the loading prop has changed, we need to update its value in the state because it won't be done by `throttledRowsChange`\n      if (!isNewLoadingAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            loading: props.loading\n          })\n        }));\n        apiRef.current.caches.rows.loadingPropBeforePartialUpdates = props.loading;\n        apiRef.current.forceUpdate();\n      }\n      if (!isNewRowCountAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            totalRowCount: Math.max(props.rowCount || 0, state.rows.totalRowCount),\n            totalTopLevelRowCount: Math.max(props.rowCount || 0, state.rows.totalTopLevelRowCount)\n          })\n        }));\n        apiRef.current.caches.rows.rowCountPropBeforePartialUpdates = props.rowCount;\n        apiRef.current.forceUpdate();\n      }\n      if (!isRowCountPropUpdated) {\n        return;\n      }\n    }\n    logger.debug(`Updating all rows, new length ${props.rows.length}`);\n    throttledRowsChange({\n      cache: createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      }),\n      throttle: false\n    });\n  }, [props.rows, props.rowCount, props.getRowId, props.loading, logger, throttledRowsChange, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\nimport { buildRootGroup, GRID_ROOT_GROUP_ID } from './gridRowsUtils';\nconst createFlatRowTree = rows => {\n  const tree = {\n    [GRID_ROOT_GROUP_ID]: _extends({}, buildRootGroup(), {\n      children: rows\n    })\n  };\n  for (let i = 0; i < rows.length; i += 1) {\n    const rowId = rows[i];\n    tree[rowId] = {\n      id: rowId,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rows.length\n    },\n    dataRowIds: rows\n  };\n};\nconst updateFlatRowTree = ({\n  previousTree,\n  actions\n}) => {\n  const tree = _extends({}, previousTree);\n  const idsToRemoveFromRootGroup = {};\n  for (let i = 0; i < actions.remove.length; i += 1) {\n    const idToDelete = actions.remove[i];\n    idsToRemoveFromRootGroup[idToDelete] = true;\n    delete tree[idToDelete];\n  }\n  for (let i = 0; i < actions.insert.length; i += 1) {\n    const idToInsert = actions.insert[i];\n    tree[idToInsert] = {\n      id: idToInsert,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n\n  // TODO rows v6: Support row unpinning\n\n  const rootGroup = tree[GRID_ROOT_GROUP_ID];\n  let rootGroupChildren = [...rootGroup.children, ...actions.insert];\n  if (Object.values(idsToRemoveFromRootGroup).length) {\n    rootGroupChildren = rootGroupChildren.filter(id => !idsToRemoveFromRootGroup[id]);\n  }\n  tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n    children: rootGroupChildren\n  });\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rootGroupChildren.length\n    },\n    dataRowIds: rootGroupChildren\n  };\n};\nconst flatRowTreeCreationMethod = params => {\n  if (params.updates.type === 'full') {\n    return createFlatRowTree(params.updates.rows);\n  }\n  return updateFlatRowTree({\n    previousTree: params.previousTree,\n    actions: params.updates.actions\n  });\n};\nexport const useGridRowsPreProcessors = apiRef => {\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'rowTreeCreation', flatRowTreeCreationMethod);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nimport { gridRowSelectionStateSelector, selectedGridRowsSelector, selectedIdsLookupSelector } from './gridRowSelectionSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../pagination';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { gridExpandedSortedRowIdsSelector, gridFilterModelSelector } from '../filter/gridFilterSelector';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from '../../../colDef';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isKeyboardEvent, isNavigationKey } from '../../../utils/keyboardUtils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { isEventTargetInPortal } from '../../../utils/domUtils';\nimport { isMultipleRowSelectionEnabled } from './utils';\nconst getSelectionModelPropValue = (selectionModelProp, prevSelectionModel) => {\n  if (selectionModelProp == null) {\n    return selectionModelProp;\n  }\n  if (Array.isArray(selectionModelProp)) {\n    return selectionModelProp;\n  }\n  if (prevSelectionModel && prevSelectionModel[0] === selectionModelProp) {\n    return prevSelectionModel;\n  }\n  return [selectionModelProp];\n};\nexport const rowSelectionStateInitializer = (state, props) => _extends({}, state, {\n  rowSelection: props.rowSelection ? getSelectionModelPropValue(props.rowSelectionModel) ?? [] : []\n});\n\n/**\n * @requires useGridRows (state, method) - can be after\n * @requires useGridParamsApi (method) - can be after\n * @requires useGridFocus (state) - can be after\n * @requires useGridKeyboardNavigation (`cellKeyDown` event must first be consumed by it)\n */\nexport const useGridRowSelection = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSelection');\n  const runIfRowSelectionIsEnabled = callback => (...args) => {\n    if (props.rowSelection) {\n      callback(...args);\n    }\n  };\n  const propRowSelectionModel = React.useMemo(() => {\n    return getSelectionModelPropValue(props.rowSelectionModel, gridRowSelectionStateSelector(apiRef.current.state));\n  }, [apiRef, props.rowSelectionModel]);\n  const lastRowToggled = React.useRef(null);\n  apiRef.current.registerControlState({\n    stateId: 'rowSelection',\n    propModel: propRowSelectionModel,\n    propOnChange: props.onRowSelectionModelChange,\n    stateSelector: gridRowSelectionStateSelector,\n    changeEvent: 'rowSelectionChange'\n  });\n  const {\n    checkboxSelection,\n    disableRowSelectionOnClick,\n    isRowSelectable: propIsRowSelectable\n  } = props;\n  const canHaveMultipleSelection = isMultipleRowSelectionEnabled(props);\n  const visibleRows = useGridVisibleRows(apiRef, props);\n  const expandMouseRowRangeSelection = React.useCallback(id => {\n    let endId = id;\n    const startId = lastRowToggled.current ?? id;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (isSelected) {\n      const visibleRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n      const startIndex = visibleRowIds.findIndex(rowId => rowId === startId);\n      const endIndex = visibleRowIds.findIndex(rowId => rowId === endId);\n      if (startIndex === endIndex) {\n        return;\n      }\n      if (startIndex > endIndex) {\n        endId = visibleRowIds[endIndex + 1];\n      } else {\n        endId = visibleRowIds[endIndex - 1];\n      }\n    }\n    lastRowToggled.current = id;\n    apiRef.current.selectRowRange({\n      startId,\n      endId\n    }, !isSelected);\n  }, [apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const setRowSelectionModel = React.useCallback(model => {\n    if (props.signature === GridSignature.DataGrid && !canHaveMultipleSelection && Array.isArray(model) && model.length > 1) {\n      throw new Error(['MUI X: `rowSelectionModel` can only contain 1 item in DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection.'].join('\\n'));\n    }\n    const currentModel = gridRowSelectionStateSelector(apiRef.current.state);\n    if (currentModel !== model) {\n      logger.debug(`Setting selection model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        rowSelection: props.rowSelection ? model : []\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger, props.rowSelection, props.signature, canHaveMultipleSelection]);\n  const isRowSelected = React.useCallback(id => gridRowSelectionStateSelector(apiRef.current.state).includes(id), [apiRef]);\n  const isRowSelectable = React.useCallback(id => {\n    if (propIsRowSelectable && !propIsRowSelectable(apiRef.current.getRowParams(id))) {\n      return false;\n    }\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'footer' || rowNode?.type === 'pinnedRow') {\n      return false;\n    }\n    return true;\n  }, [apiRef, propIsRowSelectable]);\n  const getSelectedRows = React.useCallback(() => selectedGridRowsSelector(apiRef), [apiRef]);\n  const selectRow = React.useCallback((id, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.isRowSelectable(id)) {\n      return;\n    }\n    lastRowToggled.current = id;\n    if (resetSelection) {\n      logger.debug(`Setting selection for row ${id}`);\n      apiRef.current.setRowSelectionModel(isSelected ? [id] : []);\n    } else {\n      logger.debug(`Toggling selection for row ${id}`);\n      const selection = gridRowSelectionStateSelector(apiRef.current.state);\n      const newSelection = selection.filter(el => el !== id);\n      if (isSelected) {\n        newSelection.push(id);\n      }\n      const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n      if (isSelectionValid) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRows = React.useCallback((ids, isSelected = true, resetSelection = false) => {\n    logger.debug(`Setting selection for several rows`);\n    const selectableIds = ids.filter(id => apiRef.current.isRowSelectable(id));\n    let newSelection;\n    if (resetSelection) {\n      newSelection = isSelected ? selectableIds : [];\n    } else {\n      // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n      const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n      selectableIds.forEach(id => {\n        if (isSelected) {\n          selectionLookup[id] = id;\n        } else {\n          delete selectionLookup[id];\n        }\n      });\n      newSelection = Object.values(selectionLookup);\n    }\n    const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n    if (isSelectionValid) {\n      apiRef.current.setRowSelectionModel(newSelection);\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRowRange = React.useCallback(({\n    startId,\n    endId\n  }, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.getRow(startId) || !apiRef.current.getRow(endId)) {\n      return;\n    }\n    logger.debug(`Expanding selection from row ${startId} to row ${endId}`);\n\n    // Using rows from all pages allow to select a range across several pages\n    const allPagesRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n    const startIndex = allPagesRowIds.indexOf(startId);\n    const endIndex = allPagesRowIds.indexOf(endId);\n    const [start, end] = startIndex > endIndex ? [endIndex, startIndex] : [startIndex, endIndex];\n    const rowsBetweenStartAndEnd = allPagesRowIds.slice(start, end + 1);\n    apiRef.current.selectRows(rowsBetweenStartAndEnd, isSelected, resetSelection);\n  }, [apiRef, logger]);\n  const selectionPublicApi = {\n    selectRow,\n    setRowSelectionModel,\n    getSelectedRows,\n    isRowSelected,\n    isRowSelectable\n  };\n  const selectionPrivateApi = {\n    selectRows,\n    selectRowRange\n  };\n  useGridApiMethod(apiRef, selectionPublicApi, 'public');\n  useGridApiMethod(apiRef, selectionPrivateApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * EVENTS\n   */\n  const removeOutdatedSelection = React.useCallback(() => {\n    if (props.keepNonExistentRowsSelected) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    const rowsLookup = gridRowsLookupSelector(apiRef);\n\n    // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n    const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n    let hasChanged = false;\n    currentSelection.forEach(id => {\n      if (!rowsLookup[id]) {\n        delete selectionLookup[id];\n        hasChanged = true;\n      }\n    });\n    if (hasChanged) {\n      apiRef.current.setRowSelectionModel(Object.values(selectionLookup));\n    }\n  }, [apiRef, props.keepNonExistentRowsSelected]);\n  const handleSingleRowSelection = React.useCallback((id, event) => {\n    const hasCtrlKey = event.metaKey || event.ctrlKey;\n\n    // multiple selection is only allowed if:\n    // - it is a checkboxSelection\n    // - it is a keyboard selection\n    // - Ctrl is pressed\n\n    const isMultipleSelectionDisabled = !checkboxSelection && !hasCtrlKey && !isKeyboardEvent(event);\n    const resetSelection = !canHaveMultipleSelection || isMultipleSelectionDisabled;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (resetSelection) {\n      apiRef.current.selectRow(id, !isMultipleSelectionDisabled ? !isSelected : true, true);\n    } else {\n      apiRef.current.selectRow(id, !isSelected, false);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection]);\n  const handleRowClick = React.useCallback((params, event) => {\n    if (disableRowSelectionOnClick) {\n      return;\n    }\n    const field = event.target.closest(`.${gridClasses.cell}`)?.getAttribute('data-field');\n    if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // click on checkbox should not trigger row selection\n      return;\n    }\n    if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      // click to open the detail panel should not select the row\n      return;\n    }\n    if (field) {\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    const rowNode = apiRef.current.getRowNode(params.id);\n    if (rowNode.type === 'pinnedRow') {\n      return;\n    }\n    if (event.shiftKey && canHaveMultipleSelection) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      handleSingleRowSelection(params.id, event);\n    }\n  }, [disableRowSelectionOnClick, canHaveMultipleSelection, apiRef, expandMouseRowRangeSelection, handleSingleRowSelection]);\n  const preventSelectionOnShift = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.shiftKey) {\n      window.getSelection()?.removeAllRanges();\n    }\n  }, [canHaveMultipleSelection]);\n  const handleRowSelectionCheckboxChange = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.nativeEvent.shiftKey) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      apiRef.current.selectRow(params.id, params.value, !canHaveMultipleSelection);\n    }\n  }, [apiRef, expandMouseRowRangeSelection, canHaveMultipleSelection]);\n  const handleHeaderSelectionCheckboxChange = React.useCallback(params => {\n    const shouldLimitSelectionToCurrentPage = props.checkboxSelectionVisibleOnly && props.pagination;\n    const rowsToBeSelected = shouldLimitSelectionToCurrentPage ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridExpandedSortedRowIdsSelector(apiRef);\n    const filterModel = gridFilterModelSelector(apiRef);\n    apiRef.current.selectRows(rowsToBeSelected, params.value, filterModel?.items.length > 0);\n  }, [apiRef, props.checkboxSelectionVisibleOnly, props.pagination]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Get the most recent cell mode because it may have been changed by another listener\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.Edit) {\n      return;\n    }\n\n    // Ignore portal\n    // Do not apply shortcuts if the focus is not on the cell root component\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    if (isNavigationKey(event.key) && event.shiftKey) {\n      // The cell that has focus after the keyboard navigation\n      const focusCell = gridFocusCellSelector(apiRef);\n      if (focusCell && focusCell.id !== params.id) {\n        event.preventDefault();\n        const isNextRowSelected = apiRef.current.isRowSelected(focusCell.id);\n        if (!canHaveMultipleSelection) {\n          apiRef.current.selectRow(focusCell.id, !isNextRowSelected, true);\n          return;\n        }\n        const newRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id);\n        const previousRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\n        let start;\n        let end;\n        if (newRowIndex > previousRowIndex) {\n          if (isNextRowSelected) {\n            // We are navigating to the bottom of the page and adding selected rows\n            start = previousRowIndex;\n            end = newRowIndex - 1;\n          } else {\n            // We are navigating to the bottom of the page and removing selected rows\n            start = previousRowIndex;\n            end = newRowIndex;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isNextRowSelected) {\n            // We are navigating to the top of the page and removing selected rows\n            start = newRowIndex + 1;\n            end = previousRowIndex;\n          } else {\n            // We are navigating to the top of the page and adding selected rows\n            start = newRowIndex;\n            end = previousRowIndex;\n          }\n        }\n        const rowsBetweenStartAndEnd = visibleRows.rows.slice(start, end + 1).map(row => row.id);\n        apiRef.current.selectRows(rowsBetweenStartAndEnd, !isNextRowSelected);\n        return;\n      }\n    }\n    if (event.key === ' ' && event.shiftKey) {\n      event.preventDefault();\n      handleSingleRowSelection(params.id, event);\n      return;\n    }\n    if (event.key === 'a' && (event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n      selectRows(apiRef.current.getAllRowIds(), true);\n    }\n  }, [apiRef, handleSingleRowSelection, selectRows, visibleRows.rows, canHaveMultipleSelection]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', runIfRowSelectionIsEnabled(removeOutdatedSelection));\n  useGridApiEventHandler(apiRef, 'rowClick', runIfRowSelectionIsEnabled(handleRowClick));\n  useGridApiEventHandler(apiRef, 'rowSelectionCheckboxChange', runIfRowSelectionIsEnabled(handleRowSelectionCheckboxChange));\n  useGridApiEventHandler(apiRef, 'headerSelectionCheckboxChange', handleHeaderSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', runIfRowSelectionIsEnabled(preventSelectionOnShift));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfRowSelectionIsEnabled(handleCellKeyDown));\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (propRowSelectionModel !== undefined) {\n      apiRef.current.setRowSelectionModel(propRowSelectionModel);\n    }\n  }, [apiRef, propRowSelectionModel, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection) {\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, props.rowSelection]);\n  const isStateControlled = propRowSelectionModel != null;\n  React.useEffect(() => {\n    if (isStateControlled || !props.rowSelection) {\n      return;\n    }\n\n    // props.isRowSelectable changed\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (isRowSelectable) {\n      const newSelection = currentSelection.filter(id => isRowSelectable(id));\n      if (newSelection.length < currentSelection.length) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection || isStateControlled) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (!canHaveMultipleSelection && currentSelection.length > 1) {\n      // See https://github.com/mui/mui-x/issues/8455\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection, isStateControlled, props.rowSelection]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortModelSelector } from './gridSortingSelector';\nimport { GRID_ROOT_GROUP_ID, gridRowTreeSelector } from '../rows';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { useGridRegisterStrategyProcessor, GRID_DEFAULT_STRATEGY } from '../../core/strategyProcessing';\nimport { buildAggregatedSortingApplier, mergeStateWithSortModel, getNextGridSortDirection, sanitizeSortModel } from './gridSortingUtils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { getTreeNodeDescendants } from '../rows/gridRowsUtils';\nexport const sortingStateInitializer = (state, props) => {\n  const sortModel = props.sortModel ?? props.initialState?.sorting?.sortModel ?? [];\n  return _extends({}, state, {\n    sorting: {\n      sortModel: sanitizeSortModel(sortModel, props.disableMultipleColumnsSorting),\n      sortedRows: []\n    }\n  });\n};\n\n/**\n * @requires useGridRows (event)\n * @requires useGridColumns (event)\n */\nexport const useGridSorting = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSorting');\n  apiRef.current.registerControlState({\n    stateId: 'sortModel',\n    propModel: props.sortModel,\n    propOnChange: props.onSortModelChange,\n    stateSelector: gridSortModelSelector,\n    changeEvent: 'sortModelChange'\n  });\n  const upsertSortModel = React.useCallback((field, sortItem) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existingIdx = sortModel.findIndex(c => c.field === field);\n    let newSortModel = [...sortModel];\n    if (existingIdx > -1) {\n      if (sortItem?.sort == null) {\n        newSortModel.splice(existingIdx, 1);\n      } else {\n        newSortModel.splice(existingIdx, 1, sortItem);\n      }\n    } else {\n      newSortModel = [...sortModel, sortItem];\n    }\n    return newSortModel;\n  }, [apiRef]);\n  const createSortItem = React.useCallback((col, directionOverride) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existing = sortModel.find(c => c.field === col.field);\n    if (existing) {\n      const nextSort = directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder, existing.sort) : directionOverride;\n      return nextSort === undefined ? undefined : _extends({}, existing, {\n        sort: nextSort\n      });\n    }\n    return {\n      field: col.field,\n      sort: directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder) : directionOverride\n    };\n  }, [apiRef, props.sortingOrder]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.sortable === false || props.disableColumnSorting) {\n      return columnMenuItems;\n    }\n    const sortingOrder = colDef.sortingOrder || props.sortingOrder;\n    if (sortingOrder.some(item => !!item)) {\n      return [...columnMenuItems, 'columnMenuSortItem'];\n    }\n    return columnMenuItems;\n  }, [props.sortingOrder, props.disableColumnSorting]);\n\n  /**\n   * API METHODS\n   */\n  const applySorting = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (props.sortingMode === 'server') {\n        logger.debug('Skipping sorting rows as sortingMode = server');\n        return _extends({}, state, {\n          sorting: _extends({}, state.sorting, {\n            sortedRows: getTreeNodeDescendants(gridRowTreeSelector(apiRef), GRID_ROOT_GROUP_ID, false)\n          })\n        });\n      }\n      const sortModel = gridSortModelSelector(state, apiRef.current.instanceId);\n      const sortRowList = buildAggregatedSortingApplier(sortModel, apiRef);\n      const sortedRows = apiRef.current.applyStrategyProcessor('sorting', {\n        sortRowList\n      });\n      return _extends({}, state, {\n        sorting: _extends({}, state.sorting, {\n          sortedRows\n        })\n      });\n    });\n    apiRef.current.publishEvent('sortedRowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.sortingMode]);\n  const setSortModel = React.useCallback(model => {\n    const currentModel = gridSortModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug(`Setting sort model`);\n      apiRef.current.setState(mergeStateWithSortModel(model, props.disableMultipleColumnsSorting));\n      apiRef.current.forceUpdate();\n      apiRef.current.applySorting();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsSorting]);\n  const sortColumn = React.useCallback((field, direction, allowMultipleSorting) => {\n    const column = apiRef.current.getColumn(field);\n    const sortItem = createSortItem(column, direction);\n    let sortModel;\n    if (!allowMultipleSorting || props.disableMultipleColumnsSorting) {\n      sortModel = sortItem?.sort == null ? [] : [sortItem];\n    } else {\n      sortModel = upsertSortModel(column.field, sortItem);\n    }\n    apiRef.current.setSortModel(sortModel);\n  }, [apiRef, upsertSortModel, createSortItem, props.disableMultipleColumnsSorting]);\n  const getSortModel = React.useCallback(() => gridSortModelSelector(apiRef), [apiRef]);\n  const getSortedRows = React.useCallback(() => {\n    const sortedRows = gridSortedRowEntriesSelector(apiRef);\n    return sortedRows.map(row => row.model);\n  }, [apiRef]);\n  const getSortedRowIds = React.useCallback(() => gridSortedRowIdsSelector(apiRef), [apiRef]);\n  const getRowIdFromRowIndex = React.useCallback(index => apiRef.current.getSortedRowIds()[index], [apiRef]);\n  const sortApi = {\n    getSortModel,\n    getSortedRows,\n    getSortedRowIds,\n    getRowIdFromRowIndex,\n    setSortModel,\n    sortColumn,\n    applySorting\n  };\n  useGridApiMethod(apiRef, sortApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const sortModelToExport = gridSortModelSelector(apiRef);\n    const shouldExportSortModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.sortModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.sorting?.sortModel != null ||\n    // Export if the model is not empty\n    sortModelToExport.length > 0;\n    if (!shouldExportSortModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      sorting: {\n        sortModel: sortModelToExport\n      }\n    });\n  }, [apiRef, props.sortModel, props.initialState?.sorting?.sortModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const sortModel = context.stateToRestore.sorting?.sortModel;\n    if (sortModel == null) {\n      return params;\n    }\n    apiRef.current.setState(mergeStateWithSortModel(sortModel, props.disableMultipleColumnsSorting));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.applySorting]\n    });\n  }, [apiRef, props.disableMultipleColumnsSorting]);\n  const flatSortingMethod = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n    const rootGroupNode = rowTree[GRID_ROOT_GROUP_ID];\n    const sortedChildren = params.sortRowList ? params.sortRowList(rootGroupNode.children.map(childId => rowTree[childId])) : [...rootGroupNode.children];\n    if (rootGroupNode.footerId != null) {\n      sortedChildren.push(rootGroupNode.footerId);\n    }\n    return sortedChildren;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'sorting', flatSortingMethod);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnHeaderClick = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    const allowMultipleSorting = event.shiftKey || event.metaKey || event.ctrlKey;\n    sortColumn(field, undefined, allowMultipleSorting);\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnHeaderKeyDown = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    // Ctrl + Enter opens the column menu\n    if (event.key === 'Enter' && !event.ctrlKey && !event.metaKey) {\n      sortColumn(field, undefined, event.shiftKey);\n    }\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnsChange = React.useCallback(() => {\n    // When the columns change we check that the sorted columns are still part of the dataset\n    const sortModel = gridSortModelSelector(apiRef);\n    const latestColumns = gridColumnLookupSelector(apiRef);\n    if (sortModel.length > 0) {\n      const newModel = sortModel.filter(sortItem => latestColumns[sortItem.field]);\n      if (newModel.length < sortModel.length) {\n        apiRef.current.setSortModel(newModel);\n      }\n    }\n  }, [apiRef]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'sorting') {\n      apiRef.current.applySorting();\n    }\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridApiEventHandler(apiRef, 'columnHeaderClick', handleColumnHeaderClick);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'rowsSet', apiRef.current.applySorting);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.applySorting();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.sortModel !== undefined) {\n      apiRef.current.setSortModel(props.sortModel);\n    }\n  }, [apiRef, props.sortModel]);\n};","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridPageSelector, gridPageSizeSelector } from '../pagination/gridPaginationSelector';\nimport { gridRowCountSelector } from '../rows/gridRowsSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridExpandedSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridDimensionsSelector } from '../dimensions';\n\n// Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\nfunction scrollIntoView(dimensions) {\n  const {\n    clientHeight,\n    scrollTop,\n    offsetHeight,\n    offsetTop\n  } = dimensions;\n  const elementBottom = offsetTop + offsetHeight;\n  // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n  if (offsetHeight > clientHeight) {\n    return offsetTop;\n  }\n  if (elementBottom - clientHeight > scrollTop) {\n    return elementBottom - clientHeight;\n  }\n  if (offsetTop < scrollTop) {\n    return offsetTop;\n  }\n  return undefined;\n}\n\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\nexport const useGridScroll = (apiRef, props) => {\n  const theme = useTheme();\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersContainerRef;\n  const virtualScrollerRef = apiRef.current.virtualScrollerRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridExpandedSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n    if (params.colIndex !== undefined) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n      if (typeof params.rowIndex !== 'undefined') {\n        const rowId = visibleSortedRows[params.rowIndex]?.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n      // When using RTL, `scrollLeft` becomes negative, so we must ensure that we only compare values.\n      scrollCoordinates.left = scrollIntoView({\n        clientHeight: dimensions.viewportInnerSize.width,\n        scrollTop: Math.abs(virtualScrollerRef.current.scrollLeft),\n        offsetHeight: cellWidth,\n        offsetTop: columnPositions[params.colIndex]\n      });\n    }\n    if (params.rowIndex !== undefined) {\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      scrollCoordinates.top = scrollIntoView({\n        clientHeight: dimensions.viewportInnerSize.height,\n        scrollTop: virtualScrollerRef.current.scrollTop,\n        offsetHeight: targetOffsetHeight,\n        offsetTop: rowsMeta.positions[elementIndex]\n      });\n    }\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n    return false;\n  }, [logger, apiRef, virtualScrollerRef, props.pagination, visibleSortedRows]);\n  const scroll = React.useCallback(params => {\n    if (virtualScrollerRef.current && params.left !== undefined && colRef.current) {\n      const direction = theme.direction === 'rtl' ? -1 : 1;\n      colRef.current.scrollLeft = params.left;\n      virtualScrollerRef.current.scrollLeft = direction * params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n    if (virtualScrollerRef.current && params.top !== undefined) {\n      virtualScrollerRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [virtualScrollerRef, theme.direction, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!virtualScrollerRef?.current) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    return {\n      top: virtualScrollerRef.current.scrollTop,\n      left: virtualScrollerRef.current.scrollLeft\n    };\n  }, [virtualScrollerRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'public');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { throttle } from '../../../utils/throttle';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnsTotalWidthSelector, gridVisiblePinnedColumnDefinitionsSelector } from '../columns';\nimport { gridDimensionsSelector } from './gridDimensionsSelectors';\nimport { gridDensityFactorSelector } from '../density';\nimport { gridRenderContextSelector } from '../virtualization';\nimport { useGridSelector } from '../../utils';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { calculatePinnedRowsHeight } from '../rows/gridRowsUtils';\nimport { getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nconst EMPTY_SIZE = {\n  width: 0,\n  height: 0\n};\nconst EMPTY_DIMENSIONS = {\n  isReady: false,\n  root: EMPTY_SIZE,\n  viewportOuterSize: EMPTY_SIZE,\n  viewportInnerSize: EMPTY_SIZE,\n  contentSize: EMPTY_SIZE,\n  minimumSize: EMPTY_SIZE,\n  hasScrollX: false,\n  hasScrollY: false,\n  scrollbarSize: 0,\n  headerHeight: 0,\n  headerFilterHeight: 0,\n  rowWidth: 0,\n  rowHeight: 0,\n  columnsTotalWidth: 0,\n  leftPinnedWidth: 0,\n  rightPinnedWidth: 0,\n  headersTotalHeight: 0,\n  topContainerHeight: 0,\n  bottomContainerHeight: 0\n};\nexport const dimensionsStateInitializer = state => {\n  const dimensions = EMPTY_DIMENSIONS;\n  return _extends({}, state, {\n    dimensions\n  });\n};\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(EMPTY_SIZE);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  const headerHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const headerFilterHeight = Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor);\n  const columnsTotalWidth = roundToDecimalPlaces(gridColumnsTotalWidthSelector(apiRef), 6);\n  const headersTotalHeight = getTotalHeaderHeight(apiRef, props);\n  const leftPinnedWidth = pinnedColumns.left.reduce((w, col) => w + col.computedWidth, 0);\n  const rightPinnedWidth = pinnedColumns.right.reduce((w, col) => w + col.computedWidth, 0);\n  const [savedSize, setSavedSize] = React.useState();\n  const debouncedSetSavedSize = React.useMemo(() => throttle(setSavedSize, props.resizeThrottleMs), [props.resizeThrottleMs]);\n  const previousSize = React.useRef();\n  const getRootDimensions = () => apiRef.current.state.dimensions;\n  const setDimensions = useEventCallback(dimensions => {\n    apiRef.current.setState(state => _extends({}, state, {\n      dimensions\n    }));\n  });\n  const resize = React.useCallback(() => {\n    const element = apiRef.current.mainElementRef.current;\n    if (!element) {\n      return;\n    }\n    const computedStyle = ownerWindow(element).getComputedStyle(element);\n    const height = parseFloat(computedStyle.height) || 0;\n    const width = parseFloat(computedStyle.width) || 0;\n    const hasHeightChanged = height !== previousSize.current?.height;\n    const hasWidthChanged = width !== previousSize.current?.width;\n    if (!previousSize.current || hasHeightChanged || hasWidthChanged) {\n      const size = {\n        width,\n        height\n      };\n      apiRef.current.publishEvent('resize', size);\n      previousSize.current = size;\n    }\n  }, [apiRef]);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    if (!dimensions.isReady) {\n      return 0;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n\n    // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n    if (props.getRowHeight) {\n      const renderContext = gridRenderContextSelector(apiRef);\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.pagination, props.paginationMode, props.getRowHeight, rowHeight]);\n  const updateDimensions = React.useCallback(() => {\n    const rootElement = apiRef.current.rootElementRef.current;\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    const scrollbarSize = measureScrollbarSize(rootElement, columnsTotalWidth, props.scrollbarSize);\n    const topContainerHeight = headersTotalHeight + pinnedRowsHeight.top;\n    const bottomContainerHeight = pinnedRowsHeight.bottom;\n    const nonPinnedColumnsTotalWidth = columnsTotalWidth - leftPinnedWidth - rightPinnedWidth;\n    const contentSize = {\n      width: nonPinnedColumnsTotalWidth,\n      height: rowsMeta.currentPageTotalHeight\n    };\n    let viewportOuterSize;\n    let viewportInnerSize;\n    let hasScrollX = false;\n    let hasScrollY = false;\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > Math.round(rootDimensionsRef.current.width);\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: topContainerHeight + bottomContainerHeight + contentSize.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - (hasScrollY ? scrollbarSize : 0)),\n        height: Math.max(0, viewportOuterSize.height - (hasScrollX ? scrollbarSize : 0))\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rootDimensionsRef.current.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - leftPinnedWidth - rightPinnedWidth),\n        height: Math.max(0, viewportOuterSize.height - topContainerHeight - bottomContainerHeight)\n      };\n      const content = contentSize;\n      const container = viewportInnerSize;\n      const hasScrollXIfNoYScrollBar = content.width > container.width;\n      const hasScrollYIfNoXScrollBar = content.height > container.height;\n      if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n        hasScrollY = hasScrollYIfNoXScrollBar;\n        hasScrollX = content.width + (hasScrollY ? scrollbarSize : 0) > container.width;\n\n        // We recalculate the scroll y to consider the size of the x scrollbar.\n        if (hasScrollX) {\n          hasScrollY = content.height + scrollbarSize > container.height;\n        }\n      }\n      if (hasScrollY) {\n        viewportInnerSize.width -= scrollbarSize;\n      }\n      if (hasScrollX) {\n        viewportInnerSize.height -= scrollbarSize;\n      }\n    }\n    const rowWidth = Math.max(viewportOuterSize.width, columnsTotalWidth + (hasScrollY ? scrollbarSize : 0));\n    const minimumSize = {\n      width: columnsTotalWidth,\n      height: topContainerHeight + contentSize.height + bottomContainerHeight\n    };\n    const newDimensions = {\n      isReady: true,\n      root: rootDimensionsRef.current,\n      viewportOuterSize,\n      viewportInnerSize,\n      contentSize,\n      minimumSize,\n      hasScrollX,\n      hasScrollY,\n      scrollbarSize,\n      headerHeight,\n      headerFilterHeight,\n      rowWidth,\n      rowHeight,\n      columnsTotalWidth,\n      leftPinnedWidth,\n      rightPinnedWidth,\n      headersTotalHeight,\n      topContainerHeight,\n      bottomContainerHeight\n    };\n    const prevDimensions = apiRef.current.state.dimensions;\n    setDimensions(newDimensions);\n    if (newDimensions.viewportInnerSize.width !== prevDimensions.viewportInnerSize.width || newDimensions.viewportInnerSize.height !== prevDimensions.viewportInnerSize.height) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newDimensions.viewportInnerSize);\n    }\n    apiRef.current.updateRenderContext?.();\n  }, [apiRef, setDimensions, props.scrollbarSize, props.autoHeight, rowsMeta.currentPageTotalHeight, rowHeight, headerHeight, headerFilterHeight, columnsTotalWidth, headersTotalHeight, leftPinnedWidth, rightPinnedWidth]);\n  const apiPublic = {\n    resize,\n    getRootDimensions\n  };\n  const apiPrivate = {\n    updateDimensions,\n    getViewportPageSize\n  };\n  useGridApiMethod(apiRef, apiPublic, 'public');\n  useGridApiMethod(apiRef, apiPrivate, 'private');\n  useEnhancedEffect(() => {\n    if (savedSize) {\n      updateDimensions();\n      apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n    }\n  }, [apiRef, savedSize, updateDimensions]);\n  const root = apiRef.current.rootElementRef.current;\n  const dimensions = apiRef.current.state.dimensions;\n  useEnhancedEffect(() => {\n    if (!root) {\n      return;\n    }\n    const set = (k, v) => root.style.setProperty(k, v);\n    set('--DataGrid-width', `${dimensions.viewportOuterSize.width}px`);\n    set('--DataGrid-hasScrollX', `${Number(dimensions.hasScrollX)}`);\n    set('--DataGrid-hasScrollY', `${Number(dimensions.hasScrollY)}`);\n    set('--DataGrid-scrollbarSize', `${dimensions.scrollbarSize}px`);\n    set('--DataGrid-rowWidth', `${dimensions.rowWidth}px`);\n    set('--DataGrid-columnsTotalWidth', `${dimensions.columnsTotalWidth}px`);\n    set('--DataGrid-leftPinnedWidth', `${dimensions.leftPinnedWidth}px`);\n    set('--DataGrid-rightPinnedWidth', `${dimensions.rightPinnedWidth}px`);\n    set('--DataGrid-headerHeight', `${dimensions.headerHeight}px`);\n    set('--DataGrid-headersTotalHeight', `${dimensions.headersTotalHeight}px`);\n    set('--DataGrid-topContainerHeight', `${dimensions.topContainerHeight}px`);\n    set('--DataGrid-bottomContainerHeight', `${dimensions.bottomContainerHeight}px`);\n    set('--height', `${dimensions.rowHeight}px`);\n  }, [root, dimensions]);\n  const isFirstSizing = React.useRef(true);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size;\n\n    // jsdom has no layout capabilities\n    const isJSDOM = /jsdom/.test(window.navigator.userAgent);\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (isFirstSizing.current) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      setSavedSize(size);\n      isFirstSizing.current = false;\n      return;\n    }\n    debouncedSetSavedSize(size);\n  }, [props.autoHeight, debouncedSetSavedSize, logger]);\n  useEnhancedEffect(updateDimensions, [updateDimensions]);\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'paginationModelChange', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'columnsChange', updateDimensions);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}\nfunction measureScrollbarSize(rootElement, columnsTotalWidth, scrollbarSize) {\n  if (scrollbarSize !== undefined) {\n    return scrollbarSize;\n  }\n  if (rootElement === null || columnsTotalWidth === 0) {\n    return 0;\n  }\n  const doc = ownerDocument(rootElement);\n  const scrollDiv = doc.createElement('div');\n  scrollDiv.style.width = '99px';\n  scrollDiv.style.height = '99px';\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.overflow = 'scroll';\n  scrollDiv.className = 'scrollDiv';\n  rootElement.appendChild(scrollDiv);\n  const size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  rootElement.removeChild(scrollDiv);\n  return size;\n}\n\n// Get rid of floating point imprecision errors\n// https://github.com/mui/mui-x/issues/9550#issuecomment-1619020477\nfunction roundToDecimalPlaces(value, decimals) {\n  return Math.round(value * 10 ** decimals) / 10 ** decimals;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_debounce as debounce } from '@mui/utils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridDensityFactorSelector } from '../density/densitySelector';\nimport { gridFilterModelSelector } from '../filter/gridFilterSelector';\nimport { gridPaginationSelector } from '../pagination/gridPaginationSelector';\nimport { gridSortModelSelector } from '../sorting/gridSortingSelector';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from '../../../DataGrid/useDataGridProps';\n\n// TODO: I think the row heights can now be encoded as a single `size` instead of `sizes.baseXxxx`\n\nexport const rowsMetaStateInitializer = state => _extends({}, state, {\n  rowsMeta: {\n    currentPageTotalHeight: 0,\n    positions: []\n  }\n});\nlet warnedOnceInvalidRowHeight = false;\nconst getValidRowHeight = (rowHeightProp, defaultRowHeight, warningMessage) => {\n  if (typeof rowHeightProp === 'number' && rowHeightProp > 0) {\n    return rowHeightProp;\n  }\n  if (process.env.NODE_ENV !== 'production' && !warnedOnceInvalidRowHeight && typeof rowHeightProp !== 'undefined' && rowHeightProp !== null) {\n    console.warn(warningMessage);\n    warnedOnceInvalidRowHeight = true;\n  }\n  return defaultRowHeight;\n};\nconst rowHeightWarning = [`MUI X: The \\`rowHeight\\` prop should be a number greater than 0.`, `The default value will be used instead.`].join('\\n');\nconst getRowHeightWarning = [`MUI X: The \\`getRowHeight\\` prop should return a number greater than 0 or 'auto'.`, `The default value will be used instead.`].join('\\n');\n\n/**\n * @requires useGridPageSize (method)\n * @requires useGridPage (method)\n */\nexport const useGridRowsMeta = (apiRef, props) => {\n  const {\n    getRowHeight: getRowHeightProp,\n    getRowSpacing,\n    getEstimatedRowHeight\n  } = props;\n  const rowsHeightLookup = React.useRef(Object.create(null));\n\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  const lastMeasuredRowIndex = React.useRef(-1);\n  const hasRowWithAutoHeight = React.useRef(false);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const validRowHeight = getValidRowHeight(props.rowHeight, DATA_GRID_PROPS_DEFAULT_VALUES.rowHeight, rowHeightWarning);\n  const rowHeight = Math.floor(validRowHeight * densityFactor);\n  const hydrateRowsMeta = React.useCallback(() => {\n    hasRowWithAutoHeight.current = false;\n    const calculateRowProcessedSizes = row => {\n      if (!rowsHeightLookup.current[row.id]) {\n        rowsHeightLookup.current[row.id] = {\n          sizes: {\n            baseCenter: rowHeight\n          },\n          isResized: false,\n          autoHeight: false,\n          needsFirstMeasurement: true // Assume all rows will need to be measured by default\n        };\n      }\n      const {\n        isResized,\n        needsFirstMeasurement,\n        sizes\n      } = rowsHeightLookup.current[row.id];\n      let baseRowHeight = typeof rowHeight === 'number' && rowHeight > 0 ? rowHeight : 52;\n      const existingBaseRowHeight = sizes.baseCenter;\n      if (isResized) {\n        // Do not recalculate resized row height and use the value from the lookup\n        baseRowHeight = existingBaseRowHeight;\n      } else if (getRowHeightProp) {\n        const rowHeightFromUser = getRowHeightProp(_extends({}, row, {\n          densityFactor\n        }));\n        if (rowHeightFromUser === 'auto') {\n          if (needsFirstMeasurement) {\n            const estimatedRowHeight = getEstimatedRowHeight ? getEstimatedRowHeight(_extends({}, row, {\n              densityFactor\n            })) : rowHeight;\n\n            // If the row was not measured yet use the estimated row height\n            baseRowHeight = estimatedRowHeight ?? rowHeight;\n          } else {\n            baseRowHeight = existingBaseRowHeight;\n          }\n          hasRowWithAutoHeight.current = true;\n          rowsHeightLookup.current[row.id].autoHeight = true;\n        } else {\n          // Default back to base rowHeight if getRowHeight returns invalid value.\n          baseRowHeight = getValidRowHeight(rowHeightFromUser, rowHeight, getRowHeightWarning);\n          rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n          rowsHeightLookup.current[row.id].autoHeight = false;\n        }\n      } else {\n        rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n      }\n      const initialHeights = {\n        baseCenter: baseRowHeight\n      };\n      if (getRowSpacing) {\n        const indexRelativeToCurrentPage = apiRef.current.getRowIndexRelativeToVisibleRows(row.id);\n        const spacing = getRowSpacing(_extends({}, row, {\n          isFirstVisible: indexRelativeToCurrentPage === 0,\n          isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n          indexRelativeToCurrentPage\n        }));\n        initialHeights.spacingTop = spacing.top ?? 0;\n        initialHeights.spacingBottom = spacing.bottom ?? 0;\n      }\n      const processedSizes = apiRef.current.unstable_applyPipeProcessors('rowHeight', initialHeights, row);\n      rowsHeightLookup.current[row.id].sizes = processedSizes;\n      return processedSizes;\n    };\n    const positions = [];\n    const currentPageTotalHeight = currentPage.rows.reduce((acc, row) => {\n      positions.push(acc);\n      let otherSizes = 0;\n      const processedSizes = calculateRowProcessedSizes(row);\n      /* eslint-disable-next-line no-restricted-syntax, guard-for-in */\n      for (const key in processedSizes) {\n        const value = processedSizes[key];\n        if (key !== 'baseCenter') {\n          otherSizes += value;\n        }\n      }\n      return acc + processedSizes.baseCenter + otherSizes;\n    }, 0);\n    pinnedRows?.top?.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    pinnedRows?.bottom?.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowsMeta: {\n          currentPageTotalHeight,\n          positions\n        }\n      });\n    });\n    if (!hasRowWithAutoHeight.current) {\n      // No row has height=auto, so all rows are already measured\n      lastMeasuredRowIndex.current = Infinity;\n    }\n    apiRef.current.forceUpdate();\n  }, [apiRef, currentPage.rows, rowHeight, getRowHeightProp, getRowSpacing, getEstimatedRowHeight, pinnedRows, densityFactor]);\n  const getRowHeight = React.useCallback(rowId => {\n    const height = rowsHeightLookup.current[rowId];\n    return height ? height.sizes.baseCenter : rowHeight;\n  }, [rowHeight]);\n  const getRowInternalSizes = rowId => rowsHeightLookup.current[rowId]?.sizes;\n  const setRowHeight = React.useCallback((id, height) => {\n    rowsHeightLookup.current[id].sizes.baseCenter = height;\n    rowsHeightLookup.current[id].isResized = true;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n  const debouncedHydrateRowsMeta = React.useMemo(() => debounce(hydrateRowsMeta, props.rowPositionsDebounceMs), [hydrateRowsMeta, props.rowPositionsDebounceMs]);\n  const storeMeasuredRowHeight = React.useCallback((id, height) => {\n    if (!rowsHeightLookup.current[id] || !rowsHeightLookup.current[id].autoHeight) {\n      return;\n    }\n\n    // Only trigger hydration if the value is different, otherwise we trigger a loop\n    const needsHydration = rowsHeightLookup.current[id].sizes.baseCenter !== height;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    rowsHeightLookup.current[id].sizes.baseCenter = height;\n    if (needsHydration) {\n      debouncedHydrateRowsMeta();\n    }\n  }, [debouncedHydrateRowsMeta]);\n  const rowHasAutoHeight = React.useCallback(id => {\n    return rowsHeightLookup.current[id]?.autoHeight || false;\n  }, []);\n  const getLastMeasuredRowIndex = React.useCallback(() => {\n    return lastMeasuredRowIndex.current;\n  }, []);\n  const setLastMeasuredRowIndex = React.useCallback(index => {\n    if (hasRowWithAutoHeight.current && index > lastMeasuredRowIndex.current) {\n      lastMeasuredRowIndex.current = index;\n    }\n  }, []);\n  const resetRowHeights = React.useCallback(() => {\n    rowsHeightLookup.current = {};\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n\n  // The effect is used to build the rows meta data - currentPageTotalHeight and positions.\n  // Because of variable row height this is needed for the virtualization\n  React.useEffect(() => {\n    hydrateRowsMeta();\n  }, [rowHeight, filterModel, paginationState, sortModel, hydrateRowsMeta]);\n  useGridRegisterPipeApplier(apiRef, 'rowHeight', hydrateRowsMeta);\n  const rowsMetaApi = {\n    unstable_setLastMeasuredRowIndex: setLastMeasuredRowIndex,\n    unstable_getRowHeight: getRowHeight,\n    unstable_getRowInternalSizes: getRowInternalSizes,\n    unstable_setRowHeight: setRowHeight,\n    unstable_storeRowHeightMeasurement: storeMeasuredRowHeight,\n    resetRowHeights\n  };\n  const rowsMetaPrivateApi = {\n    getLastMeasuredRowIndex,\n    rowHasAutoHeight\n  };\n  useGridApiMethod(apiRef, rowsMetaApi, 'public');\n  useGridApiMethod(apiRef, rowsMetaPrivateApi, 'private');\n};","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnSpanning = apiRef => {\n  const lookup = React.useRef({});\n  const getCellColSpanInfo = (rowId, columnIndex) => {\n    return lookup.current[rowId]?.[columnIndex];\n  };\n\n  // Calculate `colSpan` for each cell in the row\n  const calculateColSpan = React.useCallback(({\n    rowId,\n    minFirstColumn,\n    maxLastColumn,\n    columns\n  }) => {\n    for (let i = minFirstColumn; i < maxLastColumn; i += 1) {\n      const cellProps = calculateCellColSpan({\n        apiRef,\n        lookup: lookup.current,\n        columnIndex: i,\n        rowId,\n        minFirstColumnIndex: minFirstColumn,\n        maxLastColumnIndex: maxLastColumn,\n        columns\n      });\n      if (cellProps.colSpan > 1) {\n        i += cellProps.colSpan - 1;\n      }\n    }\n  }, [apiRef]);\n  const columnSpanningPublicApi = {\n    unstable_getCellColSpanInfo: getCellColSpanInfo\n  };\n  const columnSpanningPrivateApi = {\n    calculateColSpan\n  };\n  useGridApiMethod(apiRef, columnSpanningPublicApi, 'public');\n  useGridApiMethod(apiRef, columnSpanningPrivateApi, 'private');\n  const handleColumnReorderChange = React.useCallback(() => {\n    // `colSpan` needs to be recalculated after column reordering\n    lookup.current = {};\n  }, []);\n  useGridApiEventHandler(apiRef, 'columnOrderChange', handleColumnReorderChange);\n};\nfunction calculateCellColSpan(params) {\n  const {\n    apiRef,\n    lookup,\n    columnIndex,\n    rowId,\n    minFirstColumnIndex,\n    maxLastColumnIndex,\n    columns\n  } = params;\n  const columnsLength = columns.length;\n  const column = columns[columnIndex];\n  const row = apiRef.current.getRow(rowId);\n  const value = apiRef.current.getRowValue(row, column);\n  const colSpan = typeof column.colSpan === 'function' ? column.colSpan(value, row, column, apiRef) : column.colSpan;\n  if (!colSpan || colSpan === 1) {\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan: 1,\n        width: column.computedWidth\n      }\n    });\n    return {\n      colSpan: 1\n    };\n  }\n  let width = column.computedWidth;\n  for (let j = 1; j < colSpan; j += 1) {\n    const nextColumnIndex = columnIndex + j;\n    // Cells should be spanned only within their column section (left-pinned, right-pinned and unpinned).\n    if (nextColumnIndex >= minFirstColumnIndex && nextColumnIndex < maxLastColumnIndex) {\n      const nextColumn = columns[nextColumnIndex];\n      width += nextColumn.computedWidth;\n      setCellColSpanInfo(lookup, rowId, columnIndex + j, {\n        spannedByColSpan: true,\n        rightVisibleCellIndex: Math.min(columnIndex + colSpan, columnsLength - 1),\n        leftVisibleCellIndex: columnIndex\n      });\n    }\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan,\n        width\n      }\n    });\n  }\n  return {\n    colSpan\n  };\n}\nfunction setCellColSpanInfo(lookup, rowId, columnIndex, cellColSpanInfo) {\n  if (!lookup[rowId]) {\n    lookup[rowId] = {};\n  }\n  lookup[rowId][columnIndex] = cellColSpanInfo;\n}","import { isLeaf } from '../../../models/gridColumnGrouping';\nimport { isDeepEqual } from '../../../utils/utils';\n// This is the recurrence function that help writing `unwrapGroupingColumnModel()`\nconst recurrentUnwrapGroupingColumnModel = (columnGroupNode, parents, unwrappedGroupingModelToComplete) => {\n  if (isLeaf(columnGroupNode)) {\n    if (unwrappedGroupingModelToComplete[columnGroupNode.field] !== undefined) {\n      throw new Error([`MUI X: columnGroupingModel contains duplicated field`, `column field ${columnGroupNode.field} occurs two times in the grouping model:`, `- ${unwrappedGroupingModelToComplete[columnGroupNode.field].join(' > ')}`, `- ${parents.join(' > ')}`].join('\\n'));\n    }\n    unwrappedGroupingModelToComplete[columnGroupNode.field] = parents;\n    return;\n  }\n  const {\n    groupId,\n    children\n  } = columnGroupNode;\n  children.forEach(child => {\n    recurrentUnwrapGroupingColumnModel(child, [...parents, groupId], unwrappedGroupingModelToComplete);\n  });\n};\n\n/**\n * This is a function that provide for each column the array of its parents.\n * Parents are ordered from the root to the leaf.\n * @param columnGroupingModel The model such as provided in DataGrid props\n * @returns An object `{[field]: groupIds}` where `groupIds` is the parents of the column `field`\n */\nexport const unwrapGroupingColumnModel = columnGroupingModel => {\n  if (!columnGroupingModel) {\n    return {};\n  }\n  const unwrappedSubTree = {};\n  columnGroupingModel.forEach(columnGroupNode => {\n    recurrentUnwrapGroupingColumnModel(columnGroupNode, [], unwrappedSubTree);\n  });\n  return unwrappedSubTree;\n};\nexport const getColumnGroupsHeaderStructure = (orderedColumns, unwrappedGroupingModel, pinnedFields) => {\n  const getParents = field => unwrappedGroupingModel[field] ?? [];\n  const groupingHeaderStructure = [];\n  const maxDepth = Math.max(...orderedColumns.map(field => getParents(field).length));\n  const haveSameParents = (field1, field2, depth) => isDeepEqual(getParents(field1).slice(0, depth + 1), getParents(field2).slice(0, depth + 1));\n  const haveDifferentContainers = (field1, field2) => {\n    if (pinnedFields?.left && pinnedFields.left.includes(field1) && !pinnedFields.left.includes(field2)) {\n      return true;\n    }\n    if (pinnedFields?.right && !pinnedFields.right.includes(field1) && pinnedFields.right.includes(field2)) {\n      return true;\n    }\n    return false;\n  };\n  for (let depth = 0; depth < maxDepth; depth += 1) {\n    const depthStructure = orderedColumns.reduce((structure, newField) => {\n      const groupId = getParents(newField)[depth] ?? null;\n      if (structure.length === 0) {\n        return [{\n          columnFields: [newField],\n          groupId\n        }];\n      }\n      const lastGroup = structure[structure.length - 1];\n      const prevField = lastGroup.columnFields[lastGroup.columnFields.length - 1];\n      const prevGroupId = lastGroup.groupId;\n      if (prevGroupId !== groupId || !haveSameParents(prevField, newField, depth) ||\n      // Fix for https://github.com/mui/mui-x/issues/7041\n      haveDifferentContainers(prevField, newField)) {\n        // It's a new group\n        return [...structure, {\n          columnFields: [newField],\n          groupId\n        }];\n      }\n\n      // It extends the previous group\n      return [...structure.slice(0, structure.length - 1), {\n        columnFields: [...lastGroup.columnFields, newField],\n        groupId\n      }];\n    }, []);\n    groupingHeaderStructure.push(depthStructure);\n  }\n  return groupingHeaderStructure;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"groupId\", \"children\"];\nimport * as React from 'react';\nimport { isLeaf } from '../../../models/gridColumnGrouping';\nimport { gridColumnGroupsLookupSelector, gridColumnGroupsUnwrappedModelSelector } from './gridColumnGroupsSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { getColumnGroupsHeaderStructure, unwrapGroupingColumnModel } from './gridColumnGroupsUtils';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from '../columns';\nconst createGroupLookup = columnGroupingModel => {\n  let groupLookup = {};\n  columnGroupingModel.forEach(node => {\n    if (isLeaf(node)) {\n      return;\n    }\n    const {\n        groupId,\n        children\n      } = node,\n      other = _objectWithoutPropertiesLoose(node, _excluded);\n    if (!groupId) {\n      throw new Error('MUI X: An element of the columnGroupingModel does not have either `field` or `groupId`.');\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!children) {\n        console.warn(`MUI X: group groupId=${groupId} has no children.`);\n      }\n    }\n    const groupParam = _extends({}, other, {\n      groupId\n    });\n    const subTreeLookup = createGroupLookup(children);\n    if (subTreeLookup[groupId] !== undefined || groupLookup[groupId] !== undefined) {\n      throw new Error(`MUI X: The groupId ${groupId} is used multiple times in the columnGroupingModel.`);\n    }\n    groupLookup = _extends({}, groupLookup, subTreeLookup, {\n      [groupId]: groupParam\n    });\n  });\n  return _extends({}, groupLookup);\n};\nexport const columnGroupsStateInitializer = (state, props, apiRef) => {\n  if (!props.columnGroupingModel) {\n    return state;\n  }\n  const columnFields = gridColumnFieldsSelector(apiRef);\n  const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n  const groupLookup = createGroupLookup(props.columnGroupingModel ?? []);\n  const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n  const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, apiRef.current.state.pinnedColumns ?? {});\n  const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n  return _extends({}, state, {\n    columnGrouping: {\n      lookup: groupLookup,\n      unwrappedGroupingModel,\n      headerStructure: columnGroupsHeaderStructure,\n      maxDepth\n    }\n  });\n};\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnGrouping = (apiRef, props) => {\n  /**\n   * API METHODS\n   */\n  const getColumnGroupPath = React.useCallback(field => {\n    const unwrappedGroupingModel = gridColumnGroupsUnwrappedModelSelector(apiRef);\n    return unwrappedGroupingModel[field] ?? [];\n  }, [apiRef]);\n  const getAllGroupDetails = React.useCallback(() => {\n    const columnGroupLookup = gridColumnGroupsLookupSelector(apiRef);\n    return columnGroupLookup;\n  }, [apiRef]);\n  const columnGroupingApi = {\n    getColumnGroupPath,\n    getAllGroupDetails\n  };\n  useGridApiMethod(apiRef, columnGroupingApi, 'public');\n  const handleColumnIndexChange = React.useCallback(() => {\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n    apiRef.current.setState(state => {\n      const orderedFields = state.columns?.orderedFields ?? [];\n      const pinnedColumns = state.pinnedColumns ?? {};\n      const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(orderedFields, unwrappedGroupingModel, pinnedColumns);\n      return _extends({}, state, {\n        columnGrouping: _extends({}, state.columnGrouping, {\n          headerStructure: columnGroupsHeaderStructure\n        })\n      });\n    });\n  }, [apiRef, props.columnGroupingModel]);\n  const updateColumnGroupingState = React.useCallback(columnGroupingModel => {\n    // @ts-expect-error Move this logic to `Pro` package\n    const pinnedColumns = apiRef.current.getPinnedColumns?.() ?? {};\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n    const groupLookup = createGroupLookup(columnGroupingModel ?? []);\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(columnGroupingModel ?? []);\n    const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, pinnedColumns);\n    const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        columnGrouping: {\n          lookup: groupLookup,\n          unwrappedGroupingModel,\n          headerStructure: columnGroupsHeaderStructure,\n          maxDepth\n        }\n      });\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnIndexChange', handleColumnIndexChange);\n  useGridApiEventHandler(apiRef, 'columnsChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  }, [updateColumnGroupingState, props.columnGroupingModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { useTheme } from '@mui/material/styles';\nimport { findGridCellElementsFromCol, findGridElement, findLeftPinnedCellsAfterCol, findRightPinnedCellsBeforeCol, getFieldFromHeaderElem, findHeaderElementFromField, getFieldsFromGroupHeaderElem, findGroupHeaderElementsFromField, findGridHeader, findGridCells, findParentElementFromClassName, findLeftPinnedHeadersAfterCol, findRightPinnedHeadersBeforeCol } from '../../../utils/domUtils';\nimport { DEFAULT_GRID_AUTOSIZE_OPTIONS } from './gridColumnResizeApi';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiEventHandler, useGridApiMethod, useGridApiOptionHandler, useGridLogger, useGridNativeEventListener, useGridSelector, useOnMount } from '../../utils';\nimport { gridVirtualizationColumnEnabledSelector } from '../virtualization';\nimport { createControllablePromise } from '../../../utils/createControllablePromise';\nimport { clamp } from '../../../utils/utils';\nimport { useTimeout } from '../../utils/useTimeout';\nimport { GridPinnedColumnPosition } from '../columns/gridColumnsInterfaces';\nimport { gridColumnsStateSelector } from '../columns';\n// TODO: remove support for Safari < 13.\n// https://caniuse.com/#search=touch-action\n//\n// Safari, on iOS, supports touch action since v13.\n// Over 80% of the iOS phones are compatible\n// in August 2020.\n// Utilizing the CSS.supports method to check if touch-action is supported.\n// Since CSS.supports is supported on all but Edge@12 and IE and touch-action\n// is supported on both Edge@12 and IE if CSS.supports is not available that means that\n// touch-action will be supported\nlet cachedSupportsTouchActionNone = false;\nfunction doesSupportTouchActionNone() {\n  if (cachedSupportsTouchActionNone === undefined) {\n    if (typeof CSS !== 'undefined' && typeof CSS.supports === 'function') {\n      cachedSupportsTouchActionNone = CSS.supports('touch-action', 'none');\n    } else {\n      cachedSupportsTouchActionNone = true;\n    }\n  }\n  return cachedSupportsTouchActionNone;\n}\nfunction trackFinger(event, currentTouchId) {\n  if (currentTouchId !== undefined && event.changedTouches) {\n    for (let i = 0; i < event.changedTouches.length; i += 1) {\n      const touch = event.changedTouches[i];\n      if (touch.identifier === currentTouchId) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n    return false;\n  }\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\nfunction computeNewWidth(initialOffsetToSeparator, clickX, columnBounds, resizeDirection) {\n  let newWidth = initialOffsetToSeparator;\n  if (resizeDirection === 'Right') {\n    newWidth += clickX - columnBounds.left;\n  } else {\n    newWidth += columnBounds.right - clickX;\n  }\n  return newWidth;\n}\nfunction computeOffsetToSeparator(clickX, columnBounds, resizeDirection) {\n  if (resizeDirection === 'Left') {\n    return clickX - columnBounds.left;\n  }\n  return columnBounds.right - clickX;\n}\nfunction flipResizeDirection(side) {\n  if (side === 'Right') {\n    return 'Left';\n  }\n  return 'Right';\n}\nfunction getResizeDirection(separator, direction) {\n  const side = separator.classList.contains(gridClasses['columnSeparator--sideRight']) ? 'Right' : 'Left';\n  if (direction === 'rtl') {\n    // Resizing logic should be mirrored in the RTL case\n    return flipResizeDirection(side);\n  }\n  return side;\n}\nfunction preventClick(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n\n/**\n * Checker that returns a promise that resolves when the column virtualization\n * is disabled.\n */\nfunction useColumnVirtualizationDisabled(apiRef) {\n  const promise = React.useRef();\n  const selector = () => gridVirtualizationColumnEnabledSelector(apiRef);\n  const value = useGridSelector(apiRef, selector);\n  React.useEffect(() => {\n    if (promise.current && value === false) {\n      promise.current.resolve();\n      promise.current = undefined;\n    }\n  });\n  const asyncCheck = () => {\n    if (!promise.current) {\n      if (selector() === false) {\n        return Promise.resolve();\n      }\n      promise.current = createControllablePromise();\n    }\n    return promise.current;\n  };\n  return asyncCheck;\n}\n\n/**\n * Basic statistical outlier detection, checks if the value is `F * IQR` away from\n * the Q1 and Q3 boundaries. IQR: interquartile range.\n */\nfunction excludeOutliers(inputValues, factor) {\n  if (inputValues.length < 4) {\n    return inputValues;\n  }\n  const values = inputValues.slice();\n  values.sort((a, b) => a - b);\n  const q1 = values[Math.floor(values.length * 0.25)];\n  const q3 = values[Math.floor(values.length * 0.75) - 1];\n  const iqr = q3 - q1;\n\n  // We make a small adjustment if `iqr < 5` for the cases where the IQR is\n  // very small (for example zero) due to very close by values in the input data.\n  // Otherwise, with an IQR of `0`, anything outside that would be considered\n  // an outlier, but it makes more sense visually to allow for this 5px variance\n  // rather than showing a cropped cell.\n  const deviation = iqr < 5 ? 5 : iqr * factor;\n  return values.filter(v => v > q1 - deviation && v < q3 + deviation);\n}\nfunction extractColumnWidths(apiRef, options, columns) {\n  const widthByField = {};\n  const root = apiRef.current.rootElementRef.current;\n  root.classList.add(gridClasses.autosizing);\n  columns.forEach(column => {\n    const cells = findGridCells(apiRef.current, column.field);\n    const widths = cells.map(cell => {\n      return cell.getBoundingClientRect().width ?? 0;\n    });\n    const filteredWidths = options.includeOutliers ? widths : excludeOutliers(widths, options.outliersFactor);\n    if (options.includeHeaders) {\n      const header = findGridHeader(apiRef.current, column.field);\n      if (header) {\n        const title = header.querySelector(`.${gridClasses.columnHeaderTitle}`);\n        const content = header.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n        const iconContainer = header.querySelector(`.${gridClasses.iconButtonContainer}`);\n        const menuContainer = header.querySelector(`.${gridClasses.menuIcon}`);\n        const element = title ?? content;\n        const style = window.getComputedStyle(header, null);\n        const paddingWidth = parseInt(style.paddingLeft, 10) + parseInt(style.paddingRight, 10);\n        const contentWidth = element.scrollWidth + 1;\n        const width = contentWidth + paddingWidth + (iconContainer?.clientWidth ?? 0) + (menuContainer?.clientWidth ?? 0);\n        filteredWidths.push(width);\n      }\n    }\n    const hasColumnMin = column.minWidth !== -Infinity && column.minWidth !== undefined;\n    const hasColumnMax = column.maxWidth !== Infinity && column.maxWidth !== undefined;\n    const min = hasColumnMin ? column.minWidth : 0;\n    const max = hasColumnMax ? column.maxWidth : Infinity;\n    const maxContent = filteredWidths.length === 0 ? 0 : Math.max(...filteredWidths);\n    widthByField[column.field] = clamp(maxContent, min, max);\n  });\n  root.classList.remove(gridClasses.autosizing);\n  return widthByField;\n}\nexport const columnResizeStateInitializer = state => _extends({}, state, {\n  columnResize: {\n    resizingColumnField: ''\n  }\n});\nfunction createResizeRefs() {\n  return {\n    colDef: undefined,\n    initialColWidth: 0,\n    initialTotalWidth: 0,\n    previousMouseClickEvent: undefined,\n    columnHeaderElement: undefined,\n    headerFilterElement: undefined,\n    groupHeaderElements: [],\n    cellElements: [],\n    leftPinnedCellsAfter: [],\n    rightPinnedCellsBefore: [],\n    fillerLeft: undefined,\n    fillerRight: undefined,\n    leftPinnedHeadersAfter: [],\n    rightPinnedHeadersBefore: []\n  };\n}\n\n/**\n * @requires useGridColumns (method, event)\n * TODO: improve experience for last column\n */\nexport const useGridColumnResize = (apiRef, props) => {\n  const theme = useTheme();\n  const logger = useGridLogger(apiRef, 'useGridColumnResize');\n  const refs = useLazyRef(createResizeRefs).current;\n\n  // To improve accessibility, the separator has padding on both sides.\n  // Clicking inside the padding area should be treated as a click in the separator.\n  // This ref stores the offset between the click and the separator.\n  const initialOffsetToSeparator = React.useRef();\n  const resizeDirection = React.useRef();\n  const stopResizeEventTimeout = useTimeout();\n  const touchId = React.useRef();\n  const updateWidth = newWidth => {\n    logger.debug(`Updating width to ${newWidth} for col ${refs.colDef.field}`);\n    const prevWidth = refs.columnHeaderElement.offsetWidth;\n    const widthDiff = newWidth - prevWidth;\n    const columnWidthDiff = newWidth - refs.initialColWidth;\n    const newTotalWidth = refs.initialTotalWidth + columnWidthDiff;\n    apiRef.current.rootElementRef?.current?.style.setProperty('--DataGrid-rowWidth', `${newTotalWidth}px`);\n    refs.colDef.computedWidth = newWidth;\n    refs.colDef.width = newWidth;\n    refs.colDef.flex = 0;\n    refs.columnHeaderElement.style.width = `${newWidth}px`;\n    refs.columnHeaderElement.style.minWidth = `${newWidth}px`;\n    refs.columnHeaderElement.style.maxWidth = `${newWidth}px`;\n    const headerFilterElement = refs.headerFilterElement;\n    if (headerFilterElement) {\n      headerFilterElement.style.width = `${newWidth}px`;\n      headerFilterElement.style.minWidth = `${newWidth}px`;\n      headerFilterElement.style.maxWidth = `${newWidth}px`;\n    }\n    refs.groupHeaderElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.width = finalWidth;\n      div.style.minWidth = finalWidth;\n      div.style.maxWidth = finalWidth;\n    });\n    refs.cellElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.setProperty('--width', finalWidth);\n    });\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      updateProperty(refs.fillerLeft, 'width', widthDiff);\n      refs.leftPinnedCellsAfter.forEach(cell => {\n        updateProperty(cell, 'left', widthDiff);\n      });\n      refs.leftPinnedHeadersAfter.forEach(header => {\n        updateProperty(header, 'left', widthDiff);\n      });\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      updateProperty(refs.fillerRight, 'width', widthDiff);\n      refs.rightPinnedCellsBefore.forEach(cell => {\n        updateProperty(cell, 'right', widthDiff);\n      });\n      refs.rightPinnedHeadersBefore.forEach(header => {\n        updateProperty(header, 'right', widthDiff);\n      });\n    }\n  };\n  const finishResize = nativeEvent => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    stopListening();\n\n    // Prevent double-clicks from being interpreted as two separate clicks\n    if (refs.previousMouseClickEvent) {\n      const prevEvent = refs.previousMouseClickEvent;\n      const prevTimeStamp = prevEvent.timeStamp;\n      const prevClientX = prevEvent.clientX;\n      const prevClientY = prevEvent.clientY;\n\n      // Check if the current event is part of a double-click\n      if (nativeEvent.timeStamp - prevTimeStamp < 300 && nativeEvent.clientX === prevClientX && nativeEvent.clientY === prevClientY) {\n        refs.previousMouseClickEvent = undefined;\n        return;\n      }\n    }\n    if (refs.colDef) {\n      apiRef.current.setColumnWidth(refs.colDef.field, refs.colDef.width);\n      logger.debug(`Updating col ${refs.colDef.field} with new width: ${refs.colDef.width}`);\n      const columnsState = gridColumnsStateSelector(apiRef.current.state);\n      refs.groupHeaderElements.forEach(element => {\n        const fields = getFieldsFromGroupHeaderElem(element);\n        const div = element;\n        const newWidth = fields.reduce((acc, field) => {\n          if (columnsState.columnVisibilityModel[field] !== false) {\n            return acc + columnsState.lookup[field].computedWidth;\n          }\n          return acc;\n        }, 0);\n        const finalWidth = `${newWidth}px`;\n        div.style.width = finalWidth;\n        div.style.minWidth = finalWidth;\n        div.style.maxWidth = finalWidth;\n      });\n    }\n    stopResizeEventTimeout.start(0, () => {\n      apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n    });\n  };\n  const storeReferences = (colDef, separator, xStart) => {\n    const root = apiRef.current.rootElementRef.current;\n    refs.initialColWidth = colDef.computedWidth;\n    refs.initialTotalWidth = apiRef.current.getRootDimensions().rowWidth;\n    refs.colDef = colDef;\n    refs.columnHeaderElement = findHeaderElementFromField(apiRef.current.columnHeadersContainerRef.current, colDef.field);\n    const headerFilterElement = root.querySelector(`.${gridClasses.headerFilterRow} [data-field=\"${colDef.field}\"]`);\n    if (headerFilterElement) {\n      refs.headerFilterElement = headerFilterElement;\n    }\n    refs.groupHeaderElements = findGroupHeaderElementsFromField(apiRef.current.columnHeadersContainerRef?.current, colDef.field);\n    refs.cellElements = findGridCellElementsFromCol(refs.columnHeaderElement, apiRef.current);\n    refs.fillerLeft = findGridElement(apiRef.current, 'filler--pinnedLeft');\n    refs.fillerRight = findGridElement(apiRef.current, 'filler--pinnedRight');\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    refs.leftPinnedCellsAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedCellsAfterCol(apiRef.current, refs.columnHeaderElement);\n    refs.rightPinnedCellsBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedCellsBeforeCol(apiRef.current, refs.columnHeaderElement);\n    refs.leftPinnedHeadersAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedHeadersAfterCol(apiRef.current, refs.columnHeaderElement);\n    refs.rightPinnedHeadersBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedHeadersBeforeCol(apiRef.current, refs.columnHeaderElement);\n    resizeDirection.current = getResizeDirection(separator, theme.direction);\n    initialOffsetToSeparator.current = computeOffsetToSeparator(xStart, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n  };\n  const handleResizeMouseUp = useEventCallback(finishResize);\n  const handleResizeMouseMove = useEventCallback(nativeEvent => {\n    // Cancel move in case some other element consumed a mouseup event and it was not fired.\n    if (nativeEvent.buttons === 0) {\n      handleResizeMouseUp(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, nativeEvent.clientX, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchEnd = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n    finishResize(nativeEvent);\n  });\n  const handleTouchMove = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n\n    // Cancel move in case some other element consumed a touchmove event and it was not fired.\n    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {\n      handleTouchEnd(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, finger.x, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchStart = useEventCallback(event => {\n    const cellSeparator = findParentElementFromClassName(event.target, gridClasses['columnSeparator--resizable']);\n    // Let the event bubble if the target is not a col separator\n    if (!cellSeparator) {\n      return;\n    }\n    // If touch-action: none; is not supported we need to prevent the scroll manually.\n    if (!doesSupportTouchActionNone()) {\n      event.preventDefault();\n    }\n    const touch = event.changedTouches[0];\n    if (touch != null) {\n      // A number that uniquely identifies the current finger in the touch session.\n      touchId.current = touch.identifier;\n    }\n    const columnHeaderElement = findParentElementFromClassName(event.target, gridClasses.columnHeader);\n    const field = getFieldFromHeaderElem(columnHeaderElement);\n    const colDef = apiRef.current.getColumn(field);\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field\n    }, event);\n    storeReferences(colDef, cellSeparator, touch.clientX);\n    const doc = ownerDocument(event.currentTarget);\n    doc.addEventListener('touchmove', handleTouchMove);\n    doc.addEventListener('touchend', handleTouchEnd);\n  });\n  const stopListening = React.useCallback(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.removeProperty('cursor');\n    doc.removeEventListener('mousemove', handleResizeMouseMove);\n    doc.removeEventListener('mouseup', handleResizeMouseUp);\n    doc.removeEventListener('touchmove', handleTouchMove);\n    doc.removeEventListener('touchend', handleTouchEnd);\n    // The click event runs right after the mouseup event, we want to wait until it\n    // has been canceled before removing our handler.\n    setTimeout(() => {\n      doc.removeEventListener('click', preventClick, true);\n    }, 100);\n    if (refs.columnHeaderElement) {\n      refs.columnHeaderElement.style.pointerEvents = 'unset';\n    }\n  }, [apiRef, refs, handleResizeMouseMove, handleResizeMouseUp, handleTouchMove, handleTouchEnd]);\n  const handleResizeStart = React.useCallback(({\n    field\n  }) => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: field\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleResizeStop = React.useCallback(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: ''\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleColumnResizeMouseDown = useEventCallback(({\n    colDef\n  }, event) => {\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Skip if the column isn't resizable\n    if (!event.currentTarget.classList.contains(gridClasses['columnSeparator--resizable'])) {\n      return;\n    }\n\n    // Avoid text selection\n    event.preventDefault();\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field: colDef.field\n    }, event);\n    storeReferences(colDef, event.currentTarget, event.clientX);\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.cursor = 'col-resize';\n    refs.previousMouseClickEvent = event.nativeEvent;\n    doc.addEventListener('mousemove', handleResizeMouseMove);\n    doc.addEventListener('mouseup', handleResizeMouseUp);\n\n    // Prevent the click event if we have resized the column.\n    // Fixes https://github.com/mui/mui-x/issues/4777\n    doc.addEventListener('click', preventClick, true);\n  });\n  const handleColumnSeparatorDoubleClick = useEventCallback((params, event) => {\n    if (props.disableAutosize) {\n      return;\n    }\n\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n    const column = apiRef.current.state.columns.lookup[params.field];\n    if (column.resizable === false) {\n      return;\n    }\n    apiRef.current.autosizeColumns(_extends({}, props.autosizeOptions, {\n      columns: [column.field]\n    }));\n  });\n\n  /**\n   * API METHODS\n   */\n\n  const columnVirtualizationDisabled = useColumnVirtualizationDisabled(apiRef);\n  const isAutosizingRef = React.useRef(false);\n  const autosizeColumns = React.useCallback(async userOptions => {\n    const root = apiRef.current.rootElementRef?.current;\n    if (!root) {\n      return;\n    }\n    if (isAutosizingRef.current) {\n      return;\n    }\n    isAutosizingRef.current = true;\n    const state = gridColumnsStateSelector(apiRef.current.state);\n    const options = _extends({}, DEFAULT_GRID_AUTOSIZE_OPTIONS, userOptions, {\n      columns: userOptions?.columns ?? state.orderedFields\n    });\n    options.columns = options.columns.filter(c => state.columnVisibilityModel[c] !== false);\n    const columns = options.columns.map(c => apiRef.current.state.columns.lookup[c]);\n    try {\n      apiRef.current.unstable_setColumnVirtualization(false);\n      await columnVirtualizationDisabled();\n      const widthByField = extractColumnWidths(apiRef, options, columns);\n      const newColumns = columns.map(column => _extends({}, column, {\n        width: widthByField[column.field],\n        computedWidth: widthByField[column.field]\n      }));\n      if (options.expand) {\n        const visibleColumns = state.orderedFields.map(field => state.lookup[field]).filter(c => state.columnVisibilityModel[c.field] !== false);\n        const totalWidth = visibleColumns.reduce((total, column) => total + (widthByField[column.field] ?? column.computedWidth ?? column.width), 0);\n        const availableWidth = apiRef.current.getRootDimensions().viewportInnerSize.width;\n        const remainingWidth = availableWidth - totalWidth;\n        if (remainingWidth > 0) {\n          const widthPerColumn = remainingWidth / (newColumns.length || 1);\n          newColumns.forEach(column => {\n            column.width += widthPerColumn;\n            column.computedWidth += widthPerColumn;\n          });\n        }\n      }\n      apiRef.current.updateColumns(newColumns);\n      newColumns.forEach((newColumn, index) => {\n        if (newColumn.width !== columns[index].width) {\n          const width = newColumn.width;\n          apiRef.current.publishEvent('columnWidthChange', {\n            element: apiRef.current.getColumnHeaderElement(newColumn.field),\n            colDef: newColumn,\n            width\n          });\n        }\n      });\n    } finally {\n      apiRef.current.unstable_setColumnVirtualization(true);\n      isAutosizingRef.current = false;\n    }\n  }, [apiRef, columnVirtualizationDisabled]);\n\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => stopListening, [stopListening]);\n  useOnMount(() => {\n    if (props.autosizeOnMount) {\n      Promise.resolve().then(() => {\n        apiRef.current.autosizeColumns(props.autosizeOptions);\n      });\n    }\n  });\n  useGridNativeEventListener(apiRef, () => apiRef.current.columnHeadersContainerRef?.current, 'touchstart', handleTouchStart, {\n    passive: doesSupportTouchActionNone()\n  });\n  useGridApiMethod(apiRef, {\n    autosizeColumns\n  }, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleResizeStop);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleResizeStart);\n  useGridApiEventHandler(apiRef, 'columnSeparatorMouseDown', handleColumnResizeMouseDown);\n  useGridApiEventHandler(apiRef, 'columnSeparatorDoubleClick', handleColumnSeparatorDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnResize', props.onColumnResize);\n  useGridApiOptionHandler(apiRef, 'columnWidthChange', props.onColumnWidthChange);\n};\nfunction updateProperty(element, property, delta) {\n  if (!element) {\n    return;\n  }\n  element.style[property] = `${parseInt(element.style[property], 10) + delta}px`;\n}","export function createControllablePromise() {\n  let resolve;\n  let reject;\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  promise.resolve = resolve;\n  promise.reject = reject;\n  return promise;\n}","import { useGridInitialization } from '../hooks/core/useGridInitialization';\nimport { useGridInitializeState } from '../hooks/utils/useGridInitializeState';\nimport { useGridClipboard } from '../hooks/features/clipboard/useGridClipboard';\nimport { columnMenuStateInitializer, useGridColumnMenu } from '../hooks/features/columnMenu/useGridColumnMenu';\nimport { useGridColumns, columnsStateInitializer } from '../hooks/features/columns/useGridColumns';\nimport { densityStateInitializer, useGridDensity } from '../hooks/features/density/useGridDensity';\nimport { useGridCsvExport } from '../hooks/features/export/useGridCsvExport';\nimport { useGridPrintExport } from '../hooks/features/export/useGridPrintExport';\nimport { useGridFilter, filterStateInitializer } from '../hooks/features/filter/useGridFilter';\nimport { focusStateInitializer, useGridFocus } from '../hooks/features/focus/useGridFocus';\nimport { useGridKeyboardNavigation } from '../hooks/features/keyboardNavigation/useGridKeyboardNavigation';\nimport { useGridPagination, paginationStateInitializer } from '../hooks/features/pagination/useGridPagination';\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from '../hooks/features/preferencesPanel/useGridPreferencesPanel';\nimport { useGridEditing, editingStateInitializer } from '../hooks/features/editing/useGridEditing';\nimport { useGridRows, rowsStateInitializer } from '../hooks/features/rows/useGridRows';\nimport { useGridRowsPreProcessors } from '../hooks/features/rows/useGridRowsPreProcessors';\nimport { useGridParamsApi } from '../hooks/features/rows/useGridParamsApi';\nimport { rowSelectionStateInitializer, useGridRowSelection } from '../hooks/features/rowSelection/useGridRowSelection';\nimport { useGridRowSelectionPreProcessors } from '../hooks/features/rowSelection/useGridRowSelectionPreProcessors';\nimport { useGridSorting, sortingStateInitializer } from '../hooks/features/sorting/useGridSorting';\nimport { useGridScroll } from '../hooks/features/scroll/useGridScroll';\nimport { useGridEvents } from '../hooks/features/events/useGridEvents';\nimport { dimensionsStateInitializer, useGridDimensions } from '../hooks/features/dimensions/useGridDimensions';\nimport { rowsMetaStateInitializer, useGridRowsMeta } from '../hooks/features/rows/useGridRowsMeta';\nimport { useGridStatePersistence } from '../hooks/features/statePersistence/useGridStatePersistence';\nimport { useGridColumnSpanning } from '../hooks/features/columns/useGridColumnSpanning';\nimport { useGridColumnGrouping, columnGroupsStateInitializer } from '../hooks/features/columnGrouping/useGridColumnGrouping';\nimport { useGridVirtualization, virtualizationStateInitializer } from '../hooks/features/virtualization';\nimport { columnResizeStateInitializer, useGridColumnResize } from '../hooks/features/columnResize/useGridColumnResize';\nexport const useDataGridComponent = (inputApiRef, props) => {\n  const apiRef = useGridInitialization(inputApiRef, props);\n\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n  useGridRowSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n\n  /**\n   * Register all state initializers here.\n   */\n  useGridInitializeState(dimensionsStateInitializer, apiRef, props);\n  useGridInitializeState(rowSelectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState(editingStateInitializer, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(columnResizeStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\n  useGridInitializeState(virtualizationStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridRowSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridParamsApi(apiRef);\n  useGridColumnSpanning(apiRef);\n  useGridColumnGrouping(apiRef, props);\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridColumnResize(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef, props);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef, props);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  useGridVirtualization(apiRef, props);\n  return apiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { getDataGridUtilityClass } from '../../../constants';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from '../../../colDef';\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\nexport const useGridRowSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.orderedFields = [GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.orderedFields];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridSelector, useGridApiMethod } from '../../utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPaginationMetaSelector } from './gridPaginationSelector';\nexport const useGridPaginationMeta = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationMeta');\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  apiRef.current.registerControlState({\n    stateId: 'paginationMeta',\n    propModel: props.paginationMeta,\n    propOnChange: props.onPaginationMetaChange,\n    stateSelector: gridPaginationMetaSelector,\n    changeEvent: 'paginationMetaChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPaginationMeta = React.useCallback(newPaginationMeta => {\n    if (paginationMeta === newPaginationMeta) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationMeta' to\", newPaginationMeta);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: newPaginationMeta\n      })\n    }));\n  }, [apiRef, logger, paginationMeta]);\n  const paginationMetaApi = {\n    setPaginationMeta\n  };\n  useGridApiMethod(apiRef, paginationMetaApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedPaginationMeta = gridPaginationMetaSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationMeta` is controlled\n    props.paginationMeta != null ||\n    // Always export if the `paginationMeta` has been initialized\n    props.initialState?.pagination?.meta != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        meta: exportedPaginationMeta\n      })\n    });\n  }, [apiRef, props.paginationMeta, props.initialState?.pagination?.meta]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredPaginationMeta = context.stateToRestore.pagination?.meta ? context.stateToRestore.pagination.meta : gridPaginationMetaSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: restoredPaginationMeta\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMeta) {\n      apiRef.current.setPaginationMeta(props.paginationMeta);\n    }\n  }, [apiRef, props.paginationMeta]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { gridFilteredTopLevelRowCountSelector } from '../filter';\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPaginationRowCountSelector, gridPaginationMetaSelector, gridPaginationModelSelector } from './gridPaginationSelector';\nexport const useGridRowCount = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridRowCount');\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const rowCountState = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const previousPageSize = useLazyRef(() => gridPaginationModelSelector(apiRef).pageSize);\n  apiRef.current.registerControlState({\n    stateId: 'paginationRowCount',\n    propModel: props.rowCount,\n    propOnChange: props.onRowCountChange,\n    stateSelector: gridPaginationRowCountSelector,\n    changeEvent: 'rowCountChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setRowCount = React.useCallback(newRowCount => {\n    if (rowCountState === newRowCount) {\n      return;\n    }\n    logger.debug(\"Setting 'rowCount' to\", newRowCount);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: newRowCount\n      })\n    }));\n  }, [apiRef, logger, rowCountState]);\n  const paginationRowCountApi = {\n    setRowCount\n  };\n  useGridApiMethod(apiRef, paginationRowCountApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedRowCount = gridPaginationRowCountSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `rowCount` is controlled\n    props.rowCount != null ||\n    // Always export if the `rowCount` has been initialized\n    props.initialState?.pagination?.rowCount != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        rowCount: exportedRowCount\n      })\n    });\n  }, [apiRef, props.rowCount, props.initialState?.pagination?.rowCount]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredRowCount = context.stateToRestore.pagination?.rowCount ? context.stateToRestore.pagination.rowCount : gridPaginationRowCountSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: restoredRowCount\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = React.useCallback(model => {\n    if (props.paginationMode === 'client' || !previousPageSize.current) {\n      return;\n    }\n    if (model.pageSize !== previousPageSize.current) {\n      previousPageSize.current = model.pageSize;\n      if (rowCountState === -1) {\n        // Row count unknown and page size changed, reset the page\n        apiRef.current.setPage(0);\n      }\n    }\n  }, [props.paginationMode, previousPageSize, rowCountState, apiRef]);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMode === 'client') {\n      apiRef.current.setRowCount(visibleTopLevelRowCount);\n    } else if (props.rowCount != null) {\n      apiRef.current.setRowCount(props.rowCount);\n    }\n  }, [apiRef, props.paginationMode, visibleTopLevelRowCount, props.rowCount]);\n  const isLastPage = paginationMeta.hasNextPage === false;\n  React.useEffect(() => {\n    if (isLastPage && rowCountState === -1) {\n      apiRef.current.setRowCount(paginationModel.pageSize * paginationModel.page + visibleTopLevelRowCount);\n    }\n  }, [apiRef, visibleTopLevelRowCount, isLastPage, rowCountState, paginationModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridExpandedRowCountSelector } from '../filter/gridFilterSelector';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../columns/gridColumnsSelector';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { GRID_ID_AUTOGENERATED } from '../rows/gridRowsUtils';\nimport { defaultGetRowsToExport, getColumnsToExport } from './utils';\nimport { getDerivedPaginationModel } from '../pagination/useGridPaginationModel';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridPrintExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../colDef/gridCheckboxSelectionColDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction raf() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      resolve();\n    });\n  });\n}\nfunction buildPrintWindow(title) {\n  const iframeEl = document.createElement('iframe');\n  iframeEl.style.position = 'absolute';\n  iframeEl.style.width = '0px';\n  iframeEl.style.height = '0px';\n  iframeEl.title = title || document.title;\n  return iframeEl;\n}\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  const previousRows = React.useRef([]);\n  const previousVirtualizationState = React.useRef();\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef]);\n\n  // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns, includeCheckboxes) => new Promise(resolve => {\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    if (includeCheckboxes) {\n      newColumnVisibilityModel[GRID_CHECKBOX_SELECTION_COL_DEF.field] = true;\n    }\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]);\n  const updateGridRowsForPrint = React.useCallback(getRowsToExport => {\n    const rowsToExportIds = getRowsToExport({\n      apiRef\n    });\n    const newRows = rowsToExportIds.reduce((acc, id) => {\n      const row = apiRef.current.getRow(id);\n      if (!row[GRID_ID_AUTOGENERATED]) {\n        acc.push(row);\n      }\n      return acc;\n    }, []);\n    apiRef.current.setRows(newRows);\n  }, [apiRef]);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false,\n      includeCheckboxes: false\n    }, options);\n    const printDoc = printWindow.contentDocument;\n    if (!printDoc) {\n      return;\n    }\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n\n    // Allow to overflow to not hide the border of the last row\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n\n    // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n    gridClone.style.contain = 'size';\n    let gridToolbarElementHeight = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)?.offsetHeight || 0;\n    let gridFooterElementHeight = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)?.offsetHeight || 0;\n    if (normalizeOptions.hideToolbar) {\n      gridClone.querySelector(`.${gridClasses.toolbarContainer}`)?.remove();\n      gridToolbarElementHeight = 0;\n    }\n    if (normalizeOptions.hideFooter) {\n      gridClone.querySelector(`.${gridClasses.footerContainer}`)?.remove();\n      gridFooterElementHeight = 0;\n    }\n\n    // Expand container height to accommodate all rows\n    const computedTotalHeight = rowsMeta.currentPageTotalHeight + getTotalHeaderHeight(apiRef, props) + gridToolbarElementHeight + gridFooterElementHeight;\n    gridClone.style.height = `${computedTotalHeight}px`;\n    // The height above does not include grid border width, so we need to exclude it\n    gridClone.style.boxSizing = 'content-box';\n\n    // the footer is always being placed at the bottom of the page as if all rows are exported\n    // so if getRowsToExport is being used to only export a subset of rows then we need to\n    // adjust the footer position to be correctly placed at the bottom of the grid\n    const gridFooterElement = gridClone.querySelector(`.${gridClasses.footerContainer}`);\n    gridFooterElement.style.position = 'absolute';\n    gridFooterElement.style.width = '100%';\n    gridFooterElement.style.top = `${computedTotalHeight - gridFooterElementHeight}px`;\n\n    // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n    const container = document.createElement('div');\n    container.appendChild(gridClone);\n    // To avoid an empty page in start on Chromium based browsers\n    printDoc.body.style.marginTop = '0px';\n    printDoc.body.innerHTML = container.innerHTML;\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n    const stylesheetLoadPromises = [];\n    if (normalizeOptions.copyStyles) {\n      const rootCandidate = gridRootElement.getRootNode();\n      const root = rootCandidate.constructor.name === 'ShadowRoot' ? rootCandidate : doc.current;\n      const headStyleElements = root.querySelectorAll(\"style, link[rel='stylesheet']\");\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n          if (sheet) {\n            let styleCSS = '';\n            // NOTE: for-of is not supported by IE\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n          stylesheetLoadPromises.push(new Promise(resolve => {\n            newHeadStyleElements.addEventListener('load', () => resolve());\n          }));\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    }\n\n    // Trigger print\n    if (process.env.NODE_ENV !== 'test') {\n      // wait for remote stylesheets to load\n      Promise.all(stylesheetLoadPromises).then(() => {\n        printWindow.contentWindow.print();\n      });\n    }\n  }, [apiRef, doc, props]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow);\n\n    // Revert grid to previous state\n    apiRef.current.restoreState(previousGridState.current || {});\n    if (!previousGridState.current?.columns?.columnVisibilityModel) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: previousVirtualizationState.current\n    }));\n    apiRef.current.setRows(previousRows.current);\n\n    // Clear local state\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n    previousRows.current = [];\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI X: No grid root element available.');\n    }\n    previousGridState.current = apiRef.current.exportState();\n    // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n    previousRows.current = apiRef.current.getSortedRows().filter(row => !row[GRID_ID_AUTOGENERATED]);\n    if (props.pagination) {\n      const visibleRowCount = gridExpandedRowCountSelector(apiRef);\n      const paginationModel = {\n        page: 0,\n        pageSize: visibleRowCount\n      };\n      apiRef.current.setState(state => _extends({}, state, {\n        pagination: _extends({}, state.pagination, {\n          paginationModel: getDerivedPaginationModel(state.pagination,\n          // Using signature `DataGridPro` to allow more than 100 rows in the print export\n          'DataGridPro', paginationModel)\n        })\n      }));\n    }\n    previousVirtualizationState.current = apiRef.current.state.virtualization;\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled: false,\n        enabledForColumns: false\n      })\n    }));\n    await updateGridColumnsForPrint(options?.fields, options?.allColumns, options?.includeCheckboxes);\n    updateGridRowsForPrint(options?.getRowsToExport ?? defaultGetRowsToExport);\n    await raf(); // wait for the state changes to take action\n    const printWindow = buildPrintWindow(options?.fileName);\n    if (process.env.NODE_ENV === 'test') {\n      doc.current.body.appendChild(printWindow);\n      // In test env, run the all pipeline without waiting for loading\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => {\n        handlePrintWindowLoad(printWindow, options);\n        const mediaQueryList = printWindow.contentWindow.matchMedia('print');\n        mediaQueryList.addEventListener('change', mql => {\n          const isAfterPrint = mql.matches === false;\n          if (isAfterPrint) {\n            handlePrintWindowAfterPrint(printWindow);\n          }\n        });\n      };\n      doc.current.body.appendChild(printWindow);\n    }\n  }, [props, logger, apiRef, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint, updateGridRowsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.printOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","export function throttle(func, wait = 166) {\n  let timeout;\n  let lastArgs;\n  const later = () => {\n    timeout = undefined;\n    func(...lastArgs);\n  };\n  function throttled(...args) {\n    lastArgs = args;\n    if (timeout === undefined) {\n      timeout = setTimeout(later, wait);\n    }\n  }\n  throttled.clear = () => {\n    clearTimeout(timeout);\n    timeout = undefined;\n  };\n  return throttled;\n}","import { useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\n/**\n * @requires useGridFocus (event) - can be after, async only\n * @requires useGridColumns (event) - can be after, async only\n */\nexport function useGridEvents(apiRef, props) {\n  useGridApiOptionHandler(apiRef, 'columnHeaderClick', props.onColumnHeaderClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderDoubleClick', props.onColumnHeaderDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOver', props.onColumnHeaderOver);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOut', props.onColumnHeaderOut);\n  useGridApiOptionHandler(apiRef, 'columnHeaderEnter', props.onColumnHeaderEnter);\n  useGridApiOptionHandler(apiRef, 'columnHeaderLeave', props.onColumnHeaderLeave);\n  useGridApiOptionHandler(apiRef, 'cellClick', props.onCellClick);\n  useGridApiOptionHandler(apiRef, 'cellDoubleClick', props.onCellDoubleClick);\n  useGridApiOptionHandler(apiRef, 'cellKeyDown', props.onCellKeyDown);\n  useGridApiOptionHandler(apiRef, 'preferencePanelClose', props.onPreferencePanelClose);\n  useGridApiOptionHandler(apiRef, 'preferencePanelOpen', props.onPreferencePanelOpen);\n  useGridApiOptionHandler(apiRef, 'menuOpen', props.onMenuOpen);\n  useGridApiOptionHandler(apiRef, 'menuClose', props.onMenuClose);\n  useGridApiOptionHandler(apiRef, 'rowDoubleClick', props.onRowDoubleClick);\n  useGridApiOptionHandler(apiRef, 'rowClick', props.onRowClick);\n  useGridApiOptionHandler(apiRef, 'stateChange', props.onStateChange);\n}","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils';\nexport const useGridStatePersistence = apiRef => {\n  const exportState = React.useCallback((params = {}) => {\n    const stateToExport = apiRef.current.unstable_applyPipeProcessors('exportState', {}, params);\n    return stateToExport;\n  }, [apiRef]);\n  const restoreState = React.useCallback(stateToRestore => {\n    const response = apiRef.current.unstable_applyPipeProcessors('restoreState', {\n      callbacks: []\n    }, {\n      stateToRestore\n    });\n    response.callbacks.forEach(callback => {\n      callback();\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const statePersistenceApi = {\n    exportState,\n    restoreState\n  };\n  useGridApiMethod(apiRef, statePersistenceApi, 'public');\n};","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridBody, GridFooterPlaceholder, GridHeader, GridRoot } from '../components';\nimport { GridContextProvider } from '../context/GridContextProvider';\nimport { useDataGridComponent } from './useDataGridComponent';\nimport { useDataGridProps } from './useDataGridProps';\nimport { propValidatorsDataGrid, validateProps } from '../internals/utils/propValidation';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst propValidators = [...propValidatorsDataGrid,\n// Only validate in MIT version\nprops => props.columns && props.columns.some(column => column.resizable) && [`MUI X: \\`column.resizable = true\\` is not a valid prop.`, 'Column resizing is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n') || undefined];\nconst DataGridRaw = /*#__PURE__*/React.forwardRef(function DataGrid(inProps, ref) {\n  const props = useDataGridProps(inProps);\n  const privateApiRef = useDataGridComponent(props.apiRef, props);\n  validateProps(props, propValidators);\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    privateApiRef: privateApiRef,\n    props: props,\n    children: /*#__PURE__*/_jsxs(GridRoot, _extends({\n      className: props.className,\n      style: props.style,\n      sx: props.sx,\n      ref: ref\n    }, props.forwardedProps, {\n      children: [/*#__PURE__*/_jsx(GridHeader, {}), /*#__PURE__*/_jsx(GridBody, {}), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\n    }))\n  });\n});\n/**\n * Demos:\n * - [DataGrid](https://mui.com/x/react-data-grid/demo/)\n *\n * API:\n * - [DataGrid API](https://mui.com/x/api/data-grid/data-grid/)\n */\nexport const DataGrid = /*#__PURE__*/React.memo(DataGridRaw);\nDataGridRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The ref object that allows Data Grid manipulation. Can be instantiated with `useGridApiRef()`.\n   */\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }),\n  /**\n   * The label of the Data Grid.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * The id of the element containing a label for the Data Grid.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the Data Grid height is dynamic and follow the number of rows in the Data Grid.\n   * @default false\n   */\n  autoHeight: PropTypes.bool,\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n  /**\n   * If `true`, columns are autosized after the datagrid is mounted.\n   * @default false\n   */\n  autosizeOnMount: PropTypes.bool,\n  /**\n   * The options for autosize when user-initiated.\n   */\n  autosizeOptions: PropTypes.shape({\n    columns: PropTypes.arrayOf(PropTypes.string),\n    expand: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    includeOutliers: PropTypes.bool,\n    outliersFactor: PropTypes.number\n  }),\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n  /**\n   * If `true`, the Data Grid will display an extra column with checkboxes for selecting rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The character used to separate cell values when copying to the clipboard.\n   * @default '\\t'\n   */\n  clipboardCopyCellDelimiter: PropTypes.string,\n  /**\n   * Column region in pixels to render before/after the viewport\n   * @default 150\n   */\n  columnBufferPx: PropTypes.number,\n  columnGroupingModel: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * Sets the height in pixel of the column headers in the Data Grid.\n   * @default 56\n   */\n  columnHeaderHeight: PropTypes.number,\n  /**\n   * Set of columns of type [[GridColDef]][].\n   */\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /**\n   * Set the column visibility model of the Data Grid.\n   * If defined, the Data Grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n  /**\n   * Set the density of the Data Grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n  /**\n   * If `true`, column autosizing on header separator double-click is disabled.\n   * @default false\n   */\n  disableAutosize: PropTypes.bool,\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n  /**\n   * If `true`, resizing columns is disabled.\n   * @default false\n   */\n  disableColumnResize: PropTypes.bool,\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n  /**\n   * If `true`, the column sorting feature will be disabled.\n   * @default false\n   */\n  disableColumnSorting: PropTypes.bool,\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n  /**\n   * If `true`, `eval()` is not used for performance optimization.\n   * @default false\n   */\n  disableEval: PropTypes.bool,\n  /**\n   * If `true`, multiple selection using the Ctrl/CMD or Shift key is disabled.\n   * The MIT DataGrid will ignore this prop, unless `checkboxSelection` is enabled.\n   * @default false (`!props.checkboxSelection` for MIT Data Grid)\n   */\n  disableMultipleRowSelection: PropTypes.bool,\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableRowSelectionOnClick: PropTypes.bool,\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n  /**\n   * Use if the actual rowCount is not known upfront, but an estimation is available.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Applicable only with `paginationMode=\"server\"` and when `rowCount=\"-1\"`\n   */\n  estimatedRowCount: PropTypes.number,\n  /**\n   * Unstable features, breaking changes might be introduced.\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n  /**\n   * The milliseconds delay to wait after a keystroke before triggering filtering.\n   * @default 150\n   */\n  filterDebounceMs: PropTypes.number,\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * Set the filter model of the Data Grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      field: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operator: PropTypes.string.isRequired,\n      value: PropTypes.any\n    })).isRequired,\n    logicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterExcludeHiddenColumns: PropTypes.bool,\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n  /**\n   * Forwarded props for the Data Grid root element.\n   * @ignore - do not document.\n   */\n  forwardedProps: PropTypes.object,\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {React.JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n  /**\n   * If `true`, the diacritics (accents) are ignored when filtering or quick filtering.\n   * E.g. when filter value is `cafe`, the rows with `café` will be visible.\n   * @default false\n   */\n  ignoreDiacritics: PropTypes.bool,\n  /**\n   * If `true`, the Data Grid will not use `valueFormatter` when exporting to CSV or copying to clipboard.\n   * If an object is provided, you can choose to ignore the `valueFormatter` for CSV export or clipboard export.\n   * @default false\n   */\n  ignoreValueFormatterDuringExport: PropTypes.oneOfType([PropTypes.shape({\n    clipboardExport: PropTypes.bool,\n    csvExport: PropTypes.bool\n  }), PropTypes.bool]),\n  /**\n   * The initial state of the DataGrid.\n   * The data in it will be set in the state on initialization but will not be controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the cell is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n  /**\n   * If `true`, a loading overlay is displayed.\n   */\n  loading: PropTypes.bool,\n  /**\n   * Set the locale text of the Data Grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"error\" (\"warn\" in dev mode)\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containing which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n  /**\n   * Callback called when the data is copied to the clipboard.\n   * @param {string} data The data copied to the clipboard.\n   */\n  onClipboardCopy: PropTypes.func,\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n  /**\n   * Callback fired while a column is being resized.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnResize: PropTypes.func,\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n  /**\n   * Callback fired when the width of a column is changed.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnWidthChange: PropTypes.func,\n  /**\n   * Callback fired when the density changes.\n   * @param {GridDensity} density New density value.\n   */\n  onDensityChange: PropTypes.func,\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n  /**\n   * Callback fired when the pagination meta has changed.\n   * @param {GridPaginationMeta} paginationMeta Updated pagination meta.\n   */\n  onPaginationMetaChange: PropTypes.func,\n  /**\n   * Callback fired when the pagination model has changed.\n   * @param {GridPaginationModel} model Updated pagination model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPaginationModelChange: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n  /**\n   * Callback fired when the Data Grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n  /**\n   * Callback fired when the row count has changed.\n   * @param {number} count Updated row count.\n   */\n  onRowCountChange: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containing which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridRowSelectionModel} rowSelectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowSelectionModelChange: PropTypes.func,\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n  /**\n   * Callback fired when the state of the Data Grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @ignore - do not document.\n   */\n  onStateChange: PropTypes.func,\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  pagination: PropTypes.oneOf([true]),\n  /**\n   * The extra information about the pagination state of the Data Grid.\n   * Only applicable with `paginationMode=\"server\"`.\n   */\n  paginationMeta: PropTypes.shape({\n    hasNextPage: PropTypes.bool\n  }),\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The pagination model of type [[GridPaginationModel]] which refers to current `page` and `pageSize`.\n   */\n  paginationModel: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired\n  }),\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n  /**\n   * The milliseconds throttle delay for resizing the grid.\n   * @default 60\n   */\n  resizeThrottleMs: PropTypes.number,\n  /**\n   * Row region in pixels to render before/after the viewport\n   * @default 150\n   */\n  rowBufferPx: PropTypes.number,\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Only works with `paginationMode=\"server\"`, ignored when `paginationMode=\"client\"`.\n   */\n  rowCount: PropTypes.number,\n  /**\n   * Sets the height in pixel of a row in the Data Grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n  /**\n   * The milliseconds delay to wait after measuring the row height before recalculating row positions.\n   * Setting it to a lower value could be useful when using dynamic row height,\n   * but might reduce performance when displaying a large number of rows.\n   * @default 166\n   */\n  rowPositionsDebounceMs: PropTypes.number,\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   * @default []\n   */\n  rows: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * If `false`, the row selection mode is disabled.\n   * @default true\n   */\n  rowSelection: PropTypes.bool,\n  /**\n   * Sets the row selection model of the Data Grid.\n   */\n  rowSelectionModel: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired), PropTypes.number, PropTypes.string]),\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n  /**\n   * Override the height/width of the Data Grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n  /**\n   * If `true`, the vertical borders of the cells are displayed.\n   * @default false\n   */\n  showCellVerticalBorder: PropTypes.bool,\n  /**\n   * If `true`, the right border of the column headers are displayed.\n   * @default false\n   */\n  showColumnVerticalBorder: PropTypes.bool,\n  /**\n   * Overridable components props dynamically passed to the component at rendering.\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable components.\n   */\n  slots: PropTypes.object,\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n  /**\n   * Set the sort model of the Data Grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n};","import { isNumber } from '../../utils/utils';\nimport { GridSignature } from '../../hooks/utils/useGridApiEventHandler';\nexport const propValidatorsDataGrid = [props => props.autoPageSize && props.autoHeight && ['MUI X: `<DataGrid autoPageSize={true} autoHeight={true} />` are not valid props.', 'You cannot use both the `autoPageSize` and `autoHeight` props at the same time because `autoHeight` scales the height of the Data Grid according to the `pageSize`.', '', 'Please remove one of these two props.'].join('\\n') || undefined, props => props.paginationMode === 'client' && props.paginationMeta != null && ['MUI X: Usage of the `paginationMeta` prop with client-side pagination (`paginationMode=\"client\"`) has no effect.', '`paginationMeta` is only meant to be used with `paginationMode=\"server\"`.'].join('\\n') || undefined, props => props.signature === GridSignature.DataGrid && props.paginationMode === 'client' && isNumber(props.rowCount) && ['MUI X: Usage of the `rowCount` prop with client side pagination (`paginationMode=\"client\"`) has no effect.', '`rowCount` is only meant to be used with `paginationMode=\"server\"`.'].join('\\n') || undefined, props => props.paginationMode === 'server' && props.rowCount == null && [\"MUI X: The `rowCount` prop must be passed using `paginationMode='server'`\", 'For more detail, see http://mui.com/components/data-grid/pagination/#index-based-pagination'].join('\\n') || undefined];\nconst warnedOnceCache = new Set();\nconst warnOnce = message => {\n  if (!warnedOnceCache.has(message)) {\n    console.error(message);\n    warnedOnceCache.add(message);\n  }\n};\nexport const validateProps = (props, validators) => {\n  if (process.env.NODE_ENV === 'production') {\n    return;\n  }\n  validators.forEach(validator => {\n    const warning = validator(props);\n    if (warning) {\n      warnOnce(warning);\n    }\n  });\n};\nexport const clearWarningsCache = () => {\n  warnedOnceCache.clear();\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridNoResultsOverlay = /*#__PURE__*/React.forwardRef(function GridNoResultsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noResultsOverlayLabel = apiRef.current.getLocaleText('noResultsOverlayLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noResultsOverlayLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sortingOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridColumnUnsortedIcon = /*#__PURE__*/React.memo(function GridColumnHeaderSortIcon(props) {\n  const {\n      sortingOrder\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const [nextSortDirection] = sortingOrder;\n  const Icon = nextSortDirection === 'asc' ? rootProps.slots.columnSortedAscendingIcon : rootProps.slots.columnSortedDescendingIcon;\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({}, other)) : null;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"native\"];\nimport * as React from 'react';\nimport MUIMenuItem from '@mui/material/MenuItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MUISelectOption(_ref) {\n  let {\n      native\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (native) {\n    return /*#__PURE__*/_jsx(\"option\", _extends({}, props));\n  }\n  return /*#__PURE__*/_jsx(MUIMenuItem, _extends({}, props));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport MUICheckbox from '@mui/material/Checkbox';\nimport MUITextField from '@mui/material/TextField';\nimport MUIFormControl from '@mui/material/FormControl';\nimport MUISelect from '@mui/material/Select';\nimport MUIButton from '@mui/material/Button';\nimport MUIIconButton from '@mui/material/IconButton';\nimport MUIInputAdornment from '@mui/material/InputAdornment';\nimport MUITooltip from '@mui/material/Tooltip';\nimport MUIPopper from '@mui/material/Popper';\nimport MUIInputLabel from '@mui/material/InputLabel';\nimport MUIChip from '@mui/material/Chip';\nimport { GridColumnUnsortedIcon } from './icons/GridColumnUnsortedIcon';\nimport { GridAddIcon, GridArrowDownwardIcon, GridArrowUpwardIcon, GridCheckIcon, GridCloseIcon, GridColumnIcon, GridDragIcon, GridExpandMoreIcon, GridFilterAltIcon, GridFilterListIcon, GridKeyboardArrowRight, GridMoreVertIcon, GridRemoveIcon, GridSaveAltIcon, GridSearchIcon, GridSeparatorIcon, GridTableRowsIcon, GridTripleDotsVerticalIcon, GridViewHeadlineIcon, GridViewStreamIcon, GridVisibilityOffIcon, GridViewColumnIcon, GridClearIcon, GridLoadIcon, GridDeleteForeverIcon } from './icons';\nimport MUISelectOption from './components/MUISelectOption';\nconst iconSlots = {\n  booleanCellTrueIcon: GridCheckIcon,\n  booleanCellFalseIcon: GridCloseIcon,\n  columnMenuIcon: GridTripleDotsVerticalIcon,\n  openFilterButtonIcon: GridFilterListIcon,\n  filterPanelDeleteIcon: GridCloseIcon,\n  columnFilteredIcon: GridFilterAltIcon,\n  columnSelectorIcon: GridColumnIcon,\n  columnUnsortedIcon: GridColumnUnsortedIcon,\n  columnSortedAscendingIcon: GridArrowUpwardIcon,\n  columnSortedDescendingIcon: GridArrowDownwardIcon,\n  columnResizeIcon: GridSeparatorIcon,\n  densityCompactIcon: GridViewHeadlineIcon,\n  densityStandardIcon: GridTableRowsIcon,\n  densityComfortableIcon: GridViewStreamIcon,\n  exportIcon: GridSaveAltIcon,\n  moreActionsIcon: GridMoreVertIcon,\n  treeDataCollapseIcon: GridExpandMoreIcon,\n  treeDataExpandIcon: GridKeyboardArrowRight,\n  groupingCriteriaCollapseIcon: GridExpandMoreIcon,\n  groupingCriteriaExpandIcon: GridKeyboardArrowRight,\n  detailPanelExpandIcon: GridAddIcon,\n  detailPanelCollapseIcon: GridRemoveIcon,\n  rowReorderIcon: GridDragIcon,\n  quickFilterIcon: GridSearchIcon,\n  quickFilterClearIcon: GridCloseIcon,\n  columnMenuHideIcon: GridVisibilityOffIcon,\n  columnMenuSortAscendingIcon: GridArrowUpwardIcon,\n  columnMenuSortDescendingIcon: GridArrowDownwardIcon,\n  columnMenuFilterIcon: GridFilterAltIcon,\n  columnMenuManageColumnsIcon: GridViewColumnIcon,\n  columnMenuClearIcon: GridClearIcon,\n  loadIcon: GridLoadIcon,\n  filterPanelAddIcon: GridAddIcon,\n  filterPanelRemoveAllIcon: GridDeleteForeverIcon,\n  columnReorderIcon: GridDragIcon\n};\nconst materialSlots = _extends({}, iconSlots, {\n  baseCheckbox: MUICheckbox,\n  baseTextField: MUITextField,\n  baseFormControl: MUIFormControl,\n  baseSelect: MUISelect,\n  baseButton: MUIButton,\n  baseIconButton: MUIIconButton,\n  baseInputAdornment: MUIInputAdornment,\n  baseTooltip: MUITooltip,\n  basePopper: MUIPopper,\n  baseInputLabel: MUIInputLabel,\n  baseSelectOption: MUISelectOption,\n  baseChip: MUIChip\n});\nexport default materialSlots;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridSkeletonCell, GridColumnsPanel, GridFilterPanel, GridFooter, GridLoadingOverlay, GridNoRowsOverlay, GridPagination, GridPanel, GridRow, GridColumnHeaderFilterIconButton, GridRowCount, GridColumnsManagement } from '../components';\nimport { GridCell } from '../components/cell/GridCell';\nimport { GridColumnHeaders } from '../components/GridColumnHeaders';\nimport { GridColumnMenu } from '../components/menu/columnMenu/GridColumnMenu';\nimport { GridDetailPanels } from '../components/GridDetailPanels';\nimport { GridPinnedRows } from '../components/GridPinnedRows';\nimport { GridNoResultsOverlay } from '../components/GridNoResultsOverlay';\nimport materialSlots from '../material';\n\n// TODO: camelCase these key. It's a private helper now.\n// Remove then need to call `uncapitalizeObjectKeys`.\nexport const DATA_GRID_DEFAULT_SLOTS_COMPONENTS = _extends({}, materialSlots, {\n  cell: GridCell,\n  skeletonCell: GridSkeletonCell,\n  columnHeaderFilterIconButton: GridColumnHeaderFilterIconButton,\n  columnMenu: GridColumnMenu,\n  columnHeaders: GridColumnHeaders,\n  detailPanels: GridDetailPanels,\n  footer: GridFooter,\n  footerRowCount: GridRowCount,\n  toolbar: null,\n  pinnedRows: GridPinnedRows,\n  loadingOverlay: GridLoadingOverlay,\n  noResultsOverlay: GridNoResultsOverlay,\n  noRowsOverlay: GridNoRowsOverlay,\n  pagination: GridPagination,\n  filterPanel: GridFilterPanel,\n  columnsPanel: GridColumnsPanel,\n  columnsManagement: GridColumnsManagement,\n  panel: GridPanel,\n  row: GridRow\n});","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridDetailPanels(_) {\n  return null;\n}","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridPinnedRows(_) {\n  return null;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { GRID_DEFAULT_LOCALE_TEXT } from '../constants';\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS } from '../constants/defaultGridSlotsComponents';\nimport { GridEditModes } from '../models';\nimport { computeSlots, useProps } from '../internals/utils';\nconst DATA_GRID_FORCED_PROPS = {\n  disableMultipleColumnsFiltering: true,\n  disableMultipleColumnsSorting: true,\n  throttleRowsMs: undefined,\n  hideFooterRowCount: false,\n  pagination: true,\n  checkboxSelectionVisibleOnly: false,\n  disableColumnReorder: true,\n  keepColumnPositionIfDraggedOutside: false,\n  signature: 'DataGrid'\n};\n\n/**\n * The default values of `DataGridPropsWithDefaultValues` to inject in the props of DataGrid.\n */\nexport const DATA_GRID_PROPS_DEFAULT_VALUES = {\n  autoHeight: false,\n  autoPageSize: false,\n  checkboxSelection: false,\n  checkboxSelectionVisibleOnly: false,\n  columnBufferPx: 150,\n  rowBufferPx: 150,\n  rows: [],\n  rowSelection: true,\n  disableColumnFilter: false,\n  disableColumnMenu: false,\n  disableColumnSelector: false,\n  disableDensitySelector: false,\n  disableEval: false,\n  disableMultipleColumnsFiltering: false,\n  disableMultipleRowSelection: false,\n  disableColumnSorting: false,\n  disableMultipleColumnsSorting: false,\n  disableRowSelectionOnClick: false,\n  disableVirtualization: false,\n  editMode: GridEditModes.Cell,\n  filterMode: 'client',\n  filterDebounceMs: 150,\n  columnHeaderHeight: 56,\n  hideFooter: false,\n  hideFooterPagination: false,\n  hideFooterRowCount: false,\n  hideFooterSelectedRowCount: false,\n  ignoreDiacritics: false,\n  logger: console,\n  logLevel: process.env.NODE_ENV === 'production' ? 'error' : 'warn',\n  pagination: false,\n  paginationMode: 'client',\n  rowHeight: 52,\n  resizeThrottleMs: 60,\n  pageSizeOptions: [25, 50, 100],\n  rowSpacingType: 'margin',\n  showCellVerticalBorder: false,\n  showColumnVerticalBorder: false,\n  sortingOrder: ['asc', 'desc', null],\n  sortingMode: 'client',\n  throttleRowsMs: 0,\n  disableColumnReorder: false,\n  disableColumnResize: false,\n  keepNonExistentRowsSelected: false,\n  keepColumnPositionIfDraggedOutside: false,\n  ignoreValueFormatterDuringExport: false,\n  clipboardCopyCellDelimiter: '\\t',\n  rowPositionsDebounceMs: 166,\n  autosizeOnMount: false,\n  disableAutosize: false\n};\nconst defaultSlots = DATA_GRID_DEFAULT_SLOTS_COMPONENTS;\nexport const useDataGridProps = inProps => {\n  const themedProps = useProps(\n  // eslint-disable-next-line material-ui/mui-name-matches-component-name\n  useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  }));\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const slots = React.useMemo(() => computeSlots({\n    defaultSlots,\n    slots: themedProps.slots\n  }), [themedProps.slots]);\n  return React.useMemo(() => _extends({}, DATA_GRID_PROPS_DEFAULT_VALUES, themedProps, {\n    localeText,\n    slots\n  }, DATA_GRID_FORCED_PROPS), [themedProps, localeText, slots]);\n};","import _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\n\n/** Gathers props for the root element into a single `.forwardedProps` field */\nfunction groupForwardedProps(props) {\n  const keys = Object.keys(props);\n  if (!keys.some(key => key.startsWith('aria-') || key.startsWith('data-'))) {\n    return props;\n  }\n  const newProps = {};\n  const forwardedProps = props.forwardedProps ?? {};\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    if (key.startsWith('aria-') || key.startsWith('data-')) {\n      forwardedProps[key] = props[key];\n    } else {\n      newProps[key] = props[key];\n    }\n  }\n  newProps.forwardedProps = forwardedProps;\n  return newProps;\n}\nexport function useProps(allProps) {\n  return React.useMemo(() => {\n    const themedProps = _extends({}, (_objectDestructuringEmpty(allProps), allProps));\n    return groupForwardedProps(themedProps);\n  }, [allProps]);\n}","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function computeSlots({\n  defaultSlots,\n  slots\n}) {\n  const overrides = slots;\n  if (!overrides || Object.keys(overrides).length === 0) {\n    return defaultSlots;\n  }\n  const result = _extends({}, defaultSlots);\n  Object.keys(overrides).forEach(key => {\n    const k = key;\n    if (overrides[k] !== undefined) {\n      result[k] = overrides[k];\n    }\n  });\n  return result;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderActionsCell } from '../components/cell/GridActionsCell';\nexport const GRID_ACTIONS_COLUMN_TYPE = 'actions';\nexport const GRID_ACTIONS_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  width: 100,\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  headerName: '',\n  disableColumnMenu: true,\n  disableExport: true,\n  renderCell: renderActionsCell,\n  getApplyQuickFilterFn: undefined\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderBooleanCell } from '../components/cell/GridBooleanCell';\nimport { renderEditBooleanCell } from '../components/cell/GridEditBooleanCell';\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridBooleanOperators } from './gridBooleanOperators';\nconst gridBooleanFormatter = (value, row, column, apiRef) => {\n  return value ? apiRef.current.getLocaleText('booleanCellTrueLabel') : apiRef.current.getLocaleText('booleanCellFalseLabel');\n};\nconst stringToBoolean = value => {\n  switch (value.toLowerCase().trim()) {\n    case 'true':\n    case 'yes':\n    case '1':\n      return true;\n    case 'false':\n    case 'no':\n    case '0':\n    case 'null':\n    case 'undefined':\n      return false;\n    default:\n      return undefined;\n  }\n};\nexport const GRID_BOOLEAN_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'boolean',\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  renderCell: renderBooleanCell,\n  renderEditCell: renderEditBooleanCell,\n  sortComparator: gridNumberComparator,\n  valueFormatter: gridBooleanFormatter,\n  filterOperators: getGridBooleanOperators(),\n  getApplyQuickFilterFn: undefined,\n  // @ts-ignore\n  aggregable: false,\n  // @ts-ignore\n  pastedValueParser: value => stringToBoolean(value)\n});","import { GridFilterInputBoolean } from '../components/panel/filterPanel/GridFilterInputBoolean';\nexport const getGridBooleanOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const valueAsBoolean = String(filterItem.value) === 'true';\n    return value => {\n      return Boolean(value) === valueAsBoolean;\n    };\n  },\n  InputComponent: GridFilterInputBoolean\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from '../components/columnSelection/GridCellCheckboxRenderer';\nimport { GridHeaderCheckbox } from '../components/columnSelection/GridHeaderCheckbox';\nimport { selectedIdsLookupSelector } from '../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_CHECKBOX_SELECTION_FIELD = '__check__';\nexport const GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  type: 'custom',\n  field: GRID_CHECKBOX_SELECTION_FIELD,\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  display: 'flex',\n  valueGetter: (value, row, column, apiRef) => {\n    const selectionLookup = selectedIdsLookupSelector(apiRef);\n    const rowId = apiRef.current.getRowId(row);\n    return selectionLookup[rowId] !== undefined;\n  },\n  renderHeader: params => /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params)),\n  renderCell: params => /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params))\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridDateComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridDateOperators } from './gridDateOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditDateCell } from '../components/cell/GridEditDateCell';\nfunction throwIfNotDateObject({\n  value,\n  columnType,\n  rowId,\n  field\n}) {\n  if (!(value instanceof Date)) {\n    throw new Error([`MUI X: \\`${columnType}\\` column type only accepts \\`Date\\` objects as values.`, 'Use `valueGetter` to transform the value into a `Date` object.', `Row ID: ${rowId}, field: \"${field}\".`].join('\\n'));\n  }\n}\nexport const gridDateFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'date',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleDateString();\n};\nexport const gridDateTimeFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'dateTime',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleString();\n};\nexport const GRID_DATE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'date',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateFormatter,\n  filterOperators: getGridDateOperators(),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});\nexport const GRID_DATETIME_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'dateTime',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateTimeFormatter,\n  filterOperators: getGridDateOperators(true),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});","import { GridFilterInputDate } from '../components/panel/filterPanel/GridFilterInputDate';\nfunction buildApplyFilterFn(filterItem, compareFn, showTime, keepHours) {\n  if (!filterItem.value) {\n    return null;\n  }\n  const date = new Date(filterItem.value);\n  if (showTime) {\n    date.setSeconds(0, 0);\n  } else {\n    // In GMT-X timezone, the date will be one day behind.\n    // For 2022-08-16:\n    // GMT+2: Tue Aug 16 2022 02:00:00 GMT+0200\n    // GMT-4: Mon Aug 15 2022 20:00:00 GMT-0400\n    //\n    // We need to add the offset before resetting the hours.\n    date.setMinutes(date.getMinutes() + date.getTimezoneOffset());\n    date.setHours(0, 0, 0, 0);\n  }\n  const time = date.getTime();\n  return value => {\n    if (!value) {\n      return false;\n    }\n    if (keepHours) {\n      return compareFn(value.getTime(), time);\n    }\n\n    // Make a copy of the date to not reset the hours in the original object\n    const dateCopy = new Date(value);\n    if (showTime) {\n      dateCopy.setSeconds(0, 0);\n    } else {\n      dateCopy.setHours(0, 0, 0, 0);\n    }\n    return compareFn(dateCopy.getTime(), time);\n  };\n}\nexport const getGridDateOperators = showTime => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 === value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 !== value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'after',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 > value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrAfter',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 >= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'before',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 < value2, showTime, !showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrBefore',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 <= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}];","import { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { GRID_NUMERIC_COL_DEF } from './gridNumericColDef';\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from './gridDateColDef';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { GRID_SINGLE_SELECT_COL_DEF } from './gridSingleSelectColDef';\nimport { GRID_ACTIONS_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from './gridActionsColDef';\nexport const DEFAULT_GRID_COL_TYPE_KEY = 'string';\nexport const getGridDefaultColumnTypes = () => {\n  const nativeColumnTypes = {\n    string: GRID_STRING_COL_DEF,\n    number: GRID_NUMERIC_COL_DEF,\n    date: GRID_DATE_COL_DEF,\n    dateTime: GRID_DATETIME_COL_DEF,\n    boolean: GRID_BOOLEAN_COL_DEF,\n    singleSelect: GRID_SINGLE_SELECT_COL_DEF,\n    [GRID_ACTIONS_COLUMN_TYPE]: GRID_ACTIONS_COL_DEF,\n    custom: GRID_STRING_COL_DEF\n  };\n  return nativeColumnTypes;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { isNumber } from '../utils/utils';\nimport { getGridNumericOperators, getGridNumericQuickFilterFn } from './gridNumericOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nexport const GRID_NUMERIC_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'number',\n  align: 'right',\n  headerAlign: 'right',\n  sortComparator: gridNumberComparator,\n  valueParser: value => value === '' ? null : Number(value),\n  valueFormatter: value => isNumber(value) ? value.toLocaleString() : value || '',\n  filterOperators: getGridNumericOperators(),\n  getApplyQuickFilterFn: getGridNumericQuickFilterFn\n});","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nconst parseNumericValue = value => {\n  if (value == null) {\n    return null;\n  }\n  return Number(value);\n};\nexport const getGridNumericQuickFilterFn = value => {\n  if (value == null || Number.isNaN(value) || value === '') {\n    return null;\n  }\n  return columnValue => {\n    return parseNumericValue(columnValue) === parseNumericValue(value);\n  };\n};\nexport const getGridNumericOperators = () => [{\n  value: '=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) === filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '!=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) !== filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) > filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) >= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) < filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) <= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    return value => {\n      return value != null && filterItem.value.includes(Number(value));\n    };\n  },\n  InputComponent: GridFilterInputMultipleValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditSingleSelectCell } from '../components/cell/GridEditSingleSelectCell';\nimport { getGridSingleSelectOperators } from './gridSingleSelectOperators';\nimport { getValueOptions, isSingleSelectColDef } from '../components/panel/filterPanel/filterPanelUtils';\nimport { isObject } from '../utils/utils';\nconst isArrayOfObjects = options => {\n  return typeof options[0] === 'object';\n};\nconst defaultGetOptionValue = value => {\n  return isObject(value) ? value.value : value;\n};\nconst defaultGetOptionLabel = value => {\n  return isObject(value) ? value.label : String(value);\n};\nexport const GRID_SINGLE_SELECT_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'singleSelect',\n  getOptionLabel: defaultGetOptionLabel,\n  getOptionValue: defaultGetOptionValue,\n  valueFormatter(value, row, colDef, apiRef) {\n    // const { id, field, value, api } = params;\n    const rowId = apiRef.current.getRowId(row);\n    if (!isSingleSelectColDef(colDef)) {\n      return '';\n    }\n    const valueOptions = getValueOptions(colDef, {\n      id: rowId,\n      row\n    });\n    if (value == null) {\n      return '';\n    }\n    if (!valueOptions) {\n      return value;\n    }\n    if (!isArrayOfObjects(valueOptions)) {\n      return colDef.getOptionLabel(value);\n    }\n    const valueOption = valueOptions.find(option => colDef.getOptionValue(option) === value);\n    return valueOption ? colDef.getOptionLabel(valueOption) : '';\n  },\n  renderEditCell: renderEditSingleSelectCell,\n  filterOperators: getGridSingleSelectOperators(),\n  // @ts-ignore\n  pastedValueParser: (value, row, column) => {\n    const colDef = column;\n    const valueOptions = getValueOptions(colDef) || [];\n    const getOptionValue = colDef.getOptionValue;\n    const valueOption = valueOptions.find(option => {\n      if (getOptionValue(option) === value) {\n        return true;\n      }\n      return false;\n    });\n    if (valueOption) {\n      return value;\n    }\n    // do not paste the value if it is not in the valueOptions\n    return undefined;\n  }\n});","import { GridFilterInputSingleSelect } from '../components/panel/filterPanel/GridFilterInputSingleSelect';\nimport { GridFilterInputMultipleSingleSelect } from '../components/panel/filterPanel/GridFilterInputMultipleSingleSelect';\nimport { isObject } from '../utils/utils';\nconst parseObjectValue = value => {\n  if (value == null || !isObject(value)) {\n    return value;\n  }\n  return value.value;\n};\nexport const getGridSingleSelectOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) === parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) !== parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValues = filterItem.value.map(parseObjectValue);\n    return value => filterItemValues.includes(parseObjectValue(value));\n  },\n  InputComponent: GridFilterInputMultipleSingleSelect\n}];","import { renderEditInputCell } from '../components/cell/GridEditInputCell';\nimport { gridStringOrNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridStringOperators, getGridStringQuickFilterFn } from './gridStringOperators';\n\n/**\n * TODO: Move pro and premium properties outside of this Community file\n */\nexport const GRID_STRING_COL_DEF = {\n  width: 100,\n  minWidth: 50,\n  maxWidth: Infinity,\n  hideable: true,\n  sortable: true,\n  resizable: true,\n  filterable: true,\n  groupable: true,\n  pinnable: true,\n  // @ts-ignore\n  aggregable: true,\n  editable: false,\n  sortComparator: gridStringOrNumberComparator,\n  type: 'string',\n  align: 'left',\n  filterOperators: getGridStringOperators(),\n  renderEditCell: renderEditInputCell,\n  getApplyQuickFilterFn: getGridStringQuickFilterFn\n};","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { escapeRegExp } from '../utils/utils';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nimport { removeDiacritics } from '../hooks/features/filter/gridFilterUtils';\nexport const getGridStringQuickFilterFn = value => {\n  if (!value) {\n    return null;\n  }\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return (_, row, column, apiRef) => {\n    let columnValue = apiRef.current.getRowFormattedValue(row, column);\n    if (apiRef.current.ignoreDiacritics) {\n      columnValue = removeDiacritics(columnValue);\n    }\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n};\nexport const getGridStringOperators = (disableTrim = false) => [{\n  value: 'contains',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(escapeRegExp(filterItemValue), 'i');\n    return value => {\n      return value != null ? filterRegex.test(String(value)) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'equals',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => {\n      return value != null ? collator.compare(filterItemValue, value.toString()) === 0 : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'startsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`^${escapeRegExp(filterItemValue)}.*$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'endsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`.*${escapeRegExp(filterItemValue)}$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value === '' || value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value !== '' && value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(val => val.trim());\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => value != null ? filterItemValue.some(filterValue => {\n      return collator.compare(filterValue, value.toString() || '') === 0;\n    }) : false;\n  },\n  InputComponent: GridFilterInputMultipleValue\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridColumnGroupsLookupSelector } from '../../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { isEventTargetInPortal } from '../../utils/domUtils';\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from '../../utils/cellBorderUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    headerAlign,\n    isDragging,\n    showLeftBorder,\n    showRightBorder,\n    groupId,\n    pinnedPosition\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', headerAlign === 'left' && 'columnHeader--alignLeft', headerAlign === 'center' && 'columnHeader--alignCenter', headerAlign === 'right' && 'columnHeader--alignRight', isDragging && 'columnHeader--moving', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', 'withBorderColor', groupId === null ? 'columnHeader--emptyGroup' : 'columnHeader--filledGroup', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer', 'withBorderColor'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnGroupHeader(props) {\n  const {\n    groupId,\n    width,\n    depth,\n    maxDepth,\n    fields,\n    height,\n    colIndex,\n    hasFocus,\n    tabIndex,\n    isLastColumn,\n    pinnedPosition,\n    style,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const columnGroupsLookup = useGridSelector(apiRef, gridColumnGroupsLookupSelector);\n  const group = groupId ? columnGroupsLookup[groupId] : {};\n  const {\n    headerName = groupId ?? '',\n    description = '',\n    headerAlign = undefined\n  } = group;\n  let headerComponent;\n  const render = groupId && columnGroupsLookup[groupId]?.renderHeaderGroup;\n  const renderParams = React.useMemo(() => ({\n    groupId,\n    headerName,\n    description,\n    depth,\n    maxDepth,\n    fields,\n    colIndex,\n    isLastColumn\n  }), [groupId, headerName, description, depth, maxDepth, fields, colIndex, isLastColumn]);\n  if (groupId && render) {\n    headerComponent = render(renderParams);\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showLeftBorder,\n    showRightBorder,\n    headerAlign,\n    depth,\n    isDragging: false\n  });\n  const label = headerName ?? groupId;\n  const id = useId();\n  const elementId = groupId === null ? `empty-group-cell-${id}` : groupId;\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (hasFocus) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n    }\n  }, [apiRef, hasFocus]);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, renderParams, event);\n  },\n  // For now this is stupid, because renderParams change all the time.\n  // Need to move it's computation in the api, such that for a given depth+columnField, I can get the group parameters\n  [apiRef, renderParams]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onKeyDown: publish('columnGroupHeaderKeyDown'),\n    onFocus: publish('columnGroupHeaderFocus'),\n    onBlur: publish('columnGroupHeaderBlur')\n  }), [publish]);\n  const headerClassName = typeof group.headerClassName === 'function' ? group.headerClassName(renderParams) : group.headerClassName;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: false,\n    colIndex: colIndex,\n    height: height,\n    isResizing: false,\n    sortDirection: null,\n    hasFocus: false,\n    tabIndex: tabIndex,\n    isDraggable: false,\n    headerComponent: headerComponent,\n    headerClassName: headerClassName,\n    description: description,\n    elementId: elementId,\n    width: width,\n    columnMenuIconButton: null,\n    columnTitleIconButtons: null,\n    resizable: true,\n    label: label,\n    \"aria-colspan\": fields.length\n    // The fields are wrapped between |-...-| to avoid confusion between fields \"id\" and \"id2\" when using selector data-fields~=\n    ,\n    \"data-fields\": `|-${fields.join('-|-')}-|`,\n    style: style\n  }, mouseEventsHandlers));\n}\nexport { GridColumnGroupHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled, useTheme } from '@mui/material/styles';\nimport { useGridSelector } from '../../utils';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridColumnHeaderItem } from '../../../components/columnHeaders/GridColumnHeaderItem';\nimport { gridDimensionsSelector } from '../dimensions';\nimport { gridRenderContextColumnsSelector, gridVirtualizationColumnEnabledSelector } from '../virtualization';\nimport { computeOffsetLeft } from '../virtualization/useGridVirtualScroller';\nimport { GridColumnGroupHeader } from '../../../components/columnHeaders/GridColumnGroupHeader';\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridVisiblePinnedColumnDefinitionsSelector } from '../columns';\nimport { gridColumnGroupsUnwrappedModelSelector } from '../columnGrouping/gridColumnGroupsSelector';\nimport { GridScrollbarFillerCell as ScrollbarFiller } from '../../../components/GridScrollbarFillerCell';\nimport { getPinnedCellOffset } from '../../../internals/utils/getPinnedCellOffset';\nimport { GridColumnHeaderSeparatorSides } from '../../../components/columnHeaders/GridColumnHeaderSeparator';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (_, styles) => styles.columnHeaderRow\n})({\n  display: 'flex'\n});\nexport const useGridColumnHeaders = props => {\n  const {\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridPrivateApiContext();\n  const theme = useTheme();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const hasVirtualization = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector);\n  const columnGroupsModel = useGridSelector(apiRef, gridColumnGroupsUnwrappedModelSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const renderContext = useGridSelector(apiRef, gridRenderContextColumnsSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const offsetLeft = computeOffsetLeft(columnPositions, renderContext, theme.direction, pinnedColumns.left.length);\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  React.useEffect(() => {\n    apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n  }, [apiRef]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  const leftRenderContext = React.useMemo(() => {\n    return pinnedColumns.left.length ? {\n      firstColumnIndex: 0,\n      lastColumnIndex: pinnedColumns.left.length\n    } : null;\n  }, [pinnedColumns.left.length]);\n  const rightRenderContext = React.useMemo(() => {\n    return pinnedColumns.right.length ? {\n      firstColumnIndex: visibleColumns.length - pinnedColumns.right.length,\n      lastColumnIndex: visibleColumns.length\n    } : null;\n  }, [pinnedColumns.right.length, visibleColumns.length]);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  const getColumnsToRender = params => {\n    const {\n      renderContext: currentContext = renderContext,\n      // TODO: `minFirstColumn` is not used anymore, could be refactored out.\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n    const firstColumnToRender = !hasVirtualization ? 0 : currentContext.firstColumnIndex;\n    const lastColumnToRender = !hasVirtualization ? maxLastColumn : currentContext.lastColumnIndex;\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    };\n  };\n  const getFillers = (params, children, leftOverflow, borderTop = false) => {\n    const isPinnedRight = params?.position === GridPinnedColumnPosition.RIGHT;\n    const isNotPinned = params?.position === undefined;\n    const hasScrollbarFiller = pinnedColumns.right.length > 0 && isPinnedRight || pinnedColumns.right.length === 0 && isNotPinned;\n    const leftOffsetWidth = offsetLeft - leftOverflow;\n    return /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        style: {\n          width: leftOffsetWidth\n        }\n      }), children, isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        className: clsx(gridClasses.filler, borderTop && gridClasses['filler--borderTop'])\n      }), hasScrollbarFiller && /*#__PURE__*/_jsx(ScrollbarFiller, {\n        header: true,\n        borderTop: borderTop,\n        pinnedRight: isPinnedRight\n      })]\n    });\n  };\n  const getCellOffsetStyle = ({\n    pinnedPosition,\n    columnIndex,\n    computedWidth\n  }) => {\n    let style;\n    if (pinnedPosition === 'left' || pinnedPosition === 'right') {\n      const pinnedOffset = getPinnedCellOffset(pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions);\n      if (pinnedPosition === 'left') {\n        style = {\n          left: pinnedOffset\n        };\n      }\n      if (pinnedPosition === 'right') {\n        style = {\n          right: pinnedOffset\n        };\n      }\n    }\n    return style;\n  };\n  const getColumnHeaders = (params, other = {}) => {\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = getColumnsToRender(params);\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      const pinnedPosition = params?.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: colDef.computedWidth\n      });\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: dimensions.headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        isLast: columnIndex === columnPositions.length - 1,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: i,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller\n      }, other), colDef.field));\n    }\n    return getFillers(params, columns, 0);\n  };\n  const getColumnHeadersRow = () => {\n    return /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      children: [leftRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.LEFT,\n        renderContext: leftRenderContext,\n        minFirstColumn: leftRenderContext.firstColumnIndex,\n        maxLastColumn: leftRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true\n      }), getColumnHeaders({\n        renderContext,\n        minFirstColumn: pinnedColumns.left.length,\n        maxLastColumn: visibleColumns.length - pinnedColumns.right.length\n      }), rightRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.RIGHT,\n        renderContext: rightRenderContext,\n        minFirstColumn: rightRenderContext.firstColumnIndex,\n        maxLastColumn: rightRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true,\n        separatorSide: GridColumnHeaderSeparatorSides.Left\n      })]\n    });\n  };\n  const getColumnGroupHeaders = ({\n    depth,\n    params\n  }) => {\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const rowStructure = columnGroupsHeaderStructure[depth];\n    const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n    const firstGroupToRender = columnGroupsModel[firstColumnFieldToRender]?.[depth] ?? null;\n    const firstGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender));\n    const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n    const lastGroupToRender = columnGroupsModel[lastColumnFieldToRender]?.[depth] ?? null;\n    const lastGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender));\n    const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n      return _extends({}, groupStructure, {\n        columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n      });\n    }).filter(groupStructure => groupStructure.columnFields.length > 0);\n    const firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n    const hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n    const leftOverflow = hiddenGroupColumns.reduce((acc, field) => {\n      const column = apiRef.current.getColumn(field);\n      return acc + (column.computedWidth ?? 0);\n    }, 0);\n    let columnIndex = firstColumnToRender;\n    const children = visibleColumnGroupHeader.map(({\n      groupId,\n      columnFields\n    }, index) => {\n      const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n      const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n      const headerInfo = {\n        groupId,\n        width: columnFields.reduce((acc, field) => acc + apiRef.current.getColumn(field).computedWidth, 0),\n        fields: columnFields,\n        colIndex: columnIndex,\n        hasFocus,\n        tabIndex\n      };\n      const pinnedPosition = params.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: headerInfo.width\n      });\n      columnIndex += columnFields.length;\n      let indexInSection = index;\n      if (pinnedPosition === 'left') {\n        // Group headers can expand to multiple columns, we need to adjust the index\n        indexInSection = columnIndex - 1;\n      }\n      return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n        groupId: groupId,\n        width: headerInfo.width,\n        fields: headerInfo.fields,\n        colIndex: headerInfo.colIndex,\n        depth: depth,\n        isLastColumn: headerInfo.colIndex === visibleColumns.length - headerInfo.fields.length,\n        maxDepth: headerGroupingMaxDepth,\n        height: dimensions.headerHeight,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: indexInSection,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller\n      }, index);\n    });\n    return getFillers(params, children, leftOverflow);\n  };\n  const getColumnGroupHeadersRows = () => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const headerRows = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      headerRows.push( /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n        role: \"row\",\n        \"aria-rowindex\": depth + 1,\n        ownerState: rootProps,\n        children: [leftRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.LEFT,\n            renderContext: leftRenderContext,\n            minFirstColumn: leftRenderContext.firstColumnIndex,\n            maxLastColumn: leftRenderContext.lastColumnIndex\n          }\n        }), getColumnGroupHeaders({\n          depth,\n          params: {\n            renderContext\n          }\n        }), rightRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.RIGHT,\n            renderContext: rightRenderContext,\n            minFirstColumn: rightRenderContext.firstColumnIndex,\n            maxLastColumn: rightRenderContext.lastColumnIndex\n          }\n        })]\n      }, depth));\n    }\n    return headerRows;\n  };\n  return {\n    renderContext,\n    leftRenderContext,\n    rightRenderContext,\n    pinnedColumns,\n    visibleColumns,\n    getCellOffsetStyle,\n    getFillers,\n    getColumnHeadersRow,\n    getColumnsToRender,\n    getColumnGroupHeadersRows,\n    isDragging: !!dragCol,\n    getInnerProps: () => ({\n      role: 'rowgroup'\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaders']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeadersRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaders',\n  overridesResolver: (props, styles) => styles.columnHeaders\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n  borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n});\nexport const GridBaseColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeadersRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other, {\n    role: \"presentation\"\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"visibleColumns\", \"sortColumnLookup\", \"filterColumnLookup\", \"columnHeaderTabIndexState\", \"columnGroupHeaderTabIndexState\", \"columnHeaderFocus\", \"columnGroupHeaderFocus\", \"headerGroupingMaxDepth\", \"columnMenuState\", \"columnVisibility\", \"columnGroupsHeaderStructure\", \"hasOtherElementInTabSequence\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { fastMemo } from '../utils/fastMemo';\nimport { useGridColumnHeaders } from '../hooks/features/columnHeaders/useGridColumnHeaders';\nimport { GridBaseColumnHeaders } from './columnHeaders/GridBaseColumnHeaders';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      visibleColumns,\n      sortColumnLookup,\n      filterColumnLookup,\n      columnHeaderTabIndexState,\n      columnGroupHeaderTabIndexState,\n      columnHeaderFocus,\n      columnGroupHeaderFocus,\n      headerGroupingMaxDepth,\n      columnMenuState,\n      columnVisibility,\n      columnGroupsHeaderStructure,\n      hasOtherElementInTabSequence\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getInnerProps,\n    getColumnHeadersRow,\n    getColumnGroupHeadersRows\n  } = useGridColumnHeaders({\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  });\n  return /*#__PURE__*/_jsxs(GridBaseColumnHeaders, _extends({\n    ref: ref\n  }, other, getInnerProps(), {\n    children: [getColumnGroupHeadersRows(), getColumnHeadersRow()]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaders.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnGroupHeaderFocus: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupHeaderTabIndexState: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupsHeaderStructure: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.shape({\n    columnFields: PropTypes.arrayOf(PropTypes.string).isRequired,\n    groupId: PropTypes.string\n  }))).isRequired,\n  columnHeaderFocus: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnHeaderTabIndexState: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnMenuState: PropTypes.shape({\n    field: PropTypes.string,\n    open: PropTypes.bool.isRequired\n  }).isRequired,\n  columnVisibility: PropTypes.object.isRequired,\n  filterColumnLookup: PropTypes.object.isRequired,\n  hasOtherElementInTabSequence: PropTypes.bool.isRequired,\n  headerGroupingMaxDepth: PropTypes.number.isRequired,\n  sortColumnLookup: PropTypes.object.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridColumnHeaders = fastMemo(GridColumnHeaders);\nexport { MemoizedGridColumnHeaders as GridColumnHeaders };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridTopLevelRowCountSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { selectedGridRowsCountSelector } from '../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { gridFilteredTopLevelRowCountSelector } from '../hooks/features/filter/gridFilterSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridSelectedRowCount } from './GridSelectedRowCount';\nimport { GridFooterContainer } from './containers/GridFooterContainer';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(rootProps.slots.footerRowCount, _extends({}, rootProps.slotProps?.footerRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  })) : null;\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.slots.pagination && /*#__PURE__*/_jsx(rootProps.slots.pagination, _extends({}, rootProps.slotProps?.pagination));\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({\n    ref: ref\n  }, props, {\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridPreferencesPanel = /*#__PURE__*/React.forwardRef(function GridPreferencesPanel(props, ref) {\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, preferencePanelState.openedPanelValue ?? GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.slots.panel, _extends({\n    ref: ref,\n    as: rootProps.slots.basePopper,\n    open: columns.length > 0 && preferencePanelState.open,\n    id: preferencePanelState.panelId,\n    \"aria-labelledby\": preferencePanelState.labelId\n  }, rootProps.slotProps?.panel, props, rootProps.slotProps?.basePopper, {\n    children: panelContent\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { GridPreferencesPanel } from './panel/GridPreferencesPanel';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridHeader() {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridPreferencesPanel, {}), rootProps.slots.toolbar && /*#__PURE__*/_jsx(rootProps.slots.toolbar, _extends({}, rootProps.slotProps?.toolbar))]\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridLoadingOverlay(props, ref) {\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: /*#__PURE__*/_jsx(CircularProgress, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = /*#__PURE__*/React.forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridPaginationModelSelector, gridPaginationRowCountSelector, gridPageCountSelector } from '../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\nconst wrapLabelDisplayedRows = (labelDisplayedRows, estimated) => {\n  return ({\n    from,\n    to,\n    count,\n    page\n  }) => labelDisplayedRows({\n    from,\n    to,\n    count,\n    page,\n    estimated\n  });\n};\nconst defaultLabelDisplayedRows = ({\n  from,\n  to,\n  count,\n  estimated\n}) => {\n  if (!estimated) {\n    return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n  }\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${estimated > to ? estimated : to}`}`;\n};\n\n// A mutable version of a readonly array.\n\nconst GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const rowCount = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n  const {\n    paginationMode,\n    loading,\n    estimatedRowCount\n  } = rootProps;\n  const computedProps = React.useMemo(() => {\n    if (rowCount === -1 && paginationMode === 'server' && loading) {\n      return {\n        backIconButtonProps: {\n          disabled: true\n        },\n        nextIconButtonProps: {\n          disabled: true\n        }\n      };\n    }\n    return {};\n  }, [loading, paginationMode, rowCount]);\n  const lastPage = React.useMemo(() => Math.max(0, pageCount - 1), [pageCount]);\n  const computedPage = React.useMemo(() => {\n    if (rowCount === -1) {\n      return paginationModel.page;\n    }\n    return paginationModel.page <= lastPage ? paginationModel.page : lastPage;\n  }, [lastPage, paginationModel.page, rowCount]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const pageSize = Number(event.target.value);\n    apiRef.current.setPageSize(pageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((_, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n  const isPageSizeIncludedInPageSizeOptions = pageSize => {\n    for (let i = 0; i < rootProps.pageSizeOptions.length; i += 1) {\n      const option = rootProps.pageSizeOptions[i];\n      if (typeof option === 'number') {\n        if (option === pageSize) {\n          return true;\n        }\n      } else if (option.value === pageSize) {\n        return true;\n      }\n    }\n    return false;\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingInPageSizeOptions = React.useRef(false);\n    const pageSize = rootProps.paginationModel?.pageSize ?? paginationModel.pageSize;\n    if (!warnedOnceMissingInPageSizeOptions.current && !rootProps.autoPageSize && !isPageSizeIncludedInPageSizeOptions(pageSize)) {\n      console.warn([`MUI X: The page size \\`${paginationModel.pageSize}\\` is not present in the \\`pageSizeOptions\\`.`, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingInPageSizeOptions.current = true;\n    }\n  }\n  const pageSizeOptions = isPageSizeIncludedInPageSizeOptions(paginationModel.pageSize) ? rootProps.pageSizeOptions : [];\n  const locales = apiRef.current.getLocaleText('MuiTablePagination');\n  const wrappedLabelDisplayedRows = wrapLabelDisplayedRows(locales.labelDisplayedRows || defaultLabelDisplayedRows, estimatedRowCount);\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref,\n    component: \"div\",\n    count: rowCount,\n    page: computedPage\n    // TODO: Remove the cast once the type is fixed in Material UI and that the min Material UI version\n    // for x-data-grid is past the fix.\n    // Note that Material UI will not mutate the array, so this is safe.\n    ,\n    rowsPerPageOptions: pageSizeOptions,\n    rowsPerPage: paginationModel.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, computedProps, locales, {\n    labelDisplayedRows: wrappedLabelDisplayedRows\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPagination.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  component: PropTypes.elementType\n} : void 0;\nexport { GridPagination };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"rowHeight\", \"className\", \"visibleColumns\", \"pinnedColumns\", \"offsetTop\", \"offsetLeft\", \"dimensions\", \"renderContext\", \"focusedColumnIndex\", \"isFirstVisible\", \"isLastVisible\", \"isNotVisible\", \"focusedCell\", \"tabbableCell\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\", \"onMouseOut\", \"onMouseOver\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { fastMemo } from '../utils/fastMemo';\nimport { GridEditModes, GridRowModes, GridCellModes } from '../models/gridEditRowModel';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridColumnPositionsSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector, objectShallowCompare } from '../hooks/utils/useGridSelector';\nimport { useGridVisibleRows } from '../hooks/utils/useGridVisibleRows';\nimport { findParentElementFromClassName, isEventTargetInPortal } from '../utils/domUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../colDef/gridCheckboxSelectionColDef';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../colDef/gridActionsColDef';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../constants/gridDetailPanelToggleField';\nimport { gridSortModelSelector } from '../hooks/features/sorting/gridSortingSelector';\nimport { gridRowMaximumTreeDepthSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { gridEditRowsStateSelector } from '../hooks/features/editing/gridEditingSelectors';\nimport { PinnedPosition, gridPinnedColumnPositionLookup } from './cell/GridCell';\nimport { GridScrollbarFillerCell as ScrollbarFiller } from './GridScrollbarFillerCell';\nimport { getPinnedCellOffset } from '../internals/utils/getPinnedCellOffset';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    editable,\n    editing,\n    selected,\n    isFirstVisible,\n    isLastVisible,\n    rowHeight,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isFirstVisible && 'row--firstVisible', isLastVisible && 'row--lastVisible', rowHeight === 'auto' && 'row--dynamicHeight']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction EmptyCell({\n  width\n}) {\n  if (!width) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(gridClasses.cell, gridClasses.cellEmpty),\n    style: {\n      '--width': `${width}px`\n    }\n  });\n}\nconst GridRow = /*#__PURE__*/React.forwardRef(function GridRow(props, refProp) {\n  const {\n      selected,\n      rowId,\n      row,\n      index,\n      style: styleProp,\n      rowHeight,\n      className,\n      visibleColumns,\n      pinnedColumns,\n      offsetLeft,\n      dimensions,\n      renderContext,\n      focusedColumnIndex,\n      isFirstVisible,\n      isLastVisible,\n      isNotVisible,\n      onClick,\n      onDoubleClick,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseOut,\n      onMouseOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\n  const handleRef = useForkRef(ref, refProp);\n  const rowNode = apiRef.current.getRowNode(rowId);\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  const hasFocusCell = focusedColumnIndex !== undefined;\n  const hasVirtualFocusCellLeft = hasFocusCell && focusedColumnIndex >= pinnedColumns.left.length && focusedColumnIndex < renderContext.firstColumnIndex;\n  const hasVirtualFocusCellRight = hasFocusCell && focusedColumnIndex < visibleColumns.length - pinnedColumns.right.length && focusedColumnIndex >= renderContext.lastColumnIndex;\n  const ariaRowIndex = index + headerGroupingMaxDepth + 2; // 1 for the header row and 1 as it's 1-based\n\n  const ownerState = {\n    selected,\n    isFirstVisible,\n    isLastVisible,\n    classes: rootProps.classes,\n    editing: apiRef.current.getRowMode(rowId) === GridRowModes.Edit,\n    editable: rootProps.editMode === GridEditModes.Row,\n    rowHeight\n  };\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (rowHeight === 'auto' && ref.current && typeof ResizeObserver === 'undefined') {\n      // Fallback for IE\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, ref.current.clientHeight);\n    }\n  }, [apiRef, rowHeight, rowId]);\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      // The index prop is relative to the rows from all pages. As example, the index prop of the\n      // first row is 5 if `paginationModel.pageSize=5` and `paginationModel.page=1`. However, the index used by the virtualization\n      // doesn't care about pagination and considers the rows from the current page only, so the\n      // first row always has index=0. We need to subtract the index of the first row to make it\n      // compatible with the index used by the virtualization.\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId);\n      // pinned rows are not part of the visible rows\n      if (rowIndex != null) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n    const rootElement = ref.current;\n    const hasFixedHeight = rowHeight !== 'auto';\n    if (!rootElement || hasFixedHeight || typeof ResizeObserver === 'undefined') {\n      return undefined;\n    }\n    const resizeObserver = new ResizeObserver(entries => {\n      const [entry] = entries;\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height);\n    });\n    resizeObserver.observe(rootElement);\n    return () => resizeObserver.disconnect();\n  }, [apiRef, currentPage.range, index, rowHeight, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell?.getAttribute('data-field');\n\n    // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      }\n\n      // User opened a detail panel\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      }\n\n      // User reorders a row\n      if (field === '__reorder__') {\n        return;\n      }\n\n      // User is editing a cell\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      }\n\n      // User clicked a button from the \"actions\" column type\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const {\n    slots,\n    slotProps,\n    disableColumnReorder\n  } = rootProps;\n  const rowReordering = rootProps.rowReordering;\n  const sizes = useGridSelector(apiRef, () => _extends({}, apiRef.current.unstable_getRowInternalSizes(rowId)), objectShallowCompare);\n  let minHeight = rowHeight;\n  if (minHeight === 'auto' && sizes) {\n    const numberOfBaseSizes = 1;\n    const maximumSize = sizes.baseCenter ?? 0;\n    if (maximumSize > 0 && numberOfBaseSizes > 1) {\n      minHeight = maximumSize;\n    }\n  }\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        opacity: 0,\n        width: 0,\n        height: 0\n      };\n    }\n    const rowStyle = _extends({}, styleProp, {\n      maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n      // max-height doesn't support \"auto\"\n      minHeight,\n      '--height': typeof rowHeight === 'number' ? `${rowHeight}px` : rowHeight\n    });\n    if (sizes?.spacingTop) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n      rowStyle[property] = sizes.spacingTop;\n    }\n    if (sizes?.spacingBottom) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n      let propertyValue = rowStyle[property];\n      // avoid overriding existing value\n      if (typeof propertyValue !== 'number') {\n        propertyValue = parseInt(propertyValue || '0', 10);\n      }\n      propertyValue += sizes.spacingBottom;\n      rowStyle[property] = propertyValue;\n    }\n    return rowStyle;\n  }, [isNotVisible, rowHeight, styleProp, minHeight, sizes, rootProps.rowSpacingType]);\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n  if (typeof rootProps.getRowClassName === 'function') {\n    const indexRelativeToCurrentPage = index - (currentPage.range?.firstRowIndex || 0);\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n  const getCell = (column, indexInSection, indexRelativeToAllColumns, sectionLength, pinnedPosition = PinnedPosition.NONE) => {\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n    if (cellColSpanInfo?.spannedByColSpan) {\n      return null;\n    }\n    const width = cellColSpanInfo?.cellProps.width ?? column.computedWidth;\n    const colSpan = cellColSpanInfo?.cellProps.colSpan ?? 1;\n    const pinnedOffset = getPinnedCellOffset(gridPinnedColumnPositionLookup[pinnedPosition], column.computedWidth, indexRelativeToAllColumns, columnPositions, dimensions);\n    if (rowNode?.type === 'skeletonRow') {\n      return /*#__PURE__*/_jsx(slots.skeletonCell, {\n        width: width,\n        height: rowHeight,\n        field: column.field,\n        align: column.align ?? 'left'\n      }, column.field);\n    }\n    const editCellState = editRowsState[rowId]?.[column.field] ?? null;\n\n    // when the cell is a reorder cell we are not allowing to reorder the col\n    // fixes https://github.com/mui/mui-x/issues/11126\n    const isReorderCell = column.field === '__reorder__';\n    const isEditingRows = Object.keys(editRowsState).length > 0;\n    const canReorderColumn = !(disableColumnReorder || column.disableReorder);\n    const canReorderRow = rowReordering && !sortModel.length && treeDepth <= 1 && !isEditingRows;\n    const disableDragEvents = !(canReorderColumn || isReorderCell && canReorderRow);\n    const cellIsNotVisible = pinnedPosition === PinnedPosition.VIRTUAL;\n    return /*#__PURE__*/_jsx(slots.cell, _extends({\n      column: column,\n      width: width,\n      rowId: rowId,\n      align: column.align || 'left',\n      colIndex: indexRelativeToAllColumns,\n      colSpan: colSpan,\n      disableDragEvents: disableDragEvents,\n      editCellState: editCellState,\n      isNotVisible: cellIsNotVisible,\n      pinnedOffset: pinnedOffset,\n      pinnedPosition: pinnedPosition,\n      sectionIndex: indexInSection,\n      sectionLength: sectionLength,\n      gridHasFiller: gridHasFiller\n    }, slotProps?.cell), column.field);\n  };\n\n  /* Start of rendering */\n\n  if (!rowNode) {\n    return null;\n  }\n  const leftCells = pinnedColumns.left.map((column, i) => {\n    const indexRelativeToAllColumns = i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.left.length, PinnedPosition.LEFT);\n  });\n  const rightCells = pinnedColumns.right.map((column, i) => {\n    const indexRelativeToAllColumns = visibleColumns.length - pinnedColumns.right.length + i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.right.length, PinnedPosition.RIGHT);\n  });\n  const middleColumnsLength = visibleColumns.length - pinnedColumns.left.length - pinnedColumns.right.length;\n  const cells = [];\n  if (hasVirtualFocusCellLeft) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  for (let i = renderContext.firstColumnIndex; i < renderContext.lastColumnIndex; i += 1) {\n    const column = visibleColumns[i];\n    const indexInSection = i - pinnedColumns.left.length;\n    cells.push(getCell(column, indexInSection, i, middleColumnsLength));\n  }\n  if (hasVirtualFocusCellRight) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave),\n    onMouseOut: publish('rowMouseOut', onMouseOut),\n    onMouseOver: publish('rowMouseOver', onMouseOver)\n  } : null;\n  const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth - scrollbarWidth;\n  const emptyCellWidth = Math.max(0, expandedWidth);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className),\n    \"aria-rowindex\": ariaRowIndex,\n    \"aria-selected\": selected,\n    style: style\n  }, eventHandlers, other, {\n    children: [leftCells, /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.cellOffsetLeft,\n      style: {\n        width: offsetLeft\n      }\n    }), cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    }), rightCells.length > 0 && /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.filler\n    }), rightCells, scrollbarWidth !== 0 && /*#__PURE__*/_jsx(ScrollbarFiller, {\n      pinnedRight: pinnedColumns.right.length > 0\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  dimensions: PropTypes.shape({\n    bottomContainerHeight: PropTypes.number.isRequired,\n    columnsTotalWidth: PropTypes.number.isRequired,\n    contentSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    hasScrollX: PropTypes.bool.isRequired,\n    hasScrollY: PropTypes.bool.isRequired,\n    headerFilterHeight: PropTypes.number.isRequired,\n    headerHeight: PropTypes.number.isRequired,\n    headersTotalHeight: PropTypes.number.isRequired,\n    isReady: PropTypes.bool.isRequired,\n    leftPinnedWidth: PropTypes.number.isRequired,\n    minimumSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rightPinnedWidth: PropTypes.number.isRequired,\n    root: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rowHeight: PropTypes.number.isRequired,\n    rowWidth: PropTypes.number.isRequired,\n    scrollbarSize: PropTypes.number.isRequired,\n    topContainerHeight: PropTypes.number.isRequired,\n    viewportInnerSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    viewportOuterSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired\n  }).isRequired,\n  /**\n   * Determines which cell has focus.\n   * If `null`, no cell in this row has focus.\n   */\n  focusedColumnIndex: PropTypes.number,\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isFirstVisible: PropTypes.bool.isRequired,\n  isLastVisible: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  offsetLeft: PropTypes.number.isRequired,\n  offsetTop: PropTypes.number,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  pinnedColumns: PropTypes.object.isRequired,\n  renderContext: PropTypes.shape({\n    firstColumnIndex: PropTypes.number.isRequired,\n    firstRowIndex: PropTypes.number.isRequired,\n    lastColumnIndex: PropTypes.number.isRequired,\n    lastRowIndex: PropTypes.number.isRequired\n  }).isRequired,\n  row: PropTypes.object.isRequired,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  /**\n   * Determines which cell should be tabbable by having tabIndex=0.\n   * If `null`, no cell in this row is in the tab sequence.\n   */\n  tabbableCell: PropTypes.string,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridRow = fastMemo(GridRow);\nexport { MemoizedGridRow as GridRow };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"rowCount\", \"visibleRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'RowCount',\n  overridesResolver: (props, styles) => styles.rowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2)\n}));\nconst GridRowCount = /*#__PURE__*/React.forwardRef(function GridRowCount(props, ref) {\n  const {\n      className,\n      rowCount,\n      visibleRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  if (rowCount === 0) {\n    return null;\n  }\n  const text = visibleRowCount < rowCount ? apiRef.current.getLocaleText('footerTotalVisibleRows')(visibleRowCount, rowCount) : rowCount.toLocaleString();\n  return /*#__PURE__*/_jsxs(GridRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: [apiRef.current.getLocaleText('footerTotalRows'), \" \", text]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  rowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  visibleRowCount: PropTypes.number.isRequired\n} : void 0;\nexport { GridRowCount };","import * as React from 'react';\nimport clsx from 'clsx';\nimport { gridClasses } from '../constants';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst classes = {\n  root: gridClasses.scrollbarFiller,\n  header: gridClasses['scrollbarFiller--header'],\n  borderTop: gridClasses['scrollbarFiller--borderTop'],\n  pinnedRight: gridClasses['scrollbarFiller--pinnedRight']\n};\nfunction GridScrollbarFillerCell({\n  header,\n  borderTop = true,\n  pinnedRight\n}) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(classes.root, header && classes.header, borderTop && classes.borderTop, pinnedRight && classes.pinnedRight)\n  });\n}\nexport { GridScrollbarFillerCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selectedRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['selectedRowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridSelectedRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SelectedRowCount',\n  overridesResolver: (props, styles) => styles.selectedRowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2),\n  visibility: 'hidden',\n  width: 0,\n  height: 0,\n  [theme.breakpoints.up('sm')]: {\n    visibility: 'visible',\n    width: 'auto',\n    height: 'auto'\n  }\n}));\nconst GridSelectedRowCount = /*#__PURE__*/React.forwardRef(function GridSelectedRowCount(props, ref) {\n  const {\n      className,\n      selectedRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  const rowSelectedText = apiRef.current.getLocaleText('footerRowSelected')(selectedRowCount);\n  return /*#__PURE__*/_jsx(GridSelectedRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: rowSelectedText\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridSelectedRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  selectedRowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridSelectedRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridFooterPlaceholder() {\n  const rootProps = useGridRootProps();\n  if (rootProps.hideFooter) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.footer, _extends({}, rootProps.slotProps?.footer /* FIXME: typing error */));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport clsx from 'clsx';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridExpandedRowCountSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridRowCountSelector, gridRowsLoadingSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { gridDimensionsSelector } from '../../hooks/features/dimensions';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridVisibleRows } from '../../hooks/utils/useGridVisibleRows';\nimport { getMinimalContentHeight } from '../../hooks/features/rows/gridRowsUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridOverlayWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapper',\n  shouldForwardProp: prop => prop !== 'overlayType',\n  overridesResolver: (props, styles) => styles.overlayWrapper\n})(({\n  overlayType\n}) => ({\n  position: 'sticky',\n  // To stay in place while scrolling\n  top: 'var(--DataGrid-headersTotalHeight)',\n  left: 0,\n  width: 0,\n  // To stay above the content instead of shifting it down\n  height: 0,\n  // To stay above the content instead of shifting it down\n  zIndex: overlayType === 'loadingOverlay' ? 5 // Should be above pinned columns, pinned rows, and detail panel\n  : 4 // Should be above pinned columns and detail panel\n}));\nconst GridOverlayWrapperInner = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapperInner',\n  shouldForwardProp: prop => prop !== 'overlayType',\n  overridesResolver: (props, styles) => styles.overlayWrapperInner\n})({});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlayWrapper'],\n    inner: ['overlayWrapperInner']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridOverlayWrapper(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  let height = dimensions.viewportOuterSize.height - dimensions.headersTotalHeight - (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  if (rootProps.autoHeight && currentPage.rows.length === 0 || height === 0) {\n    height = getMinimalContentHeight(apiRef);\n  }\n  const classes = useUtilityClasses(_extends({}, props, {\n    classes: rootProps.classes\n  }));\n  return /*#__PURE__*/_jsx(GridOverlayWrapperRoot, {\n    className: clsx(classes.root),\n    overlayType: props.overlayType,\n    children: /*#__PURE__*/_jsx(GridOverlayWrapperInner, _extends({\n      className: clsx(classes.inner),\n      style: {\n        height,\n        width: dimensions.viewportOuterSize.width\n      }\n    }, props))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridOverlayWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  overlayType: PropTypes.string.isRequired\n} : void 0;\nexport function GridOverlays() {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && totalRowCount === 0;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlay = null;\n  let overlayType = '';\n  if (showNoRowsOverlay) {\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.noRowsOverlay, _extends({}, rootProps.slotProps?.noRowsOverlay));\n    overlayType = 'noRowsOverlay';\n  }\n  if (showNoResultsOverlay) {\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.noResultsOverlay, _extends({}, rootProps.slotProps?.noResultsOverlay));\n    overlayType = 'noResultsOverlay';\n  }\n  if (loading) {\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.loadingOverlay, _extends({}, rootProps.slotProps?.loadingOverlay));\n    overlayType = 'loadingOverlay';\n  }\n  if (overlay === null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, {\n    overlayType: overlayType,\n    children: overlay\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"api\", \"colDef\", \"id\", \"hasFocus\", \"isEditable\", \"field\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"cellMode\", \"tabIndex\", \"position\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuList from '@mui/material/MenuList';\nimport { useTheme } from '@mui/material/styles';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst hasActions = colDef => typeof colDef.getActions === 'function';\nfunction GridActionsCell(props) {\n  const {\n      colDef,\n      id,\n      hasFocus,\n      tabIndex,\n      position = 'bottom-end',\n      focusElementRef\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [focusedButtonIndex, setFocusedButtonIndex] = React.useState(-1);\n  const [open, setOpen] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootRef = React.useRef(null);\n  const buttonRef = React.useRef(null);\n  const ignoreCallToFocus = React.useRef(false);\n  const touchRippleRefs = React.useRef({});\n  const theme = useTheme();\n  const menuId = useId();\n  const buttonId = useId();\n  const rootProps = useGridRootProps();\n  if (!hasActions(colDef)) {\n    throw new Error('MUI X: Missing the `getActions` property in the `GridColDef`.');\n  }\n  const options = colDef.getActions(apiRef.current.getRowParams(id));\n  const iconButtons = options.filter(option => !option.props.showInMenu);\n  const menuButtons = options.filter(option => option.props.showInMenu);\n  const numberOfButtons = iconButtons.length + (menuButtons.length ? 1 : 0);\n  React.useLayoutEffect(() => {\n    if (!hasFocus) {\n      Object.entries(touchRippleRefs.current).forEach(([index, ref]) => {\n        ref?.stop({}, () => {\n          delete touchRippleRefs.current[index];\n        });\n      });\n    }\n  }, [hasFocus]);\n  React.useEffect(() => {\n    if (focusedButtonIndex < 0 || !rootRef.current) {\n      return;\n    }\n    if (focusedButtonIndex >= rootRef.current.children.length) {\n      return;\n    }\n    const child = rootRef.current.children[focusedButtonIndex];\n    child.focus({\n      preventScroll: true\n    });\n  }, [focusedButtonIndex]);\n  React.useEffect(() => {\n    if (!hasFocus) {\n      setFocusedButtonIndex(-1);\n      ignoreCallToFocus.current = false;\n    }\n  }, [hasFocus]);\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus() {\n      // If ignoreCallToFocus is true, then one of the buttons was clicked and the focus is already set\n      if (!ignoreCallToFocus.current) {\n        // find the first focusable button and pass the index to the state\n        const focusableButtonIndex = options.findIndex(o => !o.props.disabled);\n        setFocusedButtonIndex(focusableButtonIndex);\n      }\n    }\n  }), [options]);\n  React.useEffect(() => {\n    if (focusedButtonIndex >= numberOfButtons) {\n      setFocusedButtonIndex(numberOfButtons - 1);\n    }\n  }, [focusedButtonIndex, numberOfButtons]);\n  const showMenu = () => {\n    setOpen(true);\n    setFocusedButtonIndex(numberOfButtons - 1);\n    ignoreCallToFocus.current = true;\n  };\n  const hideMenu = () => {\n    setOpen(false);\n  };\n  const handleTouchRippleRef = index => instance => {\n    touchRippleRefs.current[index] = instance;\n  };\n  const handleButtonClick = (index, onClick) => event => {\n    setFocusedButtonIndex(index);\n    ignoreCallToFocus.current = true;\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const handleRootKeyDown = event => {\n    if (numberOfButtons <= 1) {\n      return;\n    }\n    const getNewIndex = (index, direction) => {\n      if (index < 0 || index > options.length) {\n        return index;\n      }\n\n      // for rtl mode we need to reverse the direction\n      const rtlMod = theme.direction === 'rtl' ? -1 : 1;\n      const indexMod = (direction === 'left' ? -1 : 1) * rtlMod;\n\n      // if the button that should receive focus is disabled go one more step\n      return options[index + indexMod]?.props.disabled ? getNewIndex(index + indexMod, direction) : index + indexMod;\n    };\n    let newIndex = focusedButtonIndex;\n    if (event.key === 'ArrowRight') {\n      newIndex = getNewIndex(focusedButtonIndex, 'right');\n    } else if (event.key === 'ArrowLeft') {\n      newIndex = getNewIndex(focusedButtonIndex, 'left');\n    }\n    if (newIndex < 0 || newIndex >= numberOfButtons) {\n      return; // We're already in the first or last item = do nothing and let the grid listen the event\n    }\n    if (newIndex !== focusedButtonIndex) {\n      event.preventDefault(); // Prevent scrolling\n      event.stopPropagation(); // Don't stop propagation for other keys, for example ArrowUp\n      setFocusedButtonIndex(newIndex);\n    }\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (['Tab', 'Escape'].includes(event.key)) {\n      hideMenu();\n    }\n  };\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    role: \"menu\",\n    ref: rootRef,\n    tabIndex: -1,\n    className: gridClasses.actionsCell,\n    onKeyDown: handleRootKeyDown\n  }, other, {\n    children: [iconButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      touchRippleRef: handleTouchRippleRef(index),\n      onClick: handleButtonClick(index, button.props.onClick),\n      tabIndex: focusedButtonIndex === index ? tabIndex : -1\n    })), menuButtons.length > 0 && buttonId && /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n      ref: buttonRef,\n      id: buttonId,\n      \"aria-label\": apiRef.current.getLocaleText('actionsCellMore'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-expanded\": open,\n      \"aria-controls\": open ? menuId : undefined,\n      role: \"menuitem\",\n      size: \"small\",\n      onClick: showMenu,\n      touchRippleRef: handleTouchRippleRef(buttonId),\n      tabIndex: focusedButtonIndex === iconButtons.length ? tabIndex : -1\n    }, rootProps.slotProps?.baseIconButton, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.moreActionsIcon, {\n        fontSize: \"small\"\n      })\n    })), menuButtons.length > 0 && /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      position: position,\n      onClose: hideMenu,\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        onKeyDown: handleListKeyDown,\n        \"aria-labelledby\": buttonId,\n        variant: \"menu\",\n        autoFocusItem: true,\n        children: menuButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n          key: index,\n          closeMenu: hideMenu\n        }))\n      })\n    })]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  api: PropTypes.object,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridActionsCell };\nexport const renderActionsCell = params => /*#__PURE__*/_jsx(GridActionsCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\", \"hideDescendantCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { isAutoGeneratedRow } from '../../hooks/features/rows/gridRowsUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridBooleanCellRaw(props) {\n  const {\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const Icon = React.useMemo(() => value ? rootProps.slots.booleanCellTrueIcon : rootProps.slots.booleanCellFalseIcon, [rootProps.slots.booleanCellFalseIcon, rootProps.slots.booleanCellTrueIcon, value]);\n  return /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: apiRef.current.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBooleanCellRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  hideDescendantCount: PropTypes.bool,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nconst GridBooleanCell = /*#__PURE__*/React.memo(GridBooleanCellRaw);\nexport { GridBooleanCell };\nexport const renderBooleanCell = params => {\n  if (params.field !== '__row_group_by_columns_group__' && isAutoGeneratedRow(params.rowNode)) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(GridBooleanCell, _extends({}, params));\n};","// Based on https://stackoverflow.com/a/59518678\nlet cachedSupportsPreventScroll;\nexport function doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n    });\n  }\n  return cachedSupportsPreventScroll;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"column\", \"rowId\", \"editCellState\", \"align\", \"children\", \"colIndex\", \"width\", \"className\", \"style\", \"gridHasScrollX\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"pinnedOffset\", \"pinnedPosition\", \"sectionIndex\", \"sectionLength\", \"gridHasFiller\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded2 = [\"changeReason\", \"unstable_updateValueOnRender\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_ownerDocument as ownerDocument, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { doesSupportPreventScroll } from '../../utils/doesSupportPreventScroll';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { GridCellModes } from '../../models';\nimport { useGridSelector, objectShallowCompare } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridFocusCellSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { MissingRowIdError } from '../../hooks/features/rows/useGridParamsApi';\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from '../../utils/cellBorderUtils';\nimport { GridPinnedColumnPosition } from '../../hooks/features/columns/gridColumnsInterfaces';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport let PinnedPosition = /*#__PURE__*/function (PinnedPosition) {\n  PinnedPosition[PinnedPosition[\"NONE\"] = 0] = \"NONE\";\n  PinnedPosition[PinnedPosition[\"LEFT\"] = 1] = \"LEFT\";\n  PinnedPosition[PinnedPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n  PinnedPosition[PinnedPosition[\"VIRTUAL\"] = 3] = \"VIRTUAL\";\n  return PinnedPosition;\n}({});\nexport const gridPinnedColumnPositionLookup = {\n  [PinnedPosition.LEFT]: GridPinnedColumnPosition.LEFT,\n  [PinnedPosition.RIGHT]: GridPinnedColumnPosition.RIGHT,\n  [PinnedPosition.NONE]: undefined,\n  [PinnedPosition.VIRTUAL]: undefined\n};\nconst EMPTY_CELL_PARAMS = {\n  id: -1,\n  field: '__unset__',\n  row: {},\n  rowNode: {\n    id: -1,\n    depth: 0,\n    type: 'leaf',\n    parent: -1,\n    groupingKey: null\n  },\n  colDef: {\n    type: 'string',\n    field: '__unset__',\n    computedWidth: 0\n  },\n  cellMode: GridCellModes.View,\n  hasFocus: false,\n  tabIndex: -1,\n  value: null,\n  formattedValue: '__unset__',\n  isEditable: false,\n  api: {}\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    pinnedPosition,\n    isEditable,\n    isSelected,\n    isSelectionMode,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isSelected && 'selected', isEditable && 'cell--editable', showLeftBorder && 'cell--withLeftBorder', showRightBorder && 'cell--withRightBorder', pinnedPosition === PinnedPosition.LEFT && 'cell--pinnedLeft', pinnedPosition === PinnedPosition.RIGHT && 'cell--pinnedRight', isSelectionMode && !isEditable && 'cell--selectionMode']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\n\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\n\nconst GridCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      column,\n      rowId,\n      editCellState,\n      align,\n      colIndex,\n      width,\n      className,\n      style: styleProp,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      pinnedOffset,\n      pinnedPosition,\n      sectionIndex,\n      sectionLength,\n      gridHasFiller,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const field = column.field;\n  const cellParamsWithAPI = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    try {\n      const cellParams = apiRef.current.getCellParams(rowId, field);\n      const result = cellParams;\n      result.api = apiRef.current;\n      return result;\n    } catch (e) {\n      if (e instanceof MissingRowIdError) {\n        return EMPTY_CELL_PARAMS;\n      }\n      throw e;\n    }\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const {\n    cellMode,\n    hasFocus,\n    isEditable = false,\n    value\n  } = cellParamsWithAPI;\n  const canManageOwnFocus = column.type === 'actions' && column.getActions?.(apiRef.current.getRowParams(rowId)).some(action => !action.props.disabled);\n  const tabIndex = (cellMode === 'view' || !isEditable) && !canManageOwnFocus ? cellParamsWithAPI.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n\n  // There is a hidden grid state access in `applyPipeProcessor('cellClassName', ...)`\n  const pipesClassName = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  }).filter(Boolean).join(' '));\n  const classNames = [pipesClassName];\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParamsWithAPI) : column.cellClassName);\n  }\n  if (column.display === 'flex') {\n    classNames.push(gridClasses['cell--flex']);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParamsWithAPI));\n  }\n  const valueToRender = cellParamsWithAPI.formattedValue ?? value;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const isSelectionMode = rootProps.cellSelection ?? false;\n  const position = gridPinnedColumnPositionLookup[pinnedPosition];\n  const showLeftBorder = shouldCellShowLeftBorder(position, sectionIndex);\n  const showRightBorder = shouldCellShowRightBorder(position, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    pinnedPosition,\n    isSelected,\n    isSelectionMode\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        border: 0\n      };\n    }\n    const cellStyle = _extends({\n      '--width': `${width}px`\n    }, styleProp);\n    if (pinnedPosition === PinnedPosition.LEFT) {\n      cellStyle.left = pinnedOffset;\n    }\n    if (pinnedPosition === PinnedPosition.RIGHT) {\n      cellStyle.right = pinnedOffset;\n    }\n    return cellStyle;\n  }, [width, isNotVisible, styleProp, pinnedOffset, pinnedPosition]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (cellParamsWithAPI === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && rootProps.experimentalFeatures?.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell?.id === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI X: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell?.id}, field=${focusedCell?.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  let children;\n  let title;\n  if (editCellState === null && column.renderCell) {\n    children = column.renderCell(cellParamsWithAPI);\n  }\n  if (editCellState !== null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n    const formattedValue = column.valueFormatter ? column.valueFormatter(editCellState.value, updatedRow, column, apiRef) : cellParamsWithAPI.formattedValue;\n    const params = _extends({}, cellParamsWithAPI, {\n      row: updatedRow,\n      formattedValue\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses?.['cell--editing']);\n  }\n  if (children === undefined) {\n    const valueString = valueToRender?.toString();\n    children = valueString;\n    title = valueString;\n  }\n  if ( /*#__PURE__*/React.isValidElement(children) && canManageOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(className, classNames, classes.root),\n    role: \"gridcell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    style: style,\n    title: title,\n    tabIndex: tabIndex,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseOver: publish('cellMouseOver', onMouseOver),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onKeyUp: publish('cellKeyUp', onKeyUp)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  gridHasFiller: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  pinnedOffset: PropTypes.number.isRequired,\n  pinnedPosition: PropTypes.oneOf([0, 1, 2, 3]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  sectionIndex: PropTypes.number.isRequired,\n  sectionLength: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCell = fastMemo(GridCell);\nexport { MemoizedGridCell as GridCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditBooleanCell(props) {\n  const {\n      id: idProp,\n      value,\n      field,\n      className,\n      hasFocus,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.checked;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    setValueState(newValue);\n    await apiRef.current.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [apiRef, field, idProp, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, rootProps.slotProps?.baseCheckbox))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditBooleanCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditBooleanCell };\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"inputProps\", \"isValidating\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport InputBase from '@mui/material/InputBase';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledInputBase = styled(InputBase)({\n  fontSize: 'inherit'\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditDateCell(props) {\n  const {\n      id,\n      value: valueProp,\n      field,\n      colDef,\n      hasFocus,\n      inputProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isDateTime = colDef.type === 'dateTime';\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const valueTransformed = React.useMemo(() => {\n    let parsedDate;\n    if (valueProp == null) {\n      parsedDate = null;\n    } else if (valueProp instanceof Date) {\n      parsedDate = valueProp;\n    } else {\n      parsedDate = new Date((valueProp ?? '').toString());\n    }\n    let formattedDate;\n    if (parsedDate == null || Number.isNaN(parsedDate.getTime())) {\n      formattedDate = '';\n    } else {\n      const localDate = new Date(parsedDate.getTime() - parsedDate.getTimezoneOffset() * 60 * 1000);\n      formattedDate = localDate.toISOString().substr(0, isDateTime ? 16 : 10);\n    }\n    return {\n      parsed: parsedDate,\n      formatted: formattedDate\n    };\n  }, [valueProp, isDateTime]);\n  const [valueState, setValueState] = React.useState(valueTransformed);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const parseValueToDate = React.useCallback(value => {\n    if (value === '') {\n      return null;\n    }\n    const [date, time] = value.split('T');\n    const [year, month, day] = date.split('-');\n    const parsedDate = new Date();\n    parsedDate.setFullYear(Number(year), Number(month) - 1, Number(day));\n    parsedDate.setHours(0, 0, 0, 0);\n    if (time) {\n      const [hours, minutes] = time.split(':');\n      parsedDate.setHours(Number(hours), Number(minutes), 0, 0);\n    }\n    return parsedDate;\n  }, []);\n  const handleChange = React.useCallback(async event => {\n    const newFormattedDate = event.target.value;\n    const newParsedDate = parseValueToDate(newFormattedDate);\n    if (onValueChange) {\n      await onValueChange(event, newParsedDate);\n    }\n    setValueState({\n      parsed: newParsedDate,\n      formatted: newFormattedDate\n    });\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newParsedDate\n    }, event);\n  }, [apiRef, field, id, onValueChange, parseValueToDate]);\n  React.useEffect(() => {\n    setValueState(state => {\n      if (valueTransformed.parsed !== state.parsed && valueTransformed.parsed?.getTime() !== state.parsed?.getTime()) {\n        return valueTransformed;\n      }\n      return state;\n    });\n  }, [valueTransformed]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(StyledInputBase, _extends({\n    inputRef: inputRef,\n    fullWidth: true,\n    className: classes.root,\n    type: isDateTime ? 'datetime-local' : 'date',\n    inputProps: _extends({\n      max: isDateTime ? '9999-12-31T23:59' : '9999-12-31'\n    }, inputProps),\n    value: valueState.formatted,\n    onChange: handleChange\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditDateCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditDateCell };\nexport const renderEditDateCell = params => /*#__PURE__*/_jsx(GridEditDateCell, _extends({}, params));","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"isValidating\", \"debounceMs\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridEditInputCellRoot = styled(InputBase, {\n  name: 'MuiDataGrid',\n  slot: 'EditInputCell',\n  overridesResolver: (props, styles) => styles.editInputCell\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  padding: '1px 0',\n  '& input': {\n    padding: '0 16px',\n    height: '100%'\n  }\n}));\nconst GridEditInputCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value,\n      field,\n      colDef,\n      hasFocus,\n      debounceMs = 200,\n      isProcessingProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const [valueState, setValueState] = React.useState(value);\n  const classes = useUtilityClasses(rootProps);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.value;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    const column = apiRef.current.getColumn(field);\n    let parsedValue = newValue;\n    if (column.valueParser) {\n      parsedValue = column.valueParser(newValue, apiRef.current.getRow(id), column, apiRef);\n    }\n    setValueState(parsedValue);\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: parsedValue,\n      debounceMs,\n      unstable_skipValueParser: true\n    }, event);\n  }, [apiRef, debounceMs, field, id, onValueChange]);\n  const meta = apiRef.current.unstable_getEditCellMeta(id, field);\n  React.useEffect(() => {\n    if (meta?.changeReason !== 'debouncedSetEditCellValue') {\n      setValueState(value);\n    }\n  }, [meta, value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(GridEditInputCellRoot, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    className: classes.root,\n    ownerState: rootProps,\n    fullWidth: true,\n    type: colDef.type === 'number' ? colDef.type : 'text',\n    value: valueState ?? '',\n    onChange: handleChange,\n    endAdornment: isProcessingProps ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n      fontSize: \"small\",\n      color: \"action\"\n    }) : undefined\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridEditInputCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  debounceMs: PropTypes.number,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditInputCell };\nexport const renderEditInputCell = params => /*#__PURE__*/_jsx(GridEditInputCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\", \"initialOpen\"],\n  _excluded2 = [\"MenuProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { GridCellEditStopReasons } from '../../models/params/gridEditCellParams';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridEditModes } from '../../models/gridEditRowModel';\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from '../panel/filterPanel/filterPanelUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isKeyboardEvent(event) {\n  return !!event.key;\n}\nfunction GridEditSingleSelectCell(props) {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value: valueProp,\n      field,\n      row,\n      colDef,\n      hasFocus,\n      error,\n      onValueChange,\n      initialOpen = rootProps.editMode === GridEditModes.Cell\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef();\n  const inputRef = React.useRef();\n  const [open, setOpen] = React.useState(initialOpen);\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const _ref = rootProps.slotProps?.baseSelect || {},\n    {\n      MenuProps\n    } = _ref,\n    otherBaseSelectProps = _objectWithoutPropertiesLoose(_ref, _excluded2);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current?.focus();\n    }\n  }, [hasFocus]);\n  if (!isSingleSelectColDef(colDef)) {\n    return null;\n  }\n  const valueOptions = getValueOptions(colDef, {\n    id,\n    row\n  });\n  if (!valueOptions) {\n    return null;\n  }\n  const getOptionValue = colDef.getOptionValue;\n  const getOptionLabel = colDef.getOptionLabel;\n  const handleChange = async event => {\n    if (!isSingleSelectColDef(colDef) || !valueOptions) {\n      return;\n    }\n    setOpen(false);\n    const target = event.target;\n    // NativeSelect casts the value to a string.\n    const formattedTargetValue = getValueFromValueOptions(target.value, valueOptions, getOptionValue);\n    if (onValueChange) {\n      await onValueChange(event, formattedTargetValue);\n    }\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: formattedTargetValue\n    }, event);\n  };\n  const handleClose = (event, reason) => {\n    if (rootProps.editMode === GridEditModes.Row) {\n      setOpen(false);\n      return;\n    }\n    if (reason === 'backdropClick' || isEscapeKey(event.key)) {\n      const params = apiRef.current.getCellParams(id, field);\n      apiRef.current.publishEvent('cellEditStop', _extends({}, params, {\n        reason: isEscapeKey(event.key) ? GridCellEditStopReasons.escapeKeyDown : GridCellEditStopReasons.cellFocusOut\n      }));\n    }\n  };\n  const handleOpen = event => {\n    if (isKeyboardEvent(event) && event.key === 'Enter') {\n      return;\n    }\n    setOpen(true);\n  };\n  if (!valueOptions || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    value: valueProp,\n    onChange: handleChange,\n    open: open,\n    onOpen: handleOpen,\n    MenuProps: _extends({\n      onClose: handleClose\n    }, MenuProps),\n    error: error,\n    native: isSelectNative,\n    fullWidth: true\n  }, other, otherBaseSelectProps, {\n    children: valueOptions.map(valueOption => {\n      const value = getOptionValue(valueOption);\n      return /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, rootProps.slotProps?.baseSelectOption || {}, {\n        native: isSelectNative,\n        key: value,\n        value: value\n      }), getOptionLabel(valueOption));\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditSingleSelectCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the select opens by default.\n   */\n  initialOpen: PropTypes.bool,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {SelectChangeEvent<any>} event The event source of the callback.\n   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditSingleSelectCell };\nexport const renderEditSingleSelectCell = params => /*#__PURE__*/_jsx(GridEditSingleSelectCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"align\", \"width\", \"height\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Skeleton from '@mui/material/Skeleton';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { randomNumberBetween } from '../../utils/utils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst randomWidth = randomNumberBetween(10000, 20, 80);\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', 'cellSkeleton', `cell--text${capitalize(align)}`, 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridSkeletonCell(props) {\n  const {\n      align,\n      width,\n      height\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    align\n  };\n  const classes = useUtilityClasses(ownerState);\n  const contentWidth = Math.round(randomWidth());\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    className: classes.root,\n    style: {\n      height,\n      maxWidth: width,\n      minWidth: width\n    }\n  }, other, {\n    children: /*#__PURE__*/_jsx(Skeleton, {\n      width: `${contentWidth}%`,\n      height: 25\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridSkeletonCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.string.isRequired,\n  field: PropTypes.string.isRequired,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst Memoized = fastMemo(GridSkeletonCell);\nexport { Memoized as GridSkeletonCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport Badge from '@mui/material/Badge';\nimport { useGridSelector } from '../../hooks';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['filterIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderFilterIconButton(props) {\n  const {\n    counter,\n    field,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const labelId = useId();\n  const panelId = useId();\n  const toggleFilter = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      open,\n      openedPanelValue\n    } = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel(undefined, panelId, labelId);\n    }\n    if (onClick) {\n      onClick(apiRef.current.getColumnHeaderParams(field), event);\n    }\n  }, [apiRef, field, onClick, panelId, labelId]);\n  if (!counter) {\n    return null;\n  }\n  const open = preferencePanel.open && preferencePanel.labelId === labelId;\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    id: labelId,\n    onClick: toggleFilter,\n    color: \"default\",\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderFiltersLabel'),\n    size: \"small\",\n    tabIndex: -1,\n    \"aria-haspopup\": \"menu\",\n    \"aria-expanded\": open,\n    \"aria-controls\": open ? panelId : undefined\n  }, rootProps.slotProps?.baseIconButton, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.columnFilteredIcon, {\n      className: classes.icon,\n      fontSize: \"small\"\n    })\n  }));\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: apiRef.current.getLocaleText('columnHeaderFiltersTooltipActive')(counter),\n    enterDelay: 1000\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n      children: [counter > 1 && /*#__PURE__*/_jsx(Badge, {\n        badgeContent: counter,\n        color: \"default\",\n        children: iconButton\n      }), counter === 1 && iconButton]\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderFilterIconButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  counter: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridColumnHeaderFilterIconButton };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['menuIcon', open && 'menuOpen'],\n    button: ['menuIconButton']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nexport const ColumnHeaderMenuIcon = /*#__PURE__*/React.memo(props => {\n  const {\n    colDef,\n    open,\n    columnMenuId,\n    columnMenuButtonId,\n    iconButtonRef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleMenuIconClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    apiRef.current.toggleColumnMenu(colDef.field);\n  }, [apiRef, colDef.field]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('columnMenuLabel'),\n      enterDelay: 1000\n    }, rootProps.slotProps?.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        ref: iconButtonRef,\n        tabIndex: -1,\n        className: classes.button,\n        \"aria-label\": apiRef.current.getLocaleText('columnMenuLabel'),\n        size: \"small\",\n        onClick: handleMenuIconClick,\n        \"aria-haspopup\": \"menu\",\n        \"aria-expanded\": open,\n        \"aria-controls\": open ? columnMenuId : undefined,\n        id: columnMenuButtonId\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    }))\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { GridColumnHeaderSortIcon } from './GridColumnHeaderSortIcon';\nimport { ColumnHeaderMenuIcon } from './ColumnHeaderMenuIcon';\nimport { GridColumnHeaderMenu } from '../menu/columnMenu/GridColumnHeaderMenu';\nimport { gridClasses, getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { isEventTargetInPortal } from '../../utils/domUtils';\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from '../../utils/cellBorderUtils';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    colDef,\n    classes,\n    isDragging,\n    sortDirection,\n    showRightBorder,\n    showLeftBorder,\n    filterItemsCounter,\n    pinnedPosition\n  } = ownerState;\n  const isColumnSorted = sortDirection != null;\n  const isColumnFiltered = filterItemsCounter != null && filterItemsCounter > 0;\n  // todo refactor to a prop on col isNumeric or ?? ie: coltype===price wont work\n  const isColumnNumeric = colDef.type === 'number';\n  const slots = {\n    root: ['columnHeader', colDef.headerAlign === 'left' && 'columnHeader--alignLeft', colDef.headerAlign === 'center' && 'columnHeader--alignCenter', colDef.headerAlign === 'right' && 'columnHeader--alignRight', colDef.sortable && 'columnHeader--sortable', isDragging && 'columnHeader--moving', isColumnSorted && 'columnHeader--sorted', isColumnFiltered && 'columnHeader--filtered', isColumnNumeric && 'columnHeader--numeric', 'withBorderColor', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderItem(props) {\n  const {\n    colDef,\n    columnMenuOpen,\n    colIndex,\n    headerHeight,\n    isResizing,\n    isLast,\n    sortDirection,\n    sortIndex,\n    filterItemsCounter,\n    hasFocus,\n    tabIndex,\n    disableReorder,\n    separatorSide,\n    style,\n    pinnedPosition,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const columnMenuId = useId();\n  const columnMenuButtonId = useId();\n  const iconButtonRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const isDraggable = React.useMemo(() => !rootProps.disableColumnReorder && !disableReorder && !colDef.disableReorder, [rootProps.disableColumnReorder, disableReorder, colDef.disableReorder]);\n  let headerComponent;\n  if (colDef.renderHeader) {\n    headerComponent = colDef.renderHeader(apiRef.current.getColumnHeaderParams(colDef.field));\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder,\n    showLeftBorder\n  });\n  const classes = useUtilityClasses(ownerState);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(colDef.field), event);\n  }, [apiRef, colDef.field]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onClick: publish('columnHeaderClick'),\n    onDoubleClick: publish('columnHeaderDoubleClick'),\n    onMouseOver: publish('columnHeaderOver'),\n    // TODO remove as it's not used\n    onMouseOut: publish('columnHeaderOut'),\n    // TODO remove as it's not used\n    onMouseEnter: publish('columnHeaderEnter'),\n    // TODO remove as it's not used\n    onMouseLeave: publish('columnHeaderLeave'),\n    // TODO remove as it's not used\n    onKeyDown: publish('columnHeaderKeyDown'),\n    onFocus: publish('columnHeaderFocus'),\n    onBlur: publish('columnHeaderBlur')\n  }), [publish]);\n  const draggableEventHandlers = React.useMemo(() => isDraggable ? {\n    onDragStart: publish('columnHeaderDragStart'),\n    onDragEnter: publish('columnHeaderDragEnter'),\n    onDragOver: publish('columnHeaderDragOver'),\n    onDragEnd: publish('columnHeaderDragEnd')\n  } : {}, [isDraggable, publish]);\n  const columnHeaderSeparatorProps = React.useMemo(() => ({\n    onMouseDown: publish('columnSeparatorMouseDown'),\n    onDoubleClick: publish('columnSeparatorDoubleClick')\n  }), [publish]);\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  const handleExited = React.useCallback(() => {\n    setShowColumnMenuIcon(false);\n  }, []);\n  const columnMenuIconButton = !rootProps.disableColumnMenu && !colDef.disableColumnMenu && /*#__PURE__*/_jsx(ColumnHeaderMenuIcon, {\n    colDef: colDef,\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    open: showColumnMenuIcon,\n    iconButtonRef: iconButtonRef\n  });\n  const columnMenu = /*#__PURE__*/_jsx(GridColumnHeaderMenu, {\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    field: colDef.field,\n    open: columnMenuOpen,\n    target: iconButtonRef.current,\n    ContentComponent: rootProps.slots.columnMenu,\n    contentComponentProps: rootProps.slotProps?.columnMenu,\n    onExited: handleExited\n  });\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const showSortIcon = (colDef.sortable || sortDirection != null) && !colDef.hideSortIcons && !rootProps.disableColumnSorting;\n  const columnTitleIconButtons = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [!rootProps.disableColumnFilter && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderFilterIconButton, _extends({\n      field: colDef.field,\n      counter: filterItemsCounter\n    }, rootProps.slotProps?.columnHeaderFilterIconButton)), showSortIcon && /*#__PURE__*/_jsx(GridColumnHeaderSortIcon, {\n      direction: sortDirection,\n      index: sortIndex,\n      sortingOrder: sortingOrder,\n      disabled: !colDef.sortable\n    })]\n  });\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  const headerClassName = typeof colDef.headerClassName === 'function' ? colDef.headerClassName({\n    field: colDef.field,\n    colDef\n  }) : colDef.headerClassName;\n  const label = colDef.headerName ?? colDef.field;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: columnMenuOpen,\n    colIndex: colIndex,\n    height: headerHeight,\n    isResizing: isResizing,\n    sortDirection: sortDirection,\n    hasFocus: hasFocus,\n    tabIndex: tabIndex,\n    separatorSide: separatorSide,\n    isDraggable: isDraggable,\n    headerComponent: headerComponent,\n    description: colDef.description,\n    elementId: colDef.field,\n    width: colDef.computedWidth,\n    columnMenuIconButton: columnMenuIconButton,\n    columnTitleIconButtons: columnTitleIconButtons,\n    headerClassName: clsx(headerClassName, isLast && gridClasses['columnHeader--last']),\n    label: label,\n    resizable: !rootProps.disableColumnResize && !!colDef.resizable,\n    \"data-field\": colDef.field,\n    columnMenu: columnMenu,\n    draggableContainerProps: draggableEventHandlers,\n    columnHeaderSeparatorProps: columnHeaderSeparatorProps,\n    style: style\n  }, mouseEventsHandlers));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  colIndex: PropTypes.number.isRequired,\n  columnMenuOpen: PropTypes.bool.isRequired,\n  disableReorder: PropTypes.bool,\n  filterItemsCounter: PropTypes.number,\n  gridHasFiller: PropTypes.bool.isRequired,\n  hasFocus: PropTypes.bool,\n  headerHeight: PropTypes.number.isRequired,\n  indexInSection: PropTypes.number.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isLast: PropTypes.bool.isRequired,\n  isResizing: PropTypes.bool.isRequired,\n  pinnedPosition: PropTypes.oneOf(['left', 'right']),\n  sectionLength: PropTypes.number.isRequired,\n  separatorSide: PropTypes.oneOf(['left', 'right']),\n  sortDirection: PropTypes.oneOf(['asc', 'desc']),\n  sortIndex: PropTypes.number,\n  style: PropTypes.object,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired\n} : void 0;\nconst Memoized = fastMemo(GridColumnHeaderItem);\nexport { Memoized as GridColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"resizable\", \"resizing\", \"height\", \"side\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GridColumnHeaderSeparatorSides = /*#__PURE__*/function (GridColumnHeaderSeparatorSides) {\n  GridColumnHeaderSeparatorSides[\"Left\"] = \"left\";\n  GridColumnHeaderSeparatorSides[\"Right\"] = \"right\";\n  return GridColumnHeaderSeparatorSides;\n}(GridColumnHeaderSeparatorSides || {});\nconst useUtilityClasses = ownerState => {\n  const {\n    resizable,\n    resizing,\n    classes,\n    side\n  } = ownerState;\n  const slots = {\n    root: ['columnSeparator', resizable && 'columnSeparator--resizable', resizing && 'columnSeparator--resizing', side && `columnSeparator--side${capitalize(side)}`],\n    icon: ['iconSeparator']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderSeparatorRaw(props) {\n  const {\n      height,\n      side = GridColumnHeaderSeparatorSides.Right\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    side,\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const stopClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      className: classes.root,\n      style: {\n        minHeight: height,\n        opacity: rootProps.showColumnVerticalBorder ? 0 : 1\n      }\n    }, other, {\n      onClick: stopClick,\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnResizeIcon, {\n        className: classes.icon\n      })\n    }))\n  );\n}\nconst GridColumnHeaderSeparator = /*#__PURE__*/React.memo(GridColumnHeaderSeparatorRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSeparatorRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  height: PropTypes.number.isRequired,\n  resizable: PropTypes.bool.isRequired,\n  resizing: PropTypes.bool.isRequired,\n  side: PropTypes.oneOf(['left', 'right'])\n} : void 0;\nexport { GridColumnHeaderSeparator, GridColumnHeaderSeparatorSides };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport Badge from '@mui/material/Badge';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['sortIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction getIcon(icons, direction, className, sortingOrder) {\n  let Icon;\n  const iconProps = {};\n  if (direction === 'asc') {\n    Icon = icons.columnSortedAscendingIcon;\n  } else if (direction === 'desc') {\n    Icon = icons.columnSortedDescendingIcon;\n  } else {\n    Icon = icons.columnUnsortedIcon;\n    iconProps.sortingOrder = sortingOrder;\n  }\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: className\n  }, iconProps)) : null;\n}\nfunction GridColumnHeaderSortIconRaw(props) {\n  const {\n    direction,\n    index,\n    sortingOrder,\n    disabled\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const iconElement = getIcon(rootProps.slots, direction, classes.icon, sortingOrder);\n  if (!iconElement) {\n    return null;\n  }\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    tabIndex: -1,\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    title: apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    size: \"small\",\n    disabled: disabled\n  }, rootProps.slotProps?.baseIconButton, {\n    children: iconElement\n  }));\n  return /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n    children: [index != null && /*#__PURE__*/_jsx(Badge, {\n      badgeContent: index,\n      color: \"default\",\n      children: iconButton\n    }), index == null && iconButton]\n  });\n}\nconst GridColumnHeaderSortIcon = /*#__PURE__*/React.memo(GridColumnHeaderSortIconRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSortIconRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  disabled: PropTypes.bool,\n  index: PropTypes.number,\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])).isRequired\n} : void 0;\nexport { GridColumnHeaderSortIcon };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { isOverflown } from '../../utils/domUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaderTitle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeaderTitleRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderTitle',\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\n})({\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  fontWeight: 'var(--unstable_DataGrid-headWeight)'\n});\nconst ColumnHeaderInnerTitle = /*#__PURE__*/React.forwardRef(function ColumnHeaderInnerTitle(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\nfunction GridColumnHeaderTitle(props) {\n  const {\n    label,\n    description\n  } = props;\n  const rootProps = useGridRootProps();\n  const titleRef = React.useRef(null);\n  const [tooltip, setTooltip] = React.useState('');\n  const handleMouseOver = React.useCallback(() => {\n    if (!description && titleRef?.current) {\n      const isOver = isOverflown(titleRef.current);\n      if (isOver) {\n        setTooltip(label);\n      } else {\n        setTooltip('');\n      }\n    }\n  }, [description, label]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: description || tooltip\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\n      onMouseOver: handleMouseOver,\n      ref: titleRef,\n      children: label\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnWidth: PropTypes.number.isRequired,\n  description: PropTypes.node,\n  label: PropTypes.string.isRequired\n} : void 0;\nexport { GridColumnHeaderTitle };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"classes\", \"columnMenuOpen\", \"colIndex\", \"height\", \"isResizing\", \"sortDirection\", \"hasFocus\", \"tabIndex\", \"separatorSide\", \"isDraggable\", \"headerComponent\", \"description\", \"elementId\", \"width\", \"columnMenuIconButton\", \"columnMenu\", \"columnTitleIconButtons\", \"headerClassName\", \"label\", \"resizable\", \"draggableContainerProps\", \"columnHeaderSeparatorProps\", \"style\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { GridColumnHeaderTitle } from './GridColumnHeaderTitle';\nimport { GridColumnHeaderSeparator } from './GridColumnHeaderSeparator';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridGenericColumnHeaderItem = /*#__PURE__*/React.forwardRef(function GridGenericColumnHeaderItem(props, ref) {\n  const {\n      classes,\n      columnMenuOpen,\n      colIndex,\n      height,\n      isResizing,\n      sortDirection,\n      hasFocus,\n      tabIndex,\n      separatorSide,\n      isDraggable,\n      headerComponent,\n      description,\n      width,\n      columnMenuIconButton = null,\n      columnMenu = null,\n      columnTitleIconButtons = null,\n      headerClassName,\n      label,\n      resizable,\n      draggableContainerProps,\n      columnHeaderSeparatorProps,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const handleRef = useForkRef(headerCellRef, ref);\n  let ariaSort = 'none';\n  if (sortDirection != null) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, headerClassName),\n    style: _extends({}, style, {\n      height,\n      width,\n      minWidth: width,\n      maxWidth: width\n    }),\n    role: \"columnheader\",\n    tabIndex: tabIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-sort\": ariaSort,\n    \"aria-label\": headerComponent == null ? label : undefined\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(\"div\", _extends({\n      className: classes.draggableContainer,\n      draggable: isDraggable,\n      role: \"presentation\"\n    }, draggableContainerProps, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.titleContainer,\n        role: \"presentation\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: classes.titleContainerContent,\n          children: headerComponent !== undefined ? headerComponent : /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n            label: label,\n            description: description,\n            columnWidth: width\n          })\n        }), columnTitleIconButtons]\n      }), columnMenuIconButton]\n    })), /*#__PURE__*/_jsx(GridColumnHeaderSeparator, _extends({\n      resizable: !rootProps.disableColumnResize && !!resizable,\n      resizing: isResizing,\n      height: height,\n      side: separatorSide\n    }, columnHeaderSeparatorProps)), columnMenu]\n  }));\n});\nexport { GridGenericColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['iconButtonContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridIconButtonContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'IconButtonContainer',\n  overridesResolver: (props, styles) => styles.iconButtonContainer\n})(() => ({\n  display: 'flex',\n  visibility: 'hidden',\n  width: 0\n}));\nexport const GridIconButtonContainer = /*#__PURE__*/React.forwardRef(function GridIconButtonContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridIconButtonContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"id\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"colDef\", \"isEditable\", \"cellMode\", \"hasFocus\", \"tabIndex\", \"api\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridCellCheckboxForwardRef = /*#__PURE__*/React.forwardRef(function GridCellCheckboxRenderer(props, ref) {\n  const {\n      field,\n      id,\n      value: isChecked,\n      rowNode,\n      hasFocus,\n      tabIndex\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const checkboxElement = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRef = useForkRef(checkboxElement, ref);\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked,\n      id\n    };\n    apiRef.current.publishEvent('rowSelectionCheckboxChange', params, event);\n  };\n  React.useLayoutEffect(() => {\n    if (tabIndex === 0) {\n      const element = apiRef.current.getCellElement(id, field);\n      if (element) {\n        element.tabIndex = -1;\n      }\n    }\n  }, [apiRef, tabIndex, id, field]);\n  React.useEffect(() => {\n    if (hasFocus) {\n      const input = checkboxElement.current?.querySelector('input');\n      input?.focus({\n        preventScroll: true\n      });\n    } else if (rippleRef.current) {\n      // Only available in @mui/material v5.4.1 or later\n      rippleRef.current.stop({});\n    }\n  }, [hasFocus]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // We call event.stopPropagation to avoid selecting the row and also scrolling to bottom\n      // TODO: Remove and add a check inside useGridKeyboardNavigation\n      event.stopPropagation();\n    }\n  }, []);\n  if (rowNode.type === 'footer' || rowNode.type === 'pinnedRow') {\n    return null;\n  }\n  const isSelectable = apiRef.current.isRowSelectable(id);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectRow' : 'checkboxSelectionSelectRow');\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: handleRef,\n    tabIndex: tabIndex,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    onKeyDown: handleKeyDown,\n    disabled: !isSelectable,\n    touchRippleRef: rippleRef /* FIXME: typing error */\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellCheckboxForwardRef.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridCellCheckboxForwardRef };\nexport const GridCellCheckboxRenderer = GridCellCheckboxForwardRef;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"colDef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { isMultipleRowSelectionEnabled } from '../../hooks/features/rowSelection/utils';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridTabIndexColumnHeaderSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { gridRowSelectionStateSelector } from '../../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridExpandedSortedRowIdsSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridHeaderCheckbox = /*#__PURE__*/React.forwardRef(function GridHeaderCheckbox(props, ref) {\n  const other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [, forceUpdate] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const selection = useGridSelector(apiRef, gridRowSelectionStateSelector);\n  const visibleRowIds = useGridSelector(apiRef, gridExpandedSortedRowIdsSelector);\n  const paginatedVisibleRowIds = useGridSelector(apiRef, gridPaginatedVisibleSortedGridRowIdsSelector);\n  const filteredSelection = React.useMemo(() => {\n    if (typeof rootProps.isRowSelectable !== 'function') {\n      return selection;\n    }\n    return selection.filter(id => {\n      // The row might have been deleted\n      if (!apiRef.current.getRow(id)) {\n        return false;\n      }\n      return rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n    });\n  }, [apiRef, rootProps.isRowSelectable, selection]);\n\n  // All the rows that could be selected / unselected by toggling this checkbox\n  const selectionCandidates = React.useMemo(() => {\n    const rowIds = !rootProps.pagination || !rootProps.checkboxSelectionVisibleOnly ? visibleRowIds : paginatedVisibleRowIds;\n\n    // Convert to an object to make O(1) checking if a row exists or not\n    // TODO create selector that returns visibleRowIds/paginatedVisibleRowIds as an object\n    return rowIds.reduce((acc, id) => {\n      acc[id] = true;\n      return acc;\n    }, {});\n  }, [rootProps.pagination, rootProps.checkboxSelectionVisibleOnly, paginatedVisibleRowIds, visibleRowIds]);\n\n  // Amount of rows selected and that are visible in the current page\n  const currentSelectionSize = React.useMemo(() => filteredSelection.filter(id => selectionCandidates[id]).length, [filteredSelection, selectionCandidates]);\n  const isIndeterminate = currentSelectionSize > 0 && currentSelectionSize < Object.keys(selectionCandidates).length;\n  const isChecked = currentSelectionSize > 0;\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked\n    };\n    apiRef.current.publishEvent('headerSelectionCheckboxChange', params);\n  };\n  const tabIndex = tabIndexState !== null && tabIndexState.field === props.field ? 0 : -1;\n  React.useLayoutEffect(() => {\n    const element = apiRef.current.getColumnHeaderElement(props.field);\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [tabIndex, apiRef, props.field]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // imperative toggle the checkbox because Space is disable by some preventDefault\n      apiRef.current.publishEvent('headerSelectionCheckboxChange', {\n        value: !isChecked\n      });\n    }\n  }, [apiRef, isChecked]);\n  const handleSelectionChange = React.useCallback(() => {\n    forceUpdate(p => !p);\n  }, []);\n  React.useEffect(() => {\n    return apiRef.current.subscribeEvent('rowSelectionChange', handleSelectionChange);\n  }, [apiRef, handleSelectionChange]);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectAllRows' : 'checkboxSelectionSelectAllRows');\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: ref,\n    indeterminate: isIndeterminate,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    tabIndex: tabIndex,\n    onKeyDown: handleKeyDown,\n    disabled: !isMultipleRowSelectionEnabled(rootProps)\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderCheckbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The column of the current header component.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the column that triggered the event\n   */\n  field: PropTypes.string.isRequired\n} : void 0;\nexport { GridHeaderCheckbox };","export const checkColumnVisibilityModelsSame = (a, b) => {\n  // Filter `false` values only, as `true` and not having a key are the same\n  const aFalseValues = new Set(Object.keys(a).filter(key => a[key] === false));\n  const bFalseValues = new Set(Object.keys(b).filter(key => b[key] === false));\n  if (aFalseValues.size !== bFalseValues.size) {\n    return false;\n  }\n  let result = true;\n  aFalseValues.forEach(key => {\n    if (!bFalseValues.has(key)) {\n      result = false;\n    }\n  });\n  return result;\n};\nexport const defaultSearchPredicate = (column, searchValue) => (column.headerName || column.field).toLowerCase().indexOf(searchValue) > -1;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useLazyRef } from '../../hooks/utils/useLazyRef';\nimport { checkColumnVisibilityModelsSame, defaultSearchPredicate } from './utils';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsManagement'],\n    header: ['columnsManagementHeader'],\n    footer: ['columnsManagementFooter'],\n    row: ['columnsManagementRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst collator = new Intl.Collator();\nfunction GridColumnsManagement(props) {\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const initialColumnVisibilityModel = useLazyRef(() => gridColumnVisibilityModelSelector(apiRef)).current;\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const classes = useUtilityClasses(rootProps);\n  const {\n    sort,\n    searchPredicate = defaultSearchPredicate,\n    autoFocusSearchField = true,\n    disableShowHideToggle = false,\n    disableResetButton = false,\n    toggleAllMode = 'all',\n    getTogglableColumns\n  } = props;\n  const isResetDisabled = React.useMemo(() => checkColumnVisibilityModelsSame(columnVisibilityModel, initialColumnVisibilityModel), [columnVisibilityModel, initialColumnVisibilityModel]);\n  const sortedColumns = React.useMemo(() => {\n    switch (sort) {\n      case 'asc':\n        return [...columns].sort((a, b) => collator.compare(a.headerName || a.field, b.headerName || b.field));\n      case 'desc':\n        return [...columns].sort((a, b) => -collator.compare(a.headerName || a.field, b.headerName || b.field));\n      default:\n        return columns;\n    }\n  }, [columns, sort]);\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n  const currentColumns = React.useMemo(() => {\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(sortedColumns) : null;\n    const togglableSortedColumns = togglableColumns ? sortedColumns.filter(({\n      field\n    }) => togglableColumns.includes(field)) : sortedColumns;\n    if (!searchValue) {\n      return togglableSortedColumns;\n    }\n    return togglableSortedColumns.filter(column => searchPredicate(column, searchValue.toLowerCase()));\n  }, [sortedColumns, searchValue, searchPredicate, getTogglableColumns]);\n  const toggleAllColumns = React.useCallback(isVisible => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    const newModel = _extends({}, currentModel);\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(columns) : null;\n    (toggleAllMode === 'filteredOnly' ? currentColumns : columns).forEach(col => {\n      if (col.hideable && (togglableColumns == null || togglableColumns.includes(col.field))) {\n        if (isVisible) {\n          // delete the key from the model instead of setting it to `true`\n          delete newModel[col.field];\n        } else {\n          newModel[col.field] = false;\n        }\n      }\n    });\n    return apiRef.current.setColumnVisibilityModel(newModel);\n  }, [apiRef, columns, getTogglableColumns, toggleAllMode, currentColumns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const hideableColumns = React.useMemo(() => currentColumns.filter(col => col.hideable), [currentColumns]);\n  const allHideableColumnsVisible = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] == null || columnVisibilityModel[column.field] !== false), [columnVisibilityModel, hideableColumns]);\n  const allHideableColumnsHidden = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] === false), [columnVisibilityModel, hideableColumns]);\n  const firstSwitchRef = React.useRef(null);\n  React.useEffect(() => {\n    if (autoFocusSearchField) {\n      searchInputRef.current.focus();\n    } else if (firstSwitchRef.current && typeof firstSwitchRef.current.focus === 'function') {\n      firstSwitchRef.current.focus();\n    }\n  }, [autoFocusSearchField]);\n  let firstHideableColumnFound = false;\n  const isFirstHideableColumn = column => {\n    if (firstHideableColumnFound === false && column.hideable !== false) {\n      firstHideableColumnFound = true;\n      return true;\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnsManagementHeader, {\n      className: classes.header,\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n        placeholder: apiRef.current.getLocaleText('columnsManagementSearchTitle'),\n        inputRef: searchInputRef,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"outlined\",\n        size: \"small\",\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsx(rootProps.slots.baseInputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsx(rootProps.slots.quickFilterIcon, {})\n          }),\n          sx: {\n            pl: 1.5\n          }\n        },\n        fullWidth: true\n      }, rootProps.slotProps?.baseTextField))\n    }), /*#__PURE__*/_jsxs(GridColumnsManagementBody, {\n      className: classes.root,\n      ownerState: rootProps,\n      children: [currentColumns.map(column => /*#__PURE__*/_jsx(FormControlLabel, {\n        className: classes.row,\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: column.hideable === false,\n          checked: columnVisibilityModel[column.field] !== false,\n          onClick: toggleColumn,\n          name: column.field,\n          sx: {\n            p: 0.5\n          },\n          inputRef: isFirstHideableColumn(column) ? firstSwitchRef : undefined\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: column.headerName || column.field\n      }, column.field)), currentColumns.length === 0 && /*#__PURE__*/_jsx(GridColumnsManagementEmptyText, {\n        ownerState: rootProps,\n        children: apiRef.current.getLocaleText('columnsManagementNoColumns')\n      })]\n    }), (!disableShowHideToggle || !disableResetButton) && currentColumns.length > 0 ? /*#__PURE__*/_jsxs(GridColumnsManagementFooter, {\n      ownerState: rootProps,\n      className: classes.footer,\n      children: [!disableShowHideToggle ? /*#__PURE__*/_jsx(FormControlLabel, {\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: hideableColumns.length === 0,\n          checked: allHideableColumnsVisible,\n          indeterminate: !allHideableColumnsVisible && !allHideableColumnsHidden,\n          onClick: () => toggleAllColumns(!allHideableColumnsVisible),\n          name: apiRef.current.getLocaleText('columnsManagementShowHideAllText'),\n          sx: {\n            p: 0.5\n          }\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: apiRef.current.getLocaleText('columnsManagementShowHideAllText')\n      }) : /*#__PURE__*/_jsx(\"span\", {}), !disableResetButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: () => apiRef.current.setColumnVisibilityModel(initialColumnVisibilityModel),\n        disabled: isResetDisabled\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('columnsManagementReset')\n      })) : null]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsManagement.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the column search field will be focused automatically.\n   * If `false`, the first column switch input will be focused automatically.\n   * This helps to avoid input keyboard panel to popup automatically on touch devices.\n   * @default true\n   */\n  autoFocusSearchField: PropTypes.bool,\n  /**\n   * If `true`, the `Reset` button will not be disabled\n   * @default false\n   */\n  disableResetButton: PropTypes.bool,\n  /**\n   * If `true`, the `Show/Hide all` toggle checkbox will not be displayed.\n   * @default false\n   */\n  disableShowHideToggle: PropTypes.bool,\n  /**\n   * Returns the list of togglable columns.\n   * If used, only those columns will be displayed in the panel\n   * which are passed as the return value of the function.\n   * @param {GridColDef[]} columns The `ColDef` list of all columns.\n   * @returns {GridColDef['field'][]} The list of togglable columns' field names.\n   */\n  getTogglableColumns: PropTypes.func,\n  searchPredicate: PropTypes.func,\n  sort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Changes the behavior of the `Show/Hide All` toggle when the search field is used:\n   * - `all`: Will toggle all columns.\n   * - `filteredOnly`: Will only toggle columns that match the search criteria.\n   * @default 'all'\n   */\n  toggleAllMode: PropTypes.oneOf(['all', 'filteredOnly'])\n} : void 0;\nconst GridColumnsManagementBody = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagement',\n  overridesResolver: (props, styles) => styles.columnsManagement\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0, 3, 1.5),\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400,\n  alignItems: 'flex-start'\n}));\nconst GridColumnsManagementHeader = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementHeader',\n  overridesResolver: (props, styles) => styles.columnsManagementHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1.5, 3)\n}));\nconst GridColumnsManagementFooter = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementFooter',\n  overridesResolver: (props, styles) => styles.columnsManagementFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 1, 0.5, 3),\n  display: 'flex',\n  justifyContent: 'space-between',\n  borderTop: `1px solid ${theme.palette.divider}`\n}));\nconst GridColumnsManagementEmptyText = styled('div')(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 0),\n  color: theme.palette.grey[500]\n}));\nexport { GridColumnsManagement };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerContainer', 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFooterContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterContainer',\n  overridesResolver: (props, styles) => styles.footerContainer\n})({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  minHeight: 52,\n  borderTop: '1px solid'\n});\nconst GridFooterContainer = /*#__PURE__*/React.forwardRef(function GridFooterContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridFooterContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooterContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooterContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridOverlayRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Overlay',\n  overridesResolver: (_, styles) => styles.overlay\n})({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignSelf: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'var(--unstable_DataGrid-overlayBackground)'\n});\nconst GridOverlay = /*#__PURE__*/React.forwardRef(function GridOverlay(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridOverlayRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { alpha, styled, darken, lighten, decomposeColor, recomposeColor } from '@mui/material/styles';\nimport { gridClasses as c } from '../../constants/gridClasses';\nfunction getBorderColor(theme) {\n  if (theme.vars) {\n    return theme.vars.palette.TableCell.border;\n  }\n  if (theme.palette.mode === 'light') {\n    return lighten(alpha(theme.palette.divider, 1), 0.88);\n  }\n  return darken(alpha(theme.palette.divider, 1), 0.68);\n}\nconst columnHeadersStyles = {\n  [`.${c.columnSeparator}, .${c['columnSeparator--resizing']}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  }\n};\nconst columnHeaderStyles = {\n  [`& .${c.iconButtonContainer}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  },\n  [`& .${c.menuIcon}`]: {\n    width: 'auto',\n    visibility: 'visible'\n  }\n};\nexport const GridRootStyles = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [{\n    [`&.${c.autoHeight}`]: styles.autoHeight\n  }, {\n    [`&.${c.aggregationColumnHeader}`]: styles.aggregationColumnHeader\n  }, {\n    [`&.${c['aggregationColumnHeader--alignLeft']}`]: styles['aggregationColumnHeader--alignLeft']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignCenter']}`]: styles['aggregationColumnHeader--alignCenter']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignRight']}`]: styles['aggregationColumnHeader--alignRight']\n  }, {\n    [`&.${c.aggregationColumnHeaderLabel}`]: styles.aggregationColumnHeaderLabel\n  }, {\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: styles['root--disableUserSelection']\n  }, {\n    [`&.${c.autosizing}`]: styles.autosizing\n  }, {\n    [`& .${c.editBooleanCell}`]: styles.editBooleanCell\n  }, {\n    [`& .${c.cell}`]: styles.cell\n  }, {\n    [`& .${c['cell--editing']}`]: styles['cell--editing']\n  }, {\n    [`& .${c['cell--textCenter']}`]: styles['cell--textCenter']\n  }, {\n    [`& .${c['cell--textLeft']}`]: styles['cell--textLeft']\n  }, {\n    [`& .${c['cell--textRight']}`]: styles['cell--textRight']\n  }, {\n    [`& .${c['cell--rangeTop']}`]: styles['cell--rangeTop']\n  }, {\n    [`& .${c['cell--rangeBottom']}`]: styles['cell--rangeBottom']\n  }, {\n    [`& .${c['cell--rangeLeft']}`]: styles['cell--rangeLeft']\n  }, {\n    [`& .${c['cell--rangeRight']}`]: styles['cell--rangeRight']\n  }, {\n    [`& .${c['cell--withRightBorder']}`]: styles['cell--withRightBorder']\n  }, {\n    [`& .${c.cellCheckbox}`]: styles.cellCheckbox\n  }, {\n    [`& .${c.cellSkeleton}`]: styles.cellSkeleton\n  }, {\n    [`& .${c.checkboxInput}`]: styles.checkboxInput\n  }, {\n    [`& .${c['columnHeader--alignCenter']}`]: styles['columnHeader--alignCenter']\n  }, {\n    [`& .${c['columnHeader--alignLeft']}`]: styles['columnHeader--alignLeft']\n  }, {\n    [`& .${c['columnHeader--alignRight']}`]: styles['columnHeader--alignRight']\n  }, {\n    [`& .${c['columnHeader--dragging']}`]: styles['columnHeader--dragging']\n  }, {\n    [`& .${c['columnHeader--moving']}`]: styles['columnHeader--moving']\n  }, {\n    [`& .${c['columnHeader--numeric']}`]: styles['columnHeader--numeric']\n  }, {\n    [`& .${c['columnHeader--sortable']}`]: styles['columnHeader--sortable']\n  }, {\n    [`& .${c['columnHeader--sorted']}`]: styles['columnHeader--sorted']\n  }, {\n    [`& .${c['columnHeader--withRightBorder']}`]: styles['columnHeader--withRightBorder']\n  }, {\n    [`& .${c.columnHeader}`]: styles.columnHeader\n  }, {\n    [`& .${c.headerFilterRow}`]: styles.headerFilterRow\n  }, {\n    [`& .${c.columnHeaderCheckbox}`]: styles.columnHeaderCheckbox\n  }, {\n    [`& .${c.columnHeaderDraggableContainer}`]: styles.columnHeaderDraggableContainer\n  }, {\n    [`& .${c.columnHeaderTitleContainer}`]: styles.columnHeaderTitleContainer\n  }, {\n    [`& .${c['columnSeparator--resizable']}`]: styles['columnSeparator--resizable']\n  }, {\n    [`& .${c['columnSeparator--resizing']}`]: styles['columnSeparator--resizing']\n  }, {\n    [`& .${c.columnSeparator}`]: styles.columnSeparator\n  }, {\n    [`& .${c.filterIcon}`]: styles.filterIcon\n  }, {\n    [`& .${c.iconSeparator}`]: styles.iconSeparator\n  }, {\n    [`& .${c.menuIcon}`]: styles.menuIcon\n  }, {\n    [`& .${c.menuIconButton}`]: styles.menuIconButton\n  }, {\n    [`& .${c.menuOpen}`]: styles.menuOpen\n  }, {\n    [`& .${c.menuList}`]: styles.menuList\n  }, {\n    [`& .${c['row--editable']}`]: styles['row--editable']\n  }, {\n    [`& .${c['row--editing']}`]: styles['row--editing']\n  }, {\n    [`& .${c['row--dragging']}`]: styles['row--dragging']\n  }, {\n    [`& .${c.row}`]: styles.row\n  }, {\n    [`& .${c.rowReorderCellPlaceholder}`]: styles.rowReorderCellPlaceholder\n  }, {\n    [`& .${c.rowReorderCell}`]: styles.rowReorderCell\n  }, {\n    [`& .${c['rowReorderCell--draggable']}`]: styles['rowReorderCell--draggable']\n  }, {\n    [`& .${c.sortIcon}`]: styles.sortIcon\n  }, {\n    [`& .${c.withBorderColor}`]: styles.withBorderColor\n  }, {\n    [`& .${c.treeDataGroupingCell}`]: styles.treeDataGroupingCell\n  }, {\n    [`& .${c.treeDataGroupingCellToggle}`]: styles.treeDataGroupingCellToggle\n  }, {\n    [`& .${c.detailPanelToggleCell}`]: styles.detailPanelToggleCell\n  }, {\n    [`& .${c['detailPanelToggleCell--expanded']}`]: styles['detailPanelToggleCell--expanded']\n  }, styles.root]\n})(({\n  theme: t\n}) => {\n  const borderColor = getBorderColor(t);\n  const radius = t.shape.borderRadius;\n  const containerBackground = t.vars ? t.vars.palette.background.default : t.mixins.MuiDataGrid?.containerBackground ?? t.palette.background.default;\n  const pinnedBackground = t.mixins.MuiDataGrid?.pinnedBackground ?? containerBackground;\n  const overlayBackground = t.vars ? `rgba(${t.vars.palette.background.defaultChannel} / ${t.vars.palette.action.disabledOpacity})` : alpha(t.palette.background.default, t.palette.action.disabledOpacity);\n  const hoverOpacity = (t.vars || t).palette.action.hoverOpacity;\n  const hoverColor = (t.vars || t).palette.action.hover;\n  const selectedOpacity = (t.vars || t).palette.action.selectedOpacity;\n  const selectedBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / ${selectedOpacity})` : alpha(t.palette.primary.main, selectedOpacity);\n  const selectedHoverBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / calc(\n                ${t.vars.palette.action.selectedOpacity} + \n                ${t.vars.palette.action.hoverOpacity}\n              ))` : alpha(t.palette.primary.main, t.palette.action.selectedOpacity + t.palette.action.hoverOpacity);\n  const pinnedHoverBackground = t.vars ? hoverColor : blend(pinnedBackground, hoverColor, hoverOpacity);\n  const pinnedSelectedBackground = t.vars ? selectedBackground : blend(pinnedBackground, selectedBackground, selectedOpacity);\n  const pinnedSelectedHoverBackground = t.vars ? hoverColor : blend(pinnedSelectedBackground, hoverColor, hoverOpacity);\n  const selectedStyles = {\n    backgroundColor: selectedBackground,\n    '&:hover': {\n      backgroundColor: selectedHoverBackground,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: selectedBackground\n      }\n    }\n  };\n  const gridStyle = _extends({\n    '--unstable_DataGrid-radius': typeof radius === 'number' ? `${radius}px` : radius,\n    '--unstable_DataGrid-headWeight': t.typography.fontWeightMedium,\n    '--unstable_DataGrid-overlayBackground': overlayBackground,\n    '--DataGrid-containerBackground': containerBackground,\n    '--DataGrid-pinnedBackground': pinnedBackground,\n    '--DataGrid-rowBorderColor': borderColor,\n    '--DataGrid-cellOffsetMultiplier': 2,\n    '--DataGrid-width': '0px',\n    '--DataGrid-hasScrollX': '0',\n    '--DataGrid-hasScrollY': '0',\n    '--DataGrid-scrollbarSize': '10px',\n    '--DataGrid-rowWidth': '0px',\n    '--DataGrid-columnsTotalWidth': '0px',\n    '--DataGrid-leftPinnedWidth': '0px',\n    '--DataGrid-rightPinnedWidth': '0px',\n    '--DataGrid-headerHeight': '0px',\n    '--DataGrid-headersTotalHeight': '0px',\n    '--DataGrid-topContainerHeight': '0px',\n    '--DataGrid-bottomContainerHeight': '0px',\n    flex: 1,\n    boxSizing: 'border-box',\n    position: 'relative',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderColor,\n    borderRadius: 'var(--unstable_DataGrid-radius)',\n    color: (t.vars || t).palette.text.primary\n  }, t.typography.body2, {\n    outline: 'none',\n    height: '100%',\n    display: 'flex',\n    minWidth: 0,\n    // See https://github.com/mui/mui-x/issues/8547\n    minHeight: 0,\n    flexDirection: 'column',\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    // The selector we really want here is `:first-child`, but emotion thinks it knows better than use what we\n    // want and prints a warning to the console if we use it, about :first-child being \"unsafe\" in an SSR context.\n    // https://github.com/emotion-js/emotion/issues/1105\n    // Using `:first-of-type instead` is ironically less \"safe\" because if all our elements aren't `div`, this style\n    // will fail to apply.\n    [`.${c.main} > *:first-of-type`]: {\n      borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n      borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n    },\n    [`&.${c.autoHeight}`]: {\n      height: 'auto'\n    },\n    [`&.${c.autosizing}`]: {\n      [`& .${c.columnHeaderTitleContainerContent} > *`]: {\n        overflow: 'visible !important'\n      },\n      '@media (hover: hover)': {\n        [`& .${c.iconButtonContainer}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        },\n        [`& .${c.menuIcon}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        }\n      },\n      [`& .${c.cell}`]: {\n        overflow: 'visible !important',\n        whiteSpace: 'nowrap',\n        minWidth: 'max-content !important',\n        maxWidth: 'max-content !important'\n      },\n      [`& .${c.groupingCriteriaCell}`]: {\n        width: 'unset'\n      },\n      [`& .${c.treeDataGroupingCell}`]: {\n        width: 'unset'\n      }\n    },\n    [`& .${c.columnHeader}, & .${c.cell}`]: {\n      WebkitTapHighlightColor: 'transparent',\n      lineHeight: null,\n      padding: '0 10px',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.columnHeader}:focus-within, & .${c.cell}:focus-within`]: {\n      outline: `solid ${t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / 0.5)` : alpha(t.palette.primary.main, 0.5)} 1px`,\n      outlineWidth: 1,\n      outlineOffset: -1\n    },\n    [`& .${c.columnHeader}:focus, & .${c.cell}:focus`]: {\n      outline: `solid ${t.palette.primary.main} 1px`\n    },\n    [`& .${c.columnHeaderCheckbox}, & .${c.cellCheckbox}`]: {\n      padding: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeader}`]: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['columnHeader--last']}`]: {\n      overflow: 'hidden'\n    },\n    [`& .${c['columnHeader--sorted']} .${c.iconButtonContainer}, & .${c['columnHeader--filtered']} .${c.iconButtonContainer}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}) .${c.sortIcon}`]: {\n      opacity: 0,\n      transition: t.transitions.create(['opacity'], {\n        duration: t.transitions.duration.shorter\n      })\n    },\n    [`& .${c.columnHeaderTitleContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      minWidth: 0,\n      flex: 1,\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      // to anchor the aggregation label\n      position: 'relative'\n    },\n    [`& .${c.columnHeaderTitleContainerContent}`]: {\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['columnHeader--filledGroup']} .${c.columnHeaderTitleContainer}`]: {\n      borderBottomWidth: '1px',\n      borderBottomStyle: 'solid',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.sortIcon}, & .${c.filterIcon}`]: {\n      fontSize: 'inherit'\n    },\n    [`& .${c['columnHeader--sortable']}`]: {\n      cursor: 'pointer'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.columnHeaderTitleContainer}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.columnHeaderDraggableContainer}, & .${c['columnHeader--alignRight']} .${c.columnHeaderTitleContainer}`]: {\n      flexDirection: 'row-reverse'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.menuIcon}, & .${c['columnHeader--alignRight']} .${c.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -6\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.menuIcon}, & .${c['columnHeader--alignRight']} .${c.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -10\n    },\n    [`& .${c['columnHeader--moving']}`]: {\n      backgroundColor: (t.vars || t).palette.action.hover\n    },\n    [`& .${c['columnHeader--pinnedLeft']}, & .${c['columnHeader--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 4,\n      // Should be above the column separator\n      background: 'var(--DataGrid-pinnedBackground)'\n    },\n    [`& .${c.columnSeparator}`]: {\n      visibility: 'hidden',\n      position: 'absolute',\n      zIndex: 3,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      color: borderColor\n    },\n    [`& .${c.columnHeaders}`]: {\n      width: 'var(--DataGrid-rowWidth)'\n    },\n    '@media (hover: hover)': {\n      [`& .${c.columnHeaders}:hover`]: columnHeadersStyles,\n      [`& .${c.columnHeader}:hover`]: columnHeaderStyles,\n      [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}):hover .${c.sortIcon}`]: {\n        opacity: 0.5\n      }\n    },\n    '@media (hover: none)': {\n      [`& .${c.columnHeaders}`]: columnHeadersStyles,\n      [`& .${c.columnHeader}`]: columnHeaderStyles\n    },\n    [`& .${c['columnSeparator--sideLeft']}`]: {\n      left: -12\n    },\n    [`& .${c['columnSeparator--sideRight']}`]: {\n      right: -12\n    },\n    [`& .${c['columnSeparator--resizable']}`]: {\n      cursor: 'col-resize',\n      touchAction: 'none',\n      '&:hover': {\n        color: (t.vars || t).palette.text.primary,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          color: borderColor\n        }\n      },\n      [`&.${c['columnSeparator--resizing']}`]: {\n        color: (t.vars || t).palette.text.primary\n      },\n      '& svg': {\n        pointerEvents: 'none'\n      }\n    },\n    [`& .${c.iconSeparator}`]: {\n      color: 'inherit'\n    },\n    [`& .${c.menuIcon}`]: {\n      width: 0,\n      visibility: 'hidden',\n      fontSize: 20,\n      marginRight: -10,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`.${c.menuOpen}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.headerFilterRow}`]: {\n      [`& .${c.columnHeader}`]: {\n        boxSizing: 'border-box',\n        borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n      }\n    },\n    /* Row styles */\n    [`.${c.row}`]: {\n      display: 'flex',\n      width: 'var(--DataGrid-rowWidth)',\n      breakInside: 'avoid',\n      // Avoid the row to be broken in two different print pages.\n\n      '--rowBorderColor': 'var(--DataGrid-rowBorderColor)',\n      [`&.${c['row--firstVisible']}`]: {\n        '--rowBorderColor': 'transparent'\n      },\n      '&:hover': {\n        backgroundColor: (t.vars || t).palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['container--top']}, & .${c['container--bottom']}`]: {\n      '[role=row]': {\n        background: 'var(--DataGrid-containerBackground)'\n      }\n    },\n    /* Cell styles */\n    [`& .${c.cell}`]: {\n      height: 'var(--height)',\n      minWidth: 'var(--width)',\n      maxWidth: 'var(--width)',\n      lineHeight: 'calc(var(--height) - 1px)',\n      // -1px for the border\n\n      boxSizing: 'border-box',\n      borderTop: `1px solid var(--rowBorderColor)`,\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['virtualScrollerContent--overflowed']} .${c['row--lastVisible']} .${c.cell}`]: {\n      borderTopColor: 'transparent'\n    },\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: {\n      userSelect: 'none'\n    },\n    [`& .${c['row--dynamicHeight']} > .${c.cell}`]: {\n      whiteSpace: 'initial',\n      lineHeight: 'inherit'\n    },\n    [`& .${c.cellEmpty}`]: {\n      padding: 0,\n      height: 'unset'\n    },\n    [`& .${c.cell}.${c['cell--selectionMode']}`]: {\n      cursor: 'default'\n    },\n    [`& .${c.cell}.${c['cell--editing']}`]: {\n      padding: 1,\n      display: 'flex',\n      boxShadow: t.shadows[2],\n      backgroundColor: (t.vars || t).palette.background.paper,\n      '&:focus-within': {\n        outline: `solid ${(t.vars || t).palette.primary.main} 1px`,\n        outlineOffset: '-1px'\n      }\n    },\n    [`& .${c['row--editing']}`]: {\n      boxShadow: t.shadows[2]\n    },\n    [`& .${c['row--editing']} .${c.cell}`]: {\n      boxShadow: t.shadows[0],\n      backgroundColor: (t.vars || t).palette.background.paper\n    },\n    [`& .${c.editBooleanCell}`]: {\n      display: 'flex',\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c.booleanCell}[data-value=\"true\"]`]: {\n      color: (t.vars || t).palette.text.secondary\n    },\n    [`& .${c.booleanCell}[data-value=\"false\"]`]: {\n      color: (t.vars || t).palette.text.disabled\n    },\n    [`& .${c.actionsCell}`]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gridGap: t.spacing(1)\n    },\n    [`& .${c.rowReorderCell}`]: {\n      display: 'inline-flex',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['rowReorderCell--draggable']}`]: {\n      cursor: 'move',\n      opacity: 1\n    },\n    [`& .${c.rowReorderCellContainer}`]: {\n      padding: 0,\n      display: 'flex',\n      alignItems: 'stretch'\n    },\n    [`.${c.withBorderColor}`]: {\n      borderColor\n    },\n    [`& .${c['cell--withLeftBorder']}, & .${c['columnHeader--withLeftBorder']}`]: {\n      borderLeftColor: 'var(--DataGrid-rowBorderColor)',\n      borderLeftWidth: '1px',\n      borderLeftStyle: 'solid'\n    },\n    [`& .${c['cell--withRightBorder']}, & .${c['columnHeader--withRightBorder']}`]: {\n      borderRightColor: 'var(--DataGrid-rowBorderColor)',\n      borderRightWidth: '1px',\n      borderRightStyle: 'solid'\n    },\n    [`& .${c['cell--flex']}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      lineHeight: 'inherit'\n    },\n    [`& .${c['cell--textLeft']}`]: {\n      textAlign: 'left',\n      justifyContent: 'flex-start'\n    },\n    [`& .${c['cell--textRight']}`]: {\n      textAlign: 'right',\n      justifyContent: 'flex-end'\n    },\n    [`& .${c['cell--textCenter']}`]: {\n      textAlign: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 3,\n      background: 'var(--DataGrid-pinnedBackground)'\n    },\n    [`& .${c.virtualScrollerContent} .${c.row}`]: {\n      '&:hover': {\n        [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n          backgroundColor: pinnedHoverBackground\n        }\n      },\n      [`&.Mui-selected`]: {\n        [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n          backgroundColor: pinnedSelectedBackground\n        },\n        '&:hover': {\n          [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n            backgroundColor: pinnedSelectedHoverBackground\n          }\n        }\n      }\n    },\n    [`& .${c.cellOffsetLeft}`]: {\n      flex: '0 0 auto',\n      display: 'inline-block'\n    },\n    [`& .${c.cellSkeleton}`]: {\n      flex: '0 0 auto',\n      height: '100%',\n      display: 'inline-flex',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeaderDraggableContainer}`]: {\n      display: 'flex',\n      width: '100%',\n      height: '100%'\n    },\n    [`& .${c.rowReorderCellPlaceholder}`]: {\n      display: 'none'\n    },\n    [`& .${c['columnHeader--dragging']}, & .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity,\n      [`& .${c.rowReorderCellPlaceholder}`]: {\n        display: 'flex'\n      }\n    },\n    [`& .${c.treeDataGroupingCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.treeDataGroupingCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    [`& .${c.groupingCriteriaCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.groupingCriteriaCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    /* ScrollbarFiller styles */\n    [`.${c.scrollbarFiller}`]: {\n      minWidth: 'calc(var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize))',\n      alignSelf: 'stretch',\n      [`&.${c['scrollbarFiller--borderTop']}`]: {\n        borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n      },\n      [`&.${c['scrollbarFiller--pinnedRight']}`]: {\n        backgroundColor: 'var(--DataGrid-pinnedBackground)',\n        position: 'sticky',\n        right: 0\n      }\n    },\n    [`& .${c.filler}`]: {\n      flex: 1\n    },\n    [`& .${c['filler--borderTop']}`]: {\n      borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n    }\n  });\n  return gridStyle;\n});\n\n/**\n * Blend a transparent overlay color with a background color, resulting in a single\n * RGB color.\n */\nfunction blend(background, overlay, opacity, gamma = 1) {\n  const f = (b, o) => Math.round((b ** (1 / gamma) * (1 - opacity) + o ** (1 / gamma) * opacity) ** gamma);\n  const backgroundColor = decomposeColor(background);\n  const overlayColor = decomposeColor(overlay);\n  const rgb = [f(backgroundColor.values[0], overlayColor.values[0]), f(backgroundColor.values[1], overlayColor.values[1]), f(backgroundColor.values[2], overlayColor.values[2])];\n  return recomposeColor({\n    type: 'rgb',\n    values: rgb\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_capitalize as capitalize, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { GridRootStyles } from './GridRootStyles';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridDensitySelector } from '../../hooks/features/density/densitySelector';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    autoHeight,\n    density,\n    classes,\n    showCellVerticalBorder\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`, 'withBorderColor', showCellVerticalBorder && 'withVerticalBorder']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelAnchor = styled('div')({\n  position: 'absolute',\n  top: `var(--DataGrid-headersTotalHeight)`,\n  left: 0\n});\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const density = useGridSelector(apiRef, gridDensitySelector);\n  const rootElementRef = apiRef.current.rootElementRef;\n  const handleRef = useForkRef(rootElementRef, ref);\n  const ownerState = _extends({}, rootProps, {\n    density\n  });\n  const classes = useUtilityClasses(ownerState);\n\n  // Our implementation of <NoSsr />\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  if (!mountedState) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(className, classes.root),\n    ownerState: ownerState\n  }, other, {\n    children: [/*#__PURE__*/_jsx(GridPanelAnchor, {\n      role: \"presentation\",\n      \"data-id\": \"gridPanelAnchor\"\n    }), children]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"open\", \"target\", \"onClose\", \"children\", \"position\", \"className\", \"onExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect, HTMLElementType } from '@mui/utils';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['menu']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridMenuRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Menu',\n  overridesResolver: (_, styles) => styles.menu\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal,\n  [`& .${gridClasses.menuList}`]: {\n    outline: 0\n  }\n}));\nconst transformOrigin = {\n  'bottom-start': 'top left',\n  'bottom-end': 'top right'\n};\nfunction GridMenu(props) {\n  const {\n      open,\n      target,\n      onClose,\n      children,\n      position,\n      className,\n      onExited\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const savedFocusRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (open) {\n      savedFocusRef.current = document.activeElement instanceof HTMLElement ? document.activeElement : null;\n    } else {\n      savedFocusRef.current?.focus?.();\n      savedFocusRef.current = null;\n    }\n  }, [open]);\n  React.useEffect(() => {\n    // Emit menuOpen or menuClose events\n    const eventName = open ? 'menuOpen' : 'menuClose';\n    apiRef.current.publishEvent(eventName, {\n      target\n    });\n  }, [apiRef, open, target]);\n  const handleExited = popperOnExited => node => {\n    if (popperOnExited) {\n      popperOnExited();\n    }\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleClickAway = event => {\n    if (event.target && (target === event.target || target?.contains(event.target))) {\n      return;\n    }\n    onClose(event);\n  };\n  return /*#__PURE__*/_jsx(GridMenuRoot, _extends({\n    as: rootProps.slots.basePopper,\n    className: clsx(className, classes.root),\n    ownerState: rootProps,\n    open: open,\n    anchorEl: target,\n    transition: true,\n    placement: position\n  }, other, rootProps.slotProps?.basePopper, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(ClickAwayListener, {\n      onClickAway: handleClickAway,\n      mouseEvent: \"onMouseDown\",\n      children: /*#__PURE__*/_jsx(Grow, _extends({}, TransitionProps, {\n        style: {\n          transformOrigin: transformOrigin[placement]\n        },\n        onExited: handleExited(TransitionProps?.onExited),\n        children: /*#__PURE__*/_jsx(Paper, {\n          children: children\n        })\n      }))\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  target: HTMLElementType\n} : void 0;\nexport { GridMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEventCallback as useEventCallback, HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../GridMenu';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const colDef = apiRef.current.getColumn(field);\n  const hideMenu = useEventCallback(event => {\n    if (event) {\n      // Prevent triggering the sorting\n      event.stopPropagation();\n      if (target?.contains(event.target)) {\n        return;\n      }\n    }\n    apiRef.current.hideColumnMenu();\n  });\n  if (!target || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${colDef.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClose: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      colDef: colDef,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"displayOrder\"];\nimport * as React from 'react';\nimport Divider from '@mui/material/Divider';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nconst useGridColumnMenuSlots = props => {\n  const apiRef = useGridPrivateApiContext();\n  const {\n    defaultSlots,\n    defaultSlotProps,\n    slots = {},\n    slotProps = {},\n    hideMenu,\n    colDef,\n    addDividers = true\n  } = props;\n  const processedComponents = React.useMemo(() => _extends({}, defaultSlots, slots), [defaultSlots, slots]);\n  const processedSlotProps = React.useMemo(() => {\n    if (!slotProps || Object.keys(slotProps).length === 0) {\n      return defaultSlotProps;\n    }\n    const mergedProps = _extends({}, slotProps);\n    Object.entries(defaultSlotProps).forEach(([key, currentSlotProps]) => {\n      mergedProps[key] = _extends({}, currentSlotProps, slotProps[key] || {});\n    });\n    return mergedProps;\n  }, [defaultSlotProps, slotProps]);\n  const defaultItems = apiRef.current.unstable_applyPipeProcessors('columnMenu', [], props.colDef);\n  const userItems = React.useMemo(() => {\n    const defaultComponentKeys = Object.keys(defaultSlots);\n    return Object.keys(slots).filter(key => !defaultComponentKeys.includes(key));\n  }, [slots, defaultSlots]);\n  return React.useMemo(() => {\n    const uniqueItems = Array.from(new Set([...defaultItems, ...userItems]));\n    const cleansedItems = uniqueItems.filter(key => processedComponents[key] != null);\n    const sorted = cleansedItems.sort((a, b) => {\n      const leftItemProps = processedSlotProps[a];\n      const rightItemProps = processedSlotProps[b];\n      const leftDisplayOrder = Number.isFinite(leftItemProps?.displayOrder) ? leftItemProps.displayOrder : 100;\n      const rightDisplayOrder = Number.isFinite(rightItemProps?.displayOrder) ? rightItemProps.displayOrder : 100;\n      return leftDisplayOrder - rightDisplayOrder;\n    });\n    return sorted.reduce((acc, key, index) => {\n      let itemProps = {\n        colDef,\n        onClick: hideMenu\n      };\n      const processedComponentProps = processedSlotProps[key];\n      if (processedComponentProps) {\n        const customProps = _objectWithoutPropertiesLoose(processedComponentProps, _excluded);\n        itemProps = _extends({}, itemProps, customProps);\n      }\n      return addDividers && index !== sorted.length - 1 ? [...acc, [processedComponents[key], itemProps], [Divider, {}]] : [...acc, [processedComponents[key], itemProps]];\n    }, []);\n  }, [addDividers, colDef, defaultItems, hideMenu, processedComponents, processedSlotProps, userItems]);\n};\nexport { useGridColumnMenuSlots };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"defaultSlots\", \"defaultSlotProps\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridColumnMenuSlots } from '../../../hooks/features/columnMenu/useGridColumnMenuSlots';\nimport { GridColumnMenuContainer } from './GridColumnMenuContainer';\nimport { GridColumnMenuColumnsItem } from './menuItems/GridColumnMenuColumnsItem';\nimport { GridColumnMenuFilterItem } from './menuItems/GridColumnMenuFilterItem';\nimport { GridColumnMenuSortItem } from './menuItems/GridColumnMenuSortItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_COLUMN_MENU_SLOTS = {\n  columnMenuSortItem: GridColumnMenuSortItem,\n  columnMenuFilterItem: GridColumnMenuFilterItem,\n  columnMenuColumnsItem: GridColumnMenuColumnsItem\n};\nexport const GRID_COLUMN_MENU_SLOT_PROPS = {\n  columnMenuSortItem: {\n    displayOrder: 10\n  },\n  columnMenuFilterItem: {\n    displayOrder: 20\n  },\n  columnMenuColumnsItem: {\n    displayOrder: 30\n  }\n};\nconst GridGenericColumnMenu = /*#__PURE__*/React.forwardRef(function GridGenericColumnMenu(props, ref) {\n  const {\n      defaultSlots,\n      defaultSlotProps,\n      slots,\n      slotProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const orderedSlots = useGridColumnMenuSlots(_extends({}, other, {\n    defaultSlots,\n    defaultSlotProps,\n    slots,\n    slotProps\n  }));\n  return /*#__PURE__*/_jsx(GridColumnMenuContainer, _extends({\n    ref: ref\n  }, other, {\n    children: orderedSlots.map(([Component, otherProps], index) => /*#__PURE__*/_jsx(Component, _extends({}, otherProps), index))\n  }));\n});\nconst GridColumnMenu = /*#__PURE__*/React.forwardRef(function GridColumnMenu(props, ref) {\n  return /*#__PURE__*/_jsx(GridGenericColumnMenu, _extends({}, props, {\n    ref: ref,\n    defaultSlots: GRID_COLUMN_MENU_SLOTS,\n    defaultSlotProps: GRID_COLUMN_MENU_SLOT_PROPS\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { GridColumnMenu, GridGenericColumnMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"colDef\", \"id\", \"labelledby\", \"className\", \"children\", \"open\"];\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport MenuList from '@mui/material/MenuList';\nimport { styled } from '@mui/material/styles';\nimport { isHideMenuKey, isTabKey } from '../../../utils/keyboardUtils';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledMenuList = styled(MenuList)(() => ({\n  minWidth: 248\n}));\nconst GridColumnMenuContainer = /*#__PURE__*/React.forwardRef(function GridColumnMenuContainer(props, ref) {\n  const {\n      hideMenu,\n      id,\n      labelledby,\n      className,\n      children,\n      open\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const handleListKeyDown = React.useCallback(event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      hideMenu(event);\n    }\n  }, [hideMenu]);\n  return /*#__PURE__*/_jsx(StyledMenuList, _extends({\n    id: id,\n    ref: ref,\n    className: clsx(gridClasses.menuList, className),\n    \"aria-labelledby\": labelledby,\n    onKeyDown: handleListKeyDown,\n    autoFocus: open\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenuContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridColumnMenuHideItem } from './GridColumnMenuHideItem';\nimport { GridColumnMenuManageItem } from './GridColumnMenuManageItem';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuColumnsItem(props) {\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnMenuHideItem, _extends({}, props)), /*#__PURE__*/_jsx(GridColumnMenuManageItem, _extends({}, props))]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuColumnsItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuColumnsItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuFilterItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showFilter = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showFilterPanel(colDef.field);\n  }, [apiRef, colDef.field, onClick]);\n  if (rootProps.disableColumnFilter || !colDef.filterable) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showFilter,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuFilterIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuFilter')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuFilterItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuFilterItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { gridVisibleColumnDefinitionsSelector } from '../../../../hooks/features/columns';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuHideItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true);\n  // do not allow to hide the last column with menu\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n    apiRef.current.setColumnVisibility(colDef.field, false);\n    onClick(event);\n  }, [apiRef, colDef.field, onClick, disabled]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  if (colDef.hideable === false) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuHideIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuHideColumn')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuHideItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuHideItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { GridPreferencePanelsValue } from '../../../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuManageItem(props) {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event); // hide column menu\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showColumns,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuManageColumnsIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuManageColumns')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuManageItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuManageItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridSelector } from '../../../../hooks/utils/useGridSelector';\nimport { gridSortModelSelector } from '../../../../hooks/features/sorting/gridSortingSelector';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuSortItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const rootProps = useGridRootProps();\n  const sortDirection = React.useMemo(() => {\n    if (!colDef) {\n      return null;\n    }\n    const sortItem = sortModel.find(item => item.field === colDef.field);\n    return sortItem?.sort;\n  }, [colDef, sortModel]);\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const onSortMenuItemClick = React.useCallback(event => {\n    onClick(event);\n    const direction = event.currentTarget.getAttribute('data-value') || null;\n    apiRef.current.sortColumn(colDef.field, direction === sortDirection ? null : direction);\n  }, [apiRef, colDef, onClick, sortDirection]);\n  if (rootProps.disableColumnSorting || !colDef || !colDef.sortable || !sortingOrder.some(item => !!item)) {\n    return null;\n  }\n  const getLabel = key => {\n    const label = apiRef.current.getLocaleText(key);\n    return typeof label === 'function' ? label(colDef) : label;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [sortingOrder.includes('asc') && sortDirection !== 'asc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"asc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortAscendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortAsc')\n      })]\n    }) : null, sortingOrder.includes('desc') && sortDirection !== 'desc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"desc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortDescendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortDesc')\n      })]\n    }) : null, sortingOrder.includes(null) && sortDirection != null ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {}), /*#__PURE__*/_jsx(ListItemText, {\n        children: apiRef.current.getLocaleText('columnMenuUnsort')\n      })]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuSortItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuSortItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridPanelWrapper } from './GridPanelWrapper';\nimport { GridColumnsManagement } from '../columnsManagement';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnsPanel(props) {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsx(GridPanelWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(GridColumnsManagement, _extends({}, rootProps.slotProps?.columnsManagement))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridColumnsPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPanelClasses = generateUtilityClasses('MuiDataGrid', ['panel', 'paper']);\nconst GridPanelRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Panel',\n  overridesResolver: (props, styles) => styles.panel\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst GridPaperRoot = styled(Paper, {\n  name: 'MuiDataGrid',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  minWidth: 300,\n  maxHeight: 450,\n  display: 'flex',\n  maxWidth: `calc(100vw - ${theme.spacing(0.5)})`,\n  overflow: 'auto'\n}));\nconst GridPanel = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = gridPanelClasses;\n  const [isPlaced, setIsPlaced] = React.useState(false);\n  const handleClickAway = React.useCallback(() => {\n    apiRef.current.hidePreferences();\n  }, [apiRef]);\n  const handleKeyDown = React.useCallback(event => {\n    if (isEscapeKey(event.key)) {\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef]);\n  const modifiers = React.useMemo(() => [{\n    name: 'flip',\n    enabled: false\n  }, {\n    name: 'isPlaced',\n    enabled: true,\n    phase: 'main',\n    fn: () => {\n      setIsPlaced(true);\n    },\n    effect: () => () => {\n      setIsPlaced(false);\n    }\n  }], []);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  React.useEffect(() => {\n    const panelAnchor = apiRef.current.rootElementRef?.current?.querySelector('[data-id=\"gridPanelAnchor\"]');\n    if (panelAnchor) {\n      setAnchorEl(panelAnchor);\n    }\n  }, [apiRef]);\n  if (!anchorEl) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridPanelRoot, _extends({\n    ref: ref,\n    placement: \"bottom-start\",\n    className: clsx(className, classes.panel),\n    ownerState: rootProps,\n    anchorEl: anchorEl,\n    modifiers: modifiers\n  }, other, {\n    children: /*#__PURE__*/_jsx(ClickAwayListener, {\n      mouseEvent: \"onMouseUp\",\n      onClickAway: handleClickAway,\n      children: /*#__PURE__*/_jsx(GridPaperRoot, {\n        className: classes.paper,\n        ownerState: rootProps,\n        elevation: 8,\n        onKeyDown: handleKeyDown,\n        children: isPlaced && children\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Popper render function or node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  ownerState: PropTypes.object\n} : void 0;\nexport { GridPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelContent',\n  overridesResolver: (props, styles) => styles.panelContent\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400\n});\nfunction GridPanelContent(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelContentRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelFooter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelFooterRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelFooter',\n  overridesResolver: (props, styles) => styles.panelFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5),\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\nfunction GridPanelFooter(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelFooterRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport FocusTrap from '@mui/material/Unstable_TrapFocus';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelWrapper']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelWrapper',\n  overridesResolver: (props, styles) => styles.panelWrapper\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  '&:focus': {\n    outline: 0\n  }\n});\nconst isEnabled = () => true;\nconst GridPanelWrapper = /*#__PURE__*/React.forwardRef(function GridPanelWrapper(props, ref) {\n  const {\n      className,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(FocusTrap, _extends({\n    open: true,\n    disableEnforceFocus: true,\n    isEnabled: isEnabled\n  }, slotProps.TrapFocus, {\n    children: /*#__PURE__*/_jsx(GridPanelWrapperRoot, _extends({\n      ref: ref,\n      tabIndex: -1,\n      className: clsx(className, classes.root),\n      ownerState: rootProps\n    }, other))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanelWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridPanelWrapper };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"hasMultipleFilters\", \"deleteFilter\", \"applyFilterChanges\", \"showMultiFilterOperators\", \"disableMultiFilterOperator\", \"applyMultiFilterOperatorChanges\", \"focusElementRef\", \"logicOperators\", \"columnsSort\", \"filterColumns\", \"deleteIconProps\", \"logicOperatorInputProps\", \"operatorInputProps\", \"columnInputProps\", \"valueInputProps\", \"readOnly\", \"children\"],\n  _excluded2 = [\"InputComponentProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_capitalize as capitalize } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { gridFilterableColumnDefinitionsSelector, gridColumnLookupSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { gridFilterModelSelector } from '../../../hooks/features/filter/gridFilterSelector';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { GridLogicOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../../constants/gridClasses';\nimport { getValueFromValueOptions, getValueOptions } from './filterPanelUtils';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    logicOperatorInput: ['filterFormLogicOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  padding: theme.spacing(1)\n}));\nconst FilterFormDeleteIcon = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(({\n  theme\n}) => ({\n  flexShrink: 0,\n  justifyContent: 'flex-end',\n  marginRight: theme.spacing(0.5),\n  marginBottom: theme.spacing(0.2)\n}));\nconst FilterFormLogicOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLogicOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLogicOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 120\n});\nconst FilterFormValueInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\nconst getLogicOperatorLocaleKey = logicOperator => {\n  switch (logicOperator) {\n    case GridLogicOperator.And:\n      return 'filterPanelOperatorAnd';\n    case GridLogicOperator.Or:\n      return 'filterPanelOperatorOr';\n    default:\n      throw new Error('MUI X: Invalid `logicOperator` property in the `GridFilterPanel`.');\n  }\n};\nconst getColumnLabel = col => col.headerName || col.field;\nconst collator = new Intl.Collator();\nconst GridFilterForm = /*#__PURE__*/React.forwardRef(function GridFilterForm(props, ref) {\n  const {\n      item,\n      hasMultipleFilters,\n      deleteFilter,\n      applyFilterChanges,\n      showMultiFilterOperators,\n      disableMultiFilterOperator,\n      applyMultiFilterOperatorChanges,\n      focusElementRef,\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterColumns,\n      deleteIconProps = {},\n      logicOperatorInputProps = {},\n      operatorInputProps = {},\n      columnInputProps = {},\n      valueInputProps = {},\n      readOnly\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const columnLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const multiFilterOperator = filterModel.logicOperator ?? GridLogicOperator.And;\n  const hasLogicOperatorColumn = hasMultipleFilters && logicOperators.length > 0;\n  const baseFormControlProps = rootProps.slotProps?.baseFormControl || {};\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isBaseSelectNative = baseSelectProps.native ?? false;\n  const baseInputLabelProps = rootProps.slotProps?.baseInputLabel || {};\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const {\n      InputComponentProps\n    } = valueInputProps,\n    valueInputPropsOther = _objectWithoutPropertiesLoose(valueInputProps, _excluded2);\n  const {\n    filteredColumns,\n    selectedField\n  } = React.useMemo(() => {\n    let itemField = item.field;\n\n    // Yields a valid value if the current filter belongs to a column that is not filterable\n    const selectedNonFilterableColumn = columnLookup[item.field].filterable === false ? columnLookup[item.field] : null;\n    if (selectedNonFilterableColumn) {\n      return {\n        filteredColumns: [selectedNonFilterableColumn],\n        selectedField: itemField\n      };\n    }\n    if (filterColumns === undefined || typeof filterColumns !== 'function') {\n      return {\n        filteredColumns: filterableColumns,\n        selectedField: itemField\n      };\n    }\n    const filteredFields = filterColumns({\n      field: item.field,\n      columns: filterableColumns,\n      currentFilters: filterModel?.items || []\n    });\n    return {\n      filteredColumns: filterableColumns.filter(column => {\n        const isFieldIncluded = filteredFields.includes(column.field);\n        if (column.field === item.field && !isFieldIncluded) {\n          itemField = undefined;\n        }\n        return isFieldIncluded;\n      }),\n      selectedField: itemField\n    };\n  }, [filterColumns, filterModel?.items, filterableColumns, item.field, columnLookup]);\n  const sortedFilteredColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filteredColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      case 'desc':\n        return filteredColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      default:\n        return filteredColumns;\n    }\n  }, [filteredColumns, columnsSort]);\n  const currentColumn = item.field ? apiRef.current.getColumn(item.field) : null;\n  const currentOperator = React.useMemo(() => {\n    if (!item.operator || !currentColumn) {\n      return null;\n    }\n    return currentColumn.filterOperators?.find(operator => operator.value === item.operator);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const field = event.target.value;\n    const column = apiRef.current.getColumn(field);\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    }\n\n    // try to keep the same operator when column change\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operator) || column.filterOperators[0];\n\n    // Erase filter value if the input component or filtered column type is modified\n    const eraseFilterValue = !newOperator.InputComponent || newOperator.InputComponent !== currentOperator?.InputComponent || column.type !== currentColumn.type;\n    let filterValue = eraseFilterValue ? undefined : item.value;\n\n    // Check filter value against the new valueOptions\n    if (column.type === 'singleSelect' && filterValue !== undefined) {\n      const colDef = column;\n      const valueOptions = getValueOptions(colDef);\n      if (Array.isArray(filterValue)) {\n        filterValue = filterValue.filter(val => {\n          return (\n            // Only keep values that are in the new value options\n            getValueFromValueOptions(val, valueOptions, colDef?.getOptionValue) !== undefined\n          );\n        });\n      } else if (getValueFromValueOptions(item.value, valueOptions, colDef?.getOptionValue) === undefined) {\n        // Reset the filter value if it is not in the new value options\n        filterValue = undefined;\n      }\n    }\n    applyFilterChanges(_extends({}, item, {\n      field,\n      operator: newOperator.value,\n      value: filterValue\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operator = event.target.value;\n    const newOperator = currentColumn?.filterOperators.find(op => op.value === operator);\n    const eraseItemValue = !newOperator?.InputComponent || newOperator?.InputComponent !== currentOperator?.InputComponent;\n    applyFilterChanges(_extends({}, item, {\n      operator,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLogicOperator = React.useCallback(event => {\n    const logicOperator = event.target.value === GridLogicOperator.And.toString() ? GridLogicOperator.And : GridLogicOperator.Or;\n    applyMultiFilterOperatorChanges(logicOperator);\n  }, [applyMultiFilterOperatorChanges]);\n  const handleDeleteFilter = () => {\n    if (rootProps.disableMultipleColumnsFiltering) {\n      if (item.value === undefined) {\n        deleteFilter(item);\n      } else {\n        // TODO v6: simplify the behavior by always remove the filter form\n        applyFilterChanges(_extends({}, item, {\n          value: undefined\n        }));\n      }\n    } else {\n      deleteFilter(item);\n    }\n  };\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator?.InputComponent) {\n        valueRef?.current?.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, _extends({\n    ref: ref,\n    className: classes.root,\n    \"data-id\": item.id,\n    ownerState: rootProps\n  }, other, {\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\",\n        disabled: readOnly\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.filterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    })), /*#__PURE__*/_jsx(FilterFormLogicOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, logicOperatorInputProps, {\n      sx: _extends({\n        display: hasLogicOperatorColumn ? 'flex' : 'none',\n        visibility: showMultiFilterOperators ? 'visible' : 'hidden'\n      }, baseFormControlProps.sx || {}, logicOperatorInputProps.sx || {}),\n      className: clsx(classes.logicOperatorInput, baseFormControlProps.className, logicOperatorInputProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLogicOperator')\n        },\n        value: multiFilterOperator ?? '',\n        onChange: changeLogicOperator,\n        disabled: !!disableMultiFilterOperator || logicOperators.length === 1,\n        native: isBaseSelectNative\n      }, rootProps.slotProps?.baseSelect, {\n        children: logicOperators.map(logicOperator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: logicOperator.toString(),\n          value: logicOperator.toString()\n        }), apiRef.current.getLocaleText(getLogicOperatorLocaleKey(logicOperator))))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: selectedField ?? '',\n        onChange: changeColumn,\n        native: isBaseSelectNative,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: sortedFilteredColumns.map(col => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: col.field,\n          value: col.field\n        }), getColumnLabel(col)))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperator')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperator'),\n        id: operatorSelectId,\n        value: item.operator,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: currentColumn?.filterOperators?.map(operator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: operator.value,\n          value: operator.value\n        }), operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, valueInputPropsOther, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputPropsOther.className),\n      ownerState: rootProps,\n      children: currentOperator?.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef,\n        disabled: readOnly\n      }, currentOperator.InputComponentProps, InputComponentProps), item.field) : null\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback called when the operator, column field or value is changed.\n   * @param {GridFilterItem} item The updated [[GridFilterItem]].\n   */\n  applyFilterChanges: PropTypes.func.isRequired,\n  /**\n   * Callback called when the logic operator is changed.\n   * @param {GridLogicOperator} operator The new logic operator.\n   */\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Props passed to the column input component.\n   * @default {}\n   */\n  columnInputProps: PropTypes.any,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Callback called when the delete button is clicked.\n   * @param {GridFilterItem} item The deleted [[GridFilterItem]].\n   */\n  deleteFilter: PropTypes.func.isRequired,\n  /**\n   * Props passed to the delete icon.\n   * @default {}\n   */\n  deleteIconProps: PropTypes.any,\n  /**\n   * If `true`, disables the logic operator field but still renders it.\n   */\n  disableMultiFilterOperator: PropTypes.bool,\n  /**\n   * Allows to filter the columns displayed in the filter form.\n   * @param {FilterColumnsArgs} args The columns of the grid and name of field.\n   * @returns {GridColDef['field'][]} The filtered fields array.\n   */\n  filterColumns: PropTypes.func,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the el\n   */\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the logic operator field is rendered.\n   * The field will be invisible if `showMultiFilterOperators` is also `true`.\n   */\n  hasMultipleFilters: PropTypes.bool.isRequired,\n  /**\n   * The [[GridFilterItem]] representing this form.\n   */\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  /**\n   * Props passed to the logic operator input component.\n   * @default {}\n   */\n  logicOperatorInputProps: PropTypes.any,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * Props passed to the operator input component.\n   * @default {}\n   */\n  operatorInputProps: PropTypes.any,\n  /**\n   * `true` if the filter is disabled/read only.\n   * i.e. `colDef.fiterable = false` but passed in `filterModel`\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the logic operator field is visible.\n   */\n  showMultiFilterOperators: PropTypes.bool,\n  /**\n   * Props passed to the value input component.\n   * @default {}\n   */\n  valueInputProps: PropTypes.any\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterForm API](https://mui.com/x/api/data-grid/grid-filter-form/)\n */\nexport { GridFilterForm };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"apiRef\", \"focusElementRef\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"label\", \"variant\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst BooleanOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'center',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputBoolean(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      clearButton,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const [filterValueState, setFilterValueState] = React.useState(item.value || '');\n  const rootProps = useGridRootProps();\n  const labelId = useId();\n  const selectId = useId();\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    setFilterValueState(value);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    setFilterValueState(item.value || '');\n  }, [item.value]);\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(BooleanOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsxs(rootProps.slots.baseSelect, _extends({\n        labelId: labelId,\n        id: selectId,\n        label: label,\n        value: filterValueState,\n        onChange: onFilterChange,\n        variant: variant,\n        notched: variant === 'outlined' ? true : undefined,\n        native: isSelectNative,\n        displayEmpty: true,\n        inputProps: {\n          ref: focusElementRef,\n          tabIndex\n        }\n      }, others /* FIXME: typing error */, baseSelectProps, {\n        children: [/*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"\",\n          children: apiRef.current.getLocaleText('filterValueAny')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"true\",\n          children: apiRef.current.getLocaleText('filterValueTrue')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"false\",\n          children: apiRef.current.getLocaleText('filterValueFalse')\n        }))]\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputBoolean.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: refType,\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputBoolean };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"InputProps\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from '../../../hooks/utils/useTimeout';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction convertFilterItemValueToInputValue(itemValue, inputType) {\n  if (itemValue == null) {\n    return '';\n  }\n  const dateCopy = new Date(itemValue);\n  if (Number.isNaN(dateCopy.getTime())) {\n    return '';\n  }\n  if (inputType === 'date') {\n    return dateCopy.toISOString().substring(0, 10);\n  }\n  if (inputType === 'datetime-local') {\n    // The date picker expects the date to be in the local timezone.\n    // But .toISOString() converts it to UTC with zero offset.\n    // So we need to subtract the timezone offset.\n    dateCopy.setMinutes(dateCopy.getMinutes() - dateCopy.getTimezoneOffset());\n    return dateCopy.toISOString().substring(0, 19);\n  }\n  return dateCopy.toISOString().substring(0, 10);\n}\nfunction GridFilterInputDate(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      InputProps,\n      clearButton,\n      tabIndex,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(() => convertFilterItemValueToInputValue(item.value, type));\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    filterTimeout.clear();\n    const value = event.target.value;\n    setFilterValueState(value);\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const date = new Date(value);\n      applyValue(_extends({}, item, {\n        value: Number.isNaN(date.getTime()) ? undefined : date\n      }));\n      setIsApplying(false);\n    });\n  }, [applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const value = convertFilterItemValueToInputValue(item.value, type);\n    setFilterValueState(value);\n  }, [item.value, type]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    fullWidth: true,\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        max: type === 'datetime-local' ? '9999-12-31T23:59' : '9999-12-31',\n        tabIndex\n      }, InputProps?.inputProps)\n    })\n  }, other, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputDate.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputDate };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { getValueOptions, isSingleSelectColDef } from './filterPanelUtils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst filter = createFilterOptions();\nfunction GridFilterInputMultipleSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const id = useId();\n  const rootProps = useGridRootProps();\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const isOptionEqualToValue = React.useCallback((option, value) => getOptionValue(option) === getOptionValue(value), [getOptionValue]);\n  const resolvedValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn) || [];\n  }, [resolvedColumn]);\n\n  // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n  const filteredValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n    return item.value.reduce((acc, value) => {\n      const resolvedValue = resolvedValueOptions.find(v => getOptionValue(v) === value);\n      if (resolvedValue != null) {\n        acc.push(resolvedValue);\n      }\n      return acc;\n    }, []);\n  }, [getOptionValue, item.value, resolvedValueOptions]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: value.map(getOptionValue)\n    }));\n  }, [applyValue, item, getOptionValue]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    options: resolvedValueOptions,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filteredValues,\n    onChange: handleChange,\n    getOptionLabel: getOptionLabel,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: getOptionLabel(option)\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: \"singleSelect\"\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputMultipleValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const [filterValueState, setFilterValueState] = React.useState(item.value || []);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  React.useEffect(() => {\n    const itemValue = item.value ?? [];\n    setFilterValueState(itemValue.map(String));\n  }, [item.value]);\n  const handleChange = React.useCallback((event, value) => {\n    setFilterValueState(value.map(String));\n    applyValue(_extends({}, item, {\n      value: [...value]\n    }));\n  }, [applyValue, item]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    freeSolo: true,\n    options: [],\n    filterOptions: (options, params) => {\n      const {\n        inputValue\n      } = params;\n      return inputValue == null || inputValue === '' ? [] : [inputValue];\n    },\n    id: id,\n    value: filterValueState,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: option\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: type || 'text'\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['number', 'text'])\n} : void 0;\nexport { GridFilterInputMultipleValue };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"placeholder\", \"tabIndex\", \"label\", \"variant\", \"isFilterActive\", \"clearButton\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from './filterPanelUtils';\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst renderSingleSelectOptions = ({\n  column,\n  OptionComponent,\n  getOptionLabel,\n  getOptionValue,\n  isSelectNative,\n  baseSelectOptionProps\n}) => {\n  const iterableColumnValues = ['', ...(getValueOptions(column) || [])];\n  return iterableColumnValues.map(option => {\n    const value = getOptionValue(option);\n    let label = getOptionLabel(option);\n    if (label === '') {\n      label = ' '; // To force the height of the empty option\n    }\n    return /*#__PURE__*/_createElement(OptionComponent, _extends({}, baseSelectOptionProps, {\n      native: isSelectNative,\n      key: value,\n      value: value\n    }), label);\n  });\n};\nconst SingleSelectOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'flex-end',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      placeholder,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard',\n      clearButton\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterValue = item.value ?? '';\n  const id = useId();\n  const labelId = useId();\n  const rootProps = useGridRootProps();\n  const isSelectNative = rootProps.slotProps?.baseSelect?.native ?? false;\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const currentValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn);\n  }, [resolvedColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value;\n\n    // NativeSelect casts the value to a string.\n    value = getValueFromValueOptions(value, currentValueOptions, getOptionValue);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [currentValueOptions, getOptionValue, applyValue, item]);\n  if (!isSingleSelectColDef(resolvedColumn)) {\n    return null;\n  }\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(SingleSelectOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        htmlFor: id,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        id: id,\n        label: label,\n        labelId: labelId,\n        value: filterValue,\n        onChange: onFilterChange,\n        variant: variant,\n        type: type || 'text',\n        inputProps: {\n          tabIndex,\n          ref: focusElementRef,\n          placeholder: placeholder ?? apiRef.current.getLocaleText('filterPanelInputPlaceholder')\n        },\n        native: isSelectNative,\n        notched: variant === 'outlined' ? true : undefined\n      }, others /* FIXME: typing error */, rootProps.slotProps?.baseSelect, {\n        children: renderSingleSelectOptions({\n          column: resolvedColumn,\n          OptionComponent: rootProps.slots.baseSelectOption,\n          getOptionLabel,\n          getOptionValue,\n          isSelectNative,\n          baseSelectOptionProps: rootProps.slotProps?.baseSelectOption\n        })\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"tabIndex\", \"disabled\", \"isFilterActive\", \"clearButton\", \"InputProps\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from '../../../hooks/utils/useTimeout';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      tabIndex,\n      disabled,\n      clearButton,\n      InputProps,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(item.value ?? '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const {\n      value\n    } = event.target;\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const newItem = _extends({}, item, {\n        value,\n        fromInput: id\n      });\n      applyValue(newItem);\n      setIsApplying(false);\n    });\n  }, [id, applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const itemPlusTag = item;\n    if (itemPlusTag.fromInput !== id || item.value === undefined) {\n      setFilterValueState(String(item.value ?? ''));\n    }\n  }, [id, item]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: variant,\n    type: type || 'text',\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        tabIndex\n      }, InputProps?.inputProps)\n    }),\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, others, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputValue };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"logicOperators\", \"columnsSort\", \"filterFormProps\", \"getColumnForNewFilter\", \"children\", \"disableAddFilterButton\", \"disableRemoveAllButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridLogicOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridPanelContent } from '../GridPanelContent';\nimport { GridPanelFooter } from '../GridPanelFooter';\nimport { GridPanelWrapper } from '../GridPanelWrapper';\nimport { GridFilterForm } from './GridFilterForm';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { gridFilterModelSelector } from '../../../hooks/features/filter/gridFilterSelector';\nimport { gridFilterableColumnDefinitionsSelector, gridFilterableColumnLookupSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getGridFilter = col => ({\n  field: col.field,\n  operator: col.filterOperators[0].value,\n  id: Math.round(Math.random() * 1e5)\n});\nconst GridFilterPanel = /*#__PURE__*/React.forwardRef(function GridFilterPanel(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterableColumnsLookup = useGridSelector(apiRef, gridFilterableColumnLookupSelector);\n  const lastFilterRef = React.useRef(null);\n  const placeholderFilter = React.useRef(null);\n  const {\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterFormProps,\n      getColumnForNewFilter,\n      disableAddFilterButton = false,\n      disableRemoveAllButton = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const applyFilter = apiRef.current.upsertFilterItem;\n  const applyFilterLogicOperator = React.useCallback(operator => {\n    apiRef.current.setFilterLogicOperator(operator);\n  }, [apiRef]);\n  const getDefaultFilter = React.useCallback(() => {\n    let nextColumnWithOperator;\n    if (getColumnForNewFilter && typeof getColumnForNewFilter === 'function') {\n      // To allow override the column for default (first) filter\n      const nextFieldName = getColumnForNewFilter({\n        currentFilters: filterModel?.items || [],\n        columns: filterableColumns\n      });\n      if (nextFieldName === null) {\n        return null;\n      }\n      nextColumnWithOperator = filterableColumns.find(({\n        field\n      }) => field === nextFieldName);\n    } else {\n      nextColumnWithOperator = filterableColumns.find(colDef => colDef.filterOperators?.length);\n    }\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel?.items, filterableColumns, getColumnForNewFilter]);\n  const getNewFilter = React.useCallback(() => {\n    if (getColumnForNewFilter === undefined || typeof getColumnForNewFilter !== 'function') {\n      return getDefaultFilter();\n    }\n    const currentFilters = filterModel.items.length ? filterModel.items : [getDefaultFilter()].filter(Boolean);\n\n    // If no items are there in filterModel, we have to pass defaultFilter\n    const nextColumnFieldName = getColumnForNewFilter({\n      currentFilters: currentFilters,\n      columns: filterableColumns\n    });\n    if (nextColumnFieldName === null) {\n      return null;\n    }\n    const nextColumnWithOperator = filterableColumns.find(({\n      field\n    }) => field === nextColumnFieldName);\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel.items, filterableColumns, getColumnForNewFilter, getDefaultFilter]);\n  const items = React.useMemo(() => {\n    if (filterModel.items.length) {\n      return filterModel.items;\n    }\n    if (!placeholderFilter.current) {\n      placeholderFilter.current = getDefaultFilter();\n    }\n    return placeholderFilter.current ? [placeholderFilter.current] : [];\n  }, [filterModel.items, getDefaultFilter]);\n  const hasMultipleFilters = items.length > 1;\n  const {\n    readOnlyFilters,\n    validFilters\n  } = React.useMemo(() => items.reduce((acc, item) => {\n    if (filterableColumnsLookup[item.field]) {\n      acc.validFilters.push(item);\n    } else {\n      acc.readOnlyFilters.push(item);\n    }\n    return acc;\n  }, {\n    readOnlyFilters: [],\n    validFilters: []\n  }), [items, filterableColumnsLookup]);\n  const addNewFilter = React.useCallback(() => {\n    const newFilter = getNewFilter();\n    if (!newFilter) {\n      return;\n    }\n    apiRef.current.upsertFilterItems([...items, newFilter]);\n  }, [apiRef, getNewFilter, items]);\n  const deleteFilter = React.useCallback(item => {\n    const shouldCloseFilterPanel = validFilters.length === 1;\n    apiRef.current.deleteFilterItem(item);\n    if (shouldCloseFilterPanel) {\n      apiRef.current.hideFilterPanel();\n    }\n  }, [apiRef, validFilters.length]);\n  const handleRemoveAll = React.useCallback(() => {\n    if (validFilters.length === 1 && validFilters[0].value === undefined) {\n      apiRef.current.deleteFilterItem(validFilters[0]);\n      return apiRef.current.hideFilterPanel();\n    }\n    return apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: readOnlyFilters\n    }), 'removeAllFilterItems');\n  }, [apiRef, readOnlyFilters, filterModel, validFilters]);\n  React.useEffect(() => {\n    if (logicOperators.length > 0 && filterModel.logicOperator && !logicOperators.includes(filterModel.logicOperator)) {\n      applyFilterLogicOperator(logicOperators[0]);\n    }\n  }, [logicOperators, applyFilterLogicOperator, filterModel.logicOperator]);\n  React.useEffect(() => {\n    if (validFilters.length > 0) {\n      lastFilterRef.current.focus();\n    }\n  }, [validFilters.length]);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(GridPanelContent, {\n      children: [readOnlyFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: index > 0,\n        disableMultiFilterOperator: index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: null,\n        readOnly: true,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index : item.id)), validFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: readOnlyFilters.length + index > 0,\n        disableMultiFilterOperator: readOnlyFilters.length + index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: index === validFilters.length - 1 ? lastFilterRef : null,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index + readOnlyFilters.length : item.id))]\n    }), !rootProps.disableMultipleColumnsFiltering && !(disableAddFilterButton && disableRemoveAllButton) ? /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [!disableAddFilterButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: addNewFilter,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelAddIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelAddFilter')\n      })) : /*#__PURE__*/_jsx(\"span\", {}), !disableRemoveAllButton && validFilters.length > 0 ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: handleRemoveAll,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelRemoveAllIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelRemoveAll')\n      })) : null]\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * If `true`, the `Add filter` button will not be displayed.\n   * @default false\n   */\n  disableAddFilterButton: PropTypes.bool,\n  /**\n   * If `true`, the `Remove all` button will be disabled\n   * @default false\n   */\n  disableRemoveAllButton: PropTypes.bool,\n  /**\n   * Props passed to each filter form.\n   */\n  filterFormProps: PropTypes.shape({\n    columnInputProps: PropTypes.any,\n    columnsSort: PropTypes.oneOf(['asc', 'desc']),\n    deleteIconProps: PropTypes.any,\n    filterColumns: PropTypes.func,\n    logicOperatorInputProps: PropTypes.any,\n    operatorInputProps: PropTypes.any,\n    valueInputProps: PropTypes.any\n  }),\n  /**\n   * Function that returns the next filter item to be picked as default filter.\n   * @param {GetColumnForNewFilterArgs} args Currently configured filters and columns.\n   * @returns {GridColDef['field']} The field to be used for the next filter or `null` to prevent adding a filter.\n   */\n  getColumnForNewFilter: PropTypes.func,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterPanel API](https://mui.com/x/api/data-grid/grid-filter-panel/)\n */\nexport { GridFilterPanel, getGridFilter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function isSingleSelectColDef(colDef) {\n  return colDef?.type === 'singleSelect';\n}\nexport function getValueOptions(column, additionalParams) {\n  if (!column) {\n    return undefined;\n  }\n  return typeof column.valueOptions === 'function' ? column.valueOptions(_extends({\n    field: column.field\n  }, additionalParams)) : column.valueOptions;\n}\nexport function getValueFromValueOptions(value, valueOptions, getOptionValue) {\n  if (valueOptions === undefined) {\n    return undefined;\n  }\n  const result = valueOptions.find(option => {\n    const optionValue = getOptionValue(option);\n    return String(optionValue) === String(value);\n  });\n  return getOptionValue(result);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"options\"],\n  _excluded2 = [\"hideMenu\", \"options\"],\n  _excluded3 = [\"csvOptions\", \"printOptions\", \"excelOptions\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridToolbarExportContainer } from './GridToolbarExportContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridCsvExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsCsv(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportCSV')\n  }));\n}\nexport function GridPrintExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsPrint(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportPrint')\n  }));\n}\nconst GridToolbarExport = /*#__PURE__*/React.forwardRef(function GridToolbarExport(props, ref) {\n  const {\n      csvOptions = {},\n      printOptions = {},\n      excelOptions\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded3);\n  const apiRef = useGridApiContext();\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('exportMenu', [], {\n    excelOptions,\n    csvOptions,\n    printOptions\n  }).sort((a, b) => a.componentName > b.componentName ? 1 : -1);\n  if (preProcessedButtons.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridToolbarExportContainer, _extends({}, other, {\n    ref: ref,\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button.component, {\n      key: index\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExport.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  csvOptions: PropTypes.object,\n  printOptions: PropTypes.object,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarExport };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport MenuList from '@mui/material/MenuList';\nimport { isHideMenuKey, isTabKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridToolbarExportContainer = /*#__PURE__*/React.forwardRef(function GridToolbarExportContainer(props, ref) {\n  const {\n    children,\n    slotProps = {}\n  } = props;\n  const buttonProps = slotProps.button || {};\n  const tooltipProps = slotProps.tooltip || {};\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const exportButtonId = useId();\n  const exportMenuId = useId();\n  const [open, setOpen] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const handleRef = useForkRef(ref, buttonRef);\n  const handleMenuOpen = event => {\n    setOpen(prevOpen => !prevOpen);\n    buttonProps.onClick?.(event);\n  };\n  const handleMenuClose = () => setOpen(false);\n  const handleListKeyDown = event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      handleMenuClose();\n    }\n  };\n  if (children == null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('toolbarExportLabel'),\n      enterDelay: 1000\n    }, tooltipProps, rootProps.slotProps?.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        ref: handleRef,\n        size: \"small\",\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.exportIcon, {}),\n        \"aria-expanded\": open,\n        \"aria-label\": apiRef.current.getLocaleText('toolbarExportLabel'),\n        \"aria-haspopup\": \"menu\",\n        \"aria-controls\": open ? exportMenuId : undefined,\n        id: exportButtonId\n      }, buttonProps, {\n        onClick: handleMenuOpen\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('toolbarExport')\n      }))\n    })), /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      onClose: handleMenuClose,\n      position: \"bottom-start\",\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: exportMenuId,\n        className: gridClasses.menuList,\n        \"aria-labelledby\": exportButtonId,\n        onKeyDown: handleListKeyDown,\n        autoFocusItem: open,\n        children: React.Children.map(children, child => {\n          if (! /*#__PURE__*/React.isValidElement(child)) {\n            return child;\n          }\n          return /*#__PURE__*/React.cloneElement(child, {\n            hideMenu: handleMenuClose\n          });\n        })\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExportContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarExportContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass, gridClasses } from '../constants';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridApiEventHandler } from '../hooks/utils/useGridApiEventHandler';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridDimensionsSelector } from '../hooks/features/dimensions/gridDimensionsSelectors';\nimport { gridDensityFactorSelector } from '../hooks/features/density/densitySelector';\nimport { gridColumnsTotalWidthSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { useTimeout } from '../hooks/utils/useTimeout';\nimport { getTotalHeaderHeight } from '../hooks/features/columns/gridColumnsUtils';\nimport { fastMemo } from '../utils/fastMemo';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', `scrollArea--${scrollDirection}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['scrollArea--left']}`]: styles['scrollArea--left']\n  }, {\n    [`&.${gridClasses['scrollArea--right']}`]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [`&.${gridClasses['scrollArea--left']}`]: {\n    left: 0\n  },\n  [`&.${gridClasses['scrollArea--right']}`]: {\n    right: 0\n  }\n}));\nfunction GridScrollAreaRaw(props) {\n  const {\n    scrollDirection\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = useTimeout();\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const scrollPosition = React.useRef({\n    left: 0,\n    top: 0\n  });\n  const getCanScrollMore = () => {\n    if (scrollDirection === 'left') {\n      // Only render if the user has not reached yet the start of the list\n      return scrollPosition.current.left > 0;\n    }\n    if (scrollDirection === 'right') {\n      // Only render if the user has not reached yet the end of the list\n      const maxScrollLeft = columnsTotalWidth - dimensions.viewportInnerSize.width;\n      return scrollPosition.current.left < maxScrollLeft;\n    }\n    return false;\n  };\n  const [dragging, setDragging] = React.useState(false);\n  const [canScrollMore, setCanScrollMore] = React.useState(getCanScrollMore);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    scrollDirection\n  });\n  const classes = useUtilityClasses(ownerState);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, rootProps);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  const style = {\n    height: headerHeight,\n    top: totalHeaderHeight - headerHeight\n  };\n  if (scrollDirection === 'left') {\n    style.left = dimensions.leftPinnedWidth;\n  } else if (scrollDirection === 'right') {\n    style.right = dimensions.rightPinnedWidth + (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  }\n  const handleScrolling = newScrollPosition => {\n    scrollPosition.current = newScrollPosition;\n    setCanScrollMore(getCanScrollMore);\n  };\n  const handleDragOver = useEventCallback(event => {\n    let offset;\n\n    // Prevents showing the forbidden cursor\n    event.preventDefault();\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI X: Wrong drag direction');\n    }\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n\n    // Avoid freeze and inertia.\n    timeout.start(0, () => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    setDragging(true);\n  });\n  const handleColumnHeaderDragEnd = useEventCallback(() => {\n    setDragging(false);\n  });\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScrolling);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnHeaderDragStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnHeaderDragEnd);\n  if (!dragging || !canScrollMore) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    ownerState: ownerState,\n    onDragOver: handleDragOver,\n    style: style\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridScrollAreaRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  scrollDirection: PropTypes.oneOf(['left', 'right']).isRequired\n} : void 0;\nconst GridScrollArea = fastMemo(GridScrollAreaRaw);\nexport { GridScrollArea };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { fastMemo } from '../utils/fastMemo';\nimport { useGridPrivateApiContext } from '../hooks/utils/useGridPrivateApiContext';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { gridFilterActiveItemsLookupSelector } from '../hooks/features/filter/gridFilterSelector';\nimport { gridSortColumnLookupSelector } from '../hooks/features/sorting/gridSortingSelector';\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector, gridTabIndexColumnGroupHeaderSelector, gridFocusColumnGroupHeaderSelector } from '../hooks/features/focus/gridFocusStateSelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector, gridColumnGroupsHeaderStructureSelector } from '../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { gridColumnMenuSelector } from '../hooks/features/columnMenu/columnMenuSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridHeaders() {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const cellTabIndexState = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const columnGroupHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnGroupHeaderSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const columnGroupHeaderFocus = useGridSelector(apiRef, gridFocusColumnGroupHeaderSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const columnVisibility = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const columnGroupsHeaderStructure = useGridSelector(apiRef, gridColumnGroupsHeaderStructureSelector);\n  const hasOtherElementInTabSequence = !(columnGroupHeaderTabIndexState === null && columnHeaderTabIndexState === null && cellTabIndexState === null);\n  const columnsContainerRef = React.useRef(null);\n  apiRef.current.register('private', {\n    columnHeadersContainerRef: columnsContainerRef\n  });\n  return /*#__PURE__*/_jsx(rootProps.slots.columnHeaders, _extends({\n    ref: columnsContainerRef,\n    visibleColumns: visibleColumns,\n    filterColumnLookup: filterColumnLookup,\n    sortColumnLookup: sortColumnLookup,\n    columnHeaderTabIndexState: columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState: columnGroupHeaderTabIndexState,\n    columnHeaderFocus: columnHeaderFocus,\n    columnGroupHeaderFocus: columnGroupHeaderFocus,\n    headerGroupingMaxDepth: headerGroupingMaxDepth,\n    columnMenuState: columnMenuState,\n    columnVisibility: columnVisibility,\n    columnGroupsHeaderStructure: columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence: hasOtherElementInTabSequence\n  }, rootProps.slotProps?.columnHeaders));\n}\nconst MemoizedGridHeaders = fastMemo(GridHeaders);\nexport { MemoizedGridHeaders as GridHeaders };","import { gridVisibleColumnDefinitionsSelector } from '../features/columns/gridColumnsSelector';\nimport { useGridSelector } from './useGridSelector';\nimport { useGridRootProps } from './useGridRootProps';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../features/columnGrouping/gridColumnGroupsSelector';\nimport { gridPinnedRowsCountSelector, gridRowCountSelector } from '../features/rows/gridRowsSelector';\nimport { useGridPrivateApiContext } from './useGridPrivateApiContext';\nimport { isMultipleRowSelectionEnabled } from '../features/rowSelection/utils';\nexport const useGridAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  let role = 'grid';\n  if (rootProps.treeData) {\n    role = 'treegrid';\n  }\n  return {\n    role,\n    'aria-colcount': visibleColumns.length,\n    'aria-rowcount': headerGroupingMaxDepth + 1 + pinnedRowsCount + totalRowCount,\n    'aria-multiselectable': isMultipleRowSelectionEnabled(rootProps)\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridAriaAttributes } from '../../hooks/utils/useGridAriaAttributes';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Element = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Main',\n  overridesResolver: (props, styles) => styles.main\n})({\n  flexGrow: 1,\n  position: 'relative',\n  overflow: 'hidden'\n});\nexport const GridMainContainer = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const ariaAttributes = useGridAriaAttributes();\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsx(Element, _extends({\n    ref: ref,\n    ownerState: rootProps,\n    className: props.className,\n    tabIndex: -1\n  }, ariaAttributes, {\n    children: props.children\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { gridClasses, getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['topContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  top: 0,\n  '&::after': {\n    content: '\" \"',\n    position: 'absolute',\n    zIndex: 5,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    height: 1,\n    width: 'var(--DataGrid-rowWidth)',\n    backgroundColor: 'var(--DataGrid-rowBorderColor)'\n  }\n});\nexport function GridTopContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, props.className, gridClasses['container--top']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { gridClasses, getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['bottomContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  bottom: 'calc(var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize))'\n});\nexport function GridBottomContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, props.className, gridClasses['container--bottom']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (props, overflowedContent) => {\n  const {\n    classes\n  } = props;\n  const slots = {\n    root: ['virtualScrollerContent', overflowedContent && 'virtualScrollerContent--overflowed']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerContent',\n  overridesResolver: (props, styles) => styles.virtualScrollerContent\n})({});\nconst GridVirtualScrollerContent = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerContent(props, ref) {\n  const rootProps = useGridRootProps();\n  const overflowedContent = !rootProps.autoHeight && props.style?.minHeight === 'auto';\n  const classes = useUtilityClasses(rootProps, overflowedContent);\n  return /*#__PURE__*/_jsx(VirtualScrollerContentRoot, _extends({\n    ref: ref\n  }, props, {\n    ownerState: rootProps,\n    className: clsx(classes.root, props.className)\n  }));\n});\nexport { GridVirtualScrollerContent };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { gridDimensionsSelector } from '../../hooks/features/dimensions';\nimport { gridClasses } from '../../constants';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Filler = styled('div')({\n  display: 'flex',\n  flexDirection: 'row',\n  width: 'var(--DataGrid-rowWidth)',\n  boxSizing: 'border-box'\n});\nconst Pinned = styled('div')({\n  position: 'sticky',\n  height: '100%',\n  boxSizing: 'border-box',\n  borderTop: '1px solid var(--DataGrid-rowBorderColor)',\n  backgroundColor: 'var(--DataGrid-pinnedBackground)'\n});\nconst PinnedLeft = styled(Pinned)({\n  left: 0,\n  borderRight: '1px solid var(--DataGrid-rowBorderColor)'\n});\nconst PinnedRight = styled(Pinned)({\n  right: 0,\n  borderLeft: '1px solid var(--DataGrid-rowBorderColor)'\n});\nconst Main = styled('div')({\n  flexGrow: 1,\n  borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n});\nfunction GridVirtualScrollerFiller() {\n  const apiRef = useGridApiContext();\n  const {\n    viewportOuterSize,\n    minimumSize,\n    hasScrollX,\n    hasScrollY,\n    scrollbarSize,\n    leftPinnedWidth,\n    rightPinnedWidth\n  } = useGridSelector(apiRef, gridDimensionsSelector);\n  const scrollbarHeight = hasScrollX ? scrollbarSize : 0;\n  const expandedHeight = viewportOuterSize.height - minimumSize.height - scrollbarHeight;\n  const height = Math.max(scrollbarHeight, expandedHeight);\n  if (height === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(Filler, {\n    className: gridClasses.filler,\n    role: \"presentation\",\n    style: {\n      height\n    },\n    children: [leftPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedLeft, {\n      className: gridClasses['filler--pinnedLeft'],\n      style: {\n        width: leftPinnedWidth\n      }\n    }), /*#__PURE__*/_jsx(Main, {}), rightPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedRight, {\n      className: gridClasses['filler--pinnedRight'],\n      style: {\n        width: rightPinnedWidth + (hasScrollY ? scrollbarSize : 0)\n      }\n    })]\n  });\n}\nconst Memoized = fastMemo(GridVirtualScrollerFiller);\nexport { Memoized as GridVirtualScrollerFiller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridRowsMetaSelector } from '../../hooks/features/rows';\nimport { gridRenderContextSelector } from '../../hooks/features/virtualization';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerRenderZone']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerRenderZoneRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerRenderZone',\n  overridesResolver: (props, styles) => styles.virtualScrollerRenderZone\n})({\n  position: 'absolute',\n  display: 'flex',\n  // Prevents margin collapsing when using `getRowSpacing`\n  flexDirection: 'column'\n});\nconst GridVirtualScrollerRenderZone = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerRenderZone(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const offsetTop = useGridSelector(apiRef, () => {\n    const renderContext = gridRenderContextSelector(apiRef);\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    return rowsMeta.positions[renderContext.firstRowIndex] ?? 0;\n  });\n  return /*#__PURE__*/_jsx(VirtualScrollerRenderZoneRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps,\n    style: {\n      transform: `translate3d(0, ${offsetTop}px, 0)`\n    }\n  }, other));\n});\nexport { GridVirtualScrollerRenderZone };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useOnMount } from '../../hooks/utils/useOnMount';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { gridDimensionsSelector, useGridSelector } from '../../hooks';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, position) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollbar', `scrollbar--${position}`],\n    content: ['scrollbarContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scrollbar = styled('div')({\n  position: 'absolute',\n  display: 'inline-block',\n  zIndex: 6,\n  '& > div': {\n    display: 'inline-block'\n  },\n  // In macOS Safari and Gnome Web, scrollbars are overlaid and don't affect the layout. So we consider\n  // their size to be 0px throughout all the calculations, but the floating scrollbar container does need\n  // to appear and have a real size. We set it to 14px because it seems like an acceptable value and we\n  // don't have a method to find the required size for scrollbars on those platforms.\n  '--size': 'calc(max(var(--DataGrid-scrollbarSize), 14px))'\n});\nconst ScrollbarVertical = styled(Scrollbar)({\n  width: 'var(--size)',\n  height: 'calc(var(--DataGrid-hasScrollY) * (100% - var(--DataGrid-topContainerHeight) - var(--DataGrid-bottomContainerHeight) - var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize)))',\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    width: 'var(--size)'\n  },\n  top: 'var(--DataGrid-topContainerHeight)',\n  right: '0px'\n});\nconst ScrollbarHorizontal = styled(Scrollbar)({\n  width: '100%',\n  height: 'var(--size)',\n  overflowY: 'hidden',\n  overflowX: 'auto',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    height: 'var(--size)'\n  },\n  bottom: '0px'\n});\nconst Content = styled('div')({\n  display: 'inline-block'\n});\nconst GridVirtualScrollbar = /*#__PURE__*/React.forwardRef(function GridVirtualScrollbar(props, ref) {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const isLocked = React.useRef(false);\n  const lastPosition = React.useRef(0);\n  const scrollbarRef = React.useRef(null);\n  const contentRef = React.useRef(null);\n  const classes = useUtilityClasses(rootProps, props.position);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const propertyDimension = props.position === 'vertical' ? 'height' : 'width';\n  const propertyScroll = props.position === 'vertical' ? 'scrollTop' : 'scrollLeft';\n  const hasScroll = props.position === 'vertical' ? dimensions.hasScrollX : dimensions.hasScrollY;\n  const contentSize = dimensions.minimumSize[propertyDimension] + (hasScroll ? dimensions.scrollbarSize : 0);\n  const scrollbarSize = props.position === 'vertical' ? dimensions.viewportInnerSize.height : dimensions.viewportOuterSize.width;\n  const scrollbarInnerSize = scrollbarSize * (contentSize / dimensions.viewportOuterSize[propertyDimension]);\n  const onScrollerScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (scroller[propertyScroll] === lastPosition.current) {\n      return;\n    }\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scroller[propertyScroll] / contentSize;\n    scrollbar[propertyScroll] = value * scrollbarInnerSize;\n    lastPosition.current = scroller[propertyScroll];\n  });\n  const onScrollbarScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scrollbar[propertyScroll] / scrollbarInnerSize;\n    scroller[propertyScroll] = value * contentSize;\n  });\n  useOnMount(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    scroller.addEventListener('scroll', onScrollerScroll, {\n      capture: true\n    });\n    scrollbar.addEventListener('scroll', onScrollbarScroll, {\n      capture: true\n    });\n    return () => {\n      scroller.removeEventListener('scroll', onScrollerScroll, {\n        capture: true\n      });\n      scrollbar.removeEventListener('scroll', onScrollbarScroll, {\n        capture: true\n      });\n    };\n  });\n  React.useEffect(() => {\n    const content = contentRef.current;\n    content.style.setProperty(propertyDimension, `${scrollbarInnerSize}px`);\n  }, [scrollbarInnerSize, propertyDimension]);\n  const Container = props.position === 'vertical' ? ScrollbarVertical : ScrollbarHorizontal;\n  return /*#__PURE__*/_jsx(Container, {\n    ref: useForkRef(ref, scrollbarRef),\n    className: classes.root,\n    tabIndex: -1,\n    children: /*#__PURE__*/_jsx(Content, {\n      ref: contentRef,\n      className: classes.content\n    })\n  });\n});\nexport { GridVirtualScrollbar };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { GridScrollArea } from '../GridScrollArea';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridDimensionsSelector } from '../../hooks/features/dimensions';\nimport { useGridVirtualScroller } from '../../hooks/features/virtualization/useGridVirtualScroller';\nimport { GridOverlays } from '../base/GridOverlays';\nimport { GridHeaders } from '../GridHeaders';\nimport { GridMainContainer as Container } from './GridMainContainer';\nimport { GridTopContainer as TopContainer } from './GridTopContainer';\nimport { GridBottomContainer as BottomContainer } from './GridBottomContainer';\nimport { GridVirtualScrollerContent as Content } from './GridVirtualScrollerContent';\nimport { GridVirtualScrollerFiller as SpaceFiller } from './GridVirtualScrollerFiller';\nimport { GridVirtualScrollerRenderZone as RenderZone } from './GridVirtualScrollerRenderZone';\nimport { GridVirtualScrollbar as Scrollbar } from './GridVirtualScrollbar';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, dimensions) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['main', dimensions.rightPinnedWidth > 0 && 'main--hasPinnedRight'],\n    scroller: ['virtualScroller']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scroller = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScroller',\n  overridesResolver: (props, styles) => styles.virtualScroller\n})({\n  position: 'relative',\n  height: '100%',\n  overflow: 'scroll',\n  scrollbarWidth: 'none' /* Firefox */,\n  '&::-webkit-scrollbar': {\n    display: 'none' /* Safari and Chrome */\n  },\n  '@media print': {\n    overflow: 'hidden'\n  },\n  // See https://github.com/mui/mui-x/issues/10547\n  zIndex: 0\n});\nfunction GridVirtualScroller(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const classes = useUtilityClasses(rootProps, dimensions);\n  const virtualScroller = useGridVirtualScroller();\n  const {\n    getContainerProps,\n    getScrollerProps,\n    getContentProps,\n    getRenderZoneProps,\n    getScrollbarVerticalProps,\n    getScrollbarHorizontalProps,\n    getRows\n  } = virtualScroller;\n  const rows = getRows();\n  return /*#__PURE__*/_jsxs(Container, _extends({\n    className: classes.root\n  }, getContainerProps(), {\n    children: [/*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"left\"\n    }), /*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"right\"\n    }), /*#__PURE__*/_jsxs(Scroller, _extends({\n      className: classes.scroller\n    }, getScrollerProps(), {\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsxs(TopContainer, {\n        children: [/*#__PURE__*/_jsx(GridHeaders, {}), /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"top\",\n          virtualScroller: virtualScroller\n        })]\n      }), /*#__PURE__*/_jsx(GridOverlays, {}), /*#__PURE__*/_jsx(Content, _extends({}, getContentProps(), {\n        children: /*#__PURE__*/_jsxs(RenderZone, _extends({}, getRenderZoneProps(), {\n          children: [rows, /*#__PURE__*/_jsx(rootProps.slots.detailPanels, {\n            virtualScroller: virtualScroller\n          })]\n        }))\n      })), rows.length > 0 && /*#__PURE__*/_jsx(SpaceFiller, {}), /*#__PURE__*/_jsx(BottomContainer, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"bottom\",\n          virtualScroller: virtualScroller\n        })\n      })]\n    })), dimensions.hasScrollY && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"vertical\"\n    }, getScrollbarVerticalProps())), dimensions.hasScrollX && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"horizontal\"\n    }, getScrollbarHorizontalProps())), props.children]\n  }));\n}\nexport { GridVirtualScroller };","import { unstable_generateUtilityClasses as generateUtilityClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nexport function getDataGridUtilityClass(slot) {\n  return generateUtilityClass('MuiDataGrid', slot);\n}\nexport const gridClasses = generateUtilityClasses('MuiDataGrid', ['actionsCell', 'aggregationColumnHeader', 'aggregationColumnHeader--alignLeft', 'aggregationColumnHeader--alignCenter', 'aggregationColumnHeader--alignRight', 'aggregationColumnHeaderLabel', 'autoHeight', 'autosizing', 'booleanCell', 'cell--editable', 'cell--editing', 'cell--flex', 'cell--textCenter', 'cell--textLeft', 'cell--textRight', 'cell--rangeTop', 'cell--rangeBottom', 'cell--rangeLeft', 'cell--rangeRight', 'cell--pinnedLeft', 'cell--pinnedRight', 'cell--selectionMode', 'cell', 'cellCheckbox', 'cellEmpty', 'cellSkeleton', 'cellOffsetLeft', 'checkboxInput', 'columnHeader', 'columnHeader--alignCenter', 'columnHeader--alignLeft', 'columnHeader--alignRight', 'columnHeader--dragging', 'columnHeader--moving', 'columnHeader--numeric', 'columnHeader--sortable', 'columnHeader--sorted', 'columnHeader--filtered', 'columnHeader--pinnedLeft', 'columnHeader--pinnedRight', 'columnHeader--last', 'columnHeaderCheckbox', 'columnHeaderDraggableContainer', 'columnHeaderTitle', 'columnHeaderTitleContainer', 'columnHeaderTitleContainerContent', 'columnHeader--filledGroup', 'columnHeader--emptyGroup', 'columnHeaders', 'columnSeparator--resizable', 'columnSeparator--resizing', 'columnSeparator--sideLeft', 'columnSeparator--sideRight', 'columnSeparator', 'columnsManagement', 'columnsManagementRow', 'columnsManagementHeader', 'columnsManagementFooter', 'container--top', 'container--bottom', 'detailPanel', 'detailPanels', 'detailPanelToggleCell', 'detailPanelToggleCell--expanded', 'footerCell', 'panel', 'panelHeader', 'panelWrapper', 'panelContent', 'panelFooter', 'paper', 'editBooleanCell', 'editInputCell', 'filler', 'filler--borderTop', 'filler--pinnedLeft', 'filler--pinnedRight', 'filterForm', 'filterFormDeleteIcon', 'filterFormLogicOperatorInput', 'filterFormColumnInput', 'filterFormOperatorInput', 'filterFormValueInput', 'filterIcon', 'footerContainer', 'headerFilterRow', 'iconButtonContainer', 'iconSeparator', 'main', 'main--hasPinnedRight', 'menu', 'menuIcon', 'menuIconButton', 'menuOpen', 'menuList', 'overlay', 'overlayWrapper', 'overlayWrapperInner', 'root', 'root--densityStandard', 'root--densityComfortable', 'root--densityCompact', 'root--disableUserSelection', 'row', 'row--editable', 'row--editing', 'row--firstVisible', 'row--lastVisible', 'row--dragging', 'row--dynamicHeight', 'row--detailPanelExpanded', 'rowReorderCellPlaceholder', 'rowCount', 'rowReorderCellContainer', 'rowReorderCell', 'rowReorderCell--draggable', 'scrollArea--left', 'scrollArea--right', 'scrollArea', 'scrollbar', 'scrollbar--vertical', 'scrollbar--horizontal', 'scrollbarFiller', 'scrollbarFiller--header', 'scrollbarFiller--borderTop', 'scrollbarFiller--pinnedRight', 'selectedRowCount', 'sortIcon', 'toolbarContainer', 'toolbarFilterList', 'virtualScroller', 'virtualScrollerContent', 'virtualScrollerContent--overflowed', 'virtualScrollerRenderZone', 'pinnedColumns', 'withVerticalBorder', 'withBorderColor', 'cell--withRightBorder', 'cell--withLeftBorder', 'columnHeader--withRightBorder', 'columnHeader--withLeftBorder', 'treeDataGroupingCell', 'treeDataGroupingCellToggle', 'groupingCriteriaCell', 'groupingCriteriaCellToggle', 'pinnedRows', 'pinnedRows--top', 'pinnedRows--bottom', 'pinnedRowsRenderZone']);","// Can't import from pro package - hence duplication\nexport const GRID_DETAIL_PANEL_TOGGLE_FIELD = '__detail_panel_toggle__';","export const GRID_DEFAULT_LOCALE_TEXT = {\n  // Root\n  noRowsLabel: 'No rows',\n  noResultsOverlayLabel: 'No results found.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Density',\n  toolbarDensityLabel: 'Density',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Comfortable',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Columns',\n  toolbarColumnsLabel: 'Select columns',\n  // Filters toolbar button text\n  toolbarFilters: 'Filters',\n  toolbarFiltersLabel: 'Show filters',\n  toolbarFiltersTooltipHide: 'Hide filters',\n  toolbarFiltersTooltipShow: 'Show filters',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Search…',\n  toolbarQuickFilterLabel: 'Search',\n  toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Download as CSV',\n  toolbarExportPrint: 'Print',\n  toolbarExportExcel: 'Download as Excel',\n  // Columns management text\n  columnsManagementSearchTitle: 'Search',\n  columnsManagementNoColumns: 'No columns',\n  columnsManagementShowHideAllText: 'Show/Hide All',\n  columnsManagementReset: 'Reset',\n  // Filter panel text\n  filterPanelAddFilter: 'Add filter',\n  filterPanelRemoveAll: 'Remove all',\n  filterPanelDeleteIconLabel: 'Delete',\n  filterPanelLogicOperator: 'Logic operator',\n  filterPanelOperator: 'Operator',\n  filterPanelOperatorAnd: 'And',\n  filterPanelOperatorOr: 'Or',\n  filterPanelColumns: 'Columns',\n  filterPanelInputLabel: 'Value',\n  filterPanelInputPlaceholder: 'Filter value',\n  // Filter operators text\n  filterOperatorContains: 'contains',\n  filterOperatorEquals: 'equals',\n  filterOperatorStartsWith: 'starts with',\n  filterOperatorEndsWith: 'ends with',\n  filterOperatorIs: 'is',\n  filterOperatorNot: 'is not',\n  filterOperatorAfter: 'is after',\n  filterOperatorOnOrAfter: 'is on or after',\n  filterOperatorBefore: 'is before',\n  filterOperatorOnOrBefore: 'is on or before',\n  filterOperatorIsEmpty: 'is empty',\n  filterOperatorIsNotEmpty: 'is not empty',\n  filterOperatorIsAnyOf: 'is any of',\n  'filterOperator=': '=',\n  'filterOperator!=': '!=',\n  'filterOperator>': '>',\n  'filterOperator>=': '>=',\n  'filterOperator<': '<',\n  'filterOperator<=': '<=',\n  // Header filter operators text\n  headerFilterOperatorContains: 'Contains',\n  headerFilterOperatorEquals: 'Equals',\n  headerFilterOperatorStartsWith: 'Starts with',\n  headerFilterOperatorEndsWith: 'Ends with',\n  headerFilterOperatorIs: 'Is',\n  headerFilterOperatorNot: 'Is not',\n  headerFilterOperatorAfter: 'Is after',\n  headerFilterOperatorOnOrAfter: 'Is on or after',\n  headerFilterOperatorBefore: 'Is before',\n  headerFilterOperatorOnOrBefore: 'Is on or before',\n  headerFilterOperatorIsEmpty: 'Is empty',\n  headerFilterOperatorIsNotEmpty: 'Is not empty',\n  headerFilterOperatorIsAnyOf: 'Is any of',\n  'headerFilterOperator=': 'Equals',\n  'headerFilterOperator!=': 'Not equals',\n  'headerFilterOperator>': 'Greater than',\n  'headerFilterOperator>=': 'Greater than or equal to',\n  'headerFilterOperator<': 'Less than',\n  'headerFilterOperator<=': 'Less than or equal to',\n  // Filter values text\n  filterValueAny: 'any',\n  filterValueTrue: 'true',\n  filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Show columns',\n  columnMenuManageColumns: 'Manage columns',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Hide column',\n  columnMenuUnsort: 'Unsort',\n  columnMenuSortAsc: 'Sort by ASC',\n  columnMenuSortDesc: 'Sort by DESC',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  columnHeaderFiltersLabel: 'Show filters',\n  columnHeaderSortIconLabel: 'Sort',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rows selected` : `${count.toLocaleString()} row selected`,\n  // Total row amount footer text\n  footerTotalRows: 'Total Rows:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} of ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox selection',\n  checkboxSelectionSelectAllRows: 'Select all rows',\n  checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  checkboxSelectionSelectRow: 'Select row',\n  checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'yes',\n  booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'more',\n  // Column pinning text\n  pinToLeft: 'Pin to left',\n  pinToRight: 'Pin to right',\n  unpin: 'Unpin',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Group',\n  treeDataExpand: 'see children',\n  treeDataCollapse: 'hide children',\n  // Grouping columns\n  groupingColumnHeaderName: 'Group',\n  groupColumn: name => `Group by ${name}`,\n  unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Expand',\n  collapseDetailPanel: 'Collapse',\n  // Used core components translation keys\n  MuiTablePagination: {},\n  // Row reordering text\n  rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  aggregationMenuItemHeader: 'Aggregation',\n  aggregationFunctionLabelSum: 'sum',\n  aggregationFunctionLabelAvg: 'avg',\n  aggregationFunctionLabelMin: 'min',\n  aggregationFunctionLabelMax: 'max',\n  aggregationFunctionLabelSize: 'size'\n};","import * as React from 'react';\nimport { GridApiContext } from '../components/GridApiContext';\nimport { GridPrivateApiContext } from '../hooks/utils/useGridPrivateApiContext';\nimport { GridRootPropsContext } from './GridRootPropsContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridContextProvider({\n  privateApiRef,\n  props,\n  children\n}) {\n  const apiRef = React.useRef(privateApiRef.current.getPublicApi());\n  return /*#__PURE__*/_jsx(GridRootPropsContext.Provider, {\n    value: props,\n    children: /*#__PURE__*/_jsx(GridPrivateApiContext.Provider, {\n      value: privateApiRef,\n      children: /*#__PURE__*/_jsx(GridApiContext.Provider, {\n        value: apiRef,\n        children: children\n      })\n    })\n  });\n}","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\n/**\n * @category ColumnGrouping\n * @ignore - do not document.\n */\nexport const gridColumnGroupingSelector = state => state.columnGrouping;\nexport const gridColumnGroupsUnwrappedModelSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.unwrappedGroupingModel ?? {});\nexport const gridColumnGroupsLookupSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.lookup ?? {});\nexport const gridColumnGroupsHeaderStructureSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.headerStructure ?? []);\nexport const gridColumnGroupsHeaderMaxDepthSelector = createSelector(gridColumnGroupingSelector, columnGrouping => columnGrouping?.maxDepth ?? 0);","export const gridColumnMenuSelector = state => state.columnMenu;","export const DEFAULT_GRID_AUTOSIZE_OPTIONS = {\n  includeHeaders: true,\n  includeOutliers: false,\n  outliersFactor: 1.5,\n  expand: false\n};\n\n/**\n * The Resize API interface that is available in the grid `apiRef`.\n */","export let GridPinnedColumnPosition = /*#__PURE__*/function (GridPinnedColumnPosition) {\n  GridPinnedColumnPosition[\"LEFT\"] = \"left\";\n  GridPinnedColumnPosition[\"RIGHT\"] = \"right\";\n  return GridPinnedColumnPosition;\n}({});\nexport const EMPTY_PINNED_COLUMN_FIELDS = {\n  left: [],\n  right: []\n};","/**\n * Get the theme state\n * @category Core\n */\nexport const gridThemeSelector = state => state.theme;","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { EMPTY_PINNED_COLUMN_FIELDS } from './gridColumnsInterfaces';\nimport { gridThemeSelector } from '../../core/gridCoreSelector';\n\n/**\n * Get the columns state\n * @category Columns\n */\nexport const gridColumnsStateSelector = state => state.columns;\n\n/**\n * Get an array of column fields in the order rendered on screen.\n * @category Columns\n */\nexport const gridColumnFieldsSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.orderedFields);\n\n/**\n * Get the columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridColumnLookupSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.lookup);\n\n/**\n * Get an array of column definitions in the order rendered on screen..\n * @category Columns\n */\nexport const gridColumnDefinitionsSelector = createSelectorMemoized(gridColumnFieldsSelector, gridColumnLookupSelector, (allFields, lookup) => allFields.map(field => lookup[field]));\n\n/**\n * Get the column visibility model, containing the visibility status of each column.\n * If a column is not registered in the model, it is visible.\n * @category Visible Columns\n */\nexport const gridColumnVisibilityModelSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.columnVisibilityModel);\n\n/**\n * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Visible Columns\n */\nexport const gridVisibleColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector, (columns, columnVisibilityModel) => columns.filter(column => columnVisibilityModel[column.field] !== false));\n\n/**\n * Get the field of each visible column.\n * @category Visible Columns\n */\nexport const gridVisibleColumnFieldsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.map(column => column.field));\n\n/**\n * Get the visible pinned columns model.\n * @category Visible Columns\n */\nexport const gridPinnedColumnsSelector = state => state.pinnedColumns;\n\n/**\n * Get the visible pinned columns.\n * @category Visible Columns\n */\nexport const gridVisiblePinnedColumnDefinitionsSelector = createSelectorMemoized(gridColumnsStateSelector, gridPinnedColumnsSelector, gridVisibleColumnFieldsSelector, gridThemeSelector, (columnsState, model, visibleColumnFields, theme) => {\n  const visiblePinnedFields = filterVisibleColumns(model, visibleColumnFields, theme.direction === 'rtl');\n  const visiblePinnedColumns = {\n    left: visiblePinnedFields.left.map(field => columnsState.lookup[field]),\n    right: visiblePinnedFields.right.map(field => columnsState.lookup[field])\n  };\n  return visiblePinnedColumns;\n});\nfunction filterVisibleColumns(pinnedColumns, columns, invert) {\n  if (!Array.isArray(pinnedColumns.left) && !Array.isArray(pinnedColumns.right)) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  if (pinnedColumns.left?.length === 0 && pinnedColumns.right?.length === 0) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  const filter = (newPinnedColumns, remainingColumns) => {\n    if (!Array.isArray(newPinnedColumns)) {\n      return [];\n    }\n    return newPinnedColumns.filter(field => remainingColumns.includes(field));\n  };\n  const leftPinnedColumns = filter(pinnedColumns.left, columns);\n  const columnsWithoutLeftPinnedColumns = columns.filter(\n  // Filter out from the remaining columns those columns already pinned to the left\n  field => !leftPinnedColumns.includes(field));\n  const rightPinnedColumns = filter(pinnedColumns.right, columnsWithoutLeftPinnedColumns);\n  if (invert) {\n    return {\n      left: rightPinnedColumns,\n      right: leftPinnedColumns\n    };\n  }\n  return {\n    left: leftPinnedColumns,\n    right: rightPinnedColumns\n  };\n}\n\n/**\n * Get the left position in pixel of each visible columns relative to the left of the first column.\n * @category Visible Columns\n */\nexport const gridColumnPositionsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => {\n  const positions = [];\n  let currentPosition = 0;\n  for (let i = 0; i < visibleColumns.length; i += 1) {\n    positions.push(currentPosition);\n    currentPosition += visibleColumns[i].computedWidth;\n  }\n  return positions;\n});\n\n/**\n * Get the summed width of all the visible columns.\n * @category Visible Columns\n */\nexport const gridColumnsTotalWidthSelector = createSelector(gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n  if (colCount === 0) {\n    return 0;\n  }\n  return positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth;\n});\n\n/**\n * Get the filterable columns as an array.\n * @category Columns\n */\nexport const gridFilterableColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.filter(col => col.filterable));\n\n/**\n * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridFilterableColumnLookupSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.reduce((acc, col) => {\n  if (col.filterable) {\n    acc[col.field] = col;\n  }\n  return acc;\n}, {}));\n\n/**\n * Checks if some column has a colSpan field.\n * @category Columns\n * @ignore - Do not document\n */\nexport const gridHasColSpanSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.some(column => column.colSpan !== undefined));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { DEFAULT_GRID_COL_TYPE_KEY, GRID_STRING_COL_DEF, getGridDefaultColumnTypes } from '../../../colDef';\nimport { gridColumnsStateSelector, gridColumnVisibilityModelSelector } from './gridColumnsSelector';\nimport { clamp } from '../../../utils/utils';\nimport { gridDensityFactorSelector } from '../density/densitySelector';\nimport { gridHeaderFilteringEnabledSelector } from '../headerFiltering/gridHeaderFilteringSelectors';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../columnGrouping/gridColumnGroupsSelector';\nexport const COLUMNS_DIMENSION_PROPERTIES = ['maxWidth', 'minWidth', 'width', 'flex'];\nconst COLUMN_TYPES = getGridDefaultColumnTypes();\n\n/**\n * Computes width for flex columns.\n * Based on CSS Flexbox specification:\n * https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n */\nexport function computeFlexColumnsWidth({\n  initialFreeSpace,\n  totalFlexUnits,\n  flexColumns\n}) {\n  const uniqueFlexColumns = new Set(flexColumns.map(col => col.field));\n  const flexColumnsLookup = {\n    all: {},\n    frozenFields: [],\n    freeze: field => {\n      const value = flexColumnsLookup.all[field];\n      if (value && value.frozen !== true) {\n        flexColumnsLookup.all[field].frozen = true;\n        flexColumnsLookup.frozenFields.push(field);\n      }\n    }\n  };\n\n  // Step 5 of https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n  function loopOverFlexItems() {\n    // 5a: If all the flex items on the line are frozen, free space has been distributed.\n    if (flexColumnsLookup.frozenFields.length === uniqueFlexColumns.size) {\n      return;\n    }\n    const violationsLookup = {\n      min: {},\n      max: {}\n    };\n    let remainingFreeSpace = initialFreeSpace;\n    let flexUnits = totalFlexUnits;\n    let totalViolation = 0;\n\n    // 5b: Calculate the remaining free space\n    flexColumnsLookup.frozenFields.forEach(field => {\n      remainingFreeSpace -= flexColumnsLookup.all[field].computedWidth;\n      flexUnits -= flexColumnsLookup.all[field].flex;\n    });\n    for (let i = 0; i < flexColumns.length; i += 1) {\n      const column = flexColumns[i];\n      if (flexColumnsLookup.all[column.field] && flexColumnsLookup.all[column.field].frozen === true) {\n        continue;\n      }\n\n      // 5c: Distribute remaining free space proportional to the flex factors\n      const widthPerFlexUnit = remainingFreeSpace / flexUnits;\n      let computedWidth = widthPerFlexUnit * column.flex;\n\n      // 5d: Fix min/max violations\n      if (computedWidth < column.minWidth) {\n        totalViolation += column.minWidth - computedWidth;\n        computedWidth = column.minWidth;\n        violationsLookup.min[column.field] = true;\n      } else if (computedWidth > column.maxWidth) {\n        totalViolation += column.maxWidth - computedWidth;\n        computedWidth = column.maxWidth;\n        violationsLookup.max[column.field] = true;\n      }\n      flexColumnsLookup.all[column.field] = {\n        frozen: false,\n        computedWidth,\n        flex: column.flex\n      };\n    }\n\n    // 5e: Freeze over-flexed items\n    if (totalViolation < 0) {\n      // Freeze all the items with max violations\n      Object.keys(violationsLookup.max).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else if (totalViolation > 0) {\n      // Freeze all the items with min violations\n      Object.keys(violationsLookup.min).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else {\n      // Freeze all items\n      flexColumns.forEach(({\n        field\n      }) => {\n        flexColumnsLookup.freeze(field);\n      });\n    }\n\n    // 5f: Return to the start of this loop\n    loopOverFlexItems();\n  }\n  loopOverFlexItems();\n  return flexColumnsLookup.all;\n}\n\n/**\n * Compute the `computedWidth` (ie: the width the column should have during rendering) based on the `width` / `flex` / `minWidth` / `maxWidth` properties of `GridColDef`.\n * The columns already have been merged with there `type` default values for `minWidth`, `maxWidth` and `width`, thus the `!` for those properties below.\n * TODO: Unit test this function in depth and only keep basic cases for the whole grid testing.\n * TODO: Improve the `GridColDef` typing to reflect the fact that `minWidth` / `maxWidth` and `width` can't be null after the merge with the `type` default values.\n */\nexport const hydrateColumnsWidth = (rawState, dimensions) => {\n  const columnsLookup = {};\n  let totalFlexUnits = 0;\n  let widthAllocatedBeforeFlex = 0;\n  const flexColumns = [];\n\n  // For the non-flex columns, compute their width\n  // For the flex columns, compute there minimum width and how much width must be allocated during the flex allocation\n  rawState.orderedFields.forEach(columnField => {\n    const newColumn = _extends({}, rawState.lookup[columnField]);\n    if (rawState.columnVisibilityModel[columnField] === false) {\n      newColumn.computedWidth = 0;\n    } else {\n      let computedWidth;\n      if (newColumn.flex && newColumn.flex > 0) {\n        totalFlexUnits += newColumn.flex;\n        computedWidth = 0;\n        flexColumns.push(newColumn);\n      } else {\n        computedWidth = clamp(newColumn.width || GRID_STRING_COL_DEF.width, newColumn.minWidth || GRID_STRING_COL_DEF.minWidth, newColumn.maxWidth || GRID_STRING_COL_DEF.maxWidth);\n      }\n      widthAllocatedBeforeFlex += computedWidth;\n      newColumn.computedWidth = computedWidth;\n    }\n    columnsLookup[columnField] = newColumn;\n  });\n  const availableWidth = dimensions === undefined ? 0 : dimensions.viewportOuterSize.width - (dimensions.hasScrollY ? dimensions.scrollbarSize : 0);\n  const initialFreeSpace = Math.max(availableWidth - widthAllocatedBeforeFlex, 0);\n\n  // Allocate the remaining space to the flex columns\n  if (totalFlexUnits > 0 && availableWidth > 0) {\n    const computedColumnWidths = computeFlexColumnsWidth({\n      initialFreeSpace,\n      totalFlexUnits,\n      flexColumns\n    });\n    Object.keys(computedColumnWidths).forEach(field => {\n      columnsLookup[field].computedWidth = computedColumnWidths[field].computedWidth;\n    });\n  }\n  return _extends({}, rawState, {\n    lookup: columnsLookup\n  });\n};\n\n/**\n * Apply the order and the dimensions of the initial state.\n * The columns not registered in `orderedFields` will be placed after the imported columns.\n */\nexport const applyInitialState = (columnsState, initialState) => {\n  if (!initialState) {\n    return columnsState;\n  }\n  const {\n    orderedFields = [],\n    dimensions = {}\n  } = initialState;\n  const columnsWithUpdatedDimensions = Object.keys(dimensions);\n  if (columnsWithUpdatedDimensions.length === 0 && orderedFields.length === 0) {\n    return columnsState;\n  }\n  const orderedFieldsLookup = {};\n  const cleanOrderedFields = [];\n  for (let i = 0; i < orderedFields.length; i += 1) {\n    const field = orderedFields[i];\n\n    // Ignores the fields in the initialState that matches no field on the current column state\n    if (columnsState.lookup[field]) {\n      orderedFieldsLookup[field] = true;\n      cleanOrderedFields.push(field);\n    }\n  }\n  const newOrderedFields = cleanOrderedFields.length === 0 ? columnsState.orderedFields : [...cleanOrderedFields, ...columnsState.orderedFields.filter(field => !orderedFieldsLookup[field])];\n  const newColumnLookup = _extends({}, columnsState.lookup);\n  for (let i = 0; i < columnsWithUpdatedDimensions.length; i += 1) {\n    const field = columnsWithUpdatedDimensions[i];\n    const newColDef = _extends({}, newColumnLookup[field], {\n      hasBeenResized: true\n    });\n    Object.entries(dimensions[field]).forEach(([key, value]) => {\n      newColDef[key] = value === -1 ? Infinity : value;\n    });\n    newColumnLookup[field] = newColDef;\n  }\n  const newColumnsState = _extends({}, columnsState, {\n    orderedFields: newOrderedFields,\n    lookup: newColumnLookup\n  });\n  return newColumnsState;\n};\nfunction getDefaultColTypeDef(type) {\n  let colDef = COLUMN_TYPES[DEFAULT_GRID_COL_TYPE_KEY];\n  if (type && COLUMN_TYPES[type]) {\n    colDef = COLUMN_TYPES[type];\n  }\n  return colDef;\n}\nexport const createColumnsState = ({\n  apiRef,\n  columnsToUpsert,\n  initialState,\n  columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef),\n  keepOnlyColumnsToUpsert = false\n}) => {\n  const isInsideStateInitializer = !apiRef.current.state.columns;\n  let columnsState;\n  if (isInsideStateInitializer) {\n    columnsState = {\n      orderedFields: [],\n      lookup: {},\n      columnVisibilityModel\n    };\n  } else {\n    const currentState = gridColumnsStateSelector(apiRef.current.state);\n    columnsState = {\n      orderedFields: keepOnlyColumnsToUpsert ? [] : [...currentState.orderedFields],\n      lookup: _extends({}, currentState.lookup),\n      // Will be cleaned later if keepOnlyColumnsToUpsert=true\n      columnVisibilityModel\n    };\n  }\n  let columnsToKeep = {};\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    columnsToKeep = Object.keys(columnsState.lookup).reduce((acc, key) => _extends({}, acc, {\n      [key]: false\n    }), {});\n  }\n  const columnsToUpsertLookup = {};\n  columnsToUpsert.forEach(newColumn => {\n    const {\n      field\n    } = newColumn;\n    columnsToUpsertLookup[field] = true;\n    columnsToKeep[field] = true;\n    let existingState = columnsState.lookup[field];\n    if (existingState == null) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field,\n        hasBeenResized: false\n      });\n      columnsState.orderedFields.push(field);\n    } else if (keepOnlyColumnsToUpsert) {\n      columnsState.orderedFields.push(field);\n    }\n\n    // If the column type has changed - merge the existing state with the default column type definition\n    if (existingState && existingState.type !== newColumn.type) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field\n      });\n    }\n    let hasBeenResized = existingState.hasBeenResized;\n    COLUMNS_DIMENSION_PROPERTIES.forEach(key => {\n      if (newColumn[key] !== undefined) {\n        hasBeenResized = true;\n        if (newColumn[key] === -1) {\n          newColumn[key] = Infinity;\n        }\n      }\n    });\n    columnsState.lookup[field] = _extends({}, existingState, newColumn, {\n      hasBeenResized\n    });\n  });\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    Object.keys(columnsState.lookup).forEach(field => {\n      if (!columnsToKeep[field]) {\n        delete columnsState.lookup[field];\n      }\n    });\n  }\n  const columnsStateWithPreProcessing = apiRef.current.unstable_applyPipeProcessors('hydrateColumns', columnsState);\n  const columnsStateWithPortableColumns = applyInitialState(columnsStateWithPreProcessing, initialState);\n  return hydrateColumnsWidth(columnsStateWithPortableColumns, apiRef.current.getRootDimensions?.() ?? undefined);\n};\nexport function getFirstNonSpannedColumnToRender({\n  firstColumnToRender,\n  apiRef,\n  firstRowToRender,\n  lastRowToRender,\n  visibleRows\n}) {\n  let firstNonSpannedColumnToRender = firstColumnToRender;\n  for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n    const row = visibleRows[i];\n    if (row) {\n      const rowId = visibleRows[i].id;\n      const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, firstColumnToRender);\n      if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n        firstNonSpannedColumnToRender = cellColSpanInfo.leftVisibleCellIndex;\n      }\n    }\n  }\n  return firstNonSpannedColumnToRender;\n}\nexport function getTotalHeaderHeight(apiRef, props) {\n  const densityFactor = gridDensityFactorSelector(apiRef);\n  const maxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n  const isHeaderFilteringEnabled = gridHeaderFilteringEnabledSelector(apiRef);\n  const columnHeadersHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const filterHeadersHeight = isHeaderFilteringEnabled ? Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor) : 0;\n  return columnHeadersHeight * (1 + (maxDepth ?? 0)) + filterHeadersHeight;\n}","import { createSelector } from '../../../utils/createSelector';\nexport const COMPACT_DENSITY_FACTOR = 0.7;\nexport const COMFORTABLE_DENSITY_FACTOR = 1.3;\nconst DENSITY_FACTORS = {\n  compact: COMPACT_DENSITY_FACTOR,\n  comfortable: COMFORTABLE_DENSITY_FACTOR,\n  standard: 1\n};\nexport const gridDensitySelector = state => state.density;\nexport const gridDensityFactorSelector = createSelector(gridDensitySelector, density => DENSITY_FACTORS[density]);","export const gridDimensionsSelector = state => state.dimensions;","// TODO v6: rename to gridEditingStateSelector\nexport const gridEditRowsStateSelector = state => state.editRows;","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridSortedRowEntriesSelector } from '../sorting/gridSortingSelector';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\n\n/**\n * @category Filtering\n */\nconst gridFilterStateSelector = state => state.filter;\n\n/**\n * Get the current filter model.\n * @category Filtering\n */\nexport const gridFilterModelSelector = createSelector(gridFilterStateSelector, filterState => filterState.filterModel);\n\n/**\n * Get the current quick filter values.\n * @category Filtering\n */\nexport const gridQuickFilterValuesSelector = createSelector(gridFilterModelSelector, filterModel => filterModel.quickFilterValues);\n\n/**\n * @category Visible rows\n * @ignore - do not document.\n */\nexport const gridVisibleRowsLookupSelector = state => state.visibleRowsLookup;\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredRowsLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredDescendantCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredDescendantCountLookup);\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowEntriesSelector = createSelectorMemoized(gridVisibleRowsLookupSelector, gridSortedRowEntriesSelector, (visibleRowsLookup, sortedRows) => sortedRows.filter(row => visibleRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, visibleSortedRowEntries => visibleSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowEntriesSelector = createSelectorMemoized(gridFilteredRowsLookupSelector, gridSortedRowEntriesSelector, (filteredRowsLookup, sortedRows) => sortedRows.filter(row => filteredRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowIdsSelector = createSelectorMemoized(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredSortedTopLevelRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, (visibleSortedRows, rowTree, rowTreeDepth) => {\n  if (rowTreeDepth < 2) {\n    return visibleSortedRows;\n  }\n  return visibleSortedRows.filter(row => rowTree[row.id]?.depth === 0);\n});\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridExpandedRowCountSelector = createSelector(gridExpandedSortedRowEntriesSelector, visibleSortedRows => visibleSortedRows.length);\n\n/**\n * Get the amount of top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredTopLevelRowCountSelector = createSelector(gridFilteredSortedTopLevelRowEntriesSelector, visibleSortedTopLevelRows => visibleSortedTopLevelRows.length);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsSelector = createSelectorMemoized(gridFilterModelSelector, gridColumnLookupSelector, (filterModel, columnLookup) => filterModel.items?.filter(item => {\n  if (!item.field) {\n    return false;\n  }\n  const column = columnLookup[item.field];\n  if (!column?.filterOperators || column?.filterOperators?.length === 0) {\n    return false;\n  }\n  const filterOperator = column.filterOperators.find(operator => operator.value === item.operator);\n  if (!filterOperator) {\n    return false;\n  }\n  return !filterOperator.InputComponent || item.value != null && item.value?.toString() !== '';\n}));\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsLookupSelector = createSelectorMemoized(gridFilterActiveItemsSelector, activeFilters => {\n  const result = activeFilters.reduce((res, filterItem) => {\n    if (!res[filterItem.field]) {\n      res[filterItem.field] = [filterItem];\n    } else {\n      res[filterItem.field].push(filterItem);\n    }\n    return res;\n  }, {});\n  return result;\n});","import { GridLogicOperator } from '../../../models/gridFilterItem';\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  logicOperator: GridLogicOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLogicOperator.And\n});\n\n/**\n * @param {GridRowId} rowId The id of the row we want to filter.\n * @param {(filterItem: GridFilterItem) => boolean} shouldApplyItem An optional callback to allow the filtering engine to only apply some items.\n */\n\n/**\n * Visibility status for each row.\n * A row is visible if it is passing the filters AND if its parents are expanded.\n * If a row is not registered in this lookup, it is visible.\n */","export function getPublicApiRef(apiRef) {\n  return {\n    current: apiRef.current.getPublicApi()\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridLogicOperator } from '../../../models';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { buildWarning } from '../../../utils/warning';\nimport { getPublicApiRef } from '../../../utils/getPublicApiRef';\nimport { gridColumnFieldsSelector, gridColumnLookupSelector, gridVisibleColumnFieldsSelector } from '../columns';\nlet hasEval;\nfunction getHasEval() {\n  if (hasEval !== undefined) {\n    return hasEval;\n  }\n  try {\n    hasEval = new Function('return true')();\n  } catch (_) {\n    hasEval = false;\n  }\n  return hasEval;\n}\n/**\n * Adds default values to the optional fields of a filter items.\n * @param {GridFilterItem} item The raw filter item.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @return {GridFilterItem} The clean filter item with an uniq ID and an always-defined operator.\n * TODO: Make the typing reflect the different between GridFilterInputItem and GridFilterItem.\n */\nexport const cleanFilterItem = (item, apiRef) => {\n  const cleanItem = _extends({}, item);\n  if (cleanItem.id == null) {\n    cleanItem.id = Math.round(Math.random() * 1e5);\n  }\n  if (cleanItem.operator == null) {\n    // Selects a default operator\n    // We don't use `apiRef.current.getColumn` because it is not ready during state initialization\n    const column = gridColumnLookupSelector(apiRef)[cleanItem.field];\n    cleanItem.operator = column && column.filterOperators[0].value;\n  }\n  return cleanItem;\n};\nconst filterModelDisableMultiColumnsFilteringWarning = buildWarning(['MUI X: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nconst filterModelMissingItemIdWarning = buildWarning('MUI X: The `id` field is required on `filterModel.items` when you use multiple filters.', 'error');\nconst filterModelMissingItemOperatorWarning = buildWarning('MUI X: The `operator` field is required on `filterModel.items`, one or more of your filtering item has no `operator` provided.', 'error');\nexport const sanitizeFilterModel = (model, disableMultipleColumnsFiltering, apiRef) => {\n  const hasSeveralItems = model.items.length > 1;\n  let items;\n  if (hasSeveralItems && disableMultipleColumnsFiltering) {\n    filterModelDisableMultiColumnsFilteringWarning();\n    items = [model.items[0]];\n  } else {\n    items = model.items;\n  }\n  const hasItemsWithoutIds = hasSeveralItems && items.some(item => item.id == null);\n  const hasItemWithoutOperator = items.some(item => item.operator == null);\n  if (hasItemsWithoutIds) {\n    filterModelMissingItemIdWarning();\n  }\n  if (hasItemWithoutOperator) {\n    filterModelMissingItemOperatorWarning();\n  }\n  if (hasItemWithoutOperator || hasItemsWithoutIds) {\n    return _extends({}, model, {\n      items: items.map(item => cleanFilterItem(item, apiRef))\n    });\n  }\n  if (model.items !== items) {\n    return _extends({}, model, {\n      items\n    });\n  }\n  return model;\n};\nexport const mergeStateWithFilterModel = (filterModel, disableMultipleColumnsFiltering, apiRef) => filteringState => _extends({}, filteringState, {\n  filterModel: sanitizeFilterModel(filterModel, disableMultipleColumnsFiltering, apiRef)\n});\nexport const removeDiacritics = value => {\n  if (typeof value === 'string') {\n    return value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n  }\n  return value;\n};\nconst getFilterCallbackFromItem = (filterItem, apiRef) => {\n  if (!filterItem.field || !filterItem.operator) {\n    return null;\n  }\n  const column = apiRef.current.getColumn(filterItem.field);\n  if (!column) {\n    return null;\n  }\n  let parsedValue;\n  if (column.valueParser) {\n    const parser = column.valueParser;\n    parsedValue = Array.isArray(filterItem.value) ? filterItem.value?.map(x => parser(x, undefined, column, apiRef)) : parser(filterItem.value, undefined, column, apiRef);\n  } else {\n    parsedValue = filterItem.value;\n  }\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  if (ignoreDiacritics) {\n    parsedValue = removeDiacritics(parsedValue);\n  }\n  const newFilterItem = _extends({}, filterItem, {\n    value: parsedValue\n  });\n  const filterOperators = column.filterOperators;\n  if (!filterOperators?.length) {\n    throw new Error(`MUI X: No filter operators found for column '${column.field}'.`);\n  }\n  const filterOperator = filterOperators.find(operator => operator.value === newFilterItem.operator);\n  if (!filterOperator) {\n    throw new Error(`MUI X: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operator}'.`);\n  }\n  const publicApiRef = getPublicApiRef(apiRef);\n  const applyFilterOnRow = filterOperator.getApplyFilterFn(newFilterItem, column);\n  if (typeof applyFilterOnRow !== 'function') {\n    return null;\n  }\n  return {\n    item: newFilterItem,\n    fn: row => {\n      let value = apiRef.current.getRowValue(row, column);\n      if (ignoreDiacritics) {\n        value = removeDiacritics(value);\n      }\n      return applyFilterOnRow(value, row, column, publicApiRef);\n    }\n  };\n};\nlet filterItemsApplierId = 1;\n\n/**\n * Generates a method to easily check if a row is matching the current filter model.\n * @param {GridFilterModel} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedFilterItemsApplier = (filterModel, apiRef, disableEval) => {\n  const {\n    items\n  } = filterModel;\n  const appliers = items.map(item => getFilterCallbackFromItem(item, apiRef)).filter(callback => !!callback);\n  if (appliers.length === 0) {\n    return null;\n  }\n  if (disableEval || !getHasEval()) {\n    // This is the original logic, which is used if `eval()` is not supported (aka prevented by CSP).\n    return (row, shouldApplyFilter) => {\n      const resultPerItemId = {};\n      for (let i = 0; i < appliers.length; i += 1) {\n        const applier = appliers[i];\n        if (!shouldApplyFilter || shouldApplyFilter(applier.item.field)) {\n          resultPerItemId[applier.item.id] = applier.fn(row);\n        }\n      }\n      return resultPerItemId;\n    };\n  }\n\n  // We generate a new function with `new Function()` to avoid expensive patterns for JS engines\n  // such as a dynamic object assignment, for example `{ [dynamicKey]: value }`.\n  const filterItemCore = new Function('appliers', 'row', 'shouldApplyFilter', `\"use strict\";\n${appliers.map((applier, i) => `const shouldApply${i} = !shouldApplyFilter || shouldApplyFilter(${JSON.stringify(applier.item.field)});`).join('\\n')}\n\nconst result$$ = {\n${appliers.map((applier, i) => `  ${JSON.stringify(String(applier.item.id))}: !shouldApply${i} ? false : appliers[${i}].fn(row),`).join('\\n')}\n};\n\nreturn result$$;`.replaceAll('$$', String(filterItemsApplierId)));\n  filterItemsApplierId += 1;\n\n  // Assign to the arrow function a name to help debugging\n  const filterItem = (row, shouldApplyItem) => filterItemCore(appliers, row, shouldApplyItem);\n  return filterItem;\n};\nexport const shouldQuickFilterExcludeHiddenColumns = filterModel => {\n  return filterModel.quickFilterExcludeHiddenColumns ?? true;\n};\n\n/**\n * Generates a method to easily check if a row is matching the current quick filter.\n * @param {any[]} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedQuickFilterApplier = (filterModel, apiRef) => {\n  const quickFilterValues = filterModel.quickFilterValues?.filter(Boolean) ?? [];\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n  const columnFields = shouldQuickFilterExcludeHiddenColumns(filterModel) ? gridVisibleColumnFieldsSelector(apiRef) : gridColumnFieldsSelector(apiRef);\n  const appliersPerField = [];\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  const publicApiRef = getPublicApiRef(apiRef);\n  columnFields.forEach(field => {\n    const column = apiRef.current.getColumn(field);\n    const getApplyQuickFilterFn = column?.getApplyQuickFilterFn;\n    if (getApplyQuickFilterFn) {\n      appliersPerField.push({\n        column,\n        appliers: quickFilterValues.map(quickFilterValue => {\n          const value = ignoreDiacritics ? removeDiacritics(quickFilterValue) : quickFilterValue;\n          return {\n            fn: getApplyQuickFilterFn(value, column, publicApiRef)\n          };\n        })\n      });\n    }\n  });\n  return function isRowMatchingQuickFilter(row, shouldApplyFilter) {\n    const result = {};\n\n    /* eslint-disable no-restricted-syntax, no-labels */\n    outer: for (let v = 0; v < quickFilterValues.length; v += 1) {\n      const filterValue = quickFilterValues[v];\n      for (let i = 0; i < appliersPerField.length; i += 1) {\n        const {\n          column,\n          appliers\n        } = appliersPerField[i];\n        const {\n          field\n        } = column;\n        if (shouldApplyFilter && !shouldApplyFilter(field)) {\n          continue;\n        }\n        const applier = appliers[v];\n        let value = apiRef.current.getRowValue(row, column);\n        if (applier.fn === null) {\n          continue;\n        }\n        if (ignoreDiacritics) {\n          value = removeDiacritics(value);\n        }\n        const isMatching = applier.fn(value, row, column, publicApiRef);\n        if (isMatching) {\n          result[filterValue] = true;\n          continue outer;\n        }\n      }\n      result[filterValue] = false;\n    }\n    /* eslint-enable no-restricted-syntax, no-labels */\n\n    return result;\n  };\n};\nexport const buildAggregatedFilterApplier = (filterModel, apiRef, disableEval) => {\n  const isRowMatchingFilterItems = buildAggregatedFilterItemsApplier(filterModel, apiRef, disableEval);\n  const isRowMatchingQuickFilter = buildAggregatedQuickFilterApplier(filterModel, apiRef);\n  return function isRowMatchingFilters(row, shouldApplyFilter, result) {\n    result.passingFilterItems = isRowMatchingFilterItems?.(row, shouldApplyFilter) ?? null;\n    result.passingQuickFilterValues = isRowMatchingQuickFilter?.(row, shouldApplyFilter) ?? null;\n  };\n};\nconst isNotNull = result => result != null;\nconst filterModelItems = (cache, apiRef, items) => {\n  if (!cache.cleanedFilterItems) {\n    cache.cleanedFilterItems = items.filter(item => getFilterCallbackFromItem(item, apiRef) !== null);\n  }\n  return cache.cleanedFilterItems;\n};\nexport const passFilterLogic = (allFilterItemResults, allQuickFilterResults, filterModel, apiRef, cache) => {\n  const cleanedFilterItems = filterModelItems(cache, apiRef, filterModel.items);\n  const cleanedFilterItemResults = allFilterItemResults.filter(isNotNull);\n  const cleanedQuickFilterResults = allQuickFilterResults.filter(isNotNull);\n\n  // get result for filter items model\n  if (cleanedFilterItemResults.length > 0) {\n    // Return true if the item pass with one of the rows\n    const filterItemPredicate = item => {\n      return cleanedFilterItemResults.some(filterItemResult => filterItemResult[item.id]);\n    };\n    const logicOperator = filterModel.logicOperator ?? getDefaultGridFilterModel().logicOperator;\n    if (logicOperator === GridLogicOperator.And) {\n      const passesAllFilters = cleanedFilterItems.every(filterItemPredicate);\n      if (!passesAllFilters) {\n        return false;\n      }\n    } else {\n      const passesSomeFilters = cleanedFilterItems.some(filterItemPredicate);\n      if (!passesSomeFilters) {\n        return false;\n      }\n    }\n  }\n\n  // get result for quick filter model\n  if (cleanedQuickFilterResults.length > 0 && filterModel.quickFilterValues != null) {\n    // Return true if the item pass with one of the rows\n    const quickFilterValuePredicate = value => {\n      return cleanedQuickFilterResults.some(quickFilterValueResult => quickFilterValueResult[value]);\n    };\n    const quickFilterLogicOperator = filterModel.quickFilterLogicOperator ?? getDefaultGridFilterModel().quickFilterLogicOperator;\n    if (quickFilterLogicOperator === GridLogicOperator.And) {\n      const passesAllQuickFilterValues = filterModel.quickFilterValues.every(quickFilterValuePredicate);\n      if (!passesAllQuickFilterValues) {\n        return false;\n      }\n    } else {\n      const passesSomeQuickFilterValues = filterModel.quickFilterValues.some(quickFilterValuePredicate);\n      if (!passesSomeQuickFilterValues) {\n        return false;\n      }\n    }\n  }\n  return true;\n};","import { createSelector } from '../../../utils/createSelector';\nexport const gridFocusStateSelector = state => state.focus;\nexport const gridFocusCellSelector = createSelector(gridFocusStateSelector, focusState => focusState.cell);\nexport const gridFocusColumnHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeader);\nexport const gridFocusColumnHeaderFilterSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeaderFilter);\nexport const gridFocusColumnGroupHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnGroupHeader);\nexport const gridTabIndexStateSelector = state => state.tabIndex;\nexport const gridTabIndexCellSelector = createSelector(gridTabIndexStateSelector, state => state.cell);\nexport const gridTabIndexColumnHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeader);\nexport const gridTabIndexColumnHeaderFilterSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeaderFilter);\nexport const gridTabIndexColumnGroupHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnGroupHeader);","import { createSelector } from '../../../utils/createSelector';\nexport const gridHeaderFilteringStateSelector = state => state.headerFiltering;\nexport const gridHeaderFilteringEnabledSelector = createSelector(gridHeaderFilteringStateSelector,\n// No initialization in MIT, so we need to default to false to be used by `getTotalHeaderHeight`\nheaderFilteringState => headerFilteringState?.enabled ?? false);\nexport const gridHeaderFilteringEditFieldSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.editing);\nexport const gridHeaderFilteringMenuSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.menuOpen);","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridExpandedSortedRowEntriesSelector, gridExpandedSortedRowIdsSelector, gridFilteredSortedTopLevelRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\nimport { getPageCount } from './gridPaginationUtils';\n\n/**\n * @category Pagination\n * @ignore - do not document.\n */\nexport const gridPaginationSelector = state => state.pagination;\n\n/**\n * Get the pagination model\n * @category Pagination\n */\nexport const gridPaginationModelSelector = createSelector(gridPaginationSelector, pagination => pagination.paginationModel);\n\n/**\n * Get the row count\n * @category Pagination\n */\nexport const gridPaginationRowCountSelector = createSelector(gridPaginationSelector, pagination => pagination.rowCount);\n\n/**\n * Get the pagination meta\n * @category Pagination\n */\nexport const gridPaginationMetaSelector = createSelector(gridPaginationSelector, pagination => pagination.meta);\n\n/**\n * Get the index of the page to render if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.page);\n\n/**\n * Get the maximum amount of rows to display on a single page if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSizeSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.pageSize);\n\n/**\n * Get the amount of pages needed to display all the rows if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageCountSelector = createSelector(gridPaginationModelSelector, gridPaginationRowCountSelector, (paginationModel, rowCount) => getPageCount(rowCount, paginationModel.pageSize, paginationModel.page));\n\n/**\n * Get the index of the first and the last row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginationRowRangeSelector = createSelectorMemoized(gridPaginationModelSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, gridExpandedSortedRowEntriesSelector, gridFilteredSortedTopLevelRowEntriesSelector, (paginationModel, rowTree, rowTreeDepth, visibleSortedRowEntries, visibleSortedTopLevelRowEntries) => {\n  const visibleTopLevelRowCount = visibleSortedTopLevelRowEntries.length;\n  const topLevelFirstRowIndex = Math.min(paginationModel.pageSize * paginationModel.page, visibleTopLevelRowCount - 1);\n  const topLevelLastRowIndex = Math.min(topLevelFirstRowIndex + paginationModel.pageSize - 1, visibleTopLevelRowCount - 1);\n\n  // The range contains no element\n  if (topLevelFirstRowIndex === -1 || topLevelLastRowIndex === -1) {\n    return null;\n  }\n\n  // The tree is flat, there is no need to look for children\n  if (rowTreeDepth < 2) {\n    return {\n      firstRowIndex: topLevelFirstRowIndex,\n      lastRowIndex: topLevelLastRowIndex\n    };\n  }\n  const topLevelFirstRow = visibleSortedTopLevelRowEntries[topLevelFirstRowIndex];\n  const topLevelRowsInCurrentPageCount = topLevelLastRowIndex - topLevelFirstRowIndex + 1;\n  const firstRowIndex = visibleSortedRowEntries.findIndex(row => row.id === topLevelFirstRow.id);\n  let lastRowIndex = firstRowIndex;\n  let topLevelRowAdded = 0;\n  while (lastRowIndex < visibleSortedRowEntries.length && topLevelRowAdded <= topLevelRowsInCurrentPageCount) {\n    const row = visibleSortedRowEntries[lastRowIndex];\n    const depth = rowTree[row.id]?.depth;\n    if (depth === undefined) {\n      lastRowIndex += 1;\n    } else {\n      if (topLevelRowAdded < topLevelRowsInCurrentPageCount || depth > 0) {\n        lastRowIndex += 1;\n      }\n      if (depth === 0) {\n        topLevelRowAdded += 1;\n      }\n    }\n  }\n  return {\n    firstRowIndex,\n    lastRowIndex: lastRowIndex - 1\n  };\n});\n\n/**\n * Get the id and the model of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridPaginationRowRangeSelector, (visibleSortedRowEntries, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowEntries.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n\n/**\n * Get the id of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridPaginationRowRangeSelector, (visibleSortedRowIds, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowIds.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});","import { GridSignature } from '../../utils';\nconst MAX_PAGE_SIZE = 100;\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\nexport const getPageCount = (rowCount, pageSize, page) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n  if (rowCount === -1) {\n    // With unknown row-count, we can assume a page after the current one\n    return page + 2;\n  }\n  return 0;\n};\nexport const getDefaultGridPaginationModel = autoPageSize => ({\n  page: 0,\n  pageSize: autoPageSize ? 0 : 100\n});\nexport const getValidPage = (page, pageCount = 0) => {\n  if (pageCount === 0) {\n    return page;\n  }\n  return Math.max(Math.min(page, pageCount - 1), 0);\n};\nexport const throwIfPageSizeExceedsTheLimit = (pageSize, signatureProp) => {\n  if (signatureProp === GridSignature.DataGrid && pageSize > MAX_PAGE_SIZE) {\n    throw new Error(['MUI X: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n  }\n};","export const gridPreferencePanelStateSelector = state => state.preferencePanel;","var GridPreferencePanelsValue = /*#__PURE__*/function (GridPreferencePanelsValue) {\n  GridPreferencePanelsValue[\"filters\"] = \"filters\";\n  GridPreferencePanelsValue[\"columns\"] = \"columns\";\n  return GridPreferencePanelsValue;\n}(GridPreferencePanelsValue || {});\nexport { GridPreferencePanelsValue };","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nexport const gridRowSelectionStateSelector = state => state.rowSelection;\nexport const selectedGridRowsCountSelector = createSelector(gridRowSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelectorMemoized(gridRowSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelectorMemoized(gridRowSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));","import { GridSignature } from '../../utils/useGridApiEventHandler';\nexport function isMultipleRowSelectionEnabled(props) {\n  if (props.signature === GridSignature.DataGrid) {\n    // DataGrid Community has multiple row selection enabled only if checkbox selection is enabled.\n    return props.checkboxSelection && props.disableMultipleRowSelection !== true;\n  }\n  return !props.disableMultipleRowSelection;\n}","export const gridRowsMetaSelector = state => state.rowsMeta;","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nconst gridRowsStateSelector = state => state.rows;\nexport const gridRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalRowCount);\nexport const gridRowsLoadingSelector = createSelector(gridRowsStateSelector, rows => rows.loading);\nexport const gridTopLevelRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\n\n// TODO rows v6: Rename\nexport const gridRowsLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToModelLookup);\nexport const gridRowsDataRowIdToIdLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToIdLookup);\nexport const gridRowTreeSelector = createSelector(gridRowsStateSelector, rows => rows.tree);\nexport const gridRowGroupingNameSelector = createSelector(gridRowsStateSelector, rows => rows.groupingName);\nexport const gridRowTreeDepthsSelector = createSelector(gridRowsStateSelector, rows => rows.treeDepths);\nexport const gridRowMaximumTreeDepthSelector = createSelectorMemoized(gridRowsStateSelector, rows => {\n  const entries = Object.entries(rows.treeDepths);\n  if (entries.length === 0) {\n    return 1;\n  }\n  return entries.filter(([, nodeCount]) => nodeCount > 0).map(([depth]) => Number(depth)).sort((a, b) => b - a)[0] + 1;\n});\nexport const gridDataRowIdsSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIds);\n\n/**\n * @ignore - do not document.\n */\nexport const gridAdditionalRowGroupsSelector = createSelector(gridRowsStateSelector, rows => rows?.additionalRowGroups);\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsSelector = createSelectorMemoized(gridAdditionalRowGroupsSelector, additionalRowGroups => {\n  const rawPinnedRows = additionalRowGroups?.pinnedRows;\n  return {\n    bottom: rawPinnedRows?.bottom?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? [],\n    top: rawPinnedRows?.top?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? []\n  };\n});\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsCountSelector = createSelector(gridPinnedRowsSelector, pinnedRows => {\n  return (pinnedRows?.top?.length || 0) + (pinnedRows?.bottom?.length || 0);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\nimport { gridDimensionsSelector } from '../dimensions/gridDimensionsSelectors';\nexport const GRID_ROOT_GROUP_ID = `auto-generated-group-node-root`;\nexport const GRID_ID_AUTOGENERATED = Symbol('mui.id_autogenerated');\nexport const buildRootGroup = () => ({\n  type: 'group',\n  id: GRID_ROOT_GROUP_ID,\n  depth: -1,\n  groupingField: null,\n  groupingKey: null,\n  isAutoGenerated: true,\n  children: [],\n  childrenFromPath: {},\n  childrenExpanded: true,\n  parent: null\n});\n\n/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\nexport function checkGridRowIdIsValid(id, row, detailErrorMessage = 'A row was provided without id in the rows prop:') {\n  if (id == null) {\n    throw new Error(['MUI X: The data grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport const getRowIdFromRowModel = (rowModel, getRowId, detailErrorMessage) => {\n  const id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n};\nexport const createRowsInternalCache = ({\n  rows,\n  getRowId,\n  loading,\n  rowCount\n}) => {\n  const updates = {\n    type: 'full',\n    rows: []\n  };\n  const dataRowIdToModelLookup = {};\n  const dataRowIdToIdLookup = {};\n  for (let i = 0; i < rows.length; i += 1) {\n    const model = rows[i];\n    const id = getRowIdFromRowModel(model, getRowId);\n    dataRowIdToModelLookup[id] = model;\n    dataRowIdToIdLookup[id] = id;\n    updates.rows.push(id);\n  }\n  return {\n    rowsBeforePartialUpdates: rows,\n    loadingPropBeforePartialUpdates: loading,\n    rowCountPropBeforePartialUpdates: rowCount,\n    updates,\n    dataRowIdToIdLookup,\n    dataRowIdToModelLookup\n  };\n};\nexport const getTopLevelRowCount = ({\n  tree,\n  rowCountProp = 0\n}) => {\n  const rootGroupNode = tree[GRID_ROOT_GROUP_ID];\n  return Math.max(rowCountProp, rootGroupNode.children.length + (rootGroupNode.footerId == null ? 0 : 1));\n};\nexport const getRowsStateFromCache = ({\n  apiRef,\n  rowCountProp = 0,\n  loadingProp,\n  previousTree,\n  previousTreeDepths\n}) => {\n  const cache = apiRef.current.caches.rows;\n\n  // 1. Apply the \"rowTreeCreation\" family processing.\n  const {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIds: unProcessedDataRowIds,\n    groupingName\n  } = apiRef.current.applyStrategyProcessor('rowTreeCreation', {\n    previousTree,\n    previousTreeDepths,\n    updates: cache.updates,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup\n  });\n\n  // 2. Apply the \"hydrateRows\" pipe-processing.\n  const groupingParamsWithHydrateRows = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIds: unProcessedDataRowIds,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup\n  });\n\n  // 3. Reset the cache updates\n  apiRef.current.caches.rows.updates = {\n    type: 'partial',\n    actions: {\n      insert: [],\n      modify: [],\n      remove: []\n    },\n    idToActionLookup: {}\n  };\n  return _extends({}, groupingParamsWithHydrateRows, {\n    totalRowCount: Math.max(rowCountProp, groupingParamsWithHydrateRows.dataRowIds.length),\n    totalTopLevelRowCount: getTopLevelRowCount({\n      tree: groupingParamsWithHydrateRows.tree,\n      rowCountProp\n    }),\n    groupingName,\n    loading: loadingProp\n  });\n};\nexport const isAutoGeneratedRow = rowNode => rowNode.type === 'skeletonRow' || rowNode.type === 'footer' || rowNode.type === 'group' && rowNode.isAutoGenerated || rowNode.type === 'pinnedRow' && rowNode.isAutoGenerated;\nexport const getTreeNodeDescendants = (tree, parentId, skipAutoGeneratedRows) => {\n  const node = tree[parentId];\n  if (node.type !== 'group') {\n    return [];\n  }\n  const validDescendants = [];\n  for (let i = 0; i < node.children.length; i += 1) {\n    const child = node.children[i];\n    if (!skipAutoGeneratedRows || !isAutoGeneratedRow(tree[child])) {\n      validDescendants.push(child);\n    }\n    const childDescendants = getTreeNodeDescendants(tree, child, skipAutoGeneratedRows);\n    for (let j = 0; j < childDescendants.length; j += 1) {\n      validDescendants.push(childDescendants[j]);\n    }\n  }\n  if (!skipAutoGeneratedRows && node.footerId != null) {\n    validDescendants.push(node.footerId);\n  }\n  return validDescendants;\n};\nexport const updateCacheWithNewRows = ({\n  previousCache,\n  getRowId,\n  updates\n}) => {\n  if (previousCache.updates.type === 'full') {\n    throw new Error('MUI X: Unable to prepare a partial update if a full update is not applied yet.');\n  }\n\n  // Remove duplicate updates.\n  // A server can batch updates, and send several updates for the same row in one fn call.\n  const uniqueUpdates = new Map();\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    if (uniqueUpdates.has(id)) {\n      uniqueUpdates.set(id, _extends({}, uniqueUpdates.get(id), update));\n    } else {\n      uniqueUpdates.set(id, update);\n    }\n  });\n  const partialUpdates = {\n    type: 'partial',\n    actions: {\n      insert: [...(previousCache.updates.actions.insert ?? [])],\n      modify: [...(previousCache.updates.actions.modify ?? [])],\n      remove: [...(previousCache.updates.actions.remove ?? [])]\n    },\n    idToActionLookup: _extends({}, previousCache.updates.idToActionLookup)\n  };\n  const dataRowIdToModelLookup = _extends({}, previousCache.dataRowIdToModelLookup);\n  const dataRowIdToIdLookup = _extends({}, previousCache.dataRowIdToIdLookup);\n  const alreadyAppliedActionsToRemove = {\n    insert: {},\n    modify: {},\n    remove: {}\n  };\n\n  // Depending on the action already applied to the data row,\n  // We might want drop the already-applied-update.\n  // For instance:\n  // - if you delete then insert, then you don't want to apply the deletion in the tree.\n  // - if you insert, then modify, then you just want to apply the insertion in the tree.\n  uniqueUpdates.forEach((partialRow, id) => {\n    const actionAlreadyAppliedToRow = partialUpdates.idToActionLookup[id];\n\n    // Action === \"delete\"\n    // eslint-disable-next-line no-underscore-dangle\n    if (partialRow._action === 'delete') {\n      // If the data row has been removed since the last state update,\n      // Then do nothing.\n      if (actionAlreadyAppliedToRow === 'remove' || !dataRowIdToModelLookup[id]) {\n        return;\n      }\n\n      // If the data row has been inserted / modified since the last state update,\n      // Then drop this \"insert\" / \"modify\" update.\n      if (actionAlreadyAppliedToRow != null) {\n        alreadyAppliedActionsToRemove[actionAlreadyAppliedToRow][id] = true;\n      }\n\n      // Remove the data row from the lookups and add it to the \"delete\" update.\n      partialUpdates.actions.remove.push(id);\n      delete dataRowIdToModelLookup[id];\n      delete dataRowIdToIdLookup[id];\n      return;\n    }\n    const oldRow = dataRowIdToModelLookup[id];\n\n    // Action === \"modify\"\n    if (oldRow) {\n      // If the data row has been removed since the last state update,\n      // Then drop this \"remove\" update and add it to the \"modify\" update instead.\n      if (actionAlreadyAppliedToRow === 'remove') {\n        alreadyAppliedActionsToRemove.remove[id] = true;\n        partialUpdates.actions.modify.push(id);\n      }\n      // If the date has not been inserted / modified since the last state update,\n      // Then add it to the \"modify\" update (if it has been inserted it should just remain \"inserted\").\n      else if (actionAlreadyAppliedToRow == null) {\n        partialUpdates.actions.modify.push(id);\n      }\n\n      // Update the data row lookups.\n      dataRowIdToModelLookup[id] = _extends({}, oldRow, partialRow);\n      return;\n    }\n\n    // Action === \"insert\"\n    // If the data row has been removed since the last state update,\n    // Then drop the \"remove\" update and add it to the \"insert\" update instead.\n    if (actionAlreadyAppliedToRow === 'remove') {\n      alreadyAppliedActionsToRemove.remove[id] = true;\n      partialUpdates.actions.insert.push(id);\n    }\n    // If the data row has not been inserted since the last state update,\n    // Then add it to the \"insert\" update.\n    // `actionAlreadyAppliedToRow` can't be equal to \"modify\", otherwise we would have an `oldRow` above.\n    else if (actionAlreadyAppliedToRow == null) {\n      partialUpdates.actions.insert.push(id);\n    }\n\n    // Update the data row lookups.\n    dataRowIdToModelLookup[id] = partialRow;\n    dataRowIdToIdLookup[id] = id;\n  });\n  const actionTypeWithActionsToRemove = Object.keys(alreadyAppliedActionsToRemove);\n  for (let i = 0; i < actionTypeWithActionsToRemove.length; i += 1) {\n    const actionType = actionTypeWithActionsToRemove[i];\n    const idsToRemove = alreadyAppliedActionsToRemove[actionType];\n    if (Object.keys(idsToRemove).length > 0) {\n      partialUpdates.actions[actionType] = partialUpdates.actions[actionType].filter(id => !idsToRemove[id]);\n    }\n  }\n  return {\n    dataRowIdToModelLookup,\n    dataRowIdToIdLookup,\n    updates: partialUpdates,\n    rowsBeforePartialUpdates: previousCache.rowsBeforePartialUpdates,\n    loadingPropBeforePartialUpdates: previousCache.loadingPropBeforePartialUpdates,\n    rowCountPropBeforePartialUpdates: previousCache.rowCountPropBeforePartialUpdates\n  };\n};\nexport function calculatePinnedRowsHeight(apiRef) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsHeight = pinnedRows?.top?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  const bottomPinnedRowsHeight = pinnedRows?.bottom?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  return {\n    top: topPinnedRowsHeight,\n    bottom: bottomPinnedRowsHeight\n  };\n}\nexport function getMinimalContentHeight(apiRef) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  return `var(--DataGrid-overlayHeight, ${2 * dimensions.rowHeight}px)`;\n}","import * as React from 'react';\nimport { getGridCellElement, getGridColumnHeaderElement, getGridRowElement } from '../../../utils/domUtils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nexport class MissingRowIdError extends Error {}\n\n/**\n * @requires useGridColumns (method)\n * @requires useGridRows (method)\n * @requires useGridFocus (state)\n * @requires useGridEditing (method)\n * TODO: Impossible priority - useGridEditing also needs to be after useGridParamsApi\n * TODO: Impossible priority - useGridFocus also needs to be after useGridParamsApi\n */\nexport function useGridParamsApi(apiRef) {\n  const getColumnHeaderParams = React.useCallback(field => ({\n    field,\n    colDef: apiRef.current.getColumn(field)\n  }), [apiRef]);\n  const getRowParams = React.useCallback(id => {\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const params = {\n      id,\n      columns: apiRef.current.getAllColumns(),\n      row\n    };\n    return params;\n  }, [apiRef]);\n  const getCellParams = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n    if (!row || !rowNode) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const rawValue = row[field];\n    const value = colDef?.valueGetter ? colDef.valueGetter(rawValue, row, colDef, apiRef) : rawValue;\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      colDef,\n      cellMode: apiRef.current.getCellMode(id, field),\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1,\n      value,\n      formattedValue: value,\n      isEditable: false\n    };\n    if (colDef && colDef.valueFormatter) {\n      params.formattedValue = colDef.valueFormatter(value, row, colDef, apiRef);\n    }\n    params.isEditable = colDef && apiRef.current.isCellEditable(params);\n    return params;\n  }, [apiRef]);\n  const getCellValue = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    return colDef.valueGetter(row[colDef.field], row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowValue = React.useCallback((row, colDef) => {\n    const field = colDef.field;\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    const value = row[colDef.field];\n    return colDef.valueGetter(value, row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowFormattedValue = React.useCallback((row, colDef) => {\n    const value = getRowValue(row, colDef);\n    if (!colDef || !colDef.valueFormatter) {\n      return value;\n    }\n    return colDef.valueFormatter(value, row, colDef, apiRef);\n  }, [apiRef, getRowValue]);\n  const getColumnHeaderElement = React.useCallback(field => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridColumnHeaderElement(apiRef.current.rootElementRef.current, field);\n  }, [apiRef]);\n  const getRowElement = React.useCallback(id => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridRowElement(apiRef.current.rootElementRef.current, id);\n  }, [apiRef]);\n  const getCellElement = React.useCallback((id, field) => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridCellElement(apiRef.current.rootElementRef.current, {\n      id,\n      field\n    });\n  }, [apiRef]);\n  const paramsApi = {\n    getCellValue,\n    getCellParams,\n    getCellElement,\n    getRowValue,\n    getRowFormattedValue,\n    getRowParams,\n    getRowElement,\n    getColumnHeaderParams,\n    getColumnHeaderElement\n  };\n  useGridApiMethod(apiRef, paramsApi, 'public');\n}","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridRowTreeSelector, gridRowsLookupSelector } from '../rows/gridRowsSelector';\nimport { GRID_ID_AUTOGENERATED, isAutoGeneratedRow } from '../rows/gridRowsUtils';\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nconst gridSortingStateSelector = state => state.sorting;\n\n/**\n * Get the id of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowIdsSelector = createSelector(gridSortingStateSelector, sortingState => sortingState.sortedRows);\n\n/**\n * Get the id and the model of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowEntriesSelector = createSelectorMemoized(gridSortedRowIdsSelector, gridRowsLookupSelector, gridRowTreeSelector, (sortedIds, idRowsLookup, rowTree) => sortedIds.reduce((acc, id) => {\n  const model = idRowsLookup[id];\n  if (model) {\n    acc.push({\n      id,\n      model\n    });\n  }\n  const rowNode = rowTree[id];\n  if (rowNode && isAutoGeneratedRow(rowNode)) {\n    acc.push({\n      id,\n      model: {\n        [GRID_ID_AUTOGENERATED]: id\n      }\n    });\n  }\n  return acc;\n}, []));\n\n/**\n * Get the current sorting model.\n * @category Sorting\n */\nexport const gridSortModelSelector = createSelector(gridSortingStateSelector, sorting => sorting.sortModel);\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortColumnLookupSelector = createSelectorMemoized(gridSortModelSelector, sortModel => {\n  const result = sortModel.reduce((res, sortItem, index) => {\n    res[sortItem.field] = {\n      sortDirection: sortItem.sort,\n      sortIndex: sortModel.length > 1 ? index + 1 : undefined\n    };\n    return res;\n  }, {});\n  return result;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { buildWarning } from '../../../utils/warning';\nconst sortModelDisableMultiColumnsSortingWarning = buildWarning(['MUI X: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nexport const sanitizeSortModel = (model, disableMultipleColumnsSorting) => {\n  if (disableMultipleColumnsSorting && model.length > 1) {\n    if (process.env.NODE_ENV !== 'production') {\n      sortModelDisableMultiColumnsSortingWarning();\n    }\n    return [model[0]];\n  }\n  return model;\n};\nexport const mergeStateWithSortModel = (sortModel, disableMultipleColumnsSorting) => state => _extends({}, state, {\n  sorting: _extends({}, state.sorting, {\n    sortModel: sanitizeSortModel(sortModel, disableMultipleColumnsSorting)\n  })\n});\nconst isDesc = direction => direction === 'desc';\n\n/**\n * Transform an item of the sorting model into a method comparing two rows.\n * @param {GridSortItem} sortItem The sort item we want to apply.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridParsedSortItem | null} The parsed sort item. Returns `null` is the sort item is not valid.\n */\nconst parseSortItem = (sortItem, apiRef) => {\n  const column = apiRef.current.getColumn(sortItem.field);\n  if (!column || sortItem.sort === null) {\n    return null;\n  }\n  let comparator;\n  if (column.getSortComparator) {\n    comparator = column.getSortComparator(sortItem.sort);\n  } else {\n    comparator = isDesc(sortItem.sort) ? (...args) => -1 * column.sortComparator(...args) : column.sortComparator;\n  }\n  if (!comparator) {\n    return null;\n  }\n  const getSortCellParams = id => ({\n    id,\n    field: column.field,\n    rowNode: apiRef.current.getRowNode(id),\n    value: apiRef.current.getCellValue(id, column.field),\n    api: apiRef.current\n  });\n  return {\n    getSortCellParams,\n    comparator\n  };\n};\n/**\n * Compare two rows according to a list of valid sort items.\n * The `row1Params` and `row2Params` must have the same length as `parsedSortItems`,\n * and each of their index must contain the `GridSortCellParams` of the sort item with the same index.\n * @param {GridParsedSortItem[]} parsedSortItems All the sort items with which we want to compare the rows.\n * @param {GridRowAggregatedSortingParams} row1 The node and params of the 1st row for each sort item.\n * @param {GridRowAggregatedSortingParams} row2 The node and params of the 2nd row for each sort item.\n */\nconst compareRows = (parsedSortItems, row1, row2) => {\n  return parsedSortItems.reduce((res, item, index) => {\n    if (res !== 0) {\n      // return the results of the first comparator which distinguish the two rows\n      return res;\n    }\n    const sortCellParams1 = row1.params[index];\n    const sortCellParams2 = row2.params[index];\n    res = item.comparator(sortCellParams1.value, sortCellParams2.value, sortCellParams1, sortCellParams2);\n    return res;\n  }, 0);\n};\n\n/**\n * Generates a method to easily sort a list of rows according to the current sort model.\n * @param {GridSortModel} sortModel The model with which we want to sort the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridSortingModelApplier | null} A method that generates a list of sorted row ids from a list of rows according to the current sort model. If `null`, we consider that the rows should remain in the order there were provided.\n */\nexport const buildAggregatedSortingApplier = (sortModel, apiRef) => {\n  const comparatorList = sortModel.map(item => parseSortItem(item, apiRef)).filter(comparator => !!comparator);\n  if (comparatorList.length === 0) {\n    return null;\n  }\n  return rowList => rowList.map(node => ({\n    node,\n    params: comparatorList.map(el => el.getSortCellParams(node.id))\n  })).sort((a, b) => compareRows(comparatorList, a, b)).map(row => row.node.id);\n};\nexport const getNextGridSortDirection = (sortingOrder, current) => {\n  const currentIdx = sortingOrder.indexOf(current);\n  if (!current || currentIdx === -1 || currentIdx + 1 === sortingOrder.length) {\n    return sortingOrder[0];\n  }\n  return sortingOrder[currentIdx + 1];\n};\nconst gridNillComparator = (v1, v2) => {\n  if (v1 == null && v2 != null) {\n    return -1;\n  }\n  if (v2 == null && v1 != null) {\n    return 1;\n  }\n  if (v1 == null && v2 == null) {\n    return 0;\n  }\n  return null;\n};\nconst collator = new Intl.Collator();\nexport const gridStringOrNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (typeof value1 === 'string') {\n    return collator.compare(value1.toString(), value2.toString());\n  }\n  return value1 - value2;\n};\nexport const gridNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  return Number(value1) - Number(value2);\n};\nexport const gridDateComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (value1 > value2) {\n    return 1;\n  }\n  if (value1 < value2) {\n    return -1;\n  }\n  return 0;\n};","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\n/**\n * Get the columns state\n * @category Virtualization\n */\nexport const gridVirtualizationSelector = state => state.virtualization;\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabled);\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationColumnEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForColumns);\n\n/**\n * Get the render context\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextSelector = createSelector(gridVirtualizationSelector, state => state.renderContext);\n\n/**\n * Get the render context, with only columns filled in.\n * This is cached, so it can be used to only re-render when the column interval changes.\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextColumnsSelector = createSelectorMemoized(state => state.virtualization.renderContext.firstColumnIndex, state => state.virtualization.renderContext.lastColumnIndex, (firstColumnIndex, lastColumnIndex) => ({\n  firstColumnIndex,\n  lastColumnIndex\n}));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport useTimeout from '@mui/utils/useTimeout';\nimport { useTheme } from '@mui/material/styles';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { useResizeObserver } from '../../utils/useResizeObserver';\nimport { useRunOnce } from '../../utils/useRunOnce';\nimport { gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnPositionsSelector, gridHasColSpanSelector } from '../columns/gridColumnsSelector';\nimport { gridDimensionsSelector } from '../dimensions/gridDimensionsSelectors';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nimport { useGridVisibleRows, getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiEventHandler } from '../../utils';\nimport { clamp, range } from '../../../utils/utils';\nimport { selectedIdsLookupSelector } from '../rowSelection/gridRowSelectionSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getFirstNonSpannedColumnToRender } from '../columns/gridColumnsUtils';\nimport { getMinimalContentHeight } from '../rows/gridRowsUtils';\nimport { gridRenderContextSelector, gridVirtualizationEnabledSelector, gridVirtualizationColumnEnabledSelector } from './gridVirtualizationSelectors';\nimport { EMPTY_RENDER_CONTEXT } from './useGridVirtualization';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MINIMUM_COLUMN_WIDTH = 50;\nvar ScrollDirection = /*#__PURE__*/function (ScrollDirection) {\n  ScrollDirection[ScrollDirection[\"NONE\"] = 0] = \"NONE\";\n  ScrollDirection[ScrollDirection[\"UP\"] = 1] = \"UP\";\n  ScrollDirection[ScrollDirection[\"DOWN\"] = 2] = \"DOWN\";\n  ScrollDirection[ScrollDirection[\"LEFT\"] = 3] = \"LEFT\";\n  ScrollDirection[ScrollDirection[\"RIGHT\"] = 4] = \"RIGHT\";\n  return ScrollDirection;\n}(ScrollDirection || {});\nconst EMPTY_SCROLL_POSITION = {\n  top: 0,\n  left: 0\n};\nexport const EMPTY_DETAIL_PANELS = Object.freeze(new Map());\nconst createScrollCache = (mode, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) => ({\n  direction: ScrollDirection.NONE,\n  buffer: bufferForDirection(mode, ScrollDirection.NONE, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer)\n});\nconst isJSDOM = typeof window !== 'undefined' ? /jsdom/.test(window.navigator.userAgent) : false;\nexport const useGridVirtualScroller = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const enabled = useGridSelector(apiRef, gridVirtualizationEnabledSelector) && !isJSDOM;\n  const enabledForColumns = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector) && !isJSDOM;\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const outerSize = dimensions.viewportOuterSize;\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const hasBottomPinnedRows = pinnedRows.bottom.length > 0;\n  const [panels, setPanels] = React.useState(EMPTY_DETAIL_PANELS);\n  const theme = useTheme();\n  const cellFocus = useGridSelector(apiRef, gridFocusCellSelector);\n  const cellTabIndex = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const selectedRowsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const gridRootRef = apiRef.current.rootElementRef;\n  const mainRef = apiRef.current.mainElementRef;\n  const scrollerRef = apiRef.current.virtualScrollerRef;\n  const scrollbarVerticalRef = React.useRef(null);\n  const scrollbarHorizontalRef = React.useRef(null);\n  const contentHeight = dimensions.contentSize.height;\n  const columnsTotalWidth = dimensions.columnsTotalWidth;\n  const hasColSpan = useGridSelector(apiRef, gridHasColSpanSelector);\n  useResizeObserver(mainRef, () => apiRef.current.resize());\n\n  /*\n   * Scroll context logic\n   * ====================\n   * We only render the cells contained in the `renderContext`. However, when the user starts scrolling the grid\n   * in a direction, we want to render as many cells as possible in that direction, as to avoid presenting white\n   * areas if the user scrolls too fast/far and the viewport ends up in a region we haven't rendered yet. To render\n   * more cells, we store some offsets to add to the viewport in `scrollCache.buffer`. Those offsets make the render\n   * context wider in the direction the user is going, but also makes the buffer around the viewport `0` for the\n   * dimension (horizontal or vertical) in which the user is not scrolling. So if the normal viewport is 8 columns\n   * wide, with a 1 column buffer (10 columns total), then we want it to be exactly 8 columns wide during vertical\n   * scroll.\n   * However, we don't want the rows in the old context to re-render from e.g. 10 columns to 8 columns, because that's\n   * work that's not necessary. Thus we store the context at the start of the scroll in `frozenContext`, and the rows\n   * that are part of this old context will keep their same render context as to avoid re-rendering.\n   */\n  const scrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousContextScrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousRowContext = React.useRef(EMPTY_RENDER_CONTEXT);\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\n  const scrollTimeout = useTimeout();\n  const frozenContext = React.useRef(undefined);\n  const scrollCache = useLazyRef(() => createScrollCache(theme.direction, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6)).current;\n  const focusedCell = {\n    rowIndex: React.useMemo(() => cellFocus ? currentPage.rows.findIndex(row => row.id === cellFocus.id) : -1, [cellFocus, currentPage.rows]),\n    columnIndex: React.useMemo(() => cellFocus ? visibleColumns.findIndex(column => column.field === cellFocus.field) : -1, [cellFocus, visibleColumns])\n  };\n  const updateRenderContext = React.useCallback(nextRenderContext => {\n    if (areRenderContextsEqual(nextRenderContext, apiRef.current.state.virtualization.renderContext)) {\n      return;\n    }\n    const didRowsIntervalChange = nextRenderContext.firstRowIndex !== previousRowContext.current.firstRowIndex || nextRenderContext.lastRowIndex !== previousRowContext.current.lastRowIndex;\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        virtualization: _extends({}, state.virtualization, {\n          renderContext: nextRenderContext\n        })\n      });\n    });\n\n    // The lazy-loading hook is listening to `renderedRowsIntervalChange`,\n    // but only does something if the dimensions are also available.\n    // So we wait until we have valid dimensions before publishing the first event.\n    if (dimensions.isReady && didRowsIntervalChange) {\n      previousRowContext.current = nextRenderContext;\n      apiRef.current.publishEvent('renderedRowsIntervalChange', nextRenderContext);\n    }\n    previousContextScrollPosition.current = scrollPosition.current;\n  }, [apiRef, dimensions.isReady]);\n  const triggerUpdateRenderContext = () => {\n    const newScroll = {\n      top: scrollerRef.current.scrollTop,\n      left: scrollerRef.current.scrollLeft\n    };\n    const dx = newScroll.left - scrollPosition.current.left;\n    const dy = newScroll.top - scrollPosition.current.top;\n    const isScrolling = dx !== 0 || dy !== 0;\n    scrollPosition.current = newScroll;\n    const direction = isScrolling ? directionForDelta(dx, dy) : ScrollDirection.NONE;\n\n    // Since previous render, we have scrolled...\n    const rowScroll = Math.abs(scrollPosition.current.top - previousContextScrollPosition.current.top);\n    const columnScroll = Math.abs(scrollPosition.current.left - previousContextScrollPosition.current.left);\n\n    // PERF: use the computed minimum column width instead of a static one\n    const didCrossThreshold = rowScroll >= dimensions.rowHeight || columnScroll >= MINIMUM_COLUMN_WIDTH;\n    const didChangeDirection = scrollCache.direction !== direction;\n    const shouldUpdate = didCrossThreshold || didChangeDirection;\n    if (!shouldUpdate) {\n      return renderContext;\n    }\n\n    // Render a new context\n\n    if (didChangeDirection) {\n      switch (direction) {\n        case ScrollDirection.NONE:\n        case ScrollDirection.LEFT:\n        case ScrollDirection.RIGHT:\n          frozenContext.current = undefined;\n          break;\n        default:\n          frozenContext.current = renderContext;\n          break;\n      }\n    }\n    scrollCache.direction = direction;\n    scrollCache.buffer = bufferForDirection(theme.direction, direction, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6);\n    const inputs = inputsSelector(apiRef, rootProps, enabled, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n\n    // Prevents batching render context changes\n    ReactDOM.flushSync(() => {\n      updateRenderContext(nextRenderContext);\n    });\n    scrollTimeout.start(1000, triggerUpdateRenderContext);\n    return nextRenderContext;\n  };\n  const forceUpdateRenderContext = () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabled, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    updateRenderContext(nextRenderContext);\n  };\n  const handleScroll = useEventCallback(event => {\n    const {\n      scrollTop,\n      scrollLeft\n    } = event.currentTarget;\n\n    // On iOS and macOS, negative offsets are possible when swiping past the start\n    if (scrollTop < 0) {\n      return;\n    }\n    if (theme.direction === 'ltr') {\n      if (scrollLeft < 0) {\n        return;\n      }\n    }\n    if (theme.direction === 'rtl') {\n      if (scrollLeft > 0) {\n        return;\n      }\n    }\n    const nextRenderContext = triggerUpdateRenderContext();\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollTop,\n      left: scrollLeft,\n      renderContext: nextRenderContext\n    });\n  });\n  const handleWheel = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerWheel', {}, event);\n  });\n  const handleTouchMove = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerTouchMove', {}, event);\n  });\n  const getRows = (params = {}) => {\n    if (!params.rows && !currentPage.range) {\n      return [];\n    }\n    const baseRenderContext = params.renderContext ?? renderContext;\n    const isLastSection = !hasBottomPinnedRows && params.position === undefined || hasBottomPinnedRows && params.position === 'bottom';\n    const isPinnedSection = params.position !== undefined;\n    let rowIndexOffset;\n    // FIXME: Why is the switch check exhaustiveness not validated with typescript-eslint?\n    // eslint-disable-next-line default-case\n    switch (params.position) {\n      case 'top':\n        rowIndexOffset = 0;\n        break;\n      case 'bottom':\n        rowIndexOffset = pinnedRows.top.length + currentPage.rows.length;\n        break;\n      case undefined:\n        rowIndexOffset = pinnedRows.top.length;\n        break;\n    }\n    const rowModels = params.rows ?? currentPage.rows;\n    const firstRowToRender = baseRenderContext.firstRowIndex;\n    const lastRowToRender = Math.min(baseRenderContext.lastRowIndex, rowModels.length);\n    const rowIndexes = params.rows ? range(0, params.rows.length) : range(firstRowToRender, lastRowToRender);\n    let virtualRowIndex = -1;\n    if (!isPinnedSection && focusedCell.rowIndex !== -1) {\n      if (focusedCell.rowIndex < firstRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.unshift(virtualRowIndex);\n      }\n      if (focusedCell.rowIndex >= lastRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.push(virtualRowIndex);\n      }\n    }\n    const rows = [];\n    const rowProps = rootProps.slotProps?.row;\n    const columnPositions = gridColumnPositionsSelector(apiRef);\n    rowIndexes.forEach(rowIndexInPage => {\n      const {\n        id,\n        model\n      } = rowModels[rowIndexInPage];\n\n      // NOTE: This is an expensive feature, the colSpan code could be optimized.\n      if (hasColSpan) {\n        const minFirstColumn = pinnedColumns.left.length;\n        const maxLastColumn = visibleColumns.length - pinnedColumns.right.length;\n        apiRef.current.calculateColSpan({\n          rowId: id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n        if (pinnedColumns.left.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: 0,\n            maxLastColumn: pinnedColumns.left.length,\n            columns: visibleColumns\n          });\n        }\n        if (pinnedColumns.right.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: visibleColumns.length - pinnedColumns.right.length,\n            maxLastColumn: visibleColumns.length,\n            columns: visibleColumns\n          });\n        }\n      }\n      const hasFocus = cellFocus?.id === id;\n      const baseRowHeight = !apiRef.current.rowHasAutoHeight(id) ? apiRef.current.unstable_getRowHeight(id) : 'auto';\n      let isSelected;\n      if (selectedRowsLookup[id] == null) {\n        isSelected = false;\n      } else {\n        isSelected = apiRef.current.isRowSelectable(id);\n      }\n      let isFirstVisible = false;\n      if (params.position === undefined) {\n        isFirstVisible = rowIndexInPage === 0;\n      }\n      let isLastVisible = false;\n      if (isLastSection) {\n        if (!isPinnedSection) {\n          const lastIndex = currentPage.rows.length - 1;\n          const isLastVisibleRowIndex = rowIndexInPage === lastIndex;\n          if (isLastVisibleRowIndex) {\n            isLastVisible = true;\n          }\n        } else {\n          isLastVisible = rowIndexInPage === rowModels.length - 1;\n        }\n      }\n      const isVirtualRow = rowIndexInPage === virtualRowIndex;\n      const isNotVisible = isVirtualRow;\n      let tabbableCell = null;\n      if (cellTabIndex !== null && cellTabIndex.id === id) {\n        const cellParams = apiRef.current.getCellParams(id, cellTabIndex.field);\n        tabbableCell = cellParams.cellMode === 'view' ? cellTabIndex.field : null;\n      }\n      let currentRenderContext = baseRenderContext;\n      if (!isPinnedSection && frozenContext.current && rowIndexInPage >= frozenContext.current.firstRowIndex && rowIndexInPage < frozenContext.current.lastRowIndex) {\n        currentRenderContext = frozenContext.current;\n      }\n      const offsetLeft = computeOffsetLeft(columnPositions, currentRenderContext, theme.direction, pinnedColumns.left.length);\n      const rowIndex = (currentPage?.range?.firstRowIndex || 0) + rowIndexOffset + rowIndexInPage;\n      rows.push( /*#__PURE__*/_jsx(rootProps.slots.row, _extends({\n        row: model,\n        rowId: id,\n        index: rowIndex,\n        selected: isSelected,\n        offsetTop: params.rows ? undefined : rowsMeta.positions[rowIndexInPage],\n        offsetLeft: offsetLeft,\n        dimensions: dimensions,\n        rowHeight: baseRowHeight,\n        tabbableCell: tabbableCell,\n        pinnedColumns: pinnedColumns,\n        visibleColumns: visibleColumns,\n        renderContext: currentRenderContext,\n        focusedColumnIndex: hasFocus ? focusedCell.columnIndex : undefined,\n        isFirstVisible: isFirstVisible,\n        isLastVisible: isLastVisible,\n        isNotVisible: isNotVisible\n      }, rowProps), id));\n      const panel = panels.get(id);\n      if (panel) {\n        rows.push(panel);\n      }\n      if (isLastVisible) {\n        rows.push(apiRef.current.getInfiniteLoadingTriggerElement?.({\n          lastRowId: id\n        }));\n      }\n    });\n    return rows;\n  };\n  const needsHorizontalScrollbar = outerSize.width && columnsTotalWidth >= outerSize.width;\n  const scrollerStyle = React.useMemo(() => ({\n    overflowX: !needsHorizontalScrollbar ? 'hidden' : undefined,\n    overflowY: rootProps.autoHeight ? 'hidden' : undefined\n  }), [needsHorizontalScrollbar, rootProps.autoHeight]);\n  const contentSize = React.useMemo(() => {\n    // In cases where the columns exceed the available width,\n    // the horizontal scrollbar should be shown even when there're no rows.\n    // Keeping 1px as minimum height ensures that the scrollbar will visible if necessary.\n    const height = Math.max(contentHeight, 1);\n    const size = {\n      width: needsHorizontalScrollbar ? columnsTotalWidth : 'auto',\n      height\n    };\n    if (rootProps.autoHeight) {\n      if (currentPage.rows.length === 0) {\n        size.height = getMinimalContentHeight(apiRef); // Give room to show the overlay when there no rows.\n      } else {\n        size.height = contentHeight;\n      }\n    }\n    return size;\n  }, [apiRef, columnsTotalWidth, contentHeight, needsHorizontalScrollbar, rootProps.autoHeight, currentPage.rows.length]);\n  React.useEffect(() => {\n    apiRef.current.publishEvent('virtualScrollerContentSizeChange');\n  }, [apiRef, contentSize]);\n  useEnhancedEffect(() => {\n    // FIXME: Is this really necessary?\n    apiRef.current.resize();\n  }, [apiRef, rowsMeta.currentPageTotalHeight]);\n  useEnhancedEffect(() => {\n    if (enabled) {\n      // TODO a scroll reset should not be necessary\n      scrollerRef.current.scrollLeft = 0;\n      scrollerRef.current.scrollTop = 0;\n    }\n  }, [enabled, gridRootRef, scrollerRef]);\n  useRunOnce(outerSize.width !== 0, () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabled, enabledForColumns);\n    const initialRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    updateRenderContext(initialRenderContext);\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollPosition.current.top,\n      left: scrollPosition.current.left,\n      renderContext: initialRenderContext\n    });\n  });\n  apiRef.current.register('private', {\n    updateRenderContext: forceUpdateRenderContext\n  });\n  useGridApiEventHandler(apiRef, 'columnsChange', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', forceUpdateRenderContext);\n  return {\n    renderContext,\n    setPanels,\n    getRows,\n    getContainerProps: () => ({\n      ref: mainRef\n    }),\n    getScrollerProps: () => ({\n      ref: scrollerRef,\n      tabIndex: -1,\n      onScroll: handleScroll,\n      onWheel: handleWheel,\n      onTouchMove: handleTouchMove,\n      style: scrollerStyle,\n      role: 'presentation'\n    }),\n    getContentProps: () => ({\n      style: contentSize,\n      role: 'presentation'\n    }),\n    getRenderZoneProps: () => ({\n      role: 'rowgroup'\n    }),\n    getScrollbarVerticalProps: () => ({\n      ref: scrollbarVerticalRef,\n      role: 'presentation'\n    }),\n    getScrollbarHorizontalProps: () => ({\n      ref: scrollbarHorizontalRef,\n      role: 'presentation'\n    })\n  };\n};\nfunction inputsSelector(apiRef, rootProps, enabled, enabledForColumns) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  const currentPage = getVisibleRows(apiRef, rootProps);\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const lastRowId = apiRef.current.state.rows.dataRowIds.at(-1);\n  const lastColumn = visibleColumns.at(-1);\n  return {\n    enabled,\n    enabledForColumns,\n    apiRef,\n    autoHeight: rootProps.autoHeight,\n    rowBufferPx: rootProps.rowBufferPx,\n    columnBufferPx: rootProps.columnBufferPx,\n    leftPinnedWidth: dimensions.leftPinnedWidth,\n    columnsTotalWidth: dimensions.columnsTotalWidth,\n    viewportInnerWidth: dimensions.viewportInnerSize.width,\n    viewportInnerHeight: dimensions.viewportInnerSize.height,\n    lastRowHeight: lastRowId !== undefined ? apiRef.current.unstable_getRowHeight(lastRowId) : 0,\n    lastColumnWidth: lastColumn?.computedWidth ?? 0,\n    rowsMeta: gridRowsMetaSelector(apiRef.current.state),\n    columnPositions: gridColumnPositionsSelector(apiRef),\n    rows: currentPage.rows,\n    range: currentPage.range,\n    pinnedColumns: gridVisiblePinnedColumnDefinitionsSelector(apiRef),\n    visibleColumns\n  };\n}\nfunction computeRenderContext(inputs, scrollPosition, scrollCache) {\n  let renderContext;\n  if (!inputs.enabled) {\n    renderContext = {\n      firstRowIndex: 0,\n      lastRowIndex: inputs.rows.length,\n      firstColumnIndex: 0,\n      lastColumnIndex: inputs.visibleColumns.length\n    };\n  } else {\n    const {\n      top,\n      left\n    } = scrollPosition;\n    const realLeft = Math.abs(left) + inputs.leftPinnedWidth;\n\n    // Clamp the value because the search may return an index out of bounds.\n    // In the last index, this is not needed because Array.slice doesn't include it.\n    const firstRowIndex = Math.min(getNearestIndexToRender(inputs, top, {\n      atStart: true,\n      lastPosition: inputs.rowsMeta.positions[inputs.rowsMeta.positions.length - 1] + inputs.lastRowHeight\n    }), inputs.rowsMeta.positions.length - 1);\n    const lastRowIndex = inputs.autoHeight ? firstRowIndex + inputs.rows.length : getNearestIndexToRender(inputs, top + inputs.viewportInnerHeight);\n    let firstColumnIndex = 0;\n    let lastColumnIndex = inputs.columnPositions.length;\n    if (inputs.enabledForColumns) {\n      let hasRowWithAutoHeight = false;\n      const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n        firstIndex: firstRowIndex,\n        lastIndex: lastRowIndex,\n        minFirstIndex: 0,\n        maxLastIndex: inputs.rows.length,\n        bufferBefore: scrollCache.buffer.rowBefore,\n        bufferAfter: scrollCache.buffer.rowAfter,\n        positions: inputs.rowsMeta.positions,\n        lastSize: inputs.lastRowHeight\n      });\n      for (let i = firstRowToRender; i < lastRowToRender && !hasRowWithAutoHeight; i += 1) {\n        const row = inputs.rows[i];\n        hasRowWithAutoHeight = inputs.apiRef.current.rowHasAutoHeight(row.id);\n      }\n      if (!hasRowWithAutoHeight) {\n        firstColumnIndex = binarySearch(realLeft, inputs.columnPositions, {\n          atStart: true,\n          lastPosition: inputs.columnsTotalWidth\n        });\n        lastColumnIndex = binarySearch(realLeft + inputs.viewportInnerWidth, inputs.columnPositions);\n      }\n    }\n    renderContext = {\n      firstRowIndex,\n      lastRowIndex,\n      firstColumnIndex,\n      lastColumnIndex\n    };\n  }\n  const actualRenderContext = deriveRenderContext(inputs, renderContext, scrollCache);\n  return actualRenderContext;\n}\nfunction getNearestIndexToRender(inputs, offset, options) {\n  const lastMeasuredIndexRelativeToAllRows = inputs.apiRef.current.getLastMeasuredRowIndex();\n  let allRowsMeasured = lastMeasuredIndexRelativeToAllRows === Infinity;\n  if (inputs.range?.lastRowIndex && !allRowsMeasured) {\n    // Check if all rows in this page are already measured\n    allRowsMeasured = lastMeasuredIndexRelativeToAllRows >= inputs.range.lastRowIndex;\n  }\n  const lastMeasuredIndexRelativeToCurrentPage = clamp(lastMeasuredIndexRelativeToAllRows - (inputs.range?.firstRowIndex || 0), 0, inputs.rowsMeta.positions.length);\n  if (allRowsMeasured || inputs.rowsMeta.positions[lastMeasuredIndexRelativeToCurrentPage] >= offset) {\n    // If all rows were measured (when no row has \"auto\" as height) or all rows before the offset\n    // were measured, then use a binary search because it's faster.\n    return binarySearch(offset, inputs.rowsMeta.positions, options);\n  }\n\n  // Otherwise, use an exponential search.\n  // If rows have \"auto\" as height, their positions will be based on estimated heights.\n  // In this case, we can skip several steps until we find a position higher than the offset.\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  return exponentialSearch(offset, inputs.rowsMeta.positions, lastMeasuredIndexRelativeToCurrentPage, options);\n}\n\n/**\n * Accepts as input a raw render context (the area visible in the viewport) and adds\n * computes the actual render context based on pinned elements, buffer dimensions and\n * spanning.\n */\nfunction deriveRenderContext(inputs, nextRenderContext, scrollCache) {\n  const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstRowIndex,\n    lastIndex: nextRenderContext.lastRowIndex,\n    minFirstIndex: 0,\n    maxLastIndex: inputs.rows.length,\n    bufferBefore: scrollCache.buffer.rowBefore,\n    bufferAfter: scrollCache.buffer.rowAfter,\n    positions: inputs.rowsMeta.positions,\n    lastSize: inputs.lastRowHeight\n  });\n  const [initialFirstColumnToRender, lastColumnToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstColumnIndex,\n    lastIndex: nextRenderContext.lastColumnIndex,\n    minFirstIndex: inputs.pinnedColumns.left.length,\n    maxLastIndex: inputs.visibleColumns.length - inputs.pinnedColumns.right.length,\n    bufferBefore: scrollCache.buffer.columnBefore,\n    bufferAfter: scrollCache.buffer.columnAfter,\n    positions: inputs.columnPositions,\n    lastSize: inputs.lastColumnWidth\n  });\n  const firstColumnToRender = getFirstNonSpannedColumnToRender({\n    firstColumnToRender: initialFirstColumnToRender,\n    apiRef: inputs.apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows: inputs.rows\n  });\n  return {\n    firstRowIndex: firstRowToRender,\n    lastRowIndex: lastRowToRender,\n    firstColumnIndex: firstColumnToRender,\n    lastColumnIndex: lastColumnToRender\n  };\n}\n/**\n * Use binary search to avoid looping through all possible positions.\n * The `options.atStart` provides the possibility to match for the first element that\n * intersects the screen, even if said element's start position is before `offset`. In\n * other words, we search for `offset + width`.\n */\nfunction binarySearch(offset, positions, options = undefined, sliceStart = 0, sliceEnd = positions.length) {\n  if (positions.length <= 0) {\n    return -1;\n  }\n  if (sliceStart >= sliceEnd) {\n    return sliceStart;\n  }\n  const pivot = sliceStart + Math.floor((sliceEnd - sliceStart) / 2);\n  const position = positions[pivot];\n  let isBefore;\n  if (options?.atStart) {\n    const width = (pivot === positions.length - 1 ? options.lastPosition : positions[pivot + 1]) - position;\n    isBefore = offset - width < position;\n  } else {\n    isBefore = offset <= position;\n  }\n  return isBefore ? binarySearch(offset, positions, options, sliceStart, pivot) : binarySearch(offset, positions, options, pivot + 1, sliceEnd);\n}\nfunction exponentialSearch(offset, positions, index, options = undefined) {\n  let interval = 1;\n  while (index < positions.length && Math.abs(positions[index]) < offset) {\n    index += interval;\n    interval *= 2;\n  }\n  return binarySearch(offset, positions, options, Math.floor(index / 2), Math.min(index, positions.length));\n}\nfunction getIndexesToRender({\n  firstIndex,\n  lastIndex,\n  bufferBefore,\n  bufferAfter,\n  minFirstIndex,\n  maxLastIndex,\n  positions,\n  lastSize\n}) {\n  const firstPosition = positions[firstIndex] - bufferBefore;\n  const lastPosition = positions[lastIndex] + bufferAfter;\n  const firstIndexPadded = binarySearch(firstPosition, positions, {\n    atStart: true,\n    lastPosition: positions[positions.length - 1] + lastSize\n  });\n  const lastIndexPadded = binarySearch(lastPosition, positions);\n  return [clamp(firstIndexPadded, minFirstIndex, maxLastIndex), clamp(lastIndexPadded, minFirstIndex, maxLastIndex)];\n}\nexport function areRenderContextsEqual(context1, context2) {\n  if (context1 === context2) {\n    return true;\n  }\n  return context1.firstRowIndex === context2.firstRowIndex && context1.lastRowIndex === context2.lastRowIndex && context1.firstColumnIndex === context2.firstColumnIndex && context1.lastColumnIndex === context2.lastColumnIndex;\n}\nexport function computeOffsetLeft(columnPositions, renderContext, direction, pinnedLeftLength) {\n  const factor = direction === 'ltr' ? 1 : -1;\n  const left = factor * (columnPositions[renderContext.firstColumnIndex] ?? 0) - (columnPositions[pinnedLeftLength] ?? 0);\n  return Math.abs(left);\n}\nfunction directionForDelta(dx, dy) {\n  if (dx === 0 && dy === 0) {\n    return ScrollDirection.NONE;\n  }\n  /* eslint-disable */\n  if (Math.abs(dy) >= Math.abs(dx)) {\n    if (dy > 0) {\n      return ScrollDirection.DOWN;\n    } else {\n      return ScrollDirection.UP;\n    }\n  } else {\n    if (dx > 0) {\n      return ScrollDirection.RIGHT;\n    } else {\n      return ScrollDirection.LEFT;\n    }\n  }\n  /* eslint-enable */\n}\nfunction bufferForDirection(mode, direction, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) {\n  if (mode === 'rtl') {\n    switch (direction) {\n      case ScrollDirection.LEFT:\n        direction = ScrollDirection.RIGHT;\n        break;\n      case ScrollDirection.RIGHT:\n        direction = ScrollDirection.LEFT;\n        break;\n      default:\n    }\n  }\n  switch (direction) {\n    case ScrollDirection.NONE:\n      return {\n        rowAfter: rowBufferPx,\n        rowBefore: rowBufferPx,\n        columnAfter: columnBufferPx,\n        columnBefore: columnBufferPx\n      };\n    case ScrollDirection.LEFT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: horizontalBuffer\n      };\n    case ScrollDirection.RIGHT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: horizontalBuffer,\n        columnBefore: 0\n      };\n    case ScrollDirection.UP:\n      return {\n        rowAfter: 0,\n        rowBefore: verticalBuffer,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    case ScrollDirection.DOWN:\n      return {\n        rowAfter: verticalBuffer,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    default:\n      // eslint unable to figure out enum exhaustiveness\n      throw new Error('unreachable');\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport const EMPTY_RENDER_CONTEXT = {\n  firstRowIndex: 0,\n  lastRowIndex: 0,\n  firstColumnIndex: 0,\n  lastColumnIndex: 0\n};\nexport const virtualizationStateInitializer = (state, props) => {\n  const virtualization = {\n    enabled: !props.disableVirtualization,\n    enabledForColumns: true,\n    renderContext: EMPTY_RENDER_CONTEXT\n  };\n  return _extends({}, state, {\n    virtualization\n  });\n};\nexport function useGridVirtualization(apiRef, props) {\n  /*\n   * API METHODS\n   */\n\n  const setVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled\n      })\n    }));\n  };\n  const setColumnVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabledForColumns: enabled\n      })\n    }));\n  };\n  const api = {\n    unstable_setVirtualization: setVirtualization,\n    unstable_setColumnVirtualization: setColumnVirtualization\n  };\n  useGridApiMethod(apiRef, api, 'public');\n\n  /*\n   * EFFECTS\n   */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(() => {\n    setVirtualization(!props.disableVirtualization);\n  }, [props.disableVirtualization]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","import * as React from 'react';\nexport const useFirstRender = callback => {\n  const isFirstRender = React.useRef(true);\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    callback();\n  }\n};","// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor(timeout = CLEANUP_TIMER_LOOP_MILLIS) {\n    this.timeouts = new Map();\n    this.cleanupTimeout = CLEANUP_TIMER_LOOP_MILLIS;\n    this.cleanupTimeout = timeout;\n  }\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n}","export class FinalizationRegistryBasedCleanupTracking {\n  constructor() {\n    this.registry = new FinalizationRegistry(unsubscribe => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  reset() {}\n}","import * as React from 'react';\nimport { TimerBasedCleanupTracking } from '../../utils/cleanupTracking/TimerBasedCleanupTracking';\nimport { FinalizationRegistryBasedCleanupTracking } from '../../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking';\n/**\n * Signal to the underlying logic what version of the public component API\n * of the data grid is exposed.\n */\nvar GridSignature = /*#__PURE__*/function (GridSignature) {\n  GridSignature[\"DataGrid\"] = \"DataGrid\";\n  GridSignature[\"DataGridPro\"] = \"DataGridPro\";\n  return GridSignature;\n}(GridSignature || {});\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {}\n\n// Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\nexport function createUseGridApiEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useGridApiEventHandler(apiRef, eventName, handler, options) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef();\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event, details) => {\n        if (!event.defaultMuiPrevented) {\n          handlerRef.current?.(params, event, details);\n        }\n      };\n      subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact,\n      // The callback below will be called once this reference stops being retained\n      () => {\n        subscription.current?.();\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event, details) => {\n          if (!event.defaultMuiPrevented) {\n            handlerRef.current?.(params, event, details);\n          }\n        };\n        subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      }\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n      return () => {\n        subscription.current?.();\n        subscription.current = null;\n      };\n    }, [apiRef, eventName, options]);\n  };\n}\nconst registryContainer = {\n  registry: null\n};\n\n// TODO: move to @mui/x-data-grid/internals\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCleanupTracking = () => {\n  registryContainer.registry?.reset();\n  registryContainer.registry = null;\n};\nexport const useGridApiEventHandler = createUseGridApiEventHandler(registryContainer);\nconst optionsSubscriberOptions = {\n  isFirst: true\n};\nexport function useGridApiOptionHandler(apiRef, eventName, handler) {\n  // Validate that only one per event name?\n  useGridApiEventHandler(apiRef, eventName, handler, optionsSubscriberOptions);\n}\nexport { GridSignature };","import * as React from 'react';\nexport function useGridApiMethod(privateApiRef, apiMethods, visibility) {\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    isFirstRender.current = false;\n    privateApiRef.current.register(visibility, apiMethods);\n  }, [privateApiRef, visibility, apiMethods]);\n  if (isFirstRender.current) {\n    privateApiRef.current.register(visibility, apiMethods);\n  }\n}","import * as React from 'react';\nexport function useGridLogger(privateApiRef, name) {\n  const logger = React.useRef(null);\n  if (logger.current) {\n    return logger.current;\n  }\n  const newLogger = privateApiRef.current.getLogger(name);\n  logger.current = newLogger;\n  return newLogger;\n}","import * as React from 'react';\nimport { isFunction } from '../../utils/utils';\nimport { useGridLogger } from './useGridLogger';\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const targetElement = isFunction(ref) ? ref() : ref?.current ?? null;\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    if (targetElement && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      setAdded(true);\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        targetElement.removeEventListener(eventName, wrapHandler, options);\n      };\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [targetElement, wrapHandler, eventName, added, logger, options, apiRef]);\n};","import * as React from 'react';\nexport const GridPrivateApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridPrivateApiContext.displayName = 'GridPrivateApiContext';\n}\nexport function useGridPrivateApiContext() {\n  const privateApiRef = React.useContext(GridPrivateApiContext);\n  if (privateApiRef === undefined) {\n    throw new Error(['MUI X: Could not find the data grid private context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the data grid.'].join('\\n'));\n  }\n  return privateApiRef;\n}","import * as React from 'react';\nimport { useLazyRef } from './useLazyRef';\nimport { useOnMount } from './useOnMount';\nimport { buildWarning } from '../../utils/warning';\nimport { fastObjectShallowCompare } from '../../utils/fastObjectShallowCompare';\nconst stateNotInitializedWarning = buildWarning(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\nfunction applySelector(apiRef, selector) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n  return selector(apiRef.current.state);\n}\nconst defaultCompare = Object.is;\nexport const objectShallowCompare = fastObjectShallowCompare;\nconst createRefs = () => ({\n  state: null,\n  equals: null,\n  selector: null\n});\nexport const useGridSelector = (apiRef, selector, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      stateNotInitializedWarning();\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelector(apiRef, selector));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelector(apiRef, refs.current.selector);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};","import * as React from 'react';\nimport { gridPaginationRowRangeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector } from '../features/pagination/gridPaginationSelector';\nimport { gridExpandedSortedRowEntriesSelector } from '../features/filter/gridFilterSelector';\nexport const getVisibleRows = (apiRef, props) => {\n  let rows;\n  let range;\n  if (props.pagination && props.paginationMode === 'client') {\n    range = gridPaginationRowRangeSelector(apiRef);\n    rows = gridPaginatedVisibleSortedGridRowEntriesSelector(apiRef);\n  } else {\n    rows = gridExpandedSortedRowEntriesSelector(apiRef);\n    if (rows.length === 0) {\n      range = null;\n    } else {\n      range = {\n        firstRowIndex: 0,\n        lastRowIndex: rows.length - 1\n      };\n    }\n  }\n  return {\n    rows,\n    range\n  };\n};\n\n/**\n * Computes the list of rows that are reachable by scroll.\n * Depending on whether pagination is enabled, it will return the rows in the current page.\n * - If the pagination is disabled or in server mode, it equals all the visible rows.\n * - If the row tree has several layers, it contains up to `state.pageSize` top level rows and all their descendants.\n * - If the row tree is flat, it only contains up to `state.pageSize` rows.\n */\nexport const useGridVisibleRows = (apiRef, props) => {\n  const response = getVisibleRows(apiRef, props);\n  return React.useMemo(() => ({\n    rows: response.rows,\n    range: response.range\n  }), [response.rows, response.range]);\n};","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst isDevEnvironment = process.env.NODE_ENV === 'development';\nconst noop = () => {};\nexport function useResizeObserver(ref, fn, enabled) {\n  const fnRef = React.useRef(null);\n  fnRef.current = fn;\n  useEnhancedEffect(() => {\n    if (enabled === false || typeof ResizeObserver === 'undefined') {\n      return noop;\n    }\n    let frameID = 0;\n    const target = ref.current;\n    const observer = new ResizeObserver(entries => {\n      // See https://github.com/mui/mui-x/issues/8733\n      // In dev, we avoid the React warning by moving the task to the next frame.\n      // In prod, we want the task to run in the same frame as to avoid tear.\n      if (isDevEnvironment) {\n        frameID = requestAnimationFrame(() => {\n          fnRef.current(entries);\n        });\n      } else {\n        fnRef.current(entries);\n      }\n    });\n    if (target) {\n      observer.observe(target);\n    }\n    return () => {\n      if (frameID) {\n        cancelAnimationFrame(frameID);\n      }\n      observer.disconnect();\n    };\n  }, [ref, enabled]);\n}","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst noop = () => {};\n\n/**\n * Runs an effect once, when `condition` is true.\n */\nexport const useRunOnce = (condition, effect) => {\n  const didRun = React.useRef(false);\n  useEnhancedEffect(() => {\n    if (didRun.current || !condition) {\n      return noop;\n    }\n    didRun.current = true;\n    return effect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [didRun.current || condition]);\n};","import { GridPinnedColumnPosition } from '../../hooks/features/columns';\nexport const getPinnedCellOffset = (pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions) => {\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  let pinnedOffset;\n  switch (pinnedPosition) {\n    case GridPinnedColumnPosition.LEFT:\n      pinnedOffset = columnPositions[columnIndex];\n      break;\n    case GridPinnedColumnPosition.RIGHT:\n      pinnedOffset = dimensions.columnsTotalWidth - columnPositions[columnIndex] - computedWidth + scrollbarWidth;\n      break;\n    default:\n      pinnedOffset = 0;\n      break;\n  }\n  return pinnedOffset;\n};","import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridArrowUpwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexport const GridArrowDownwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexport const GridKeyboardArrowRight = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexport const GridExpandMoreIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexport const GridFilterListIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\nexport const GridFilterAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexport const GridSearchIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexport const GridMenuIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexport const GridCheckCircleIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexport const GridColumnIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\"\n}), 'ColumnIcon');\nexport const GridSeparatorIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 19V5h2v14z\"\n}), 'Separator');\nexport const GridViewHeadlineIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\"\n}), 'ViewHeadline');\nexport const GridTableRowsIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z\"\n}), 'TableRows');\nexport const GridViewStreamIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 18h17v-6H4v6zM4 5v6h17V5H4z\"\n}), 'ViewStream');\nexport const GridTripleDotsVerticalIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'TripleDotsVertical');\nexport const GridCloseIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexport const GridAddIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexport const GridRemoveIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexport const GridLoadIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Load');\nexport const GridDragIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'Drag');\nexport const GridSaveAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexport const GridCheckIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexport const GridMoreVertIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\nexport const GridVisibilityOffIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexport const GridViewColumnIcon = createSvgIcon( /*#__PURE__*/_jsx(\"g\", {\n  children: /*#__PURE__*/_jsx(\"path\", {\n    d: \"M14.67,5v14H9.33V5H14.67z M15.67,19H21V5h-5.33V19z M8.33,19V5H3v14H8.33z\"\n  })\n}), 'ViewColumn');\nexport const GridClearIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\nexport const GridDeleteIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexport const GridDeleteForeverIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","export function isLeaf(node) {\n  return node.field !== undefined;\n}\n\n/**\n * A function used to process headerClassName params.\n */\n\n/**\n * The union type representing the [[GridColDef]] column header class type.\n */","var GridEditModes = /*#__PURE__*/function (GridEditModes) {\n  GridEditModes[\"Cell\"] = \"cell\";\n  GridEditModes[\"Row\"] = \"row\";\n  return GridEditModes;\n}(GridEditModes || {});\nvar GridCellModes = /*#__PURE__*/function (GridCellModes) {\n  GridCellModes[\"Edit\"] = \"edit\";\n  GridCellModes[\"View\"] = \"view\";\n  return GridCellModes;\n}(GridCellModes || {});\nvar GridRowModes = /*#__PURE__*/function (GridRowModes) {\n  GridRowModes[\"Edit\"] = \"edit\";\n  GridRowModes[\"View\"] = \"view\";\n  return GridRowModes;\n}(GridRowModes || {});\nexport { GridEditModes, GridCellModes, GridRowModes };","/**\n * Filter item definition interface.\n * @demos\n *   - [Custom filter operator](/x/react-data-grid/filtering/customization/#create-a-custom-operator)\n */\nvar GridLogicOperator = /*#__PURE__*/function (GridLogicOperator) {\n  GridLogicOperator[\"And\"] = \"and\";\n  GridLogicOperator[\"Or\"] = \"or\";\n  return GridLogicOperator;\n}(GridLogicOperator || {});\nexport { GridLogicOperator };","/**\n * Params passed to `apiRef.current.setEditCellValue`.\n */\nvar GridCellEditStartReasons = /*#__PURE__*/function (GridCellEditStartReasons) {\n  GridCellEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridCellEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridCellEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  GridCellEditStartReasons[\"pasteKeyDown\"] = \"pasteKeyDown\";\n  return GridCellEditStartReasons;\n}(GridCellEditStartReasons || {});\n/**\n * Params passed to the `cellEditStart` event.\n */\nvar GridCellEditStopReasons = /*#__PURE__*/function (GridCellEditStopReasons) {\n  GridCellEditStopReasons[\"cellFocusOut\"] = \"cellFocusOut\";\n  GridCellEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridCellEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridCellEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridCellEditStopReasons;\n}(GridCellEditStopReasons || {});\n/**\n * Params passed to the `cellEditStop event.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridCellEditStartReasons, GridCellEditStopReasons };","/**\n * Object passed as parameter in the row callbacks.\n * @demos\n *   - [Master detail](/x/react-data-grid/master-detail/)\n */\n/**\n * Object passed as parameter in the row `getRowClassName` callback prop.\n * @demos\n *   - [Styling rows](/x/react-data-grid/style/#styling-rows)\n */\n/**\n * Object passed as parameter in the row `getRowHeight` callback prop.\n */\n/**\n * The getRowHeight return value.\n */\nvar GridRowEditStartReasons = /*#__PURE__*/function (GridRowEditStartReasons) {\n  GridRowEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridRowEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridRowEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  return GridRowEditStartReasons;\n}(GridRowEditStartReasons || {});\n/**\n * Params passed to the `rowEditStart` event.\n */\nvar GridRowEditStopReasons = /*#__PURE__*/function (GridRowEditStopReasons) {\n  GridRowEditStopReasons[\"rowFocusOut\"] = \"rowFocusOut\";\n  GridRowEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridRowEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridRowEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridRowEditStopReasons;\n}(GridRowEditStopReasons || {});\n/**\n * Object passed as parameter in the row `getRowSpacing` callback prop.\n * @demos\n *   - [Row spacing](/x/react-data-grid/row-height/#row-spacing)\n */\n/**\n * The getRowSpacing return value.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridRowEditStartReasons, GridRowEditStopReasons };","import { GridPinnedColumnPosition } from '../hooks/features/columns/gridColumnsInterfaces';\nexport const shouldCellShowRightBorder = (pinnedPosition, indexInSection, sectionLength, showCellVerticalBorderRootProp, gridHasFiller) => {\n  const isSectionLastCell = indexInSection === sectionLength - 1;\n  if (pinnedPosition === GridPinnedColumnPosition.LEFT && isSectionLastCell) {\n    return true;\n  }\n  if (showCellVerticalBorderRootProp) {\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      return true;\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      return !isSectionLastCell;\n    }\n    // pinnedPosition === undefined, middle section\n    return !isSectionLastCell || gridHasFiller;\n  }\n  return false;\n};\nexport const shouldCellShowLeftBorder = (pinnedPosition, indexInSection) => {\n  return pinnedPosition === GridPinnedColumnPosition.RIGHT && indexInSection === 0;\n};","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector as reselectCreateSelector } from 'reselect';\nimport { buildWarning } from './warning';\nconst cache = new WeakMap();\nconst missingInstanceIdWarning = buildWarning(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\nfunction checkIsAPIRef(value) {\n  return 'current' in value && 'instanceId' in value.current;\n}\nconst DEFAULT_INSTANCE_ID = {\n  id: 'default'\n};\nexport const createSelector = (a, b, c, d, e, f, ...rest) => {\n  if (rest.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      const ve = e(state, instanceId);\n      return f(va, vb, vc, vd, ve);\n    };\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      return e(va, vb, vc, vd);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      return d(va, vb, vc);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      return c(va, vb);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      return b(va);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\nexport const createSelectorMemoized = (...args) => {\n  const selector = (stateOrApiRef, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        missingInstanceIdWarning();\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};","import { gridClasses } from '../constants/gridClasses';\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\nfunction escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nfunction getGridRowElementSelector(id) {\n  return `.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`;\n}\nexport function getGridRowElement(root, id) {\n  return root.querySelector(getGridRowElementSelector(id));\n}\nexport function getGridCellElement(root, {\n  id,\n  field\n}) {\n  const rowSelector = getGridRowElementSelector(id);\n  const cellSelector = `.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`;\n  const selector = `${rowSelector} ${cellSelector}`;\n  return root.querySelector(selector);\n}\n\n// https://www.abeautifulsite.net/posts/finding-the-active-element-in-a-shadow-root/\nexport const getActiveElement = (root = document) => {\n  const activeEl = root.activeElement;\n  if (!activeEl) {\n    return null;\n  }\n  if (activeEl.shadowRoot) {\n    return getActiveElement(activeEl.shadowRoot);\n  }\n  return activeEl;\n};\nexport function isEventTargetInPortal(event) {\n  if (\n  // The target is not an element when triggered by a Select inside the cell\n  // See https://github.com/mui/material-ui/issues/10534\n  event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n    return true;\n  }\n  return false;\n}\nexport function getFieldFromHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-field');\n}\nexport function findHeaderElementFromField(elem, field) {\n  return elem.querySelector(`[data-field=\"${field}\"]`);\n}\nexport function getFieldsFromGroupHeaderElem(colCellEl) {\n  const fieldsString = colCellEl.getAttribute('data-fields');\n  return fieldsString?.startsWith('|-') ? fieldsString.slice(2, -2).split('-|-') : [];\n}\nexport function findGroupHeaderElementsFromField(elem, field) {\n  return Array.from(elem.querySelectorAll(`[data-fields*=\"|-${field}-|\"]`) ?? []);\n}\nexport function findGridCellElementsFromCol(col, api) {\n  const root = findParentElementFromClassName(col, gridClasses.root);\n  if (!root) {\n    throw new Error('MUI X: The root element is not found.');\n  }\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return [];\n  }\n  const colIndex = Number(ariaColIndex) - 1;\n  const cells = [];\n  if (!api.virtualScrollerRef?.current) {\n    return [];\n  }\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    let columnIndex = colIndex;\n    const cellColSpanInfo = api.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n      columnIndex = cellColSpanInfo.leftVisibleCellIndex;\n    }\n    const cell = rowElement.querySelector(`[data-colindex=\"${columnIndex}\"]`);\n    if (cell) {\n      cells.push(cell);\n    }\n  });\n  return cells;\n}\nexport function findGridElement(api, klass) {\n  return api.rootElementRef.current.querySelector(`.${gridClasses[klass]}`);\n}\nconst findPinnedCells = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (colIndex === null) {\n    return [];\n  }\n  const cells = [];\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    rowElement.querySelectorAll(`.${gridClasses[position === 'left' ? 'cell--pinnedLeft' : 'cell--pinnedRight']}`).forEach(cell => {\n      const currentColIndex = parseCellColIndex(cell);\n      if (currentColIndex !== null && filterFn(currentColIndex)) {\n        cells.push(cell);\n      }\n    });\n  });\n  return cells;\n};\nexport function findLeftPinnedCellsAfterCol(api, col) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: 'left',\n    filterFn: index => index > colIndex\n  });\n}\nexport function findRightPinnedCellsBeforeCol(api, col) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: 'right',\n    filterFn: index => index < colIndex\n  });\n}\nconst findPinnedHeaders = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (!api.columnHeadersContainerRef?.current) {\n    return [];\n  }\n  if (colIndex === null) {\n    return [];\n  }\n  const elements = [];\n  api.columnHeadersContainerRef.current.querySelectorAll(`.${gridClasses[position === 'left' ? 'columnHeader--pinnedLeft' : 'columnHeader--pinnedRight']}`).forEach(element => {\n    const currentColIndex = parseCellColIndex(element);\n    if (currentColIndex !== null && filterFn(currentColIndex)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n};\nexport function findLeftPinnedHeadersAfterCol(api, col) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: 'left',\n    colIndex,\n    filterFn: index => index > colIndex\n  });\n}\nexport function findRightPinnedHeadersBeforeCol(api, col) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: 'right',\n    colIndex,\n    filterFn: index => index < colIndex\n  });\n}\nexport function findGridHeader(api, field) {\n  const headers = api.columnHeadersContainerRef.current;\n  return headers.querySelector(`:scope > div > [data-field=\"${field}\"][role=\"columnheader\"]`);\n}\nexport function findGridCells(api, field) {\n  const container = api.virtualScrollerRef.current;\n  return Array.from(container.querySelectorAll(`:scope > div > div > div > [data-field=\"${field}\"][role=\"gridcell\"]`));\n}\nfunction queryRows(api) {\n  return api.virtualScrollerRef.current.querySelectorAll(\n  // Use > to ignore rows from nested data grids (for example in detail panel)\n  `:scope > div > div > .${gridClasses.row}`);\n}\nfunction parseCellColIndex(col) {\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return null;\n  }\n  return Number(ariaColIndex) - 1;\n}","import * as React from 'react';\nimport { fastObjectShallowCompare } from './fastObjectShallowCompare';\nexport function fastMemo(component) {\n  return /*#__PURE__*/React.memo(component, fastObjectShallowCompare);\n}","const is = Object.is;\nexport function fastObjectShallowCompare(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (!(a instanceof Object) || !(b instanceof Object)) {\n    return false;\n  }\n  let aLength = 0;\n  let bLength = 0;\n\n  /* eslint-disable no-restricted-syntax */\n  /* eslint-disable guard-for-in */\n  for (const key in a) {\n    aLength += 1;\n    if (!is(a[key], b[key])) {\n      return false;\n    }\n    if (!(key in b)) {\n      return false;\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-unused-vars */\n  for (const _ in b) {\n    bLength += 1;\n  }\n  /* eslint-enable no-restricted-syntax */\n  /* eslint-enable guard-for-in */\n\n  return aLength === bLength;\n}","/**\n * @deprecated there is no meaninfuly logic abstracted, use event.key directly.\n */\nexport const isEscapeKey = key => key === 'Escape';\n\n/**\n * @deprecated there is no meaninfuly logic abstracted, use event.key directly.\n */\nexport const isTabKey = key => key === 'Tab';\n\n// Non printable keys have a name, for example \"ArrowRight\", see the whole list:\n// https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n// So event.key.length === 1 is often enough.\n//\n// However, we also need to ignore shortcuts, for example: select all:\n// - Windows: Ctrl+A, event.ctrlKey is true\n// - macOS: ⌘ Command+A, event.metaKey is true\nexport function isPrintableKey(event) {\n  return event.key.length === 1 && !event.ctrlKey && !event.metaKey;\n}\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = event => isPrintableKey(event) || event.key === 'Enter' || event.key === 'Backspace' || event.key === 'Delete';\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => key.indexOf('Arrow') === 0 || key.indexOf('Page') === 0 || key === ' ' || key === 'Home' || key === 'End';\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => isTabKey(key) || isEscapeKey(key);\n\n// In theory, on macOS, ctrl + v doesn't trigger a paste, so the function should return false.\n// However, maybe it's overkill to fix, so let's be lazy.\nexport function isPasteShortcut(event) {\n  if ((event.ctrlKey || event.metaKey) && event.key.toLowerCase() === 'v' && !event.shiftKey && !event.altKey) {\n    return true;\n  }\n  return false;\n}","export function isNumber(value) {\n  return typeof value === 'number' && !Number.isNaN(value);\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n\n/**\n * Create an array containing the range [from, to[\n */\nexport function range(from, to) {\n  return Array.from({\n    length: to - from\n  }).map((_, i) => from + i);\n}\n\n/**\n * Based on `fast-deep-equal`\n *\n * MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (Array.isArray(a)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entriesA = Array.from(a.entries());\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entries = Array.from(a.entries());\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n    const keys = Object.keys(a);\n    const length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b;\n}\n\n// Pseudo random number. See https://stackoverflow.com/a/47593316\nfunction mulberry32(a) {\n  return () => {\n    /* eslint-disable */\n    let t = a += 0x6d2b79f5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n    /* eslint-enable */\n  };\n}\nexport function randomNumberBetween(seed, min, max) {\n  const random = mulberry32(seed);\n  return () => min + (max - min) * random();\n}\nexport function deepClone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n}\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/**\n * Mark a value as used so eslint doesn't complain. Use this instead\n * of a `eslint-disable-next-line react-hooks/exhaustive-deps` because\n * that hint disables checks on all values instead of just one.\n */\nexport function eslintUseValue(_) {}\n/* eslint-enable @typescript-eslint/no-unused-vars */","export const buildWarning = (message, gravity = 'warning') => {\n  let alreadyWarned = false;\n  const cleanMessage = Array.isArray(message) ? message.join('\\n') : message;\n  return () => {\n    if (!alreadyWarned) {\n      alreadyWarned = true;\n      if (gravity === 'error') {\n        console.error(cleanMessage);\n      } else {\n        console.warn(cleanMessage);\n      }\n    }\n  };\n};\nexport const wrapWithWarningOnCall = (method, message) => {\n  if (process.env.NODE_ENV === 'production') {\n    return method;\n  }\n  const warning = buildWarning(message);\n  return (...args) => {\n    warning();\n    return method(...args);\n  };\n};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}"],"names":["_excluded","_t","_t2","_t3","_t4","_","t","pulseKeyframe","waveKeyframe","SkeletonRoot","name","slot","overridesResolver","props","styles","ownerState","root","variant","animation","hasChildren","withChildren","width","fitContent","height","heightAuto","theme","radiusUnit","shape","borderRadius","radiusValue","display","backgroundColor","vars","palette","Skeleton","bg","text","primary","mode","marginTop","marginBottom","transformOrigin","transform","Math","round","content","visibility","maxWidth","action","hover","inProps","ref","className","component","style","other","Boolean","children","classes","slots","useUtilityClasses","as","getSkeletonUtilityClass","forceDebug","window","localStorage","getItem","noop","noopLogger","debug","info","warn","error","LOG_LEVELS","getAppender","logLevel","appender","console","minLogLevelIdx","indexOf","Error","reduce","loggerObj","method","idx","args","message","Store","create","value","constructor","_value","this","listeners","subscribe","fn","add","delete","getSnapshot","update","forEach","l","Set","EventManager","maxListeners","warnOnce","events","on","eventName","listener","options","collection","highPriority","Map","regular","isFirst","set","removeListener","removeAllListeners","emit","highPriorityListeners","Array","from","keys","regularListeners","i","length","has","apply","once","that","oneTimeListener","SYMBOL_API_PRIVATE","Symbol","globalId","GRID_DEFAULT_STRATEGY","GRID_STRATEGIES_PROCESSORS","rowTreeCreation","filtering","sorting","visibleRowsLookupCreation","useGridInitialization","inputApiRef","privateApiRef","publicApiRef","current","existingPrivateApi","state","privateApi","store","instanceId","id","getPublicApi","register","methods","Object","methodName","currentPrivateMethod","spying","target","publicApi","currentPublicMethod","caches","eventManager","createPrivateAPI","createPublicAPI","publishEvent","params","event","defaultMuiPrevented","undefined","isPropagationStopped","isSyntheticEvent","details","signature","DataGridPro","api","subscribeEvent","handler","useGridApiMethod","useGridApiInitialization","apiRef","rootElementRef","mainElementRef","virtualScrollerRef","useGridRefs","useTheme","isFirstEffect","setState","useGridTheme","getLogger","logger","toString","useGridLoggerFactory","controlStateMapRef","rawForceUpdate","registerControlState","controlStateItem","stateId","reason","newState","ignoreSetState","updatedControlStateIds","controlState","oldSubState","stateSelector","newSubState","push","hasPropChanged","propModel","map","el","join","model","propOnChange","changeEvent","updateControlState","key","previousState","publicStateApi","forceUpdate","privateStateApi","useGridStateInitialization","cache","isRunning","runAppliers","groupCache","values","appliers","callback","preProcessingPrivateApi","registerPipeProcessor","group","processor","processors","processorsAsArray","get","registerPipeApplier","applier","_appliers","otherAppliers","requestPipeProcessorsApplication","preProcessingPublicApi","unstable_applyPipeProcessors","context","result","useGridPipeProcessing","availableStrategies","strategiesCache","strategyProcessingApi","registerStrategyProcessor","strategyName","processorName","cleanup","_ref","otherProcessors","groupPreProcessors","previousProcessor","getActiveStrategy","applyStrategyProcessor","activeStrategy","strategyGroup","availableStrategyEntry","entries","find","strategy","isAvailable","setStrategyAvailability","useGridStrategyProcessing","getLocaleText","localeText","useGridLocaleText","rootProps","useGridInitializeState","initializer","isInitialized","sanitizeCellValue","delimiterCharacter","shouldAppendQuotes","escapedValue","replace","some","delimiter","includes","serializeCellValue","cellParams","ignoreValueFormatter","columnType","colDef","type","String","toISOString","formattedValue","CSVRow","rowString","isEmpty","addValue","getRowString","writeToClipboardPolyfill","data","span","document","createElement","whiteSpace","userSelect","opacity","textContent","body","appendChild","range","createRange","selectNode","selection","getSelection","removeAllRanges","addRange","execCommand","removeChild","columnMenuStateInitializer","columnMenu","open","useGridRegisterPipeProcessor","random","registerPreProcessor","useFirstRender","isFirstRender","useGridRegisterPipeApplier","columnsStateInitializer","columnsState","columnsToUpsert","columns","initialState","columnVisibilityModel","keepOnlyColumnsToUpsert","pinnedColumns","mergeColumnsState","densityStateInitializer","density","getColumnsToExport","fields","currentColumns","field","column","col","allColumns","filter","disableExport","defaultGetRowsToExport","filteredSortedRowIds","rowTree","selectedRows","getSelectedRows","bodyRows","pinnedRows","topPinnedRowsIds","top","row","bottomPinnedRowsIds","bottom","unshift","size","useGridCsvExport","useGridLogger","ignoreValueFormatterProp","ignoreValueFormatterDuringExport","csvExport","getDataAsCsv","rowIds","includeHeaders","includeColumnGroupsHeaders","CSVBody","acc","getCellParams","serializeRow","trim","filteredColumns","headerRows","columnGroupLookup","getAllGroupDetails","maxColumnGroupsDepth","columnGroupPathsLookup","columnGroupPath","getColumnGroupPath","max","headerGroupRow","columnGroupId","columnGroup","headerName","groupId","mainHeaderRow","buildCSV","getRowsToExport","exportDataAsCsv","csv","blob","extension","filename","title","fullName","HTMLAnchorElement","prototype","url","URL","createObjectURL","a","href","download","click","setTimeout","revokeObjectURL","exportAs","Blob","utf8WithBom","Uint8Array","fileName","csvExportApi","addExportMenuButtons","initialValue","csvOptions","disableToolbarButton","componentName","getDerivedPaginationModel","paginationState","paginationModelProp","paginationModel","rowCount","pageSize","page","pageCount","validPage","useGridRegisterStrategyProcessor","filterStateInitializer","filterModel","disableMultipleColumnsFiltering","filteredRowsLookup","filteredDescendantCountLookup","visibleRowsLookup","getVisibleRowsLookup","getVisibleRowsLookupState","tree","rows","createMemoizedValues","defaultMemoize","focusStateInitializer","focus","cell","columnHeader","columnHeaderFilter","columnGroupHeader","tabIndex","getLeftColumnIndex","currentColIndex","firstColIndex","lastColIndex","direction","getRightColumnIndex","paginationStateInitializer","autoPageSize","pagination","meta","paginationMeta","preferencePanelStateInitializer","preferencePanel","_excluded2","editingStateInitializer","editRows","rowsStateInitializer","getRowId","loading","rowCountProp","loadingProp","previousTree","previousTreeDepths","flatRowTreeCreationMethod","updates","rowId","depth","parent","groupingKey","groupingName","treeDepths","dataRowIds","createFlatRowTree","actions","idsToRemoveFromRootGroup","remove","idToDelete","insert","idToInsert","rootGroup","rootGroupChildren","updateFlatRowTree","getSelectionModelPropValue","selectionModelProp","prevSelectionModel","isArray","rowSelectionStateInitializer","rowSelection","rowSelectionModel","sortingStateInitializer","sortModel","disableMultipleColumnsSorting","sortedRows","scrollIntoView","dimensions","clientHeight","scrollTop","offsetHeight","offsetTop","elementBottom","EMPTY_SIZE","EMPTY_DIMENSIONS","isReady","viewportOuterSize","viewportInnerSize","contentSize","minimumSize","hasScrollX","hasScrollY","scrollbarSize","headerHeight","headerFilterHeight","rowWidth","rowHeight","columnsTotalWidth","leftPinnedWidth","rightPinnedWidth","headersTotalHeight","topContainerHeight","bottomContainerHeight","dimensionsStateInitializer","rowsMetaStateInitializer","rowsMeta","currentPageTotalHeight","positions","getValidRowHeight","rowHeightProp","defaultRowHeight","warningMessage","calculateCellColSpan","lookup","columnIndex","minFirstColumnIndex","maxLastColumnIndex","columnsLength","getRow","getRowValue","colSpan","setCellColSpanInfo","spannedByColSpan","cellProps","computedWidth","j","nextColumnIndex","rightVisibleCellIndex","min","leftVisibleCellIndex","cellColSpanInfo","recurrentUnwrapGroupingColumnModel","columnGroupNode","parents","unwrappedGroupingModelToComplete","child","unwrapGroupingColumnModel","columnGroupingModel","unwrappedSubTree","getColumnGroupsHeaderStructure","orderedColumns","unwrappedGroupingModel","pinnedFields","getParents","groupingHeaderStructure","maxDepth","haveSameParents","field1","field2","slice","depthStructure","structure","newField","columnFields","lastGroup","prevField","left","right","createGroupLookup","groupLookup","node","groupParam","subTreeLookup","columnGroupsStateInitializer","visibleColumnFields","columnGroupsHeaderStructure","columnGrouping","headerStructure","cachedSupportsTouchActionNone","doesSupportTouchActionNone","CSS","supports","trackFinger","currentTouchId","changedTouches","touch","identifier","x","clientX","y","clientY","computeNewWidth","initialOffsetToSeparator","clickX","columnBounds","resizeDirection","newWidth","preventClick","preventDefault","stopImmediatePropagation","columnResizeStateInitializer","columnResize","resizingColumnField","createResizeRefs","initialColWidth","initialTotalWidth","previousMouseClickEvent","columnHeaderElement","headerFilterElement","groupHeaderElements","cellElements","leftPinnedCellsAfter","rightPinnedCellsBefore","fillerLeft","fillerRight","leftPinnedHeadersAfter","rightPinnedHeadersBefore","useGridColumnResize","refs","useLazyRef","stopResizeEventTimeout","useTimeout","touchId","updateWidth","prevWidth","offsetWidth","widthDiff","columnWidthDiff","newTotalWidth","setProperty","flex","minWidth","element","div","finalWidth","getAttribute","pinnedPosition","LEFT","updateProperty","header","RIGHT","finishResize","nativeEvent","stopListening","prevEvent","prevTimeStamp","timeStamp","prevClientX","prevClientY","setColumnWidth","start","storeReferences","separator","xStart","getRootDimensions","columnHeadersContainerRef","querySelector","gridClasses","headerFilterRow","side","classList","contains","flipResizeDirection","getResizeDirection","computeOffsetToSeparator","getBoundingClientRect","handleResizeMouseUp","useEventCallback","handleResizeMouseMove","buttons","handleTouchEnd","handleTouchMove","finger","handleTouchStart","cellSeparator","getColumn","doc","ownerDocument","currentTarget","addEventListener","removeProperty","removeEventListener","pointerEvents","handleResizeStart","handleResizeStop","handleColumnResizeMouseDown","button","cursor","handleColumnSeparatorDoubleClick","disableAutosize","resizable","autosizeColumns","autosizeOptions","columnVirtualizationDisabled","promise","selector","useGridSelector","resolve","Promise","reject","_resolve","_reject","createControllablePromise","useColumnVirtualizationDisabled","isAutosizingRef","async","userOptions","orderedFields","c","unstable_setColumnVirtualization","widthByField","autosizing","widths","filteredWidths","includeOutliers","inputValues","factor","sort","b","q1","floor","q3","iqr","deviation","v","excludeOutliers","outliersFactor","columnHeaderTitle","columnHeaderTitleContainerContent","iconContainer","iconButtonContainer","menuContainer","menuIcon","getComputedStyle","paddingWidth","parseInt","paddingLeft","paddingRight","scrollWidth","clientWidth","hasColumnMin","hasColumnMax","Infinity","maxContent","extractColumnWidths","newColumns","expand","totalWidth","total","remainingWidth","widthPerColumn","updateColumns","newColumn","index","getColumnHeaderElement","useOnMount","autosizeOnMount","then","useGridNativeEventListener","passive","useGridApiEventHandler","onColumnResize","onColumnWidthChange","property","delta","useDataGridComponent","composeClasses","cellCheckbox","columnHeaderCheckbox","updateSelectionColumn","selectionColumn","cellClassName","headerClassName","shouldHaveSelectionColumn","checkboxSelection","haveSelectionColumn","useGridRowSelectionPreProcessors","useGridRowsPreProcessors","initialCurrentPageRows","useGridVisibleRows","currentPageRows","enrichPageRowsWithPinnedRows","headerFilteringEnabled","headerFilters","goToCell","colIndex","closestColumnToUse","visibleSortedRows","nextCellColSpanInfo","unstable_getCellColSpanInfo","rowIndexRelativeToAllRows","findIndex","scrollToIndexes","rowIndex","getVisibleColumns","setCellFocus","goToHeader","setColumnHeaderFocus","goToHeaderFilter","setColumnHeaderFilterFocus","goToGroupHeader","setColumnGroupHeaderFocus","getRowIdFromIndex","handleColumnHeaderKeyDown","headerTitleNode","viewportPageSize","getViewportPageSize","colIndexBefore","getColumnIndex","firstRowIndexInPage","lastRowIndexInPage","columnGroupMaxDepth","shouldPreventDefault","rightColIndex","leftColIndex","ctrlKey","metaKey","toggleColumnMenu","handleHeaderFilterKeyDown","isEditing","isHeaderMenuOpen","handleColumnGroupHeaderKeyDown","focusedColumnGroup","currentField","currentDepth","remainingRightColumns","remainingLeftColumns","handleCellKeyDown","cellMode","Edit","rowIndexBefore","shiftKey","nextRowIndex","checkIfCanStartEditing","useGridKeyboardNavigation","runIfRowSelectionIsEnabled","propRowSelectionModel","lastRowToggled","onRowSelectionModelChange","disableRowSelectionOnClick","isRowSelectable","propIsRowSelectable","canHaveMultipleSelection","visibleRows","expandMouseRowRangeSelection","endId","startId","isSelected","isRowSelected","visibleRowIds","startIndex","endIndex","selectRowRange","setRowSelectionModel","DataGrid","getRowParams","rowNode","getRowNode","selectRow","resetSelection","newSelection","selectRows","ids","selectableIds","selectionLookup","allPagesRowIds","end","rowsBetweenStartAndEnd","selectionPublicApi","selectionPrivateApi","removeOutdatedSelection","keepNonExistentRowsSelected","currentSelection","rowsLookup","hasChanged","handleSingleRowSelection","hasCtrlKey","isMultipleSelectionDisabled","handleRowClick","closest","preventSelectionOnShift","handleRowSelectionCheckboxChange","handleHeaderSelectionCheckboxChange","rowsToBeSelected","checkboxSelectionVisibleOnly","items","getCellMode","focusCell","isNextRowSelected","newRowIndex","getRowIndexRelativeToVisibleRows","previousRowIndex","getAllRowIds","isStateControlled","useGridRowSelection","previousColumnsProp","onColumnVisibilityModelChange","setGridColumnsState","updateRenderContext","getAllColumns","useVisibleColumns","getColumnPosition","setColumnVisibilityModel","setColumnVisibility","isVisible","newModel","getColumnIndexRelativeToVisibleColumns","setColumnIndex","targetIndexPosition","oldIndexPosition","updatedColumns","fieldRemoved","splice","targetIndex","oldIndex","hasBeenResized","columnApi","columnReorderApi","stateExportPreProcessing","prevState","columnsStateToExport","columnVisibilityModelToExport","exportOnlyDirtyModels","colDefDimensions","propertyName","propertyValue","stateRestorePreProcessing","columnVisibilityModelToImport","stateToRestore","preferencePanelPreProcessing","ColumnsPanel","columnsPanel","slotProps","addColumnMenuItems","columnMenuItems","disableColumnSelector","prevInnerWidth","hydrateColumns","useGridColumns","currentPage","lastUpdateMs","Date","now","lastRowCount","timeout","getRowIdProp","throttledRowsChange","throttle","run","clear","throttleRemainingTimeMs","throttleRowsMs","setRows","prevCache","rowsBeforePartialUpdates","updateRows","nonPinnedRowsUpdates","pinnedRowsCache","prevModel","idLookup","previousCache","getRowModels","dataRows","idRowsLookup","getRowsCount","setRowChildrenExpansion","isExpanded","currentNode","newNode","childrenExpanded","getRowGroupChildren","skipAutoGeneratedRows","applySorting","applyFiltering","groupNode","sortedRowIds","childId","setRowIndex","allRows","updatedRows","rowApi","unstable_replaceRows","firstRowToRender","newRows","dataRowIdToModelLookup","dataRowIdToIdLookup","seenIds","rowModel","removedRowId","rowTreeNodeConfig","rowProApi","groupRows","handleStrategyProcessorChange","handleStrategyActivityChange","applyHydrateRowsProcessor","response","totalTopLevelRowCount","isRowCountPropUpdated","areNewRowsAlreadyInState","isNewLoadingAlreadyInState","loadingPropBeforePartialUpdates","isNewRowCountAlreadyInState","rowCountPropBeforePartialUpdates","totalRowCount","useGridRows","useGridParamsApi","columnSpanningPublicApi","columnSpanningPrivateApi","calculateColSpan","minFirstColumn","maxLastColumn","handleColumnReorderChange","useGridColumnSpanning","columnGroupingApi","handleColumnIndexChange","updateColumnGroupingState","getPinnedColumns","useGridColumnGrouping","cellModesModel","setCellModesModel","cellModesModelRef","prevCellModesModel","processRowUpdate","onProcessRowUpdateError","cellModesModelProp","onCellModesModelChange","runIfEditModeIsCell","editMode","Cell","throwIfNotEditable","isCellEditable","throwIfNotInMode","handleCellDoubleClick","isEditable","newParams","cellDoubleClick","handleCellFocusOut","View","cellFocusOut","which","escapeKeyDown","enterKeyDown","shiftTabKeyDown","tabKeyDown","printableKeyDown","pasteKeyDown","deleteKeyDown","handleCellEditStart","startCellEditModeParams","deleteValue","startCellEditMode","handleCellEditStop","cellToFocusAfter","runPendingEditCellValueMutation","ignoreModifications","stopCellEditMode","onCellEditStart","onCellEditStop","editRowsState","hasFieldErrors","editingState","updateCellModesModel","isNewModelDifferentFromProp","updateFieldInCellModesModel","newProps","_newModel$id","otherFields","updateOrDeleteFieldState","newEditingState","updateStateToStartCellEditMode","newValue","getCellValue","isProcessingProps","updateStateToStopCellEditMode","finishCellEditMode","moveFocusToRelativeCell","rowUpdate","getRowWithUpdatedValuesFromCellEditing","handleError","errorThrown","finalRowUpdate","catch","editingApi","editingPrivateApi","setCellEditingEditCellValue","debounceMs","unstable_skipValueParser","skipValueParser","parsedValue","valueParser","changeReason","preProcessEditCellProps","valueSetter","useEnhancedEffect","idToIdLookup","copyOfPrevCellModes","prevMode","originalId","useGridCellEditing","rowModesModel","setRowModesModel","rowModesModelRef","prevRowModesModel","focusTimeout","nextFocusedCell","rowModesModelProp","onRowModesModelChange","runIfEditModeIsRow","Row","getRowMode","hasFieldsWithErrors","fieldProps","rowParams","handleCellFocusIn","rowFocusOut","clearTimeout","nextFieldToFocus","handleRowEditStart","startRowEditModeParams","fieldToFocus","startRowEditMode","handleRowEditStop","stopRowEditMode","onRowEditStart","onRowEditStop","updateRowModesModel","updateRowInRowModesModel","updateOrDeleteRowState","updateStateToStartRowEditMode","updateStateToStopRowEditMode","focusedField","finishRowEditMode","getRowWithUpdatedValuesFromRowEditing","setRowEditingEditCellValue","promises","_editingState$id","otherFieldsProps","processedProps","thisField","fieldColumn","_editingState$id2","all","copyOfPrevRowModesModel","useGridRowEditing","debounceMap","isCellEditableProp","editable","renderEditCell","debounces","runCallback","debouncedField","editingSharedApi","setEditCellValue","maybeDebounce","setEditCellValueToCall","getRowWithUpdatedValues","unstable_getEditCellMeta","editingSharedPrivateApi","useGridEditing","lastClickedCell","publishCellFocusOut","focusedCell","getColumnGroupHeaderFocus","columnIndexToFocus","visibleColumns","paginationMode","concat","rowIndexToFocus","rowToFocus","colSpanInfo","columnToFocus","handleColumnHeaderFocus","handleColumnGroupHeaderFocus","handleBlur","relatedTarget","handleCellMouseDown","handleDocumentClick","cellElement","getCellElement","handleCellModeChange","handleRowSet","handlePaginationModelChange","currentFocusedCell","focusApi","focusPrivateApi","useGridFocus","hideTimeout","immediateTimeout","hidePreferences","preferencePanelState","openedPanelValue","doNotHidePanel","hidePreferencesDelayed","showPreferences","panelId","labelId","preferencePanelToExport","useGridPreferencesPanel","onFilterModelChange","updateFilteredRows","isRowMatchingFilters","filterMode","disableEval","filteringResult","visibleRowsLookupState","addColumnMenuItem","filterable","disableColumnFilter","applyFilters","upsertFilterItem","item","itemIndex","filterItem","setFilterModel","upsertFilterItems","existingItems","deleteFilterItem","itemToDelete","showFilterPanel","targetColumnField","filterItemsWithValue","filterOperator","filterOperators","operator","requiresFilterValue","newFilterItems","filterItemOnTarget","targetColumn","filters","hideFilterPanel","setFilterLogicOperator","logicOperator","setQuickFilterValues","quickFilterValues","filterApi","unstable_applyFilters","ignoreDiacritics","filterModelToExport","callbacks","FilterPanel","filterPanel","getRowsRef","flatFilteringMethod","filterCache","passingFilterItems","passingQuickFilterValues","isRowPassing","footerId","handleColumnsChange","columnsLookup","updateVisibleRowsLookupState","useGridFilter","onSortModelChange","upsertSortModel","sortItem","existingIdx","newSortModel","createSortItem","directionOverride","existing","nextSort","sortingOrder","sortable","disableColumnSorting","sortingMode","sortRowList","setSortModel","sortColumn","allowMultipleSorting","sortApi","getSortModel","getSortedRows","getSortedRowIds","getRowIdFromRowIndex","sortModelToExport","flatSortingMethod","rootGroupNode","sortedChildren","handleColumnHeaderClick","latestColumns","useGridSorting","onDensityChange","densityApi","setDensity","newDensity","exportedDensity","restoredDensity","useGridDensity","onPaginationMetaChange","paginationMetaApi","setPaginationMeta","newPaginationMeta","exportedPaginationMeta","restoredPaginationMeta","useGridPaginationMeta","densityFactor","onPaginationModelChange","paginationModelApi","setPage","currentModel","setPaginationModel","setPageSize","handleUpdateAutoPageSize","maximumPageSizeWithoutScrollBar","handleRowCountChange","newRowCount","useGridPaginationModel","visibleTopLevelRowCount","rowCountState","previousPageSize","onRowCountChange","paginationRowCountApi","setRowCount","exportedRowCount","restoredRowCount","isLastPage","hasNextPage","useGridRowCount","useGridPagination","getRowHeight","getRowHeightProp","getRowSpacing","getEstimatedRowHeight","rowsHeightLookup","lastMeasuredRowIndex","hasRowWithAutoHeight","gridPaginationSelector","validRowHeight","hydrateRowsMeta","calculateRowProcessedSizes","sizes","baseCenter","isResized","autoHeight","needsFirstMeasurement","baseRowHeight","existingBaseRowHeight","rowHeightFromUser","initialHeights","indexRelativeToCurrentPage","spacing","isFirstVisible","isLastVisible","spacingTop","spacingBottom","processedSizes","otherSizes","setRowHeight","debouncedHydrateRowsMeta","debounce","rowPositionsDebounceMs","storeMeasuredRowHeight","needsHydration","rowHasAutoHeight","getLastMeasuredRowIndex","setLastMeasuredRowIndex","resetRowHeights","rowsMetaApi","unstable_setLastMeasuredRowIndex","unstable_getRowHeight","unstable_getRowInternalSizes","unstable_setRowHeight","unstable_storeRowHeightMeasurement","rowsMetaPrivateApi","useGridRowsMeta","colRef","scrollCoordinates","columnPositions","cellWidth","abs","scrollLeft","gridRowsMetaSelector","elementIndex","targetOffsetHeight","scroll","scrollApi","getScrollPosition","useGridScroll","showColumnMenu","columnMenuState","hideColumnMenu","columnLookup","visibleOrderedFields","fieldIndex","columnMenuApi","useGridColumnMenu","previousGridState","previousColumnVisibility","previousRows","previousVirtualizationState","updateGridColumnsForPrint","includeCheckboxes","exportedColumnFields","newColumnVisibilityModel","updateGridRowsForPrint","handlePrintWindowLoad","printWindow","normalizeOptions","copyStyles","hideToolbar","hideFooter","printDoc","contentDocument","gridRootElement","gridClone","cloneNode","main","overflow","contain","gridToolbarElementHeight","toolbarContainer","gridFooterElementHeight","footerContainer","computedTotalHeight","boxSizing","gridFooterElement","position","container","innerHTML","defaultPageStyle","pageStyle","styleElement","createTextNode","head","bodyClassName","split","stylesheetLoadPromises","rootCandidate","getRootNode","headStyleElements","querySelectorAll","tagName","newHeadStyleElements","sheet","styleCSS","cssRules","cssText","attributes","attr","setAttribute","nodeName","nodeValue","contentWindow","print","handlePrintWindowAfterPrint","restoreState","virtualization","printExportApi","exportDataAsPrint","exportState","enabled","enabledForColumns","requestAnimationFrame","iframeEl","buildPrintWindow","onload","matchMedia","mql","matches","printOptions","useGridPrintExport","clipboardExport","clipboardCopyCellDelimiter","handleCopy","toLowerCase","altKey","selectionEnd","selectionStart","textToCopy","navigator","clipboard","writeText","onClipboardCopy","useGridClipboard","errorShown","rootDimensionsRef","columnHeaderHeight","w","savedSize","setSavedSize","debouncedSetSavedSize","func","wait","lastArgs","later","throttled","resizeThrottleMs","previousSize","setDimensions","resize","computedStyle","ownerWindow","parseFloat","hasHeightChanged","hasWidthChanged","renderContext","lastRowIndex","firstRowIndex","updateDimensions","rootElement","pinnedRowsHeight","scrollDiv","measureScrollbarSize","hasScrollXIfNoYScrollBar","hasScrollYIfNoXScrollBar","newDimensions","prevDimensions","apiPublic","apiPrivate","k","Number","isFirstSizing","handleResize","isJSDOM","test","userAgent","onResize","useGridDimensions","onColumnHeaderClick","onColumnHeaderDoubleClick","onColumnHeaderOver","onColumnHeaderOut","onColumnHeaderEnter","onColumnHeaderLeave","onCellClick","onCellDoubleClick","onCellKeyDown","onPreferencePanelClose","onPreferencePanelOpen","onMenuOpen","onMenuClose","onRowDoubleClick","onRowClick","onStateChange","useGridEvents","statePersistenceApi","useGridStatePersistence","useGridVirtualization","DataGridRaw","useDataGridProps","GridContextProvider","GridRoot","sx","forwardedProps","GridHeader","GridFooterPlaceholder","propTypes","isRequired","columnBufferPx","disableColumnMenu","disableColumnResize","disableDensitySelector","disableMultipleRowSelection","disableVirtualization","estimatedRowCount","experimentalFeatures","warnIfFocusStateIsNotSynced","filterDebounceMs","quickFilterExcludeHiddenColumns","quickFilterLogicOperator","getCellClassName","getDetailPanelContent","getRowClassName","hideFooterPagination","hideFooterSelectedRowCount","nonce","onColumnOrderChange","pageSizeOptions","label","rowBufferPx","rowSpacingType","showCellVerticalBorder","showColumnVerticalBorder","GridNoResultsOverlay","noResultsOverlayLabel","useGridApiContext","GridOverlay","GridColumnUnsortedIcon","useGridRootProps","nextSortDirection","Icon","columnSortedAscendingIcon","columnSortedDescendingIcon","iconSlots","booleanCellTrueIcon","booleanCellFalseIcon","columnMenuIcon","openFilterButtonIcon","filterPanelDeleteIcon","columnFilteredIcon","columnSelectorIcon","columnUnsortedIcon","columnResizeIcon","densityCompactIcon","densityStandardIcon","densityComfortableIcon","exportIcon","moreActionsIcon","treeDataCollapseIcon","treeDataExpandIcon","groupingCriteriaCollapseIcon","groupingCriteriaExpandIcon","detailPanelExpandIcon","detailPanelCollapseIcon","rowReorderIcon","quickFilterIcon","quickFilterClearIcon","columnMenuHideIcon","columnMenuSortAscendingIcon","columnMenuSortDescendingIcon","columnMenuFilterIcon","columnMenuManageColumnsIcon","columnMenuClearIcon","loadIcon","filterPanelAddIcon","filterPanelRemoveAllIcon","columnReorderIcon","baseCheckbox","baseTextField","baseFormControl","baseSelect","baseButton","baseIconButton","baseInputAdornment","baseTooltip","basePopper","baseInputLabel","baseSelectOption","native","baseChip","DATA_GRID_DEFAULT_SLOTS_COMPONENTS","material","GridCell","skeletonCell","GridSkeletonCell","columnHeaderFilterIconButton","GridColumnHeaderFilterIconButton","GridColumnMenu","columnHeaders","GridColumnHeaders","detailPanels","footer","GridFooter","footerRowCount","GridRowCount","toolbar","loadingOverlay","GridLoadingOverlay","noResultsOverlay","noRowsOverlay","GridNoRowsOverlay","GridPagination","GridFilterPanel","GridColumnsPanel","G","columnsManagement","GridColumnsManagement","panel","GridPanel","GridRow","DATA_GRID_FORCED_PROPS","hideFooterRowCount","disableColumnReorder","keepColumnPositionIfDraggedOutside","DATA_GRID_PROPS_DEFAULT_VALUES","defaultSlots","themedProps","allProps","useThemeProps","startsWith","groupForwardedProps","obj","TypeError","_objectDestructuringEmpty","overrides","computeSlots","GRID_ACTIONS_COLUMN_TYPE","GRID_ACTIONS_COL_DEF","aggregable","align","headerAlign","renderCell","getApplyQuickFilterFn","GRID_BOOLEAN_COL_DEF","sortComparator","valueFormatter","pastedValueParser","stringToBoolean","getGridBooleanOperators","getApplyFilterFn","valueAsBoolean","InputComponent","GRID_CHECKBOX_SELECTION_FIELD","GRID_CHECKBOX_SELECTION_COL_DEF","disableReorder","valueGetter","renderHeader","throwIfNotDateObject","gridDateFormatter","toLocaleDateString","gridDateTimeFormatter","toLocaleString","GRID_DATE_COL_DEF","GRID_DATETIME_COL_DEF","buildApplyFilterFn","compareFn","showTime","keepHours","date","setSeconds","setMinutes","getMinutes","getTimezoneOffset","setHours","time","getTime","dateCopy","getGridDateOperators","value1","value2","InputComponentProps","DEFAULT_GRID_COL_TYPE_KEY","getGridDefaultColumnTypes","string","number","dateTime","boolean","singleSelect","custom","GRID_NUMERIC_COL_DEF","parseNumericValue","getGridNumericQuickFilterFn","isNaN","columnValue","getGridNumericOperators","GRID_SINGLE_SELECT_COL_DEF","getOptionLabel","getOptionValue","valueOptions","valueOption","option","parseObjectValue","getGridSingleSelectOperators","filterItemValues","GRID_STRING_COL_DEF","hideable","groupable","pinnable","getGridStringQuickFilterFn","filterRegex","RegExp","getRowFormattedValue","getGridStringOperators","disableTrim","filterItemValue","collator","Intl","Collator","sensitivity","usage","compare","val","filterValue","GridColumnGroupHeader","hasFocus","isLastColumn","indexInSection","sectionLength","gridHasFiller","headerCellRef","columnGroupsLookup","description","headerComponent","render","renderHeaderGroup","renderParams","showLeftBorder","showRightBorder","isDragging","useId","elementId","draggableContainer","titleContainer","titleContainerContent","elementToFocus","publish","mouseEventsHandlers","onKeyDown","onFocus","onBlur","GridGenericColumnHeaderItem","columnMenuOpen","isResizing","sortDirection","isDraggable","columnMenuIconButton","columnTitleIconButtons","GridColumnHeaderRow","styled","columnHeaderRow","GridColumnHeadersRoot","flexDirection","borderTopLeftRadius","borderTopRightRadius","GridBaseColumnHeaders","clsx","role","sortColumnLookup","filterColumnLookup","columnHeaderTabIndexState","columnGroupHeaderTabIndexState","columnHeaderFocus","columnGroupHeaderFocus","headerGroupingMaxDepth","columnVisibility","hasOtherElementInTabSequence","getInnerProps","getColumnHeadersRow","getColumnGroupHeadersRows","dragCol","setDragCol","resizeCol","setResizeCol","useGridPrivateApiContext","hasVirtualization","columnGroupsModel","offsetLeft","handleColumnResizeStart","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","leftRenderContext","firstColumnIndex","lastColumnIndex","rightRenderContext","getColumnsToRender","currentContext","firstColumnToRender","lastColumnToRender","renderedColumns","getFillers","leftOverflow","borderTop","isPinnedRight","isNotPinned","hasScrollbarFiller","leftOffsetWidth","filler","pinnedRight","getCellOffsetStyle","pinnedOffset","getPinnedCellOffset","getColumnHeaders","isFirstColumn","GridColumnHeaderItem","filterItemsCounter","isLast","getColumnGroupHeaders","columnsToRender","rowStructure","firstColumnFieldToRender","firstGroupToRender","firstGroupIndex","lastColumnFieldToRender","lastGroupToRender","lastGroupIndex","visibleColumnGroupHeader","groupStructure","firstVisibleColumnIndex","headerInfo","separatorSide","GridColumnHeaderSeparator","Left","useGridColumnHeaders","MemoizedGridColumnHeaders","fastMemo","selectedRowCount","selectedRowCountElement","rowCountElement","visibleRowCount","paginationElement","GridPreferencesPanel","panelContent","noRowsLabel","GridPaginationRoot","selectLabel","breakpoints","up","input","defaultLabelDisplayedRows","to","count","estimated","computedProps","backIconButtonProps","disabled","nextIconButtonProps","lastPage","computedPage","handlePageSizeChange","handlePageChange","isPageSizeIncludedInPageSizeOptions","locales","wrappedLabelDisplayedRows","labelDisplayedRows","rowsPerPageOptions","rowsPerPage","onPageChange","onRowsPerPageChange","EmptyCell","cellEmpty","refProp","selected","styleProp","focusedColumnIndex","isNotVisible","onClick","onDoubleClick","onMouseEnter","onMouseLeave","onMouseOut","onMouseOver","treeDepth","handleRef","scrollbarWidth","hasFocusCell","hasVirtualFocusCellLeft","hasVirtualFocusCellRight","ariaRowIndex","editing","ResizeObserver","resizeObserver","entry","borderBoxSize","blockSize","contentRect","observe","disconnect","propHandler","publishClick","rowReordering","minHeight","numberOfBaseSizes","maximumSize","rowStyle","maxHeight","rowClassNames","getCell","indexRelativeToAllColumns","NONE","editCellState","isReorderCell","isEditingRows","canReorderColumn","canReorderRow","disableDragEvents","cellIsNotVisible","VIRTUAL","sectionIndex","leftCells","rightCells","middleColumnsLength","cells","eventHandlers","expandedWidth","emptyCellWidth","cellOffsetLeft","MemoizedGridRow","GridRowCountRoot","alignItems","margin","scrollbarFiller","GridScrollbarFillerCell","GridSelectedRowCountRoot","GridSelectedRowCount","rowSelectedText","GridOverlayWrapperRoot","shouldForwardProp","prop","overlayWrapper","overlayType","zIndex","GridOverlayWrapperInner","overlayWrapperInner","inner","GridOverlayWrapper","GridOverlays","showNoResultsOverlay","overlay","hasActions","getActions","GridActionsCell","focusElementRef","focusedButtonIndex","setFocusedButtonIndex","setOpen","rootRef","buttonRef","ignoreCallToFocus","touchRippleRefs","menuId","buttonId","iconButtons","showInMenu","menuButtons","numberOfButtons","stop","preventScroll","focusableButtonIndex","o","hideMenu","handleTouchRippleRef","instance","handleButtonClick","actionsCell","getNewIndex","indexMod","newIndex","stopPropagation","touchRippleRef","fontSize","onClose","menuList","autoFocusItem","closeMenu","renderActionsCell","GridBooleanCellRaw","titleAccess","GridBooleanCell","renderBooleanCell","cachedSupportsPreventScroll","PinnedPosition","gridPinnedColumnPositionLookup","EMPTY_CELL_PARAMS","onMouseDown","onMouseUp","onKeyUp","onDragEnter","onDragOver","cellParamsWithAPI","e","canManageOwnFocus","rootClasses","classNames","valueToRender","cellRef","useForkRef","isSelectionMode","cellSelection","capitalize","publishMouseUp","publishMouseDown","padding","border","cellStyle","activeElement","focusableElement","scrollPosition","handleFocus","updatedRow","editCellStateRest","valueString","draggableEventHandlers","MemoizedGridCell","GridEditBooleanCell","idProp","onValueChange","inputRef","valueState","setValueState","handleChange","checked","htmlFor","onChange","renderEditBooleanCell","StyledInputBase","GridEditDateCell","valueProp","inputProps","isDateTime","valueTransformed","parsedDate","formattedDate","substr","parsed","formatted","parseValueToDate","year","month","day","setFullYear","hours","minutes","newFormattedDate","newParsedDate","fullWidth","renderEditDateCell","GridEditInputCellRoot","editInputCell","typography","body2","GridEditInputCell","endAdornment","color","renderEditInputCell","GridEditSingleSelectCell","initialOpen","isSelectNative","MenuProps","otherBaseSelectProps","formattedTargetValue","onOpen","isKeyboardEvent","renderEditSingleSelectCell","randomWidth","Memoized","contentWidth","icon","counter","toggleFilter","getColumnHeaderParams","iconButton","enterDelay","badgeContent","ColumnHeaderMenuIcon","columnMenuId","columnMenuButtonId","iconButtonRef","handleMenuIconClick","sortIndex","showColumnMenuIcon","setShowColumnMenuIcon","isColumnSorted","isColumnFiltered","isColumnNumeric","onDragStart","onDragEnd","columnHeaderSeparatorProps","handleExited","GridColumnHeaderMenu","ContentComponent","contentComponentProps","onExited","showSortIcon","hideSortIcons","GridColumnHeaderSortIcon","draggableContainerProps","GridColumnHeaderSeparatorSides","GridColumnHeaderSeparatorRaw","Right","resizing","stopClick","GridColumnHeaderSortIconRaw","iconElement","icons","iconProps","getIcon","GridColumnHeaderTitleRoot","textOverflow","fontWeight","ColumnHeaderInnerTitle","GridColumnHeaderTitle","titleRef","tooltip","setTooltip","handleMouseOver","isOver","ariaSort","draggable","columnWidth","GridIconButtonContainerRoot","GridIconButtonContainer","GridCellCheckboxForwardRef","isChecked","checkboxElement","rippleRef","handleKeyDown","isSelectable","GridCellCheckboxRenderer","GridHeaderCheckbox","tabIndexState","paginatedVisibleRowIds","filteredSelection","selectionCandidates","currentSelectionSize","isIndeterminate","handleSelectionChange","p","indeterminate","checkColumnVisibilityModelsSame","aFalseValues","bFalseValues","defaultSearchPredicate","searchValue","searchInputRef","initialColumnVisibilityModel","setSearchValue","searchPredicate","autoFocusSearchField","disableShowHideToggle","disableResetButton","toggleAllMode","getTogglableColumns","isResetDisabled","sortedColumns","toggleColumn","togglableColumns","togglableSortedColumns","toggleAllColumns","handleSearchValueChange","hideableColumns","allHideableColumnsVisible","every","allHideableColumnsHidden","firstSwitchRef","firstHideableColumnFound","isFirstHideableColumn","GridColumnsManagementHeader","placeholder","InputProps","startAdornment","pl","GridColumnsManagementBody","FormControlLabel","control","GridColumnsManagementEmptyText","GridColumnsManagementFooter","columnsManagementHeader","columnsManagementFooter","justifyContent","divider","grey","GridFooterContainerRoot","GridFooterContainer","GridOverlayRoot","alignSelf","columnHeadersStyles","columnSeparator","columnHeaderStyles","GridRootStyles","aggregationColumnHeader","aggregationColumnHeaderLabel","editBooleanCell","cellSkeleton","checkboxInput","columnHeaderDraggableContainer","columnHeaderTitleContainer","filterIcon","iconSeparator","menuIconButton","menuOpen","rowReorderCellPlaceholder","rowReorderCell","sortIcon","withBorderColor","treeDataGroupingCell","treeDataGroupingCellToggle","detailPanelToggleCell","borderColor","TableCell","radius","containerBackground","background","default","mixins","MuiDataGrid","pinnedBackground","overlayBackground","defaultChannel","disabledOpacity","hoverOpacity","hoverColor","selectedOpacity","selectedBackground","mainChannel","selectedHoverBackground","pinnedHoverBackground","blend","pinnedSelectedBackground","pinnedSelectedHoverBackground","selectedStyles","fontWeightMedium","borderWidth","borderStyle","outline","overflowAnchor","groupingCriteriaCell","WebkitTapHighlightColor","lineHeight","outlineWidth","outlineOffset","transition","transitions","duration","shorter","borderBottomWidth","borderBottomStyle","marginRight","marginLeft","touchAction","breakInside","borderTopColor","boxShadow","shadows","paper","booleanCell","secondary","gridGap","rowReorderCellContainer","borderLeftColor","borderLeftWidth","borderLeftStyle","borderRightColor","borderRightWidth","borderRightStyle","textAlign","virtualScrollerContent","groupingCriteriaCellToggle","gamma","f","overlayColor","rgb","GridPanelAnchor","mountedState","setMountedState","GridMenuRoot","menu","modal","GridMenu","savedFocusRef","HTMLElement","handleClickAway","anchorEl","placement","TransitionProps","onClickAway","mouseEvent","popperOnExited","labelledby","GRID_COLUMN_MENU_SLOTS","columnMenuSortItem","GridColumnMenuSortItem","columnMenuFilterItem","GridColumnMenuFilterItem","columnMenuColumnsItem","GridColumnMenuColumnsItem","GRID_COLUMN_MENU_SLOT_PROPS","displayOrder","GridGenericColumnMenu","defaultSlotProps","orderedSlots","addDividers","processedComponents","processedSlotProps","mergedProps","currentSlotProps","defaultItems","userItems","defaultComponentKeys","sorted","leftItemProps","rightItemProps","isFinite","itemProps","processedComponentProps","customProps","Divider","useGridColumnMenuSlots","GridColumnMenuContainer","Component","otherProps","StyledMenuList","handleListKeyDown","autoFocus","showFilter","GridColumnMenuHideItem","GridColumnMenuManageItem","showColumns","onSortMenuItemClick","getLabel","gridPanelClasses","GridPanelRoot","GridPaperRoot","isPlaced","setIsPlaced","modifiers","phase","effect","setAnchorEl","panelAnchor","elevation","GridPanelContentRoot","GridPanelContent","GridPanelFooterRoot","panelFooter","GridPanelFooter","GridPanelWrapperRoot","panelWrapper","isEnabled","GridPanelWrapper","disableEnforceFocus","TrapFocus","GridFilterFormRoot","filterForm","FilterFormDeleteIcon","filterFormDeleteIcon","flexShrink","FilterFormLogicOperatorInput","filterFormLogicOperatorInput","FilterFormColumnInput","filterFormColumnInput","FilterFormOperatorInput","filterFormOperatorInput","FilterFormValueInput","filterFormValueInput","getColumnLabel","GridFilterForm","hasMultipleFilters","deleteFilter","applyFilterChanges","showMultiFilterOperators","disableMultiFilterOperator","applyMultiFilterOperatorChanges","logicOperators","And","Or","columnsSort","filterColumns","deleteIconProps","logicOperatorInputProps","operatorInputProps","columnInputProps","valueInputProps","readOnly","filterableColumns","columnSelectId","columnSelectLabelId","operatorSelectId","operatorSelectLabelId","deleteIcon","logicOperatorInput","columnInput","operatorInput","valueInput","valueRef","filterSelectorRef","multiFilterOperator","hasLogicOperatorColumn","baseFormControlProps","isBaseSelectNative","baseInputLabelProps","baseSelectOptionProps","valueInputPropsOther","selectedField","itemField","selectedNonFilterableColumn","filteredFields","currentFilters","isFieldIncluded","sortedFilteredColumns","currentColumn","currentOperator","changeColumn","newOperator","changeOperator","op","eraseItemValue","changeLogicOperator","getLogicOperatorLocaleKey","applyValue","BooleanOperatorContainer","GridFilterInputBoolean","clearButton","labelProp","others","filterValueState","setFilterValueState","selectId","baseSelectProps","onFilterChange","shrink","notched","displayEmpty","convertFilterItemValueToInputValue","itemValue","inputType","substring","GridFilterInputDate","filterTimeout","applying","setIsApplying","InputLabelProps","GridFilterInputMultipleSingleSelect","helperText","TextFieldProps","resolvedColumn","isOptionEqualToValue","resolvedValueOptions","filteredValues","resolvedValue","A","multiple","filterOptions","renderTags","getTagProps","renderInput","GridFilterInputMultipleValue","freeSolo","inputValue","renderSingleSelectOptions","OptionComponent","SingleSelectOperatorContainer","GridFilterInputSingleSelect","currentValueOptions","GridFilterInputValue","newItem","fromInput","getGridFilter","filterableColumnsLookup","lastFilterRef","placeholderFilter","filterFormProps","getColumnForNewFilter","disableAddFilterButton","disableRemoveAllButton","applyFilter","applyFilterLogicOperator","getDefaultFilter","nextColumnWithOperator","nextFieldName","getNewFilter","nextColumnFieldName","readOnlyFilters","validFilters","addNewFilter","newFilter","shouldCloseFilterPanel","handleRemoveAll","startIcon","isSingleSelectColDef","getValueOptions","additionalParams","getValueFromValueOptions","optionValue","_excluded3","GridCsvExportMenuItem","GridPrintExportMenuItem","GridToolbarExport","excelOptions","preProcessedButtons","GridToolbarExportContainer","buttonProps","tooltipProps","exportButtonId","exportMenuId","handleMenuClose","prevOpen","GridScrollAreaRawRoot","scrollArea","GridScrollArea","scrollDirection","getCanScrollMore","maxScrollLeft","dragging","setDragging","canScrollMore","setCanScrollMore","totalHeaderHeight","handleDragOver","offset","handleColumnHeaderDragStart","handleColumnHeaderDragEnd","newScrollPosition","MemoizedGridHeaders","cellTabIndexState","columnsContainerRef","Element","flexGrow","GridMainContainer","ariaAttributes","pinnedRowsCount","treeData","useGridAriaAttributes","GridTopContainer","GridBottomContainer","VirtualScrollerContentRoot","GridVirtualScrollerContent","overflowedContent","Filler","Pinned","PinnedLeft","borderRight","PinnedRight","borderLeft","Main","scrollbarHeight","expandedHeight","VirtualScrollerRenderZoneRoot","virtualScrollerRenderZone","GridVirtualScrollerRenderZone","Scrollbar","ScrollbarVertical","overflowY","overflowX","ScrollbarHorizontal","Content","GridVirtualScrollbar","isLocked","lastPosition","scrollbarRef","contentRef","propertyDimension","propertyScroll","hasScroll","scrollbarInnerSize","onScrollerScroll","scroller","scrollbar","onScrollbarScroll","capture","Container","Scroller","virtualScroller","GridVirtualScroller","useGridVirtualScroller","getContainerProps","getScrollerProps","getContentProps","getRenderZoneProps","getScrollbarVerticalProps","getScrollbarHorizontalProps","getRows","getDataGridUtilityClass","GRID_DETAIL_PANEL_TOGGLE_FIELD","GRID_DEFAULT_LOCALE_TEXT","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","toolbarQuickFilterPlaceholder","toolbarQuickFilterLabel","toolbarQuickFilterDeleteIconLabel","toolbarExport","toolbarExportLabel","toolbarExportCSV","toolbarExportPrint","toolbarExportExcel","columnsManagementSearchTitle","columnsManagementNoColumns","columnsManagementShowHideAllText","columnsManagementReset","filterPanelAddFilter","filterPanelRemoveAll","filterPanelDeleteIconLabel","filterPanelLogicOperator","filterPanelOperator","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","filterPanelInputLabel","filterPanelInputPlaceholder","filterOperatorContains","filterOperatorEquals","filterOperatorStartsWith","filterOperatorEndsWith","filterOperatorIs","filterOperatorNot","filterOperatorAfter","filterOperatorOnOrAfter","filterOperatorBefore","filterOperatorOnOrBefore","filterOperatorIsEmpty","filterOperatorIsNotEmpty","filterOperatorIsAnyOf","headerFilterOperatorContains","headerFilterOperatorEquals","headerFilterOperatorStartsWith","headerFilterOperatorEndsWith","headerFilterOperatorIs","headerFilterOperatorNot","headerFilterOperatorAfter","headerFilterOperatorOnOrAfter","headerFilterOperatorBefore","headerFilterOperatorOnOrBefore","headerFilterOperatorIsEmpty","headerFilterOperatorIsNotEmpty","headerFilterOperatorIsAnyOf","filterValueAny","filterValueTrue","filterValueFalse","columnMenuLabel","columnMenuShowColumns","columnMenuManageColumns","columnMenuFilter","columnMenuHideColumn","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerRowSelected","footerTotalRows","footerTotalVisibleRows","visibleCount","totalCount","checkboxSelectionHeaderName","checkboxSelectionSelectAllRows","checkboxSelectionUnselectAllRows","checkboxSelectionSelectRow","checkboxSelectionUnselectRow","booleanCellTrueLabel","booleanCellFalseLabel","actionsCellMore","pinToLeft","pinToRight","unpin","treeDataGroupingHeaderName","treeDataExpand","treeDataCollapse","groupingColumnHeaderName","groupColumn","unGroupColumn","detailPanelToggle","expandDetailPanel","collapseDetailPanel","MuiTablePagination","rowReorderingHeaderName","aggregationMenuItemHeader","aggregationFunctionLabelSum","aggregationFunctionLabelAvg","aggregationFunctionLabelMin","aggregationFunctionLabelMax","aggregationFunctionLabelSize","Provider","gridColumnGroupingSelector","gridColumnGroupsUnwrappedModelSelector","gridColumnGroupsLookupSelector","gridColumnGroupsHeaderStructureSelector","gridColumnGroupsHeaderMaxDepthSelector","gridColumnMenuSelector","DEFAULT_GRID_AUTOSIZE_OPTIONS","GridPinnedColumnPosition","EMPTY_PINNED_COLUMN_FIELDS","gridColumnsStateSelector","gridColumnFieldsSelector","createSelector","gridColumnLookupSelector","gridColumnDefinitionsSelector","allFields","gridColumnVisibilityModelSelector","gridVisibleColumnDefinitionsSelector","gridVisibleColumnFieldsSelector","gridPinnedColumnsSelector","gridVisiblePinnedColumnDefinitionsSelector","visiblePinnedFields","invert","newPinnedColumns","remainingColumns","leftPinnedColumns","columnsWithoutLeftPinnedColumns","rightPinnedColumns","filterVisibleColumns","gridColumnPositionsSelector","currentPosition","gridColumnsTotalWidthSelector","colCount","gridFilterableColumnDefinitionsSelector","gridFilterableColumnLookupSelector","gridHasColSpanSelector","COLUMNS_DIMENSION_PROPERTIES","COLUMN_TYPES","hydrateColumnsWidth","rawState","totalFlexUnits","widthAllocatedBeforeFlex","flexColumns","columnField","availableWidth","initialFreeSpace","computedColumnWidths","uniqueFlexColumns","flexColumnsLookup","frozenFields","freeze","frozen","loopOverFlexItems","violationsLookup","remainingFreeSpace","flexUnits","totalViolation","computeFlexColumnsWidth","getDefaultColTypeDef","createColumnsState","isInsideStateInitializer","currentState","columnsToKeep","columnsToUpsertLookup","existingState","columnsStateWithPortableColumns","columnsWithUpdatedDimensions","orderedFieldsLookup","cleanOrderedFields","newOrderedFields","newColumnLookup","newColDef","applyInitialState","getFirstNonSpannedColumnToRender","lastRowToRender","firstNonSpannedColumnToRender","getTotalHeaderHeight","isHeaderFilteringEnabled","COMPACT_DENSITY_FACTOR","COMFORTABLE_DENSITY_FACTOR","DENSITY_FACTORS","compact","comfortable","standard","gridDensitySelector","gridDensityFactorSelector","gridDimensionsSelector","gridEditRowsStateSelector","gridFilterStateSelector","gridFilterModelSelector","filterState","gridQuickFilterValuesSelector","gridVisibleRowsLookupSelector","gridFilteredRowsLookupSelector","gridFilteredDescendantCountLookupSelector","gridExpandedSortedRowEntriesSelector","gridExpandedSortedRowIdsSelector","visibleSortedRowEntries","gridFilteredSortedRowEntriesSelector","gridFilteredSortedRowIdsSelector","filteredSortedRowEntries","gridFilteredSortedTopLevelRowEntriesSelector","rowTreeDepth","gridExpandedRowCountSelector","gridFilteredTopLevelRowCountSelector","visibleSortedTopLevelRows","gridFilterActiveItemsSelector","gridFilterActiveItemsLookupSelector","activeFilters","res","getDefaultGridFilterModel","getPublicApiRef","hasEval","cleanFilterItem","cleanItem","filterModelDisableMultiColumnsFilteringWarning","filterModelMissingItemIdWarning","filterModelMissingItemOperatorWarning","sanitizeFilterModel","hasSeveralItems","hasItemsWithoutIds","hasItemWithoutOperator","mergeStateWithFilterModel","filteringState","removeDiacritics","normalize","getFilterCallbackFromItem","parser","newFilterItem","applyFilterOnRow","filterItemsApplierId","shouldQuickFilterExcludeHiddenColumns","buildAggregatedFilterApplier","isRowMatchingFilterItems","Function","getHasEval","shouldApplyFilter","resultPerItemId","filterItemCore","JSON","stringify","replaceAll","shouldApplyItem","buildAggregatedFilterItemsApplier","isRowMatchingQuickFilter","appliersPerField","quickFilterValue","outer","buildAggregatedQuickFilterApplier","isNotNull","passFilterLogic","allFilterItemResults","allQuickFilterResults","cleanedFilterItems","filterModelItems","cleanedFilterItemResults","cleanedQuickFilterResults","filterItemPredicate","filterItemResult","quickFilterValuePredicate","quickFilterValueResult","gridFocusStateSelector","gridFocusCellSelector","focusState","gridFocusColumnHeaderSelector","gridFocusColumnHeaderFilterSelector","gridFocusColumnGroupHeaderSelector","gridTabIndexStateSelector","gridTabIndexCellSelector","gridTabIndexColumnHeaderSelector","gridTabIndexColumnHeaderFilterSelector","gridTabIndexColumnGroupHeaderSelector","gridHeaderFilteringStateSelector","headerFiltering","gridHeaderFilteringEnabledSelector","headerFilteringState","gridHeaderFilteringEditFieldSelector","gridHeaderFilteringMenuSelector","gridPaginationModelSelector","gridPaginationRowCountSelector","gridPaginationMetaSelector","gridPageSelector","gridPageSizeSelector","gridPageCountSelector","gridPaginationRowRangeSelector","visibleSortedTopLevelRowEntries","topLevelFirstRowIndex","topLevelLastRowIndex","topLevelFirstRow","topLevelRowsInCurrentPageCount","topLevelRowAdded","gridPaginatedVisibleSortedGridRowEntriesSelector","paginationRange","gridPaginatedVisibleSortedGridRowIdsSelector","visibleSortedRowIds","defaultPageSize","getPageCount","ceil","getDefaultGridPaginationModel","getValidPage","throwIfPageSizeExceedsTheLimit","signatureProp","gridPreferencePanelStateSelector","GridPreferencePanelsValue","gridRowSelectionStateSelector","selectedGridRowsCountSelector","selectedGridRowsSelector","selectedIdsLookupSelector","isMultipleRowSelectionEnabled","gridRowsStateSelector","gridRowCountSelector","gridRowsLoadingSelector","gridTopLevelRowCountSelector","gridRowsLookupSelector","gridRowsDataRowIdToIdLookupSelector","gridRowTreeSelector","gridRowGroupingNameSelector","gridRowTreeDepthsSelector","gridRowMaximumTreeDepthSelector","nodeCount","gridDataRowIdsSelector","gridAdditionalRowGroupsSelector","additionalRowGroups","gridPinnedRowsSelector","rawPinnedRows","rowEntry","gridPinnedRowsCountSelector","GRID_ROOT_GROUP_ID","GRID_ID_AUTOGENERATED","buildRootGroup","groupingField","isAutoGenerated","childrenFromPath","checkGridRowIdIsValid","detailErrorMessage","getRowIdFromRowModel","createRowsInternalCache","getTopLevelRowCount","getRowsStateFromCache","unProcessedTree","unProcessedTreeDepths","unProcessedDataRowIds","groupingParamsWithHydrateRows","modify","idToActionLookup","isAutoGeneratedRow","getTreeNodeDescendants","parentId","validDescendants","childDescendants","updateCacheWithNewRows","uniqueUpdates","partialUpdates","alreadyAppliedActionsToRemove","partialRow","actionAlreadyAppliedToRow","_action","oldRow","actionTypeWithActionsToRemove","actionType","idsToRemove","calculatePinnedRowsHeight","getMinimalContentHeight","MissingRowIdError","rawValue","cellFocus","cellTabIndex","getRowElement","paramsApi","gridSortingStateSelector","gridSortedRowIdsSelector","sortingState","gridSortedRowEntriesSelector","sortedIds","gridSortModelSelector","gridSortColumnLookupSelector","sanitizeSortModel","mergeStateWithSortModel","buildAggregatedSortingApplier","comparatorList","comparator","getSortComparator","getSortCellParams","parseSortItem","rowList","compareRows","row1","row2","sortCellParams1","sortCellParams2","getNextGridSortDirection","currentIdx","gridNillComparator","v1","v2","gridStringOrNumberComparator","nillResult","gridNumberComparator","gridDateComparator","gridVirtualizationSelector","gridVirtualizationEnabledSelector","gridVirtualizationColumnEnabledSelector","gridRenderContextSelector","gridRenderContextColumnsSelector","ScrollDirection","EMPTY_SCROLL_POSITION","EMPTY_DETAIL_PANELS","outerSize","hasBottomPinnedRows","panels","setPanels","selectedRowsLookup","gridRootRef","mainRef","scrollerRef","scrollbarVerticalRef","scrollbarHorizontalRef","contentHeight","hasColSpan","previousContextScrollPosition","previousRowContext","scrollTimeout","frozenContext","scrollCache","createScrollCache","verticalBuffer","MINIMUM_COLUMN_WIDTH","buffer","bufferForDirection","nextRenderContext","context1","context2","didRowsIntervalChange","triggerUpdateRenderContext","newScroll","dx","dy","isScrolling","DOWN","UP","directionForDelta","rowScroll","columnScroll","didCrossThreshold","didChangeDirection","computeRenderContext","inputsSelector","forceUpdateRenderContext","handleScroll","handleWheel","needsHorizontalScrollbar","scrollerStyle","initialRenderContext","baseRenderContext","isLastSection","isPinnedSection","rowIndexOffset","rowModels","rowIndexes","virtualRowIndex","rowProps","rowIndexInPage","tabbableCell","currentRenderContext","computeOffsetLeft","getInfiniteLoadingTriggerElement","lastRowId","onScroll","onWheel","onTouchMove","at","lastColumn","viewportInnerWidth","viewportInnerHeight","lastRowHeight","lastColumnWidth","inputs","realLeft","getNearestIndexToRender","atStart","getIndexesToRender","firstIndex","lastIndex","minFirstIndex","maxLastIndex","bufferBefore","rowBefore","bufferAfter","rowAfter","lastSize","binarySearch","actualRenderContext","initialFirstColumnToRender","columnBefore","columnAfter","deriveRenderContext","lastMeasuredIndexRelativeToAllRows","allRowsMeasured","lastMeasuredIndexRelativeToCurrentPage","interval","exponentialSearch","sliceStart","sliceEnd","pivot","isBefore","firstPosition","firstIndexPadded","lastIndexPadded","pinnedLeftLength","horizontalBuffer","EMPTY_RENDER_CONTEXT","virtualizationStateInitializer","setVirtualization","unstable_setVirtualization","TimerBasedCleanupTracking","timeouts","cleanupTimeout","object","unsubscribe","unregisterToken","cleanupToken","unregister","reset","FinalizationRegistryBasedCleanupTracking","registry","FinalizationRegistry","GridSignature","ObjectToBeRetainedByReact","createUseGridApiEventHandler","registryContainer","cleanupTokensCounter","objectRetainedByReact","subscription","handlerRef","cleanupTokenRef","enhancedHandler","unstable_resetCleanupTracking","optionsSubscriberOptions","useGridApiOptionHandler","apiMethods","newLogger","added","setAdded","targetElement","wrapHandler","GridPrivateApiContext","applySelector","acceptsApiRef","isOutputSelector","defaultCompare","is","objectShallowCompare","createRefs","equals","didInit","getVisibleRows","isDevEnvironment","useResizeObserver","fnRef","frameID","observer","cancelAnimationFrame","useRunOnce","condition","didRun","GridArrowUpwardIcon","d","GridArrowDownwardIcon","GridKeyboardArrowRight","GridExpandMoreIcon","GridFilterListIcon","GridFilterAltIcon","GridSearchIcon","GridMenuIcon","GridCheckCircleIcon","GridColumnIcon","GridSeparatorIcon","GridViewHeadlineIcon","GridTableRowsIcon","GridViewStreamIcon","GridTripleDotsVerticalIcon","GridCloseIcon","GridAddIcon","GridRemoveIcon","GridLoadIcon","GridDragIcon","GridSaveAltIcon","GridCheckIcon","GridMoreVertIcon","GridVisibilityOffIcon","GridViewColumnIcon","GridClearIcon","GridDeleteIcon","GridDeleteForeverIcon","isLeaf","GridEditModes","GridCellModes","GridRowModes","GridLogicOperator","GridCellEditStartReasons","GridCellEditStopReasons","GridRowEditStartReasons","GridRowEditStopReasons","shouldCellShowRightBorder","showCellVerticalBorderRootProp","isSectionLastCell","shouldCellShowLeftBorder","createSelectorCreator","memoize","_len","arguments","memoizeOptionsFromArgs","_key","_len2","funcs","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","pop","_directlyPassedOption2","finalMemoizeOptions","dependencies","dep","dependencyTypes","getDependencies","memoizedResultFunc","assign","lastResult","recomputations","resetRecomputations","WeakMap","checkIsAPIRef","DEFAULT_INSTANCE_ID","rest","stateOrApiRef","instanceIdParam","isAPIRef","va","vb","vc","vd","ve","createSelectorMemoized","cacheKey","cacheArgsInit","cacheArgs","cacheFn","isOverflown","scrollHeight","findParentElementFromClassName","elem","escapeOperandAttributeSelector","operand","getGridColumnHeaderElement","getGridRowElementSelector","getGridRowElement","getGridCellElement","isEventTargetInPortal","nodeType","getFieldFromHeaderElem","colCellEl","findHeaderElementFromField","getFieldsFromGroupHeaderElem","fieldsString","findGroupHeaderElementsFromField","findGridCellElementsFromCol","ariaColIndex","queryRows","rowElement","findGridElement","klass","findPinnedCells","filterFn","parseCellColIndex","findLeftPinnedCellsAfterCol","findRightPinnedCellsBeforeCol","findPinnedHeaders","elements","findLeftPinnedHeadersAfterCol","findRightPinnedHeadersBeforeCol","findGridHeader","findGridCells","fastObjectShallowCompare","aLength","bLength","isEscapeKey","isTabKey","isPrintableKey","isNavigationKey","isHideMenuKey","isPasteShortcut","isNumber","isFunction","isObject","localStorageAvailable","setItem","removeItem","err","escapeRegExp","clamp","isDeepEqual","entriesA","entryA","ArrayBuffer","isView","source","flags","valueOf","hasOwnProperty","call","randomNumberBetween","seed","imul","deepClone","structuredClone","parse","buildWarning","gravity","alreadyWarned","cleanMessage","NOT_FOUND","defaultEqualityCheck","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","prev","next","createCacheKeyComparator","put","getEntries","cacheIndex","createLruCache","memoized","matchingEntry","clearCache"],"sourceRoot":""}