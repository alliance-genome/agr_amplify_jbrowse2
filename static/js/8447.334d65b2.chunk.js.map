{"version":3,"file":"static/js/8447.334d65b2.chunk.js","mappings":"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","sources":["../../../packages/app-core/src/ui/App/Drawer.tsx","../../../packages/app-core/src/ui/App/DrawerHeader.tsx","../../../packages/app-core/src/ui/App/DrawerWidget.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport { Paper } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport ResizeHandle from '@jbrowse/core/ui/ResizeHandle'\nimport { SessionWithFocusedViewAndDrawerWidgets } from '@jbrowse/core/util/types'\n\nconst useStyles = makeStyles()(theme => ({\n  paper: {\n    overflowY: 'auto',\n    height: '100%',\n    position: 'relative',\n    zIndex: theme.zIndex.drawer,\n    outline: 'none',\n    background: theme.palette.background.default,\n  },\n  resizeHandle: {\n    width: 4,\n    position: 'fixed',\n    top: 0,\n    zIndex: theme.zIndex.drawer + 1,\n  },\n}))\n\nconst Drawer = observer(function ({\n  children,\n  session,\n}: {\n  children: React.ReactNode\n  session: SessionWithFocusedViewAndDrawerWidgets\n}) {\n  const { drawerPosition, drawerWidth } = session\n  const { classes } = useStyles()\n  const ref = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    function handleSelectView(e: Event) {\n      if (e.target instanceof Element) {\n        if (ref?.current?.contains(e.target)) {\n          // @ts-ignore\n          const visibleWidgetId = session.visibleWidget?.view?.id\n          if (visibleWidgetId) {\n            session.setFocusedViewId(visibleWidgetId)\n          }\n        }\n      }\n    }\n\n    document.addEventListener('mousedown', handleSelectView)\n    document.addEventListener('keydown', handleSelectView)\n    return () => {\n      document.removeEventListener('mousedown', handleSelectView)\n      document.removeEventListener('keydown', handleSelectView)\n    }\n  }, [ref, session])\n\n  return (\n    <Paper ref={ref} className={classes.paper} elevation={16} square>\n      {drawerPosition === 'right' ? (\n        <ResizeHandle\n          onDrag={session.resizeDrawer}\n          className={classes.resizeHandle}\n          vertical\n        />\n      ) : null}\n      {children}\n      {drawerPosition === 'left' ? (\n        <ResizeHandle\n          onDrag={session.resizeDrawer}\n          className={classes.resizeHandle}\n          style={{ left: drawerWidth }}\n          vertical\n        />\n      ) : null}\n    </Paper>\n  )\n})\n\nexport default Drawer\n","import React, { useState } from 'react'\nimport {\n  AppBar,\n  FormControl,\n  IconButton,\n  Menu,\n  MenuItem,\n  Select,\n  Toolbar,\n  Tooltip,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { getEnv } from '@jbrowse/core/util'\nimport { SessionWithFocusedViewAndDrawerWidgets } from '@jbrowse/core/util/types'\n\n// icons\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport CloseIcon from '@mui/icons-material/Close'\nimport MinimizeIcon from '@mui/icons-material/Minimize'\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\n\nconst useStyles = makeStyles()(theme => ({\n  formControl: {\n    margin: 0,\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  drawerSelect: {\n    margin: 0,\n    color: theme.palette.secondary.contrastText,\n  },\n\n  dropDownIcon: {\n    color: theme.palette.secondary.contrastText,\n  },\n  headerFocused: {\n    background: theme.palette.secondary.main,\n  },\n  headerUnfocused: {\n    background: theme.palette.secondary.dark,\n  },\n}))\n\nconst DrawerHeader = observer(function ({\n  session,\n  setToolbarHeight,\n}: {\n  session: SessionWithFocusedViewAndDrawerWidgets\n  setToolbarHeight: (arg: number) => void\n}) {\n  const { classes } = useStyles()\n  const focusedViewId = session.focusedViewId\n  // @ts-ignore\n  const viewWidgetId = session.visibleWidget?.view?.id\n\n  return (\n    <AppBar\n      position=\"sticky\"\n      className={\n        focusedViewId === viewWidgetId\n          ? classes.headerFocused\n          : classes.headerUnfocused\n      }\n      ref={ref => setToolbarHeight(ref?.getBoundingClientRect().height || 0)}\n    >\n      <Toolbar disableGutters>\n        <DrawerWidgetSelector session={session} />\n        <div className={classes.spacer} />\n        <DrawerControls session={session} />\n      </Toolbar>\n    </AppBar>\n  )\n})\n\nconst DrawerWidgetSelector = observer(function ({\n  session,\n}: {\n  session: SessionWithFocusedViewAndDrawerWidgets\n}) {\n  const { visibleWidget, activeWidgets } = session\n  const { classes } = useStyles()\n  const { pluginManager } = getEnv(session)\n  return (\n    <FormControl className={classes.formControl}>\n      <Select\n        value={visibleWidget?.id}\n        data-testid=\"widget-drawer-selects\"\n        className={classes.drawerSelect}\n        classes={{ icon: classes.dropDownIcon }}\n        renderValue={widgetId => {\n          const widget = session.activeWidgets.get(widgetId)\n          if (!widget) {\n            return (\n              <Typography variant=\"h6\" color=\"inherit\">\n                Unknown widget\n              </Typography>\n            )\n          }\n          const widgetType = pluginManager.getWidgetType(widget.type)\n          const { HeadingComponent, heading } = widgetType\n          return HeadingComponent ? (\n            <HeadingComponent model={widget} />\n          ) : (\n            <Typography variant=\"h6\" color=\"inherit\">\n              {heading}\n            </Typography>\n          )\n        }}\n        onChange={e => {\n          const w = session.activeWidgets.get(e.target.value)\n          if (w) {\n            session.showWidget(w)\n          } else {\n            session.notify(`Widget not found ${e.target.value}`, 'warning')\n          }\n        }}\n      >\n        {[...activeWidgets.values()].map(widget => {\n          const widgetType = pluginManager.getWidgetType(widget.type)\n          const { HeadingComponent, heading } = widgetType\n          return (\n            <MenuItem\n              data-testid={`widget-drawer-selects-item-${widget.type}`}\n              key={widget.id}\n              value={widget.id}\n            >\n              {HeadingComponent ? (\n                <HeadingComponent model={widget} />\n              ) : (\n                <Typography variant=\"h6\" color=\"inherit\">\n                  {heading}\n                </Typography>\n              )}\n              <IconButton\n                data-testid={`${widget.type}-drawer-delete`}\n                color=\"inherit\"\n                aria-label=\"Delete\"\n                onClick={() => session.hideWidget(widget)}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </MenuItem>\n          )\n        })}\n      </Select>\n    </FormControl>\n  )\n})\n\nconst DrawerControls = observer(function ({\n  session,\n}: {\n  session: SessionWithFocusedViewAndDrawerWidgets\n}) {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n  const { drawerPosition, visibleWidget } = session\n  return (\n    <>\n      <IconButton\n        color=\"inherit\"\n        onClick={event => setAnchorEl(event.currentTarget)}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <Tooltip title=\"Minimize drawer\">\n        <IconButton\n          data-testid=\"drawer-minimize\"\n          color=\"inherit\"\n          onClick={() => {\n            session.notify(\n              `Drawer minimized, click button on ${drawerPosition} side of screen to re-open`,\n              'info',\n            )\n            session.minimizeWidgetDrawer()\n          }}\n        >\n          <MinimizeIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title=\"Close drawer\">\n        <IconButton\n          color=\"inherit\"\n          onClick={() => session.hideWidget(visibleWidget)}\n        >\n          <CloseIcon />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={() => setAnchorEl(null)}\n      >\n        {['left', 'right'].map(option => (\n          <MenuItem\n            key={option}\n            selected={drawerPosition === 'option'}\n            onClick={() => {\n              session.setDrawerPosition(option)\n              setAnchorEl(null)\n            }}\n          >\n            {option}\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  )\n})\n\nexport default DrawerHeader\n","import React, { Suspense, useState } from 'react'\nimport { ErrorBoundary } from 'react-error-boundary'\n\nimport { observer } from 'mobx-react'\nimport { getEnv } from '@jbrowse/core/util'\nimport LoadingEllipses from '@jbrowse/core/ui/LoadingEllipses'\nimport ErrorMessage from '@jbrowse/core/ui/ErrorMessage'\nimport { SessionWithFocusedViewAndDrawerWidgets } from '@jbrowse/core/util/types'\n\n// locals\nimport Drawer from './Drawer'\nimport DrawerHeader from './DrawerHeader'\n\nconst DrawerWidget = observer(function ({\n  session,\n}: {\n  session: SessionWithFocusedViewAndDrawerWidgets\n}) {\n  const { visibleWidget } = session\n  const { pluginManager } = getEnv(session)\n\n  const DrawerComponent = visibleWidget\n    ? (pluginManager.evaluateExtensionPoint(\n        'Core-replaceWidget',\n        pluginManager.getWidgetType(visibleWidget.type).ReactComponent,\n        {\n          session,\n          model: visibleWidget,\n        },\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      ) as React.FC<any>)\n    : null\n\n  // we track the toolbar height because components that use virtualized\n  // height want to be able to fill the contained, minus the toolbar height\n  // (the position static/sticky is included in AutoSizer estimates)\n  const [toolbarHeight, setToolbarHeight] = useState(0)\n\n  return (\n    <Drawer session={session}>\n      <DrawerHeader session={session} setToolbarHeight={setToolbarHeight} />\n      <Suspense fallback={<LoadingEllipses />}>\n        <ErrorBoundary\n          FallbackComponent={({ error }) => <ErrorMessage error={error} />}\n        >\n          {DrawerComponent ? (\n            <>\n              <DrawerComponent\n                model={visibleWidget}\n                session={session}\n                toolbarHeight={toolbarHeight}\n              />\n              <div style={{ height: 300 }} />\n            </>\n          ) : null}\n        </ErrorBoundary>\n      </Suspense>\n    </Drawer>\n  )\n})\n\nexport default DrawerWidget\n"],"names":["useStyles","makeStyles","theme","paper","overflowY","height","position","zIndex","drawer","outline","background","palette","default","resizeHandle","width","top","observer","children","session","drawerPosition","drawerWidth","classes","ref","useRef","useEffect","handleSelectView","e","target","Element","current","contains","visibleWidgetId","visibleWidget","view","id","setFocusedViewId","document","addEventListener","removeEventListener","React","Paper","className","elevation","square","ResizeHandle","onDrag","resizeDrawer","vertical","style","left","formControl","margin","spacer","flexGrow","drawerSelect","color","secondary","contrastText","dropDownIcon","headerFocused","main","headerUnfocused","dark","DrawerHeader","setToolbarHeight","focusedViewId","viewWidgetId","AppBar","getBoundingClientRect","Toolbar","disableGutters","DrawerWidgetSelector","DrawerControls","activeWidgets","pluginManager","getEnv","FormControl","Select","value","icon","renderValue","widgetId","widget","get","Typography","variant","widgetType","getWidgetType","type","HeadingComponent","heading","model","onChange","w","showWidget","notify","values","map","MenuItem","key","IconButton","onClick","hideWidget","DeleteIcon","anchorEl","setAnchorEl","useState","event","currentTarget","MoreVertIcon","Tooltip","title","minimizeWidgetDrawer","MinimizeIcon","CloseIcon","Menu","open","Boolean","onClose","option","selected","setDrawerPosition","DrawerComponent","evaluateExtensionPoint","ReactComponent","toolbarHeight","Drawer","Suspense","fallback","LoadingEllipses","ErrorBoundary","FallbackComponent","error","ErrorMessage"],"sourceRoot":""}