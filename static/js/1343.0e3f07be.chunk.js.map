{"version":3,"file":"static/js/1343.0e3f07be.chunk.js","mappings":"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","sources":["../../../node_modules/@gmod/bam/src/virtualOffset.ts","../../../node_modules/@gmod/bam/src/chunk.ts","../../../node_modules/@gmod/bam/src/indexFile.ts","../../../node_modules/@gmod/bam/src/util.ts","../../../node_modules/@gmod/bam/src/bai.ts","../../../node_modules/@gmod/bam/src/csi.ts","../../../node_modules/@gmod/bam/src/constants.ts","../../../node_modules/@gmod/bam/src/record.ts","../../../node_modules/@gmod/bam/src/sam.ts","../../../node_modules/@gmod/bam/src/bamFile.ts","../../../node_modules/@gmod/bam/src/htsget.ts","../../../node_modules/@gmod/bam/node_modules/quick-lru/index.js","../../../node_modules/abortable-promise-cache/esm/AbortablePromiseCache.js","../../../node_modules/abortable-promise-cache/esm/AggregateAbortController.js","../../../node_modules/abortable-promise-cache/esm/AggregateStatusReporter.js","../../../node_modules/abortable-promise-cache/esm/abortcontroller-ponyfill.js","../../../node_modules/abortable-promise-cache/esm/index.js","../../../node_modules/cross-fetch/dist/browser-polyfill.js","../../../node_modules/@babel/runtime/helpers/esm/OverloadYield.js","../../../node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js","../../../node_modules/@babel/runtime/helpers/esm/asyncIterator.js","../../../node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js","../../../node_modules/@babel/runtime/helpers/esm/AsyncGenerator.js","../../../node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js"],"sourcesContent":["export default class VirtualOffset {\n  public blockPosition: number\n  public dataPosition: number\n  constructor(blockPosition: number, dataPosition: number) {\n    this.blockPosition = blockPosition // < offset of the compressed data block\n    this.dataPosition = dataPosition // < offset into the uncompressed data\n  }\n\n  toString() {\n    return `${this.blockPosition}:${this.dataPosition}`\n  }\n\n  compareTo(b: VirtualOffset) {\n    return (\n      this.blockPosition - b.blockPosition || this.dataPosition - b.dataPosition\n    )\n  }\n\n  static min(...args: VirtualOffset[]) {\n    let min\n    let i = 0\n    for (; !min; i += 1) {\n      min = args[i]\n    }\n    for (; i < args.length; i += 1) {\n      if (min.compareTo(args[i]) > 0) {\n        min = args[i]\n      }\n    }\n    return min\n  }\n}\nexport function fromBytes(bytes: Buffer, offset = 0, bigendian = false) {\n  if (bigendian) {\n    throw new Error('big-endian virtual file offsets not implemented')\n  }\n\n  return new VirtualOffset(\n    bytes[offset + 7] * 0x10000000000 +\n      bytes[offset + 6] * 0x100000000 +\n      bytes[offset + 5] * 0x1000000 +\n      bytes[offset + 4] * 0x10000 +\n      bytes[offset + 3] * 0x100 +\n      bytes[offset + 2],\n    (bytes[offset + 1] << 8) | bytes[offset],\n  )\n}\n","import VirtualOffset from './virtualOffset'\n\n// little class representing a chunk in the index\nexport default class Chunk {\n  public minv: VirtualOffset\n  public maxv: VirtualOffset\n  public bin: number\n  public _fetchedSize?: number\n\n  /**\n   * @param {VirtualOffset} minv\n   * @param {VirtualOffset} maxv\n   * @param {number} bin\n   * @param {number} [fetchedSize]\n   */\n  constructor(\n    minv: VirtualOffset,\n    maxv: VirtualOffset,\n    bin: number,\n    fetchedSize = undefined,\n  ) {\n    this.minv = minv\n    this.maxv = maxv\n    this.bin = bin\n    this._fetchedSize = fetchedSize\n  }\n\n  toUniqueString() {\n    return `${this.minv}..${this.maxv} (bin ${\n      this.bin\n    }, fetchedSize ${this.fetchedSize()})`\n  }\n\n  toString() {\n    return this.toUniqueString()\n  }\n\n  compareTo(b: Chunk) {\n    return (\n      this.minv.compareTo(b.minv) ||\n      this.maxv.compareTo(b.maxv) ||\n      this.bin - b.bin\n    )\n  }\n\n  fetchedSize() {\n    if (this._fetchedSize !== undefined) {\n      return this._fetchedSize\n    }\n    return this.maxv.blockPosition + (1 << 16) - this.minv.blockPosition\n  }\n}\n","import { GenericFilehandle } from 'generic-filehandle'\nimport VirtualOffset from './virtualOffset'\nimport Chunk from './chunk'\nimport { BaseOpts } from './util'\n\nexport default abstract class IndexFile {\n  public filehandle: GenericFilehandle\n  public renameRefSeq: (s: string) => string\n  public setupP?: Promise<any>\n\n  /**\n   * @param {filehandle} filehandle\n   * @param {function} [renameRefSeqs]\n   */\n  constructor({\n    filehandle,\n    renameRefSeq = (n: string) => n,\n  }: {\n    filehandle: GenericFilehandle\n    renameRefSeq?: (a: string) => string\n  }) {\n    this.filehandle = filehandle\n    this.renameRefSeq = renameRefSeq\n  }\n  public abstract lineCount(refId: number): Promise<number>\n  protected abstract _parse(opts?: BaseOpts): Promise<any>\n  public abstract indexCov(\n    refId: number,\n    start?: number,\n    end?: number,\n  ): Promise<{ start: number; end: number; score: number }[]>\n\n  public abstract blocksForRange(\n    chrId: number,\n    start: number,\n    end: number,\n    opts?: BaseOpts,\n  ): Promise<Chunk[]>\n\n  _findFirstData(data: any, virtualOffset: VirtualOffset) {\n    const currentFdl = data.firstDataLine\n    if (currentFdl) {\n      data.firstDataLine =\n        currentFdl.compareTo(virtualOffset) > 0 ? virtualOffset : currentFdl\n    } else {\n      data.firstDataLine = virtualOffset\n    }\n  }\n\n  async parse(opts: BaseOpts = {}) {\n    if (!this.setupP) {\n      this.setupP = this._parse(opts).catch(e => {\n        this.setupP = undefined\n        throw e\n      })\n    }\n    return this.setupP\n  }\n\n  async hasRefSeq(seqId: number, opts: BaseOpts = {}) {\n    return !!((await this.parse(opts)).indices[seqId] || {}).binIndex\n  }\n}\n","import Chunk from './chunk'\nimport VirtualOffset from './virtualOffset'\n\nexport function timeout(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n\nexport function longToNumber(long: Long) {\n  if (\n    long.greaterThan(Number.MAX_SAFE_INTEGER) ||\n    long.lessThan(Number.MIN_SAFE_INTEGER)\n  ) {\n    throw new Error('integer overflow')\n  }\n  return long.toNumber()\n}\n\n/**\n * Properly check if the given AbortSignal is aborted.\n * Per the standard, if the signal reads as aborted,\n * this function throws either a DOMException AbortError, or a regular error\n * with a `code` attribute set to `ERR_ABORTED`.\n *\n * For convenience, passing `undefined` is a no-op\n *\n * @param {AbortSignal} [signal] an AbortSignal, or anything with an `aborted` attribute\n * @returns nothing\n */\nexport function checkAbortSignal(signal?: AbortSignal) {\n  if (!signal) {\n    return\n  }\n\n  if (signal.aborted) {\n    // console.log('bam aborted!')\n    if (typeof DOMException !== 'undefined') {\n      throw new DOMException('aborted', 'AbortError')\n    } else {\n      const e = new Error('aborted')\n      //@ts-ignore\n      e.code = 'ERR_ABORTED'\n      throw e\n    }\n  }\n}\n\n/**\n * Skips to the next tick, then runs `checkAbortSignal`.\n * Await this to inside an otherwise synchronous loop to\n * provide a place to break when an abort signal is received.\n * @param {AbortSignal} signal\n */\nexport async function abortBreakPoint(signal?: AbortSignal) {\n  await Promise.resolve()\n  checkAbortSignal(signal)\n}\n\nexport function canMergeBlocks(chunk1: Chunk, chunk2: Chunk) {\n  return (\n    chunk2.minv.blockPosition - chunk1.maxv.blockPosition < 65000 &&\n    chunk2.maxv.blockPosition - chunk1.minv.blockPosition < 5000000\n  )\n}\n\nexport interface BamOpts {\n  viewAsPairs?: boolean\n  pairAcrossChr?: boolean\n  maxInsertSize?: number\n  signal?: AbortSignal\n}\n\nexport interface BaseOpts {\n  signal?: AbortSignal\n}\n\nexport function makeOpts(obj: AbortSignal | BaseOpts = {}): BaseOpts {\n  return 'aborted' in obj ? ({ signal: obj } as BaseOpts) : (obj as BaseOpts)\n}\n\nexport function optimizeChunks(chunks: Chunk[], lowest: VirtualOffset) {\n  const mergedChunks: Chunk[] = []\n  let lastChunk: Chunk | null = null\n\n  if (chunks.length === 0) {\n    return chunks\n  }\n\n  chunks.sort((c0, c1) => {\n    const dif = c0.minv.blockPosition - c1.minv.blockPosition\n    if (dif !== 0) {\n      return dif\n    } else {\n      return c0.minv.dataPosition - c1.minv.dataPosition\n    }\n  })\n\n  chunks.forEach(chunk => {\n    if (!lowest || chunk.maxv.compareTo(lowest) > 0) {\n      if (lastChunk === null) {\n        mergedChunks.push(chunk)\n        lastChunk = chunk\n      } else {\n        if (canMergeBlocks(lastChunk, chunk)) {\n          if (chunk.maxv.compareTo(lastChunk.maxv) > 0) {\n            lastChunk.maxv = chunk.maxv\n          }\n        } else {\n          mergedChunks.push(chunk)\n          lastChunk = chunk\n        }\n      }\n    }\n  })\n\n  return mergedChunks\n}\n","import Long from 'long'\nimport { fromBytes } from './virtualOffset'\nimport Chunk from './chunk'\n\nimport IndexFile from './indexFile'\nimport { longToNumber, optimizeChunks, BaseOpts } from './util'\n\nconst BAI_MAGIC = 21578050 // BAI\\1\n\nfunction roundDown(n: number, multiple: number) {\n  return n - (n % multiple)\n}\nfunction roundUp(n: number, multiple: number) {\n  return n - (n % multiple) + multiple\n}\n\nexport default class BAI extends IndexFile {\n  baiP?: Promise<Buffer>\n\n  parsePseudoBin(bytes: Buffer, offset: number) {\n    const lineCount = longToNumber(\n      Long.fromBytesLE(\n        Array.prototype.slice.call(bytes, offset + 16, offset + 24),\n        true,\n      ),\n    )\n    return { lineCount }\n  }\n\n  async lineCount(refId: number, opts: BaseOpts = {}) {\n    const prom = await this.parse(opts)\n    const index = prom.indices[refId]\n    if (!index) {\n      return -1\n    }\n    const ret = index.stats || {}\n    return ret.lineCount === undefined ? -1 : ret.lineCount\n  }\n\n  fetchBai(opts: BaseOpts = {}) {\n    if (!this.baiP) {\n      this.baiP = this.filehandle.readFile(opts).catch(e => {\n        this.baiP = undefined\n        throw e\n      }) as Promise<Buffer>\n    }\n    return this.baiP\n  }\n\n  // fetch and parse the index\n  async _parse() {\n    const data: { [key: string]: any } = { bai: true, maxBlockSize: 1 << 16 }\n    const bytes = await this.fetchBai()\n\n    // check BAI magic numbers\n    if (bytes.readUInt32LE(0) !== BAI_MAGIC) {\n      throw new Error('Not a BAI file')\n    }\n\n    data.refCount = bytes.readInt32LE(4)\n    const depth = 5\n    const binLimit = ((1 << ((depth + 1) * 3)) - 1) / 7\n\n    // read the indexes for each reference sequence\n    data.indices = new Array(data.refCount)\n    let currOffset = 8\n    for (let i = 0; i < data.refCount; i += 1) {\n      // the binning index\n      const binCount = bytes.readInt32LE(currOffset)\n      let stats\n\n      currOffset += 4\n      const binIndex: { [key: number]: Chunk[] } = {}\n      for (let j = 0; j < binCount; j += 1) {\n        const bin = bytes.readUInt32LE(currOffset)\n        currOffset += 4\n        if (bin === binLimit + 1) {\n          currOffset += 4\n          stats = this.parsePseudoBin(bytes, currOffset)\n          currOffset += 32\n        } else if (bin > binLimit + 1) {\n          throw new Error('bai index contains too many bins, please use CSI')\n        } else {\n          const chunkCount = bytes.readInt32LE(currOffset)\n          currOffset += 4\n          const chunks = new Array(chunkCount)\n          for (let k = 0; k < chunkCount; k += 1) {\n            const u = fromBytes(bytes, currOffset)\n            const v = fromBytes(bytes, currOffset + 8)\n            currOffset += 16\n            this._findFirstData(data, u)\n            chunks[k] = new Chunk(u, v, bin)\n          }\n          binIndex[bin] = chunks\n        }\n      }\n\n      const linearCount = bytes.readInt32LE(currOffset)\n      currOffset += 4\n      // as we're going through the linear index, figure out\n      // the smallest virtual offset in the indexes, which\n      // tells us where the BAM header ends\n      const linearIndex = new Array(linearCount)\n      for (let k = 0; k < linearCount; k += 1) {\n        linearIndex[k] = fromBytes(bytes, currOffset)\n        currOffset += 8\n        this._findFirstData(data, linearIndex[k])\n      }\n\n      data.indices[i] = { binIndex, linearIndex, stats }\n    }\n\n    return data\n  }\n\n  async indexCov(\n    seqId: number,\n    start?: number,\n    end?: number,\n    opts: BaseOpts = {},\n  ): Promise<{ start: number; end: number; score: number }[]> {\n    const v = 16384\n    const range = start !== undefined\n    const indexData = await this.parse(opts)\n    const seqIdx = indexData.indices[seqId]\n    if (!seqIdx) {\n      return []\n    }\n    const { linearIndex = [], stats } = seqIdx\n    if (!linearIndex.length) {\n      return []\n    }\n    const e = end !== undefined ? roundUp(end, v) : (linearIndex.length - 1) * v\n    const s = start !== undefined ? roundDown(start, v) : 0\n    let depths\n    if (range) {\n      depths = new Array((e - s) / v)\n    } else {\n      depths = new Array(linearIndex.length - 1)\n    }\n    const totalSize = linearIndex[linearIndex.length - 1].blockPosition\n    if (e > (linearIndex.length - 1) * v) {\n      throw new Error('query outside of range of linear index')\n    }\n    let currentPos = linearIndex[s / v].blockPosition\n    for (let i = s / v, j = 0; i < e / v; i++, j++) {\n      depths[j] = {\n        score: linearIndex[i + 1].blockPosition - currentPos,\n        start: i * v,\n        end: i * v + v,\n      }\n      currentPos = linearIndex[i + 1].blockPosition\n    }\n    return depths.map(d => {\n      return { ...d, score: (d.score * stats.lineCount) / totalSize }\n    })\n  }\n\n  /**\n   * calculate the list of bins that may overlap with region [beg,end) (zero-based half-open)\n   * @returns {Array[number]}\n   */\n  reg2bins(beg: number, end: number) {\n    end -= 1\n    return [\n      [0, 0],\n      [1 + (beg >> 26), 1 + (end >> 26)],\n      [9 + (beg >> 23), 9 + (end >> 23)],\n      [73 + (beg >> 20), 73 + (end >> 20)],\n      [585 + (beg >> 17), 585 + (end >> 17)],\n      [4681 + (beg >> 14), 4681 + (end >> 14)],\n    ]\n  }\n\n  async blocksForRange(\n    refId: number,\n    min: number,\n    max: number,\n    opts: BaseOpts = {},\n  ) {\n    if (min < 0) {\n      min = 0\n    }\n\n    const indexData = await this.parse(opts)\n    if (!indexData) {\n      return []\n    }\n    const ba = indexData.indices[refId]\n    if (!ba) {\n      return []\n    }\n\n    // List of bin #s that overlap min, max\n    const overlappingBins = this.reg2bins(min, max)\n    const chunks: Chunk[] = []\n\n    // Find chunks in overlapping bins.  Leaf bins (< 4681) are not pruned\n    for (const [start, end] of overlappingBins) {\n      for (let bin = start; bin <= end; bin++) {\n        if (ba.binIndex[bin]) {\n          const binChunks = ba.binIndex[bin]\n          for (let c = 0; c < binChunks.length; ++c) {\n            chunks.push(new Chunk(binChunks[c].minv, binChunks[c].maxv, bin))\n          }\n        }\n      }\n    }\n\n    // Use the linear index to find minimum file position of chunks that could\n    // contain alignments in the region\n    const nintv = ba.linearIndex.length\n    let lowest = null\n    const minLin = Math.min(min >> 14, nintv - 1)\n    const maxLin = Math.min(max >> 14, nintv - 1)\n    for (let i = minLin; i <= maxLin; ++i) {\n      const vp = ba.linearIndex[i]\n      if (vp) {\n        if (!lowest || vp.compareTo(lowest) < 0) {\n          lowest = vp\n        }\n      }\n    }\n\n    return optimizeChunks(chunks, lowest)\n  }\n}\n","import Long from 'long'\nimport { unzip } from '@gmod/bgzf-filehandle'\nimport VirtualOffset, { fromBytes } from './virtualOffset'\nimport Chunk from './chunk'\nimport { longToNumber, abortBreakPoint, optimizeChunks, BaseOpts } from './util'\n\nimport IndexFile from './indexFile'\n\nconst CSI1_MAGIC = 21582659 // CSI\\1\nconst CSI2_MAGIC = 38359875 // CSI\\2\n\nfunction lshift(num: number, bits: number) {\n  return num * 2 ** bits\n}\nfunction rshift(num: number, bits: number) {\n  return Math.floor(num / 2 ** bits)\n}\n\nexport default class CSI extends IndexFile {\n  private maxBinNumber: number\n  private depth: number\n  private minShift: number\n  constructor(args: any) {\n    super(args)\n    this.maxBinNumber = 0\n    this.depth = 0\n    this.minShift = 0\n  }\n  async lineCount(refId: number): Promise<number> {\n    const indexData = await this.parse()\n    if (!indexData) {\n      return -1\n    }\n    const idx = indexData.indices[refId]\n    if (!idx) {\n      return -1\n    }\n    const { stats } = indexData.indices[refId]\n    if (stats) {\n      return stats.lineCount\n    }\n    return -1\n  }\n\n  async indexCov() {\n    return []\n  }\n\n  parseAuxData(bytes: Buffer, offset: number, auxLength: number) {\n    if (auxLength < 30) {\n      return {}\n    }\n\n    const data: { [key: string]: any } = {}\n    data.formatFlags = bytes.readInt32LE(offset)\n    data.coordinateType =\n      data.formatFlags & 0x10000 ? 'zero-based-half-open' : '1-based-closed'\n    data.format = (\n      { 0: 'generic', 1: 'SAM', 2: 'VCF' } as {\n        [key: number]: string\n      }\n    )[data.formatFlags & 0xf]\n    if (!data.format) {\n      throw new Error(`invalid Tabix preset format flags ${data.formatFlags}`)\n    }\n    data.columnNumbers = {\n      ref: bytes.readInt32LE(offset + 4),\n      start: bytes.readInt32LE(offset + 8),\n      end: bytes.readInt32LE(offset + 12),\n    }\n    data.metaValue = bytes.readInt32LE(offset + 16)\n    data.metaChar = data.metaValue ? String.fromCharCode(data.metaValue) : ''\n    data.skipLines = bytes.readInt32LE(offset + 20)\n    const nameSectionLength = bytes.readInt32LE(offset + 24)\n\n    Object.assign(\n      data,\n      this._parseNameBytes(\n        bytes.subarray(offset + 28, offset + 28 + nameSectionLength),\n      ),\n    )\n    return data\n  }\n\n  _parseNameBytes(namesBytes: Buffer) {\n    let currRefId = 0\n    let currNameStart = 0\n    const refIdToName = []\n    const refNameToId: { [key: string]: number } = {}\n    for (let i = 0; i < namesBytes.length; i += 1) {\n      if (!namesBytes[i]) {\n        if (currNameStart < i) {\n          let refName = namesBytes.toString('utf8', currNameStart, i)\n          refName = this.renameRefSeq(refName)\n          refIdToName[currRefId] = refName\n          refNameToId[refName] = currRefId\n        }\n        currNameStart = i + 1\n        currRefId += 1\n      }\n    }\n    return { refNameToId, refIdToName }\n  }\n\n  // fetch and parse the index\n  async _parse(opts: { signal?: AbortSignal }) {\n    const data: { [key: string]: any } = { csi: true, maxBlockSize: 1 << 16 }\n    const buffer = (await this.filehandle.readFile(opts)) as Buffer\n    const bytes = await unzip(buffer)\n\n    // check TBI magic numbers\n    if (bytes.readUInt32LE(0) === CSI1_MAGIC) {\n      data.csiVersion = 1\n    } else if (bytes.readUInt32LE(0) === CSI2_MAGIC) {\n      data.csiVersion = 2\n    } else {\n      throw new Error('Not a CSI file')\n      // TODO: do we need to support big-endian CSI files?\n    }\n\n    this.minShift = bytes.readInt32LE(4)\n    this.depth = bytes.readInt32LE(8)\n    this.maxBinNumber = ((1 << ((this.depth + 1) * 3)) - 1) / 7\n    const auxLength = bytes.readInt32LE(12)\n    if (auxLength) {\n      Object.assign(data, this.parseAuxData(bytes, 16, auxLength))\n    }\n    data.refCount = bytes.readInt32LE(16 + auxLength)\n\n    // read the indexes for each reference sequence\n    data.indices = new Array(data.refCount)\n    let currOffset = 16 + auxLength + 4\n    for (let i = 0; i < data.refCount; i += 1) {\n      await abortBreakPoint(opts.signal)\n      // the binning index\n      const binCount = bytes.readInt32LE(currOffset)\n      currOffset += 4\n      const binIndex: { [key: string]: Chunk[] } = {}\n      let stats // < provided by parsing a pseudo-bin, if present\n      for (let j = 0; j < binCount; j += 1) {\n        const bin = bytes.readUInt32LE(currOffset)\n        if (bin > this.maxBinNumber) {\n          // this is a fake bin that actually has stats information\n          // about the reference sequence in it\n          stats = this.parsePseudoBin(bytes, currOffset + 4)\n          currOffset += 4 + 8 + 4 + 16 + 16\n        } else {\n          const loffset = fromBytes(bytes, currOffset + 4)\n          this._findFirstData(data, loffset)\n          const chunkCount = bytes.readInt32LE(currOffset + 12)\n          currOffset += 16\n          const chunks = new Array(chunkCount)\n          for (let k = 0; k < chunkCount; k += 1) {\n            const u = fromBytes(bytes, currOffset)\n            const v = fromBytes(bytes, currOffset + 8)\n            currOffset += 16\n            // this._findFirstData(data, u)\n            chunks[k] = new Chunk(u, v, bin)\n          }\n          binIndex[bin] = chunks\n        }\n      }\n\n      data.indices[i] = { binIndex, stats }\n    }\n\n    return data\n  }\n\n  parsePseudoBin(bytes: Buffer, offset: number) {\n    const lineCount = longToNumber(\n      Long.fromBytesLE(\n        Array.prototype.slice.call(bytes, offset + 28, offset + 36),\n        true,\n      ),\n    )\n    return { lineCount }\n  }\n\n  async blocksForRange(\n    refId: number,\n    min: number,\n    max: number,\n    opts: BaseOpts = {},\n  ) {\n    if (min < 0) {\n      min = 0\n    }\n\n    const indexData = await this.parse(opts)\n    const ba = indexData?.indices[refId]\n    if (!ba) {\n      return []\n    }\n\n    const overlappingBins = this.reg2bins(min, max) // List of bin #s that overlap min, max\n    const chunks = []\n\n    // Find chunks in overlapping bins.  Leaf bins (< 4681) are not pruned\n    for (const [start, end] of overlappingBins) {\n      for (let bin = start; bin <= end; bin++) {\n        if (ba.binIndex[bin]) {\n          const binChunks = ba.binIndex[bin]\n          for (let c = 0; c < binChunks.length; ++c) {\n            chunks.push(new Chunk(binChunks[c].minv, binChunks[c].maxv, bin))\n          }\n        }\n      }\n    }\n\n    return optimizeChunks(chunks, new VirtualOffset(0, 0))\n  }\n\n  /**\n   * calculate the list of bins that may overlap with region [beg,end)\n   * (zero-based half-open)\n   */\n  reg2bins(beg: number, end: number) {\n    beg -= 1 // < convert to 1-based closed\n    if (beg < 1) {\n      beg = 1\n    }\n    if (end > 2 ** 50) {\n      end = 2 ** 34\n    } // 17 GiB ought to be enough for anybody\n    end -= 1\n    let l = 0\n    let t = 0\n    let s = this.minShift + this.depth * 3\n    const bins = []\n    for (; l <= this.depth; s -= 3, t += lshift(1, l * 3), l += 1) {\n      const b = t + rshift(beg, s)\n      const e = t + rshift(end, s)\n      if (e - b + bins.length > this.maxBinNumber) {\n        throw new Error(\n          `query ${beg}-${end} is too large for current binning scheme (shift ${this.minShift}, depth ${this.depth}), try a smaller query or a coarser index binning scheme`,\n        )\n      }\n      bins.push([b, e])\n    }\n    return bins\n  }\n}\n","export default {\n  //  the read is paired in sequencing, no matter whether it is mapped in a pair\n  BAM_FPAIRED: 1,\n  //  the read is mapped in a proper pair\n  BAM_FPROPER_PAIR: 2,\n  //  the read itself is unmapped; conflictive with BAM_FPROPER_PAIR\n  BAM_FUNMAP: 4,\n  //  the mate is unmapped\n  BAM_FMUNMAP: 8,\n  //  the read is mapped to the reverse strand\n  BAM_FREVERSE: 16,\n  //  the mate is mapped to the reverse strand\n  BAM_FMREVERSE: 32,\n  //  this is read1\n  BAM_FREAD1: 64,\n  //  this is read2\n  BAM_FREAD2: 128,\n  //  not primary alignment\n  BAM_FSECONDARY: 256,\n  //  QC failure\n  BAM_FQCFAIL: 512,\n  //  optical or PCR duplicate\n  BAM_FDUP: 1024,\n  //  supplementary alignment\n  BAM_FSUPPLEMENTARY: 2048,\n}\n","/* eslint-disable @typescript-eslint/no-empty-function */\nimport Constants from './constants'\n\nconst SEQRET_DECODER = '=ACMGRSVTWYHKDBN'.split('')\nconst CIGAR_DECODER = 'MIDNSHP=X???????'.split('')\n\n/**\n * Class of each BAM record returned by this API.\n */\nexport default class BamRecord {\n  private data = {} as { [key: string]: any }\n  private bytes: { start: number; end: number; byteArray: Buffer }\n  private _id: number\n  private _tagOffset: number | undefined\n  private _tagList: string[] = []\n  private _allTagsParsed = false\n\n  public flags: any\n  public _refID: number\n  constructor(args: any) {\n    const { bytes, fileOffset } = args\n    const { byteArray, start } = bytes\n    this.data = {}\n    this.bytes = bytes\n    this._id = fileOffset\n    this._refID = byteArray.readInt32LE(start + 4)\n    this.data.start = byteArray.readInt32LE(start + 8)\n    this.flags = (byteArray.readInt32LE(start + 16) & 0xffff0000) >> 16\n  }\n\n  get(field: string) {\n    //@ts-ignore\n    if (this[field]) {\n      //@ts-ignore\n      if (this.data[field]) {\n        return this.data[field]\n      }\n      //@ts-ignore\n      this.data[field] = this[field]()\n      return this.data[field]\n    }\n    return this._get(field.toLowerCase())\n  }\n\n  end() {\n    return this.get('start') + this.get('length_on_ref')\n  }\n\n  seq_id() {\n    return this._refID\n  }\n\n  // same as get(), except requires lower-case arguments.  used\n  // internally to save lots of calls to field.toLowerCase()\n  _get(field: string) {\n    if (field in this.data) {\n      return this.data[field]\n    }\n    this.data[field] = this._parseTag(field)\n    return this.data[field]\n  }\n\n  _tags() {\n    this._parseAllTags()\n\n    let tags = ['seq']\n\n    if (!this.isSegmentUnmapped()) {\n      tags.push(\n        'start',\n        'end',\n        'strand',\n        'score',\n        'qual',\n        'MQ',\n        'CIGAR',\n        'length_on_ref',\n        'template_length',\n      )\n    }\n    if (this.isPaired()) {\n      tags.push('next_segment_position', 'pair_orientation')\n    }\n    tags = tags.concat(this._tagList || [])\n\n    Object.keys(this.data).forEach(k => {\n      if (k[0] !== '_' && k !== 'next_seq_id') {\n        tags.push(k)\n      }\n    })\n\n    const seen: { [key: string]: boolean } = {}\n    return tags.filter(t => {\n      if (\n        (t in this.data && this.data[t] === undefined) ||\n        t === 'CG' ||\n        t === 'cg'\n      ) {\n        return false\n      }\n\n      const lt = t.toLowerCase()\n      const s = seen[lt]\n      seen[lt] = true\n      return !s\n    })\n  }\n\n  parent() {\n    return undefined\n  }\n\n  children() {\n    return this.get('subfeatures')\n  }\n\n  id() {\n    return this._id\n  }\n\n  // special parsers\n  /**\n   * Mapping quality score.\n   */\n  mq() {\n    const mq = (this.get('_bin_mq_nl') & 0xff00) >> 8\n    return mq === 255 ? undefined : mq\n  }\n\n  score() {\n    return this.get('mq')\n  }\n\n  qual() {\n    return this.qualRaw()?.join(' ')\n  }\n\n  qualRaw() {\n    if (this.isSegmentUnmapped()) {\n      return undefined\n    }\n\n    const { start, byteArray } = this.bytes\n    const p =\n      start +\n      36 +\n      this.get('_l_read_name') +\n      this.get('_n_cigar_op') * 4 +\n      this.get('_seq_bytes')\n    const lseq = this.get('seq_length')\n    return byteArray.subarray(p, p + lseq)\n  }\n\n  strand() {\n    return this.isReverseComplemented() ? -1 : 1\n  }\n\n  multi_segment_next_segment_strand() {\n    if (this.isMateUnmapped()) {\n      return undefined\n    }\n    return this.isMateReverseComplemented() ? -1 : 1\n  }\n\n  name() {\n    return this.get('_read_name')\n  }\n\n  _read_name() {\n    const nl = this.get('_l_read_name')\n    const { byteArray, start } = this.bytes\n    return byteArray.toString('ascii', start + 36, start + 36 + nl - 1)\n  }\n\n  /**\n   * Get the value of a tag, parsing the tags as far as necessary.\n   * Only called if we have not already parsed that field.\n   */\n  _parseTag(tagName?: string) {\n    // if all of the tags have been parsed and we're still being\n    // called, we already know that we have no such tag, because\n    // it would already have been cached.\n    if (this._allTagsParsed) {\n      return undefined\n    }\n\n    const { byteArray, start } = this.bytes\n    let p =\n      this._tagOffset ||\n      start +\n        36 +\n        this.get('_l_read_name') +\n        this.get('_n_cigar_op') * 4 +\n        this.get('_seq_bytes') +\n        this.get('seq_length')\n\n    const blockEnd = this.bytes.end\n    let lcTag\n    while (p < blockEnd && lcTag !== tagName) {\n      const tag = String.fromCharCode(byteArray[p], byteArray[p + 1])\n      lcTag = tag.toLowerCase()\n      const type = String.fromCharCode(byteArray[p + 2])\n      p += 3\n\n      let value\n      switch (type) {\n        case 'A':\n          value = String.fromCharCode(byteArray[p])\n          p += 1\n          break\n        case 'i':\n          value = byteArray.readInt32LE(p)\n          p += 4\n          break\n        case 'I':\n          value = byteArray.readUInt32LE(p)\n          p += 4\n          break\n        case 'c':\n          value = byteArray.readInt8(p)\n          p += 1\n          break\n        case 'C':\n          value = byteArray.readUInt8(p)\n          p += 1\n          break\n        case 's':\n          value = byteArray.readInt16LE(p)\n          p += 2\n          break\n        case 'S':\n          value = byteArray.readUInt16LE(p)\n          p += 2\n          break\n        case 'f':\n          value = byteArray.readFloatLE(p)\n          p += 4\n          break\n        case 'Z':\n        case 'H':\n          value = ''\n          while (p <= blockEnd) {\n            const cc = byteArray[p++]\n            if (cc === 0) {\n              break\n            } else {\n              value += String.fromCharCode(cc)\n            }\n          }\n          break\n        case 'B': {\n          value = ''\n          const cc = byteArray[p++]\n          const Btype = String.fromCharCode(cc)\n          const limit = byteArray.readInt32LE(p)\n          p += 4\n          if (Btype === 'i') {\n            if (tag === 'CG') {\n              for (let k = 0; k < limit; k++) {\n                const cigop = byteArray.readInt32LE(p)\n                const lop = cigop >> 4\n                const op = CIGAR_DECODER[cigop & 0xf]\n                value += lop + op\n                p += 4\n              }\n            } else {\n              for (let k = 0; k < limit; k++) {\n                value += byteArray.readInt32LE(p)\n                if (k + 1 < limit) {\n                  value += ','\n                }\n                p += 4\n              }\n            }\n          }\n          if (Btype === 'I') {\n            if (tag === 'CG') {\n              for (let k = 0; k < limit; k++) {\n                const cigop = byteArray.readUInt32LE(p)\n                const lop = cigop >> 4\n                const op = CIGAR_DECODER[cigop & 0xf]\n                value += lop + op\n                p += 4\n              }\n            } else {\n              for (let k = 0; k < limit; k++) {\n                value += byteArray.readUInt32LE(p)\n                if (k + 1 < limit) {\n                  value += ','\n                }\n                p += 4\n              }\n            }\n          }\n          if (Btype === 's') {\n            for (let k = 0; k < limit; k++) {\n              value += byteArray.readInt16LE(p)\n              if (k + 1 < limit) {\n                value += ','\n              }\n              p += 2\n            }\n          }\n          if (Btype === 'S') {\n            for (let k = 0; k < limit; k++) {\n              value += byteArray.readUInt16LE(p)\n              if (k + 1 < limit) {\n                value += ','\n              }\n              p += 2\n            }\n          }\n          if (Btype === 'c') {\n            for (let k = 0; k < limit; k++) {\n              value += byteArray.readInt8(p)\n              if (k + 1 < limit) {\n                value += ','\n              }\n              p += 1\n            }\n          }\n          if (Btype === 'C') {\n            for (let k = 0; k < limit; k++) {\n              value += byteArray.readUInt8(p)\n              if (k + 1 < limit) {\n                value += ','\n              }\n              p += 1\n            }\n          }\n          if (Btype === 'f') {\n            for (let k = 0; k < limit; k++) {\n              value += byteArray.readFloatLE(p)\n              if (k + 1 < limit) {\n                value += ','\n              }\n              p += 4\n            }\n          }\n          break\n        }\n        default:\n          console.warn(`Unknown BAM tag type '${type}', tags may be incomplete`)\n          value = undefined\n          p = blockEnd // stop parsing tags\n      }\n\n      this._tagOffset = p\n\n      this._tagList.push(tag)\n      if (lcTag === tagName) {\n        return value\n      }\n\n      this.data[lcTag] = value\n    }\n    this._allTagsParsed = true\n    return undefined\n  }\n\n  _parseAllTags() {\n    this._parseTag('')\n  }\n\n  _parseCigar(cigar: string) {\n    return (\n      //@ts-ignore\n      cigar\n        .match(/\\d+\\D/g)\n        //@ts-ignore\n        .map(op => [op.match(/\\D/)[0].toUpperCase(), parseInt(op, 10)])\n    )\n  }\n\n  /**\n   * @returns {boolean} true if the read is paired, regardless of whether both segments are mapped\n   */\n  isPaired() {\n    return !!(this.flags & Constants.BAM_FPAIRED)\n  }\n\n  /** @returns {boolean} true if the read is paired, and both segments are mapped */\n  isProperlyPaired() {\n    return !!(this.flags & Constants.BAM_FPROPER_PAIR)\n  }\n\n  /** @returns {boolean} true if the read itself is unmapped; conflictive with isProperlyPaired */\n  isSegmentUnmapped() {\n    return !!(this.flags & Constants.BAM_FUNMAP)\n  }\n\n  /** @returns {boolean} true if the read itself is unmapped; conflictive with isProperlyPaired */\n  isMateUnmapped() {\n    return !!(this.flags & Constants.BAM_FMUNMAP)\n  }\n\n  /** @returns {boolean} true if the read is mapped to the reverse strand */\n  isReverseComplemented() {\n    return !!(this.flags & Constants.BAM_FREVERSE)\n  }\n\n  /** @returns {boolean} true if the mate is mapped to the reverse strand */\n  isMateReverseComplemented() {\n    return !!(this.flags & Constants.BAM_FMREVERSE)\n  }\n\n  /** @returns {boolean} true if this is read number 1 in a pair */\n  isRead1() {\n    return !!(this.flags & Constants.BAM_FREAD1)\n  }\n\n  /** @returns {boolean} true if this is read number 2 in a pair */\n  isRead2() {\n    return !!(this.flags & Constants.BAM_FREAD2)\n  }\n\n  /** @returns {boolean} true if this is a secondary alignment */\n  isSecondary() {\n    return !!(this.flags & Constants.BAM_FSECONDARY)\n  }\n\n  /** @returns {boolean} true if this read has failed QC checks */\n  isFailedQc() {\n    return !!(this.flags & Constants.BAM_FQCFAIL)\n  }\n\n  /** @returns {boolean} true if the read is an optical or PCR duplicate */\n  isDuplicate() {\n    return !!(this.flags & Constants.BAM_FDUP)\n  }\n\n  /** @returns {boolean} true if this is a supplementary alignment */\n  isSupplementary() {\n    return !!(this.flags & Constants.BAM_FSUPPLEMENTARY)\n  }\n\n  cigar() {\n    if (this.isSegmentUnmapped()) {\n      return undefined\n    }\n\n    const { byteArray, start } = this.bytes\n    const numCigarOps = this.get('_n_cigar_op')\n    let p = start + 36 + this.get('_l_read_name')\n    const seqLen = this.get('seq_length')\n    let cigar = ''\n    let lref = 0\n\n    // check for CG tag by inspecting whether the CIGAR field\n    // contains a clip that consumes entire seqLen\n    let cigop = byteArray.readInt32LE(p)\n    let lop = cigop >> 4\n    let op = CIGAR_DECODER[cigop & 0xf]\n    if (op === 'S' && lop === seqLen) {\n      // if there is a CG the second CIGAR field will\n      // be a N tag the represents the length on ref\n      p += 4\n      cigop = byteArray.readInt32LE(p)\n      lop = cigop >> 4\n      op = CIGAR_DECODER[cigop & 0xf]\n      if (op !== 'N') {\n        console.warn('CG tag with no N tag')\n      }\n      this.data.length_on_ref = lop\n      return this.get('CG')\n    } else {\n      for (let c = 0; c < numCigarOps; ++c) {\n        cigop = byteArray.readInt32LE(p)\n        lop = cigop >> 4\n        op = CIGAR_DECODER[cigop & 0xf]\n        cigar += lop + op\n\n        // soft clip, hard clip, and insertion don't count toward\n        // the length on the reference\n        if (op !== 'H' && op !== 'S' && op !== 'I') {\n          lref += lop\n        }\n\n        p += 4\n      }\n\n      this.data.length_on_ref = lref\n      return cigar\n    }\n  }\n\n  _flags() {}\n\n  length_on_ref() {\n    if (this.data.length_on_ref) {\n      return this.data.length_on_ref\n    } else {\n      this.get('cigar') // the length_on_ref is set as a side effect\n      return this.data.length_on_ref\n    }\n  }\n\n  _n_cigar_op() {\n    return this.get('_flag_nc') & 0xffff\n  }\n\n  _l_read_name() {\n    return this.get('_bin_mq_nl') & 0xff\n  }\n\n  /**\n   * number of bytes in the sequence field\n   */\n  _seq_bytes() {\n    return (this.get('seq_length') + 1) >> 1\n  }\n\n  getReadBases() {\n    return this.seq()\n  }\n\n  seq() {\n    const { byteArray, start } = this.bytes\n    const p =\n      start + 36 + this.get('_l_read_name') + this.get('_n_cigar_op') * 4\n    const seqBytes = this.get('_seq_bytes')\n    const len = this.get('seq_length')\n    let buf = ''\n    let i = 0\n    for (let j = 0; j < seqBytes; ++j) {\n      const sb = byteArray[p + j]\n      buf += SEQRET_DECODER[(sb & 0xf0) >> 4]\n      i++\n      if (i < len) {\n        buf += SEQRET_DECODER[sb & 0x0f]\n        i++\n      }\n    }\n    return buf\n  }\n\n  // adapted from igv.js\n  getPairOrientation() {\n    if (\n      !this.isSegmentUnmapped() &&\n      !this.isMateUnmapped() &&\n      this._refID === this._next_refid()\n    ) {\n      const s1 = this.isReverseComplemented() ? 'R' : 'F'\n      const s2 = this.isMateReverseComplemented() ? 'R' : 'F'\n      let o1 = ' '\n      let o2 = ' '\n      if (this.isRead1()) {\n        o1 = '1'\n        o2 = '2'\n      } else if (this.isRead2()) {\n        o1 = '2'\n        o2 = '1'\n      }\n\n      const tmp = []\n      const isize = this.template_length()\n      if (isize > 0) {\n        tmp[0] = s1\n        tmp[1] = o1\n        tmp[2] = s2\n        tmp[3] = o2\n      } else {\n        tmp[2] = s1\n        tmp[3] = o1\n        tmp[0] = s2\n        tmp[1] = o2\n      }\n      return tmp.join('')\n    }\n    return null\n  }\n\n  _bin_mq_nl() {\n    return this.bytes.byteArray.readInt32LE(this.bytes.start + 12)\n  }\n\n  _flag_nc() {\n    return this.bytes.byteArray.readInt32LE(this.bytes.start + 16)\n  }\n\n  seq_length() {\n    return this.bytes.byteArray.readInt32LE(this.bytes.start + 20)\n  }\n\n  _next_refid() {\n    return this.bytes.byteArray.readInt32LE(this.bytes.start + 24)\n  }\n\n  _next_pos() {\n    return this.bytes.byteArray.readInt32LE(this.bytes.start + 28)\n  }\n\n  template_length() {\n    return this.bytes.byteArray.readInt32LE(this.bytes.start + 32)\n  }\n\n  toJSON() {\n    const data: { [key: string]: any } = {}\n    Object.keys(this).forEach(k => {\n      if (k.charAt(0) === '_' || k === 'bytes') {\n        return\n      }\n      //@ts-ignore\n      data[k] = this[k]\n    })\n\n    return data\n  }\n}\n","export function parseHeaderText(text: string) {\n  const lines = text.split(/\\r?\\n/)\n  const data: { tag: string; data: { tag: string; value: string }[] }[] = []\n  lines.forEach(line => {\n    const [tag, ...fields] = line.split(/\\t/)\n    const parsedFields = fields.map(f => {\n      const [fieldTag, value] = f.split(':', 2)\n      return { tag: fieldTag, value }\n    })\n    if (tag) {\n      data.push({ tag: tag.substr(1), data: parsedFields })\n    }\n  })\n  return data\n}\n","import crc32 from 'buffer-crc32'\nimport { unzip, unzipChunkSlice } from '@gmod/bgzf-filehandle'\nimport entries from 'object.entries-ponyfill'\nimport { LocalFile, RemoteFile, GenericFilehandle } from 'generic-filehandle'\nimport AbortablePromiseCache from 'abortable-promise-cache'\nimport QuickLRU from 'quick-lru'\n//locals\nimport BAI from './bai'\nimport CSI from './csi'\nimport Chunk from './chunk'\nimport BAMFeature from './record'\nimport IndexFile from './indexFile'\nimport { parseHeaderText } from './sam'\nimport {\n  abortBreakPoint,\n  checkAbortSignal,\n  timeout,\n  makeOpts,\n  BamOpts,\n  BaseOpts,\n} from './util'\n\nexport const BAM_MAGIC = 21840194\n\nconst blockLen = 1 << 16\n\nfunction flat<T>(arr: T[][]) {\n  return ([] as T[]).concat(...arr)\n}\n\nasync function gen2array<T>(gen: AsyncIterable<T>): Promise<T[]> {\n  const out: T[] = []\n  for await (const x of gen) {\n    out.push(x)\n  }\n  return out\n}\n\nexport default class BamFile {\n  private renameRefSeq: (a: string) => string\n  private bam: GenericFilehandle\n  private index: IndexFile\n  private chunkSizeLimit: number\n  private fetchSizeLimit: number\n  private header: any\n  protected chrToIndex: any\n  protected indexToChr: any\n  private yieldThreadTime: number\n\n  private featureCache = new AbortablePromiseCache({\n    //@ts-ignore\n    cache: new QuickLRU({\n      maxSize: 50,\n    }),\n    //@ts-ignore\n    fill: async ({ chunk, opts }, signal) => {\n      const { data, cpositions, dpositions } = await this._readChunk({\n        chunk,\n        opts: { ...opts, signal },\n      })\n      const feats = await this.readBamFeatures(\n        data,\n        cpositions,\n        dpositions,\n        chunk,\n      )\n      return feats\n    },\n  })\n\n  /**\n   * @param {object} args\n   * @param {string} [args.bamPath]\n   * @param {FileHandle} [args.bamFilehandle]\n   * @param {string} [args.baiPath]\n   * @param {FileHandle} [args.baiFilehandle]\n   */\n  constructor({\n    bamFilehandle,\n    bamPath,\n    bamUrl,\n    baiPath,\n    baiFilehandle,\n    baiUrl,\n    csiPath,\n    csiFilehandle,\n    csiUrl,\n    fetchSizeLimit,\n    chunkSizeLimit,\n    yieldThreadTime = 100,\n    renameRefSeqs = n => n,\n  }: {\n    bamFilehandle?: GenericFilehandle\n    bamPath?: string\n    bamUrl?: string\n    baiPath?: string\n    baiFilehandle?: GenericFilehandle\n    baiUrl?: string\n    csiPath?: string\n    csiFilehandle?: GenericFilehandle\n    csiUrl?: string\n    fetchSizeLimit?: number\n    chunkSizeLimit?: number\n    renameRefSeqs?: (a: string) => string\n    yieldThreadTime?: number\n  }) {\n    this.renameRefSeq = renameRefSeqs\n\n    if (bamFilehandle) {\n      this.bam = bamFilehandle\n    } else if (bamPath) {\n      this.bam = new LocalFile(bamPath)\n    } else if (bamUrl) {\n      this.bam = new RemoteFile(bamUrl)\n    } else {\n      throw new Error('unable to initialize bam')\n    }\n    if (csiFilehandle) {\n      this.index = new CSI({ filehandle: csiFilehandle })\n    } else if (csiPath) {\n      this.index = new CSI({ filehandle: new LocalFile(csiPath) })\n    } else if (csiUrl) {\n      this.index = new CSI({ filehandle: new RemoteFile(csiUrl) })\n    } else if (baiFilehandle) {\n      this.index = new BAI({ filehandle: baiFilehandle })\n    } else if (baiPath) {\n      this.index = new BAI({ filehandle: new LocalFile(baiPath) })\n    } else if (baiUrl) {\n      this.index = new BAI({ filehandle: new RemoteFile(baiUrl) })\n    } else if (bamPath) {\n      this.index = new BAI({ filehandle: new LocalFile(`${bamPath}.bai`) })\n    } else if (bamUrl) {\n      this.index = new BAI({ filehandle: new RemoteFile(`${bamUrl}.bai`) })\n    } else {\n      throw new Error('unable to infer index format')\n    }\n    this.fetchSizeLimit = fetchSizeLimit || 500000000 // 500MB\n    this.chunkSizeLimit = chunkSizeLimit || 300000000 // 300MB\n    this.yieldThreadTime = yieldThreadTime\n  }\n\n  async getHeader(origOpts: AbortSignal | BaseOpts = {}) {\n    const opts = makeOpts(origOpts)\n    const indexData = await this.index.parse(opts)\n    const ret = indexData.firstDataLine\n      ? indexData.firstDataLine.blockPosition + 65535\n      : undefined\n    let buffer\n    if (ret) {\n      const res = await this.bam.read(\n        Buffer.alloc(ret + blockLen),\n        0,\n        ret + blockLen,\n        0,\n        opts,\n      )\n\n      const { bytesRead } = res\n      ;({ buffer } = res)\n      if (!bytesRead) {\n        throw new Error('Error reading header')\n      }\n      if (bytesRead < ret) {\n        buffer = buffer.subarray(0, bytesRead)\n      } else {\n        buffer = buffer.subarray(0, ret)\n      }\n    } else {\n      buffer = (await this.bam.readFile(opts)) as Buffer\n    }\n\n    const uncba = await unzip(buffer)\n\n    if (uncba.readInt32LE(0) !== BAM_MAGIC) {\n      throw new Error('Not a BAM file')\n    }\n    const headLen = uncba.readInt32LE(4)\n\n    this.header = uncba.toString('utf8', 8, 8 + headLen)\n    const { chrToIndex, indexToChr } = await this._readRefSeqs(\n      headLen + 8,\n      65535,\n      opts,\n    )\n    this.chrToIndex = chrToIndex\n    this.indexToChr = indexToChr\n\n    return parseHeaderText(this.header)\n  }\n\n  async getHeaderText(opts: BaseOpts = {}) {\n    await this.getHeader(opts)\n    return this.header\n  }\n\n  // the full length of the refseq block is not given in advance so this grabs\n  // a chunk and doubles it if all refseqs haven't been processed\n  async _readRefSeqs(\n    start: number,\n    refSeqBytes: number,\n    opts: BaseOpts = {},\n  ): Promise<{\n    chrToIndex: { [key: string]: number }\n    indexToChr: { refName: string; length: number }[]\n  }> {\n    if (start > refSeqBytes) {\n      return this._readRefSeqs(start, refSeqBytes * 2, opts)\n    }\n    const size = refSeqBytes + blockLen\n    const { bytesRead, buffer } = await this.bam.read(\n      Buffer.alloc(size),\n      0,\n      refSeqBytes,\n      0,\n      opts,\n    )\n    if (!bytesRead) {\n      throw new Error('Error reading refseqs from header')\n    }\n    const uncba = await unzip(\n      buffer.subarray(0, Math.min(bytesRead, refSeqBytes)),\n    )\n    const nRef = uncba.readInt32LE(start)\n    let p = start + 4\n    const chrToIndex: { [key: string]: number } = {}\n    const indexToChr: { refName: string; length: number }[] = []\n    for (let i = 0; i < nRef; i += 1) {\n      const lName = uncba.readInt32LE(p)\n      const refName = this.renameRefSeq(\n        uncba.toString('utf8', p + 4, p + 4 + lName - 1),\n      )\n      const lRef = uncba.readInt32LE(p + lName + 4)\n\n      chrToIndex[refName] = i\n      indexToChr.push({ refName, length: lRef })\n\n      p = p + 8 + lName\n      if (p > uncba.length) {\n        console.warn(\n          `BAM header is very big.  Re-fetching ${refSeqBytes} bytes.`,\n        )\n        return this._readRefSeqs(start, refSeqBytes * 2, opts)\n      }\n    }\n    return { chrToIndex, indexToChr }\n  }\n\n  async getRecordsForRange(\n    chr: string,\n    min: number,\n    max: number,\n    opts: BamOpts = {\n      viewAsPairs: false,\n      pairAcrossChr: false,\n      maxInsertSize: 200000,\n    },\n  ) {\n    return flat(\n      await gen2array(this.streamRecordsForRange(chr, min, max, opts)),\n    )\n  }\n\n  async *streamRecordsForRange(\n    chr: string,\n    min: number,\n    max: number,\n    opts: BamOpts = {},\n  ) {\n    const { signal } = opts\n    const chrId = this.chrToIndex && this.chrToIndex[chr]\n    let chunks: Chunk[]\n    if (!(chrId >= 0)) {\n      chunks = []\n    } else {\n      chunks = await this.index.blocksForRange(chrId, min - 1, max, opts)\n\n      if (!chunks) {\n        throw new Error('Error in index fetch')\n      }\n    }\n\n    for (let i = 0; i < chunks.length; i += 1) {\n      await abortBreakPoint(signal)\n      const size = chunks[i].fetchedSize()\n      if (size > this.chunkSizeLimit) {\n        throw new Error(\n          `Too many BAM features. BAM chunk size ${size} bytes exceeds chunkSizeLimit of ${this.chunkSizeLimit}`,\n        )\n      }\n    }\n\n    const totalSize = chunks\n      .map(s => s.fetchedSize())\n      .reduce((a, b) => a + b, 0)\n    if (totalSize > this.fetchSizeLimit) {\n      throw new Error(\n        `data size of ${totalSize.toLocaleString()} bytes exceeded fetch size limit of ${this.fetchSizeLimit.toLocaleString()} bytes`,\n      )\n    }\n    yield* this._fetchChunkFeatures(chunks, chrId, min, max, opts)\n  }\n\n  async *_fetchChunkFeatures(\n    chunks: Chunk[],\n    chrId: number,\n    min: number,\n    max: number,\n    opts: BamOpts,\n  ) {\n    const { viewAsPairs = false } = opts\n    const feats = []\n    let done = false\n\n    for (let i = 0; i < chunks.length; i++) {\n      const c = chunks[i]\n      const records = (await this.featureCache.get(\n        c.toString(),\n        {\n          chunk: c,\n          opts,\n        },\n        opts.signal,\n      )) as BAMFeature[]\n\n      const recs = []\n      for (let i = 0; i < records.length; i += 1) {\n        const feature = records[i]\n        if (feature.seq_id() === chrId) {\n          if (feature.get('start') >= max) {\n            // past end of range, can stop iterating\n            done = true\n            break\n          } else if (feature.get('end') >= min) {\n            // must be in range\n            recs.push(feature)\n          }\n        }\n      }\n      feats.push(recs)\n      yield recs\n      if (done) {\n        break\n      }\n    }\n\n    checkAbortSignal(opts.signal)\n    if (viewAsPairs) {\n      yield this.fetchPairs(chrId, feats, opts)\n    }\n  }\n\n  async fetchPairs(chrId: number, feats: BAMFeature[][], opts: BamOpts) {\n    const { pairAcrossChr = false, maxInsertSize = 200000 } = opts\n    const unmatedPairs: { [key: string]: boolean } = {}\n    const readIds: { [key: string]: number } = {}\n    feats.map(ret => {\n      const readNames: { [key: string]: number } = {}\n      for (let i = 0; i < ret.length; i++) {\n        const name = ret[i].name()\n        const id = ret[i].id()\n        if (!readNames[name]) {\n          readNames[name] = 0\n        }\n        readNames[name]++\n        readIds[id] = 1\n      }\n      entries(readNames).forEach(([k, v]: [string, number]) => {\n        if (v === 1) {\n          unmatedPairs[k] = true\n        }\n      })\n    })\n\n    const matePromises: Promise<Chunk[]>[] = []\n    feats.map(ret => {\n      for (let i = 0; i < ret.length; i++) {\n        const f = ret[i]\n        const name = f.name()\n        const start = f.get('start')\n        const pnext = f._next_pos()\n        const rnext = f._next_refid()\n        if (\n          unmatedPairs[name] &&\n          (pairAcrossChr ||\n            (rnext === chrId && Math.abs(start - pnext) < maxInsertSize))\n        ) {\n          matePromises.push(\n            this.index.blocksForRange(rnext, pnext, pnext + 1, opts),\n          )\n        }\n      }\n    })\n\n    // filter out duplicate chunks (the blocks are lists of chunks, blocks are\n    // concatenated, then filter dup chunks)\n    const mateChunks = flat(await Promise.all(matePromises))\n      .sort()\n      .filter(\n        (item, pos, ary) => !pos || item.toString() !== ary[pos - 1].toString(),\n      )\n\n    const mateTotalSize = mateChunks\n      .map(s => s.fetchedSize())\n      .reduce((a, b) => a + b, 0)\n    if (mateTotalSize > this.fetchSizeLimit) {\n      throw new Error(\n        `data size of ${mateTotalSize.toLocaleString()} bytes exceeded fetch size limit of ${this.fetchSizeLimit.toLocaleString()} bytes`,\n      )\n    }\n    const mateFeatPromises = mateChunks.map(async c => {\n      const { data, cpositions, dpositions, chunk } = await this._readChunk({\n        chunk: c,\n        opts,\n      })\n      const feats = await this.readBamFeatures(\n        data,\n        cpositions,\n        dpositions,\n        chunk,\n      )\n      const mateRecs = []\n      for (let i = 0; i < feats.length; i += 1) {\n        const feature = feats[i]\n        if (unmatedPairs[feature.get('name')] && !readIds[feature.id()]) {\n          mateRecs.push(feature)\n        }\n      }\n      return mateRecs\n    })\n    return flat(await Promise.all(mateFeatPromises))\n  }\n\n  async _readChunk({ chunk, opts }: { chunk: Chunk; opts: BaseOpts }) {\n    const size = chunk.fetchedSize()\n    const { buffer, bytesRead } = await this.bam.read(\n      Buffer.alloc(size),\n      0,\n      size,\n      chunk.minv.blockPosition,\n      opts,\n    )\n\n    const {\n      buffer: data,\n      cpositions,\n      dpositions,\n    } = await unzipChunkSlice(\n      buffer.subarray(0, Math.min(bytesRead, size)),\n      chunk,\n    )\n    return { data, cpositions, dpositions, chunk }\n  }\n\n  async readBamFeatures(\n    ba: Buffer,\n    cpositions: number[],\n    dpositions: number[],\n    chunk: Chunk,\n  ) {\n    let blockStart = 0\n    const sink = []\n    let pos = 0\n    let last = +Date.now()\n\n    while (blockStart + 4 < ba.length) {\n      const blockSize = ba.readInt32LE(blockStart)\n      const blockEnd = blockStart + 4 + blockSize - 1\n\n      // increment position to the current decompressed status\n      if (dpositions) {\n        while (blockStart + chunk.minv.dataPosition >= dpositions[pos++]) {}\n        pos--\n      }\n\n      // only try to read the feature if we have all the bytes for it\n      if (blockEnd < ba.length) {\n        const feature = new BAMFeature({\n          bytes: {\n            byteArray: ba,\n            start: blockStart,\n            end: blockEnd,\n          },\n          // the below results in an automatically calculated file-offset based ID\n          // if the info for that is available, otherwise crc32 of the features\n          //\n          // cpositions[pos] refers to actual file offset of a bgzip block boundaries\n          //\n          // we multiply by (1 <<8) in order to make sure each block has a \"unique\"\n          // address space so that data in that block could never overlap\n          //\n          // then the blockStart-dpositions is an uncompressed file offset from\n          // that bgzip block boundary, and since the cpositions are multiplied by\n          // (1 << 8) these uncompressed offsets get a unique space\n          //\n          // this has an extra chunk.minv.dataPosition added on because it blockStart\n          // starts at 0 instead of chunk.minv.dataPosition\n          //\n          // the +1 is just to avoid any possible uniqueId 0 but this does not realistically happen\n          fileOffset: cpositions\n            ? cpositions[pos] * (1 << 8) +\n              (blockStart - dpositions[pos]) +\n              chunk.minv.dataPosition +\n              1\n            : // must be slice, not subarray for buffer polyfill on web\n              crc32.signed(ba.slice(blockStart, blockEnd)),\n        })\n\n        sink.push(feature)\n        if (this.yieldThreadTime && +Date.now() - last > this.yieldThreadTime) {\n          await timeout(1)\n          last = +Date.now()\n        }\n      }\n\n      blockStart = blockEnd + 1\n    }\n    return sink\n  }\n\n  async hasRefSeq(seqName: string) {\n    const refId = this.chrToIndex && this.chrToIndex[seqName]\n    return this.index.hasRefSeq(refId)\n  }\n\n  async lineCount(seqName: string) {\n    const refId = this.chrToIndex && this.chrToIndex[seqName]\n    return this.index.lineCount(refId)\n  }\n\n  async indexCov(seqName: string, start?: number, end?: number) {\n    await this.index.parse()\n    const seqId = this.chrToIndex && this.chrToIndex[seqName]\n    return this.index.indexCov(seqId, start, end)\n  }\n\n  async blocksForRange(\n    seqName: string,\n    start: number,\n    end: number,\n    opts?: BaseOpts,\n  ) {\n    await this.index.parse()\n    const seqId = this.chrToIndex && this.chrToIndex[seqName]\n    return this.index.blocksForRange(seqId, start, end, opts)\n  }\n}\n","import { BaseOpts, BamOpts } from './util'\nimport BamFile, { BAM_MAGIC } from './bamFile'\nimport 'cross-fetch/polyfill'\nimport Chunk from './chunk'\nimport { unzip } from '@gmod/bgzf-filehandle'\nimport { parseHeaderText } from './sam'\n\ninterface HeaderLine {\n  tag: string\n  value: string\n}\n\ninterface HtsgetChunk {\n  url: string\n  headers?: Record<string, string>\n}\nasync function concat(arr: { url: string }[], opts: Record<string, any>) {\n  const res = await Promise.all(\n    arr.map(async (chunk: HtsgetChunk) => {\n      const { url, headers } = chunk\n      if (url.startsWith('data:')) {\n        return Buffer.from(url.split(',')[1], 'base64')\n      } else {\n        //remove referer header, it is not even allowed to be specified\n        //@ts-ignore\n        //eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { referer, ...rest } = headers\n        const res = await fetch(url, {\n          ...opts,\n          headers: { ...opts.headers, ...rest },\n        })\n        if (!res.ok) {\n          throw new Error(`Failed to fetch ${res.statusText}`)\n        }\n        return Buffer.from(await res.arrayBuffer())\n      }\n    }),\n  )\n\n  return Buffer.concat(await Promise.all(res.map(elt => unzip(elt))))\n}\n\nexport default class HtsgetFile extends BamFile {\n  private baseUrl: string\n\n  private trackId: string\n\n  constructor(args: { trackId: string; baseUrl: string }) {\n    // @ts-ignore override bam defaults\n    super({ bamFilehandle: '?', baiFilehandle: '?' })\n    this.baseUrl = args.baseUrl\n    this.trackId = args.trackId\n  }\n\n  async *streamRecordsForRange(\n    chr: string,\n    min: number,\n    max: number,\n    opts: BamOpts = {\n      viewAsPairs: false,\n      pairAcrossChr: false,\n      maxInsertSize: 200000,\n    },\n  ) {\n    const base = `${this.baseUrl}/${this.trackId}`\n    const url = `${base}?referenceName=${chr}&start=${min}&end=${max}&format=BAM`\n    const chrId = this.chrToIndex && this.chrToIndex[chr]\n    const result = await fetch(url, { ...opts })\n    if (!result.ok) {\n      throw new Error(result.statusText)\n    }\n    const data = await result.json()\n    const uncba = await concat(data.htsget.urls.slice(1), opts)\n    const chunk = {\n      buffer: uncba,\n      chunk: { minv: { dataPosition: 0 } },\n      toString() {\n        return `${chr}_${min}_${max}`\n      },\n    }\n\n    yield* this._fetchChunkFeatures(\n      // @ts-ignore\n      [chunk],\n      chrId,\n      min,\n      max,\n      opts,\n    )\n  }\n\n  //@ts-ignore\n  async _readChunk(params: {\n    chunk: { buffer: Buffer; chunk: Chunk }\n    opts: BaseOpts\n  }) {\n    const { chunk } = params\n    const { buffer, chunk: c2 } = chunk\n    return { data: buffer, cpositions: null, dpositions: null, chunk: c2 }\n  }\n\n  async getHeader(opts: BaseOpts = {}) {\n    const url = `${this.baseUrl}/${this.trackId}?referenceName=na&class=header`\n    const result = await fetch(url, opts)\n    if (!result.ok) {\n      throw new Error(`Failed to fetch ${result.statusText}`)\n    }\n    const data = await result.json()\n    const uncba = await concat(data.htsget.urls, opts)\n\n    if (uncba.readInt32LE(0) !== BAM_MAGIC) {\n      throw new Error('Not a BAM file')\n    }\n    const headLen = uncba.readInt32LE(4)\n\n    const headerText = uncba.toString('utf8', 8, 8 + headLen)\n    const samHeader = parseHeaderText(headerText)\n\n    // use the @SQ lines in the header to figure out the\n    // mapping between ref ref ID numbers and names\n    const idToName: string[] = []\n    const nameToId: Record<string, number> = {}\n    const sqLines = samHeader.filter((l: { tag: string }) => l.tag === 'SQ')\n    sqLines.forEach((sqLine: { data: HeaderLine[] }, refId: number) => {\n      sqLine.data.forEach((item: HeaderLine) => {\n        if (item.tag === 'SN') {\n          // this is the ref name\n          const refName = item.value\n          nameToId[refName] = refId\n          idToName[refId] = refName\n        }\n      })\n    })\n    this.chrToIndex = nameToId\n    this.indexToChr = idToName\n    return samHeader\n  }\n}\n","'use strict';\n\nclass QuickLRU {\n\tconstructor(options = {}) {\n\t\tif (!(options.maxSize && options.maxSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tthis.maxSize = options.maxSize;\n\t\tthis.cache = new Map();\n\t\tthis.oldCache = new Map();\n\t\tthis._size = 0;\n\t}\n\n\t_set(key, value) {\n\t\tthis.cache.set(key, value);\n\t\tthis._size++;\n\n\t\tif (this._size >= this.maxSize) {\n\t\t\tthis._size = 0;\n\t\t\tthis.oldCache = this.cache;\n\t\t\tthis.cache = new Map();\n\t\t}\n\t}\n\n\tget(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn this.cache.get(key);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\tconst value = this.oldCache.get(key);\n\t\t\tthis._set(key, value);\n\t\t\treturn value;\n\t\t}\n\t}\n\n\tset(key, value) {\n\t\tif (this.cache.has(key)) {\n\t\t\tthis.cache.set(key, value);\n\t\t} else {\n\t\t\tthis._set(key, value);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\thas(key) {\n\t\treturn this.cache.has(key) || this.oldCache.has(key);\n\t}\n\n\tpeek(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn this.cache.get(key);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\treturn this.oldCache.get(key);\n\t\t}\n\t}\n\n\tdelete(key) {\n\t\tconst deleted = this.cache.delete(key);\n\t\tif (deleted) {\n\t\t\tthis._size--;\n\t\t}\n\n\t\treturn this.oldCache.delete(key) || deleted;\n\t}\n\n\tclear() {\n\t\tthis.cache.clear();\n\t\tthis.oldCache.clear();\n\t\tthis._size = 0;\n\t}\n\n\t* keys() {\n\t\tfor (const [key] of this) {\n\t\t\tyield key;\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const [, value] of this) {\n\t\t\tyield value;\n\t\t}\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tfor (const item of this.cache) {\n\t\t\tyield item;\n\t\t}\n\n\t\tfor (const item of this.oldCache) {\n\t\t\tconst [key] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tyield item;\n\t\t\t}\n\t\t}\n\t}\n\n\tget size() {\n\t\tlet oldCacheSize = 0;\n\t\tfor (const key of this.oldCache.keys()) {\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\toldCacheSize++;\n\t\t\t}\n\t\t}\n\n\t\treturn this._size + oldCacheSize;\n\t}\n}\n\nmodule.exports = QuickLRU;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst abortcontroller_ponyfill_1 = require(\"./abortcontroller-ponyfill\");\nconst AggregateAbortController_1 = __importDefault(require(\"./AggregateAbortController\"));\nconst AggregateStatusReporter_1 = __importDefault(require(\"./AggregateStatusReporter\"));\nclass AbortablePromiseCache {\n    constructor({ fill, cache, }) {\n        if (typeof fill !== 'function') {\n            throw new TypeError('must pass a fill function');\n        }\n        if (typeof cache !== 'object') {\n            throw new TypeError('must pass a cache object');\n        }\n        if (typeof cache.get !== 'function' ||\n            typeof cache.set !== 'function' ||\n            typeof cache.delete !== 'function') {\n            throw new TypeError('cache must implement get(key), set(key, val), and and delete(key)');\n        }\n        this.cache = cache;\n        this.fillCallback = fill;\n    }\n    static isAbortException(exception) {\n        return (\n        // DOMException\n        exception.name === 'AbortError' ||\n            // standard-ish non-DOM abort exception\n            //@ts-ignore\n            exception.code === 'ERR_ABORTED' ||\n            // stringified DOMException\n            exception.message === 'AbortError: aborted' ||\n            // stringified standard-ish exception\n            exception.message === 'Error: aborted');\n    }\n    evict(key, entry) {\n        if (this.cache.get(key) === entry) {\n            this.cache.delete(key);\n        }\n    }\n    fill(key, data, signal, statusCallback) {\n        const aborter = new AggregateAbortController_1.default();\n        const statusReporter = new AggregateStatusReporter_1.default();\n        statusReporter.addCallback(statusCallback);\n        const newEntry = {\n            aborter: aborter,\n            promise: this.fillCallback(data, aborter.signal, (message) => {\n                statusReporter.callback(message);\n            }),\n            settled: false,\n            statusReporter,\n            get aborted() {\n                return this.aborter.signal.aborted;\n            },\n        };\n        newEntry.aborter.addSignal(signal);\n        // remove the fill from the cache when its abortcontroller fires, if still in there\n        newEntry.aborter.signal.addEventListener('abort', () => {\n            if (!newEntry.settled) {\n                this.evict(key, newEntry);\n            }\n        });\n        // chain off the cached promise to record when it settles\n        newEntry.promise\n            .then(() => {\n            newEntry.settled = true;\n        }, () => {\n            newEntry.settled = true;\n            // if the fill throws an error (including abort) and is still in the cache, remove it\n            this.evict(key, newEntry);\n        })\n            .catch(e => {\n            // this will only be reached if there is some kind of\n            // bad bug in this library\n            console.error(e);\n            throw e;\n        });\n        this.cache.set(key, newEntry);\n    }\n    static checkSinglePromise(promise, signal) {\n        // check just this signal for having been aborted, and abort the\n        // promise if it was, regardless of what happened with the cached\n        // response\n        function checkForSingleAbort() {\n            if (signal && signal.aborted) {\n                throw Object.assign(new Error('aborted'), { code: 'ERR_ABORTED' });\n            }\n        }\n        return promise.then(result => {\n            checkForSingleAbort();\n            return result;\n        }, error => {\n            checkForSingleAbort();\n            throw error;\n        });\n    }\n    has(key) {\n        return this.cache.has(key);\n    }\n    /**\n     * Callback for getting status of the pending async\n     *\n     * @callback statusCallback\n     * @param {any} status, current status string or message object\n     */\n    /**\n     * @param {any} key cache key to use for this request\n     * @param {any} data data passed as the first argument to the fill callback\n     * @param {AbortSignal} [signal] optional AbortSignal object that aborts the request\n     * @param {statusCallback} a callback to get the current status of a pending async operation\n     */\n    get(key, data, signal, statusCallback) {\n        if (!signal && data instanceof abortcontroller_ponyfill_1.AbortSignal) {\n            throw new TypeError('second get argument appears to be an AbortSignal, perhaps you meant to pass `null` for the fill data?');\n        }\n        const cacheEntry = this.cache.get(key);\n        if (cacheEntry) {\n            if (cacheEntry.aborted && !cacheEntry.settled) {\n                // if it's aborted but has not realized it yet, evict it and redispatch\n                this.evict(key, cacheEntry);\n                return this.get(key, data, signal, statusCallback);\n            }\n            if (cacheEntry.settled) {\n                // too late to abort, just return it\n                return cacheEntry.promise;\n            }\n            // request is in-flight, add this signal to its list of signals,\n            // or if there is no signal, the aborter will become non-abortable\n            cacheEntry.aborter.addSignal(signal);\n            cacheEntry.statusReporter.addCallback(statusCallback);\n            return AbortablePromiseCache.checkSinglePromise(cacheEntry.promise, signal);\n        }\n        // if we got here, it is not in the cache. fill.\n        this.fill(key, data, signal, statusCallback);\n        return AbortablePromiseCache.checkSinglePromise(\n        //see https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#non-null-assertion-operator-postfix-\n        //eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.cache.get(key).promise, signal);\n    }\n    /**\n     * delete the given entry from the cache. if it exists and its fill request has\n     * not yet settled, the fill will be signaled to abort.\n     *\n     * @param {any} key\n     */\n    delete(key) {\n        const cachedEntry = this.cache.get(key);\n        if (cachedEntry) {\n            if (!cachedEntry.settled) {\n                cachedEntry.aborter.abort();\n            }\n            this.cache.delete(key);\n        }\n    }\n    /**\n     * Clear all requests from the cache. Aborts any that have not settled.\n     * @returns {number} count of entries deleted\n     */\n    clear() {\n        // iterate without needing regenerator-runtime\n        const keyIter = this.cache.keys();\n        let deleteCount = 0;\n        for (let result = keyIter.next(); !result.done; result = keyIter.next()) {\n            this.delete(result.value);\n            deleteCount += 1;\n        }\n        return deleteCount;\n    }\n}\nexports.default = AbortablePromiseCache;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst abortcontroller_ponyfill_1 = require(\"./abortcontroller-ponyfill\");\nclass NullSignal {\n}\n/**\n * aggregates a number of abort signals, will only fire the aggregated\n * abort if all of the input signals have been aborted\n */\nclass AggregateAbortController {\n    constructor() {\n        this.signals = new Set();\n        this.abortController = new abortcontroller_ponyfill_1.AbortController();\n    }\n    /**\n     * @param {AbortSignal} [signal] optional AbortSignal to add. if falsy,\n     *  will be treated as a null-signal, and this abortcontroller will no\n     *  longer be abortable.\n     */\n    //@ts-ignore\n    addSignal(signal = new NullSignal()) {\n        if (this.signal.aborted) {\n            throw new Error('cannot add a signal, already aborted!');\n        }\n        // note that a NullSignal will never fire, so if we\n        // have one this thing will never actually abort\n        this.signals.add(signal);\n        if (signal.aborted) {\n            // handle the abort immediately if it is already aborted\n            // for some reason\n            this.handleAborted(signal);\n        }\n        else if (typeof signal.addEventListener === 'function') {\n            signal.addEventListener('abort', () => {\n                this.handleAborted(signal);\n            });\n        }\n    }\n    handleAborted(signal) {\n        this.signals.delete(signal);\n        if (this.signals.size === 0) {\n            this.abortController.abort();\n        }\n    }\n    get signal() {\n        return this.abortController.signal;\n    }\n    abort() {\n        this.abortController.abort();\n    }\n}\nexports.default = AggregateAbortController;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass AggregateStatusReporter {\n    constructor() {\n        this.callbacks = new Set();\n    }\n    addCallback(callback = () => { }) {\n        this.callbacks.add(callback);\n        callback(this.currentMessage);\n    }\n    callback(message) {\n        this.currentMessage = message;\n        this.callbacks.forEach(elt => {\n            elt(message);\n        });\n    }\n}\nexports.default = AggregateStatusReporter;\n","\"use strict\";\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbortSignal = exports.AbortController = void 0;\nconst cjs_ponyfill_1 = require(\"abortcontroller-polyfill/dist/cjs-ponyfill\");\nvar getGlobal = function () {\n    // the only reliable means to get the global object is\n    // `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    throw new Error('unable to locate global object');\n};\n//@ts-ignore\nlet AbortController = typeof getGlobal().AbortController === 'undefined' ? cjs_ponyfill_1.AbortController : getGlobal().AbortController;\nexports.AbortController = AbortController;\n//@ts-ignore\nlet AbortSignal = typeof getGlobal().AbortController === 'undefined' ? cjs_ponyfill_1.AbortSignal : getGlobal().AbortSignal;\nexports.AbortSignal = AbortSignal;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AbortablePromiseCache_1 = __importDefault(require(\"./AbortablePromiseCache\"));\nexports.default = AbortablePromiseCache_1.default;\n","(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(typeof self !== 'undefined' ? self : this);\n","export default function _OverloadYield(value, kind) {\n  this.v = value, this.k = kind;\n}","import OverloadYield from \"./OverloadYield.js\";\nexport default function _asyncGeneratorDelegate(inner) {\n  var iter = {},\n    waiting = !1;\n  function pump(key, value) {\n    return waiting = !0, value = new Promise(function (resolve) {\n      resolve(inner[key](value));\n    }), {\n      done: !1,\n      value: new OverloadYield(value, 1)\n    };\n  }\n  return iter[\"undefined\" != typeof Symbol && Symbol.iterator || \"@@iterator\"] = function () {\n    return this;\n  }, iter.next = function (value) {\n    return waiting ? (waiting = !1, value) : pump(\"next\", value);\n  }, \"function\" == typeof inner[\"throw\"] && (iter[\"throw\"] = function (value) {\n    if (waiting) throw waiting = !1, value;\n    return pump(\"throw\", value);\n  }), \"function\" == typeof inner[\"return\"] && (iter[\"return\"] = function (value) {\n    return waiting ? (waiting = !1, value) : pump(\"return\", value);\n  }), iter;\n}","export default function _asyncIterator(iterable) {\n  var method,\n    async,\n    sync,\n    retry = 2;\n  for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) {\n    if (async && null != (method = iterable[async])) return method.call(iterable);\n    if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable));\n    async = \"@@asyncIterator\", sync = \"@@iterator\";\n  }\n  throw new TypeError(\"Object is not async iterable\");\n}\nfunction AsyncFromSyncIterator(s) {\n  function AsyncFromSyncIteratorContinuation(r) {\n    if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\"));\n    var done = r.done;\n    return Promise.resolve(r.value).then(function (value) {\n      return {\n        value: value,\n        done: done\n      };\n    });\n  }\n  return AsyncFromSyncIterator = function AsyncFromSyncIterator(s) {\n    this.s = s, this.n = s.next;\n  }, AsyncFromSyncIterator.prototype = {\n    s: null,\n    n: null,\n    next: function next() {\n      return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));\n    },\n    \"return\": function _return(value) {\n      var ret = this.s[\"return\"];\n      return void 0 === ret ? Promise.resolve({\n        value: value,\n        done: !0\n      }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments));\n    },\n    \"throw\": function _throw(value) {\n      var thr = this.s[\"return\"];\n      return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments));\n    }\n  }, new AsyncFromSyncIterator(s);\n}","import OverloadYield from \"./OverloadYield.js\";\nexport default function _awaitAsyncGenerator(value) {\n  return new OverloadYield(value, 0);\n}","import OverloadYield from \"./OverloadYield.js\";\nexport default function AsyncGenerator(gen) {\n  var front, back;\n  function resume(key, arg) {\n    try {\n      var result = gen[key](arg),\n        value = result.value,\n        overloaded = value instanceof OverloadYield;\n      Promise.resolve(overloaded ? value.v : value).then(function (arg) {\n        if (overloaded) {\n          var nextKey = \"return\" === key ? \"return\" : \"next\";\n          if (!value.k || arg.done) return resume(nextKey, arg);\n          arg = gen[nextKey](arg).value;\n        }\n        settle(result.done ? \"return\" : \"normal\", arg);\n      }, function (err) {\n        resume(\"throw\", err);\n      });\n    } catch (err) {\n      settle(\"throw\", err);\n    }\n  }\n  function settle(type, value) {\n    switch (type) {\n      case \"return\":\n        front.resolve({\n          value: value,\n          done: !0\n        });\n        break;\n      case \"throw\":\n        front.reject(value);\n        break;\n      default:\n        front.resolve({\n          value: value,\n          done: !1\n        });\n    }\n    (front = front.next) ? resume(front.key, front.arg) : back = null;\n  }\n  this._invoke = function (key, arg) {\n    return new Promise(function (resolve, reject) {\n      var request = {\n        key: key,\n        arg: arg,\n        resolve: resolve,\n        reject: reject,\n        next: null\n      };\n      back ? back = back.next = request : (front = back = request, resume(key, arg));\n    });\n  }, \"function\" != typeof gen[\"return\"] && (this[\"return\"] = void 0);\n}\nAsyncGenerator.prototype[\"function\" == typeof Symbol && Symbol.asyncIterator || \"@@asyncIterator\"] = function () {\n  return this;\n}, AsyncGenerator.prototype.next = function (arg) {\n  return this._invoke(\"next\", arg);\n}, AsyncGenerator.prototype[\"throw\"] = function (arg) {\n  return this._invoke(\"throw\", arg);\n}, AsyncGenerator.prototype[\"return\"] = function (arg) {\n  return this._invoke(\"return\", arg);\n};","import AsyncGenerator from \"./AsyncGenerator.js\";\nexport default function _wrapAsyncGenerator(fn) {\n  return function () {\n    return new AsyncGenerator(fn.apply(this, arguments));\n  };\n}"],"names":["VirtualOffset","blockPosition","dataPosition","this","b","min","i","args","length","compareTo","fromBytes","bytes","offset","bigendian","Error","Chunk","minv","maxv","bin","fetchedSize","undefined","_fetchedSize","toUniqueString","IndexFile","filehandle","renameRefSeq","n","data","virtualOffset","currentFdl","firstDataLine","opts","setupP","_parse","catch","e","seqId","parse","indices","binIndex","timeout","ms","Promise","resolve","setTimeout","longToNumber","long","greaterThan","Number","MAX_SAFE_INTEGER","lessThan","MIN_SAFE_INTEGER","toNumber","checkAbortSignal","signal","aborted","DOMException","code","abortBreakPoint","makeOpts","obj","optimizeChunks","chunks","lowest","mergedChunks","lastChunk","sort","c0","c1","dif","forEach","chunk","chunk1","chunk2","push","roundDown","multiple","roundUp","BAI","lineCount","Long","Array","prototype","slice","call","refId","prom","index","ret","stats","baiP","readFile","bai","maxBlockSize","fetchBai","readUInt32LE","refCount","readInt32LE","binLimit","currOffset","binCount","j","parsePseudoBin","chunkCount","k","u","v","_findFirstData","linearCount","linearIndex","start","end","range","indexData","seqIdx","s","depths","totalSize","currentPos","score","map","d","beg","max","ba","overlappingBins","reg2bins","binChunks","c","nintv","minLin","Math","maxLin","vp","rshift","num","bits","floor","CSI","maxBinNumber","depth","minShift","auxLength","formatFlags","coordinateType","format","columnNumbers","ref","metaValue","metaChar","String","fromCharCode","skipLines","nameSectionLength","Object","assign","_parseNameBytes","subarray","namesBytes","currRefId","currNameStart","refIdToName","refNameToId","refName","toString","csi","buffer","unzip","csiVersion","parseAuxData","loffset","l","t","bins","SEQRET_DECODER","split","CIGAR_DECODER","BamRecord","_tagList","_allTagsParsed","fileOffset","byteArray","_id","_refID","flags","field","_get","toLowerCase","get","_parseTag","_parseAllTags","tags","isSegmentUnmapped","isPaired","concat","keys","seen","filter","lt","mq","qualRaw","join","p","lseq","isReverseComplemented","isMateUnmapped","isMateReverseComplemented","nl","tagName","lcTag","_tagOffset","blockEnd","tag","type","value","readInt8","readUInt8","readInt16LE","readUInt16LE","readFloatLE","cc","Btype","limit","cigop","console","warn","cigar","match","op","toUpperCase","parseInt","Constants","numCigarOps","seqLen","lref","lop","length_on_ref","seq","seqBytes","len","buf","sb","_next_refid","s1","s2","o1","o2","isRead1","isRead2","tmp","template_length","charAt","parseHeaderText","text","lines","line","parsedFields","f","substr","BAM_MAGIC","blockLen","flat","arr","gen2array","gen","out","x","BamFile","bamFilehandle","bamPath","bamUrl","baiPath","baiFilehandle","baiUrl","csiPath","csiFilehandle","csiUrl","fetchSizeLimit","chunkSizeLimit","yieldThreadTime","renameRefSeqs","featureCache","AbortablePromiseCache","cache","QuickLRU","maxSize","fill","_readChunk","cpositions","dpositions","readBamFeatures","feats","bam","LocalFile","RemoteFile","origOpts","read","Buffer","alloc","res","bytesRead","uncba","headLen","header","_readRefSeqs","chrToIndex","indexToChr","getHeader","refSeqBytes","size","nRef","lName","lRef","chr","viewAsPairs","pairAcrossChr","maxInsertSize","streamRecordsForRange","chrId","blocksForRange","reduce","a","toLocaleString","_fetchChunkFeatures","done","records","recs","feature","seq_id","fetchPairs","unmatedPairs","readIds","readNames","name","id","entries","matePromises","pnext","_next_pos","rnext","abs","all","mateChunks","item","pos","ary","mateTotalSize","mateFeatPromises","mateRecs","unzipChunkSlice","blockStart","sink","last","Date","now","blockSize","BAMFeature","crc32","seqName","hasRefSeq","indexCov","url","headers","startsWith","from","referer","rest","fetch","ok","statusText","arrayBuffer","elt","HtsgetFile","baseUrl","trackId","base","result","json","htsget","urls","params","c2","headerText","samHeader","idToName","nameToId","sqLine","options","TypeError","Map","oldCache","_size","key","set","has","_set","deleted","delete","clear","oldCacheSize","Symbol","iterator","module","exports","__importDefault","mod","__esModule","defineProperty","abortcontroller_ponyfill_1","require","AggregateAbortController_1","AggregateStatusReporter_1","fillCallback","entry","statusCallback","aborter","default","statusReporter","addCallback","newEntry","promise","message","callback","settled","addSignal","addEventListener","evict","then","error","AbortSignal","cacheEntry","checkSinglePromise","cachedEntry","abort","keyIter","deleteCount","next","exception","checkForSingleAbort","NullSignal","AggregateAbortController","signals","Set","abortController","AbortController","add","handleAborted","AggregateStatusReporter","callbacks","currentMessage","cjs_ponyfill_1","getGlobal","self","window","global","AbortablePromiseCache_1","support","Blob","viewClasses","isArrayBufferView","ArrayBuffer","isView","indexOf","normalizeName","test","normalizeValue","iteratorFor","items","shift","Headers","append","isArray","getOwnPropertyNames","consumed","body","bodyUsed","reject","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","bufferClone","view","Uint8Array","byteLength","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","rejected","readAsText","readBlobAsText","chars","readArrayBufferAsText","formData","decode","JSON","oldValue","hasOwnProperty","thisArg","values","methods","Request","input","credentials","method","mode","upcased","normalizeMethod","referrer","form","trim","replace","decodeURIComponent","parseHeaders","rawHeaders","parts","Response","bodyInit","status","clone","response","redirectStatuses","redirect","RangeError","location","err","stack","create","constructor","init","request","xhr","XMLHttpRequest","abortXhr","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","onreadystatechange","readyState","removeEventListener","send","polyfill","_OverloadYield","kind","_asyncGeneratorDelegate","inner","iter","waiting","pump","_asyncIterator","iterable","async","sync","retry","asyncIterator","AsyncFromSyncIterator","AsyncFromSyncIteratorContinuation","r","apply","arguments","thr","_awaitAsyncGenerator","AsyncGenerator","front","back","resume","arg","overloaded","OverloadYield","nextKey","settle","_invoke","_wrapAsyncGenerator","fn"],"sourceRoot":""}