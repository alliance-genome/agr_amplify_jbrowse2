{"version":3,"file":"static/js/2018.c4171ff4.chunk.js","mappings":"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","sources":["../../../node_modules/abortable-promise-cache/esm/AbortablePromiseCache.js","../../../node_modules/abortable-promise-cache/esm/AggregateAbortController.js","../../../node_modules/abortable-promise-cache/esm/AggregateStatusReporter.js","../../../node_modules/abortable-promise-cache/esm/abortcontroller-ponyfill.js","../../../node_modules/abortable-promise-cache/esm/index.js","../../../node_modules/quick-lru/index.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst abortcontroller_ponyfill_1 = require(\"./abortcontroller-ponyfill\");\nconst AggregateAbortController_1 = __importDefault(require(\"./AggregateAbortController\"));\nconst AggregateStatusReporter_1 = __importDefault(require(\"./AggregateStatusReporter\"));\nclass AbortablePromiseCache {\n    constructor({ fill, cache, }) {\n        if (typeof fill !== 'function') {\n            throw new TypeError('must pass a fill function');\n        }\n        if (typeof cache !== 'object') {\n            throw new TypeError('must pass a cache object');\n        }\n        if (typeof cache.get !== 'function' ||\n            typeof cache.set !== 'function' ||\n            typeof cache.delete !== 'function') {\n            throw new TypeError('cache must implement get(key), set(key, val), and and delete(key)');\n        }\n        this.cache = cache;\n        this.fillCallback = fill;\n    }\n    static isAbortException(exception) {\n        return (\n        // DOMException\n        exception.name === 'AbortError' ||\n            // standard-ish non-DOM abort exception\n            //@ts-ignore\n            exception.code === 'ERR_ABORTED' ||\n            // stringified DOMException\n            exception.message === 'AbortError: aborted' ||\n            // stringified standard-ish exception\n            exception.message === 'Error: aborted');\n    }\n    evict(key, entry) {\n        if (this.cache.get(key) === entry) {\n            this.cache.delete(key);\n        }\n    }\n    fill(key, data, signal, statusCallback) {\n        const aborter = new AggregateAbortController_1.default();\n        const statusReporter = new AggregateStatusReporter_1.default();\n        statusReporter.addCallback(statusCallback);\n        const newEntry = {\n            aborter: aborter,\n            promise: this.fillCallback(data, aborter.signal, (message) => {\n                statusReporter.callback(message);\n            }),\n            settled: false,\n            statusReporter,\n            get aborted() {\n                return this.aborter.signal.aborted;\n            },\n        };\n        newEntry.aborter.addSignal(signal);\n        // remove the fill from the cache when its abortcontroller fires, if still in there\n        newEntry.aborter.signal.addEventListener('abort', () => {\n            if (!newEntry.settled) {\n                this.evict(key, newEntry);\n            }\n        });\n        // chain off the cached promise to record when it settles\n        newEntry.promise\n            .then(() => {\n            newEntry.settled = true;\n        }, () => {\n            newEntry.settled = true;\n            // if the fill throws an error (including abort) and is still in the cache, remove it\n            this.evict(key, newEntry);\n        })\n            .catch(e => {\n            // this will only be reached if there is some kind of\n            // bad bug in this library\n            console.error(e);\n            throw e;\n        });\n        this.cache.set(key, newEntry);\n    }\n    static checkSinglePromise(promise, signal) {\n        // check just this signal for having been aborted, and abort the\n        // promise if it was, regardless of what happened with the cached\n        // response\n        function checkForSingleAbort() {\n            if (signal && signal.aborted) {\n                throw Object.assign(new Error('aborted'), { code: 'ERR_ABORTED' });\n            }\n        }\n        return promise.then(result => {\n            checkForSingleAbort();\n            return result;\n        }, error => {\n            checkForSingleAbort();\n            throw error;\n        });\n    }\n    has(key) {\n        return this.cache.has(key);\n    }\n    /**\n     * Callback for getting status of the pending async\n     *\n     * @callback statusCallback\n     * @param {any} status, current status string or message object\n     */\n    /**\n     * @param {any} key cache key to use for this request\n     * @param {any} data data passed as the first argument to the fill callback\n     * @param {AbortSignal} [signal] optional AbortSignal object that aborts the request\n     * @param {statusCallback} a callback to get the current status of a pending async operation\n     */\n    get(key, data, signal, statusCallback) {\n        if (!signal && data instanceof abortcontroller_ponyfill_1.AbortSignal) {\n            throw new TypeError('second get argument appears to be an AbortSignal, perhaps you meant to pass `null` for the fill data?');\n        }\n        const cacheEntry = this.cache.get(key);\n        if (cacheEntry) {\n            if (cacheEntry.aborted && !cacheEntry.settled) {\n                // if it's aborted but has not realized it yet, evict it and redispatch\n                this.evict(key, cacheEntry);\n                return this.get(key, data, signal, statusCallback);\n            }\n            if (cacheEntry.settled) {\n                // too late to abort, just return it\n                return cacheEntry.promise;\n            }\n            // request is in-flight, add this signal to its list of signals,\n            // or if there is no signal, the aborter will become non-abortable\n            cacheEntry.aborter.addSignal(signal);\n            cacheEntry.statusReporter.addCallback(statusCallback);\n            return AbortablePromiseCache.checkSinglePromise(cacheEntry.promise, signal);\n        }\n        // if we got here, it is not in the cache. fill.\n        this.fill(key, data, signal, statusCallback);\n        return AbortablePromiseCache.checkSinglePromise(\n        //see https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#non-null-assertion-operator-postfix-\n        //eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.cache.get(key).promise, signal);\n    }\n    /**\n     * delete the given entry from the cache. if it exists and its fill request has\n     * not yet settled, the fill will be signaled to abort.\n     *\n     * @param {any} key\n     */\n    delete(key) {\n        const cachedEntry = this.cache.get(key);\n        if (cachedEntry) {\n            if (!cachedEntry.settled) {\n                cachedEntry.aborter.abort();\n            }\n            this.cache.delete(key);\n        }\n    }\n    /**\n     * Clear all requests from the cache. Aborts any that have not settled.\n     * @returns {number} count of entries deleted\n     */\n    clear() {\n        // iterate without needing regenerator-runtime\n        const keyIter = this.cache.keys();\n        let deleteCount = 0;\n        for (let result = keyIter.next(); !result.done; result = keyIter.next()) {\n            this.delete(result.value);\n            deleteCount += 1;\n        }\n        return deleteCount;\n    }\n}\nexports.default = AbortablePromiseCache;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst abortcontroller_ponyfill_1 = require(\"./abortcontroller-ponyfill\");\nclass NullSignal {\n}\n/**\n * aggregates a number of abort signals, will only fire the aggregated\n * abort if all of the input signals have been aborted\n */\nclass AggregateAbortController {\n    constructor() {\n        this.signals = new Set();\n        this.abortController = new abortcontroller_ponyfill_1.AbortController();\n    }\n    /**\n     * @param {AbortSignal} [signal] optional AbortSignal to add. if falsy,\n     *  will be treated as a null-signal, and this abortcontroller will no\n     *  longer be abortable.\n     */\n    //@ts-ignore\n    addSignal(signal = new NullSignal()) {\n        if (this.signal.aborted) {\n            throw new Error('cannot add a signal, already aborted!');\n        }\n        // note that a NullSignal will never fire, so if we\n        // have one this thing will never actually abort\n        this.signals.add(signal);\n        if (signal.aborted) {\n            // handle the abort immediately if it is already aborted\n            // for some reason\n            this.handleAborted(signal);\n        }\n        else if (typeof signal.addEventListener === 'function') {\n            signal.addEventListener('abort', () => {\n                this.handleAborted(signal);\n            });\n        }\n    }\n    handleAborted(signal) {\n        this.signals.delete(signal);\n        if (this.signals.size === 0) {\n            this.abortController.abort();\n        }\n    }\n    get signal() {\n        return this.abortController.signal;\n    }\n    abort() {\n        this.abortController.abort();\n    }\n}\nexports.default = AggregateAbortController;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass AggregateStatusReporter {\n    constructor() {\n        this.callbacks = new Set();\n    }\n    addCallback(callback = () => { }) {\n        this.callbacks.add(callback);\n        callback(this.currentMessage);\n    }\n    callback(message) {\n        this.currentMessage = message;\n        this.callbacks.forEach(elt => {\n            elt(message);\n        });\n    }\n}\nexports.default = AggregateStatusReporter;\n","\"use strict\";\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbortSignal = exports.AbortController = void 0;\nconst cjs_ponyfill_1 = require(\"abortcontroller-polyfill/dist/cjs-ponyfill\");\nvar getGlobal = function () {\n    // the only reliable means to get the global object is\n    // `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    throw new Error('unable to locate global object');\n};\n//@ts-ignore\nlet AbortController = typeof getGlobal().AbortController === 'undefined' ? cjs_ponyfill_1.AbortController : getGlobal().AbortController;\nexports.AbortController = AbortController;\n//@ts-ignore\nlet AbortSignal = typeof getGlobal().AbortController === 'undefined' ? cjs_ponyfill_1.AbortSignal : getGlobal().AbortSignal;\nexports.AbortSignal = AbortSignal;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AbortablePromiseCache_1 = __importDefault(require(\"./AbortablePromiseCache\"));\nexports.default = AbortablePromiseCache_1.default;\n","'use strict';\n\nclass QuickLRU {\n\tconstructor(options = {}) {\n\t\tif (!(options.maxSize && options.maxSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tthis.maxSize = options.maxSize;\n\t\tthis.cache = new Map();\n\t\tthis.oldCache = new Map();\n\t\tthis._size = 0;\n\t}\n\n\t_set(key, value) {\n\t\tthis.cache.set(key, value);\n\t\tthis._size++;\n\n\t\tif (this._size >= this.maxSize) {\n\t\t\tthis._size = 0;\n\t\t\tthis.oldCache = this.cache;\n\t\t\tthis.cache = new Map();\n\t\t}\n\t}\n\n\tget(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn this.cache.get(key);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\tconst value = this.oldCache.get(key);\n\t\t\tthis.oldCache.delete(key);\n\t\t\tthis._set(key, value);\n\t\t\treturn value;\n\t\t}\n\t}\n\n\tset(key, value) {\n\t\tif (this.cache.has(key)) {\n\t\t\tthis.cache.set(key, value);\n\t\t} else {\n\t\t\tthis._set(key, value);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\thas(key) {\n\t\treturn this.cache.has(key) || this.oldCache.has(key);\n\t}\n\n\tpeek(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn this.cache.get(key);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\treturn this.oldCache.get(key);\n\t\t}\n\t}\n\n\tdelete(key) {\n\t\tconst deleted = this.cache.delete(key);\n\t\tif (deleted) {\n\t\t\tthis._size--;\n\t\t}\n\n\t\treturn this.oldCache.delete(key) || deleted;\n\t}\n\n\tclear() {\n\t\tthis.cache.clear();\n\t\tthis.oldCache.clear();\n\t\tthis._size = 0;\n\t}\n\n\t* keys() {\n\t\tfor (const [key] of this) {\n\t\t\tyield key;\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const [, value] of this) {\n\t\t\tyield value;\n\t\t}\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tfor (const item of this.cache) {\n\t\t\tyield item;\n\t\t}\n\n\t\tfor (const item of this.oldCache) {\n\t\t\tconst [key] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tyield item;\n\t\t\t}\n\t\t}\n\t}\n\n\tget size() {\n\t\tlet oldCacheSize = 0;\n\t\tfor (const key of this.oldCache.keys()) {\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\toldCacheSize++;\n\t\t\t}\n\t\t}\n\n\t\treturn this._size + oldCacheSize;\n\t}\n}\n\nmodule.exports = QuickLRU;\n"],"names":["__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","abortcontroller_ponyfill_1","require","AggregateAbortController_1","AggregateStatusReporter_1","AbortablePromiseCache","fill","cache","TypeError","get","set","delete","fillCallback","key","entry","data","signal","statusCallback","aborter","default","statusReporter","addCallback","newEntry","promise","message","callback","settled","aborted","addSignal","addEventListener","evict","then","catch","e","console","error","has","AbortSignal","cacheEntry","checkSinglePromise","cachedEntry","abort","keyIter","keys","deleteCount","result","next","done","exception","name","code","checkForSingleAbort","assign","Error","NullSignal","AggregateAbortController","signals","Set","abortController","AbortController","add","handleAborted","size","AggregateStatusReporter","callbacks","currentMessage","forEach","elt","cjs_ponyfill_1","getGlobal","self","window","global","AbortablePromiseCache_1","QuickLRU","options","maxSize","Map","oldCache","_size","_set","deleted","clear","item","oldCacheSize","Symbol","iterator","module"],"sourceRoot":""}