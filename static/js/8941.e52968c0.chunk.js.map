{"version":3,"file":"static/js/8941.e52968c0.chunk.js","mappings":"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","sources":["../../../packages/core/BaseFeatureWidget/SequenceFeatureDetails.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail.tsx","../../../packages/core/BaseFeatureWidget/util.tsx"],"sourcesContent":["import React, { lazy, useRef, useState, useEffect, Suspense } from 'react'\nimport {\n  Button,\n  FormControl,\n  IconButton,\n  MenuItem,\n  Select,\n  Typography,\n  Tooltip,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport copy from 'copy-to-clipboard'\n\n// locals\nimport { getSession, useLocalStorage } from '../util'\nimport { BaseProps } from './types'\nimport { getConf } from '../configuration'\nimport { Feature, SimpleFeatureSerialized } from '../util/simpleFeature'\nimport { ParentFeat, SeqState, ErrorState } from './util'\nimport { LoadingEllipses } from '../ui'\n\n// icons\nimport SettingsIcon from '@mui/icons-material/Settings'\nimport HelpIcon from '@mui/icons-material/Help'\n\n// lazies\nconst SettingsDlg = lazy(() => import('./SequenceFeatureSettingsDialog'))\nconst HelpDlg = lazy(() => import('./SequenceHelpDialog'))\nconst SequencePanel = lazy(() => import('./SequencePanel'))\n\ninterface CoordFeat extends SimpleFeatureSerialized {\n  refName: string\n  start: number\n  end: number\n}\n\nconst useStyles = makeStyles()(theme => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n  formControl: {\n    margin: 0,\n  },\n  container: {\n    margin: theme.spacing(1),\n  },\n  container2: {\n    marginTop: theme.spacing(1),\n  },\n}))\n\nconst BPLIMIT = 500_000\n\n// display the stitched-together sequence of a gene's CDS, cDNA, or protein\n// sequence. this is a best effort and weird genomic phenomena could lead these\n// to not be 100% accurate\nexport default function SequenceFeatureDetails({ model, feature }: BaseProps) {\n  const { classes } = useStyles()\n  const parentFeature = feature as unknown as ParentFeat\n  const hasCDS = !!parentFeature.subfeatures?.find(sub => sub.type === 'CDS')\n  const isGene = feature.type === 'gene'\n  const [shown, setShown] = useState(false)\n  const [helpShown, setHelpShown] = useState(false)\n\n  return (isGene && !hasCDS) || !model ? null : (\n    <div className={classes.container2}>\n      <Button variant=\"contained\" onClick={() => setShown(!shown)}>\n        {shown ? 'Hide feature sequence' : 'Show feature sequence'}\n      </Button>\n      <FormControl className={classes.formControl}>\n        <IconButton onClick={() => setHelpShown(true)}>\n          <HelpIcon />\n        </IconButton>\n      </FormControl>\n      <br />\n      {shown ? <FeatureSequence model={model} feature={feature} /> : null}\n      {helpShown ? (\n        <Suspense fallback={<div />}>\n          <HelpDlg handleClose={() => setHelpShown(false)} />\n        </Suspense>\n      ) : null}\n    </div>\n  )\n}\n\nfunction FeatureSequence({ model, feature }: BaseProps) {\n  const { classes } = useStyles()\n  const parentFeature = feature as unknown as ParentFeat\n  const hasCDS = !!parentFeature.subfeatures?.find(sub => sub.type === 'CDS')\n  const seqPanelRef = useRef<HTMLDivElement>(null)\n  const [settingsDlgOpen, setSettingsDlgOpen] = useState(false)\n  const [intronBp, setIntronBp] = useLocalStorage('intronBp', 10)\n  const [upDownBp, setUpDownBp] = useLocalStorage('upDownBp', 500)\n  const [sequence, setSequence] = useState<SeqState | ErrorState>()\n  const [error, setError] = useState<unknown>()\n  const [copied, setCopied] = useState(false)\n  const [copiedHtml, setCopiedHtml] = useState(false)\n  const [forceLoad, setForceLoad] = useState({\n    id: feature.uniqueId,\n    force: false,\n  })\n\n  useEffect(() => {\n    setForceLoad({\n      id: feature.uniqueId,\n      force: false,\n    })\n  }, [feature])\n\n  useEffect(() => {\n    let finished = false\n    if (!model) {\n      return () => {}\n    }\n    const { assemblyManager, rpcManager } = getSession(model)\n    const [assemblyName] = model.view?.assemblyNames || []\n    async function fetchSeq(start: number, end: number, refName: string) {\n      const assembly = await assemblyManager.waitForAssembly(assemblyName)\n      if (!assembly) {\n        throw new Error('assembly not found')\n      }\n      const sessionId = 'getSequence'\n      const feats = await rpcManager.call(sessionId, 'CoreGetFeatures', {\n        adapterConfig: getConf(assembly, ['sequence', 'adapter']),\n        sessionId,\n        regions: [\n          {\n            start,\n            end,\n            refName: assembly.getCanonicalRefName(refName),\n            assemblyName,\n          },\n        ],\n      })\n\n      const [feat] = feats as Feature[]\n      return (feat?.get('seq') as string | undefined) || ''\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      try {\n        setError(undefined)\n        const { start, end, refName } = feature as CoordFeat\n\n        if (!forceLoad.force && end - start > BPLIMIT) {\n          setSequence({\n            error: `Genomic sequence larger than ${BPLIMIT}bp, use \"force load\" button to display`,\n          })\n        } else {\n          const seq = await fetchSeq(start, end, refName)\n          const up = await fetchSeq(\n            Math.max(0, start - upDownBp),\n            start,\n            refName,\n          )\n          const down = await fetchSeq(end, end + upDownBp, refName)\n          if (!finished) {\n            setSequence({ seq, upstream: up, downstream: down })\n          }\n        }\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    })()\n\n    return () => {\n      finished = true\n    }\n  }, [feature, model, upDownBp, forceLoad])\n\n  const loading = !sequence\n\n  const session = getSession(model)\n  const defaultSeqTypes = ['mRNA', 'transcript', 'gene']\n  const sequenceTypes =\n    getConf(session, ['featureDetails', 'sequenceTypes']) || defaultSeqTypes\n\n  // only attempt fetching gene type sequence on a bare CDS if it has no parent\n  const attemptGeneType =\n    feature.type === 'CDS'\n      ? sequenceTypes.includes('CDS') && !feature.parentId\n      : sequenceTypes.includes(feature.type)\n  const val = attemptGeneType ? (hasCDS ? 'cds' : 'cdna') : 'genomic'\n\n  // this useEffect is needed to reset the mode/setMode useState because the\n  // contents of the select box can completely change depending on whether we\n  // click on a gene feature or non-gene feature, so the current value in the\n  // select box must change accordingly\n  useEffect(() => {\n    setMode(val)\n  }, [attemptGeneType, val])\n\n  const [mode, setMode] = useState(\n    attemptGeneType ? (hasCDS ? 'cds' : 'cdna') : 'genomic',\n  )\n\n  const rest = {\n    gene: 'Gene w/ introns',\n    gene_collapsed_intron: `Gene w/ ${intronBp}bp of intron`,\n    gene_updownstream: `Gene w/ ${upDownBp}bp up+down stream`,\n    gene_updownstream_collapsed_intron: `Gene w/ ${upDownBp}bp up+down stream w/ ${intronBp}bp intron`,\n    cdna: 'cDNA',\n  }\n\n  const arg = attemptGeneType\n    ? hasCDS\n      ? {\n          cds: 'CDS',\n          protein: 'Protein',\n          ...rest,\n        }\n      : rest\n    : {\n        genomic: 'Genomic seq',\n        genomic_sequence_updown: `Genomic seq w/ ${upDownBp}bp up+down stream`,\n      }\n  return (\n    <div className={classes.container2}>\n      <FormControl className={classes.formControl}>\n        <Select value={mode} onChange={event => setMode(event.target.value)}>\n          {Object.entries(arg).map(([key, val]) => (\n            <MenuItem key={key} value={key}>\n              {val}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <FormControl className={classes.formControl}>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          onClick={() => {\n            const ref = seqPanelRef.current\n            if (ref) {\n              copy(ref.textContent || '', { format: 'text/plain' })\n              setCopied(true)\n              setTimeout(() => setCopied(false), 1000)\n            }\n          }}\n        >\n          {copied ? 'Copied to clipboard!' : 'Copy plaintext'}\n        </Button>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <Tooltip title=\"The 'Copy HTML' function retains the colors from the sequence panel but cannot be pasted into some programs like notepad that only expect plain text\">\n          <Button\n            className={classes.button}\n            variant=\"contained\"\n            onClick={() => {\n              const ref = seqPanelRef.current\n              if (ref) {\n                copy(ref.innerHTML, { format: 'text/html' })\n                setCopiedHtml(true)\n                setTimeout(() => setCopiedHtml(false), 1000)\n              }\n            }}\n          >\n            {copiedHtml ? 'Copied to clipboard!' : 'Copy HTML'}\n          </Button>\n        </Tooltip>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <IconButton onClick={() => setSettingsDlgOpen(true)}>\n          <SettingsIcon />\n        </IconButton>\n      </FormControl>\n\n      <br />\n      {error ? (\n        <Typography color=\"error\">{`${error}`}</Typography>\n      ) : loading ? (\n        <LoadingEllipses />\n      ) : sequence ? (\n        'error' in sequence ? (\n          <>\n            <Typography color=\"error\">{sequence.error}</Typography>\n            <Button\n              variant=\"contained\"\n              color=\"inherit\"\n              onClick={() => setForceLoad({ ...forceLoad, force: true })}\n            >\n              Force load\n            </Button>\n          </>\n        ) : (\n          <Suspense fallback={<div>Loading</div>}>\n            <SequencePanel\n              ref={seqPanelRef}\n              feature={parentFeature}\n              mode={mode}\n              sequence={sequence}\n              intronBp={intronBp}\n            />\n          </Suspense>\n        )\n      ) : (\n        <Typography>No sequence found</Typography>\n      )}\n\n      {settingsDlgOpen ? (\n        <Suspense fallback={<div />}>\n          <SettingsDlg\n            handleClose={arg => {\n              if (arg) {\n                const { upDownBp, intronBp } = arg\n                setIntronBp(intronBp)\n                setUpDownBp(upDownBp)\n              }\n              setSettingsDlgOpen(false)\n            }}\n            upDownBp={upDownBp}\n            intronBp={intronBp}\n          />\n        </Suspense>\n      ) : null}\n    </div>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState } from 'react'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Divider,\n  Link,\n  Tooltip,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport ExpandMore from '@mui/icons-material/ExpandMore'\nimport { DataGrid, GridCellParams } from '@mui/x-data-grid'\nimport { observer } from 'mobx-react'\nimport isObject from 'is-object'\nimport { IAnyStateTreeNode } from 'mobx-state-tree'\n\n// locals\nimport {\n  measureText,\n  measureGridWidth,\n  getStr,\n  getEnv,\n  getSession,\n  getUriLink,\n  isUriLocation,\n  assembleLocString,\n  ParsedLocString,\n} from '../util'\nimport { ErrorMessage, SanitizedHTML } from '../ui'\nimport SequenceFeatureDetails from './SequenceFeatureDetails'\nimport { BaseCardProps, BaseProps } from './types'\nimport { SimpleFeatureSerializedNoId } from '../util/simpleFeature'\nimport { ellipses } from './util'\n\nconst MAX_FIELD_NAME_WIDTH = 170\n\n// these are always omitted as too detailed\nconst globalOmit = [\n  '__jbrowsefmt',\n  'length',\n  'position',\n  'subfeatures',\n  'uniqueId',\n  'exonFrames',\n  'parentId',\n  'thickStart',\n  'thickEnd',\n]\n\n// coreDetails are omitted in some circumstances\nconst coreDetails = [\n  'name',\n  'start',\n  'end',\n  'strand',\n  'refName',\n  'description',\n  'type',\n]\n\nexport const useStyles = makeStyles()(theme => ({\n  expansionPanelDetails: {\n    display: 'block',\n    padding: theme.spacing(1),\n  },\n  expandIcon: {\n    color: theme.palette.tertiary?.contrastText || '#fff',\n  },\n  field: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  fieldDescription: {\n    '&:hover': {\n      background: 'yellow',\n    },\n  },\n  fieldName: {\n    wordBreak: 'break-all',\n    minWidth: 90,\n    borderBottom: '1px solid #0003',\n    fontSize: 12,\n    background: theme.palette.action.disabledBackground,\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(0.5),\n  },\n  fieldValue: {\n    wordBreak: 'break-word',\n    maxHeight: 300,\n    fontSize: 12,\n    padding: theme.spacing(0.5),\n    overflow: 'auto',\n  },\n  fieldSubvalue: {\n    wordBreak: 'break-word',\n    maxHeight: 300,\n    padding: theme.spacing(0.5),\n    background: theme.palette.action.disabledBackground,\n    border: `1px solid ${theme.palette.action.disabledBackground}`,\n    boxSizing: 'border-box',\n    overflow: 'auto',\n  },\n}))\n\nexport function BaseCard({\n  children,\n  title,\n  defaultExpanded = true,\n}: BaseCardProps) {\n  const { classes } = useStyles()\n  const [expanded, setExpanded] = useState(defaultExpanded)\n  return (\n    <Accordion\n      expanded={expanded}\n      onChange={() => setExpanded(s => !s)}\n      TransitionProps={{ unmountOnExit: true, timeout: 150 }}\n    >\n      <AccordionSummary\n        expandIcon={<ExpandMore className={classes.expandIcon} />}\n      >\n        <Typography variant=\"button\"> {title}</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.expansionPanelDetails}>\n        {children}\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n\nexport const FieldName = ({\n  description,\n  name,\n  width,\n  prefix = [],\n}: {\n  description?: React.ReactNode\n  name: string\n  prefix?: string[]\n  width?: number\n}) => {\n  const { classes, cx } = useStyles()\n  const val = [...prefix, name].join('.')\n  return description ? (\n    <Tooltip title={description} placement=\"left\">\n      <div className={cx(classes.fieldDescription, classes.fieldName)}>\n        {val}\n      </div>\n    </Tooltip>\n  ) : (\n    <div className={classes.fieldName} style={{ width: width }}>\n      {val}\n    </div>\n  )\n}\n\nexport const BasicValue = ({ value }: { value: string | React.ReactNode }) => {\n  const { classes } = useStyles()\n  const isLink = `${value}`.match(/^https?:\\/\\//)\n  return (\n    <div className={classes.fieldValue}>\n      {React.isValidElement(value) ? (\n        value\n      ) : isLink ? (\n        <Link href={`${value}`}>{`${value}`}</Link>\n      ) : (\n        <SanitizedHTML\n          html={isObject(value) ? JSON.stringify(value) : String(value)}\n        />\n      )}\n    </div>\n  )\n}\n\nexport const SimpleValue = ({\n  name,\n  value,\n  description,\n  prefix,\n  width,\n}: {\n  description?: React.ReactNode\n  name: string\n  value: any\n  prefix?: string[]\n  width?: number\n}) => {\n  const { classes } = useStyles()\n  return value !== null && value !== undefined ? (\n    <div className={classes.field}>\n      <FieldName\n        prefix={prefix}\n        description={description}\n        name={name}\n        width={width}\n      />\n      <BasicValue value={value} />\n    </div>\n  ) : null\n}\n\nconst ArrayValue = ({\n  name,\n  value,\n  description,\n  prefix = [],\n}: {\n  description?: React.ReactNode\n  name: string\n  value: any[]\n  prefix?: string[]\n}) => {\n  const { classes } = useStyles()\n  if (value.length === 1) {\n    return isObject(value[0]) ? (\n      <Attributes attributes={value[0]} prefix={[...prefix, name]} />\n    ) : (\n      <div className={classes.field}>\n        <FieldName prefix={prefix} description={description} name={name} />\n        <BasicValue value={value[0]} />\n      </div>\n    )\n  } else if (value.every(val => isObject(val))) {\n    return (\n      <>\n        {value.map((val, i) => (\n          <Attributes\n            key={JSON.stringify(val) + '-' + i}\n            attributes={val}\n            prefix={[...prefix, name + '-' + i]}\n          />\n        ))}\n      </>\n    )\n  } else {\n    return (\n      <div className={classes.field}>\n        <FieldName prefix={prefix} description={description} name={name} />\n        {value.map((val, i) => (\n          <div\n            key={JSON.stringify(val) + '-' + i}\n            className={classes.fieldSubvalue}\n          >\n            <BasicValue value={val} />\n          </div>\n        ))}\n      </div>\n    )\n  }\n}\nconst toLocale = (n: number) => n.toLocaleString('en-US')\n\nfunction Position(props: BaseProps) {\n  const { feature } = props\n  const strand = feature.strand as number\n  const strandMap: Record<string, string> = {\n    '-1': '-',\n    '0': '',\n    '1': '+',\n  }\n  const str = strandMap[strand] ? `(${strandMap[strand]})` : ''\n  // @ts-ignore\n  const loc = assembleLocString(feature as ParsedLocString)\n  return <>{`${loc} ${str}`}</>\n}\n\nfunction CoreDetails(props: BaseProps) {\n  const { feature } = props\n  const obj = feature as SimpleFeatureSerializedNoId & {\n    start: number\n    end: number\n    assemblyName?: string\n    strand: number\n    refName: string\n    __jbrowsefmt: {\n      start?: number\n      assemblyName?: string\n      end?: number\n      refName?: string\n      name?: string\n    }\n  }\n\n  // eslint-disable-next-line no-underscore-dangle\n  const formattedFeat = { ...obj, ...obj.__jbrowsefmt }\n  const { start, end } = formattedFeat\n\n  const displayedDetails: Record<string, any> = {\n    ...formattedFeat,\n    length: toLocale(end - start),\n  }\n\n  const coreRenderedDetails = {\n    description: 'Description',\n    name: 'Name',\n    length: 'Length',\n    type: 'Type',\n  }\n  return (\n    <>\n      <SimpleValue\n        name=\"Position\"\n        value={<Position {...props} feature={formattedFeat} />}\n      />\n      {Object.entries(coreRenderedDetails)\n        .map(([key, name]) => [name, displayedDetails[key]])\n        .filter(([, value]) => value != null)\n        .map(([name, value]) => (\n          <SimpleValue key={name} name={name} value={value} />\n        ))}\n    </>\n  )\n}\n\nexport const BaseCoreDetails = (props: BaseProps) => {\n  return (\n    <BaseCard {...props} title=\"Primary data\">\n      <CoreDetails {...props} />\n    </BaseCard>\n  )\n}\n\ninterface AttributeProps {\n  attributes: Record<string, any>\n  omit?: string[]\n  omitSingleLevel?: string[]\n  formatter?: (val: unknown, key: string) => React.ReactNode\n  descriptions?: Record<string, React.ReactNode>\n  prefix?: string[]\n  hideUris?: boolean\n}\n\nexport function UriLink({\n  value,\n}: {\n  value: { uri: string; baseUri?: string }\n}) {\n  const href = getUriLink(value)\n  return <SanitizedHTML html={`<a href=\"${href}\">${href}</a>`} />\n}\n\nconst DataGridDetails = ({\n  value,\n  prefix,\n  name,\n}: {\n  name: string\n  prefix?: string[]\n  value: Record<string, any>\n}) => {\n  const keys = Object.keys(value[0]).sort()\n  const unionKeys = new Set(keys)\n  value.forEach((val: any) => Object.keys(val).forEach(k => unionKeys.add(k)))\n  if (unionKeys.size < keys.length + 5) {\n    // avoids key 'id' from being used in row data\n    const rows = Object.entries(value).map(([k, val]) => {\n      const { id, ...rest } = val\n      return {\n        id: k, // used by material UI\n        identifier: id, // renamed from id to identifier\n        ...rest,\n      }\n    })\n\n    // avoids key 'id' from being used in column names, and tries\n    // to make it at the start of the colNames array\n    let colNames\n    if (unionKeys.has('id')) {\n      unionKeys.delete('id')\n      colNames = ['identifier', ...unionKeys]\n    } else {\n      colNames = [...unionKeys]\n    }\n\n    const columns = colNames.map(val => ({\n      field: val,\n      renderCell: (params: GridCellParams) => {\n        const { value } = params\n        return isUriLocation(value) ? <UriLink value={value} /> : getStr(value)\n      },\n      width: measureGridWidth(rows.map(r => r[val])),\n    }))\n\n    const rowHeight = 25\n    const hideFoot = rows.length < 100\n    const headHeight = 80\n    const height =\n      Math.min(rows.length, 100) * rowHeight + headHeight + (hideFoot ? 0 : 50)\n    // disableSelection on click helps avoid\n    // https://github.com/mui-org/material-ui-x/issues/1197\n    return (\n      <>\n        <FieldName prefix={prefix} name={name} />\n        <div\n          style={{\n            height,\n            width: '100%',\n          }}\n        >\n          <DataGrid\n            disableSelectionOnClick\n            rowHeight={rowHeight}\n            rows={rows}\n            hideFooterSelectedRowCount\n            columns={columns}\n            hideFooter={hideFoot}\n          />\n        </div>\n      </>\n    )\n  }\n  return null\n}\n\n// pick using a path from an object, similar to _.get from lodash with special logic\n// for Descriptions from e.g. VCF headers\n// @param arr  example ['a','b'], obj = {a:{b:'hello}}\n// @returns hello (with special addition to grab description also)\nfunction accessNested(arr: string[], obj: Record<string, any> = {}) {\n  arr.forEach(elt => {\n    if (obj) {\n      obj = obj[elt]\n    }\n  })\n  return typeof obj === 'string'\n    ? obj\n    : typeof obj?.Description === 'string'\n    ? obj.Description\n    : undefined\n}\n\nfunction generateMaxWidth(array: unknown[][], prefix: any) {\n  const arr = [] as number[]\n  array.forEach(key => {\n    const val = [...prefix, key[0]].join('.')\n    arr.push(measureText(val, 12))\n  })\n\n  return Math.ceil(Math.max(...arr)) + 10\n}\n\nfunction UriAttribute({\n  value,\n  prefix,\n  name,\n}: {\n  value: { uri: string; baseUri?: string }\n  name: string\n  prefix: string[]\n}) {\n  const { classes } = useStyles()\n  const { uri, baseUri = '' } = value\n  let href\n  try {\n    href = new URL(uri, baseUri).href\n  } catch (e) {\n    href = uri\n  }\n  return (\n    <div className={classes.field}>\n      <FieldName prefix={prefix} name={name} />\n      <BasicValue value={href} />\n    </div>\n  )\n}\n\nexport function Attributes(props: AttributeProps) {\n  const {\n    attributes,\n    omit = [],\n    omitSingleLevel = [],\n    descriptions,\n    formatter = val => val,\n    hideUris,\n    prefix = [],\n  } = props\n\n  const omits = [...omit, ...globalOmit, ...omitSingleLevel]\n  const { __jbrowsefmt, ...rest } = attributes\n  const formattedAttributes = { ...rest, ...__jbrowsefmt }\n\n  const maxLabelWidth = generateMaxWidth(\n    Object.entries(formattedAttributes).filter(\n      ([k, v]) => v !== undefined && !omits.includes(k),\n    ),\n    prefix,\n  )\n\n  return (\n    <>\n      {Object.entries(formattedAttributes)\n        .filter(([k, v]) => v !== undefined && !omits.includes(k))\n        .map(([key, value]) => {\n          const description = accessNested([...prefix, key], descriptions)\n          if (Array.isArray(value)) {\n            // check if it looks like an array of objects, which could be used\n            // in data grid\n            return value.length > 1 && value.every(val => isObject(val)) ? (\n              <DataGridDetails\n                key={key}\n                name={key}\n                prefix={prefix}\n                value={value}\n              />\n            ) : (\n              <ArrayValue\n                key={key}\n                name={key}\n                value={value}\n                description={description}\n                prefix={prefix}\n              />\n            )\n          } else if (isObject(value)) {\n            const { omitSingleLevel, ...rest } = props\n            return isUriLocation(value) ? (\n              hideUris ? null : (\n                <UriAttribute\n                  key={key}\n                  name={key}\n                  prefix={prefix}\n                  value={value}\n                />\n              )\n            ) : (\n              <Attributes\n                {...rest}\n                key={key}\n                attributes={value}\n                descriptions={descriptions}\n                prefix={[...prefix, key]}\n              />\n            )\n          } else {\n            return (\n              <SimpleValue\n                key={key}\n                name={key}\n                value={formatter(value, key)}\n                description={description}\n                prefix={prefix}\n                width={Math.min(maxLabelWidth, MAX_FIELD_NAME_WIDTH)}\n              />\n            )\n          }\n        })}\n    </>\n  )\n}\n\nexport const BaseAttributes = (props: BaseProps) => {\n  const { feature } = props\n  return (\n    <BaseCard {...props} title=\"Attributes\">\n      <Attributes {...props} attributes={feature} />\n    </BaseCard>\n  )\n}\n\nexport interface BaseInputProps extends BaseCardProps {\n  omit?: string[]\n  model: any\n  descriptions?: Record<string, React.ReactNode>\n  formatter?: (val: unknown, key: string) => React.ReactNode\n}\n\nfunction isEmpty(obj: Record<string, unknown>) {\n  return Object.keys(obj).length === 0\n}\n\nfunction generateTitle(name: unknown, id: unknown, type: unknown) {\n  return [ellipses(`${name}` || `${id}`), `${type}`]\n    .filter(f => !!f)\n    .join(' - ')\n}\n\ninterface PanelDescriptor {\n  name: string\n  Component: React.FC<any>\n}\n\nexport const FeatureDetails = (props: {\n  model: IAnyStateTreeNode\n  feature: SimpleFeatureSerializedNoId\n  depth?: number\n  omit?: string[]\n  formatter?: (val: unknown, key: string) => React.ReactNode\n}) => {\n  const { omit = [], model, feature, depth = 0 } = props\n  const { name = '', id = '', type = '', subfeatures } = feature\n  const pm = getEnv(model).pluginManager\n  const session = getSession(model)\n\n  const ExtraPanel = pm.evaluateExtensionPoint('Core-extraFeaturePanel', null, {\n    session,\n    feature,\n    model,\n  }) as PanelDescriptor | undefined\n  return (\n    <BaseCard title={generateTitle(name, id, type)}>\n      <Typography>Core details</Typography>\n      <CoreDetails {...props} />\n      {feature.mate ? (\n        <>\n          <Divider />\n          <Typography>Mate details</Typography>\n          {/* @ts-ignore */}\n          <CoreDetails {...props} feature={feature.mate} />\n        </>\n      ) : null}\n      <Divider />\n\n      <Typography>Attributes</Typography>\n\n      <Attributes\n        attributes={feature}\n        {...props}\n        omit={omit}\n        omitSingleLevel={coreDetails}\n      />\n\n      <ErrorBoundary\n        FallbackComponent={({ error }) => <ErrorMessage error={error} />}\n      >\n        <SequenceFeatureDetails {...props} />\n      </ErrorBoundary>\n\n      {ExtraPanel ? (\n        <>\n          <Divider />\n          <BaseCard title={ExtraPanel.name}>\n            <ExtraPanel.Component {...props} />\n          </BaseCard>\n        </>\n      ) : null}\n\n      {subfeatures?.length ? (\n        <BaseCard title=\"Subfeatures\" defaultExpanded={depth < 1}>\n          {subfeatures.map(sub => (\n            <FeatureDetails\n              key={JSON.stringify(sub)}\n              feature={sub}\n              model={model}\n              depth={depth + 1}\n            />\n          ))}\n        </BaseCard>\n      ) : null}\n    </BaseCard>\n  )\n}\n\nconst BaseFeatureDetails = observer(({ model }: BaseInputProps) => {\n  const { featureData } = model\n\n  if (!featureData) {\n    return null\n  }\n\n  // replacing undefined with null helps with allowing fields to be hidden,\n  // setting null is not allowed by jexl so we set it to undefined to hide. see\n  // config guide. this replacement happens both here and when snapshotting the\n  // featureData\n  const feature = JSON.parse(\n    JSON.stringify(featureData, (_, v) =>\n      typeof v === 'undefined' ? null : v,\n    ),\n  )\n  return isEmpty(feature) ? null : (\n    <FeatureDetails model={model} feature={feature} />\n  )\n})\n\nexport default BaseFeatureDetails\n","export interface Feat {\n  start: number\n  end: number\n  type: string\n  name?: string\n  id?: string\n}\nexport interface ParentFeat extends Feat {\n  uniqueId: string\n  strand?: number\n  refName: string\n  subfeatures?: Feat[]\n  parentId?: string\n}\nexport interface SeqState {\n  seq: string\n  upstream?: string\n  downstream?: string\n}\n\nexport interface ErrorState {\n  error: string\n}\n\nexport function stitch(subfeats: Feat[], sequence: string) {\n  return subfeats.map(sub => sequence.slice(sub.start, sub.end)).join('')\n}\n\n// filter items if they have the same \"ID\" or location\nfunction getItemId(feat: Feat) {\n  return `${feat.start}-${feat.end}`\n}\n\n// filters if successive elements share same start/end\nexport function dedupe(list: Feat[]) {\n  return list.filter(\n    (item, pos, ary) => !pos || getItemId(item) !== getItemId(ary[pos - 1]),\n  )\n}\n\nexport function revlist(list: Feat[], seqlen: number) {\n  return list\n    .map(sub => ({\n      ...sub,\n      start: seqlen - sub.end,\n      end: seqlen - sub.start,\n    }))\n    .sort((a, b) => a.start - b.start)\n}\n\n// calculates UTRs using impliedUTRs logic\nexport function calculateUTRs(cds: Feat[], exons: Feat[]) {\n  const firstCds = cds[0]\n  const lastCds = cds[cds.length - 1]\n  const firstCdsIdx = exons.findIndex(\n    exon => exon.end >= firstCds.start && exon.start <= firstCds.start,\n  )\n  const lastCdsIdx = exons.findIndex(\n    exon => exon.end >= lastCds.end && exon.start <= lastCds.end,\n  )\n  const lastCdsExon = exons[lastCdsIdx]\n  const firstCdsExon = exons[firstCdsIdx]\n\n  const fiveUTRs = [\n    ...exons.slice(0, firstCdsIdx),\n    { start: firstCdsExon.start, end: firstCds.start },\n  ].map(elt => ({ ...elt, type: 'five_prime_UTR' }))\n\n  const threeUTRs = [\n    { start: lastCds.end, end: lastCdsExon.end },\n    ...exons.slice(lastCdsIdx + 1),\n  ].map(elt => ({ ...elt, type: 'three_prime_UTR' }))\n\n  return [...fiveUTRs, ...threeUTRs]\n}\n\n// calculates UTRs using impliedUTRs logic, but there are no exon subfeatures\nexport function calculateUTRs2(cds: Feat[], parentFeat: Feat) {\n  const firstCds = cds[0]\n  const lastCds = cds[cds.length - 1]\n\n  const fiveUTRs = [{ start: parentFeat.start, end: firstCds.start }].map(\n    elt => ({ ...elt, type: 'five_prime_UTR' }),\n  )\n\n  const threeUTRs = [{ start: lastCds.end, end: parentFeat.end }].map(elt => ({\n    ...elt,\n    type: 'three_prime_UTR',\n  }))\n\n  return [...fiveUTRs, ...threeUTRs]\n}\n\nexport function ellipses(slug: string) {\n  return slug.length > 20 ? `${slug.slice(0, 20)}...` : slug\n}\n"],"names":["SettingsDlg","lazy","HelpDlg","SequencePanel","useStyles","makeStyles","theme","button","margin","spacing","formControl","container","container2","marginTop","BPLIMIT","SequenceFeatureDetails","model","feature","classes","hasCDS","subfeatures","find","sub","type","isGene","useState","shown","setShown","helpShown","setHelpShown","className","Button","variant","onClick","FormControl","IconButton","Help","FeatureSequence","Suspense","fallback","handleClose","parentFeature","seqPanelRef","useRef","settingsDlgOpen","setSettingsDlgOpen","useLocalStorage","intronBp","setIntronBp","upDownBp","setUpDownBp","sequence","setSequence","error","setError","copied","setCopied","copiedHtml","setCopiedHtml","id","uniqueId","force","forceLoad","setForceLoad","useEffect","finished","getSession","assemblyManager","rpcManager","view","assemblyNames","assemblyName","fetchSeq","start","end","refName","waitForAssembly","assembly","Error","sessionId","call","adapterConfig","getConf","regions","getCanonicalRefName","feats","feat","get","undefined","seq","Math","max","up","down","upstream","downstream","console","loading","session","sequenceTypes","attemptGeneType","includes","parentId","val","setMode","mode","rest","gene","gene_collapsed_intron","gene_updownstream","gene_updownstream_collapsed_intron","cdna","arg","cds","protein","genomic","genomic_sequence_updown","Select","value","onChange","event","target","Object","entries","map","key","MenuItem","ref","current","copy","textContent","format","setTimeout","Tooltip","title","innerHTML","Settings","Typography","color","LoadingEllipses","MAX_FIELD_NAME_WIDTH","globalOmit","coreDetails","expansionPanelDetails","display","padding","expandIcon","palette","tertiary","contrastText","field","flexWrap","fieldDescription","background","fieldName","wordBreak","minWidth","borderBottom","fontSize","action","disabledBackground","marginRight","fieldValue","maxHeight","overflow","fieldSubvalue","border","boxSizing","BaseCard","children","defaultExpanded","expanded","setExpanded","Accordion","s","TransitionProps","unmountOnExit","timeout","AccordionSummary","ExpandMore","AccordionDetails","FieldName","description","name","width","prefix","cx","join","placement","style","BasicValue","isLink","match","React","Link","href","SanitizedHTML","html","isObject","JSON","stringify","String","SimpleValue","ArrayValue","length","Attributes","attributes","every","i","toLocale","n","toLocaleString","Position","props","strand","strandMap","str","loc","assembleLocString","CoreDetails","obj","formattedFeat","__jbrowsefmt","displayedDetails","filter","BaseCoreDetails","UriLink","getUriLink","DataGridDetails","keys","sort","unionKeys","Set","forEach","k","add","size","colNames","rows","identifier","has","delete","columns","renderCell","params","isUriLocation","getStr","measureGridWidth","r","hideFoot","height","min","DataGrid","disableSelectionOnClick","rowHeight","hideFooterSelectedRowCount","hideFooter","UriAttribute","uri","baseUri","URL","e","omit","omitSingleLevel","descriptions","formatter","hideUris","omits","formattedAttributes","maxLabelWidth","array","arr","push","measureText","ceil","generateMaxWidth","elt","Description","accessNested","Array","isArray","BaseAttributes","generateTitle","ellipses","f","FeatureDetails","depth","pm","getEnv","pluginManager","ExtraPanel","evaluateExtensionPoint","mate","Divider","ErrorBoundary","FallbackComponent","ErrorMessage","Component","observer","featureData","parse","_","v","stitch","subfeats","slice","getItemId","dedupe","list","item","pos","ary","revlist","seqlen","a","b","calculateUTRs","exons","firstCds","lastCds","firstCdsIdx","findIndex","exon","lastCdsIdx","lastCdsExon","firstCdsExon","fiveUTRs","threeUTRs","calculateUTRs2","parentFeat","slug"],"sourceRoot":""}