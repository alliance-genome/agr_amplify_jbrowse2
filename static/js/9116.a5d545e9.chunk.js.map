{"version":3,"file":"static/js/9116.a5d545e9.chunk.js","mappings":"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","sources":["../../../plugins/linear-comparative-view/src/LinearComparativeView/components/Rubberband.tsx","../../../plugins/linear-comparative-view/src/LinearComparativeView/components/Header.tsx","../../../plugins/linear-comparative-view/src/LinearComparativeView/components/LinearComparativeView.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/ImportCustomTrack.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/ImportSyntenyTrackSelector.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/ImportForm.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/LinearSyntenyView.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { Popover, Tooltip, Typography, alpha } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { stringify } from '@jbrowse/core/util'\nimport { Menu } from '@jbrowse/core/ui'\nimport { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\nimport { LinearComparativeViewModel } from '../model'\n\ntype LCV = LinearComparativeViewModel\ntype LGV = LinearGenomeViewModel\n\nconst useStyles = makeStyles()(theme => {\n  const { tertiary, primary } = theme.palette\n  const background = tertiary\n    ? alpha(tertiary.main, 0.7)\n    : alpha(primary.main, 0.7)\n  return {\n    rubberband: {\n      height: '100%',\n      background,\n      position: 'absolute',\n      zIndex: 10,\n      textAlign: 'center',\n      overflow: 'hidden',\n    },\n    rubberbandControl: {\n      cursor: 'crosshair',\n      width: '100%',\n      minHeight: 8,\n    },\n    rubberbandText: {\n      color: tertiary ? tertiary.contrastText : primary.contrastText,\n    },\n    popover: {\n      mouseEvents: 'none',\n      cursor: 'crosshair',\n    },\n    paper: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n    },\n    guide: {\n      pointerEvents: 'none',\n      height: '100%',\n      width: 1,\n      position: 'absolute',\n      zIndex: 10,\n    },\n    sm: {\n      fontSize: 10,\n    },\n  }\n})\n\nconst VerticalGuide = observer(\n  ({ model, coordX }: { model: LCV; coordX: number }) => {\n    const { classes } = useStyles()\n    return (\n      <Tooltip\n        open\n        placement=\"top\"\n        title={model.views\n          .map(view => view.pxToBp(coordX))\n          .map(elt => (\n            <Typography className={classes.sm} key={JSON.stringify(elt)}>\n              {stringify(elt)}\n            </Typography>\n          ))}\n        arrow\n      >\n        <div\n          className={classes.guide}\n          style={{\n            left: coordX,\n            background: 'red',\n          }}\n        />\n      </Tooltip>\n    )\n  },\n)\n\nfunction Rubberband({\n  model,\n  ControlComponent = <div />,\n}: {\n  model: LCV\n  ControlComponent?: React.ReactElement\n}) {\n  const [startX, setStartX] = useState<number>()\n  const [currentX, setCurrentX] = useState<number>()\n\n  // clientX and clientY used for anchorPosition for menu\n  // offsetX used for calculations about width of selection\n  const [anchorPosition, setAnchorPosition] = useState<{\n    offsetX: number\n    clientX: number\n    clientY: number\n  }>()\n  const [guideX, setGuideX] = useState<number>()\n  const controlsRef = useRef<HTMLDivElement>(null)\n  const rubberbandRef = useRef(null)\n  const { classes } = useStyles()\n  const mouseDragging = startX !== undefined && anchorPosition === undefined\n\n  useEffect(() => {\n    function computeOffsets(offsetX: number, view: LGV) {\n      if (startX === undefined) {\n        return\n      }\n      let leftPx = startX\n      let rightPx = offsetX\n      // handles clicking and dragging to the left\n      if (rightPx < leftPx) {\n        ;[leftPx, rightPx] = [rightPx, leftPx]\n      }\n      const leftOffset = view.pxToBp(leftPx)\n      const rightOffset = view.pxToBp(rightPx)\n\n      return { leftOffset, rightOffset }\n    }\n\n    function globalMouseMove(event: MouseEvent) {\n      if (controlsRef.current && mouseDragging) {\n        const relativeX =\n          event.clientX - controlsRef.current.getBoundingClientRect().left\n        setCurrentX(relativeX)\n      }\n    }\n\n    function globalMouseUp(event: MouseEvent) {\n      if (startX !== undefined && controlsRef.current) {\n        const { clientX, clientY } = event\n        const ref = controlsRef.current\n        const offsetX = clientX - ref.getBoundingClientRect().left\n        // as stated above, store both clientX/Y and offsetX for different\n        // purposes\n        setAnchorPosition({\n          offsetX,\n          clientX,\n          clientY,\n        })\n        model.views.forEach(view => {\n          const args = computeOffsets(offsetX, view)\n          if (args) {\n            const { leftOffset, rightOffset } = args\n            view.setOffsets(leftOffset, rightOffset)\n          }\n        })\n        setGuideX(undefined)\n      }\n    }\n    if (mouseDragging) {\n      window.addEventListener('mousemove', globalMouseMove)\n      window.addEventListener('mouseup', globalMouseUp)\n      return () => {\n        window.removeEventListener('mousemove', globalMouseMove)\n        window.removeEventListener('mouseup', globalMouseUp)\n      }\n    }\n    return () => {}\n  }, [startX, mouseDragging, anchorPosition, model])\n\n  useEffect(() => {\n    if (\n      !mouseDragging &&\n      currentX !== undefined &&\n      startX !== undefined &&\n      Math.abs(currentX - startX) <= 3\n    ) {\n      handleClose()\n    }\n  }, [mouseDragging, currentX, startX])\n\n  function mouseDown(event: React.MouseEvent<HTMLDivElement>) {\n    event.preventDefault()\n    event.stopPropagation()\n    const relativeX =\n      event.clientX -\n      (event.target as HTMLDivElement).getBoundingClientRect().left\n    setStartX(relativeX)\n    setCurrentX(relativeX)\n  }\n\n  function mouseMove(event: React.MouseEvent<HTMLDivElement>) {\n    const target = event.target as HTMLDivElement\n    setGuideX(event.clientX - target.getBoundingClientRect().left)\n  }\n\n  function mouseOut() {\n    setGuideX(undefined)\n    model.views.forEach(view => view.setOffsets(undefined, undefined))\n  }\n\n  function handleClose() {\n    setAnchorPosition(undefined)\n    setStartX(undefined)\n    setCurrentX(undefined)\n  }\n\n  const open = Boolean(anchorPosition)\n\n  function handleMenuItemClick(_: unknown, callback: Function) {\n    callback()\n    handleClose()\n  }\n\n  if (startX === undefined) {\n    return (\n      <>\n        {guideX !== undefined ? (\n          <VerticalGuide model={model} coordX={guideX} />\n        ) : null}\n        <div\n          data-testid=\"rubberband_controls\"\n          className={classes.rubberbandControl}\n          role=\"presentation\"\n          ref={controlsRef}\n          onMouseDown={mouseDown}\n          onMouseOut={mouseOut}\n          onMouseMove={mouseMove}\n        >\n          {ControlComponent}\n        </div>\n      </>\n    )\n  }\n\n  /* Calculating Pixels for Mouse Dragging */\n  const right = anchorPosition ? anchorPosition.offsetX : currentX || 0\n  const left = right < startX ? right : startX\n  const width = Math.abs(right - startX)\n  const { views } = model\n  const leftBpOffset = views.map(view => view.pxToBp(left))\n  const rightBpOffset = views.map(view => view.pxToBp(left + width))\n  const numOfBpSelected = views.map(view => Math.ceil(width * view.bpPerPx))\n  return (\n    <>\n      {rubberbandRef.current ? (\n        <>\n          <Popover\n            className={classes.popover}\n            classes={{\n              paper: classes.paper,\n            }}\n            open\n            anchorEl={rubberbandRef.current}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'left',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right',\n            }}\n            keepMounted\n            disableRestoreFocus\n          >\n            {leftBpOffset.map(l => (\n              <Typography key={JSON.stringify(l)}>{stringify(l)}</Typography>\n            ))}\n          </Popover>\n          <Popover\n            className={classes.popover}\n            classes={{\n              paper: classes.paper,\n            }}\n            open\n            anchorEl={rubberbandRef.current}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left',\n            }}\n            keepMounted\n            disableRestoreFocus\n          >\n            {rightBpOffset.map(l => (\n              <Typography key={JSON.stringify(l)}>{stringify(l)}</Typography>\n            ))}\n          </Popover>\n        </>\n      ) : null}\n      <div\n        ref={rubberbandRef}\n        className={classes.rubberband}\n        style={{ left, width }}\n      >\n        <Typography variant=\"h6\" className={classes.rubberbandText}>\n          {numOfBpSelected.map((n, i) => (\n            <Typography key={`${n}_${i}`}>{`${n.toLocaleString(\n              'en-US',\n            )}bp`}</Typography>\n          ))}\n        </Typography>\n      </div>\n      <div\n        data-testid=\"rubberband_controls\"\n        className={classes.rubberbandControl}\n        role=\"presentation\"\n        ref={controlsRef}\n        onMouseDown={mouseDown}\n        onMouseOut={mouseOut}\n        onMouseMove={mouseMove}\n      >\n        {ControlComponent}\n      </div>\n      {anchorPosition ? (\n        <Menu\n          anchorReference=\"anchorPosition\"\n          anchorPosition={{\n            left: anchorPosition.clientX,\n            top: anchorPosition.clientY,\n          }}\n          onMenuItemClick={handleMenuItemClick}\n          open={open}\n          onClose={handleClose}\n          menuItems={model.rubberBandMenuItems()}\n        />\n      ) : null}\n    </>\n  )\n}\n\nexport default observer(Rubberband)\n","import React, { useState } from 'react'\nimport { IconButton, Typography } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { SearchBox } from '@jbrowse/plugin-linear-genome-view'\nimport { observer } from 'mobx-react'\nimport { Menu } from '@jbrowse/core/ui'\n\n// icons\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\n\n// locals\nimport { LinearComparativeViewModel } from '../model'\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\n\ntype LCV = LinearComparativeViewModel\n\nconst useStyles = makeStyles()(() => ({\n  headerBar: {\n    gridArea: '1/1/auto/span 2',\n    display: 'flex',\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  iconButton: {\n    margin: 5,\n  },\n  bp: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 10,\n  },\n  searchContainer: {\n    marginLeft: 5,\n  },\n  searchBox: {\n    display: 'flex',\n  },\n}))\n\nconst TrackSelector = observer(({ model }: { model: LCV }) => {\n  return (\n    <IconButton\n      onClick={model.activateTrackSelector}\n      title=\"Open track selector\"\n    >\n      <TrackSelectorIcon />\n    </IconButton>\n  )\n})\n\nconst Header = observer(function ({ model }: { model: LCV }) {\n  const { classes } = useStyles()\n  const [menuAnchorEl, setMenuAnchorEl] = useState<HTMLElement>()\n  const anyShowHeaders = model.views.some(view => !view.hideHeader)\n  return (\n    <div className={classes.headerBar}>\n      <TrackSelector model={model} />\n\n      <IconButton\n        onClick={event => setMenuAnchorEl(event.currentTarget)}\n        className={classes.iconButton}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      {!anyShowHeaders\n        ? model.views.map(view => (\n            <div key={view.id} className={classes.searchBox}>\n              <div className={classes.searchContainer}>\n                <SearchBox model={view} showHelp={false} />\n              </div>\n              <div className={classes.bp}>\n                <Typography\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                  className={classes.bp}\n                >\n                  {Math.round(view.coarseTotalBp).toLocaleString('en-US')} bp\n                </Typography>\n              </div>\n            </div>\n          ))\n        : null}\n\n      <div className={classes.spacer} />\n\n      {menuAnchorEl ? (\n        <Menu\n          anchorEl={menuAnchorEl}\n          open\n          onMenuItemClick={(_event, callback) => {\n            callback()\n            setMenuAnchorEl(undefined)\n          }}\n          menuItems={model.headerMenuItems()}\n          onClose={() => setMenuAnchorEl(undefined)}\n        />\n      ) : null}\n    </div>\n  )\n})\n\nexport default Header\n","import React from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { getConf, AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { getEnv } from '@jbrowse/core/util'\nimport { ResizeHandle } from '@jbrowse/core/ui'\n\n// locals\nimport { LinearComparativeViewModel } from '../model'\nimport Rubberband from './Rubberband'\nimport Header from './Header'\n\nconst useStyles = makeStyles()(theme => ({\n  container: {\n    display: 'grid',\n  },\n  overlay: {\n    zIndex: 100,\n    gridArea: '1/1',\n  },\n  content: {\n    gridArea: '1/1',\n    position: 'relative',\n  },\n  grid: {\n    display: 'grid',\n  },\n  relative: {\n    position: 'relative',\n  },\n\n  // this helps keep the vertical guide inside the parent view container,\n  // similar style exists in the single LGV's trackscontainer\n  rubberbandContainer: {\n    position: 'relative',\n    overflow: 'hidden',\n  },\n\n  rubberbandDiv: {\n    width: '100%',\n    background: theme.palette.action.disabledBackground,\n    height: 15,\n    '&:hover': {\n      background: theme.palette.action.selected,\n    },\n  },\n}))\n\ntype LCV = LinearComparativeViewModel\n\nconst Overlays = observer(({ model }: { model: LCV }) => {\n  const { classes } = useStyles()\n  return (\n    <>\n      {model.tracks.map(track => {\n        const [display] = track.displays\n        const { RenderingComponent } = display\n        const trackId = getConf(track, 'trackId')\n        return RenderingComponent ? (\n          <div\n            className={classes.overlay}\n            key={trackId}\n            style={{\n              height: model.middleComparativeHeight,\n              overflow: 'hidden',\n            }}\n          >\n            <RenderingComponent model={display} />\n          </div>\n        ) : null\n      })}\n    </>\n  )\n})\n\n// The comparative is in the middle of the views\nconst MiddleComparativeView = observer(({ model }: { model: LCV }) => {\n  const { classes } = useStyles()\n  const { views } = model\n  const { pluginManager } = getEnv(model)\n  const { ReactComponent } = pluginManager.getViewType(views[0].type)\n\n  return (\n    <div className={classes.rubberbandContainer}>\n      <Header model={model} />\n      <Rubberband\n        model={model}\n        ControlComponent={<div className={classes.rubberbandDiv} />}\n      />\n      <div className={classes.container}>\n        <ReactComponent model={views[0]} />\n        <div className={classes.grid}>\n          <Overlays model={model} />\n        </div>\n        <ResizeHandle\n          onDrag={n =>\n            model.setMiddleComparativeHeight(model.middleComparativeHeight + n)\n          }\n          style={{\n            height: 4,\n            background: '#ccc',\n          }}\n        />\n        <ReactComponent model={views[1]} />\n      </div>\n    </div>\n  )\n})\nconst OverlayComparativeView = observer(({ model }: { model: LCV }) => {\n  const { classes } = useStyles()\n  const { views } = model\n  const { pluginManager } = getEnv(model)\n  return (\n    <div className={classes.rubberbandContainer}>\n      <Header model={model} />\n      <Rubberband\n        model={model}\n        ControlComponent={<div className={classes.rubberbandDiv} />}\n      />\n\n      <div className={classes.container}>\n        <div className={classes.content}>\n          <div className={classes.relative}>\n            {views.map(view => {\n              const { ReactComponent } = pluginManager.getViewType(view.type)\n              return <ReactComponent key={view.id} model={view} />\n            })}\n          </div>\n          <Overlays model={model} />\n        </div>\n      </div>\n    </div>\n  )\n})\n\nexport default observer(function (props: {\n  ExtraButtons?: React.ReactNode\n  model: LCV\n}) {\n  const { model } = props\n\n  const middle = model.tracks.some(({ displays }) =>\n    displays.some((d: AnyConfigurationModel) => getConf(d, 'middle')),\n  )\n  return middle ? (\n    <MiddleComparativeView {...props} />\n  ) : (\n    <OverlayComparativeView {...props} />\n  )\n})\n","import React, { useState, useEffect } from 'react'\nimport { SnapshotIn } from 'mobx-state-tree'\nimport path from 'path'\nimport {\n  FormControlLabel,\n  Grid,\n  Paper,\n  Radio,\n  RadioGroup,\n  Typography,\n} from '@mui/material'\nimport { ErrorMessage, FileSelector } from '@jbrowse/core/ui'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport { observer } from 'mobx-react'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\nfunction getName(\n  sessionTrackData?: { uri: string } | { localPath: string } | { name: string },\n) {\n  return sessionTrackData\n    ? // @ts-ignore\n      sessionTrackData.uri ||\n        // @ts-ignore\n        sessionTrackData.localPath ||\n        // @ts-ignore\n        sessionTrackData.name\n    : undefined\n}\n\nfunction stripGz(fileName: string) {\n  return fileName.endsWith('.gz')\n    ? fileName.slice(0, fileName.length - 3)\n    : fileName\n}\n\nfunction getAdapter({\n  radioOption,\n  assembly1,\n  assembly2,\n  fileLocation,\n  bed1Location,\n  bed2Location,\n}: {\n  radioOption: string\n  assembly1: string\n  assembly2: string\n  fileLocation?: FileLocation\n  bed1Location?: FileLocation\n  bed2Location?: FileLocation\n}) {\n  if (radioOption === '.paf') {\n    return {\n      type: 'PAFAdapter',\n      pafLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.out') {\n    return {\n      type: 'MashMapAdapter',\n      outLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.delta') {\n    return {\n      type: 'DeltaAdapter',\n      deltaLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.chain') {\n    return {\n      type: 'ChainAdapter',\n      chainLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.anchors') {\n    return {\n      type: 'MCScanAnchorsAdapter',\n      mcscanAnchorsLocation: fileLocation,\n      bed1Location,\n      bed2Location,\n      assemblyNames: [assembly1, assembly2],\n    }\n  } else if (radioOption === '.anchors.simple') {\n    return {\n      type: 'MCScanSimpleAnchorsAdapter',\n      mcscanSimpleAnchorsLocation: fileLocation,\n      bed1Location,\n      bed2Location,\n      assemblyNames: [assembly1, assembly2],\n    }\n  } else {\n    throw new Error('Unknown type')\n  }\n}\n\ntype Conf = SnapshotIn<AnyConfigurationModel>\n\nconst OpenTrack = observer(\n  ({\n    sessionTrackData,\n    assembly1,\n    assembly2,\n    setSessionTrackData,\n  }: {\n    sessionTrackData: Conf\n    assembly1: string\n    assembly2: string\n    setSessionTrackData: (arg: Conf) => void\n  }) => {\n    const [bed2Location, setBed2Location] = useState<FileLocation>()\n    const [bed1Location, setBed1Location] = useState<FileLocation>()\n    const [fileLocation, setFileLocation] = useState<FileLocation>()\n    const [value, setValue] = useState('')\n    const [error, setError] = useState<unknown>()\n    const fileName = getName(fileLocation)\n\n    const radioOption =\n      value || (fileName ? path.extname(stripGz(fileName)) : '')\n\n    useEffect(() => {\n      try {\n        if (fileLocation) {\n          const fn = fileName ? path.basename(fileName) : 'MyTrack'\n          const trackId = `${fn}-${Date.now()}`\n          setError(undefined)\n\n          setSessionTrackData({\n            trackId,\n            name: fn,\n            assemblyNames: [assembly2, assembly1],\n            type: 'SyntenyTrack',\n            adapter: getAdapter({\n              radioOption,\n              assembly1,\n              assembly2,\n              fileLocation,\n              bed1Location,\n              bed2Location,\n            }),\n          })\n        }\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    }, [\n      fileName,\n      assembly1,\n      assembly2,\n      bed1Location,\n      bed2Location,\n      fileLocation,\n      radioOption,\n      setSessionTrackData,\n    ])\n    return (\n      <Paper style={{ padding: 12 }}>\n        {error ? <ErrorMessage error={error} /> : null}\n        <Typography style={{ textAlign: 'center' }}>\n          Add a .paf, .out (MashMap), .delta (Mummer), .chain, .anchors or\n          .anchors.simple (MCScan) file to view in the dotplot. These file types\n          can also be gzipped. The first assembly should be the query sequence\n          (e.g. left column of the PAF) and the second assembly should be the\n          target sequence (e.g. right column of the PAF)\n        </Typography>\n        <RadioGroup\n          value={radioOption}\n          onChange={event => setValue(event.target.value)}\n        >\n          <Grid container justifyContent=\"center\">\n            <Grid item>\n              <FormControlLabel value=\".paf\" control={<Radio />} label=\".paf\" />\n            </Grid>\n            <Grid item>\n              <FormControlLabel value=\".out\" control={<Radio />} label=\".out\" />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".delta\"\n                control={<Radio />}\n                label=\".delta\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".chain\"\n                control={<Radio />}\n                label=\".chain\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".anchors\"\n                control={<Radio />}\n                label=\".anchors\"\n              />\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                value=\".anchors.simple\"\n                control={<Radio />}\n                label=\".anchors.simple\"\n              />\n            </Grid>\n          </Grid>\n        </RadioGroup>\n        <Grid container justifyContent=\"center\">\n          <Grid item>\n            {value === '.anchors' || value === '.anchors.simple' ? (\n              <div>\n                <div style={{ margin: 20 }}>\n                  Open the {value} and .bed files for both genome assemblies\n                  from the MCScan (Python version) pipeline{' '}\n                  <a href=\"https://github.com/tanghaibao/jcvi/wiki/MCscan-(Python-version)\">\n                    (more info)\n                  </a>\n                </div>\n                <div style={{ display: 'flex' }}>\n                  <div>\n                    <FileSelector\n                      name=\".anchors file\"\n                      description=\"\"\n                      location={fileLocation}\n                      setLocation={loc => setFileLocation(loc)}\n                    />\n                  </div>\n                  <div>\n                    <FileSelector\n                      name=\"genome 1 .bed (left column of anchors file)\"\n                      description=\"\"\n                      location={bed1Location}\n                      setLocation={loc => setBed1Location(loc)}\n                    />\n                  </div>\n                  <div>\n                    <FileSelector\n                      name=\"genome 2 .bed (right column of anchors file)\"\n                      description=\"\"\n                      location={bed2Location}\n                      setLocation={loc => setBed2Location(loc)}\n                    />\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <FileSelector\n                name={value ? value + ' location' : ''}\n                description=\"\"\n                location={fileLocation}\n                setLocation={loc => setFileLocation(loc)}\n              />\n            )}\n          </Grid>\n        </Grid>\n      </Paper>\n    )\n  },\n)\n\nexport default OpenTrack\n","import React, { useState, useEffect } from 'react'\nimport { Select, MenuItem, Paper, Typography } from '@mui/material'\nimport { getSession } from '@jbrowse/core/util'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport { ErrorMessage } from '@jbrowse/core/ui'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { observer } from 'mobx-react'\n\n// locals\nimport { LinearSyntenyViewModel } from '../model'\n\nfunction f(track: AnyConfigurationModel, assembly1: string, assembly2: string) {\n  const assemblyNames = readConfObject(track, 'assemblyNames')\n  return (\n    assemblyNames.includes(assembly1) &&\n    assemblyNames.includes(assembly2) &&\n    track.type.includes('Synteny')\n  )\n}\n\nconst Selector = observer(\n  ({\n    model,\n    assembly1,\n    assembly2,\n    setShowTrackId,\n  }: {\n    model: LinearSyntenyViewModel\n    assembly1: string\n    assembly2: string\n    setShowTrackId: (arg: string) => void\n  }) => {\n    const session = getSession(model)\n    const { tracks = [], sessionTracks = [] } = session\n    const allTracks = [...tracks, ...sessionTracks] as AnyConfigurationModel[]\n    const filteredTracks = allTracks.filter(t => f(t, assembly2, assembly1))\n    const resetTrack = filteredTracks[0]?.trackId || ''\n    const [value, setValue] = useState(resetTrack)\n    useEffect(() => {\n      // if assembly1/assembly2 changes, then we will want to use this effect to\n      // change the state of the useState because it otherwise gets locked to a\n      // stale value\n      setValue(resetTrack)\n    }, [resetTrack])\n\n    useEffect(() => {\n      // sets track data in a useEffect because the initial load is needed as well\n      // as onChange's to the select box\n      setShowTrackId(value)\n    }, [value, setShowTrackId])\n    return (\n      <Paper style={{ padding: 12 }}>\n        <Typography paragraph>\n          Select a track from the select box below, the track will be shown when\n          you hit \"Launch\".\n        </Typography>\n\n        {filteredTracks.length ? (\n          <Select\n            value={value}\n            onChange={event => setValue(event.target.value)}\n          >\n            {filteredTracks.map(track => (\n              <MenuItem key={track.trackId} value={track.trackId}>\n                {getTrackName(track, session)}\n              </MenuItem>\n            ))}\n          </Select>\n        ) : (\n          <ErrorMessage\n            error={`No synteny tracks found for ${assembly1},${assembly2}`}\n          />\n        )}\n      </Paper>\n    )\n  },\n)\n\nexport default Selector\n","import React, { useState, useEffect } from 'react'\nimport {\n  Button,\n  Container,\n  FormControl,\n  FormLabel,\n  FormControlLabel,\n  Grid,\n  Paper,\n  Radio,\n  RadioGroup,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { SnapshotIn } from 'mobx-state-tree'\nimport { getSession, isSessionWithAddTracks } from '@jbrowse/core/util'\nimport { ErrorMessage, AssemblySelector } from '@jbrowse/core/ui'\n\n// locals\nimport { LinearSyntenyViewModel } from '../model'\nimport ImportCustomTrack from './ImportCustomTrack'\nimport ImportSyntenyTrackSelector from './ImportSyntenyTrackSelector'\n\nconst useStyles = makeStyles()(theme => ({\n  importFormContainer: {\n    padding: theme.spacing(4),\n    margin: '0 auto',\n  },\n  assemblySelector: {\n    width: '75%',\n    margin: '0 auto',\n  },\n}))\n\ntype Conf = SnapshotIn<AnyConfigurationModel>\n\nfunction TrackSelector({\n  setSessionTrackData,\n  setShowTrackId,\n  sessionTrackData,\n  assembly1,\n  assembly2,\n  model,\n}: {\n  sessionTrackData: Conf\n  setSessionTrackData: (arg: Conf) => void\n  setShowTrackId: (arg?: string) => void\n  model: LinearSyntenyViewModel\n  assembly1: string\n  assembly2: string\n}) {\n  const [choice, setChoice] = useState('none')\n\n  useEffect(() => {\n    if (choice === 'none') {\n      setSessionTrackData(undefined)\n      setShowTrackId(undefined)\n    }\n  }, [choice, setSessionTrackData, setShowTrackId])\n  return (\n    <>\n      <FormControl>\n        <FormLabel id=\"group-label\">\n          (Optional) Select or add a synteny track\n        </FormLabel>\n        <RadioGroup\n          row\n          value={choice}\n          onChange={event => setChoice(event.target.value)}\n          aria-labelledby=\"group-label\"\n        >\n          <FormControlLabel value=\"none\" control={<Radio />} label=\"None\" />\n          <FormControlLabel\n            value=\"tracklist\"\n            control={<Radio />}\n            label=\"Existing track\"\n          />\n          <FormControlLabel\n            value=\"custom\"\n            control={<Radio />}\n            label=\"New track\"\n          />\n        </RadioGroup>\n      </FormControl>\n      {choice === 'custom' ? (\n        <ImportCustomTrack\n          setSessionTrackData={setSessionTrackData}\n          sessionTrackData={sessionTrackData}\n          assembly2={assembly2}\n          assembly1={assembly1}\n        />\n      ) : null}\n      {choice === 'tracklist' ? (\n        <ImportSyntenyTrackSelector\n          model={model}\n          assembly1={assembly1}\n          assembly2={assembly2}\n          setShowTrackId={setShowTrackId}\n        />\n      ) : null}\n    </>\n  )\n}\n\nconst LinearSyntenyImportForm = observer(\n  ({ model }: { model: LinearSyntenyViewModel }) => {\n    const { classes } = useStyles()\n    const session = getSession(model)\n    const { assemblyNames } = session\n    const [assembly2, setAssembly2] = useState(assemblyNames[0] || '')\n    const [assembly1, setAssembly1] = useState(assemblyNames[0] || '')\n    const [error, setError] = useState<unknown>()\n    const [sessionTrackData, setSessionTrackData] = useState<Conf>()\n    const [showTrackId, setShowTrackId] = useState<string>()\n\n    async function onOpenClick() {\n      try {\n        if (!isSessionWithAddTracks(session)) {\n          return\n        }\n        setError(undefined)\n\n        const { assemblyManager } = session\n        const assemblies = [assembly1, assembly2]\n        model.setViews(\n          await Promise.all(\n            assemblies.map(async sel => {\n              const asm = await assemblyManager.waitForAssembly(sel)\n              if (!asm) {\n                throw new Error(`Assembly ${sel} failed to load`)\n              }\n              return {\n                type: 'LinearGenomeView' as const,\n                bpPerPx: 1,\n                offsetPx: 0,\n                hideHeader: true,\n                displayedRegions: asm.regions,\n              }\n            }),\n          ),\n        )\n        model.views.forEach(view => view.setWidth(model.width))\n        if (sessionTrackData) {\n          session.addTrackConf(sessionTrackData)\n          model.toggleTrack(sessionTrackData.trackId)\n        } else if (showTrackId) {\n          model.showTrack(showTrackId)\n        }\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    }\n\n    // this is a combination of any displayed error message we have\n    const displayError = error\n    return (\n      <Container className={classes.importFormContainer}>\n        {displayError ? <ErrorMessage error={displayError} /> : null}\n        <Grid\n          container\n          spacing={1}\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          className={classes.assemblySelector}\n        >\n          <Grid item>\n            <Paper style={{ padding: 12 }}>\n              <p style={{ textAlign: 'center' }}>\n                Select assemblies for linear synteny view\n              </p>\n              <Grid\n                container\n                spacing={1}\n                justifyContent=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <AssemblySelector\n                    selected={assembly1}\n                    onChange={val => setAssembly1(val)}\n                    session={session}\n                  />\n                </Grid>\n                <Grid item>\n                  <AssemblySelector\n                    selected={assembly2}\n                    onChange={val => setAssembly2(val)}\n                    session={session}\n                  />\n                </Grid>\n                <Grid item>\n                  <FormControl>\n                    <Button\n                      onClick={onOpenClick}\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      Launch\n                    </Button>\n                  </FormControl>\n                </Grid>\n              </Grid>\n            </Paper>\n            <TrackSelector\n              setShowTrackId={setShowTrackId}\n              assembly2={assembly2}\n              assembly1={assembly1}\n              setSessionTrackData={setSessionTrackData}\n              sessionTrackData={sessionTrackData}\n              model={model}\n            />\n          </Grid>\n        </Grid>\n      </Container>\n    )\n  },\n)\n\nexport default LinearSyntenyImportForm\n","import React from 'react'\nimport { observer } from 'mobx-react'\n\n// locals\nimport LinearComparativeViewComponent from '../../LinearComparativeView/components/LinearComparativeView'\nimport { LinearSyntenyViewModel } from '../model'\nimport ImportForm from './ImportForm'\n\ntype LSV = LinearSyntenyViewModel\n\nconst LinearSyntenyView = observer(({ model }: { model: LSV }) => {\n  return !model.initialized ? (\n    <ImportForm model={model} />\n  ) : (\n    <LinearComparativeViewComponent model={model} />\n  )\n})\n\nexport default LinearSyntenyView\n"],"names":["useStyles","makeStyles","theme","_theme$palette","palette","tertiary","primary","rubberband","height","background","alpha","main","position","zIndex","textAlign","overflow","rubberbandControl","cursor","width","minHeight","rubberbandText","color","contrastText","popover","mouseEvents","paper","paddingLeft","spacing","paddingRight","guide","pointerEvents","sm","fontSize","VerticalGuide","observer","_ref","model","coordX","classes","_jsx","Tooltip","open","placement","title","views","map","view","pxToBp","elt","Typography","className","children","stringify","JSON","arrow","style","left","_ref2","_ref2$ControlComponen","ControlComponent","_useState","useState","_useState2","_slicedToArray","startX","setStartX","_useState3","_useState4","currentX","setCurrentX","_useState5","_useState6","anchorPosition","setAnchorPosition","_useState7","_useState8","guideX","setGuideX","controlsRef","useRef","rubberbandRef","mouseDragging","undefined","mouseDown","event","preventDefault","stopPropagation","relativeX","clientX","target","getBoundingClientRect","mouseMove","mouseOut","forEach","setOffsets","handleClose","useEffect","globalMouseMove","current","globalMouseUp","clientY","offsetX","args","leftPx","rightPx","_ref3","leftOffset","rightOffset","computeOffsets","window","addEventListener","removeEventListener","Math","abs","Boolean","_jsxs","_Fragment","role","ref","onMouseDown","onMouseOut","onMouseMove","right","leftBpOffset","rightBpOffset","numOfBpSelected","ceil","bpPerPx","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","keepMounted","disableRestoreFocus","l","variant","n","i","concat","toLocaleString","Menu","anchorReference","top","onMenuItemClick","_","callback","onClose","menuItems","rubberBandMenuItems","headerBar","gridArea","display","spacer","flexGrow","iconButton","margin","bp","alignItems","marginLeft","searchContainer","searchBox","TrackSelector","IconButton","onClick","activateTrackSelector","TrackSelectorIcon","menuAnchorEl","setMenuAnchorEl","anyShowHeaders","some","hideHeader","currentTarget","MoreVertIcon","SearchBox","showHelp","round","coarseTotalBp","id","_event","headerMenuItems","container","overlay","content","grid","relative","rubberbandContainer","rubberbandDiv","action","disabledBackground","selected","Overlays","tracks","track","displays","RenderingComponent","trackId","getConf","middleComparativeHeight","MiddleComparativeView","ReactComponent","getEnv","pluginManager","getViewType","type","Header","Rubberband","ResizeHandle","onDrag","setMiddleComparativeHeight","OverlayComparativeView","props","_ref4","d","_objectSpread","getAdapter","radioOption","assembly1","assembly2","fileLocation","bed1Location","bed2Location","pafLocation","queryAssembly","targetAssembly","outLocation","deltaLocation","chainLocation","mcscanAnchorsLocation","assemblyNames","mcscanSimpleAnchorsLocation","Error","sessionTrackData","setSessionTrackData","setBed2Location","setBed1Location","setFileLocation","value","setValue","_useState9","_useState10","error","setError","fileName","uri","localPath","name","getName","path","endsWith","slice","length","stripGz","fn","Date","now","adapter","e","console","Paper","padding","ErrorMessage","RadioGroup","onChange","Grid","justifyContent","item","FormControlLabel","control","Radio","label","href","FileSelector","description","location","setLocation","loc","_filteredTracks$","setShowTrackId","session","getSession","_session$tracks","_session$sessionTrack","sessionTracks","filteredTracks","_toConsumableArray","filter","t","readConfObject","includes","f","resetTrack","paragraph","Select","MenuItem","getTrackName","importFormContainer","assemblySelector","choice","setChoice","FormControl","FormLabel","row","ImportCustomTrack","ImportSyntenyTrackSelector","LinearSyntenyImportForm","setAssembly2","setAssembly1","_useState11","_useState12","showTrackId","_onOpenClick","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","assemblyManager","assemblies","wrap","_context2","prev","next","isSessionWithAddTracks","abrupt","t0","Promise","all","_callee","sel","asm","_context","waitForAssembly","sent","offsetPx","displayedRegions","regions","stop","_x","apply","arguments","t1","setViews","call","setWidth","addTrackConf","toggleTrack","showTrack","t2","displayError","Container","AssemblySelector","val","Button","initialized","LinearComparativeViewComponent","ImportForm"],"sourceRoot":""}