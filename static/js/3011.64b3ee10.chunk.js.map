{"version":3,"file":"static/js/3011.64b3ee10.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/material/Accordion/Accordion.js","../../../node_modules/@mui/material/Accordion/AccordionContext.js","../../../node_modules/@mui/material/Accordion/accordionClasses.js","../../../node_modules/@mui/material/Collapse/Collapse.js","../../../node_modules/@mui/material/Collapse/collapseClasses.js"],"sourcesContent":["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"defaultExpanded\", \"disabled\", \"disableGutters\", \"expanded\", \"onChange\", \"square\", \"slots\", \"slotProps\", \"TransitionComponent\", \"TransitionProps\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport AccordionContext from './AccordionContext';\nimport useControlled from '../utils/useControlled';\nimport useSlot from '../utils/useSlot';\nimport accordionClasses, { getAccordionUtilityClass } from './accordionClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    square,\n    expanded,\n    disabled,\n    disableGutters\n  } = ownerState;\n  const slots = {\n    root: ['root', !square && 'rounded', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    region: ['region']\n  };\n  return composeClasses(slots, getAccordionUtilityClass, classes);\n};\nconst AccordionRoot = styled(Paper, {\n  name: 'MuiAccordion',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${accordionClasses.region}`]: styles.region\n    }, styles.root, !ownerState.square && styles.rounded, !ownerState.disableGutters && styles.gutters];\n  }\n})(({\n  theme\n}) => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    position: 'relative',\n    transition: theme.transitions.create(['margin'], transition),\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    '&::before': {\n      position: 'absolute',\n      left: 0,\n      top: -1,\n      right: 0,\n      height: 1,\n      content: '\"\"',\n      opacity: 1,\n      backgroundColor: (theme.vars || theme).palette.divider,\n      transition: theme.transitions.create(['opacity', 'background-color'], transition)\n    },\n    '&:first-of-type': {\n      '&::before': {\n        display: 'none'\n      }\n    },\n    [`&.${accordionClasses.expanded}`]: {\n      '&::before': {\n        opacity: 0\n      },\n      '&:first-of-type': {\n        marginTop: 0\n      },\n      '&:last-of-type': {\n        marginBottom: 0\n      },\n      '& + &': {\n        '&::before': {\n          display: 'none'\n        }\n      }\n    },\n    [`&.${accordionClasses.disabled}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.disabledBackground\n    }\n  };\n}, ({\n  theme,\n  ownerState\n}) => _extends({}, !ownerState.square && {\n  borderRadius: 0,\n  '&:first-of-type': {\n    borderTopLeftRadius: (theme.vars || theme).shape.borderRadius,\n    borderTopRightRadius: (theme.vars || theme).shape.borderRadius\n  },\n  '&:last-of-type': {\n    borderBottomLeftRadius: (theme.vars || theme).shape.borderRadius,\n    borderBottomRightRadius: (theme.vars || theme).shape.borderRadius,\n    // Fix a rendering issue on Edge\n    '@supports (-ms-ime-align: auto)': {\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0\n    }\n  }\n}, !ownerState.disableGutters && {\n  [`&.${accordionClasses.expanded}`]: {\n    margin: '16px 0'\n  }\n}));\nconst Accordion = /*#__PURE__*/React.forwardRef(function Accordion(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAccordion'\n  });\n  const {\n      children: childrenProp,\n      className,\n      defaultExpanded = false,\n      disabled = false,\n      disableGutters = false,\n      expanded: expandedProp,\n      onChange,\n      square = false,\n      slots = {},\n      slotProps = {},\n      TransitionComponent: TransitionComponentProp,\n      TransitionProps: TransitionPropsProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [expanded, setExpandedState] = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'Accordion',\n    state: 'expanded'\n  });\n  const handleChange = React.useCallback(event => {\n    setExpandedState(!expanded);\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n  const [summary, ...children] = React.Children.toArray(childrenProp);\n  const contextValue = React.useMemo(() => ({\n    expanded,\n    disabled,\n    disableGutters,\n    toggle: handleChange\n  }), [expanded, disabled, disableGutters, handleChange]);\n  const ownerState = _extends({}, props, {\n    square,\n    disabled,\n    disableGutters,\n    expanded\n  });\n  const classes = useUtilityClasses(ownerState);\n  const backwardCompatibleSlots = _extends({\n    transition: TransitionComponentProp\n  }, slots);\n  const backwardCompatibleSlotProps = _extends({\n    transition: TransitionPropsProp\n  }, slotProps);\n  const [TransitionSlot, transitionProps] = useSlot('transition', {\n    elementType: Collapse,\n    externalForwardedProps: {\n      slots: backwardCompatibleSlots,\n      slotProps: backwardCompatibleSlotProps\n    },\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(AccordionRoot, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    square: square\n  }, other, {\n    children: [/*#__PURE__*/_jsx(AccordionContext.Provider, {\n      value: contextValue,\n      children: summary\n    }), /*#__PURE__*/_jsx(TransitionSlot, _extends({\n      in: expanded,\n      timeout: \"auto\"\n    }, transitionProps, {\n      children: /*#__PURE__*/_jsx(\"div\", {\n        \"aria-labelledby\": summary.props.id,\n        id: summary.props['aria-controls'],\n        role: \"region\",\n        className: classes.region,\n        children: children\n      })\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Accordion.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, props => {\n    const summary = React.Children.toArray(props.children)[0];\n    if (isFragment(summary)) {\n      return new Error(\"MUI: The Accordion doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n    if (! /*#__PURE__*/React.isValidElement(summary)) {\n      return new Error('MUI: Expected the first child of Accordion to be a valid element.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, expands the accordion by default.\n   * @default false\n   */\n  defaultExpanded: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, it removes the margin between two expanded accordion items and the increase of height.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, expands the accordion, otherwise collapse it.\n   * Setting this prop enables control over the accordion.\n   */\n  expanded: PropTypes.bool,\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {boolean} expanded The `expanded` state of the accordion.\n   */\n  onChange: PropTypes.func,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    transition: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    transition: PropTypes.elementType\n  }),\n  /**\n   * If `true`, rounded corners are disabled.\n   * @default false\n   */\n  square: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @deprecated Use `slots.transition` instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.\n   * @deprecated Use `slotProps.transition` instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Accordion;","'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}\n */\nconst AccordionContext = /*#__PURE__*/React.createContext({});\nif (process.env.NODE_ENV !== 'production') {\n  AccordionContext.displayName = 'AccordionContext';\n}\nexport default AccordionContext;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAccordionUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordion', slot);\n}\nconst accordionClasses = generateUtilityClasses('MuiAccordion', ['root', 'rounded', 'expanded', 'disabled', 'gutters', 'region']);\nexport default accordionClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"addEndListener\", \"children\", \"className\", \"collapsedSize\", \"component\", \"easing\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"orientation\", \"style\", \"timeout\", \"TransitionComponent\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport useTimeout from '@mui/utils/useTimeout';\nimport elementTypeAcceptingRef from '@mui/utils/elementTypeAcceptingRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { duration } from '../styles/createTransitions';\nimport { getTransitionProps } from '../transitions/utils';\nimport useTheme from '../styles/useTheme';\nimport { useForkRef } from '../utils';\nimport { getCollapseUtilityClass } from './collapseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    orientation,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', `${orientation}`],\n    entered: ['entered'],\n    hidden: ['hidden'],\n    wrapper: ['wrapper', `${orientation}`],\n    wrapperInner: ['wrapperInner', `${orientation}`]\n  };\n  return composeClasses(slots, getCollapseUtilityClass, classes);\n};\nconst CollapseRoot = styled('div', {\n  name: 'MuiCollapse',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.orientation], ownerState.state === 'entered' && styles.entered, ownerState.state === 'exited' && !ownerState.in && ownerState.collapsedSize === '0px' && styles.hidden];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  height: 0,\n  overflow: 'hidden',\n  transition: theme.transitions.create('height')\n}, ownerState.orientation === 'horizontal' && {\n  height: 'auto',\n  width: 0,\n  transition: theme.transitions.create('width')\n}, ownerState.state === 'entered' && _extends({\n  height: 'auto',\n  overflow: 'visible'\n}, ownerState.orientation === 'horizontal' && {\n  width: 'auto'\n}), ownerState.state === 'exited' && !ownerState.in && ownerState.collapsedSize === '0px' && {\n  visibility: 'hidden'\n}));\nconst CollapseWrapper = styled('div', {\n  name: 'MuiCollapse',\n  slot: 'Wrapper',\n  overridesResolver: (props, styles) => styles.wrapper\n})(({\n  ownerState\n}) => _extends({\n  // Hack to get children with a negative margin to not falsify the height computation.\n  display: 'flex',\n  width: '100%'\n}, ownerState.orientation === 'horizontal' && {\n  width: 'auto',\n  height: '100%'\n}));\nconst CollapseWrapperInner = styled('div', {\n  name: 'MuiCollapse',\n  slot: 'WrapperInner',\n  overridesResolver: (props, styles) => styles.wrapperInner\n})(({\n  ownerState\n}) => _extends({\n  width: '100%'\n}, ownerState.orientation === 'horizontal' && {\n  width: 'auto',\n  height: '100%'\n}));\n\n/**\n * The Collapse transition is used by the\n * [Vertical Stepper](/material-ui/react-stepper/#vertical-stepper) StepContent component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\nconst Collapse = /*#__PURE__*/React.forwardRef(function Collapse(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCollapse'\n  });\n  const {\n      addEndListener,\n      children,\n      className,\n      collapsedSize: collapsedSizeProp = '0px',\n      component,\n      easing,\n      in: inProp,\n      onEnter,\n      onEntered,\n      onEntering,\n      onExit,\n      onExited,\n      onExiting,\n      orientation = 'vertical',\n      style,\n      timeout = duration.standard,\n      // eslint-disable-next-line react/prop-types\n      TransitionComponent = Transition\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    orientation,\n    collapsedSize: collapsedSizeProp\n  });\n  const classes = useUtilityClasses(ownerState);\n  const theme = useTheme();\n  const timer = useTimeout();\n  const wrapperRef = React.useRef(null);\n  const autoTransitionDuration = React.useRef();\n  const collapsedSize = typeof collapsedSizeProp === 'number' ? `${collapsedSizeProp}px` : collapsedSizeProp;\n  const isHorizontal = orientation === 'horizontal';\n  const size = isHorizontal ? 'width' : 'height';\n  const nodeRef = React.useRef(null);\n  const handleRef = useForkRef(ref, nodeRef);\n  const normalizedTransitionCallback = callback => maybeIsAppearing => {\n    if (callback) {\n      const node = nodeRef.current;\n\n      // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n      if (maybeIsAppearing === undefined) {\n        callback(node);\n      } else {\n        callback(node, maybeIsAppearing);\n      }\n    }\n  };\n  const getWrapperSize = () => wrapperRef.current ? wrapperRef.current[isHorizontal ? 'clientWidth' : 'clientHeight'] : 0;\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    if (wrapperRef.current && isHorizontal) {\n      // Set absolute position to get the size of collapsed content\n      wrapperRef.current.style.position = 'absolute';\n    }\n    node.style[size] = collapsedSize;\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntering = normalizedTransitionCallback((node, isAppearing) => {\n    const wrapperSize = getWrapperSize();\n    if (wrapperRef.current && isHorizontal) {\n      // After the size is read reset the position back to default\n      wrapperRef.current.style.position = '';\n    }\n    const {\n      duration: transitionDuration,\n      easing: transitionTimingFunction\n    } = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: 'enter'\n    });\n    if (timeout === 'auto') {\n      const duration2 = theme.transitions.getAutoHeightDuration(wrapperSize);\n      node.style.transitionDuration = `${duration2}ms`;\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : `${transitionDuration}ms`;\n    }\n    node.style[size] = `${wrapperSize}px`;\n    node.style.transitionTimingFunction = transitionTimingFunction;\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback((node, isAppearing) => {\n    node.style[size] = 'auto';\n    if (onEntered) {\n      onEntered(node, isAppearing);\n    }\n  });\n  const handleExit = normalizedTransitionCallback(node => {\n    node.style[size] = `${getWrapperSize()}px`;\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(onExited);\n  const handleExiting = normalizedTransitionCallback(node => {\n    const wrapperSize = getWrapperSize();\n    const {\n      duration: transitionDuration,\n      easing: transitionTimingFunction\n    } = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: 'exit'\n    });\n    if (timeout === 'auto') {\n      // TODO: rename getAutoHeightDuration to something more generic (width support)\n      // Actually it just calculates animation duration based on size\n      const duration2 = theme.transitions.getAutoHeightDuration(wrapperSize);\n      node.style.transitionDuration = `${duration2}ms`;\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : `${transitionDuration}ms`;\n    }\n    node.style[size] = collapsedSize;\n    node.style.transitionTimingFunction = transitionTimingFunction;\n    if (onExiting) {\n      onExiting(node);\n    }\n  });\n  const handleAddEndListener = next => {\n    if (timeout === 'auto') {\n      timer.start(autoTransitionDuration.current || 0, next);\n    }\n    if (addEndListener) {\n      // Old call signature before `react-transition-group` implemented `nodeRef`\n      addEndListener(nodeRef.current, next);\n    }\n  };\n  return /*#__PURE__*/_jsx(TransitionComponent, _extends({\n    in: inProp,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    nodeRef: nodeRef,\n    timeout: timeout === 'auto' ? null : timeout\n  }, other, {\n    children: (state, childProps) => /*#__PURE__*/_jsx(CollapseRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className, {\n        'entered': classes.entered,\n        'exited': !inProp && collapsedSize === '0px' && classes.hidden\n      }[state]),\n      style: _extends({\n        [isHorizontal ? 'minWidth' : 'minHeight']: collapsedSize\n      }, style),\n      ref: handleRef\n    }, childProps, {\n      // `ownerState` is set after `childProps` to override any existing `ownerState` property in `childProps`\n      // that might have been forwarded from the Transition component.\n      ownerState: _extends({}, ownerState, {\n        state\n      }),\n      children: /*#__PURE__*/_jsx(CollapseWrapper, {\n        ownerState: _extends({}, ownerState, {\n          state\n        }),\n        className: classes.wrapper,\n        ref: wrapperRef,\n        children: /*#__PURE__*/_jsx(CollapseWrapperInner, {\n          ownerState: _extends({}, ownerState, {\n            state\n          }),\n          className: classes.wrapperInner,\n          children: children\n        })\n      })\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Collapse.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Add a custom transition end trigger. Called with the transitioning DOM\n   * node and a done callback. Allows for more fine grained transition end\n   * logic. Note: Timeouts are still used as a fallback if provided.\n   */\n  addEndListener: PropTypes.func,\n  /**\n   * The content node to be collapsed.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The width (horizontal) or height (vertical) of the container when collapsed.\n   * @default '0px'\n   */\n  collapsedSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * The transition timing function.\n   * You may specify a single easing or a object containing enter and exit values.\n   */\n  easing: PropTypes.oneOfType([PropTypes.shape({\n    enter: PropTypes.string,\n    exit: PropTypes.string\n  }), PropTypes.string]),\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n  /**\n   * The transition orientation.\n   * @default 'vertical'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   * @default duration.standard\n   */\n  timeout: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nCollapse.muiSupportAuto = true;\nexport default Collapse;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCollapseUtilityClass(slot) {\n  return generateUtilityClass('MuiCollapse', slot);\n}\nconst collapseClasses = generateUtilityClasses('MuiCollapse', ['root', 'horizontal', 'vertical', 'entered', 'hidden', 'wrapper', 'wrapperInner']);\nexport default collapseClasses;"],"names":["_excluded","AccordionRoot","name","slot","overridesResolver","props","styles","ownerState","region","root","square","rounded","disableGutters","gutters","theme","transition","duration","transitions","shortest","position","create","overflowAnchor","left","top","right","height","content","opacity","backgroundColor","vars","palette","divider","display","expanded","marginTop","marginBottom","disabled","action","disabledBackground","borderRadius","borderTopLeftRadius","shape","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","margin","inProps","ref","children","childrenProp","className","defaultExpanded","expandedProp","onChange","slots","slotProps","TransitionComponent","TransitionComponentProp","TransitionProps","TransitionPropsProp","other","setExpandedState","controlled","default","state","handleChange","event","summary","toArray","contextValue","toggle","classes","useUtilityClasses","backwardCompatibleSlots","backwardCompatibleSlotProps","TransitionSlot","transitionProps","elementType","externalForwardedProps","A","Provider","value","in","timeout","id","role","getAccordionUtilityClass","CollapseRoot","orientation","entered","collapsedSize","hidden","overflow","width","visibility","CollapseWrapper","wrapper","CollapseWrapperInner","wrapperInner","Collapse","addEndListener","collapsedSizeProp","component","easing","inProp","onEnter","onEntered","onEntering","onExit","onExited","onExiting","style","standard","timer","wrapperRef","autoTransitionDuration","isHorizontal","size","nodeRef","handleRef","normalizedTransitionCallback","callback","maybeIsAppearing","node","current","undefined","getWrapperSize","handleEnter","isAppearing","handleEntering","wrapperSize","transitionDuration","transitionTimingFunction","mode","duration2","getAutoHeightDuration","handleEntered","handleExit","handleExited","handleExiting","next","start","childProps","as","muiSupportAuto","getCollapseUtilityClass"],"sourceRoot":""}