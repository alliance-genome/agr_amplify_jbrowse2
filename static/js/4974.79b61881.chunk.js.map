{"version":3,"file":"static/js/4974.79b61881.chunk.js","mappings":"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","sources":["../../../plugins/menus/src/HelpWidget/components/HelpWidget.tsx","../../../node_modules/@mui/material/Link/getTextDecoration.js","../../../node_modules/@mui/material/Link/Link.js","../../../node_modules/@mui/material/Link/linkClasses.js"],"sourcesContent":["import React from 'react'\nimport { observer } from 'mobx-react'\nimport { IAnyStateTreeNode } from 'mobx-state-tree'\nimport { getSession } from '@jbrowse/core/util'\nimport { makeStyles } from 'tss-react/mui'\nimport { Link, Typography } from '@mui/material'\n\nconst useStyles = makeStyles()(theme => ({\n  root: {\n    margin: theme.spacing(2),\n  },\n  subtitle: {\n    margin: theme.spacing(1),\n  },\n}))\n\nconst HelpWidget = observer(function Help({\n  model,\n}: {\n  model?: IAnyStateTreeNode\n}) {\n  const { classes } = useStyles()\n  const root = model ? getSession(model) : { version: '' }\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h4\" align=\"center\">\n        JBrowse 2\n      </Typography>\n      <Typography variant=\"h6\" align=\"center\" className={classes.subtitle}>\n        {root.version}\n      </Typography>\n\n      <Typography>\n        Here are some resources to get help. Please report the version number\n        above when asking questions. Thanks!\n      </Typography>\n      <ul>\n        <li>\n          <Link\n            href=\"https://github.com/GMOD/jbrowse-components/discussions\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Question & answer forum\n          </Link>\n        </li>\n        <li>\n          <Link\n            href=\"https://github.com/GMOD/jbrowse-components/issues/new/choose\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Report a bug\n          </Link>\n        </li>\n        <li>\n          <Link\n            href=\"https://jbrowse.org/jb2/docs/user_guide\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            User guide\n          </Link>\n        </li>\n        <li>\n          <Link\n            href=\"https://jbrowse.org/jb2/docs/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Documentation\n          </Link>\n        </li>\n      </ul>\n    </div>\n  )\n})\n\nexport default HelpWidget\n","import { getPath } from '@mui/system';\nimport { alpha } from '@mui/system/colorManipulator';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport elementTypeAcceptingRef from '@mui/utils/elementTypeAcceptingRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const {\n      className,\n      color = 'primary',\n      component = 'a',\n      onBlur,\n      onFocus,\n      TypographyClasses,\n      underline = 'always',\n      variant = 'inherit',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n  const handleBlur = event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;"],"names":["useStyles","makeStyles","theme","root","margin","spacing","subtitle","observer","model","classes","getSession","version","React","className","Typography","variant","align","Link","href","target","rel","colorTransformations","primary","textPrimary","secondary","textSecondary","error","ownerState","transformedColor","color","transformDeprecatedColors","channelColor","_excluded","LinkRoot","styled","name","slot","overridesResolver","props","styles","capitalize","underline","component","button","textDecoration","textDecorationColor","position","WebkitTapHighlightColor","backgroundColor","outline","border","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","focusVisible","inProps","ref","useThemeProps","onBlur","onFocus","TypographyClasses","sx","other","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","useIsFocusVisible","setFocusVisible","handlerRef","useForkRef","slots","composeClasses","useUtilityClasses","clsx","event","current","Object","keys","includes","Array","isArray","getLinkUtilityClass"],"sourceRoot":""}